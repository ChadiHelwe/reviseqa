{
    "background_story": "Lucas was a brilliant biomedical engineer with a passion for understanding the intricacies of blood flow. His fascination with hemodynamics led him to develop innovative medical devices that could accurately measure and regulate blood pressure in real-time. Lucas's groundbreaking work in fluid dynamics and vascular biology earned him recognition in the medical community. He was particularly interested in how hemodynamic forces affected blood vessel health and disease progression. Lucas's research led to the creation of a novel stent design that improved blood flow in coronary arteries, reducing the risk of heart attacks. His contributions to the field of hemodynamics have saved countless lives and continue to inspire new generations of engineers and medical professionals.",
    "predicates": [
        {
            "id": 0,
            "name": "understand_hemodynamics"
        },
        {
            "id": 1,
            "name": "develops_devices"
        },
        {
            "id": 2,
            "name": "analyzes_data"
        },
        {
            "id": 3,
            "name": "thinks_critically"
        },
        {
            "id": 4,
            "name": "conducts_research"
        },
        {
            "id": 5,
            "name": "is_engineer"
        },
        {
            "id": 6,
            "name": "teaches_others"
        },
        {
            "id": 7,
            "name": "has_curiosity"
        },
        {
            "id": 8,
            "name": "makes_discoveries"
        },
        {
            "id": 9,
            "name": "solves_problems"
        },
        {
            "id": 10,
            "name": "innovative_thinker"
        },
        {
            "id": 11,
            "name": "makes_breakthroughs"
        },
        {
            "id": 12,
            "name": "advances_knowledge"
        },
        {
            "id": 13,
            "name": "studies_biology"
        },
        {
            "id": 14,
            "name": "improve_healthcare"
        },
        {
            "id": 15,
            "name": "is_expert"
        },
        {
            "id": 16,
            "name": "shares_insight"
        },
        {
            "id": 17,
            "name": "medical_expert"
        },
        {
            "id": 18,
            "name": "designs_solutions"
        },
        {
            "id": 19,
            "name": "faces_challenges"
        },
        {
            "id": 20,
            "name": "finds_solutions"
        },
        {
            "id": 21,
            "name": "explores_ideas"
        },
        {
            "id": 22,
            "name": "tests_hypotheses"
        },
        {
            "id": 23,
            "name": "designs_stents"
        },
        {
            "id": 24,
            "name": "creates_prosthetics"
        },
        {
            "id": 25,
            "name": "examines_cells"
        },
        {
            "id": 26,
            "name": "investigates_disease"
        },
        {
            "id": 27,
            "name": "is_scholar"
        },
        {
            "id": 28,
            "name": "writes_papers"
        },
        {
            "id": 29,
            "name": "is_specialist"
        },
        {
            "id": 30,
            "name": "learns_fast"
        }
    ],
    "subject_name": "Lucas",
    "subject_category": "human",
    "keyword": "hemodynamics",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lucas",
            "text": "Lucas understands hemodynamics.",
            "fol": "p_0(Lucas)",
            "str_fol": "understand_hemodynamics(Lucas)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lucas",
            "text": "Lucas develops medical devices.",
            "fol": "p_1(Lucas)",
            "str_fol": "develops_devices(Lucas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lucas",
            "text": "Lucas does not analyze data.",
            "fol": "\u00acp_2(Lucas)",
            "str_fol": "\u00acanalyzes_data(Lucas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lucas",
            "text": "Lucas does not think critically.",
            "fol": "\u00acp_3(Lucas)",
            "str_fol": "\u00acthinks_critically(Lucas)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lucas",
            "text": "Lucas does not conduct research.",
            "fol": "\u00acp_4(Lucas)",
            "str_fol": "\u00acconducts_research(Lucas)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lucas",
            "text": "Lucas is an engineer.",
            "fol": "p_5(Lucas)",
            "str_fol": "is_engineer(Lucas)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lucas",
            "text": "Lucas does not teach others.",
            "fol": "\u00acp_6(Lucas)",
            "str_fol": "\u00acteaches_others(Lucas)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Lucas",
            "text": "Lucas has curiosity.",
            "fol": "p_7(Lucas)",
            "str_fol": "has_curiosity(Lucas)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lucas",
            "text": "Lucas does not make discoveries.",
            "fol": "\u00acp_8(Lucas)",
            "str_fol": "\u00acmakes_discoveries(Lucas)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Lucas",
            "text": "Lucas is an expert.",
            "fol": "p_15(Lucas)",
            "str_fol": "is_expert(Lucas)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Lucas",
            "text": "Lucas shares insight.",
            "fol": "p_16(Lucas)",
            "str_fol": "shares_insight(Lucas)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Lucas",
            "text": "Lucas does not advance knowledge.",
            "fol": "\u00acp_12(Lucas)",
            "str_fol": "\u00acadvances_knowledge(Lucas)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Lucas",
            "text": "Lucas studies human biology.",
            "fol": "p_13(Lucas)",
            "str_fol": "studies_biology(Lucas)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Lucas",
            "text": "Lucas improves healthcare.",
            "fol": "p_14(Lucas)",
            "str_fol": "improve_healthcare(Lucas)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Lucas",
            "text": "Lucas does not make breakthroughs.",
            "fol": "\u00acp_11(Lucas)",
            "str_fol": "\u00acmakes_breakthroughs(Lucas)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Lucas",
            "text": "Lucas does not solve problems.",
            "fol": "\u00acp_9(Lucas)",
            "str_fol": "\u00acsolves_problems(Lucas)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Lucas",
            "text": "Lucas is an innovative thinker.",
            "fol": "p_10(Lucas)",
            "str_fol": "innovative_thinker(Lucas)",
            "negation": false
        },
        {
            "id": 17,
            "subject": "Lucas",
            "text": "Lucas is an innovative thinker, understands hemodynamics and improves healthcare.",
            "fol": "innovative_thinker(Lucas) \u2227 (p_0(Lucas) \u2227 improve_healthcare(Lucas))",
            "str_fol": "innovative_thinker(Lucas) \u2227 (understand_hemodynamics(Lucas) \u2227 improve_healthcare(Lucas))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Lucas",
            "text": "Lucas has curiosity.",
            "fol": "p_7(Lucas)",
            "str_fol": "has_curiosity(Lucas)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lucas",
            "text": "Lucas does not make discoveries.",
            "fol": "\u00acp_8(Lucas)",
            "str_fol": "\u00acmakes_discoveries(Lucas)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lucas",
            "text": "Lucas does not teach others.",
            "fol": "\u00acp_6(Lucas)",
            "str_fol": "\u00acteaches_others(Lucas)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lucas",
            "text": "Lucas is an engineer.",
            "fol": "p_5(Lucas)",
            "str_fol": "is_engineer(Lucas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lucas",
            "text": "Lucas does not analyze data.",
            "fol": "\u00acp_2(Lucas)",
            "str_fol": "\u00acanalyzes_data(Lucas)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lucas",
            "text": "Lucas develops medical devices.",
            "fol": "p_1(Lucas)",
            "str_fol": "develops_devices(Lucas)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lucas",
            "text": "Lucas does not conduct research.",
            "fol": "\u00acp_4(Lucas)",
            "str_fol": "\u00acconducts_research(Lucas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lucas",
            "text": "Lucas does not think critically.",
            "fol": "\u00acp_3(Lucas)",
            "str_fol": "\u00acthinks_critically(Lucas)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lucas",
            "text": "Lucas understands hemodynamics.",
            "fol": "p_0(Lucas)",
            "str_fol": "understand_hemodynamics(Lucas)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Lucas has curiosity, then he either makes discoveries or is an expert (or both).",
            "fol": "p_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))",
            "str_fol": "has_curiosity(Lucas) \u2192 (makes_discoveries(Lucas) \u2228 is_expert(Lucas))"
        },
        {
            "id": 6,
            "text": "Lucas either shares insight or teaches others, but not both.",
            "fol": "p_16(Lucas) \u2295 p_6(Lucas)",
            "str_fol": "shares_insight(Lucas) \u2295 teaches_others(Lucas)"
        },
        {
            "id": 5,
            "text": "If Lucas is an expert, then he either shares insight or advances knowledge, but not both.",
            "fol": "p_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))",
            "str_fol": "is_expert(Lucas) \u2192 (shares_insight(Lucas) \u2295 advances_knowledge(Lucas))"
        },
        {
            "id": 4,
            "text": "If Lucas is an engineer, then he either analyzes data or studies biology, but not both.",
            "fol": "p_5(Lucas) \u2192 (p_2(Lucas) \u2295 p_13(Lucas))",
            "str_fol": "is_engineer(Lucas) \u2192 (analyzes_data(Lucas) \u2295 studies_biology(Lucas))"
        },
        {
            "id": 3,
            "text": "If someone develops medical devices and studies human biology, then they can improve healthcare.",
            "fol": "\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((develops_devices(x) \u2227 studies_biology(x)) \u2192 improve_healthcare(x))"
        },
        {
            "id": 2,
            "text": "If Lucas either conducts research or makes breakthroughs (but not both), then he advances knowledge.",
            "fol": "(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)",
            "str_fol": "(conducts_research(Lucas) \u2295 makes_breakthroughs(Lucas)) \u2192 advances_knowledge(Lucas)"
        },
        {
            "id": 1,
            "text": "Anyone who solves problems or thinks critically can make breakthroughs.",
            "fol": "\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((solves_problems(x) \u2228 thinks_critically(x)) \u2192 makes_breakthroughs(x))"
        },
        {
            "id": 0,
            "text": "Lucas either solves problems or is an innovative thinker.",
            "fol": "p_9(Lucas) \u2228 p_10(Lucas)",
            "str_fol": "solves_problems(Lucas) \u2228 innovative_thinker(Lucas)"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Lucas",
            "text": "Lucas has curiosity.",
            "fol": "p_7(Lucas)",
            "str_fol": "has_curiosity(Lucas)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lucas",
            "text": "Lucas does not make discoveries.",
            "fol": "\u00acp_8(Lucas)",
            "str_fol": "\u00acmakes_discoveries(Lucas)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lucas",
            "text": "Lucas does not teach others.",
            "fol": "\u00acp_6(Lucas)",
            "str_fol": "\u00acteaches_others(Lucas)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lucas",
            "text": "Lucas is an engineer.",
            "fol": "p_5(Lucas)",
            "str_fol": "is_engineer(Lucas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lucas",
            "text": "Lucas does not analyze data.",
            "fol": "\u00acp_2(Lucas)",
            "str_fol": "\u00acanalyzes_data(Lucas)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lucas",
            "text": "Lucas develops medical devices.",
            "fol": "p_1(Lucas)",
            "str_fol": "develops_devices(Lucas)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lucas",
            "text": "Lucas does not conduct research.",
            "fol": "\u00acp_4(Lucas)",
            "str_fol": "\u00acconducts_research(Lucas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lucas",
            "text": "Lucas does not think critically.",
            "fol": "\u00acp_3(Lucas)",
            "str_fol": "\u00acthinks_critically(Lucas)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lucas",
            "text": "Lucas understands hemodynamics.",
            "fol": "p_0(Lucas)",
            "str_fol": "understand_hemodynamics(Lucas)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Lucas has curiosity, then he either makes discoveries or is an expert (or both).",
            "fol": "p_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))",
            "str_fol": "has_curiosity(Lucas) \u2192 (makes_discoveries(Lucas) \u2228 is_expert(Lucas))"
        },
        {
            "id": 6,
            "text": "Lucas either shares insight or teaches others, but not both.",
            "fol": "p_16(Lucas) \u2295 p_6(Lucas)",
            "str_fol": "shares_insight(Lucas) \u2295 teaches_others(Lucas)"
        },
        {
            "id": 5,
            "text": "If Lucas is an expert, then he either shares insight or advances knowledge, but not both.",
            "fol": "p_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))",
            "str_fol": "is_expert(Lucas) \u2192 (shares_insight(Lucas) \u2295 advances_knowledge(Lucas))"
        },
        {
            "id": 4,
            "text": "If Lucas is an engineer, then he either analyzes data or studies biology, but not both.",
            "fol": "p_5(Lucas) \u2192 (p_2(Lucas) \u2295 p_13(Lucas))",
            "str_fol": "is_engineer(Lucas) \u2192 (analyzes_data(Lucas) \u2295 studies_biology(Lucas))"
        },
        {
            "id": 3,
            "text": "If someone develops medical devices and studies human biology, then they can improve healthcare.",
            "fol": "\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((develops_devices(x) \u2227 studies_biology(x)) \u2192 improve_healthcare(x))"
        },
        {
            "id": 2,
            "text": "If Lucas either conducts research or makes breakthroughs (but not both), then he advances knowledge.",
            "fol": "(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)",
            "str_fol": "(conducts_research(Lucas) \u2295 makes_breakthroughs(Lucas)) \u2192 advances_knowledge(Lucas)"
        },
        {
            "id": 1,
            "text": "Anyone who solves problems or thinks critically can make breakthroughs.",
            "fol": "\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((solves_problems(x) \u2228 thinks_critically(x)) \u2192 makes_breakthroughs(x))"
        },
        {
            "id": 0,
            "text": "Lucas either solves problems or is an innovative thinker.",
            "fol": "p_9(Lucas) \u2228 p_10(Lucas)",
            "str_fol": "solves_problems(Lucas) \u2228 innovative_thinker(Lucas)"
        }
    ],
    "context_fol": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\n\u00acp_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))\np_5(Lucas) \u2192 (p_2(Lucas) \u2295 p_13(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_9(Lucas) \u2228 p_10(Lucas)",
    "conclusion": {
        "id": 16,
        "text": "Lucas is an innovative thinker, understands hemodynamics and improves healthcare.",
        "fol": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
        "str_fol": "innovative_thinker(Lucas) \u2227 (understand_hemodynamics(Lucas) \u2227 improve_healthcare(Lucas))"
    },
    "initial_answer": "True",
    "initial_goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Lucas",
                    "text": "Lucas has curiosity.",
                    "fol": "p_7(Lucas)",
                    "str_fol": "has_curiosity(Lucas)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Lucas",
                    "text": "Lucas does not make discoveries.",
                    "fol": "\u00acp_8(Lucas)",
                    "str_fol": "\u00acmakes_discoveries(Lucas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Lucas has curiosity, then he either makes discoveries or is an expert (or both).",
                    "fol": "p_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))",
                    "str_fol": "has_curiosity(Lucas) \u2192 (makes_discoveries(Lucas) \u2228 is_expert(Lucas))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lucas",
                "text": "Lucas is an expert.",
                "fol": "p_15(Lucas)",
                "str_fol": "is_expert(Lucas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lucas",
                    "text": "Lucas does not teach others.",
                    "fol": "\u00acp_6(Lucas)",
                    "str_fol": "\u00acteaches_others(Lucas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Lucas either shares insight or teaches others, but not both.",
                    "fol": "p_16(Lucas) \u2295 p_6(Lucas)",
                    "str_fol": "shares_insight(Lucas) \u2295 teaches_others(Lucas)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lucas",
                "text": "Lucas shares insight.",
                "fol": "p_16(Lucas)",
                "str_fol": "shares_insight(Lucas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Lucas",
                    "text": "Lucas is an expert.",
                    "fol": "p_15(Lucas)",
                    "str_fol": "is_expert(Lucas)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Lucas",
                    "text": "Lucas shares insight.",
                    "fol": "p_16(Lucas)",
                    "str_fol": "shares_insight(Lucas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Lucas is an expert, then he either shares insight or advances knowledge, but not both.",
                    "fol": "p_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))",
                    "str_fol": "is_expert(Lucas) \u2192 (shares_insight(Lucas) \u2295 advances_knowledge(Lucas))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lucas",
                "text": "Lucas does not advance knowledge.",
                "fol": "\u00acp_12(Lucas)",
                "str_fol": "\u00acadvances_knowledge(Lucas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Lucas",
                    "text": "Lucas is an engineer.",
                    "fol": "p_5(Lucas)",
                    "str_fol": "is_engineer(Lucas)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Lucas",
                    "text": "Lucas does not analyze data.",
                    "fol": "\u00acp_2(Lucas)",
                    "str_fol": "\u00acanalyzes_data(Lucas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Lucas is an engineer, then he either analyzes data or studies biology, but not both.",
                    "fol": "p_5(Lucas) \u2192 (p_2(Lucas) \u2295 p_13(Lucas))",
                    "str_fol": "is_engineer(Lucas) \u2192 (analyzes_data(Lucas) \u2295 studies_biology(Lucas))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Lucas",
                "text": "Lucas studies human biology.",
                "fol": "p_13(Lucas)",
                "str_fol": "studies_biology(Lucas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Lucas",
                    "text": "Lucas develops medical devices.",
                    "fol": "p_1(Lucas)",
                    "str_fol": "develops_devices(Lucas)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Lucas",
                    "text": "Lucas studies human biology.",
                    "fol": "p_13(Lucas)",
                    "str_fol": "studies_biology(Lucas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone develops medical devices and studies human biology, then they can improve healthcare.",
                    "fol": "\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((develops_devices(x) \u2227 studies_biology(x)) \u2192 improve_healthcare(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Lucas",
                "text": "Lucas improves healthcare.",
                "fol": "p_14(Lucas)",
                "str_fol": "improve_healthcare(Lucas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Lucas",
                    "text": "Lucas does not conduct research.",
                    "fol": "\u00acp_4(Lucas)",
                    "str_fol": "\u00acconducts_research(Lucas)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Lucas",
                    "text": "Lucas does not advance knowledge.",
                    "fol": "\u00acp_12(Lucas)",
                    "str_fol": "\u00acadvances_knowledge(Lucas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Lucas either conducts research or makes breakthroughs (but not both), then he advances knowledge.",
                    "fol": "(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)",
                    "str_fol": "(conducts_research(Lucas) \u2295 makes_breakthroughs(Lucas)) \u2192 advances_knowledge(Lucas)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Lucas",
                "text": "Lucas does not make breakthroughs.",
                "fol": "\u00acp_11(Lucas)",
                "str_fol": "\u00acmakes_breakthroughs(Lucas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Lucas",
                    "text": "Lucas does not think critically.",
                    "fol": "\u00acp_3(Lucas)",
                    "str_fol": "\u00acthinks_critically(Lucas)",
                    "negation": true
                },
                {
                    "id": 14,
                    "subject": "Lucas",
                    "text": "Lucas does not make breakthroughs.",
                    "fol": "\u00acp_11(Lucas)",
                    "str_fol": "\u00acmakes_breakthroughs(Lucas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who solves problems or thinks critically can make breakthroughs.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((solves_problems(x) \u2228 thinks_critically(x)) \u2192 makes_breakthroughs(x))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Lucas",
                "text": "Lucas does not solve problems.",
                "fol": "\u00acp_9(Lucas)",
                "str_fol": "\u00acsolves_problems(Lucas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Lucas",
                    "text": "Lucas does not solve problems.",
                    "fol": "\u00acp_9(Lucas)",
                    "str_fol": "\u00acsolves_problems(Lucas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Lucas either solves problems or is an innovative thinker.",
                    "fol": "p_9(Lucas) \u2228 p_10(Lucas)",
                    "str_fol": "solves_problems(Lucas) \u2228 innovative_thinker(Lucas)"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Lucas",
                "text": "Lucas is an innovative thinker.",
                "fol": "p_10(Lucas)",
                "str_fol": "innovative_thinker(Lucas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 16,
                    "subject": "Lucas",
                    "text": "Lucas is an innovative thinker.",
                    "fol": "p_10(Lucas)",
                    "str_fol": "innovative_thinker(Lucas)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Lucas",
                    "text": "Lucas understands hemodynamics.",
                    "fol": "p_0(Lucas)",
                    "str_fol": "understand_hemodynamics(Lucas)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Lucas",
                    "text": "Lucas improves healthcare.",
                    "fol": "p_14(Lucas)",
                    "str_fol": "improve_healthcare(Lucas)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 16,
                "text": "Lucas is an innovative thinker, understands hemodynamics and improves healthcare.",
                "fol": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
                "str_fol": "innovative_thinker(Lucas) \u2227 (understand_hemodynamics(Lucas) \u2227 improve_healthcare(Lucas))"
            }
        }
    ],
    "proof_trace": "1 p_7(Lucas) -> p_8(Lucas) | p_15(Lucas).  [assumption].\n2 -(p_16(Lucas) <-> p_6(Lucas)).  [assumption].\n3 p_15(Lucas) -> -(p_16(Lucas) <-> p_12(Lucas)).  [assumption].\n4 p_5(Lucas) -> -(p_2(Lucas) <-> p_13(Lucas)).  [assumption].\n5 (all x (p_1(x) & p_13(x) -> p_14(x))).  [assumption].\n6 -(p_4(Lucas) <-> p_11(Lucas)) -> p_12(Lucas).  [assumption].\n7 (all x (p_9(x) | p_3(x) -> p_11(x))).  [assumption].\n8 p_10(Lucas) & p_0(Lucas) & p_14(Lucas).  [goal].\n9 -p_7(Lucas) | p_8(Lucas) | p_15(Lucas).  [clausify(1)].\n10 p_7(Lucas).  [assumption].\n11 p_8(Lucas) | p_15(Lucas).  [resolve(9,a,10,a)].\n12 -p_8(Lucas).  [assumption].\n13 p_16(Lucas) | p_6(Lucas).  [clausify(2)].\n14 -p_6(Lucas).  [assumption].\n16 -p_5(Lucas) | p_2(Lucas) | p_13(Lucas).  [clausify(4)].\n17 p_5(Lucas).  [assumption].\n19 p_2(Lucas) | p_13(Lucas).  [resolve(16,a,17,a)].\n20 -p_2(Lucas).  [assumption].\n22 -p_1(x) | -p_13(x) | p_14(x).  [clausify(5)].\n23 p_1(Lucas).  [assumption].\n24 p_4(Lucas) | -p_11(Lucas) | p_12(Lucas).  [clausify(6)].\n25 -p_4(Lucas).  [assumption].\n27 -p_10(Lucas) | -p_0(Lucas) | -p_14(Lucas).  [deny(8)].\n28 p_0(Lucas).  [assumption].\n29 p_15(Lucas).  [resolve(11,a,12,a)].\n31 -p_15(Lucas) | -p_16(Lucas) | -p_12(Lucas).  [clausify(3)].\n32 p_9(Lucas) | p_10(Lucas).  [assumption].\n33 -p_9(x) | p_11(x).  [clausify(7)].\n34 -p_16(Lucas) | -p_12(Lucas).  [resolve(29,a,31,a)].\n35 p_16(Lucas).  [resolve(13,b,14,a)].\n36 -p_13(Lucas) | p_14(Lucas).  [resolve(22,a,23,a)].\n37 p_13(Lucas).  [resolve(19,a,20,a)].\n38 p_10(Lucas) | p_11(Lucas).  [resolve(32,a,33,a)].\n39 -p_11(Lucas) | p_12(Lucas).  [resolve(24,a,25,a)].\n40 p_10(Lucas) | p_12(Lucas).  [resolve(38,b,39,a)].\n41 -p_10(Lucas) | -p_14(Lucas).  [resolve(27,b,28,a)].\n42 p_12(Lucas) | -p_14(Lucas).  [resolve(40,a,41,a)].\n43 -p_12(Lucas).  [resolve(34,a,35,a)].\n44 -p_14(Lucas).  [resolve(42,a,43,a)].\n45 p_14(Lucas).  [resolve(36,a,37,a)].\n46 $F.  [resolve(44,a,45,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))\np_5(Lucas) \u2192 (p_2(Lucas) \u2295 p_13(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_9(Lucas) \u2228 p_10(Lucas)\n\u00acp_13(Lucas) \u2192 \u00acp_14(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas)",
                    "-p_8(Lucas)",
                    "-p_6(Lucas)",
                    "p_5(Lucas)",
                    "p_2(Lucas)",
                    "p_1(Lucas)",
                    "-p_4(Lucas)",
                    "-p_3(Lucas)",
                    "p_0(Lucas)",
                    "p_7(Lucas) -> (p_8(Lucas) | p_15(Lucas))",
                    "-(p_16(Lucas) <-> p_6(Lucas))",
                    "p_15(Lucas) -> (-(p_16(Lucas) <-> p_12(Lucas)))",
                    "p_5(Lucas) -> (-(p_2(Lucas) <-> p_13(Lucas)))",
                    "all x ((p_1(x) & p_13(x)) -> p_14(x))",
                    "(-(p_4(Lucas) <-> p_11(Lucas))) -> p_12(Lucas)",
                    "all x ((p_9(x) | p_3(x)) -> p_11(x))",
                    "p_9(Lucas) | p_10(Lucas)",
                    "-p_13(Lucas) -> -p_14(Lucas)"
                ],
                "formulas(goals)": [
                    "- (p_10(Lucas) & (p_0(Lucas) & p_14(Lucas)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_2(Lucas)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_2(Lucas)"
                ],
                "added_rules": [
                    "\u00acp_13(Lucas) \u2192 \u00acp_14(Lucas)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))\np_5(Lucas) \u2192 (p_2(Lucas) \u2295 \u00acp_13(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_10(Lucas)\n\u00acp_13(Lucas) \u2192 \u00acp_14(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas)",
                    "-p_8(Lucas)",
                    "-p_6(Lucas)",
                    "p_5(Lucas)",
                    "p_2(Lucas)",
                    "p_1(Lucas)",
                    "-p_4(Lucas)",
                    "-p_3(Lucas)",
                    "p_0(Lucas)",
                    "p_7(Lucas) -> (p_8(Lucas) | p_15(Lucas))",
                    "-(p_16(Lucas) <-> p_6(Lucas))",
                    "p_15(Lucas) -> (-(p_16(Lucas) <-> p_12(Lucas)))",
                    "p_5(Lucas) -> (-(p_2(Lucas) <-> -p_13(Lucas)))",
                    "all x ((p_1(x) & p_13(x)) -> p_14(x))",
                    "(-(p_4(Lucas) <-> p_11(Lucas))) -> p_12(Lucas)",
                    "all x ((p_9(x) | p_3(x)) -> p_11(x))",
                    "p_10(Lucas)",
                    "-p_13(Lucas) -> -p_14(Lucas)"
                ],
                "formulas(goals)": [
                    "p_10(Lucas) & (p_0(Lucas) & p_14(Lucas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Lucas) \u2192 (p_2(Lucas) \u2295 p_13(Lucas))",
                    "p_9(Lucas) \u2228 p_10(Lucas)"
                ],
                "added_facts": [
                    "p_10(Lucas)"
                ],
                "added_rules": [
                    "p_5(Lucas) \u2192 (p_2(Lucas) \u2295 \u00acp_13(Lucas))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_10(Lucas)\n\u00acp_13(Lucas) \u2192 \u00acp_14(Lucas)\np_5(Lucas) \u2192 \u00acp_13(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas)",
                    "-p_8(Lucas)",
                    "-p_6(Lucas)",
                    "p_5(Lucas)",
                    "p_2(Lucas)",
                    "p_1(Lucas)",
                    "-p_4(Lucas)",
                    "-p_3(Lucas)",
                    "p_0(Lucas)",
                    "p_7(Lucas) -> (p_8(Lucas) | p_15(Lucas))",
                    "-(p_16(Lucas) <-> p_6(Lucas))",
                    "p_15(Lucas) -> (-(p_16(Lucas) <-> p_12(Lucas)))",
                    "all x ((p_1(x) & p_13(x)) -> p_14(x))",
                    "(-(p_4(Lucas) <-> p_11(Lucas))) -> p_12(Lucas)",
                    "all x ((p_9(x) | p_3(x)) -> p_11(x))",
                    "p_10(Lucas)",
                    "-p_13(Lucas) -> -p_14(Lucas)",
                    "p_5(Lucas) -> -p_13(Lucas)"
                ],
                "formulas(goals)": [
                    "- (p_10(Lucas) & (p_0(Lucas) & p_14(Lucas)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Lucas) \u2192 (p_2(Lucas) \u2295 \u00acp_13(Lucas))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Lucas) \u2192 \u00acp_13(Lucas)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2295 p_12(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_4(Lucas) \u2295 p_11(Lucas)) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_10(Lucas)\np_5(Lucas) \u2192 \u00acp_13(Lucas)\n\u00acp_13(Lucas) \u2192 p_14(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas)",
                    "-p_8(Lucas)",
                    "-p_6(Lucas)",
                    "p_5(Lucas)",
                    "p_2(Lucas)",
                    "p_1(Lucas)",
                    "-p_4(Lucas)",
                    "-p_3(Lucas)",
                    "p_0(Lucas)",
                    "p_7(Lucas) -> (p_8(Lucas) | p_15(Lucas))",
                    "-(p_16(Lucas) <-> p_6(Lucas))",
                    "p_15(Lucas) -> (-(p_16(Lucas) <-> p_12(Lucas)))",
                    "all x ((p_1(x) & p_13(x)) -> p_14(x))",
                    "(-(p_4(Lucas) <-> p_11(Lucas))) -> p_12(Lucas)",
                    "all x ((p_9(x) | p_3(x)) -> p_11(x))",
                    "p_10(Lucas)",
                    "p_5(Lucas) -> -p_13(Lucas)",
                    "-p_13(Lucas) -> p_14(Lucas)"
                ],
                "formulas(goals)": [
                    "p_10(Lucas) & (p_0(Lucas) & p_14(Lucas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_13(Lucas) \u2192 \u00acp_14(Lucas)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_13(Lucas) \u2192 p_14(Lucas)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) -> (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) -> ((p_16(Lucas) \u2228 p_12(Lucas)) \u2227 \u00ac(p_16(Lucas) \u2227 p_12(Lucas)))\n\u2200x ((p_1(x) \u2227 p_13(x)) -> p_14(x))\n((p_4(Lucas) \u2228 p_11(Lucas)) \u2227 \u00ac(p_4(Lucas) \u2227 p_11(Lucas))) -> p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) -> p_11(x))\np_10(Lucas)\np_5(Lucas) -> \u00acp_13(Lucas)\np_13(Lucas) -> \u00acp_5(Lucas)\n\u00acp_13(Lucas) -> p_14(Lucas)\np_14(Lucas)\n\u00acp_13(Lucas)\np_5(Lucas) -> p_14(Lucas)\np_13(Lucas) -> p_14(Lucas)\n(p_9(Lucas) \u2228 p_3(Lucas)) -> p_11(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas)",
                    "-p_8(Lucas)",
                    "-p_6(Lucas)",
                    "p_5(Lucas)",
                    "p_2(Lucas)",
                    "p_1(Lucas)",
                    "-p_4(Lucas)",
                    "-p_3(Lucas)",
                    "p_0(Lucas)",
                    "p_7(Lucas) -> (p_8(Lucas) | p_15(Lucas))",
                    "-(p_16(Lucas) <-> p_6(Lucas))",
                    "p_15(Lucas) -> ((p_16(Lucas) | p_12(Lucas)) & -(p_16(Lucas) & p_12(Lucas)))",
                    "all x ((p_1(x) & p_13(x)) -> p_14(x))",
                    "((p_4(Lucas) | p_11(Lucas)) & -(p_4(Lucas) & p_11(Lucas))) -> p_12(Lucas)",
                    "all x ((p_9(x) | p_3(x)) -> p_11(x))",
                    "p_10(Lucas)",
                    "p_5(Lucas) -> -p_13(Lucas)",
                    "p_13(Lucas) -> -p_5(Lucas)",
                    "-p_13(Lucas) -> p_14(Lucas)",
                    "p_14(Lucas)",
                    "-p_13(Lucas)",
                    "p_5(Lucas) -> p_14(Lucas)",
                    "p_13(Lucas) -> p_14(Lucas)",
                    "(p_9(Lucas) | p_3(Lucas)) -> p_11(Lucas)"
                ],
                "formulas(goals)": [
                    "p_10(Lucas) & (p_0(Lucas) & p_14(Lucas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Lucas)",
                    "\u00acp_13(Lucas)"
                ],
                "added_rules": [
                    "p_13(Lucas) \u2192 \u00acp_5(Lucas)",
                    "p_5(Lucas) \u2192 p_14(Lucas)",
                    "p_13(Lucas) \u2192 p_14(Lucas)",
                    "(p_9(Lucas) \u2228 p_3(Lucas)) \u2192 p_11(Lucas)",
                    "p_15(Lucas) \u2192 ((p_16(Lucas) \u2228 p_12(Lucas)) \u2227 \u00ac(p_16(Lucas) \u2227 p_12(Lucas)))",
                    "((p_4(Lucas) \u2228 p_11(Lucas)) \u2227 \u00ac(p_4(Lucas) \u2227 p_11(Lucas))) \u2192 p_12(Lucas)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_0(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2228 p_12(Lucas))\np_15(Lucas) \u2192 \u00ac(p_16(Lucas) \u2227 p_12(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n((p_4(Lucas) \u2228 p_11(Lucas)) \u2227 \u00ac(p_4(Lucas) \u2227 p_11(Lucas))) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_10(Lucas)\n\u00acp_5(Lucas) \u2228 \u00acp_13(Lucas)\np_13(Lucas) \u2192 \u00acp_5(Lucas)\n\u00acp_13(Lucas) \u2192 p_14(Lucas)\np_14(Lucas)\n\u00acp_13(Lucas)\np_5(Lucas) \u2192 p_14(Lucas)\n\u00acp_13(Lucas) \u2228 p_14(Lucas)\n(p_9(Lucas) \u2228 p_3(Lucas)) \u2192 p_11(Lucas)\np_14(Lucas) \u2228 \u00acp_14(Lucas)\np_14(Lucas) \u2228 p_11(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas).",
                    "-p_8(Lucas).",
                    "-p_6(Lucas).",
                    "p_5(Lucas).",
                    "p_2(Lucas).",
                    "p_1(Lucas).",
                    "-p_4(Lucas).",
                    "-p_3(Lucas).",
                    "p_0(Lucas).",
                    "-p_7(Lucas) | p_8(Lucas) | p_15(Lucas).",
                    "-(p_16(Lucas) <-> p_6(Lucas)).",
                    "-p_15(Lucas) | p_16(Lucas) | p_12(Lucas).",
                    "-p_15(Lucas) | -(p_16(Lucas) & p_12(Lucas)).",
                    "all x (-(p_1(x) & p_13(x)) | p_14(x)).",
                    "-((p_4(Lucas) | p_11(Lucas)) & (-p_4(Lucas) | -p_11(Lucas))) | p_12(Lucas).",
                    "all x (-(p_9(x) | p_3(x)) | p_11(x)).",
                    "p_10(Lucas).",
                    "-p_5(Lucas) | -p_13(Lucas).",
                    "-p_13(Lucas) | -p_5(Lucas).",
                    "p_13(Lucas) | p_14(Lucas).",
                    "p_14(Lucas).",
                    "-p_13(Lucas).",
                    "-p_5(Lucas) | p_14(Lucas).",
                    "-p_13(Lucas) | p_14(Lucas).",
                    "-(p_9(Lucas) | p_3(Lucas)) | p_11(Lucas).",
                    "p_14(Lucas) | -p_14(Lucas).",
                    "p_14(Lucas) | p_11(Lucas)."
                ],
                "formulas(goals)": [
                    "p_10(Lucas) & p_0(Lucas) & p_14(Lucas)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Lucas) \u2228 \u00acp_14(Lucas)",
                    "p_14(Lucas) \u2228 p_11(Lucas)"
                ],
                "added_rules": [
                    "\u00acp_5(Lucas) \u2228 \u00acp_13(Lucas)",
                    "\u00acp_13(Lucas) \u2228 p_14(Lucas)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lucas)\n\u00acp_8(Lucas)\n\u00acp_6(Lucas)\np_5(Lucas)\np_2(Lucas)\np_1(Lucas)\n\u00acp_4(Lucas)\n\u00acp_3(Lucas)\np_7(Lucas) \u2192 (p_8(Lucas) \u2228 p_15(Lucas))\np_16(Lucas) \u2295 p_6(Lucas)\np_15(Lucas) \u2192 (p_16(Lucas) \u2228 p_12(Lucas))\np_15(Lucas) \u2192 \u00ac(p_16(Lucas) \u2227 p_12(Lucas))\n\u2200x ((p_1(x) \u2227 p_13(x)) \u2192 p_14(x))\n((p_4(Lucas) \u2228 p_11(Lucas)) \u2227 \u00ac(p_4(Lucas) \u2227 p_11(Lucas))) \u2192 p_12(Lucas)\n\u2200x ((p_9(x) \u2228 p_3(x)) \u2192 p_11(x))\np_10(Lucas)\n\u00acp_5(Lucas) \u2228 \u00acp_13(Lucas)\np_13(Lucas) \u2192 \u00acp_5(Lucas)\n\u00acp_13(Lucas) \u2192 p_14(Lucas)\np_14(Lucas)\n\u00acp_13(Lucas)\np_5(Lucas) \u2192 p_14(Lucas)\n\u00acp_13(Lucas) \u2228 p_14(Lucas)\n(p_9(Lucas) \u2228 p_3(Lucas)) \u2192 p_11(Lucas)\np_14(Lucas) \u2228 \u00acp_14(Lucas)\np_14(Lucas) \u2228 p_11(Lucas)\np_14(Lucas) \u2192 \u00acp_0(Lucas)",
            "Initial Goal": "p_10(Lucas) \u2227 (p_0(Lucas) \u2227 p_14(Lucas))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lucas)",
                    "-p_8(Lucas)",
                    "-p_6(Lucas)",
                    "p_5(Lucas)",
                    "p_2(Lucas)",
                    "p_1(Lucas)",
                    "-p_4(Lucas)",
                    "-p_3(Lucas)",
                    "p_7(Lucas) -> (p_8(Lucas) | p_15(Lucas))",
                    "-(p_16(Lucas) <-> p_6(Lucas))",
                    "p_15(Lucas) -> (p_16(Lucas) | p_12(Lucas))",
                    "p_15(Lucas) -> -(p_16(Lucas) & p_12(Lucas))",
                    "all x ((p_1(x) & p_13(x)) -> p_14(x))",
                    "((p_4(Lucas) | p_11(Lucas)) & -(p_4(Lucas) & p_11(Lucas))) -> p_12(Lucas)",
                    "all x ((p_9(x) | p_3(x)) -> p_11(x))",
                    "p_10(Lucas)",
                    "-p_5(Lucas) | -p_13(Lucas)",
                    "p_13(Lucas) -> -p_5(Lucas)",
                    "-p_13(Lucas) -> p_14(Lucas)",
                    "p_14(Lucas)",
                    "-p_13(Lucas)",
                    "p_5(Lucas) -> p_14(Lucas)",
                    "-p_13(Lucas) | p_14(Lucas)",
                    "(p_9(Lucas) | p_3(Lucas)) -> p_11(Lucas)",
                    "p_14(Lucas) | -p_14(Lucas)",
                    "p_14(Lucas) | p_11(Lucas)",
                    "p_14(Lucas) -> -p_0(Lucas)"
                ],
                "formulas(goals)": [
                    "-(p_10(Lucas) & (p_0(Lucas) & p_14(Lucas)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Lucas)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_14(Lucas) \u2192 \u00acp_0(Lucas)"
                ]
            }
        }
    ]
}