{
    "background_story": "Theo was a renowned botanist who spent his career studying the unique properties of silicles, a type of fruit found in plants like mustard and cabbage. Growing up in a family of farmers, Theo developed a deep appreciation for the intricacies of plant life. His research on silicles led to groundbreaking discoveries about their structure and function, shedding new light on the evolution of plant species. Theo's work took him to remote corners of the globe, from the Himalayan foothills to the Amazon rainforest, in pursuit of rare silicle-bearing plants. His dedication to understanding these small, often overlooked fruits earned him the nickname 'The Silicle Sleuth' among his peers, and his contributions to the field of botany remain unparalleled.",
    "predicates": [
        {
            "id": 0,
            "name": "renowned"
        },
        {
            "id": 1,
            "name": "examines_seeds"
        },
        {
            "id": 2,
            "name": "investigate_growth"
        },
        {
            "id": 3,
            "name": "publish_findings"
        },
        {
            "id": 4,
            "name": "collect_samples"
        },
        {
            "id": 5,
            "name": "understand_evolution"
        },
        {
            "id": 6,
            "name": "study_rare_plants"
        },
        {
            "id": 7,
            "name": "classify_flora"
        },
        {
            "id": 8,
            "name": "explore_wild"
        },
        {
            "id": 9,
            "name": "discover_new_species"
        },
        {
            "id": 10,
            "name": "research_plant"
        },
        {
            "id": 11,
            "name": "analyze_fruits"
        },
        {
            "id": 12,
            "name": "maps_habitats"
        },
        {
            "id": 13,
            "name": "documents_specimens"
        },
        {
            "id": 14,
            "name": "identifies_patterns"
        },
        {
            "id": 15,
            "name": "meticulous"
        },
        {
            "id": 16,
            "name": "observe_details"
        },
        {
            "id": 17,
            "name": "tracks_migration"
        },
        {
            "id": 18,
            "name": "knows_taxonomy"
        },
        {
            "id": 19,
            "name": "likes_nature"
        },
        {
            "id": 20,
            "name": "examine_leaves"
        },
        {
            "id": 21,
            "name": "observe_blooms"
        }
    ],
    "subject_name": "Theo",
    "subject_category": "botanist",
    "keyword": "silicle",
    "all_facts": [
        {
            "id": 0,
            "subject": "Theo",
            "text": "Theo is not renowned.",
            "fol": "\u00acp_0(Theo)",
            "str_fol": "\u00acrenowned(Theo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Theo",
            "text": "Theo does not examine seeds.",
            "fol": "\u00acp_1(Theo)",
            "str_fol": "\u00acexamines_seeds(Theo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Theo",
            "text": "Theo investigates plant growth.",
            "fol": "p_2(Theo)",
            "str_fol": "investigate_growth(Theo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Theo",
            "text": "Theo does not publish his findings.",
            "fol": "\u00acp_3(Theo)",
            "str_fol": "\u00acpublish_findings(Theo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Theo",
            "text": "Theo does not collect samples.",
            "fol": "\u00acp_4(Theo)",
            "str_fol": "\u00accollect_samples(Theo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Theo",
            "text": "Theo does not understand evolution.",
            "fol": "\u00acp_5(Theo)",
            "str_fol": "\u00acunderstand_evolution(Theo)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Theo",
            "text": "Theo does not analyze fruits.",
            "fol": "\u00acp_11(Theo)",
            "str_fol": "\u00acanalyze_fruits(Theo)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Theo",
            "text": "Theo researches plants.",
            "fol": "p_10(Theo)",
            "str_fol": "research_plant(Theo)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Theo",
            "text": "Theo explores the wild.",
            "fol": "p_8(Theo)",
            "str_fol": "explore_wild(Theo)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Theo",
            "text": "Theo classifies flora.",
            "fol": "p_7(Theo)",
            "str_fol": "classify_flora(Theo)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Theo",
            "text": "Theo does not discover new species.",
            "fol": "\u00acp_9(Theo)",
            "str_fol": "\u00acdiscover_new_species(Theo)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Theo",
            "text": "Theo does not collect samples.",
            "fol": "\u00acp_4(Theo)",
            "str_fol": "\u00accollect_samples(Theo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Theo",
            "text": "Theo does not understand evolution.",
            "fol": "\u00acp_5(Theo)",
            "str_fol": "\u00acunderstand_evolution(Theo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Theo",
            "text": "Theo investigates plant growth.",
            "fol": "p_2(Theo)",
            "str_fol": "investigate_growth(Theo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Theo",
            "text": "Theo does not publish his findings.",
            "fol": "\u00acp_3(Theo)",
            "str_fol": "\u00acpublish_findings(Theo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Theo",
            "text": "Theo does not examine seeds.",
            "fol": "\u00acp_1(Theo)",
            "str_fol": "\u00acexamines_seeds(Theo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Theo",
            "text": "Theo is not renowned.",
            "fol": "\u00acp_0(Theo)",
            "str_fol": "\u00acrenowned(Theo)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Theo collects samples or analyzes fruits, then he can understand evolution.",
            "fol": "(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)",
            "str_fol": "(collect_samples(Theo) \u2228 analyze_fruits(Theo)) \u2192 understand_evolution(Theo)"
        },
        {
            "id": 4,
            "text": "Every botanist who investigates plant growth either publishes their findings or researches plants.",
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (investigate_growth(x) \u2192 (publish_findings(x) \u2228 research_plant(x)))"
        },
        {
            "id": 3,
            "text": "If Theo researches plants, then he either explores the wild or analyzes fruits, but not both.",
            "fol": "p_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))",
            "str_fol": "research_plant(Theo) \u2192 (explore_wild(Theo) \u2295 analyze_fruits(Theo))"
        },
        {
            "id": 2,
            "text": "Every botanist either examines seeds or classifies flora.",
            "fol": "\u2200x (p_1(x) \u2228 p_7(x))",
            "str_fol": "\u2200x (examines_seeds(x) \u2228 classify_flora(x))"
        },
        {
            "id": 1,
            "text": "Theo either explores the wild or discovers new species, but not both, which contributes to his reputation.",
            "fol": "p_8(Theo) \u2295 p_9(Theo)",
            "str_fol": "explore_wild(Theo) \u2295 discover_new_species(Theo)"
        },
        {
            "id": 0,
            "text": "Theo either studies rare plants or classifies flora.",
            "fol": "p_6(Theo) \u2228 p_7(Theo)",
            "str_fol": "study_rare_plants(Theo) \u2228 classify_flora(Theo)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Theo",
            "text": "Theo does not collect samples.",
            "fol": "\u00acp_4(Theo)",
            "str_fol": "\u00accollect_samples(Theo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Theo",
            "text": "Theo does not understand evolution.",
            "fol": "\u00acp_5(Theo)",
            "str_fol": "\u00acunderstand_evolution(Theo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Theo",
            "text": "Theo investigates plant growth.",
            "fol": "p_2(Theo)",
            "str_fol": "investigate_growth(Theo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Theo",
            "text": "Theo does not publish his findings.",
            "fol": "\u00acp_3(Theo)",
            "str_fol": "\u00acpublish_findings(Theo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Theo",
            "text": "Theo does not examine seeds.",
            "fol": "\u00acp_1(Theo)",
            "str_fol": "\u00acexamines_seeds(Theo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Theo",
            "text": "Theo is not renowned.",
            "fol": "\u00acp_0(Theo)",
            "str_fol": "\u00acrenowned(Theo)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Theo collects samples or analyzes fruits, then he can understand evolution.",
            "fol": "(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)",
            "str_fol": "(collect_samples(Theo) \u2228 analyze_fruits(Theo)) \u2192 understand_evolution(Theo)"
        },
        {
            "id": 4,
            "text": "Every botanist who investigates plant growth either publishes their findings or researches plants.",
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (investigate_growth(x) \u2192 (publish_findings(x) \u2228 research_plant(x)))"
        },
        {
            "id": 3,
            "text": "If Theo researches plants, then he either explores the wild or analyzes fruits, but not both.",
            "fol": "p_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))",
            "str_fol": "research_plant(Theo) \u2192 (explore_wild(Theo) \u2295 analyze_fruits(Theo))"
        },
        {
            "id": 2,
            "text": "Every botanist either examines seeds or classifies flora.",
            "fol": "\u2200x (p_1(x) \u2228 p_7(x))",
            "str_fol": "\u2200x (examines_seeds(x) \u2228 classify_flora(x))"
        },
        {
            "id": 1,
            "text": "Theo either explores the wild or discovers new species, but not both, which contributes to his reputation.",
            "fol": "p_8(Theo) \u2295 p_9(Theo)",
            "str_fol": "explore_wild(Theo) \u2295 discover_new_species(Theo)"
        },
        {
            "id": 0,
            "text": "Theo either studies rare plants or classifies flora.",
            "fol": "p_6(Theo) \u2228 p_7(Theo)",
            "str_fol": "study_rare_plants(Theo) \u2228 classify_flora(Theo)"
        }
    ],
    "context_fol": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)",
    "conclusion": {
        "id": 12,
        "text": "If Theo either studies rare plants or discovers new species (but not both), then he is renowned.",
        "fol": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
        "str_fol": "(study_rare_plants(Theo) \u2295 discover_new_species(Theo)) \u2192 renowned(Theo)"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Theo",
                    "text": "Theo does not collect samples.",
                    "fol": "\u00acp_4(Theo)",
                    "str_fol": "\u00accollect_samples(Theo)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Theo",
                    "text": "Theo does not understand evolution.",
                    "fol": "\u00acp_5(Theo)",
                    "str_fol": "\u00acunderstand_evolution(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Theo collects samples or analyzes fruits, then he can understand evolution.",
                    "fol": "(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)",
                    "str_fol": "(collect_samples(Theo) \u2228 analyze_fruits(Theo)) \u2192 understand_evolution(Theo)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Theo",
                "text": "Theo does not analyze fruits.",
                "fol": "\u00acp_11(Theo)",
                "str_fol": "\u00acanalyze_fruits(Theo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Theo",
                    "text": "Theo investigates plant growth.",
                    "fol": "p_2(Theo)",
                    "str_fol": "investigate_growth(Theo)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Theo",
                    "text": "Theo does not publish his findings.",
                    "fol": "\u00acp_3(Theo)",
                    "str_fol": "\u00acpublish_findings(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Every botanist who investigates plant growth either publishes their findings or researches plants.",
                    "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (investigate_growth(x) \u2192 (publish_findings(x) \u2228 research_plant(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Theo",
                "text": "Theo researches plants.",
                "fol": "p_10(Theo)",
                "str_fol": "research_plant(Theo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Theo",
                    "text": "Theo researches plants.",
                    "fol": "p_10(Theo)",
                    "str_fol": "research_plant(Theo)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Theo",
                    "text": "Theo does not analyze fruits.",
                    "fol": "\u00acp_11(Theo)",
                    "str_fol": "\u00acanalyze_fruits(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Theo researches plants, then he either explores the wild or analyzes fruits, but not both.",
                    "fol": "p_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))",
                    "str_fol": "research_plant(Theo) \u2192 (explore_wild(Theo) \u2295 analyze_fruits(Theo))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Theo",
                "text": "Theo explores the wild.",
                "fol": "p_8(Theo)",
                "str_fol": "explore_wild(Theo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Theo",
                    "text": "Theo does not examine seeds.",
                    "fol": "\u00acp_1(Theo)",
                    "str_fol": "\u00acexamines_seeds(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Every botanist either examines seeds or classifies flora.",
                    "fol": "\u2200x (p_1(x) \u2228 p_7(x))",
                    "str_fol": "\u2200x (examines_seeds(x) \u2228 classify_flora(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Theo",
                "text": "Theo classifies flora.",
                "fol": "p_7(Theo)",
                "str_fol": "classify_flora(Theo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Theo",
                    "text": "Theo explores the wild.",
                    "fol": "p_8(Theo)",
                    "str_fol": "explore_wild(Theo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Theo either explores the wild or discovers new species, but not both, which contributes to his reputation.",
                    "fol": "p_8(Theo) \u2295 p_9(Theo)",
                    "str_fol": "explore_wild(Theo) \u2295 discover_new_species(Theo)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Theo",
                "text": "Theo does not discover new species.",
                "fol": "\u00acp_9(Theo)",
                "str_fol": "\u00acdiscover_new_species(Theo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Theo",
                    "text": "Theo classifies flora.",
                    "fol": "p_7(Theo)",
                    "str_fol": "classify_flora(Theo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Theo either studies rare plants or classifies flora.",
                    "fol": "p_6(Theo) \u2228 p_7(Theo)",
                    "str_fol": "study_rare_plants(Theo) \u2228 classify_flora(Theo)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Theo",
                    "text": "Theo does not discover new species.",
                    "fol": "\u00acp_9(Theo)",
                    "str_fol": "\u00acdiscover_new_species(Theo)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Theo",
                    "text": "Theo is not renowned.",
                    "fol": "\u00acp_0(Theo)",
                    "str_fol": "\u00acrenowned(Theo)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo).",
                    "-p_5(Theo).",
                    "p_2(Theo).",
                    "-p_3(Theo).",
                    "-p_1(Theo).",
                    "-p_0(Theo).",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo).",
                    "all x (p_2(x) -> (p_3(x) | p_10(x))).",
                    "p_10(Theo) -> (p_8(Theo) <-> -p_11(Theo)).",
                    "all x (p_1(x) | p_7(x)).",
                    "p_8(Theo) <-> -p_9(Theo).",
                    "p_6(Theo) | p_7(Theo).",
                    "p_7(Theo) -> -p_6(Theo).",
                    "p_7(Theo) -> -p_9(Theo)."
                ],
                "formulas(goals)": [
                    "(p_6(Theo) <-> -p_9(Theo)) -> p_0(Theo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Theo) \u2192 \u00acp_6(Theo)",
                    "p_7(Theo) \u2192 \u00acp_9(Theo)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)\np_6(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo)",
                    "-p_5(Theo)",
                    "p_2(Theo)",
                    "-p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo)",
                    "all x (p_2(x) -> (p_3(x) | p_10(x)))",
                    "p_10(Theo) -> (-(p_8(Theo) <-> p_11(Theo)))",
                    "all x (p_1(x) | p_7(x))",
                    "-(p_8(Theo) <-> p_9(Theo))",
                    "p_6(Theo) | p_7(Theo)",
                    "p_6(Theo)"
                ],
                "formulas(goals)": [
                    "-((-(p_6(Theo) <-> p_9(Theo))) -> p_0(Theo))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Theo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)\np_6(Theo)\np_10(Theo)\n\u00acp_11(Theo)\np_8(Theo)\n\u00acp_9(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo)",
                    "-p_5(Theo)",
                    "p_2(Theo)",
                    "-p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo)",
                    "all x (p_2(x) -> (p_3(x) | p_10(x)))",
                    "p_10(Theo) -> (-(p_8(Theo) <-> p_11(Theo)))",
                    "all x (p_1(x) | p_7(x))",
                    "-(p_8(Theo) <-> p_9(Theo))",
                    "p_6(Theo) | p_7(Theo)",
                    "p_6(Theo)",
                    "p_10(Theo)",
                    "-p_11(Theo)",
                    "p_8(Theo)",
                    "-p_9(Theo)"
                ],
                "formulas(goals)": [
                    "-((-(p_6(Theo) <-> p_9(Theo))) -> p_0(Theo))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Theo)",
                    "\u00acp_11(Theo)",
                    "p_8(Theo)",
                    "\u00acp_9(Theo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)\np_10(Theo)\n\u00acp_11(Theo)\np_8(Theo)\n\u00acp_9(Theo)\n\u00acp_6(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo)",
                    "-p_5(Theo)",
                    "p_2(Theo)",
                    "-p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo)",
                    "all x (p_2(x) -> (p_3(x) | p_10(x)))",
                    "p_10(Theo) -> (-(p_8(Theo) <-> p_11(Theo)))",
                    "all x (p_1(x) | p_7(x))",
                    "-(p_8(Theo) <-> p_9(Theo))",
                    "p_6(Theo) | p_7(Theo)",
                    "p_10(Theo)",
                    "-p_11(Theo)",
                    "p_8(Theo)",
                    "-p_9(Theo)",
                    "-p_6(Theo)"
                ],
                "formulas(goals)": [
                    "(-(p_6(Theo) <-> p_9(Theo))) -> p_0(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Theo)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Theo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 ((p_8(Theo) \u2228 p_11(Theo)) \u2227 (\u00acp_8(Theo) \u2228 \u00acp_11(Theo)))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)\np_10(Theo)\n\u00acp_11(Theo)\np_8(Theo)\n\u00acp_9(Theo)\n\u00acp_6(Theo)\n\u00acp_4(Theo) \u2227 \u00acp_11(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo)",
                    "-p_5(Theo)",
                    "p_2(Theo)",
                    "-p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo)",
                    "all x (p_2(x) -> (p_3(x) | p_10(x)))",
                    "p_10(Theo) -> ((p_8(Theo) | p_11(Theo)) & (-p_8(Theo) | -p_11(Theo)))",
                    "all x (p_1(x) | p_7(x))",
                    "-(p_8(Theo) <-> p_9(Theo))",
                    "p_6(Theo) | p_7(Theo)",
                    "p_10(Theo)",
                    "-p_11(Theo)",
                    "p_8(Theo)",
                    "-p_9(Theo)",
                    "-p_6(Theo)",
                    "-p_4(Theo) & -p_11(Theo)"
                ],
                "formulas(goals)": [
                    "(-(p_6(Theo) <-> p_9(Theo))) -> p_0(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Theo) \u2192 (p_8(Theo) \u2295 p_11(Theo))"
                ],
                "added_facts": [
                    "\u00acp_4(Theo) \u2227 \u00acp_11(Theo)"
                ],
                "added_rules": [
                    "p_10(Theo) \u2192 ((p_8(Theo) \u2228 p_11(Theo)) \u2227 (\u00acp_8(Theo) \u2228 \u00acp_11(Theo)))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 ((p_8(Theo) \u2228 p_11(Theo)) \u2227 (\u00acp_8(Theo) \u2228 \u00acp_11(Theo)))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)\np_10(Theo)\n\u00acp_11(Theo)\np_8(Theo)\n\u00acp_9(Theo)\n\u00acp_4(Theo) \u2227 \u00acp_11(Theo)\n\u00acp_7(Theo) \u2228 p_6(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo)",
                    "-p_5(Theo)",
                    "p_2(Theo)",
                    "-p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo)",
                    "all x (p_2(x) -> (p_3(x) | p_10(x)))",
                    "p_10(Theo) -> ((p_8(Theo) | p_11(Theo)) & (-p_8(Theo) | -p_11(Theo)))",
                    "all x (p_1(x) | p_7(x))",
                    "-(p_8(Theo) <-> p_9(Theo))",
                    "p_6(Theo) | p_7(Theo)",
                    "p_10(Theo)",
                    "-p_11(Theo)",
                    "p_8(Theo)",
                    "-p_9(Theo)",
                    "-p_4(Theo) & -p_11(Theo)",
                    "-p_7(Theo) | p_6(Theo)"
                ],
                "formulas(goals)": [
                    "-(p_6(Theo) <-> p_9(Theo))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Theo)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_7(Theo) \u2228 p_6(Theo)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Theo)\n\u00acp_5(Theo)\np_2(Theo)\n\u00acp_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_4(Theo) \u2228 p_11(Theo)) \u2192 p_5(Theo)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_10(x)))\np_10(Theo) \u2192 ((p_8(Theo) \u2228 p_11(Theo)) \u2227 (\u00acp_8(Theo) \u2228 \u00acp_11(Theo)))\n\u2200x (p_1(x) \u2228 p_7(x))\np_8(Theo) \u2295 p_9(Theo)\np_6(Theo) \u2228 p_7(Theo)\np_10(Theo)\n\u00acp_11(Theo)\np_8(Theo)\n\u00acp_9(Theo)\n\u00acp_4(Theo) \u2227 \u00acp_11(Theo)\np_7(Theo) \u2192 p_6(Theo)\np_7(Theo)\np_6(Theo)",
            "Initial Goal": "(p_6(Theo) \u2295 p_9(Theo)) \u2192 p_0(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Theo).",
                    "-p_5(Theo).",
                    "p_2(Theo).",
                    "-p_3(Theo).",
                    "-p_1(Theo).",
                    "-p_0(Theo).",
                    "(p_4(Theo) | p_11(Theo)) -> p_5(Theo).",
                    "(all x (p_2(x) -> (p_3(x) | p_10(x)))).",
                    "p_10(Theo) -> ((p_8(Theo) | p_11(Theo)) & (-p_8(Theo) | -p_11(Theo))).",
                    "(all x (p_1(x) | p_7(x))).",
                    "-(p_8(Theo) <-> p_9(Theo)).",
                    "p_6(Theo) | p_7(Theo).",
                    "p_10(Theo).",
                    "-p_11(Theo).",
                    "p_8(Theo).",
                    "-p_9(Theo).",
                    "(-p_4(Theo)) & (-p_11(Theo)).",
                    "p_7(Theo) -> p_6(Theo).",
                    "p_7(Theo).",
                    "p_6(Theo)."
                ],
                "formulas(goals)": [
                    "-((-(p_6(Theo) <-> p_9(Theo))) -> p_0(Theo))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Theo) \u2228 p_6(Theo)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Theo)",
                    "p_6(Theo)"
                ],
                "added_rules": [
                    "p_7(Theo) \u2192 p_6(Theo)"
                ]
            }
        }
    ]
}