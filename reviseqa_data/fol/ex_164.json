{
    "background_story": "Andrea was a charismatic and cunning thief known only by her alias 'The Fox' in the underworld. Her claim to fame was pulling off the impossible heist, stealing a valuable boodle of diamonds from a highly secured museum. The boodle, worth millions, was meant for a charity auction, but Andrea had other plans. She cleverly replaced the diamonds with flawless replicas, leaving the museum staff and security baffled. The real boodle was then fenced on the black market, with Andrea disappearing into the night, her legend growing among thieves and law enforcement alike. Though her actions were illicit, Andrea's daring and intelligence earned her a twisted sort of respect, making her one of the most talked-about figures in the shadows of the criminal world.",
    "predicates": [
        {
            "id": 0,
            "name": "is_legendary"
        },
        {
            "id": 1,
            "name": "is_cunning"
        },
        {
            "id": 2,
            "name": "commits_crime"
        },
        {
            "id": 3,
            "name": "breaks_law"
        },
        {
            "id": 4,
            "name": "solves_puzzles"
        },
        {
            "id": 5,
            "name": "skilled_thief"
        },
        {
            "id": 6,
            "name": "gains_notoriety"
        },
        {
            "id": 7,
            "name": "earns_respect"
        },
        {
            "id": 8,
            "name": "plans_heists"
        },
        {
            "id": 9,
            "name": "escapes_capture"
        },
        {
            "id": 10,
            "name": "gets_caught"
        },
        {
            "id": 11,
            "name": "is_adventurous"
        },
        {
            "id": 12,
            "name": "pulls_off_heists"
        },
        {
            "id": 13,
            "name": "outsmarts_authority"
        },
        {
            "id": 14,
            "name": "outsmarts_others"
        },
        {
            "id": 15,
            "name": "leaves_clues"
        },
        {
            "id": 16,
            "name": "makes_mistakes"
        },
        {
            "id": 17,
            "name": "has_motive"
        },
        {
            "id": 18,
            "name": "is_resourceful"
        }
    ],
    "subject_name": "Andrea",
    "subject_category": "human",
    "keyword": "boodle",
    "all_facts": [
        {
            "id": 0,
            "subject": "Andrea",
            "text": "Andrea is not legendary.",
            "fol": "\u00acp_0(Andrea)",
            "str_fol": "\u00acis_legendary(Andrea)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Andrea",
            "text": "Andrea is cunning.",
            "fol": "p_1(Andrea)",
            "str_fol": "is_cunning(Andrea)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Andrea",
            "text": "Andrea commits a crime.",
            "fol": "p_2(Andrea)",
            "str_fol": "commits_crime(Andrea)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Andrea",
            "text": "Andrea breaks the law.",
            "fol": "p_3(Andrea)",
            "str_fol": "breaks_law(Andrea)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Andrea",
            "text": "Andrea does not solve puzzles.",
            "fol": "\u00acp_4(Andrea)",
            "str_fol": "\u00acsolves_puzzles(Andrea)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Andrea",
            "text": "Andrea plans heists.",
            "fol": "p_8(Andrea)",
            "str_fol": "plans_heists(Andrea)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Andrea",
            "text": "Andrea gets caught.",
            "fol": "p_10(Andrea)",
            "str_fol": "gets_caught(Andrea)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Andrea",
            "text": "Andrea does not escape capture.",
            "fol": "\u00acp_9(Andrea)",
            "str_fol": "\u00acescapes_capture(Andrea)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Andrea",
            "text": "Andrea does not gain notoriety.",
            "fol": "\u00acp_6(Andrea)",
            "str_fol": "\u00acgains_notoriety(Andrea)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Andrea",
            "text": "Andrea is not a skilled thief.",
            "fol": "\u00acp_5(Andrea)",
            "str_fol": "\u00acskilled_thief(Andrea)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Andrea",
            "text": "Andrea does not earn respect.",
            "fol": "\u00acp_7(Andrea)",
            "str_fol": "\u00acearns_respect(Andrea)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Andrea",
            "text": "Andrea does not solve puzzles.",
            "fol": "\u00acp_4(Andrea)",
            "str_fol": "\u00acsolves_puzzles(Andrea)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Andrea",
            "text": "Andrea breaks the law.",
            "fol": "p_3(Andrea)",
            "str_fol": "breaks_law(Andrea)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Andrea",
            "text": "Andrea commits a crime.",
            "fol": "p_2(Andrea)",
            "str_fol": "commits_crime(Andrea)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Andrea",
            "text": "Andrea is cunning.",
            "fol": "p_1(Andrea)",
            "str_fol": "is_cunning(Andrea)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Andrea",
            "text": "Andrea is not legendary.",
            "fol": "\u00acp_0(Andrea)",
            "str_fol": "\u00acis_legendary(Andrea)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Andrea either plans heists or solves puzzles, but not both.",
            "fol": "p_8(Andrea) \u2295 p_4(Andrea)",
            "str_fol": "plans_heists(Andrea) \u2295 solves_puzzles(Andrea)"
        },
        {
            "id": 4,
            "text": "If Andrea breaks the law, then she will get caught.",
            "fol": "p_3(Andrea) \u2192 p_10(Andrea)",
            "str_fol": "breaks_law(Andrea) \u2192 gets_caught(Andrea)"
        },
        {
            "id": 3,
            "text": "All humans who commit crimes either escape capture or get caught, but not both.",
            "fol": "\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))",
            "str_fol": "\u2200x (commits_crime(x) \u2192 (escapes_capture(x) \u2295 gets_caught(x)))"
        },
        {
            "id": 2,
            "text": "If Andrea is cunning and gains notoriety, then she is legendary.",
            "fol": "(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)",
            "str_fol": "(is_cunning(Andrea) \u2227 gains_notoriety(Andrea)) \u2192 is_legendary(Andrea)"
        },
        {
            "id": 1,
            "text": "If Andrea plans heists and is a skilled thief, then she escapes capture.",
            "fol": "(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)",
            "str_fol": "(plans_heists(Andrea) \u2227 skilled_thief(Andrea)) \u2192 escapes_capture(Andrea)"
        },
        {
            "id": 0,
            "text": "If Andrea is a skilled thief, then she gains notoriety and earns respect.",
            "fol": "p_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))",
            "str_fol": "skilled_thief(Andrea) \u2192 (gains_notoriety(Andrea) \u2227 earns_respect(Andrea))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Andrea",
            "text": "Andrea does not solve puzzles.",
            "fol": "\u00acp_4(Andrea)",
            "str_fol": "\u00acsolves_puzzles(Andrea)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Andrea",
            "text": "Andrea breaks the law.",
            "fol": "p_3(Andrea)",
            "str_fol": "breaks_law(Andrea)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Andrea",
            "text": "Andrea commits a crime.",
            "fol": "p_2(Andrea)",
            "str_fol": "commits_crime(Andrea)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Andrea",
            "text": "Andrea is cunning.",
            "fol": "p_1(Andrea)",
            "str_fol": "is_cunning(Andrea)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Andrea",
            "text": "Andrea is not legendary.",
            "fol": "\u00acp_0(Andrea)",
            "str_fol": "\u00acis_legendary(Andrea)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Andrea either plans heists or solves puzzles, but not both.",
            "fol": "p_8(Andrea) \u2295 p_4(Andrea)",
            "str_fol": "plans_heists(Andrea) \u2295 solves_puzzles(Andrea)"
        },
        {
            "id": 4,
            "text": "If Andrea breaks the law, then she will get caught.",
            "fol": "p_3(Andrea) \u2192 p_10(Andrea)",
            "str_fol": "breaks_law(Andrea) \u2192 gets_caught(Andrea)"
        },
        {
            "id": 3,
            "text": "All humans who commit crimes either escape capture or get caught, but not both.",
            "fol": "\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))",
            "str_fol": "\u2200x (commits_crime(x) \u2192 (escapes_capture(x) \u2295 gets_caught(x)))"
        },
        {
            "id": 2,
            "text": "If Andrea is cunning and gains notoriety, then she is legendary.",
            "fol": "(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)",
            "str_fol": "(is_cunning(Andrea) \u2227 gains_notoriety(Andrea)) \u2192 is_legendary(Andrea)"
        },
        {
            "id": 1,
            "text": "If Andrea plans heists and is a skilled thief, then she escapes capture.",
            "fol": "(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)",
            "str_fol": "(plans_heists(Andrea) \u2227 skilled_thief(Andrea)) \u2192 escapes_capture(Andrea)"
        },
        {
            "id": 0,
            "text": "If Andrea is a skilled thief, then she gains notoriety and earns respect.",
            "fol": "p_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))",
            "str_fol": "skilled_thief(Andrea) \u2192 (gains_notoriety(Andrea) \u2227 earns_respect(Andrea))"
        }
    ],
    "context_fol": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))\n(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)\n(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)\np_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))",
    "conclusion": {
        "id": 10,
        "subject": "Andrea",
        "text": "Andrea does not earn respect.",
        "fol": "\u00acp_7(Andrea)",
        "str_fol": "\u00acearns_respect(Andrea)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Andrea)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Andrea",
                    "text": "Andrea does not solve puzzles.",
                    "fol": "\u00acp_4(Andrea)",
                    "str_fol": "\u00acsolves_puzzles(Andrea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Andrea either plans heists or solves puzzles, but not both.",
                    "fol": "p_8(Andrea) \u2295 p_4(Andrea)",
                    "str_fol": "plans_heists(Andrea) \u2295 solves_puzzles(Andrea)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Andrea",
                "text": "Andrea plans heists.",
                "fol": "p_8(Andrea)",
                "str_fol": "plans_heists(Andrea)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Andrea",
                    "text": "Andrea breaks the law.",
                    "fol": "p_3(Andrea)",
                    "str_fol": "breaks_law(Andrea)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Andrea breaks the law, then she will get caught.",
                    "fol": "p_3(Andrea) \u2192 p_10(Andrea)",
                    "str_fol": "breaks_law(Andrea) \u2192 gets_caught(Andrea)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Andrea",
                "text": "Andrea gets caught.",
                "fol": "p_10(Andrea)",
                "str_fol": "gets_caught(Andrea)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Andrea",
                    "text": "Andrea commits a crime.",
                    "fol": "p_2(Andrea)",
                    "str_fol": "commits_crime(Andrea)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Andrea",
                    "text": "Andrea gets caught.",
                    "fol": "p_10(Andrea)",
                    "str_fol": "gets_caught(Andrea)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "All humans who commit crimes either escape capture or get caught, but not both.",
                    "fol": "\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))",
                    "str_fol": "\u2200x (commits_crime(x) \u2192 (escapes_capture(x) \u2295 gets_caught(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Andrea",
                "text": "Andrea does not escape capture.",
                "fol": "\u00acp_9(Andrea)",
                "str_fol": "\u00acescapes_capture(Andrea)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Andrea",
                    "text": "Andrea is cunning.",
                    "fol": "p_1(Andrea)",
                    "str_fol": "is_cunning(Andrea)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Andrea",
                    "text": "Andrea is not legendary.",
                    "fol": "\u00acp_0(Andrea)",
                    "str_fol": "\u00acis_legendary(Andrea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Andrea is cunning and gains notoriety, then she is legendary.",
                    "fol": "(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)",
                    "str_fol": "(is_cunning(Andrea) \u2227 gains_notoriety(Andrea)) \u2192 is_legendary(Andrea)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Andrea",
                "text": "Andrea does not gain notoriety.",
                "fol": "\u00acp_6(Andrea)",
                "str_fol": "\u00acgains_notoriety(Andrea)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Andrea",
                    "text": "Andrea plans heists.",
                    "fol": "p_8(Andrea)",
                    "str_fol": "plans_heists(Andrea)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Andrea",
                    "text": "Andrea does not escape capture.",
                    "fol": "\u00acp_9(Andrea)",
                    "str_fol": "\u00acescapes_capture(Andrea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Andrea plans heists and is a skilled thief, then she escapes capture.",
                    "fol": "(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)",
                    "str_fol": "(plans_heists(Andrea) \u2227 skilled_thief(Andrea)) \u2192 escapes_capture(Andrea)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Andrea",
                "text": "Andrea is not a skilled thief.",
                "fol": "\u00acp_5(Andrea)",
                "str_fol": "\u00acskilled_thief(Andrea)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Andrea",
                    "text": "Andrea is not a skilled thief.",
                    "fol": "\u00acp_5(Andrea)",
                    "str_fol": "\u00acskilled_thief(Andrea)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Andrea",
                    "text": "Andrea does not gain notoriety.",
                    "fol": "\u00acp_6(Andrea)",
                    "str_fol": "\u00acgains_notoriety(Andrea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Andrea is a skilled thief, then she gains notoriety and earns respect.",
                    "fol": "p_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))",
                    "str_fol": "skilled_thief(Andrea) \u2192 (gains_notoriety(Andrea) \u2227 earns_respect(Andrea))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))\n(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)\n(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)\np_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea)",
                    "p_3(Andrea)",
                    "p_2(Andrea)",
                    "p_1(Andrea)",
                    "-p_0(Andrea)",
                    "-(p_8(Andrea) <-> p_4(Andrea))",
                    "p_3(Andrea) -> p_10(Andrea)",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x)))",
                    "(p_1(Andrea) & p_6(Andrea)) -> p_0(Andrea)",
                    "(p_8(Andrea) & p_5(Andrea)) -> p_9(Andrea)",
                    "p_5(Andrea) -> (p_6(Andrea) & p_7(Andrea))",
                    "p_7(Andrea) -> p_6(Andrea)"
                ],
                "formulas(goals)": [
                    "-p_7(Andrea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Andrea) \u2192 p_6(Andrea)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))\n(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)\n(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)\np_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))\n\u00acp_5(Andrea) \u2192 p_7(Andrea)",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea)",
                    "p_3(Andrea)",
                    "p_2(Andrea)",
                    "p_1(Andrea)",
                    "-p_0(Andrea)",
                    "-(p_8(Andrea) <-> p_4(Andrea))",
                    "p_3(Andrea) -> p_10(Andrea)",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x)))",
                    "(p_1(Andrea) & p_6(Andrea)) -> p_0(Andrea)",
                    "(p_8(Andrea) & p_5(Andrea)) -> p_9(Andrea)",
                    "p_5(Andrea) -> (p_6(Andrea) & p_7(Andrea))",
                    "-p_5(Andrea) -> p_7(Andrea)"
                ],
                "formulas(goals)": [
                    "--p_7(Andrea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_5(Andrea) \u2192 p_7(Andrea)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))\n(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)\n(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)\np_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))\n\u00acp_5(Andrea) \u2192 p_7(Andrea)\np_8(Andrea)\n\u00acp_7(Andrea) \u2192 p_5(Andrea)",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea).",
                    "p_3(Andrea).",
                    "p_2(Andrea).",
                    "p_1(Andrea).",
                    "-p_0(Andrea).",
                    "-(p_8(Andrea) <-> p_4(Andrea)).",
                    "p_3(Andrea) -> p_10(Andrea).",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x))).",
                    "(p_1(Andrea) & p_6(Andrea)) -> p_0(Andrea).",
                    "(p_8(Andrea) & p_5(Andrea)) -> p_9(Andrea).",
                    "p_5(Andrea) -> (p_6(Andrea) & p_7(Andrea)).",
                    "-p_5(Andrea) -> p_7(Andrea).",
                    "p_8(Andrea).",
                    "-p_7(Andrea) -> p_5(Andrea)."
                ],
                "formulas(goals)": [
                    "p_7(Andrea)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Andrea)"
                ],
                "added_rules": [
                    "\u00acp_7(Andrea) \u2192 p_5(Andrea)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 (p_9(x) \u2295 p_10(x)))\n(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)\n(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)\np_5(Andrea) \u2192 p_6(Andrea)\np_5(Andrea) \u2192 p_7(Andrea)\n\u00acp_5(Andrea) \u2192 p_7(Andrea)\np_8(Andrea)\n(p_7(Andrea) \u2228 p_5(Andrea))",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea)",
                    "p_3(Andrea)",
                    "p_2(Andrea)",
                    "p_1(Andrea)",
                    "-p_0(Andrea)",
                    "-(p_8(Andrea) <-> p_4(Andrea))",
                    "p_3(Andrea) -> p_10(Andrea)",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x)))",
                    "(p_1(Andrea) & p_6(Andrea)) -> p_0(Andrea)",
                    "(p_8(Andrea) & p_5(Andrea)) -> p_9(Andrea)",
                    "p_5(Andrea) -> p_6(Andrea)",
                    "p_5(Andrea) -> p_7(Andrea)",
                    "-p_5(Andrea) -> p_7(Andrea)",
                    "p_8(Andrea)",
                    "(p_7(Andrea) | p_5(Andrea))"
                ],
                "formulas(goals)": [
                    "--p_7(Andrea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Andrea) \u2192 (p_6(Andrea) \u2227 p_7(Andrea))",
                    "\u00acp_7(Andrea) \u2192 p_5(Andrea)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Andrea) \u2192 p_6(Andrea)",
                    "p_5(Andrea) \u2192 p_7(Andrea)",
                    "p_7(Andrea) \u2228 p_5(Andrea)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 \u00ac(p_9(x) \u2194 p_10(x)))\np_5(Andrea) \u2192 p_6(Andrea)\np_8(Andrea)\np_5(Andrea)\np_5(Andrea) \u2192 \u00acp_7(Andrea)",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea)",
                    "p_3(Andrea)",
                    "p_2(Andrea)",
                    "p_1(Andrea)",
                    "-p_0(Andrea)",
                    "-(p_8(Andrea) <-> p_4(Andrea))",
                    "p_3(Andrea) -> p_10(Andrea)",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x)))",
                    "p_5(Andrea) -> p_6(Andrea)",
                    "p_8(Andrea)",
                    "p_5(Andrea)",
                    "p_5(Andrea) -> -p_7(Andrea)"
                ],
                "formulas(goals)": [
                    "-p_7(Andrea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_1(Andrea) \u2227 p_6(Andrea)) \u2192 p_0(Andrea)",
                    "(p_8(Andrea) \u2227 p_5(Andrea)) \u2192 p_9(Andrea)",
                    "p_5(Andrea) \u2192 p_7(Andrea)",
                    "\u00acp_5(Andrea) \u2192 p_7(Andrea)",
                    "p_7(Andrea) \u2228 p_5(Andrea)"
                ],
                "added_facts": [
                    "p_5(Andrea)"
                ],
                "added_rules": [
                    "p_5(Andrea) \u2192 \u00acp_7(Andrea)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 \u00ac(p_9(x) \u2194 p_10(x)))\np_5(Andrea) \u2192 p_6(Andrea)\np_8(Andrea)\np_5(Andrea)\np_5(Andrea) \u2192 \u00acp_7(Andrea)\np_5(Andrea) \u2228 \u00acp_5(Andrea)\n\u00acp_5(Andrea) \u2228 \u00acp_7(Andrea)\np_6(Andrea)\np_8(Andrea) \u2228 p_4(Andrea)\n\u00acp_3(Andrea) \u2228 p_10(Andrea)\np_5(Andrea) \u2228 p_7(Andrea)",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea)",
                    "p_3(Andrea)",
                    "p_2(Andrea)",
                    "p_1(Andrea)",
                    "-p_0(Andrea)",
                    "-(p_8(Andrea) <-> p_4(Andrea))",
                    "p_3(Andrea) -> p_10(Andrea)",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x)))",
                    "p_5(Andrea) -> p_6(Andrea)",
                    "p_8(Andrea)",
                    "p_5(Andrea)",
                    "p_5(Andrea) -> -p_7(Andrea)",
                    "p_5(Andrea) | -p_5(Andrea)",
                    "-p_5(Andrea) | -p_7(Andrea)",
                    "p_6(Andrea)",
                    "p_8(Andrea) | p_4(Andrea)",
                    "-p_3(Andrea) | p_10(Andrea)",
                    "p_5(Andrea) | p_7(Andrea)"
                ],
                "formulas(goals)": [
                    "-p_7(Andrea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Andrea) \u2228 \u00acp_5(Andrea)",
                    "\u00acp_5(Andrea) \u2228 \u00acp_7(Andrea)",
                    "p_6(Andrea)",
                    "p_8(Andrea) \u2228 p_4(Andrea)",
                    "\u00acp_3(Andrea) \u2228 p_10(Andrea)",
                    "p_5(Andrea) \u2228 p_7(Andrea)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Andrea)\np_3(Andrea)\np_2(Andrea)\np_1(Andrea)\n\u00acp_0(Andrea)\np_8(Andrea) \u2295 p_4(Andrea)\np_3(Andrea) \u2192 p_10(Andrea)\n\u2200x (p_2(x) \u2192 \u00ac(p_9(x) \u2194 p_10(x)))\np_5(Andrea) \u2192 p_6(Andrea)\np_8(Andrea)\np_5(Andrea)\np_5(Andrea) \u2192 \u00acp_7(Andrea)\np_5(Andrea) \u2228 \u00acp_5(Andrea)\n\u00acp_5(Andrea) \u2228 \u00acp_7(Andrea)\np_6(Andrea)\np_8(Andrea) \u2228 p_4(Andrea)\n\u00acp_3(Andrea) \u2228 p_10(Andrea)\np_5(Andrea) \u2228 p_7(Andrea)\n\u00acp_8(Andrea) \u2228 \u00acp_4(Andrea)\n\u00ac(p_3(Andrea) \u2227 \u00acp_10(Andrea))\np_2(Andrea) \u2192 ((p_9(Andrea) \u2227 \u00acp_10(Andrea)) \u2228 (\u00acp_9(Andrea) \u2227 p_10(Andrea)))\n\u00ac(p_5(Andrea) \u2227 p_7(Andrea))",
            "Initial Goal": "\u00acp_7(Andrea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Andrea)",
                    "p_3(Andrea)",
                    "p_2(Andrea)",
                    "p_1(Andrea)",
                    "-p_0(Andrea)",
                    "-(p_8(Andrea) <-> p_4(Andrea))",
                    "p_3(Andrea) -> p_10(Andrea)",
                    "all x (p_2(x) -> -(p_9(x) <-> p_10(x)))",
                    "p_5(Andrea) -> p_6(Andrea)",
                    "p_8(Andrea)",
                    "p_5(Andrea)",
                    "p_5(Andrea) -> -p_7(Andrea)",
                    "p_5(Andrea) | -p_5(Andrea)",
                    "-p_5(Andrea) | -p_7(Andrea)",
                    "p_6(Andrea)",
                    "p_8(Andrea) | p_4(Andrea)",
                    "-p_3(Andrea) | p_10(Andrea)",
                    "p_5(Andrea) | p_7(Andrea)",
                    "-p_8(Andrea) | -p_4(Andrea)",
                    "-(p_3(Andrea) & -p_10(Andrea))",
                    "p_2(Andrea) -> ((p_9(Andrea) & -p_10(Andrea)) | (-p_9(Andrea) & p_10(Andrea)))",
                    "-(p_5(Andrea) & p_7(Andrea))"
                ],
                "formulas(goals)": [
                    "-p_7(Andrea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_8(Andrea) \u2228 \u00acp_4(Andrea)",
                    "\u00ac(p_3(Andrea) \u2227 \u00acp_10(Andrea))",
                    "p_2(Andrea) \u2192 ((p_9(Andrea) \u2227 \u00acp_10(Andrea)) \u2228 (\u00acp_9(Andrea) \u2227 p_10(Andrea)))",
                    "\u00ac(p_5(Andrea) \u2227 p_7(Andrea))"
                ]
            }
        }
    ]
}