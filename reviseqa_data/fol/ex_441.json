{
    "background_story": "Thiago was a renowned Australian botanist, particularly fascinated by the unique flora of Western Australia. His life's work focused on the Hovea genus, a group of flowering plants found in the region's scrublands and woodlands. Thiago spent years studying the Hovea, discovering new species and documenting their habits. His most notable find was the Hovea elliptica, a plant with striking purple flowers that bloomed only under the light of a full moon. Thiago's dedication to the Hovea earned him the nickname 'The Hovea Whisperer' among his peers. He continued to explore and protect these extraordinary plants, ensuring their beauty and significance would be preserved for future generations.",
    "predicates": [
        {
            "id": 0,
            "name": "collect_samples"
        },
        {
            "id": 1,
            "name": "dedicated_botanist"
        },
        {
            "id": 2,
            "name": "is_curious"
        },
        {
            "id": 3,
            "name": "have_knowledge"
        },
        {
            "id": 4,
            "name": "achieve_success"
        },
        {
            "id": 5,
            "name": "make_notable_discoveries"
        },
        {
            "id": 6,
            "name": "contribute_to_conservation"
        },
        {
            "id": 7,
            "name": "study_rare_species"
        },
        {
            "id": 8,
            "name": "explore_wilderness"
        },
        {
            "id": 9,
            "name": "make_new_findings"
        },
        {
            "id": 10,
            "name": "work_hard"
        },
        {
            "id": 11,
            "name": "protect_environment"
        },
        {
            "id": 12,
            "name": "love_nature"
        },
        {
            "id": 13,
            "name": "travel_often"
        },
        {
            "id": 14,
            "name": "documents_plants"
        },
        {
            "id": 15,
            "name": "documents_data"
        },
        {
            "id": 16,
            "name": "set_goals"
        },
        {
            "id": 17,
            "name": "face_challenges"
        }
    ],
    "subject_name": "Thiago",
    "subject_category": "person",
    "keyword": "hovea",
    "all_facts": [
        {
            "id": 0,
            "subject": "Thiago",
            "text": "Thiago does not collect samples.",
            "fol": "\u00acp_0(Thiago)",
            "str_fol": "\u00accollect_samples(Thiago)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Thiago",
            "text": "Thiago is a dedicated botanist.",
            "fol": "p_1(Thiago)",
            "str_fol": "dedicated_botanist(Thiago)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Thiago",
            "text": "Thiago is not curious.",
            "fol": "\u00acp_2(Thiago)",
            "str_fol": "\u00acis_curious(Thiago)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Thiago",
            "text": "Thiago does not have knowledge.",
            "fol": "\u00acp_3(Thiago)",
            "str_fol": "\u00achave_knowledge(Thiago)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Thiago",
            "text": "Thiago will achieve success.",
            "fol": "p_4(Thiago)",
            "str_fol": "achieve_success(Thiago)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Thiago",
            "text": "Thiago does not make new findings.",
            "fol": "\u00acp_9(Thiago)",
            "str_fol": "\u00acmake_new_findings(Thiago)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Thiago",
            "text": "Thiago does not study rare species.",
            "fol": "\u00acp_7(Thiago)",
            "str_fol": "\u00acstudy_rare_species(Thiago)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Thiago",
            "text": "Thiago contributes to conservation.",
            "fol": "p_6(Thiago)",
            "str_fol": "contribute_to_conservation(Thiago)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Thiago",
            "text": "Thiago makes notable discoveries.",
            "fol": "p_5(Thiago)",
            "str_fol": "make_notable_discoveries(Thiago)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Thiago",
            "text": "Thiago will achieve success.",
            "fol": "p_4(Thiago)",
            "str_fol": "achieve_success(Thiago)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Thiago",
            "text": "Thiago does not have knowledge.",
            "fol": "\u00acp_3(Thiago)",
            "str_fol": "\u00achave_knowledge(Thiago)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Thiago",
            "text": "Thiago is not curious.",
            "fol": "\u00acp_2(Thiago)",
            "str_fol": "\u00acis_curious(Thiago)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Thiago",
            "text": "Thiago does not collect samples.",
            "fol": "\u00acp_0(Thiago)",
            "str_fol": "\u00accollect_samples(Thiago)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Thiago",
            "text": "Thiago is a dedicated botanist.",
            "fol": "p_1(Thiago)",
            "str_fol": "dedicated_botanist(Thiago)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Thiago works hard, then he will achieve success.",
            "fol": "p_10(Thiago) \u2192 p_4(Thiago)",
            "str_fol": "work_hard(Thiago) \u2192 achieve_success(Thiago)"
        },
        {
            "id": 4,
            "text": "If Thiago makes new findings, then he has knowledge and works hard.",
            "fol": "p_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))",
            "str_fol": "make_new_findings(Thiago) \u2192 (have_knowledge(Thiago) \u2227 work_hard(Thiago))"
        },
        {
            "id": 3,
            "text": "If Thiago is curious, then he either collects samples or explores the wilderness, but not both.",
            "fol": "p_2(Thiago) \u2192 (p_0(Thiago) \u2295 p_8(Thiago))",
            "str_fol": "is_curious(Thiago) \u2192 (collect_samples(Thiago) \u2295 explore_wilderness(Thiago))"
        },
        {
            "id": 2,
            "text": "Anyone who explores the wilderness or studies rare species can make new findings.",
            "fol": "\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((explore_wilderness(x) \u2228 study_rare_species(x)) \u2192 make_new_findings(x))"
        },
        {
            "id": 1,
            "text": "Thiago either contributes to conservation or studies rare species, but not both.",
            "fol": "p_6(Thiago) \u2295 p_7(Thiago)",
            "str_fol": "contribute_to_conservation(Thiago) \u2295 study_rare_species(Thiago)"
        },
        {
            "id": 0,
            "text": "If Thiago is a dedicated botanist, then he makes notable discoveries and contributes to conservation.",
            "fol": "p_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))",
            "str_fol": "dedicated_botanist(Thiago) \u2192 (make_notable_discoveries(Thiago) \u2227 contribute_to_conservation(Thiago))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Thiago",
            "text": "Thiago will achieve success.",
            "fol": "p_4(Thiago)",
            "str_fol": "achieve_success(Thiago)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Thiago",
            "text": "Thiago does not have knowledge.",
            "fol": "\u00acp_3(Thiago)",
            "str_fol": "\u00achave_knowledge(Thiago)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Thiago",
            "text": "Thiago is not curious.",
            "fol": "\u00acp_2(Thiago)",
            "str_fol": "\u00acis_curious(Thiago)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Thiago",
            "text": "Thiago does not collect samples.",
            "fol": "\u00acp_0(Thiago)",
            "str_fol": "\u00accollect_samples(Thiago)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Thiago",
            "text": "Thiago is a dedicated botanist.",
            "fol": "p_1(Thiago)",
            "str_fol": "dedicated_botanist(Thiago)",
            "negation": false
        },
        {
            "id": 5,
            "text": "If Thiago works hard, then he will achieve success.",
            "fol": "p_10(Thiago) \u2192 p_4(Thiago)",
            "str_fol": "work_hard(Thiago) \u2192 achieve_success(Thiago)"
        },
        {
            "id": 4,
            "text": "If Thiago makes new findings, then he has knowledge and works hard.",
            "fol": "p_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))",
            "str_fol": "make_new_findings(Thiago) \u2192 (have_knowledge(Thiago) \u2227 work_hard(Thiago))"
        },
        {
            "id": 3,
            "text": "If Thiago is curious, then he either collects samples or explores the wilderness, but not both.",
            "fol": "p_2(Thiago) \u2192 (p_0(Thiago) \u2295 p_8(Thiago))",
            "str_fol": "is_curious(Thiago) \u2192 (collect_samples(Thiago) \u2295 explore_wilderness(Thiago))"
        },
        {
            "id": 2,
            "text": "Anyone who explores the wilderness or studies rare species can make new findings.",
            "fol": "\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((explore_wilderness(x) \u2228 study_rare_species(x)) \u2192 make_new_findings(x))"
        },
        {
            "id": 1,
            "text": "Thiago either contributes to conservation or studies rare species, but not both.",
            "fol": "p_6(Thiago) \u2295 p_7(Thiago)",
            "str_fol": "contribute_to_conservation(Thiago) \u2295 study_rare_species(Thiago)"
        },
        {
            "id": 0,
            "text": "If Thiago is a dedicated botanist, then he makes notable discoveries and contributes to conservation.",
            "fol": "p_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))",
            "str_fol": "dedicated_botanist(Thiago) \u2192 (make_notable_discoveries(Thiago) \u2227 contribute_to_conservation(Thiago))"
        }
    ],
    "context_fol": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\np_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))\np_2(Thiago) \u2192 (p_0(Thiago) \u2295 p_8(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))",
    "conclusion": {
        "id": 8,
        "subject": "Thiago",
        "text": "Thiago makes notable discoveries.",
        "fol": "p_5(Thiago)",
        "str_fol": "make_notable_discoveries(Thiago)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Thiago)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Thiago",
                    "text": "Thiago will achieve success.",
                    "fol": "p_4(Thiago)",
                    "str_fol": "achieve_success(Thiago)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Thiago works hard, then he will achieve success.",
                    "fol": "p_10(Thiago) \u2192 p_4(Thiago)",
                    "str_fol": "work_hard(Thiago) \u2192 achieve_success(Thiago)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Thiago",
                    "text": "Thiago does not have knowledge.",
                    "fol": "\u00acp_3(Thiago)",
                    "str_fol": "\u00achave_knowledge(Thiago)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Thiago makes new findings, then he has knowledge and works hard.",
                    "fol": "p_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))",
                    "str_fol": "make_new_findings(Thiago) \u2192 (have_knowledge(Thiago) \u2227 work_hard(Thiago))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Thiago",
                "text": "Thiago does not make new findings.",
                "fol": "\u00acp_9(Thiago)",
                "str_fol": "\u00acmake_new_findings(Thiago)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Thiago",
                    "text": "Thiago is not curious.",
                    "fol": "\u00acp_2(Thiago)",
                    "str_fol": "\u00acis_curious(Thiago)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Thiago",
                    "text": "Thiago does not collect samples.",
                    "fol": "\u00acp_0(Thiago)",
                    "str_fol": "\u00accollect_samples(Thiago)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Thiago is curious, then he either collects samples or explores the wilderness, but not both.",
                    "fol": "p_2(Thiago) \u2192 (p_0(Thiago) \u2295 p_8(Thiago))",
                    "str_fol": "is_curious(Thiago) \u2192 (collect_samples(Thiago) \u2295 explore_wilderness(Thiago))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Thiago",
                    "text": "Thiago does not make new findings.",
                    "fol": "\u00acp_9(Thiago)",
                    "str_fol": "\u00acmake_new_findings(Thiago)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who explores the wilderness or studies rare species can make new findings.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((explore_wilderness(x) \u2228 study_rare_species(x)) \u2192 make_new_findings(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Thiago",
                "text": "Thiago does not study rare species.",
                "fol": "\u00acp_7(Thiago)",
                "str_fol": "\u00acstudy_rare_species(Thiago)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Thiago",
                    "text": "Thiago does not study rare species.",
                    "fol": "\u00acp_7(Thiago)",
                    "str_fol": "\u00acstudy_rare_species(Thiago)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Thiago either contributes to conservation or studies rare species, but not both.",
                    "fol": "p_6(Thiago) \u2295 p_7(Thiago)",
                    "str_fol": "contribute_to_conservation(Thiago) \u2295 study_rare_species(Thiago)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Thiago",
                "text": "Thiago contributes to conservation.",
                "fol": "p_6(Thiago)",
                "str_fol": "contribute_to_conservation(Thiago)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Thiago",
                    "text": "Thiago is a dedicated botanist.",
                    "fol": "p_1(Thiago)",
                    "str_fol": "dedicated_botanist(Thiago)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Thiago",
                    "text": "Thiago contributes to conservation.",
                    "fol": "p_6(Thiago)",
                    "str_fol": "contribute_to_conservation(Thiago)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Thiago is a dedicated botanist, then he makes notable discoveries and contributes to conservation.",
                    "fol": "p_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))",
                    "str_fol": "dedicated_botanist(Thiago) \u2192 (make_notable_discoveries(Thiago) \u2227 contribute_to_conservation(Thiago))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Thiago",
                "text": "Thiago makes notable discoveries.",
                "fol": "p_5(Thiago)",
                "str_fol": "make_notable_discoveries(Thiago)",
                "negation": false
            }
        }
    ],
    "proof_trace": "6 p_1(Thiago) -> p_5(Thiago) & p_6(Thiago).  [assumption].\n7 p_5(Thiago).  [goal].\n10 -p_1(Thiago) | p_5(Thiago).  [clausify(6)].\n11 p_1(Thiago).  [assumption].\n20 p_5(Thiago).  [resolve(10,a,11,a)].\n21 -p_5(Thiago).  [deny(7)].\n22 $F.  [resolve(20,a,21,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\n(p_9(Thiago) \u2192 p_3(Thiago)) \u2227 (p_9(Thiago) \u2192 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\np_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))\np_1(Thiago) \u2192 p_5(Thiago)\np_4(Thiago) \u2228 \u00acp_4(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago)",
                    "-p_3(Thiago)",
                    "-p_2(Thiago)",
                    "-p_0(Thiago)",
                    "p_1(Thiago)",
                    "p_10(Thiago) -> p_4(Thiago)",
                    "-p_4(Thiago) -> -p_10(Thiago)",
                    "(p_9(Thiago) -> p_3(Thiago)) & (p_9(Thiago) -> p_10(Thiago))",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & (-(p_0(Thiago) & p_8(Thiago))))",
                    "all x ((p_8(x) | p_7(x)) -> p_9(x))",
                    "-(p_6(Thiago) <-> p_7(Thiago))",
                    "p_6(Thiago) | p_7(Thiago)",
                    "p_1(Thiago) -> (p_5(Thiago) & p_6(Thiago))",
                    "p_1(Thiago) -> p_5(Thiago)",
                    "p_4(Thiago) | -p_4(Thiago)"
                ],
                "formulas(goals)": [
                    "p_5(Thiago)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Thiago) \u2228 p_7(Thiago)",
                    "p_4(Thiago) \u2228 \u00acp_4(Thiago)"
                ],
                "added_rules": [
                    "\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)",
                    "(p_9(Thiago) \u2192 p_3(Thiago)) \u2227 (p_9(Thiago) \u2192 p_10(Thiago))",
                    "p_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))",
                    "p_1(Thiago) \u2192 p_5(Thiago)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\np_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\np_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\n\u00ac(p_6(Thiago) \u2227 p_7(Thiago))\np_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))\np_1(Thiago) \u2192 p_5(Thiago)\np_4(Thiago) \u2228 \u00acp_4(Thiago)\np_4(Thiago) \u2228 \u00acp_10(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago).",
                    "-p_3(Thiago).",
                    "-p_2(Thiago).",
                    "-p_0(Thiago).",
                    "p_1(Thiago).",
                    "p_10(Thiago) -> p_4(Thiago).",
                    "-p_4(Thiago) -> -p_10(Thiago).",
                    "p_9(Thiago) -> (p_3(Thiago) & p_10(Thiago)).",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & -(p_0(Thiago) & p_8(Thiago))).",
                    "p_2(Thiago) -> (-(p_8(Thiago) <-> p_0(Thiago))).",
                    "all x ((p_8(x) | p_7(x)) -> p_9(x)).",
                    "-(p_6(Thiago) <-> p_7(Thiago)).",
                    "p_6(Thiago) | p_7(Thiago).",
                    "-(p_6(Thiago) & p_7(Thiago)).",
                    "p_1(Thiago) -> (p_5(Thiago) & p_6(Thiago)).",
                    "p_1(Thiago) -> p_5(Thiago).",
                    "p_4(Thiago) | -p_4(Thiago).",
                    "p_4(Thiago) | -p_10(Thiago)."
                ],
                "formulas(goals)": [
                    "p_5(Thiago)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))",
                    "\u00ac(p_6(Thiago) \u2227 p_7(Thiago))",
                    "p_4(Thiago) \u2228 \u00acp_10(Thiago)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\np_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\np_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\n\u00ac(p_6(Thiago) \u2227 p_7(Thiago))\np_4(Thiago) \u2228 \u00acp_4(Thiago)\np_4(Thiago) \u2228 \u00acp_10(Thiago)\np_4(Thiago) \u2192 \u00acp_5(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago)",
                    "-p_3(Thiago)",
                    "-p_2(Thiago)",
                    "-p_0(Thiago)",
                    "p_1(Thiago)",
                    "p_10(Thiago) -> p_4(Thiago)",
                    "-p_4(Thiago) -> -p_10(Thiago)",
                    "p_9(Thiago) -> (p_3(Thiago) & p_10(Thiago))",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & -(p_0(Thiago) & p_8(Thiago)))",
                    "p_2(Thiago) -> (-(p_8(Thiago) <-> p_0(Thiago)))",
                    "(all x ((p_8(x) | p_7(x)) -> p_9(x)))",
                    "-(p_6(Thiago) <-> p_7(Thiago))",
                    "p_6(Thiago) | p_7(Thiago)",
                    "-(p_6(Thiago) & p_7(Thiago))",
                    "p_4(Thiago) | -p_4(Thiago)",
                    "p_4(Thiago) | -p_10(Thiago)",
                    "p_4(Thiago) -> -p_5(Thiago)"
                ],
                "formulas(goals)": [
                    "-p_5(Thiago)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_1(Thiago) \u2192 (p_5(Thiago) \u2227 p_6(Thiago))",
                    "p_1(Thiago) \u2192 p_5(Thiago)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Thiago) \u2192 \u00acp_5(Thiago)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\np_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\np_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\n\u00ac(p_6(Thiago) \u2227 p_7(Thiago))\np_4(Thiago) \u2228 \u00acp_4(Thiago)\np_4(Thiago) \u2228 \u00acp_10(Thiago)\n(p_4(Thiago) \u2227 p_1(Thiago)) \u2192 p_5(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago).",
                    "-p_3(Thiago).",
                    "-p_2(Thiago).",
                    "-p_0(Thiago).",
                    "p_1(Thiago).",
                    "p_10(Thiago) -> p_4(Thiago).",
                    "-p_4(Thiago) -> -p_10(Thiago).",
                    "p_9(Thiago) -> (p_3(Thiago) & p_10(Thiago)).",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & (-p_0(Thiago) | -p_8(Thiago))).",
                    "p_2(Thiago) -> (-(p_8(Thiago) <-> p_0(Thiago))).",
                    "all x ((p_8(x) | p_7(x)) -> p_9(x)).",
                    "-(p_6(Thiago) <-> p_7(Thiago)).",
                    "p_6(Thiago) | p_7(Thiago).",
                    "-(p_6(Thiago) & p_7(Thiago)).",
                    "p_4(Thiago) | -p_4(Thiago).",
                    "p_4(Thiago) | -p_10(Thiago).",
                    "(p_4(Thiago) & p_1(Thiago)) -> p_5(Thiago)."
                ],
                "formulas(goals)": [
                    "p_5(Thiago)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Thiago) \u2192 \u00acp_5(Thiago)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_4(Thiago) \u2227 p_1(Thiago)) \u2192 p_5(Thiago)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\np_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\np_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\n\u00ac(p_6(Thiago) \u2227 p_7(Thiago))\np_4(Thiago) \u2228 \u00acp_4(Thiago)\np_4(Thiago) \u2228 \u00acp_10(Thiago)\n(p_4(Thiago) \u2227 p_1(Thiago)) \u2192 \u00acp_5(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago)",
                    "-p_3(Thiago)",
                    "-p_2(Thiago)",
                    "-p_0(Thiago)",
                    "p_1(Thiago)",
                    "p_10(Thiago) -> p_4(Thiago)",
                    "-p_4(Thiago) -> -p_10(Thiago)",
                    "p_9(Thiago) -> (p_3(Thiago) & p_10(Thiago))",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & -(p_0(Thiago) & p_8(Thiago)))",
                    "p_2(Thiago) -> (-(p_8(Thiago) <-> p_0(Thiago)))",
                    "all x ((p_8(x) | p_7(x)) -> p_9(x))",
                    "-(p_6(Thiago) <-> p_7(Thiago))",
                    "p_6(Thiago) | p_7(Thiago)",
                    "-(p_6(Thiago) & p_7(Thiago))",
                    "p_4(Thiago) | -p_4(Thiago)",
                    "p_4(Thiago) | -p_10(Thiago)",
                    "(p_4(Thiago) & p_1(Thiago)) -> -p_5(Thiago)"
                ],
                "formulas(goals)": [
                    "-p_5(Thiago)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_4(Thiago) \u2227 p_1(Thiago)) \u2192 p_5(Thiago)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_4(Thiago) \u2227 p_1(Thiago)) \u2192 \u00acp_5(Thiago)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\n(p_9(Thiago) \u2192 p_3(Thiago)) \u2227 (p_9(Thiago) \u2192 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\np_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\n\u00ac(p_6(Thiago) \u2227 p_7(Thiago))\np_4(Thiago) \u2228 \u00acp_4(Thiago)\np_4(Thiago) \u2228 \u00acp_10(Thiago)\n(p_4(Thiago) \u2227 p_1(Thiago)) \u2192 \u00acp_5(Thiago)\np_1(Thiago) \u2228 \u00acp_1(Thiago)\n(p_6(Thiago) \u2227 \u00acp_7(Thiago)) \u2228 (\u00acp_6(Thiago) \u2227 p_7(Thiago))\n\u00acp_0(Thiago) \u2228 p_0(Thiago)\np_1(Thiago) \u2228 p_1(Thiago)\n\u00acp_2(Thiago) \u2228 p_2(Thiago)\n\u00acp_3(Thiago) \u2228 p_3(Thiago)\np_4(Thiago) \u2228 p_4(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago)",
                    "-p_3(Thiago)",
                    "-p_2(Thiago)",
                    "-p_0(Thiago)",
                    "p_1(Thiago)",
                    "p_10(Thiago) -> p_4(Thiago)",
                    "-p_4(Thiago) -> -p_10(Thiago)",
                    "(p_9(Thiago) -> p_3(Thiago)) & (p_9(Thiago) -> p_10(Thiago))",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & -(p_0(Thiago) & p_8(Thiago)))",
                    "p_2(Thiago) -> (-(p_8(Thiago) <-> p_0(Thiago)))",
                    "all x ((p_8(x) | p_7(x)) -> p_9(x))",
                    "-(p_6(Thiago) <-> p_7(Thiago))",
                    "p_6(Thiago) | p_7(Thiago)",
                    "-(p_6(Thiago) & p_7(Thiago))",
                    "p_4(Thiago) | -p_4(Thiago)",
                    "p_4(Thiago) | -p_10(Thiago)",
                    "(p_4(Thiago) & p_1(Thiago)) -> -p_5(Thiago)",
                    "p_1(Thiago) | -p_1(Thiago)",
                    "(p_6(Thiago) & -p_7(Thiago)) | (-p_6(Thiago) & p_7(Thiago))",
                    "-p_0(Thiago) | p_0(Thiago)",
                    "p_1(Thiago) | p_1(Thiago)",
                    "-p_2(Thiago) | p_2(Thiago)",
                    "-p_3(Thiago) | p_3(Thiago)",
                    "p_4(Thiago) | p_4(Thiago)"
                ],
                "formulas(goals)": [
                    "-p_5(Thiago)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Thiago) \u2192 (p_3(Thiago) \u2227 p_10(Thiago))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_9(Thiago) \u2192 p_3(Thiago)) \u2227 (p_9(Thiago) \u2192 p_10(Thiago))",
                    "p_1(Thiago) \u2228 \u00acp_1(Thiago)",
                    "(p_6(Thiago) \u2227 \u00acp_7(Thiago)) \u2228 (\u00acp_6(Thiago) \u2227 p_7(Thiago))",
                    "\u00acp_0(Thiago) \u2228 p_0(Thiago)",
                    "p_1(Thiago) \u2228 p_1(Thiago)",
                    "\u00acp_2(Thiago) \u2228 p_2(Thiago)",
                    "\u00acp_3(Thiago) \u2228 p_3(Thiago)",
                    "p_4(Thiago) \u2228 p_4(Thiago)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thiago)\n\u00acp_3(Thiago)\n\u00acp_2(Thiago)\n\u00acp_0(Thiago)\np_1(Thiago)\np_10(Thiago) \u2192 p_4(Thiago)\n\u00acp_4(Thiago) \u2192 \u00acp_10(Thiago)\n(p_9(Thiago) \u2192 p_3(Thiago)) \u2227 (p_9(Thiago) \u2192 p_10(Thiago))\np_2(Thiago) \u2192 ((p_0(Thiago) \u2228 p_8(Thiago)) \u2227 \u00ac(p_0(Thiago) \u2227 p_8(Thiago)))\np_2(Thiago) \u2192 (p_8(Thiago) \u2295 p_0(Thiago))\n\u2200x ((p_8(x) \u2228 p_7(x)) \u2192 p_9(x))\np_6(Thiago) \u2295 p_7(Thiago)\np_6(Thiago) \u2228 p_7(Thiago)\n\u00ac(p_6(Thiago) \u2227 p_7(Thiago))\np_4(Thiago) \u2228 \u00acp_4(Thiago)\np_4(Thiago) \u2228 \u00acp_10(Thiago)\n(\u00acp_4(Thiago) \u2227 p_1(Thiago)) \u2192 \u00acp_5(Thiago)\np_1(Thiago) \u2228 \u00acp_1(Thiago)\n(p_6(Thiago) \u2227 \u00acp_7(Thiago)) \u2228 (\u00acp_6(Thiago) \u2227 p_7(Thiago))\n\u00acp_0(Thiago) \u2228 p_0(Thiago)\np_1(Thiago) \u2228 p_1(Thiago)\n\u00acp_2(Thiago) \u2228 p_2(Thiago)\n\u00acp_3(Thiago) \u2228 p_3(Thiago)\np_4(Thiago) \u2228 p_4(Thiago)\np_4(Thiago) \u2192 p_5(Thiago)",
            "Initial Goal": "p_5(Thiago)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thiago)",
                    "-p_3(Thiago)",
                    "-p_2(Thiago)",
                    "-p_0(Thiago)",
                    "p_1(Thiago)",
                    "p_10(Thiago) -> p_4(Thiago)",
                    "-p_4(Thiago) -> -p_10(Thiago)",
                    "(p_9(Thiago) -> p_3(Thiago)) & (p_9(Thiago) -> p_10(Thiago))",
                    "p_2(Thiago) -> ((p_0(Thiago) | p_8(Thiago)) & -(p_0(Thiago) & p_8(Thiago)))",
                    "p_2(Thiago) -> (-(p_8(Thiago) <-> p_0(Thiago)))",
                    "all x ((p_8(x) | p_7(x)) -> p_9(x))",
                    "-(p_6(Thiago) <-> p_7(Thiago))",
                    "p_6(Thiago) | p_7(Thiago)",
                    "-(p_6(Thiago) & p_7(Thiago))",
                    "p_4(Thiago) | -p_4(Thiago)",
                    "p_4(Thiago) | -p_10(Thiago)",
                    "(-p_4(Thiago) & p_1(Thiago)) -> -p_5(Thiago)",
                    "p_1(Thiago) | -p_1(Thiago)",
                    "(p_6(Thiago) & -p_7(Thiago)) | (-p_6(Thiago) & p_7(Thiago))",
                    "-p_0(Thiago) | p_0(Thiago)",
                    "p_1(Thiago) | p_1(Thiago)",
                    "-p_2(Thiago) | p_2(Thiago)",
                    "-p_3(Thiago) | p_3(Thiago)",
                    "p_4(Thiago) | p_4(Thiago)",
                    "p_4(Thiago) -> p_5(Thiago)"
                ],
                "formulas(goals)": [
                    "p_5(Thiago)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        }
    ]
}