{
    "background_story": "Roland, a former army captain, embodied the concept of strength in every aspect of his life. Physically, he was an imposing figure, with a chiseled physique honed from years of rigorous training. But his true strength lay in his character - his unwavering courage, unshakeable resolve, and compassionate heart. After leaving the military, Roland dedicated his life to helping others, becoming a volunteer firefighter and a mentor to at-risk youth. His strength inspired those around him, and he became a pillar of his community. Whether rescuing people from burning buildings or providing a shoulder to cry on, Roland's strength was a beacon of hope and a reminder that true power comes from within.",
    "predicates": [
        {
            "id": 0,
            "name": "stays_calm"
        },
        {
            "id": 1,
            "name": "is_selfless"
        },
        {
            "id": 2,
            "name": "takes_risks"
        },
        {
            "id": 3,
            "name": "learns_quickly"
        },
        {
            "id": 4,
            "name": "has_compassion"
        },
        {
            "id": 5,
            "name": "inspires_others"
        },
        {
            "id": 6,
            "name": "physically_strong"
        },
        {
            "id": 7,
            "name": "emotionally_resilient"
        },
        {
            "id": 8,
            "name": "is_disciplined"
        },
        {
            "id": 9,
            "name": "is_adaptable"
        },
        {
            "id": 10,
            "name": "stays_focused"
        },
        {
            "id": 11,
            "name": "leads_others"
        },
        {
            "id": 12,
            "name": "faces_challenges"
        },
        {
            "id": 13,
            "name": "helps_others"
        },
        {
            "id": 14,
            "name": "has_courage"
        },
        {
            "id": 15,
            "name": "is_confident"
        },
        {
            "id": 16,
            "name": "stays_fit"
        },
        {
            "id": 17,
            "name": "sets_goals"
        },
        {
            "id": 18,
            "name": "makes_progress"
        },
        {
            "id": 19,
            "name": "thinks_critically"
        },
        {
            "id": 20,
            "name": "acts_decisively"
        },
        {
            "id": 21,
            "name": "makes_plans"
        },
        {
            "id": 22,
            "name": "has_experience"
        },
        {
            "id": 23,
            "name": "is_determined"
        },
        {
            "id": 24,
            "name": "has_heart"
        },
        {
            "id": 25,
            "name": "gives_guidance"
        },
        {
            "id": 26,
            "name": "serves_community"
        },
        {
            "id": 27,
            "name": "stands_tall"
        },
        {
            "id": 28,
            "name": "speaks_truth"
        }
    ],
    "subject_name": "Roland",
    "subject_category": "human",
    "keyword": "strength",
    "all_facts": [
        {
            "id": 0,
            "subject": "Roland",
            "text": "Roland stays calm.",
            "fol": "p_0(Roland)",
            "str_fol": "stays_calm(Roland)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Roland",
            "text": "Roland is selfless.",
            "fol": "p_1(Roland)",
            "str_fol": "is_selfless(Roland)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Roland",
            "text": "Roland takes risks.",
            "fol": "p_2(Roland)",
            "str_fol": "takes_risks(Roland)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Roland",
            "text": "Roland does not learn quickly.",
            "fol": "\u00acp_3(Roland)",
            "str_fol": "\u00aclearns_quickly(Roland)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Roland",
            "text": "Roland does not have compassion.",
            "fol": "\u00acp_4(Roland)",
            "str_fol": "\u00achas_compassion(Roland)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Roland",
            "text": "Roland does not inspire others.",
            "fol": "\u00acp_5(Roland)",
            "str_fol": "\u00acinspires_others(Roland)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Roland",
            "text": "Roland does not have courage.",
            "fol": "\u00acp_14(Roland)",
            "str_fol": "\u00achas_courage(Roland)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Roland",
            "text": "Roland does not lead others.",
            "fol": "\u00acp_11(Roland)",
            "str_fol": "\u00acleads_others(Roland)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Roland",
            "text": "Roland does not help others.",
            "fol": "\u00acp_13(Roland)",
            "str_fol": "\u00achelps_others(Roland)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Roland",
            "text": "Roland faces challenges.",
            "fol": "p_12(Roland)",
            "str_fol": "faces_challenges(Roland)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Roland",
            "text": "Roland stays focused.",
            "fol": "p_10(Roland)",
            "str_fol": "stays_focused(Roland)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Roland",
            "text": "Roland is not adaptable.",
            "fol": "\u00acp_9(Roland)",
            "str_fol": "\u00acis_adaptable(Roland)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Roland",
            "text": "Roland is disciplined.",
            "fol": "p_8(Roland)",
            "str_fol": "is_disciplined(Roland)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Roland",
            "text": "Roland is emotionally resilient.",
            "fol": "p_7(Roland)",
            "str_fol": "emotionally_resilient(Roland)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Roland",
            "text": "Roland is physically strong.",
            "fol": "p_6(Roland)",
            "str_fol": "physically_strong(Roland)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Roland",
            "text": "Roland does not inspire others.",
            "fol": "\u00acp_5(Roland)",
            "str_fol": "\u00acinspires_others(Roland)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Roland",
            "text": "Roland does not have compassion.",
            "fol": "\u00acp_4(Roland)",
            "str_fol": "\u00achas_compassion(Roland)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Roland",
            "text": "Roland is selfless.",
            "fol": "p_1(Roland)",
            "str_fol": "is_selfless(Roland)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Roland",
            "text": "Roland takes risks.",
            "fol": "p_2(Roland)",
            "str_fol": "takes_risks(Roland)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Roland",
            "text": "Roland does not learn quickly.",
            "fol": "\u00acp_3(Roland)",
            "str_fol": "\u00aclearns_quickly(Roland)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Roland",
            "text": "Roland stays calm.",
            "fol": "p_0(Roland)",
            "str_fol": "stays_calm(Roland)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Any person who has courage or is confident can inspire others.",
            "fol": "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((has_courage(x) \u2228 is_confident(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 7,
            "text": "Anyone who leads others has either courage or compassion (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_14(x) \u2228 p_4(x)))",
            "str_fol": "\u2200x (leads_others(x) \u2192 (has_courage(x) \u2228 has_compassion(x)))"
        },
        {
            "id": 6,
            "text": "Roland is either selfless or helps others, but not necessarily both.",
            "fol": "p_1(Roland) \u2295 p_13(Roland)",
            "str_fol": "is_selfless(Roland) \u2295 helps_others(Roland)"
        },
        {
            "id": 5,
            "text": "Everyone who takes risks either learns quickly or faces challenges (or both).",
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (takes_risks(x) \u2192 (learns_quickly(x) \u2228 faces_challenges(x)))"
        },
        {
            "id": 4,
            "text": "Roland either stays focused or helps others.",
            "fol": "p_10(Roland) \u2228 p_13(Roland)",
            "str_fol": "stays_focused(Roland) \u2228 helps_others(Roland)"
        },
        {
            "id": 3,
            "text": "If Roland faces challenges, then he is either adaptable or stays calm, but not both.",
            "fol": "p_12(Roland) \u2192 (p_9(Roland) \u2295 p_0(Roland))",
            "str_fol": "faces_challenges(Roland) \u2192 (is_adaptable(Roland) \u2295 stays_calm(Roland))"
        },
        {
            "id": 2,
            "text": "If Roland is either disciplined or stays focused (but not both), then he leads others.",
            "fol": "(p_8(Roland) \u2295 p_10(Roland)) \u2192 p_11(Roland)",
            "str_fol": "(is_disciplined(Roland) \u2295 stays_focused(Roland)) \u2192 leads_others(Roland)"
        },
        {
            "id": 1,
            "text": "If Roland is disciplined, then he is either adaptable or emotionally resilient, but not both.",
            "fol": "p_8(Roland) \u2192 (p_9(Roland) \u2295 p_7(Roland))",
            "str_fol": "is_disciplined(Roland) \u2192 (is_adaptable(Roland) \u2295 emotionally_resilient(Roland))"
        },
        {
            "id": 0,
            "text": "Roland is either physically strong or emotionally resilient (or both).",
            "fol": "p_6(Roland) \u2228 p_7(Roland)",
            "str_fol": "physically_strong(Roland) \u2228 emotionally_resilient(Roland)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Roland",
            "text": "Roland does not inspire others.",
            "fol": "\u00acp_5(Roland)",
            "str_fol": "\u00acinspires_others(Roland)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Roland",
            "text": "Roland does not have compassion.",
            "fol": "\u00acp_4(Roland)",
            "str_fol": "\u00achas_compassion(Roland)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Roland",
            "text": "Roland is selfless.",
            "fol": "p_1(Roland)",
            "str_fol": "is_selfless(Roland)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Roland",
            "text": "Roland takes risks.",
            "fol": "p_2(Roland)",
            "str_fol": "takes_risks(Roland)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Roland",
            "text": "Roland does not learn quickly.",
            "fol": "\u00acp_3(Roland)",
            "str_fol": "\u00aclearns_quickly(Roland)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Roland",
            "text": "Roland stays calm.",
            "fol": "p_0(Roland)",
            "str_fol": "stays_calm(Roland)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Any person who has courage or is confident can inspire others.",
            "fol": "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((has_courage(x) \u2228 is_confident(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 7,
            "text": "Anyone who leads others has either courage or compassion (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_14(x) \u2228 p_4(x)))",
            "str_fol": "\u2200x (leads_others(x) \u2192 (has_courage(x) \u2228 has_compassion(x)))"
        },
        {
            "id": 6,
            "text": "Roland is either selfless or helps others, but not necessarily both.",
            "fol": "p_1(Roland) \u2295 p_13(Roland)",
            "str_fol": "is_selfless(Roland) \u2295 helps_others(Roland)"
        },
        {
            "id": 5,
            "text": "Everyone who takes risks either learns quickly or faces challenges (or both).",
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (takes_risks(x) \u2192 (learns_quickly(x) \u2228 faces_challenges(x)))"
        },
        {
            "id": 4,
            "text": "Roland either stays focused or helps others.",
            "fol": "p_10(Roland) \u2228 p_13(Roland)",
            "str_fol": "stays_focused(Roland) \u2228 helps_others(Roland)"
        },
        {
            "id": 3,
            "text": "If Roland faces challenges, then he is either adaptable or stays calm, but not both.",
            "fol": "p_12(Roland) \u2192 (p_9(Roland) \u2295 p_0(Roland))",
            "str_fol": "faces_challenges(Roland) \u2192 (is_adaptable(Roland) \u2295 stays_calm(Roland))"
        },
        {
            "id": 2,
            "text": "If Roland is either disciplined or stays focused (but not both), then he leads others.",
            "fol": "(p_8(Roland) \u2295 p_10(Roland)) \u2192 p_11(Roland)",
            "str_fol": "(is_disciplined(Roland) \u2295 stays_focused(Roland)) \u2192 leads_others(Roland)"
        },
        {
            "id": 1,
            "text": "If Roland is disciplined, then he is either adaptable or emotionally resilient, but not both.",
            "fol": "p_8(Roland) \u2192 (p_9(Roland) \u2295 p_7(Roland))",
            "str_fol": "is_disciplined(Roland) \u2192 (is_adaptable(Roland) \u2295 emotionally_resilient(Roland))"
        },
        {
            "id": 0,
            "text": "Roland is either physically strong or emotionally resilient (or both).",
            "fol": "p_6(Roland) \u2228 p_7(Roland)",
            "str_fol": "physically_strong(Roland) \u2228 emotionally_resilient(Roland)"
        }
    ],
    "context_fol": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_5(x))\n\u2200x (p_11(x) \u2192 (p_14(x) \u2228 p_4(x)))\np_1(Roland) \u2295 p_13(Roland)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_12(x)))\np_10(Roland) \u2228 p_13(Roland)\np_12(Roland) \u2192 (p_9(Roland) \u2295 p_0(Roland))\n(p_8(Roland) \u2295 p_10(Roland)) \u2192 p_11(Roland)\np_8(Roland) \u2192 (p_9(Roland) \u2295 p_7(Roland))\np_6(Roland) \u2228 p_7(Roland)",
    "conclusion": {
        "id": 14,
        "subject": "Roland",
        "text": "Roland is physically strong.",
        "fol": "p_6(Roland)",
        "str_fol": "physically_strong(Roland)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Roland)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Roland",
                    "text": "Roland does not inspire others.",
                    "fol": "\u00acp_5(Roland)",
                    "str_fol": "\u00acinspires_others(Roland)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Any person who has courage or is confident can inspire others.",
                    "fol": "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((has_courage(x) \u2228 is_confident(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Roland",
                "text": "Roland does not have courage.",
                "fol": "\u00acp_14(Roland)",
                "str_fol": "\u00achas_courage(Roland)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Roland",
                    "text": "Roland does not have courage.",
                    "fol": "\u00acp_14(Roland)",
                    "str_fol": "\u00achas_courage(Roland)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Roland",
                    "text": "Roland does not have compassion.",
                    "fol": "\u00acp_4(Roland)",
                    "str_fol": "\u00achas_compassion(Roland)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who leads others has either courage or compassion (or both).",
                    "fol": "\u2200x (p_11(x) \u2192 (p_14(x) \u2228 p_4(x)))",
                    "str_fol": "\u2200x (leads_others(x) \u2192 (has_courage(x) \u2228 has_compassion(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Roland",
                "text": "Roland does not lead others.",
                "fol": "\u00acp_11(Roland)",
                "str_fol": "\u00acleads_others(Roland)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Roland",
                    "text": "Roland is selfless.",
                    "fol": "p_1(Roland)",
                    "str_fol": "is_selfless(Roland)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Roland is either selfless or helps others, but not necessarily both.",
                    "fol": "p_1(Roland) \u2295 p_13(Roland)",
                    "str_fol": "is_selfless(Roland) \u2295 helps_others(Roland)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Roland",
                "text": "Roland does not help others.",
                "fol": "\u00acp_13(Roland)",
                "str_fol": "\u00achelps_others(Roland)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Roland",
                    "text": "Roland takes risks.",
                    "fol": "p_2(Roland)",
                    "str_fol": "takes_risks(Roland)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Roland",
                    "text": "Roland does not learn quickly.",
                    "fol": "\u00acp_3(Roland)",
                    "str_fol": "\u00aclearns_quickly(Roland)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone who takes risks either learns quickly or faces challenges (or both).",
                    "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (takes_risks(x) \u2192 (learns_quickly(x) \u2228 faces_challenges(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Roland",
                "text": "Roland faces challenges.",
                "fol": "p_12(Roland)",
                "str_fol": "faces_challenges(Roland)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Roland",
                    "text": "Roland does not help others.",
                    "fol": "\u00acp_13(Roland)",
                    "str_fol": "\u00achelps_others(Roland)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Roland either stays focused or helps others.",
                    "fol": "p_10(Roland) \u2228 p_13(Roland)",
                    "str_fol": "stays_focused(Roland) \u2228 helps_others(Roland)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Roland",
                "text": "Roland stays focused.",
                "fol": "p_10(Roland)",
                "str_fol": "stays_focused(Roland)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Roland",
                    "text": "Roland faces challenges.",
                    "fol": "p_12(Roland)",
                    "str_fol": "faces_challenges(Roland)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Roland",
                    "text": "Roland stays calm.",
                    "fol": "p_0(Roland)",
                    "str_fol": "stays_calm(Roland)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Roland faces challenges, then he is either adaptable or stays calm, but not both.",
                    "fol": "p_12(Roland) \u2192 (p_9(Roland) \u2295 p_0(Roland))",
                    "str_fol": "faces_challenges(Roland) \u2192 (is_adaptable(Roland) \u2295 stays_calm(Roland))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Roland",
                "text": "Roland is not adaptable.",
                "fol": "\u00acp_9(Roland)",
                "str_fol": "\u00acis_adaptable(Roland)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Roland",
                    "text": "Roland stays focused.",
                    "fol": "p_10(Roland)",
                    "str_fol": "stays_focused(Roland)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Roland",
                    "text": "Roland does not lead others.",
                    "fol": "\u00acp_11(Roland)",
                    "str_fol": "\u00acleads_others(Roland)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Roland is either disciplined or stays focused (but not both), then he leads others.",
                    "fol": "(p_8(Roland) \u2295 p_10(Roland)) \u2192 p_11(Roland)",
                    "str_fol": "(is_disciplined(Roland) \u2295 stays_focused(Roland)) \u2192 leads_others(Roland)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Roland",
                "text": "Roland is disciplined.",
                "fol": "p_8(Roland)",
                "str_fol": "is_disciplined(Roland)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Roland",
                    "text": "Roland is disciplined.",
                    "fol": "p_8(Roland)",
                    "str_fol": "is_disciplined(Roland)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Roland",
                    "text": "Roland is not adaptable.",
                    "fol": "\u00acp_9(Roland)",
                    "str_fol": "\u00acis_adaptable(Roland)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Roland is disciplined, then he is either adaptable or emotionally resilient, but not both.",
                    "fol": "p_8(Roland) \u2192 (p_9(Roland) \u2295 p_7(Roland))",
                    "str_fol": "is_disciplined(Roland) \u2192 (is_adaptable(Roland) \u2295 emotionally_resilient(Roland))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Roland",
                "text": "Roland is emotionally resilient.",
                "fol": "p_7(Roland)",
                "str_fol": "emotionally_resilient(Roland)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Roland",
                    "text": "Roland is emotionally resilient.",
                    "fol": "p_7(Roland)",
                    "str_fol": "emotionally_resilient(Roland)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Roland is either physically strong or emotionally resilient (or both).",
                    "fol": "p_6(Roland) \u2228 p_7(Roland)",
                    "str_fol": "physically_strong(Roland) \u2228 emotionally_resilient(Roland)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_5(x))\n\u2200x (p_11(x) \u2192 (p_14(x) \u2228 p_4(x)))\np_1(Roland) \u2295 p_13(Roland)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_12(x)))\np_10(Roland) \u2228 p_13(Roland)\np_12(Roland) \u2192 (p_9(Roland) \u2295 p_0(Roland))\n(p_8(Roland) \u2295 p_10(Roland)) \u2192 p_11(Roland)\np_8(Roland) \u2192 (p_9(Roland) \u2295 p_7(Roland))\np_6(Roland) \u2228 p_7(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland).",
                    "-p_4(Roland).",
                    "p_1(Roland).",
                    "p_2(Roland).",
                    "-p_3(Roland).",
                    "p_0(Roland).",
                    "all x ((p_14(x) | p_15(x)) -> p_5(x)).",
                    "all x (p_11(x) -> (p_14(x) | p_4(x))).",
                    "-(p_1(Roland) <-> p_13(Roland)).",
                    "all x (p_2(x) -> (p_3(x) | p_12(x))).",
                    "p_10(Roland) | p_13(Roland).",
                    "p_12(Roland) -> (-(p_9(Roland) <-> p_0(Roland))).",
                    "(-(p_8(Roland) <-> p_10(Roland))) -> p_11(Roland).",
                    "p_8(Roland) -> (-(p_9(Roland) <-> p_7(Roland))).",
                    "p_6(Roland) | p_7(Roland).",
                    "-p_7(Roland)."
                ],
                "formulas(goals)": [
                    "p_6(Roland)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Roland)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x ((\u00acp_14(x) \u2227 \u00acp_4(x)) \u2192 \u00acp_11(x))\n(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))\n\u2200x ((\u00acp_3(x) \u2227 \u00acp_12(x)) \u2192 \u00acp_2(x))\np_10(Roland) \u2228 p_13(Roland)\n(p_9(Roland) \u2194 p_0(Roland)) \u2192 \u00acp_12(Roland)\n\u00acp_11(Roland) \u2192 (p_8(Roland) \u2194 p_10(Roland))\n(p_9(Roland) \u2194 p_7(Roland)) \u2192 \u00acp_8(Roland)\np_6(Roland) \u2228 p_7(Roland)\np_6(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland).",
                    "-p_4(Roland).",
                    "p_1(Roland).",
                    "p_2(Roland).",
                    "-p_3(Roland).",
                    "p_0(Roland).",
                    "all x (-p_5(x) -> (-p_14(x) & -p_15(x))).",
                    "all x ((-p_14(x) & -p_4(x)) -> -p_11(x)).",
                    "(p_1(Roland) | p_13(Roland)) & (-p_1(Roland) | -p_13(Roland)).",
                    "all x ((-p_3(x) & -p_12(x)) -> -p_2(x)).",
                    "p_10(Roland) | p_13(Roland).",
                    "(p_9(Roland) <-> p_0(Roland)) -> -p_12(Roland).",
                    "-p_11(Roland) -> (p_8(Roland) <-> p_10(Roland)).",
                    "(p_9(Roland) <-> p_7(Roland)) -> -p_8(Roland).",
                    "p_6(Roland) | p_7(Roland).",
                    "p_6(Roland)."
                ],
                "formulas(goals)": [
                    "p_6(Roland)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_5(x))",
                    "\u2200x (p_11(x) \u2192 (p_14(x) \u2228 p_4(x)))",
                    "p_1(Roland) \u2295 p_13(Roland)",
                    "\u2200x (p_2(x) \u2192 (p_3(x) \u2228 p_12(x)))",
                    "p_12(Roland) \u2192 (p_9(Roland) \u2295 p_0(Roland))",
                    "(p_8(Roland) \u2295 p_10(Roland)) \u2192 p_11(Roland)",
                    "p_8(Roland) \u2192 (p_9(Roland) \u2295 p_7(Roland))"
                ],
                "added_facts": [
                    "p_6(Roland)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_5(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))",
                    "\u2200x ((\u00acp_14(x) \u2227 \u00acp_4(x)) \u2192 \u00acp_11(x))",
                    "(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))",
                    "\u2200x ((\u00acp_3(x) \u2227 \u00acp_12(x)) \u2192 \u00acp_2(x))",
                    "(p_9(Roland) \u2194 p_0(Roland)) \u2192 \u00acp_12(Roland)",
                    "\u00acp_11(Roland) \u2192 (p_8(Roland) \u2194 p_10(Roland))",
                    "(p_9(Roland) \u2194 p_7(Roland)) \u2192 \u00acp_8(Roland)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x (p_5(x) \u2228 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_14(x) \u2228 p_4(x) \u2228 \u00acp_11(x))\n(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))\np_1(Roland) \u2194 \u00acp_13(Roland)\n\u2200x (p_3(x) \u2228 p_12(x) \u2228 \u00acp_2(x))\np_10(Roland) \u2228 p_13(Roland)\n\u00ac(p_9(Roland) \u2194 p_0(Roland)) \u2228 \u00acp_12(Roland)\np_11(Roland) \u2228 (p_8(Roland) \u2194 p_10(Roland))\n\u00ac(p_9(Roland) \u2194 p_7(Roland)) \u2228 \u00acp_8(Roland)\np_6(Roland) \u2228 p_7(Roland)\np_6(Roland)\np_6(Roland) \u2228 p_6(Roland)\np_6(Roland) \u2228 \u00acp_6(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland)",
                    "-p_4(Roland)",
                    "p_1(Roland)",
                    "p_2(Roland)",
                    "-p_3(Roland)",
                    "p_0(Roland)",
                    "all x (p_5(x) | (-p_14(x) & -p_15(x)))",
                    "all x (p_14(x) | p_4(x) | -p_11(x))",
                    "(p_1(Roland) | p_13(Roland)) & (-p_1(Roland) | -p_13(Roland))",
                    "p_1(Roland) <-> -p_13(Roland)",
                    "all x (p_3(x) | p_12(x) | -p_2(x))",
                    "p_10(Roland) | p_13(Roland)",
                    "(-(p_9(Roland) <-> p_0(Roland))) | -p_12(Roland)",
                    "p_11(Roland) | (p_8(Roland) <-> p_10(Roland))",
                    "(-(p_9(Roland) <-> p_7(Roland))) | -p_8(Roland)",
                    "p_6(Roland) | p_7(Roland)",
                    "p_6(Roland)",
                    "p_6(Roland) | p_6(Roland)",
                    "p_6(Roland) | -p_6(Roland)"
                ],
                "formulas(goals)": [
                    "p_6(Roland)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_5(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))",
                    "\u2200x ((\u00acp_14(x) \u2227 \u00acp_4(x)) \u2192 \u00acp_11(x))",
                    "\u2200x ((\u00acp_3(x) \u2227 \u00acp_12(x)) \u2192 \u00acp_2(x))",
                    "(p_9(Roland) \u2194 p_0(Roland)) \u2192 \u00acp_12(Roland)",
                    "\u00acp_11(Roland) \u2192 (p_8(Roland) \u2194 p_10(Roland))",
                    "(p_9(Roland) \u2194 p_7(Roland)) \u2192 \u00acp_8(Roland)"
                ],
                "added_facts": [
                    "p_6(Roland) \u2228 p_6(Roland)",
                    "p_6(Roland) \u2228 \u00acp_6(Roland)"
                ],
                "added_rules": [
                    "\u2200x (p_5(x) \u2228 (\u00acp_14(x) \u2227 \u00acp_15(x)))",
                    "\u2200x (p_14(x) \u2228 p_4(x) \u2228 \u00acp_11(x))",
                    "p_1(Roland) \u2194 \u00acp_13(Roland)",
                    "\u2200x (p_3(x) \u2228 p_12(x) \u2228 \u00acp_2(x))",
                    "\u00ac(p_9(Roland) \u2194 p_0(Roland)) \u2228 \u00acp_12(Roland)",
                    "p_11(Roland) \u2228 (p_8(Roland) \u2194 p_10(Roland))",
                    "\u00ac(p_9(Roland) \u2194 p_7(Roland)) \u2228 \u00acp_8(Roland)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x (p_5(x) \u2228 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_14(x) \u2228 p_4(x) \u2228 \u00acp_11(x))\n(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))\np_1(Roland) \u2194 \u00acp_13(Roland)\n\u2200x (p_3(x) \u2228 p_12(x) \u2228 \u00acp_2(x))\np_10(Roland) \u2228 p_13(Roland)\n\u00ac(p_9(Roland) \u2194 p_0(Roland)) \u2228 \u00acp_12(Roland)\np_11(Roland) \u2228 (p_8(Roland) \u2194 p_10(Roland))\n\u00ac(p_9(Roland) \u2194 p_7(Roland)) \u2228 \u00acp_8(Roland)\np_6(Roland) \u2228 p_7(Roland)\np_6(Roland) \u2228 \u00acp_6(Roland)\np_6(Roland) \u2192 p_5(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland)",
                    "-p_4(Roland)",
                    "p_1(Roland)",
                    "p_2(Roland)",
                    "-p_3(Roland)",
                    "p_0(Roland)",
                    "all x (p_5(x) | (-p_14(x) & -p_15(x)))",
                    "all x (p_14(x) | p_4(x) | -p_11(x))",
                    "(p_1(Roland) | p_13(Roland)) & (-p_1(Roland) | -p_13(Roland))",
                    "p_1(Roland) <-> -p_13(Roland)",
                    "all x (p_3(x) | p_12(x) | -p_2(x))",
                    "p_10(Roland) | p_13(Roland)",
                    "-(p_9(Roland) <-> p_0(Roland)) | -p_12(Roland)",
                    "p_11(Roland) | (p_8(Roland) <-> p_10(Roland))",
                    "-(p_9(Roland) <-> p_7(Roland)) | -p_8(Roland)",
                    "p_6(Roland) | p_7(Roland)",
                    "p_6(Roland) | -p_6(Roland)",
                    "p_6(Roland) -> p_5(Roland)"
                ],
                "formulas(goals)": [
                    "-p_6(Roland)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Roland)",
                    "p_6(Roland) \u2228 p_6(Roland)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Roland) \u2192 p_5(Roland)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x (p_5(x) \u2228 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_14(x) \u2228 p_4(x) \u2228 \u00acp_11(x))\n(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))\np_1(Roland) \u2194 \u00acp_13(Roland)\n\u2200x (p_3(x) \u2228 p_12(x) \u2228 \u00acp_2(x))\np_10(Roland) \u2228 p_13(Roland)\n\u00ac(p_9(Roland) \u2194 p_0(Roland)) \u2228 \u00acp_12(Roland)\np_11(Roland) \u2228 (p_8(Roland) \u2194 p_10(Roland))\n\u00ac(p_9(Roland) \u2194 p_7(Roland)) \u2228 \u00acp_8(Roland)\np_6(Roland) \u2228 p_7(Roland)\np_6(Roland) \u2228 \u00acp_6(Roland)\np_2(Roland) \u2192 p_6(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland)",
                    "-p_4(Roland)",
                    "p_1(Roland)",
                    "p_2(Roland)",
                    "-p_3(Roland)",
                    "p_0(Roland)",
                    "all x (p_5(x) | (-p_14(x) & -p_15(x)))",
                    "all x (p_14(x) | p_4(x) | -p_11(x))",
                    "(p_1(Roland) | p_13(Roland)) & (-p_1(Roland) | -p_13(Roland))",
                    "p_1(Roland) <-> -p_13(Roland)",
                    "all x (p_3(x) | p_12(x) | -p_2(x))",
                    "p_10(Roland) | p_13(Roland)",
                    "-(p_9(Roland) <-> p_0(Roland)) | -p_12(Roland)",
                    "p_11(Roland) | (p_8(Roland) <-> p_10(Roland))",
                    "-(p_9(Roland) <-> p_7(Roland)) | -p_8(Roland)",
                    "p_6(Roland) | p_7(Roland)",
                    "p_6(Roland) | -p_6(Roland)",
                    "p_2(Roland) -> p_6(Roland)"
                ],
                "formulas(goals)": [
                    "p_6(Roland)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Roland) \u2192 p_5(Roland)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Roland) \u2192 p_6(Roland)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x (p_5(x) \u2228 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_14(x) \u2228 p_4(x) \u2228 \u00acp_11(x))\n(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))\np_1(Roland) \u2194 \u00acp_13(Roland)\n\u2200x (p_3(x) \u2228 p_12(x) \u2228 \u00acp_2(x))\np_10(Roland) \u2228 p_13(Roland)\n\u00ac(p_9(Roland) \u2194 p_0(Roland)) \u2228 \u00acp_12(Roland)\np_11(Roland) \u2228 (p_8(Roland) \u2194 p_10(Roland))\n\u00ac(p_9(Roland) \u2194 p_7(Roland)) \u2228 \u00acp_8(Roland)\np_6(Roland) \u2228 p_7(Roland)\np_6(Roland) \u2228 \u00acp_6(Roland)\np_2(Roland) \u2192 \u00acp_6(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland).",
                    "-p_4(Roland).",
                    "p_1(Roland).",
                    "p_2(Roland).",
                    "-p_3(Roland).",
                    "p_0(Roland).",
                    "all x (p_5(x) | (-p_14(x) & -p_15(x))).",
                    "all x (p_14(x) | p_4(x) | -p_11(x)).",
                    "(p_1(Roland) | p_13(Roland)) & (-p_1(Roland) | -p_13(Roland)).",
                    "p_1(Roland) <-> -p_13(Roland).",
                    "all x (p_3(x) | p_12(x) | -p_2(x)).",
                    "p_10(Roland) | p_13(Roland).",
                    "-(p_9(Roland) <-> p_0(Roland)) | -p_12(Roland).",
                    "p_11(Roland) | (p_8(Roland) <-> p_10(Roland)).",
                    "-(p_9(Roland) <-> p_7(Roland)) | -p_8(Roland).",
                    "p_6(Roland) | p_7(Roland).",
                    "p_6(Roland) | -p_6(Roland).",
                    "p_2(Roland) -> -p_6(Roland)."
                ],
                "formulas(goals)": [
                    "-p_6(Roland)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Roland) \u2192 p_6(Roland)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Roland) \u2192 \u00acp_6(Roland)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Roland)\n\u00acp_4(Roland)\np_1(Roland)\np_2(Roland)\n\u00acp_3(Roland)\np_0(Roland)\n\u2200x (p_5(x) \u2228 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_14(x) \u2228 p_4(x) \u2228 \u00acp_11(x))\n(p_1(Roland) \u2228 p_13(Roland)) \u2227 (\u00acp_1(Roland) \u2228 \u00acp_13(Roland))\np_1(Roland) \u2194 \u00acp_13(Roland)\n\u2200x (p_3(x) \u2228 p_12(x) \u2228 \u00acp_2(x))\np_10(Roland) \u2228 p_13(Roland)\n\u00ac(p_9(Roland) \u2194 p_0(Roland)) \u2228 \u00acp_12(Roland)\np_11(Roland) \u2228 (p_8(Roland) \u2194 p_10(Roland))\n\u00ac(p_9(Roland) \u2194 p_7(Roland)) \u2228 \u00acp_8(Roland)\np_6(Roland) \u2228 p_7(Roland)\np_6(Roland) \u2228 \u00acp_6(Roland)\np_2(Roland) \u2192 \u00acp_6(Roland)\n\u00ac(p_2(Roland) \u2227 p_6(Roland))\n\u00acp_6(Roland) \u2192 p_7(Roland)",
            "Initial Goal": "p_6(Roland)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Roland)",
                    "-p_4(Roland)",
                    "p_1(Roland)",
                    "p_2(Roland)",
                    "-p_3(Roland)",
                    "p_0(Roland)",
                    "all x (p_5(x) | (-p_14(x) & -p_15(x)))",
                    "all x (p_14(x) | p_4(x) | -p_11(x))",
                    "(p_1(Roland) | p_13(Roland)) & (-p_1(Roland) | -p_13(Roland))",
                    "p_1(Roland) <-> -p_13(Roland)",
                    "all x (p_3(x) | p_12(x) | -p_2(x))",
                    "p_10(Roland) | p_13(Roland)",
                    "-(p_9(Roland) <-> p_0(Roland)) | -p_12(Roland)",
                    "p_11(Roland) | (p_8(Roland) <-> p_10(Roland))",
                    "-(p_9(Roland) <-> p_7(Roland)) | -p_8(Roland)",
                    "p_6(Roland) | p_7(Roland)",
                    "p_6(Roland) | -p_6(Roland)",
                    "p_2(Roland) -> -p_6(Roland)",
                    "-(p_2(Roland) & p_6(Roland))",
                    "(-p_6(Roland)) -> p_7(Roland)"
                ],
                "formulas(goals)": [
                    "-p_6(Roland)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_2(Roland) \u2227 p_6(Roland))"
                ],
                "added_rules": [
                    "\u00acp_6(Roland) \u2192 p_7(Roland)"
                ]
            }
        }
    ]
}