{
    "background_story": "Brynn was a skilled archer from a village nestled in the rolling hills of ancient countryside. She was particularly renowned for her expertise with the recurved bow, a traditional weapon passed down through her family for generations. The recurved bow, with its distinctive curved tips, required great strength, precision, and technique to master. Brynn spent years honing her craft, practicing tirelessly under the watchful eye of her father, a legendary archer himself. Her dedication paid off when she was chosen to represent her village in the annual Archery Games, a prestigious competition that drew participants from across the land. With her trusty recurved bow, Brynn competed against the best, her arrows flying straight and true, earning her the title of Champion Archer and the admiration of her people.",
    "predicates": [
        {
            "id": 0,
            "name": "uses_recurve"
        },
        {
            "id": 1,
            "name": "practices_daily"
        },
        {
            "id": 2,
            "name": "hits_target"
        },
        {
            "id": 3,
            "name": "trains_hard"
        },
        {
            "id": 4,
            "name": "competes_professionally"
        },
        {
            "id": 5,
            "name": "accurate"
        },
        {
            "id": 6,
            "name": "strong"
        },
        {
            "id": 7,
            "name": "skilled"
        },
        {
            "id": 8,
            "name": "wins_tournaments"
        },
        {
            "id": 9,
            "name": "masters_technique"
        },
        {
            "id": 10,
            "name": "is_famous"
        },
        {
            "id": 11,
            "name": "has_focus"
        },
        {
            "id": 12,
            "name": "develops_strategy"
        },
        {
            "id": 13,
            "name": "aims_well"
        },
        {
            "id": 14,
            "name": "holds_steady"
        },
        {
            "id": 15,
            "name": "aims_true"
        },
        {
            "id": 16,
            "name": "makes_shots"
        },
        {
            "id": 17,
            "name": "dedicated"
        },
        {
            "id": 18,
            "name": "earns_recognition"
        },
        {
            "id": 19,
            "name": "excels"
        },
        {
            "id": 20,
            "name": "aims_high"
        }
    ],
    "subject_name": "Brynn",
    "subject_category": "archer",
    "keyword": "recurved",
    "all_facts": [
        {
            "id": 0,
            "subject": "Brynn",
            "text": "Brynn does not use a recurve bow.",
            "fol": "\u00acp_0(Brynn)",
            "str_fol": "\u00acuses_recurve(Brynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Brynn",
            "text": "Brynn practices daily.",
            "fol": "p_1(Brynn)",
            "str_fol": "practices_daily(Brynn)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Brynn",
            "text": "Brynn does not hit her target.",
            "fol": "\u00acp_2(Brynn)",
            "str_fol": "\u00achits_target(Brynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Brynn",
            "text": "Brynn does not train hard.",
            "fol": "\u00acp_3(Brynn)",
            "str_fol": "\u00actrains_hard(Brynn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Brynn",
            "text": "Brynn does not compete professionally.",
            "fol": "\u00acp_4(Brynn)",
            "str_fol": "\u00accompetes_professionally(Brynn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Brynn",
            "text": "Brynn is not famous.",
            "fol": "\u00acp_10(Brynn)",
            "str_fol": "\u00acis_famous(Brynn)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Brynn",
            "text": "Brynn does not master her technique.",
            "fol": "\u00acp_9(Brynn)",
            "str_fol": "\u00acmasters_technique(Brynn)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Brynn",
            "text": "Brynn does not win tournaments.",
            "fol": "\u00acp_8(Brynn)",
            "str_fol": "\u00acwins_tournaments(Brynn)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Brynn",
            "text": "Brynn is not accurate.",
            "fol": "\u00acp_5(Brynn)",
            "str_fol": "\u00acaccurate(Brynn)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Brynn",
            "text": "Brynn is strong.",
            "fol": "p_6(Brynn)",
            "str_fol": "strong(Brynn)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Brynn",
            "text": "Brynn is skilled.",
            "fol": "p_7(Brynn)",
            "str_fol": "skilled(Brynn)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Brynn",
            "text": "Brynn does not compete professionally.",
            "fol": "\u00acp_4(Brynn)",
            "str_fol": "\u00accompetes_professionally(Brynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Brynn",
            "text": "Brynn does not train hard.",
            "fol": "\u00acp_3(Brynn)",
            "str_fol": "\u00actrains_hard(Brynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Brynn",
            "text": "Brynn practices daily.",
            "fol": "p_1(Brynn)",
            "str_fol": "practices_daily(Brynn)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Brynn",
            "text": "Brynn does not hit her target.",
            "fol": "\u00acp_2(Brynn)",
            "str_fol": "\u00achits_target(Brynn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Brynn",
            "text": "Brynn does not use a recurve bow.",
            "fol": "\u00acp_0(Brynn)",
            "str_fol": "\u00acuses_recurve(Brynn)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Every professional archer either has focus or develops a strategy (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_11(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (competes_professionally(x) \u2192 (has_focus(x) \u2228 develops_strategy(x)))"
        },
        {
            "id": 5,
            "text": "All famous archers train hard and have focus.",
            "fol": "\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))",
            "str_fol": "\u2200x (is_famous(x) \u2192 (trains_hard(x) \u2227 has_focus(x)))"
        },
        {
            "id": 4,
            "text": "If an archer masters their technique and practices daily, then they can hit their target.",
            "fol": "\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((masters_technique(x) \u2227 practices_daily(x)) \u2192 hits_target(x))"
        },
        {
            "id": 3,
            "text": "If Brynn wins tournaments, then she is famous.",
            "fol": "p_8(Brynn) \u2192 p_10(Brynn)",
            "str_fol": "wins_tournaments(Brynn) \u2192 is_famous(Brynn)"
        },
        {
            "id": 2,
            "text": "Every accurate archer either wins tournaments or masters their technique (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (accurate(x) \u2192 (wins_tournaments(x) \u2228 masters_technique(x)))"
        },
        {
            "id": 1,
            "text": "Brynn either uses a recurve bow or is strong.",
            "fol": "p_0(Brynn) \u2228 p_6(Brynn)",
            "str_fol": "uses_recurve(Brynn) \u2228 strong(Brynn)"
        },
        {
            "id": 0,
            "text": "If Brynn is either accurate or strong (but not both), then she is skilled.",
            "fol": "(p_5(Brynn) \u2295 p_6(Brynn)) \u2192 p_7(Brynn)",
            "str_fol": "(accurate(Brynn) \u2295 strong(Brynn)) \u2192 skilled(Brynn)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Brynn",
            "text": "Brynn does not compete professionally.",
            "fol": "\u00acp_4(Brynn)",
            "str_fol": "\u00accompetes_professionally(Brynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Brynn",
            "text": "Brynn does not train hard.",
            "fol": "\u00acp_3(Brynn)",
            "str_fol": "\u00actrains_hard(Brynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Brynn",
            "text": "Brynn practices daily.",
            "fol": "p_1(Brynn)",
            "str_fol": "practices_daily(Brynn)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Brynn",
            "text": "Brynn does not hit her target.",
            "fol": "\u00acp_2(Brynn)",
            "str_fol": "\u00achits_target(Brynn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Brynn",
            "text": "Brynn does not use a recurve bow.",
            "fol": "\u00acp_0(Brynn)",
            "str_fol": "\u00acuses_recurve(Brynn)",
            "negation": true
        },
        {
            "id": 6,
            "text": "Every professional archer either has focus or develops a strategy (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_11(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (competes_professionally(x) \u2192 (has_focus(x) \u2228 develops_strategy(x)))"
        },
        {
            "id": 5,
            "text": "All famous archers train hard and have focus.",
            "fol": "\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))",
            "str_fol": "\u2200x (is_famous(x) \u2192 (trains_hard(x) \u2227 has_focus(x)))"
        },
        {
            "id": 4,
            "text": "If an archer masters their technique and practices daily, then they can hit their target.",
            "fol": "\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((masters_technique(x) \u2227 practices_daily(x)) \u2192 hits_target(x))"
        },
        {
            "id": 3,
            "text": "If Brynn wins tournaments, then she is famous.",
            "fol": "p_8(Brynn) \u2192 p_10(Brynn)",
            "str_fol": "wins_tournaments(Brynn) \u2192 is_famous(Brynn)"
        },
        {
            "id": 2,
            "text": "Every accurate archer either wins tournaments or masters their technique (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (accurate(x) \u2192 (wins_tournaments(x) \u2228 masters_technique(x)))"
        },
        {
            "id": 1,
            "text": "Brynn either uses a recurve bow or is strong.",
            "fol": "p_0(Brynn) \u2228 p_6(Brynn)",
            "str_fol": "uses_recurve(Brynn) \u2228 strong(Brynn)"
        },
        {
            "id": 0,
            "text": "If Brynn is either accurate or strong (but not both), then she is skilled.",
            "fol": "(p_5(Brynn) \u2295 p_6(Brynn)) \u2192 p_7(Brynn)",
            "str_fol": "(accurate(Brynn) \u2295 strong(Brynn)) \u2192 skilled(Brynn)"
        }
    ],
    "context_fol": "\u00acp_4(Brynn)\n\u00acp_3(Brynn)\np_1(Brynn)\n\u00acp_2(Brynn)\n\u00acp_0(Brynn)\n\u2200x (p_4(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))\n\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))\np_8(Brynn) \u2192 p_10(Brynn)\n\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))\np_0(Brynn) \u2228 p_6(Brynn)\n(p_5(Brynn) \u2295 p_6(Brynn)) \u2192 p_7(Brynn)",
    "conclusion": {
        "id": 10,
        "subject": "Brynn",
        "text": "Brynn is skilled.",
        "fol": "p_7(Brynn)",
        "str_fol": "skilled(Brynn)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_7(Brynn)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Brynn",
                    "text": "Brynn does not compete professionally.",
                    "fol": "\u00acp_4(Brynn)",
                    "str_fol": "\u00accompetes_professionally(Brynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Every professional archer either has focus or develops a strategy (or both).",
                    "fol": "\u2200x (p_4(x) \u2192 (p_11(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (competes_professionally(x) \u2192 (has_focus(x) \u2228 develops_strategy(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Brynn",
                    "text": "Brynn does not train hard.",
                    "fol": "\u00acp_3(Brynn)",
                    "str_fol": "\u00actrains_hard(Brynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "All famous archers train hard and have focus.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))",
                    "str_fol": "\u2200x (is_famous(x) \u2192 (trains_hard(x) \u2227 has_focus(x)))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Brynn",
                "text": "Brynn is not famous.",
                "fol": "\u00acp_10(Brynn)",
                "str_fol": "\u00acis_famous(Brynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Brynn",
                    "text": "Brynn practices daily.",
                    "fol": "p_1(Brynn)",
                    "str_fol": "practices_daily(Brynn)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Brynn",
                    "text": "Brynn does not hit her target.",
                    "fol": "\u00acp_2(Brynn)",
                    "str_fol": "\u00achits_target(Brynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If an archer masters their technique and practices daily, then they can hit their target.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((masters_technique(x) \u2227 practices_daily(x)) \u2192 hits_target(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Brynn",
                "text": "Brynn does not master her technique.",
                "fol": "\u00acp_9(Brynn)",
                "str_fol": "\u00acmasters_technique(Brynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Brynn",
                    "text": "Brynn is not famous.",
                    "fol": "\u00acp_10(Brynn)",
                    "str_fol": "\u00acis_famous(Brynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Brynn wins tournaments, then she is famous.",
                    "fol": "p_8(Brynn) \u2192 p_10(Brynn)",
                    "str_fol": "wins_tournaments(Brynn) \u2192 is_famous(Brynn)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Brynn",
                "text": "Brynn does not win tournaments.",
                "fol": "\u00acp_8(Brynn)",
                "str_fol": "\u00acwins_tournaments(Brynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Brynn",
                    "text": "Brynn does not win tournaments.",
                    "fol": "\u00acp_8(Brynn)",
                    "str_fol": "\u00acwins_tournaments(Brynn)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Brynn",
                    "text": "Brynn does not master her technique.",
                    "fol": "\u00acp_9(Brynn)",
                    "str_fol": "\u00acmasters_technique(Brynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Every accurate archer either wins tournaments or masters their technique (or both).",
                    "fol": "\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (accurate(x) \u2192 (wins_tournaments(x) \u2228 masters_technique(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Brynn",
                "text": "Brynn is not accurate.",
                "fol": "\u00acp_5(Brynn)",
                "str_fol": "\u00acaccurate(Brynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Brynn",
                    "text": "Brynn does not use a recurve bow.",
                    "fol": "\u00acp_0(Brynn)",
                    "str_fol": "\u00acuses_recurve(Brynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Brynn either uses a recurve bow or is strong.",
                    "fol": "p_0(Brynn) \u2228 p_6(Brynn)",
                    "str_fol": "uses_recurve(Brynn) \u2228 strong(Brynn)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Brynn",
                "text": "Brynn is strong.",
                "fol": "p_6(Brynn)",
                "str_fol": "strong(Brynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Brynn",
                    "text": "Brynn is not accurate.",
                    "fol": "\u00acp_5(Brynn)",
                    "str_fol": "\u00acaccurate(Brynn)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Brynn",
                    "text": "Brynn is strong.",
                    "fol": "p_6(Brynn)",
                    "str_fol": "strong(Brynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Brynn is either accurate or strong (but not both), then she is skilled.",
                    "fol": "(p_5(Brynn) \u2295 p_6(Brynn)) \u2192 p_7(Brynn)",
                    "str_fol": "(accurate(Brynn) \u2295 strong(Brynn)) \u2192 skilled(Brynn)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Brynn",
                "text": "Brynn is skilled.",
                "fol": "p_7(Brynn)",
                "str_fol": "skilled(Brynn)",
                "negation": false
            }
        }
    ],
    "proof_trace": "2 (all x (p_10(x) -> p_3(x) & p_11(x))).  [assumption].\n3 (all x (p_9(x) & p_1(x) -> p_2(x))).  [assumption].\n4 p_8(Brynn) -> p_10(Brynn).  [assumption].\n5 (all x (p_5(x) -> p_8(x) | p_9(x))).  [assumption].\n6 -(p_5(Brynn) <-> p_6(Brynn)) -> p_7(Brynn).  [assumption].\n7 p_7(Brynn).  [goal].\n8 -p_10(x) | p_3(x).  [clausify(2)].\n9 -p_3(Brynn).  [assumption].\n10 -p_9(x) | -p_1(x) | p_2(x).  [clausify(3)].\n11 p_1(Brynn).  [assumption].\n12 -p_9(Brynn) | p_2(Brynn).  [resolve(10,b,11,a)].\n13 -p_2(Brynn).  [assumption].\n14 p_0(Brynn) | p_6(Brynn).  [assumption].\n15 -p_0(Brynn).  [assumption].\n16 -p_8(Brynn) | p_10(Brynn).  [clausify(4)].\n18 -p_10(Brynn).  [resolve(8,b,9,a)].\n19 p_5(Brynn) | -p_6(Brynn) | p_7(Brynn).  [clausify(6)].\n20 -p_5(x) | p_8(x) | p_9(x).  [clausify(5)].\n22 -p_6(Brynn) | p_7(Brynn) | p_8(Brynn) | p_9(Brynn).  [resolve(19,a,20,a)].\n23 -p_7(Brynn).  [deny(7)].\n24 -p_6(Brynn) | p_8(Brynn) | p_9(Brynn).  [resolve(22,b,23,a)].\n25 -p_9(Brynn).  [resolve(12,b,13,a)].\n26 -p_6(Brynn) | p_8(Brynn).  [resolve(24,c,25,a)].\n27 p_6(Brynn).  [resolve(14,a,15,a)].\n28 p_8(Brynn).  [resolve(26,a,27,a)].\n30 -p_8(Brynn).  [resolve(18,a,16,b)].\n31 $F.  [resolve(28,a,30,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Brynn)\n\u00acp_3(Brynn)\np_1(Brynn)\n\u00acp_2(Brynn)\n\u00acp_0(Brynn)\n\u2200x (\u00acp_4(x) \u2228 p_11(x) \u2228 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))\n\u00acp_8(Brynn) \u2228 p_10(Brynn)\n\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))\np_0(Brynn) \u2228 p_6(Brynn)\np_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn)\np_7(Brynn) \u2228 \u00acp_7(Brynn)\np_5(Brynn) \u2228 \u00acp_5(Brynn)\n( (p_5(Brynn) \u2228 p_6(Brynn)) \u2227 \u00ac(p_5(Brynn) \u2227 p_6(Brynn)) ) \u2192 p_7(Brynn)\n\u00acp_7(Brynn) \u2192 \u00ac(p_5(Brynn) \u2295 p_6(Brynn))",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn)",
                    "-p_3(Brynn)",
                    "p_1(Brynn)",
                    "-p_2(Brynn)",
                    "-p_0(Brynn)",
                    "all x (-p_4(x) | p_11(x) | p_12(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "all x (p_10(x) -> (p_3(x) & p_11(x)))",
                    "all x (p_10(x) -> p_11(x))",
                    "all x ((p_9(x) & p_1(x)) -> p_2(x))",
                    "-p_8(Brynn) | p_10(Brynn)",
                    "all x (p_5(x) -> (p_8(x) | p_9(x)))",
                    "p_0(Brynn) | p_6(Brynn)",
                    "p_6(Brynn) | p_0(Brynn) | p_1(Brynn)",
                    "p_7(Brynn) | -p_7(Brynn)",
                    "p_5(Brynn) | -p_5(Brynn)",
                    "( (p_5(Brynn) | p_6(Brynn)) & -(p_5(Brynn) & p_6(Brynn)) ) -> p_7(Brynn)",
                    "-p_7(Brynn) -> (-(p_5(Brynn) <-> p_6(Brynn)))"
                ],
                "formulas(goals)": [
                    "p_7(Brynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn)",
                    "p_7(Brynn) \u2228 \u00acp_7(Brynn)",
                    "p_5(Brynn) \u2228 \u00acp_5(Brynn)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_4(x) \u2228 p_11(x) \u2228 p_12(x))",
                    "\u2200x (p_10(x) \u2192 p_3(x))",
                    "\u2200x (p_10(x) \u2192 p_11(x))",
                    "\u00acp_8(Brynn) \u2228 p_10(Brynn)",
                    "( (p_5(Brynn) \u2228 p_6(Brynn)) \u2227 \u00ac(p_5(Brynn) \u2227 p_6(Brynn)) ) \u2192 p_7(Brynn)",
                    "\u00acp_7(Brynn) \u2192 \u00ac(p_5(Brynn) \u2295 p_6(Brynn))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Brynn)\n\u00acp_3(Brynn)\np_1(Brynn)\n\u00acp_2(Brynn)\n\u00acp_0(Brynn)\n\u2200x (\u00acp_4(x) \u2228 p_11(x) \u2228 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))\n\u00acp_8(Brynn) \u2228 p_10(Brynn)\n\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))\np_0(Brynn) \u2228 p_6(Brynn)\np_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn)\np_7(Brynn) \u2228 \u00acp_7(Brynn)\np_5(Brynn) \u2228 \u00acp_5(Brynn)\n\u00acp_7(Brynn) \u2192 \u00ac(p_5(Brynn) \u2295 p_6(Brynn))\np_5(Brynn)",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn).",
                    "-p_3(Brynn).",
                    "p_1(Brynn).",
                    "-p_2(Brynn).",
                    "-p_0(Brynn).",
                    "all x (-p_4(x) | p_11(x) | p_12(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> (p_3(x) & p_11(x))).",
                    "all x (p_10(x) -> p_11(x)).",
                    "all x ((p_9(x) & p_1(x)) -> p_2(x)).",
                    "-p_8(Brynn) | p_10(Brynn).",
                    "all x (p_5(x) -> (p_8(x) | p_9(x))).",
                    "p_0(Brynn) | p_6(Brynn).",
                    "p_6(Brynn) | p_0(Brynn) | p_1(Brynn).",
                    "p_7(Brynn) | -p_7(Brynn).",
                    "p_5(Brynn) | -p_5(Brynn).",
                    "-p_7(Brynn) -> (-(p_5(Brynn) <-> p_6(Brynn))).",
                    "p_5(Brynn)."
                ],
                "formulas(goals)": [
                    "-p_7(Brynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "( (p_5(Brynn) \u2228 p_6(Brynn)) \u2227 \u00ac(p_5(Brynn) \u2227 p_6(Brynn)) ) \u2192 p_7(Brynn)"
                ],
                "added_facts": [
                    "p_5(Brynn)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Brynn).\n\u00acp_3(Brynn).\np_1(Brynn).\n\u00acp_2(Brynn).\n\u00acp_0(Brynn).\n\u2200x (\u00acp_4(x) \u2228 p_11(x) \u2228 p_12(x)).\n\u2200x (p_10(x) \u2192 p_3(x)).\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x))).\n\u2200x (p_10(x) \u2192 p_11(x)).\n\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x)).\n\u00acp_8(Brynn) \u2228 p_10(Brynn).\n\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x))).\np_0(Brynn) \u2228 p_6(Brynn).\np_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn).\np_7(Brynn) \u2228 \u00acp_7(Brynn).\np_5(Brynn) \u2228 \u00acp_5(Brynn).\n\u00acp_7(Brynn) \u2192 \u00ac(p_5(Brynn) \u2295 p_6(Brynn)).\np_5(Brynn).\n\u00ac(p_5(Brynn) \u2295 p_6(Brynn)) \u2192 \u00acp_7(Brynn).",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn).",
                    "-p_3(Brynn).",
                    "p_1(Brynn).",
                    "-p_2(Brynn).",
                    "-p_0(Brynn).",
                    "all x (-p_4(x) | p_11(x) | p_12(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> (p_3(x) & p_11(x))).",
                    "all x (p_10(x) -> p_11(x)).",
                    "all x ((p_9(x) & p_1(x)) -> p_2(x)).",
                    "-p_8(Brynn) | p_10(Brynn).",
                    "all x (p_5(x) -> (p_8(x) | p_9(x))).",
                    "p_0(Brynn) | p_6(Brynn).",
                    "p_6(Brynn) | p_0(Brynn) | p_1(Brynn).",
                    "p_7(Brynn) | -p_7(Brynn).",
                    "p_5(Brynn) | -p_5(Brynn).",
                    "-p_7(Brynn) -> (-(p_5(Brynn) <-> p_6(Brynn))).",
                    "p_5(Brynn).",
                    "(p_5(Brynn) <-> p_6(Brynn)) -> -p_7(Brynn)."
                ],
                "formulas(goals)": [
                    "-p_7(Brynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00ac(p_5(Brynn) \u2295 p_6(Brynn)) \u2192 \u00acp_7(Brynn)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Brynn).\n\u00acp_3(Brynn).\np_1(Brynn).\n\u00acp_2(Brynn).\n\u00acp_0(Brynn).\n\u2200x ( \u00acp_4(x) \u2228 p_11(x) \u2228 p_12(x) ).\n\u2200x ( p_10(x) \u2192 p_3(x) ).\n\u2200x ( p_10(x) \u2192 ( p_3(x) \u2227 p_11(x) ) ).\n\u2200x ( p_10(x) \u2192 p_11(x) ).\n\u2200x ( ( p_9(x) \u2227 p_1(x) ) \u2192 p_2(x) ).\n( \u00acp_8(Brynn) \u2228 p_10(Brynn) ).\n\u2200x ( p_5(x) \u2192 ( p_8(x) \u2228 p_9(x) ) ).\n( p_0(Brynn) \u2228 p_6(Brynn) ).\n( p_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn) ).\n( p_7(Brynn) \u2228 \u00acp_7(Brynn) ).\n( p_5(Brynn) \u2228 \u00acp_5(Brynn) ).\n( \u00acp_7(Brynn) \u2192 \u00ac( p_5(Brynn) \u2295 p_6(Brynn) ) ).\np_5(Brynn).\n( \u00ac( p_5(Brynn) \u2295 p_6(Brynn) ) \u2192 \u00acp_7(Brynn) ).\np_6(Brynn).\n\u00ac( p_5(Brynn) \u2295 p_6(Brynn) ).\n( p_5(Brynn) \u2227 p_6(Brynn) ).",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn).",
                    "-p_3(Brynn).",
                    "p_1(Brynn).",
                    "-p_2(Brynn).",
                    "-p_0(Brynn).",
                    "all x ( -p_4(x) | p_11(x) | p_12(x) ).",
                    "all x ( p_10(x) -> p_3(x) ).",
                    "all x ( p_10(x) -> ( p_3(x) & p_11(x) ) ).",
                    "all x ( p_10(x) -> p_11(x) ).",
                    "all x ( ( p_9(x) & p_1(x) ) -> p_2(x) ).",
                    "( -p_8(Brynn) | p_10(Brynn) ).",
                    "all x ( p_5(x) -> ( p_8(x) | p_9(x) ) ).",
                    "( p_0(Brynn) | p_6(Brynn) ).",
                    "( p_6(Brynn) | p_0(Brynn) | p_1(Brynn) ).",
                    "( p_7(Brynn) | -p_7(Brynn) ).",
                    "( p_5(Brynn) | -p_5(Brynn) ).",
                    "( -p_7(Brynn) -> ( p_5(Brynn) <-> p_6(Brynn) ) ).",
                    "p_5(Brynn).",
                    "( ( p_5(Brynn) <-> p_6(Brynn) ) -> -p_7(Brynn) ).",
                    "p_6(Brynn).",
                    "( p_5(Brynn) <-> p_6(Brynn) ).",
                    "( p_5(Brynn) & p_6(Brynn) )."
                ],
                "formulas(goals)": [
                    "-p_7(Brynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Brynn)",
                    "\u00ac(p_5(Brynn) \u2295 p_6(Brynn))",
                    "(p_5(Brynn) \u2227 p_6(Brynn))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Brynn).\n\u00acp_3(Brynn).\np_1(Brynn).\n\u00acp_2(Brynn).\n\u00acp_0(Brynn).\n\u2200x ( \u00acp_4(x) \u2228 p_11(x) \u2228 p_12(x) ).\n\u2200x ( p_10(x) \u2192 p_3(x) ).\n\u2200x ( p_10(x) \u2192 ( p_3(x) \u2227 p_11(x) ) ).\n\u2200x ( p_10(x) \u2192 p_11(x) ).\n\u2200x ( ( p_9(x) \u2227 p_1(x) ) \u2192 p_2(x) ).\n( \u00acp_8(Brynn) \u2228 p_10(Brynn) ).\n\u2200x ( p_5(x) \u2192 ( p_8(x) \u2228 p_9(x) ) ).\n( p_0(Brynn) \u2228 p_6(Brynn) ).\n( p_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn) ).\n( p_7(Brynn) \u2228 \u00acp_7(Brynn) ).\n( p_5(Brynn) \u2228 \u00acp_5(Brynn) ).\n( p_7(Brynn) \u2228 ( p_5(Brynn) \u2194 p_6(Brynn) ) ).\np_5(Brynn).\n( \u00ac( p_5(Brynn) \u2194 p_6(Brynn) ) \u2228 \u00acp_7(Brynn) ).\np_6(Brynn).\n( p_5(Brynn) \u2194 p_6(Brynn) ).\n( p_5(Brynn) \u2227 p_6(Brynn) ).\n( p_5(Brynn) \u2228 p_6(Brynn) ).\n( p_5(Brynn) \u2228 p_7(Brynn) ).\n( p_6(Brynn) \u2228 p_7(Brynn) ).\n( p_5(Brynn) \u2194 p_6(Brynn) ).",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn).",
                    "-p_3(Brynn).",
                    "p_1(Brynn).",
                    "-p_2(Brynn).",
                    "-p_0(Brynn).",
                    "(all x (-p_4(x) | p_11(x) | p_12(x))).",
                    "(all x (p_10(x) -> p_3(x))).",
                    "(all x (p_10(x) -> (p_3(x) & p_11(x)))).",
                    "(all x (p_10(x) -> p_11(x))).",
                    "(all x ((p_9(x) & p_1(x)) -> p_2(x))).",
                    "(-p_8(Brynn) | p_10(Brynn)).",
                    "(all x (p_5(x) -> (p_8(x) | p_9(x)))).",
                    "(p_0(Brynn) | p_6(Brynn)).",
                    "(p_6(Brynn) | p_0(Brynn) | p_1(Brynn)).",
                    "(p_7(Brynn) | -p_7(Brynn)).",
                    "(p_5(Brynn) | -p_5(Brynn)).",
                    "(p_7(Brynn) | (p_5(Brynn) <-> p_6(Brynn))).",
                    "p_5(Brynn).",
                    "(-(p_5(Brynn) <-> p_6(Brynn)) | -p_7(Brynn)).",
                    "p_6(Brynn).",
                    "(p_5(Brynn) <-> p_6(Brynn)).",
                    "(p_5(Brynn) & p_6(Brynn)).",
                    "(p_5(Brynn) | p_6(Brynn)).",
                    "(p_5(Brynn) | p_7(Brynn)).",
                    "(p_6(Brynn) | p_7(Brynn)).",
                    "(p_5(Brynn) <-> p_6(Brynn))."
                ],
                "formulas(goals)": [
                    "-p_7(Brynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "( \u00acp_7(Brynn) \u2192 \u00ac( p_5(Brynn) \u2295 p_6(Brynn) ) )",
                    "( \u00ac( p_5(Brynn) \u2295 p_6(Brynn) ) \u2192 \u00acp_7(Brynn) )",
                    "\u00ac( p_5(Brynn) \u2295 p_6(Brynn) )"
                ],
                "added_facts": [
                    "( p_5(Brynn) \u2228 p_6(Brynn) )",
                    "( p_5(Brynn) \u2228 p_7(Brynn) )",
                    "( p_6(Brynn) \u2228 p_7(Brynn) )",
                    "( p_5(Brynn) \u2194 p_6(Brynn) )"
                ],
                "added_rules": [
                    "( p_7(Brynn) \u2228 ( p_5(Brynn) \u2194 p_6(Brynn) ) )",
                    "( \u00ac( p_5(Brynn) \u2194 p_6(Brynn) ) \u2228 \u00acp_7(Brynn) )"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Brynn).\n\u00acp_3(Brynn).\np_1(Brynn).\n\u00acp_2(Brynn).\n\u00acp_0(Brynn).\n\u2200x (p_4(x) \u2192 (p_11(x) \u2228 p_12(x))).\n\u2200x (p_10(x) \u2192 p_3(x)).\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x))).\n\u2200x (p_10(x) \u2192 p_11(x)).\n\u2200x (\u00acp_9(x) \u2228 \u00acp_1(x) \u2228 p_2(x)).\n(\u00acp_8(Brynn) \u2228 p_10(Brynn)).\n\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x))).\n(p_0(Brynn) \u2228 p_6(Brynn)).\n(p_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn)).\n(p_7(Brynn) \u2228 \u00acp_7(Brynn)).\n(p_5(Brynn) \u2228 \u00acp_5(Brynn)).\n(p_7(Brynn) \u2228 (p_5(Brynn) \u2194 p_6(Brynn))).\np_5(Brynn).\n(\u00ac(p_5(Brynn) \u2194 p_6(Brynn)) \u2228 \u00acp_7(Brynn)).\np_6(Brynn).\n(p_5(Brynn) \u2194 p_6(Brynn)).\n(p_5(Brynn) \u2227 p_6(Brynn)).\n(p_5(Brynn) \u2228 p_6(Brynn)).\n(p_5(Brynn) \u2228 p_7(Brynn)).\n(p_6(Brynn) \u2228 p_7(Brynn)).\n(p_5(Brynn) \u2194 p_6(Brynn)).\n(p_6(Brynn) \u2194 p_5(Brynn)).\n(p_6(Brynn) \u2227 p_5(Brynn)).\n(p_6(Brynn) \u2228 p_5(Brynn)).\n(p_6(Brynn) \u2228 p_0(Brynn)).\n(p_1(Brynn) \u2228 p_0(Brynn) \u2228 p_6(Brynn)).",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn).",
                    "-p_3(Brynn).",
                    "p_1(Brynn).",
                    "-p_2(Brynn).",
                    "-p_0(Brynn).",
                    "all x (p_4(x) -> (p_11(x) | p_12(x))).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> (p_3(x) & p_11(x))).",
                    "all x (p_10(x) -> p_11(x)).",
                    "all x (-p_9(x) | -p_1(x) | p_2(x)).",
                    "(-p_8(Brynn) | p_10(Brynn)).",
                    "all x (p_5(x) -> (p_8(x) | p_9(x))).",
                    "(p_0(Brynn) | p_6(Brynn)).",
                    "(p_6(Brynn) | p_0(Brynn) | p_1(Brynn)).",
                    "(p_7(Brynn) | -p_7(Brynn)).",
                    "(p_5(Brynn) | -p_5(Brynn)).",
                    "(p_7(Brynn) | (p_5(Brynn) <-> p_6(Brynn))).",
                    "p_5(Brynn).",
                    "(-(p_5(Brynn) <-> p_6(Brynn)) | -p_7(Brynn)).",
                    "p_6(Brynn).",
                    "(p_5(Brynn) <-> p_6(Brynn)).",
                    "(p_5(Brynn) & p_6(Brynn)).",
                    "(p_5(Brynn) | p_6(Brynn)).",
                    "(p_5(Brynn) | p_7(Brynn)).",
                    "(p_6(Brynn) | p_7(Brynn)).",
                    "(p_5(Brynn) <-> p_6(Brynn)).",
                    "(p_6(Brynn) <-> p_5(Brynn)).",
                    "(p_6(Brynn) & p_5(Brynn)).",
                    "(p_6(Brynn) | p_5(Brynn)).",
                    "(p_6(Brynn) | p_0(Brynn)).",
                    "(p_1(Brynn) | p_0(Brynn) | p_6(Brynn))."
                ],
                "formulas(goals)": [
                    "-p_7(Brynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Brynn) \u2227 p_5(Brynn)",
                    "p_6(Brynn) \u2228 p_5(Brynn)",
                    "p_6(Brynn) \u2228 p_0(Brynn)",
                    "p_1(Brynn) \u2228 p_0(Brynn) \u2228 p_6(Brynn)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_9(x) \u2228 \u00acp_1(x) \u2228 p_2(x))",
                    "(p_6(Brynn) \u2194 p_5(Brynn))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Brynn)\n\u00acp_3(Brynn)\np_1(Brynn)\n\u00acp_2(Brynn)\n\u00acp_0(Brynn)\n\u2200x (p_4(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_11(x)))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))\n(\u00acp_8(Brynn) \u2228 p_10(Brynn))\n\u2200x (p_5(x) \u2192 (p_8(x) \u2228 p_9(x)))\n(p_0(Brynn) \u2228 p_6(Brynn))\n(p_6(Brynn) \u2228 p_0(Brynn) \u2228 p_1(Brynn))\n(p_7(Brynn) \u2228 \u00acp_7(Brynn))\n(p_5(Brynn) \u2228 \u00acp_5(Brynn))\n(p_7(Brynn) \u2228 (p_5(Brynn) \u2194 p_6(Brynn)))\np_5(Brynn)\n((p_5(Brynn) \u2194 p_6(Brynn)) \u2192 \u00acp_7(Brynn))\np_6(Brynn)\n(p_5(Brynn) \u2194 p_6(Brynn))\n(p_5(Brynn) \u2227 p_6(Brynn))\n(p_5(Brynn) \u2228 p_6(Brynn))\n(p_5(Brynn) \u2228 p_7(Brynn))\n(p_6(Brynn) \u2228 p_7(Brynn))\n(p_5(Brynn) \u2194 p_6(Brynn))\n(p_6(Brynn) \u2194 p_5(Brynn))\n(p_6(Brynn) \u2227 p_5(Brynn))\n(p_6(Brynn) \u2228 p_5(Brynn))\n(p_6(Brynn) \u2228 p_0(Brynn))\n(p_1(Brynn) \u2228 p_0(Brynn) \u2228 p_6(Brynn))\n((p_5(Brynn) \u2227 p_6(Brynn)) \u2192 \u00acp_7(Brynn))\n((p_5(Brynn) \u2228 p_6(Brynn)) \u2192 (\u00acp_7(Brynn) \u2228 p_5(Brynn) \u2228 p_6(Brynn)))",
            "Initial Goal": "p_7(Brynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Brynn).",
                    "-p_3(Brynn).",
                    "p_1(Brynn).",
                    "-p_2(Brynn).",
                    "-p_0(Brynn).",
                    "all x (p_4(x) -> (p_11(x) | p_12(x))).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> (p_3(x) & p_11(x))).",
                    "all x (p_10(x) -> p_11(x)).",
                    "all x ((p_9(x) & p_1(x)) -> p_2(x)).",
                    "(-p_8(Brynn) | p_10(Brynn)).",
                    "all x (p_5(x) -> (p_8(x) | p_9(x))).",
                    "(p_0(Brynn) | p_6(Brynn)).",
                    "(p_6(Brynn) | p_0(Brynn) | p_1(Brynn)).",
                    "(p_7(Brynn) | -p_7(Brynn)).",
                    "(p_5(Brynn) | -p_5(Brynn)).",
                    "(p_7(Brynn) | (p_5(Brynn) <-> p_6(Brynn))).",
                    "p_5(Brynn).",
                    "((p_5(Brynn) <-> p_6(Brynn)) -> -p_7(Brynn)).",
                    "p_6(Brynn).",
                    "(p_5(Brynn) <-> p_6(Brynn)).",
                    "(p_5(Brynn) & p_6(Brynn)).",
                    "(p_5(Brynn) | p_6(Brynn)).",
                    "(p_5(Brynn) | p_7(Brynn)).",
                    "(p_6(Brynn) | p_7(Brynn)).",
                    "(p_5(Brynn) <-> p_6(Brynn)).",
                    "(p_6(Brynn) <-> p_5(Brynn)).",
                    "(p_6(Brynn) & p_5(Brynn)).",
                    "(p_6(Brynn) | p_5(Brynn)).",
                    "(p_6(Brynn) | p_0(Brynn)).",
                    "(p_1(Brynn) | p_0(Brynn) | p_6(Brynn)).",
                    "((p_5(Brynn) & p_6(Brynn)) -> -p_7(Brynn)).",
                    "((p_5(Brynn) | p_6(Brynn)) -> (-p_7(Brynn) | p_5(Brynn) | p_6(Brynn)))."
                ],
                "formulas(goals)": [
                    "-p_7(Brynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_9(x) \u2228 \u00acp_1(x) \u2228 p_2(x))",
                    "(\u00ac(p_5(Brynn) \u2194 p_6(Brynn)) \u2228 \u00acp_7(Brynn))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_9(x) \u2227 p_1(x)) \u2192 p_2(x))",
                    "((p_5(Brynn) \u2194 p_6(Brynn)) \u2192 \u00acp_7(Brynn))",
                    "((p_5(Brynn) \u2227 p_6(Brynn)) \u2192 \u00acp_7(Brynn))",
                    "((p_5(Brynn) \u2228 p_6(Brynn)) \u2192 (\u00acp_7(Brynn) \u2228 p_5(Brynn) \u2228 p_6(Brynn)))"
                ]
            }
        }
    ]
}