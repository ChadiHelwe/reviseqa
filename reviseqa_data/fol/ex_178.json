{
    "background_story": "Joaquin, a young monk, was deeply influenced by the writings of Saint Cyprian, a 3rd-century bishop and martyr. Inspired by Cyprian's unwavering commitment to his faith, Joaquin became a devoted scholar of early Christian theology. He spent years studying the works of Cyprian, particularly his treatises on the nature of the Church and the importance of unity among believers. As Joaquin delved deeper into Cyprian's teachings, he began to see the world through the lens of his hero's courageous stand against persecution. Joaquin's own faith was strengthened by Cyprian's example, and he became a respected voice in his community, advocating for compassion, forgiveness, and the unifying power of faith.",
    "predicates": [
        {
            "id": 0,
            "name": "martyr"
        },
        {
            "id": 1,
            "name": "shape_cultural_narrative"
        },
        {
            "id": 2,
            "name": "seek_truth"
        },
        {
            "id": 3,
            "name": "writes_treaties"
        },
        {
            "id": 4,
            "name": "fosters_unity"
        },
        {
            "id": 5,
            "name": "founds_order"
        },
        {
            "id": 6,
            "name": "serves_humankind"
        },
        {
            "id": 7,
            "name": "reads_scriptures"
        },
        {
            "id": 8,
            "name": "finds_comfort"
        },
        {
            "id": 9,
            "name": "inspire_others"
        },
        {
            "id": 10,
            "name": "leave_lasting_legacy"
        },
        {
            "id": 11,
            "name": "lead_by_example"
        },
        {
            "id": 12,
            "name": "pursue_knowledge"
        },
        {
            "id": 13,
            "name": "study_scripts"
        },
        {
            "id": 14,
            "name": "influence_generations"
        },
        {
            "id": 15,
            "name": "has_vision"
        },
        {
            "id": 16,
            "name": "build_community"
        },
        {
            "id": 17,
            "name": "seeks_wisdom"
        },
        {
            "id": 18,
            "name": "lives_with_integrity"
        },
        {
            "id": 19,
            "name": "stands_for_faith"
        },
        {
            "id": 20,
            "name": "teach_others"
        },
        {
            "id": 21,
            "name": "is_scholar"
        },
        {
            "id": 22,
            "name": "interprets_text"
        },
        {
            "id": 23,
            "name": "translates_text"
        },
        {
            "id": 24,
            "name": "interprets_writings"
        },
        {
            "id": 25,
            "name": "face_challenges"
        },
        {
            "id": 26,
            "name": "embody_courage"
        },
        {
            "id": 27,
            "name": "is_charismatic"
        },
        {
            "id": 28,
            "name": "write_books"
        },
        {
            "id": 29,
            "name": "meditates"
        }
    ],
    "subject_name": "Joaquin",
    "subject_category": "historical figure",
    "keyword": "cyprian",
    "all_facts": [
        {
            "id": 0,
            "subject": "Joaquin",
            "text": "Joaquin is a martyr.",
            "fol": "p_0(Joaquin)",
            "str_fol": "martyr(Joaquin)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Joaquin",
            "text": "Joaquin shapes the cultural narrative.",
            "fol": "p_1(Joaquin)",
            "str_fol": "shape_cultural_narrative(Joaquin)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Joaquin",
            "text": "Joaquin does not seek truth.",
            "fol": "\u00acp_2(Joaquin)",
            "str_fol": "\u00acseek_truth(Joaquin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Joaquin",
            "text": "Joaquin writes treaties.",
            "fol": "p_3(Joaquin)",
            "str_fol": "writes_treaties(Joaquin)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Joaquin",
            "text": "Joaquin fosters unity.",
            "fol": "p_4(Joaquin)",
            "str_fol": "fosters_unity(Joaquin)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Joaquin",
            "text": "Joaquin founds an order.",
            "fol": "p_5(Joaquin)",
            "str_fol": "founds_order(Joaquin)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Joaquin",
            "text": "Joaquin does not serve humankind.",
            "fol": "\u00acp_6(Joaquin)",
            "str_fol": "\u00acserves_humankind(Joaquin)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Joaquin",
            "text": "Joaquin reads scriptures.",
            "fol": "p_7(Joaquin)",
            "str_fol": "reads_scriptures(Joaquin)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Joaquin",
            "text": "Joaquin does not find comfort.",
            "fol": "\u00acp_8(Joaquin)",
            "str_fol": "\u00acfinds_comfort(Joaquin)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Joaquin",
            "text": "Joaquin does not seek wisdom.",
            "fol": "\u00acp_17(Joaquin)",
            "str_fol": "\u00acseeks_wisdom(Joaquin)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Joaquin",
            "text": "Joaquin builds a community.",
            "fol": "p_16(Joaquin)",
            "str_fol": "build_community(Joaquin)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Joaquin",
            "text": "Joaquin has a vision.",
            "fol": "p_15(Joaquin)",
            "str_fol": "has_vision(Joaquin)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Joaquin",
            "text": "Joaquin does not influence generations.",
            "fol": "\u00acp_14(Joaquin)",
            "str_fol": "\u00acinfluence_generations(Joaquin)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Joaquin",
            "text": "Joaquin does not study scripts.",
            "fol": "\u00acp_13(Joaquin)",
            "str_fol": "\u00acstudy_scripts(Joaquin)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Joaquin",
            "text": "Joaquin does not pursue knowledge.",
            "fol": "\u00acp_12(Joaquin)",
            "str_fol": "\u00acpursue_knowledge(Joaquin)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Joaquin",
            "text": "Joaquin leads by example.",
            "fol": "p_11(Joaquin)",
            "str_fol": "lead_by_example(Joaquin)",
            "negation": false
        },
        {
            "id": 16,
            "subject": "Joaquin",
            "text": "Joaquin does not inspire others.",
            "fol": "\u00acp_9(Joaquin)",
            "str_fol": "\u00acinspire_others(Joaquin)",
            "negation": true
        },
        {
            "id": 17,
            "subject": "Joaquin",
            "text": "Joaquin does not leave a lasting legacy.",
            "fol": "\u00acp_10(Joaquin)",
            "str_fol": "\u00acleave_lasting_legacy(Joaquin)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Joaquin",
            "text": "Joaquin reads scriptures.",
            "fol": "p_7(Joaquin)",
            "str_fol": "reads_scriptures(Joaquin)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Joaquin",
            "text": "Joaquin does not find comfort.",
            "fol": "\u00acp_8(Joaquin)",
            "str_fol": "\u00acfinds_comfort(Joaquin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Joaquin",
            "text": "Joaquin founds an order.",
            "fol": "p_5(Joaquin)",
            "str_fol": "founds_order(Joaquin)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Joaquin",
            "text": "Joaquin does not serve humankind.",
            "fol": "\u00acp_6(Joaquin)",
            "str_fol": "\u00acserves_humankind(Joaquin)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Joaquin",
            "text": "Joaquin fosters unity.",
            "fol": "p_4(Joaquin)",
            "str_fol": "fosters_unity(Joaquin)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Joaquin",
            "text": "Joaquin writes treaties.",
            "fol": "p_3(Joaquin)",
            "str_fol": "writes_treaties(Joaquin)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Joaquin",
            "text": "Joaquin does not seek truth.",
            "fol": "\u00acp_2(Joaquin)",
            "str_fol": "\u00acseek_truth(Joaquin)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Joaquin",
            "text": "Joaquin shapes the cultural narrative.",
            "fol": "p_1(Joaquin)",
            "str_fol": "shape_cultural_narrative(Joaquin)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Joaquin",
            "text": "Joaquin is a martyr.",
            "fol": "p_0(Joaquin)",
            "str_fol": "martyr(Joaquin)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If a historical figure seeks wisdom and reads scriptures, then they find comfort.",
            "fol": "\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((seeks_wisdom(x) \u2227 reads_scriptures(x)) \u2192 finds_comfort(x))"
        },
        {
            "id": 7,
            "text": "If Joaquin either founds an order or builds a community (but not both), then he serves humankind.",
            "fol": "(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)",
            "str_fol": "(founds_order(Joaquin) \u2295 build_community(Joaquin)) \u2192 serves_humankind(Joaquin)"
        },
        {
            "id": 6,
            "text": "If Joaquin either seeks wisdom or fosters unity (but not both), then he has a vision.",
            "fol": "(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)",
            "str_fol": "(seeks_wisdom(Joaquin) \u2295 fosters_unity(Joaquin)) \u2192 has_vision(Joaquin)"
        },
        {
            "id": 5,
            "text": "If Joaquin has a vision, then he either builds a community or influences generations, but not both.",
            "fol": "p_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))",
            "str_fol": "has_vision(Joaquin) \u2192 (build_community(Joaquin) \u2295 influence_generations(Joaquin))"
        },
        {
            "id": 4,
            "text": "For all historical figures, if they write treaties and study scripts, then they influence generations.",
            "fol": "\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((writes_treaties(x) \u2227 study_scripts(x)) \u2192 influence_generations(x))"
        },
        {
            "id": 3,
            "text": "If Joaquin either pursues knowledge or studies scripts (but not both), then he seeks truth.",
            "fol": "(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)",
            "str_fol": "(pursue_knowledge(Joaquin) \u2295 study_scripts(Joaquin)) \u2192 seek_truth(Joaquin)"
        },
        {
            "id": 2,
            "text": "Joaquin either leads by example or pursues knowledge.",
            "fol": "p_11(Joaquin) \u2228 p_12(Joaquin)",
            "str_fol": "lead_by_example(Joaquin) \u2228 pursue_knowledge(Joaquin)"
        },
        {
            "id": 1,
            "text": "If a historical figure leads by example, then they either shape the cultural narrative or inspire others, but not both.",
            "fol": "p_11(Joaquin) \u2192 (p_1(Joaquin) \u2295 p_9(Joaquin))",
            "str_fol": "lead_by_example(Joaquin) \u2192 (shape_cultural_narrative(Joaquin) \u2295 inspire_others(Joaquin))"
        },
        {
            "id": 0,
            "text": "For all historical figures, if someone is a martyr, then they either inspire others or leave a lasting legacy (or both).",
            "fol": "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (martyr(x) \u2192 (inspire_others(x) \u2228 leave_lasting_legacy(x)))"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Joaquin",
            "text": "Joaquin reads scriptures.",
            "fol": "p_7(Joaquin)",
            "str_fol": "reads_scriptures(Joaquin)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Joaquin",
            "text": "Joaquin does not find comfort.",
            "fol": "\u00acp_8(Joaquin)",
            "str_fol": "\u00acfinds_comfort(Joaquin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Joaquin",
            "text": "Joaquin founds an order.",
            "fol": "p_5(Joaquin)",
            "str_fol": "founds_order(Joaquin)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Joaquin",
            "text": "Joaquin does not serve humankind.",
            "fol": "\u00acp_6(Joaquin)",
            "str_fol": "\u00acserves_humankind(Joaquin)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Joaquin",
            "text": "Joaquin fosters unity.",
            "fol": "p_4(Joaquin)",
            "str_fol": "fosters_unity(Joaquin)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Joaquin",
            "text": "Joaquin writes treaties.",
            "fol": "p_3(Joaquin)",
            "str_fol": "writes_treaties(Joaquin)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Joaquin",
            "text": "Joaquin does not seek truth.",
            "fol": "\u00acp_2(Joaquin)",
            "str_fol": "\u00acseek_truth(Joaquin)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Joaquin",
            "text": "Joaquin shapes the cultural narrative.",
            "fol": "p_1(Joaquin)",
            "str_fol": "shape_cultural_narrative(Joaquin)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Joaquin",
            "text": "Joaquin is a martyr.",
            "fol": "p_0(Joaquin)",
            "str_fol": "martyr(Joaquin)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If a historical figure seeks wisdom and reads scriptures, then they find comfort.",
            "fol": "\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((seeks_wisdom(x) \u2227 reads_scriptures(x)) \u2192 finds_comfort(x))"
        },
        {
            "id": 7,
            "text": "If Joaquin either founds an order or builds a community (but not both), then he serves humankind.",
            "fol": "(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)",
            "str_fol": "(founds_order(Joaquin) \u2295 build_community(Joaquin)) \u2192 serves_humankind(Joaquin)"
        },
        {
            "id": 6,
            "text": "If Joaquin either seeks wisdom or fosters unity (but not both), then he has a vision.",
            "fol": "(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)",
            "str_fol": "(seeks_wisdom(Joaquin) \u2295 fosters_unity(Joaquin)) \u2192 has_vision(Joaquin)"
        },
        {
            "id": 5,
            "text": "If Joaquin has a vision, then he either builds a community or influences generations, but not both.",
            "fol": "p_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))",
            "str_fol": "has_vision(Joaquin) \u2192 (build_community(Joaquin) \u2295 influence_generations(Joaquin))"
        },
        {
            "id": 4,
            "text": "For all historical figures, if they write treaties and study scripts, then they influence generations.",
            "fol": "\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((writes_treaties(x) \u2227 study_scripts(x)) \u2192 influence_generations(x))"
        },
        {
            "id": 3,
            "text": "If Joaquin either pursues knowledge or studies scripts (but not both), then he seeks truth.",
            "fol": "(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)",
            "str_fol": "(pursue_knowledge(Joaquin) \u2295 study_scripts(Joaquin)) \u2192 seek_truth(Joaquin)"
        },
        {
            "id": 2,
            "text": "Joaquin either leads by example or pursues knowledge.",
            "fol": "p_11(Joaquin) \u2228 p_12(Joaquin)",
            "str_fol": "lead_by_example(Joaquin) \u2228 pursue_knowledge(Joaquin)"
        },
        {
            "id": 1,
            "text": "If a historical figure leads by example, then they either shape the cultural narrative or inspire others, but not both.",
            "fol": "p_11(Joaquin) \u2192 (p_1(Joaquin) \u2295 p_9(Joaquin))",
            "str_fol": "lead_by_example(Joaquin) \u2192 (shape_cultural_narrative(Joaquin) \u2295 inspire_others(Joaquin))"
        },
        {
            "id": 0,
            "text": "For all historical figures, if someone is a martyr, then they either inspire others or leave a lasting legacy (or both).",
            "fol": "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (martyr(x) \u2192 (inspire_others(x) \u2228 leave_lasting_legacy(x)))"
        }
    ],
    "context_fol": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\np_11(Joaquin) \u2192 (p_1(Joaquin) \u2295 p_9(Joaquin))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))",
    "conclusion": {
        "id": 17,
        "subject": "Joaquin",
        "text": "Joaquin does not leave a lasting legacy.",
        "fol": "\u00acp_10(Joaquin)",
        "str_fol": "\u00acleave_lasting_legacy(Joaquin)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_10(Joaquin)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Joaquin",
                    "text": "Joaquin reads scriptures.",
                    "fol": "p_7(Joaquin)",
                    "str_fol": "reads_scriptures(Joaquin)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Joaquin",
                    "text": "Joaquin does not find comfort.",
                    "fol": "\u00acp_8(Joaquin)",
                    "str_fol": "\u00acfinds_comfort(Joaquin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If a historical figure seeks wisdom and reads scriptures, then they find comfort.",
                    "fol": "\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((seeks_wisdom(x) \u2227 reads_scriptures(x)) \u2192 finds_comfort(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Joaquin",
                "text": "Joaquin does not seek wisdom.",
                "fol": "\u00acp_17(Joaquin)",
                "str_fol": "\u00acseeks_wisdom(Joaquin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Joaquin",
                    "text": "Joaquin founds an order.",
                    "fol": "p_5(Joaquin)",
                    "str_fol": "founds_order(Joaquin)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Joaquin",
                    "text": "Joaquin does not serve humankind.",
                    "fol": "\u00acp_6(Joaquin)",
                    "str_fol": "\u00acserves_humankind(Joaquin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Joaquin either founds an order or builds a community (but not both), then he serves humankind.",
                    "fol": "(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)",
                    "str_fol": "(founds_order(Joaquin) \u2295 build_community(Joaquin)) \u2192 serves_humankind(Joaquin)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Joaquin",
                "text": "Joaquin builds a community.",
                "fol": "p_16(Joaquin)",
                "str_fol": "build_community(Joaquin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Joaquin",
                    "text": "Joaquin does not seek wisdom.",
                    "fol": "\u00acp_17(Joaquin)",
                    "str_fol": "\u00acseeks_wisdom(Joaquin)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Joaquin",
                    "text": "Joaquin fosters unity.",
                    "fol": "p_4(Joaquin)",
                    "str_fol": "fosters_unity(Joaquin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Joaquin either seeks wisdom or fosters unity (but not both), then he has a vision.",
                    "fol": "(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)",
                    "str_fol": "(seeks_wisdom(Joaquin) \u2295 fosters_unity(Joaquin)) \u2192 has_vision(Joaquin)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Joaquin",
                "text": "Joaquin has a vision.",
                "fol": "p_15(Joaquin)",
                "str_fol": "has_vision(Joaquin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Joaquin",
                    "text": "Joaquin has a vision.",
                    "fol": "p_15(Joaquin)",
                    "str_fol": "has_vision(Joaquin)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Joaquin",
                    "text": "Joaquin builds a community.",
                    "fol": "p_16(Joaquin)",
                    "str_fol": "build_community(Joaquin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Joaquin has a vision, then he either builds a community or influences generations, but not both.",
                    "fol": "p_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))",
                    "str_fol": "has_vision(Joaquin) \u2192 (build_community(Joaquin) \u2295 influence_generations(Joaquin))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Joaquin",
                "text": "Joaquin does not influence generations.",
                "fol": "\u00acp_14(Joaquin)",
                "str_fol": "\u00acinfluence_generations(Joaquin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Joaquin",
                    "text": "Joaquin writes treaties.",
                    "fol": "p_3(Joaquin)",
                    "str_fol": "writes_treaties(Joaquin)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Joaquin",
                    "text": "Joaquin does not influence generations.",
                    "fol": "\u00acp_14(Joaquin)",
                    "str_fol": "\u00acinfluence_generations(Joaquin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all historical figures, if they write treaties and study scripts, then they influence generations.",
                    "fol": "\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((writes_treaties(x) \u2227 study_scripts(x)) \u2192 influence_generations(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Joaquin",
                "text": "Joaquin does not study scripts.",
                "fol": "\u00acp_13(Joaquin)",
                "str_fol": "\u00acstudy_scripts(Joaquin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Joaquin",
                    "text": "Joaquin does not study scripts.",
                    "fol": "\u00acp_13(Joaquin)",
                    "str_fol": "\u00acstudy_scripts(Joaquin)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Joaquin",
                    "text": "Joaquin does not seek truth.",
                    "fol": "\u00acp_2(Joaquin)",
                    "str_fol": "\u00acseek_truth(Joaquin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Joaquin either pursues knowledge or studies scripts (but not both), then he seeks truth.",
                    "fol": "(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)",
                    "str_fol": "(pursue_knowledge(Joaquin) \u2295 study_scripts(Joaquin)) \u2192 seek_truth(Joaquin)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Joaquin",
                "text": "Joaquin does not pursue knowledge.",
                "fol": "\u00acp_12(Joaquin)",
                "str_fol": "\u00acpursue_knowledge(Joaquin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Joaquin",
                    "text": "Joaquin does not pursue knowledge.",
                    "fol": "\u00acp_12(Joaquin)",
                    "str_fol": "\u00acpursue_knowledge(Joaquin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Joaquin either leads by example or pursues knowledge.",
                    "fol": "p_11(Joaquin) \u2228 p_12(Joaquin)",
                    "str_fol": "lead_by_example(Joaquin) \u2228 pursue_knowledge(Joaquin)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Joaquin",
                "text": "Joaquin leads by example.",
                "fol": "p_11(Joaquin)",
                "str_fol": "lead_by_example(Joaquin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Joaquin",
                    "text": "Joaquin leads by example.",
                    "fol": "p_11(Joaquin)",
                    "str_fol": "lead_by_example(Joaquin)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Joaquin",
                    "text": "Joaquin shapes the cultural narrative.",
                    "fol": "p_1(Joaquin)",
                    "str_fol": "shape_cultural_narrative(Joaquin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If a historical figure leads by example, then they either shape the cultural narrative or inspire others, but not both.",
                    "fol": "p_11(Joaquin) \u2192 (p_1(Joaquin) \u2295 p_9(Joaquin))",
                    "str_fol": "lead_by_example(Joaquin) \u2192 (shape_cultural_narrative(Joaquin) \u2295 inspire_others(Joaquin))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Joaquin",
                "text": "Joaquin does not inspire others.",
                "fol": "\u00acp_9(Joaquin)",
                "str_fol": "\u00acinspire_others(Joaquin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Joaquin",
                    "text": "Joaquin is a martyr.",
                    "fol": "p_0(Joaquin)",
                    "str_fol": "martyr(Joaquin)",
                    "negation": false
                },
                {
                    "id": 16,
                    "subject": "Joaquin",
                    "text": "Joaquin does not inspire others.",
                    "fol": "\u00acp_9(Joaquin)",
                    "str_fol": "\u00acinspire_others(Joaquin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all historical figures, if someone is a martyr, then they either inspire others or leave a lasting legacy (or both).",
                    "fol": "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (martyr(x) \u2192 (inspire_others(x) \u2228 leave_lasting_legacy(x)))"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Joaquin",
                "text": "Joaquin does not leave a lasting legacy.",
                "fol": "\u00acp_10(Joaquin)",
                "str_fol": "\u00acleave_lasting_legacy(Joaquin)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_17(x) & p_7(x) -> p_8(x))).  [assumption].\n2 -(p_5(Joaquin) <-> p_16(Joaquin)) -> p_6(Joaquin).  [assumption].\n3 -(p_17(Joaquin) <-> p_4(Joaquin)) -> p_15(Joaquin).  [assumption].\n4 p_15(Joaquin) -> -(p_16(Joaquin) <-> p_14(Joaquin)).  [assumption].\n5 (all x (p_3(x) & p_13(x) -> p_14(x))).  [assumption].\n6 -(p_12(Joaquin) <-> p_13(Joaquin)) -> p_2(Joaquin).  [assumption].\n7 p_11(Joaquin) -> -(p_1(Joaquin) <-> p_9(Joaquin)).  [assumption].\n8 (all x (p_0(x) -> p_9(x) | p_10(x))).  [assumption].\n9 --p_10(Joaquin).  [goal].\n10 -p_17(x) | -p_7(x) | p_8(x).  [clausify(1)].\n11 p_7(Joaquin).  [assumption].\n12 -p_17(Joaquin) | p_8(Joaquin).  [resolve(10,b,11,a)].\n13 -p_8(Joaquin).  [assumption].\n14 -p_5(Joaquin) | p_16(Joaquin) | p_6(Joaquin).  [clausify(2)].\n15 p_5(Joaquin).  [assumption].\n17 p_16(Joaquin) | p_6(Joaquin).  [resolve(14,a,15,a)].\n18 -p_6(Joaquin).  [assumption].\n19 p_17(Joaquin) | -p_4(Joaquin) | p_15(Joaquin).  [clausify(3)].\n20 p_4(Joaquin).  [assumption].\n22 -p_3(x) | -p_13(x) | p_14(x).  [clausify(5)].\n23 p_3(Joaquin).  [assumption].\n24 -p_12(Joaquin) | p_13(Joaquin) | p_2(Joaquin).  [clausify(6)].\n25 -p_2(Joaquin).  [assumption].\n27 -p_11(Joaquin) | -p_1(Joaquin) | -p_9(Joaquin).  [clausify(7)].\n28 p_1(Joaquin).  [assumption].\n30 -p_0(x) | p_9(x) | p_10(x).  [clausify(8)].\n31 p_0(Joaquin).  [assumption].\n32 p_17(Joaquin) | p_15(Joaquin).  [resolve(19,b,20,a)].\n34 -p_15(Joaquin) | -p_16(Joaquin) | -p_14(Joaquin).  [clausify(4)].\n35 -p_11(Joaquin) | -p_9(Joaquin).  [resolve(27,b,28,a)].\n36 p_11(Joaquin) | p_12(Joaquin).  [assumption].\n37 p_9(Joaquin) | p_10(Joaquin).  [resolve(30,a,31,a)].\n38 -p_10(Joaquin).  [deny(9)].\n40 -p_17(Joaquin).  [resolve(12,b,13,a)].\n41 p_17(Joaquin) | -p_16(Joaquin) | -p_14(Joaquin).  [resolve(32,b,34,a)].\n42 -p_16(Joaquin) | -p_14(Joaquin).  [resolve(41,a,40,a)].\n43 p_16(Joaquin).  [resolve(17,b,18,a)].\n45 -p_12(Joaquin) | p_13(Joaquin).  [resolve(24,c,25,a)].\n46 -p_13(Joaquin) | p_14(Joaquin).  [resolve(22,a,23,a)].\n48 p_9(Joaquin).  [resolve(37,b,38,a)].\n49 -p_9(Joaquin) | p_12(Joaquin).  [resolve(35,a,36,a)].\n50 -p_12(Joaquin) | p_14(Joaquin).  [resolve(45,b,46,a)].\n51 -p_14(Joaquin).  [resolve(42,a,43,a)].\n52 -p_12(Joaquin).  [resolve(50,b,51,a)].\n53 p_12(Joaquin).  [resolve(48,a,49,a)].\n54 $F.  [resolve(52,a,53,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\np_9(Joaquin)\np_9(Joaquin) \u2192 \u00acp_10(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "p_9(Joaquin)",
                    "p_9(Joaquin) -> -p_10(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))"
                ],
                "formulas(goals)": [
                    "-p_10(Joaquin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_11(Joaquin) \u2192 (p_1(Joaquin) \u2295 p_9(Joaquin))"
                ],
                "added_facts": [
                    "p_9(Joaquin)"
                ],
                "added_rules": [
                    "p_9(Joaquin) \u2192 \u00acp_10(Joaquin)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\n\u00acp_9(Joaquin)\np_9(Joaquin) \u2192 \u00acp_10(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "-p_9(Joaquin)",
                    "p_9(Joaquin) -> -p_10(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))"
                ],
                "formulas(goals)": [
                    "p_10(Joaquin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_9(Joaquin)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_9(Joaquin)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\n\u00acp_9(Joaquin)\np_10(Joaquin) \u2192 \u00acp_9(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))\np_10(Joaquin) \u2228 \u00acp_10(Joaquin)",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "-p_9(Joaquin)",
                    "p_10(Joaquin) -> -p_9(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))",
                    "p_10(Joaquin) | -p_10(Joaquin)"
                ],
                "formulas(goals)": [
                    "p_10(Joaquin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_9(Joaquin)"
                ],
                "removed_rules": [
                    "p_9(Joaquin) \u2192 \u00acp_10(Joaquin)",
                    "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))"
                ],
                "added_facts": [
                    "p_10(Joaquin) \u2228 \u00acp_10(Joaquin)"
                ],
                "added_rules": [
                    "p_10(Joaquin) \u2192 \u00acp_9(Joaquin)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\np_9(Joaquin)\np_10(Joaquin) \u2192 \u00acp_9(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))\np_10(Joaquin) \u2228 \u00acp_10(Joaquin)",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "p_9(Joaquin)",
                    "p_10(Joaquin) -> -p_9(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))",
                    "p_10(Joaquin) | -p_10(Joaquin)"
                ],
                "formulas(goals)": [
                    "-p_10(Joaquin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_9(Joaquin)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Joaquin)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\np_9(Joaquin)\np_9(Joaquin) \u2192 \u00acp_10(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))\np_10(Joaquin) \u2228 \u00acp_10(Joaquin)\n\u00acp_10(Joaquin)",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "p_9(Joaquin)",
                    "p_9(Joaquin) -> -p_10(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))",
                    "p_10(Joaquin) | -p_10(Joaquin)",
                    "-p_10(Joaquin)"
                ],
                "formulas(goals)": [
                    "-p_10(Joaquin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Joaquin) \u2192 \u00acp_9(Joaquin)"
                ],
                "added_facts": [
                    "\u00acp_10(Joaquin)"
                ],
                "added_rules": [
                    "p_9(Joaquin) \u2192 \u00acp_10(Joaquin)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\np_9(Joaquin)\np_9(Joaquin) \u2192 \u00acp_10(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))\np_10(Joaquin) \u2228 \u00acp_10(Joaquin)",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "p_9(Joaquin)",
                    "p_9(Joaquin) -> -p_10(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))",
                    "p_10(Joaquin) | -p_10(Joaquin)"
                ],
                "formulas(goals)": [
                    "-p_10(Joaquin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_10(Joaquin)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Joaquin)\n\u00acp_8(Joaquin)\np_5(Joaquin)\n\u00acp_6(Joaquin)\np_4(Joaquin)\np_3(Joaquin)\n\u00acp_2(Joaquin)\np_1(Joaquin)\np_0(Joaquin)\n\u2200x ((p_17(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_5(Joaquin) \u2295 p_16(Joaquin)) \u2192 p_6(Joaquin)\n(p_17(Joaquin) \u2295 p_4(Joaquin)) \u2192 p_15(Joaquin)\np_15(Joaquin) \u2192 (p_16(Joaquin) \u2295 p_14(Joaquin))\n\u2200x ((p_3(x) \u2227 p_13(x)) \u2192 p_14(x))\n(p_12(Joaquin) \u2295 p_13(Joaquin)) \u2192 p_2(Joaquin)\np_11(Joaquin) \u2228 p_12(Joaquin)\np_9(Joaquin)\np_9(Joaquin) \u2192 p_10(Joaquin)\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_10(x)))\np_10(Joaquin) \u2228 \u00acp_10(Joaquin)",
            "Initial Goal": "\u00acp_10(Joaquin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Joaquin)",
                    "-p_8(Joaquin)",
                    "p_5(Joaquin)",
                    "-p_6(Joaquin)",
                    "p_4(Joaquin)",
                    "p_3(Joaquin)",
                    "-p_2(Joaquin)",
                    "p_1(Joaquin)",
                    "p_0(Joaquin)",
                    "all x ((p_17(x) & p_7(x)) -> p_8(x))",
                    "(-(p_5(Joaquin) <-> p_16(Joaquin))) -> p_6(Joaquin)",
                    "(-(p_17(Joaquin) <-> p_4(Joaquin))) -> p_15(Joaquin)",
                    "p_15(Joaquin) -> (-(p_16(Joaquin) <-> p_14(Joaquin)))",
                    "all x ((p_3(x) & p_13(x)) -> p_14(x))",
                    "(-(p_12(Joaquin) <-> p_13(Joaquin))) -> p_2(Joaquin)",
                    "p_11(Joaquin) | p_12(Joaquin)",
                    "p_9(Joaquin)",
                    "p_9(Joaquin) -> p_10(Joaquin)",
                    "all x (p_0(x) -> (p_9(x) | p_10(x)))",
                    "p_10(Joaquin) | -p_10(Joaquin)"
                ],
                "formulas(goals)": [
                    "-(-p_10(Joaquin))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Joaquin) \u2192 \u00acp_10(Joaquin)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Joaquin) \u2192 p_10(Joaquin)"
                ]
            }
        }
    ]
}