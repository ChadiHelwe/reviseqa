{
    "background_story": "Dimples, a fearless and agile mountain goat, called the majestic Mount Demavend her home. Located in the Alborz mountain range of Iran, Demavend was a challenging terrain that only the hardiest of creatures could inhabit. Dimples thrived in this environment, her surefootedness and strong will allowing her to climb the steep slopes with ease. She would often ascend to the highest peaks, feeling the rush of the wind and the sun on her back. The local villagers admired Dimples for her fearlessness and agility, naming her after the charming dimples on her cheeks. As the symbol of Demavend's unyielding spirit, Dimples roamed the mountain, free and wild, a true marvel of nature.",
    "predicates": [
        {
            "id": 0,
            "name": "surefooted"
        },
        {
            "id": 1,
            "name": "adaptable"
        },
        {
            "id": 2,
            "name": "has_thick_coat"
        },
        {
            "id": 3,
            "name": "is_resilient"
        },
        {
            "id": 4,
            "name": "has_good_balance"
        },
        {
            "id": 5,
            "name": "has_strong_legs"
        },
        {
            "id": 6,
            "name": "runs_uphill"
        },
        {
            "id": 7,
            "name": "is_agile"
        },
        {
            "id": 8,
            "name": "has_strength"
        },
        {
            "id": 9,
            "name": "lives_at_high_altitude"
        },
        {
            "id": 10,
            "name": "is_fearless"
        },
        {
            "id": 11,
            "name": "can_climb_steep_slopes"
        },
        {
            "id": 12,
            "name": "is_quick"
        },
        {
            "id": 13,
            "name": "has_good_reflexes"
        },
        {
            "id": 14,
            "name": "can_jump_far"
        },
        {
            "id": 15,
            "name": "eats_nutritious"
        },
        {
            "id": 16,
            "name": "exercises_regularly"
        },
        {
            "id": 17,
            "name": "has_endurance"
        },
        {
            "id": 18,
            "name": "eats_plants"
        },
        {
            "id": 19,
            "name": "jumps_rocks"
        },
        {
            "id": 20,
            "name": "has_fast_reflex"
        },
        {
            "id": 21,
            "name": "is_lightfoot"
        }
    ],
    "subject_name": "Dimples",
    "subject_category": "mountain goat",
    "keyword": "demavend",
    "all_facts": [
        {
            "id": 0,
            "subject": "Dimples",
            "text": "Dimples is surefooted.",
            "fol": "p_0(Dimples)",
            "str_fol": "surefooted(Dimples)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dimples",
            "text": "Dimples is adaptable.",
            "fol": "p_1(Dimples)",
            "str_fol": "adaptable(Dimples)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Dimples",
            "text": "Dimples has a thick coat.",
            "fol": "p_2(Dimples)",
            "str_fol": "has_thick_coat(Dimples)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Dimples",
            "text": "Dimples is not resilient.",
            "fol": "\u00acp_3(Dimples)",
            "str_fol": "\u00acis_resilient(Dimples)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Dimples",
            "text": "Dimples has good balance.",
            "fol": "p_4(Dimples)",
            "str_fol": "has_good_balance(Dimples)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Dimples",
            "text": "Dimples has strong legs.",
            "fol": "p_5(Dimples)",
            "str_fol": "has_strong_legs(Dimples)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Dimples",
            "text": "Dimples runs uphill.",
            "fol": "p_6(Dimples)",
            "str_fol": "runs_uphill(Dimples)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Dimples",
            "text": "Dimples is quick.",
            "fol": "p_12(Dimples)",
            "str_fol": "is_quick(Dimples)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Dimples",
            "text": "Dimples cannot climb steep slopes.",
            "fol": "\u00acp_11(Dimples)",
            "str_fol": "\u00accan_climb_steep_slopes(Dimples)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Dimples",
            "text": "Dimples lives at high altitude.",
            "fol": "p_9(Dimples)",
            "str_fol": "lives_at_high_altitude(Dimples)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Dimples",
            "text": "Dimples is fearless.",
            "fol": "p_10(Dimples)",
            "str_fol": "is_fearless(Dimples)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Dimples",
            "text": "Dimples does not have strength.",
            "fol": "\u00acp_8(Dimples)",
            "str_fol": "\u00achas_strength(Dimples)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Dimples",
            "text": "Dimples is agile.",
            "fol": "p_7(Dimples)",
            "str_fol": "is_agile(Dimples)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Dimples",
            "text": "If Dimples is agile, then she can climb steep slopes.",
            "fol": "p_7(Dimples) \u2192 can_climb_steep_slopes(Dimples)",
            "str_fol": "is_agile(Dimples) \u2192 can_climb_steep_slopes(Dimples)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Dimples",
            "text": "Dimples has strong legs.",
            "fol": "p_5(Dimples)",
            "str_fol": "has_strong_legs(Dimples)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Dimples",
            "text": "Dimples runs uphill.",
            "fol": "p_6(Dimples)",
            "str_fol": "runs_uphill(Dimples)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Dimples",
            "text": "Dimples has good balance.",
            "fol": "p_4(Dimples)",
            "str_fol": "has_good_balance(Dimples)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Dimples",
            "text": "Dimples has a thick coat.",
            "fol": "p_2(Dimples)",
            "str_fol": "has_thick_coat(Dimples)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Dimples",
            "text": "Dimples is not resilient.",
            "fol": "\u00acp_3(Dimples)",
            "str_fol": "\u00acis_resilient(Dimples)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Dimples",
            "text": "Dimples is surefooted.",
            "fol": "p_0(Dimples)",
            "str_fol": "surefooted(Dimples)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dimples",
            "text": "Dimples is adaptable.",
            "fol": "p_1(Dimples)",
            "str_fol": "adaptable(Dimples)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "For all mountain goats, if they have strong legs and run uphill, then they are quick.",
            "fol": "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((has_strong_legs(x) \u2227 runs_uphill(x)) \u2192 is_quick(x))"
        },
        {
            "id": 4,
            "text": "If Dimples can climb steep slopes, then she either has good balance or is quick, but not both.",
            "fol": "p_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))",
            "str_fol": "can_climb_steep_slopes(Dimples) \u2192 (has_good_balance(Dimples) \u2295 is_quick(Dimples))"
        },
        {
            "id": 3,
            "text": "If Dimples has a thick coat, then she is either resilient or lives at high altitude, but not both.",
            "fol": "p_2(Dimples) \u2192 (p_3(Dimples) \u2295 p_9(Dimples))",
            "str_fol": "has_thick_coat(Dimples) \u2192 (is_resilient(Dimples) \u2295 lives_at_high_altitude(Dimples))"
        },
        {
            "id": 2,
            "text": "All surefooted mountain goats are adaptable and fearless.",
            "fol": "\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (surefooted(x) \u2192 (adaptable(x) \u2227 is_fearless(x)))"
        },
        {
            "id": 1,
            "text": "All mountain goats that live at high altitude are either strong or fearless.",
            "fol": "\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))",
            "str_fol": "\u2200x (lives_at_high_altitude(x) \u2192 (has_strength(x) \u2295 is_fearless(x)))"
        },
        {
            "id": 0,
            "text": "Every mountain goat is either agile or has strength.",
            "fol": "\u2200x (p_7(x) \u2228 p_8(x))",
            "str_fol": "\u2200x (is_agile(x) \u2228 has_strength(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Dimples",
            "text": "Dimples has strong legs.",
            "fol": "p_5(Dimples)",
            "str_fol": "has_strong_legs(Dimples)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Dimples",
            "text": "Dimples runs uphill.",
            "fol": "p_6(Dimples)",
            "str_fol": "runs_uphill(Dimples)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Dimples",
            "text": "Dimples has good balance.",
            "fol": "p_4(Dimples)",
            "str_fol": "has_good_balance(Dimples)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Dimples",
            "text": "Dimples has a thick coat.",
            "fol": "p_2(Dimples)",
            "str_fol": "has_thick_coat(Dimples)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Dimples",
            "text": "Dimples is not resilient.",
            "fol": "\u00acp_3(Dimples)",
            "str_fol": "\u00acis_resilient(Dimples)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Dimples",
            "text": "Dimples is surefooted.",
            "fol": "p_0(Dimples)",
            "str_fol": "surefooted(Dimples)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dimples",
            "text": "Dimples is adaptable.",
            "fol": "p_1(Dimples)",
            "str_fol": "adaptable(Dimples)",
            "negation": false
        },
        {
            "id": 5,
            "text": "For all mountain goats, if they have strong legs and run uphill, then they are quick.",
            "fol": "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((has_strong_legs(x) \u2227 runs_uphill(x)) \u2192 is_quick(x))"
        },
        {
            "id": 4,
            "text": "If Dimples can climb steep slopes, then she either has good balance or is quick, but not both.",
            "fol": "p_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))",
            "str_fol": "can_climb_steep_slopes(Dimples) \u2192 (has_good_balance(Dimples) \u2295 is_quick(Dimples))"
        },
        {
            "id": 3,
            "text": "If Dimples has a thick coat, then she is either resilient or lives at high altitude, but not both.",
            "fol": "p_2(Dimples) \u2192 (p_3(Dimples) \u2295 p_9(Dimples))",
            "str_fol": "has_thick_coat(Dimples) \u2192 (is_resilient(Dimples) \u2295 lives_at_high_altitude(Dimples))"
        },
        {
            "id": 2,
            "text": "All surefooted mountain goats are adaptable and fearless.",
            "fol": "\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (surefooted(x) \u2192 (adaptable(x) \u2227 is_fearless(x)))"
        },
        {
            "id": 1,
            "text": "All mountain goats that live at high altitude are either strong or fearless.",
            "fol": "\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))",
            "str_fol": "\u2200x (lives_at_high_altitude(x) \u2192 (has_strength(x) \u2295 is_fearless(x)))"
        },
        {
            "id": 0,
            "text": "Every mountain goat is either agile or has strength.",
            "fol": "\u2200x (p_7(x) \u2228 p_8(x))",
            "str_fol": "\u2200x (is_agile(x) \u2228 has_strength(x))"
        }
    ],
    "context_fol": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\np_2(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\np_2(Dimples) \u2192 (p_3(Dimples) \u2295 p_9(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (p_7(x) \u2228 p_8(x))",
    "conclusion": {
        "id": 12,
        "text": "If Dimples is agile, then she can climb steep slopes.",
        "fol": "p_7(Dimples) \u2192 p_11(Dimples)",
        "str_fol": "is_agile(Dimples) \u2192 can_climb_steep_slopes(Dimples)"
    },
    "initial_answer": "False",
    "initial_goal": "p_7(Dimples) \u2192 p_11(Dimples)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Dimples",
                    "text": "Dimples has strong legs.",
                    "fol": "p_5(Dimples)",
                    "str_fol": "has_strong_legs(Dimples)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Dimples",
                    "text": "Dimples runs uphill.",
                    "fol": "p_6(Dimples)",
                    "str_fol": "runs_uphill(Dimples)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "For all mountain goats, if they have strong legs and run uphill, then they are quick.",
                    "fol": "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))",
                    "str_fol": "\u2200x ((has_strong_legs(x) \u2227 runs_uphill(x)) \u2192 is_quick(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Dimples",
                "text": "Dimples is quick.",
                "fol": "p_12(Dimples)",
                "str_fol": "is_quick(Dimples)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Dimples",
                    "text": "Dimples has good balance.",
                    "fol": "p_4(Dimples)",
                    "str_fol": "has_good_balance(Dimples)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Dimples",
                    "text": "Dimples is quick.",
                    "fol": "p_12(Dimples)",
                    "str_fol": "is_quick(Dimples)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Dimples can climb steep slopes, then she either has good balance or is quick, but not both.",
                    "fol": "p_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))",
                    "str_fol": "can_climb_steep_slopes(Dimples) \u2192 (has_good_balance(Dimples) \u2295 is_quick(Dimples))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Dimples",
                "text": "Dimples cannot climb steep slopes.",
                "fol": "\u00acp_11(Dimples)",
                "str_fol": "\u00accan_climb_steep_slopes(Dimples)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Dimples",
                    "text": "Dimples has a thick coat.",
                    "fol": "p_2(Dimples)",
                    "str_fol": "has_thick_coat(Dimples)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Dimples",
                    "text": "Dimples is not resilient.",
                    "fol": "\u00acp_3(Dimples)",
                    "str_fol": "\u00acis_resilient(Dimples)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Dimples has a thick coat, then she is either resilient or lives at high altitude, but not both.",
                    "fol": "p_2(Dimples) \u2192 (p_3(Dimples) \u2295 p_9(Dimples))",
                    "str_fol": "has_thick_coat(Dimples) \u2192 (is_resilient(Dimples) \u2295 lives_at_high_altitude(Dimples))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Dimples",
                "text": "Dimples lives at high altitude.",
                "fol": "p_9(Dimples)",
                "str_fol": "lives_at_high_altitude(Dimples)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Dimples",
                    "text": "Dimples is surefooted.",
                    "fol": "p_0(Dimples)",
                    "str_fol": "surefooted(Dimples)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Dimples",
                    "text": "Dimples is adaptable.",
                    "fol": "p_1(Dimples)",
                    "str_fol": "adaptable(Dimples)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "All surefooted mountain goats are adaptable and fearless.",
                    "fol": "\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (surefooted(x) \u2192 (adaptable(x) \u2227 is_fearless(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Dimples",
                "text": "Dimples is fearless.",
                "fol": "p_10(Dimples)",
                "str_fol": "is_fearless(Dimples)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Dimples",
                    "text": "Dimples lives at high altitude.",
                    "fol": "p_9(Dimples)",
                    "str_fol": "lives_at_high_altitude(Dimples)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Dimples",
                    "text": "Dimples is fearless.",
                    "fol": "p_10(Dimples)",
                    "str_fol": "is_fearless(Dimples)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "All mountain goats that live at high altitude are either strong or fearless.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))",
                    "str_fol": "\u2200x (lives_at_high_altitude(x) \u2192 (has_strength(x) \u2295 is_fearless(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Dimples",
                "text": "Dimples does not have strength.",
                "fol": "\u00acp_8(Dimples)",
                "str_fol": "\u00achas_strength(Dimples)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Dimples",
                    "text": "Dimples does not have strength.",
                    "fol": "\u00acp_8(Dimples)",
                    "str_fol": "\u00achas_strength(Dimples)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Every mountain goat is either agile or has strength.",
                    "fol": "\u2200x (p_7(x) \u2228 p_8(x))",
                    "str_fol": "\u2200x (is_agile(x) \u2228 has_strength(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Dimples",
                "text": "Dimples is agile.",
                "fol": "p_7(Dimples)",
                "str_fol": "is_agile(Dimples)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Dimples",
                    "text": "Dimples is agile.",
                    "fol": "p_7(Dimples)",
                    "str_fol": "is_agile(Dimples)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Dimples",
                    "text": "Dimples cannot climb steep slopes.",
                    "fol": "\u00acp_11(Dimples)",
                    "str_fol": "\u00accan_climb_steep_slopes(Dimples)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 12,
                "text": "If Dimples is agile, then she can climb steep slopes.",
                "fol": "p_7(Dimples) \u2192 p_11(Dimples)",
                "str_fol": "is_agile(Dimples) \u2192 can_climb_steep_slopes(Dimples)"
            }
        }
    ],
    "proof_trace": "1 (all x (p_5(x) & p_6(x) -> p_12(x))).  [assumption].\n2 p_11(Dimples) -> -(p_4(Dimples) <-> p_12(Dimples)).  [assumption].\n3 p_2(Dimples) -> -(p_3(Dimples) <-> p_9(Dimples)).  [assumption].\n4 (all x (p_0(x) -> p_1(x) & p_10(x))).  [assumption].\n5 (all x (p_9(x) -> -(p_8(x) <-> p_10(x)))).  [assumption].\n6 (all x (p_7(x) | p_8(x))).  [assumption].\n7 -(p_7(Dimples) -> p_11(Dimples)).  [goal].\n8 -p_5(x) | -p_6(x) | p_12(x).  [clausify(1)].\n9 p_5(Dimples).  [assumption].\n10 -p_6(Dimples) | p_12(Dimples).  [resolve(8,a,9,a)].\n11 p_6(Dimples).  [assumption].\n12 -p_11(Dimples) | -p_4(Dimples) | -p_12(Dimples).  [clausify(2)].\n13 p_4(Dimples).  [assumption].\n15 -p_2(Dimples) | p_3(Dimples) | p_9(Dimples).  [clausify(3)].\n16 p_2(Dimples).  [assumption].\n18 p_3(Dimples) | p_9(Dimples).  [resolve(15,a,16,a)].\n19 -p_3(Dimples).  [assumption].\n22 p_0(Dimples).  [assumption].\n23 -p_0(x) | p_10(x).  [clausify(4)].\n24 p_9(Dimples).  [resolve(18,a,19,a)].\n26 -p_9(x) | -p_8(x) | -p_10(x).  [clausify(5)].\n27 -p_7(Dimples) | p_11(Dimples).  [deny(7)].\n28 p_7(x) | p_8(x).  [clausify(6)].\n29 -p_11(Dimples) | -p_12(Dimples).  [resolve(12,b,13,a)].\n30 p_12(Dimples).  [resolve(10,a,11,a)].\n31 -p_8(Dimples) | -p_10(Dimples).  [resolve(24,a,26,a)].\n32 p_10(Dimples).  [resolve(23,a,22,a)].\n33 -p_11(Dimples).  [resolve(29,b,30,a)].\n34 p_11(Dimples) | p_8(Dimples).  [resolve(27,a,28,a)].\n35 p_8(Dimples).  [resolve(33,a,34,a)].\n36 -p_8(Dimples).  [resolve(31,b,32,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (p_7(x) \u2228 p_8(x))\np_7(Dimples) \u2192 p_11(Dimples)",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples)",
                    "p_6(Dimples)",
                    "p_4(Dimples)",
                    "-p_3(Dimples)",
                    "p_0(Dimples)",
                    "p_1(Dimples)",
                    "all x ((p_5(x) & p_6(x)) -> p_12(x))",
                    "p_11(Dimples) -> (-(p_4(Dimples) <-> p_12(Dimples)))",
                    "all x (p_0(x) -> (p_1(x) & p_10(x)))",
                    "all x (p_9(x) -> (-(p_8(x) <-> p_10(x))))",
                    "all x (p_7(x) | p_8(x))",
                    "p_7(Dimples) -> p_11(Dimples)"
                ],
                "formulas(goals)": [
                    "p_7(Dimples) -> p_11(Dimples)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_2(Dimples)"
                ],
                "removed_rules": [
                    "p_2(Dimples) \u2192 (p_3(Dimples) \u2295 p_9(Dimples))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Dimples) \u2192 p_11(Dimples)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_5(x) \u2228 \u00acp_6(x)))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (\u00acp_7(x) \u2192 p_8(x))\np_7(Dimples) \u2192 p_11(Dimples)\np_10(Dimples)\np_12(Dimples)",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples)",
                    "p_6(Dimples)",
                    "p_4(Dimples)",
                    "-p_3(Dimples)",
                    "p_0(Dimples)",
                    "p_1(Dimples)",
                    "all x (-p_12(x) -> (-p_5(x) | -p_6(x)))",
                    "p_11(Dimples) -> (-(p_4(Dimples) <-> p_12(Dimples)))",
                    "all x (p_0(x) -> (p_1(x) & p_10(x)))",
                    "all x (p_9(x) -> (-(p_8(x) <-> p_10(x))))",
                    "all x (-p_7(x) -> p_8(x))",
                    "p_7(Dimples) -> p_11(Dimples)",
                    "p_10(Dimples)",
                    "p_12(Dimples)"
                ],
                "formulas(goals)": [
                    "p_7(Dimples) -> p_11(Dimples)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))",
                    "\u2200x (p_7(x) \u2228 p_8(x))"
                ],
                "added_facts": [
                    "p_10(Dimples)",
                    "p_12(Dimples)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 (\u00acp_5(x) \u2228 \u00acp_6(x)))",
                    "\u2200x (\u00acp_7(x) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_5(x) \u2228 \u00acp_6(x)))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (\u00acp_7(x) \u2192 p_8(x))\np_7(Dimples) \u2192 p_11(Dimples)\np_10(Dimples)\np_12(Dimples)\n\u00acp_11(Dimples)\np_1(Dimples) \u2227 p_10(Dimples)\np_12(Dimples) \u2228 \u00acp_5(Dimples) \u2228 \u00acp_6(Dimples)",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples)",
                    "p_6(Dimples)",
                    "p_4(Dimples)",
                    "-p_3(Dimples)",
                    "p_0(Dimples)",
                    "p_1(Dimples)",
                    "all x (-p_12(x) -> (-p_5(x) | -p_6(x)))",
                    "p_11(Dimples) -> -(p_4(Dimples) <-> p_12(Dimples))",
                    "all x (p_0(x) -> (p_1(x) & p_10(x)))",
                    "all x (p_9(x) -> -(p_8(x) <-> p_10(x)))",
                    "all x (-p_7(x) -> p_8(x))",
                    "p_7(Dimples) -> p_11(Dimples)",
                    "p_10(Dimples)",
                    "p_12(Dimples)",
                    "-p_11(Dimples)",
                    "p_1(Dimples) & p_10(Dimples)",
                    "p_12(Dimples) | -p_5(Dimples) | -p_6(Dimples)"
                ],
                "formulas(goals)": [
                    "p_7(Dimples) -> p_11(Dimples)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Dimples)",
                    "p_1(Dimples) \u2227 p_10(Dimples)",
                    "p_12(Dimples) \u2228 \u00acp_5(Dimples) \u2228 \u00acp_6(Dimples)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_5(x) \u2228 \u00acp_6(x)))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (\u00acp_7(x) \u2192 p_8(x))\np_10(Dimples)\np_12(Dimples)\n\u00acp_11(Dimples)\np_1(Dimples) \u2227 p_10(Dimples)\np_12(Dimples) \u2228 \u00acp_5(Dimples) \u2228 \u00acp_6(Dimples)\np_12(Dimples) \u2192 p_7(Dimples)",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples)",
                    "p_6(Dimples)",
                    "p_4(Dimples)",
                    "-p_3(Dimples)",
                    "p_0(Dimples)",
                    "p_1(Dimples)",
                    "all x (-p_12(x) -> (-p_5(x) | -p_6(x)))",
                    "p_11(Dimples) -> (-(p_4(Dimples) <-> p_12(Dimples)))",
                    "all x (p_0(x) -> (p_1(x) & p_10(x)))",
                    "all x (p_9(x) -> (-(p_8(x) <-> p_10(x))))",
                    "all x (-p_7(x) -> p_8(x))",
                    "p_10(Dimples)",
                    "p_12(Dimples)",
                    "-p_11(Dimples)",
                    "p_1(Dimples) & p_10(Dimples)",
                    "p_12(Dimples) | -p_5(Dimples) | -p_6(Dimples)",
                    "p_12(Dimples) -> p_7(Dimples)"
                ],
                "formulas(goals)": [
                    "-(p_7(Dimples) -> p_11(Dimples))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Dimples) \u2192 p_11(Dimples)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_12(Dimples) \u2192 p_7(Dimples)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_5(x) \u2228 \u00acp_6(x)))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (\u00acp_7(x) \u2192 p_8(x))\np_10(Dimples)\np_12(Dimples)\n\u00acp_11(Dimples)\np_1(Dimples) \u2227 p_10(Dimples)\np_12(Dimples) \u2228 \u00acp_5(Dimples) \u2228 \u00acp_6(Dimples)\n\u00acp_7(Dimples)",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples)",
                    "p_6(Dimples)",
                    "p_4(Dimples)",
                    "-p_3(Dimples)",
                    "p_0(Dimples)",
                    "p_1(Dimples)",
                    "all x (-p_12(x) -> (-p_5(x) | -p_6(x)))",
                    "p_11(Dimples) -> (-(p_4(Dimples) <-> p_12(Dimples)))",
                    "all x (p_0(x) -> (p_1(x) & p_10(x)))",
                    "all x (p_9(x) -> (-(p_8(x) <-> p_10(x))))",
                    "all x (-p_7(x) -> p_8(x))",
                    "p_10(Dimples)",
                    "p_12(Dimples)",
                    "-p_11(Dimples)",
                    "p_1(Dimples) & p_10(Dimples)",
                    "p_12(Dimples) | -p_5(Dimples) | -p_6(Dimples)",
                    "-p_7(Dimples)"
                ],
                "formulas(goals)": [
                    "p_7(Dimples) -> p_11(Dimples)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_12(Dimples) \u2192 p_7(Dimples)"
                ],
                "added_facts": [
                    "\u00acp_7(Dimples)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (\u00acp_7(x) \u2192 p_8(x))\np_10(Dimples)\np_12(Dimples)\n\u00acp_11(Dimples)\np_1(Dimples) \u2227 p_10(Dimples)\np_12(Dimples) \u2228 \u00acp_5(Dimples) \u2228 \u00acp_6(Dimples)\n\u00acp_7(Dimples)\n(p_5(Dimples) \u2227 p_6(Dimples)) \u2192 p_12(Dimples)\np_4(Dimples) \u2192 p_4(Dimples)\np_12(Dimples) \u2228 \u00acp_12(Dimples)\n\u2200x (p_12(x) \u2228 \u00acp_5(x) \u2228 \u00acp_6(x))",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples)",
                    "p_6(Dimples)",
                    "p_4(Dimples)",
                    "-p_3(Dimples)",
                    "p_0(Dimples)",
                    "p_1(Dimples)",
                    "all x ((p_5(x) & p_6(x)) -> p_12(x))",
                    "p_11(Dimples) -> (-(p_4(Dimples) <-> p_12(Dimples)))",
                    "all x (p_0(x) -> (p_1(x) & p_10(x)))",
                    "all x (p_9(x) -> (-(p_8(x) <-> p_10(x))))",
                    "all x (-p_7(x) -> p_8(x))",
                    "p_10(Dimples)",
                    "p_12(Dimples)",
                    "-p_11(Dimples)",
                    "p_1(Dimples) & p_10(Dimples)",
                    "p_12(Dimples) | -p_5(Dimples) | -p_6(Dimples)",
                    "-p_7(Dimples)",
                    "(p_5(Dimples) & p_6(Dimples)) -> p_12(Dimples)",
                    "p_4(Dimples) -> p_4(Dimples)",
                    "p_12(Dimples) | -p_12(Dimples)",
                    "all x (p_12(x) | -p_5(x) | -p_6(x))"
                ],
                "formulas(goals)": [
                    "p_7(Dimples) -> p_11(Dimples)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 (\u00acp_5(x) \u2228 \u00acp_6(x)))"
                ],
                "added_facts": [
                    "p_5(Dimples) \u2227 p_6(Dimples) \u2192 p_12(Dimples)",
                    "p_4(Dimples) \u2192 p_4(Dimples)",
                    "p_12(Dimples) \u2228 \u00acp_12(Dimples)",
                    "\u00acp_11(Dimples)"
                ],
                "added_rules": [
                    "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))",
                    "\u2200x (p_12(x) \u2228 \u00acp_5(x) \u2228 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Dimples)\np_6(Dimples)\np_4(Dimples)\n\u00acp_3(Dimples)\np_0(Dimples)\np_1(Dimples)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_12(x))\np_11(Dimples) \u2192 (p_4(Dimples) \u2295 p_12(Dimples))\n\u2200x (p_0(x) \u2192 (p_1(x) \u2227 p_10(x)))\n\u2200x (p_9(x) \u2192 (p_8(x) \u2295 p_10(x)))\n\u2200x (\u00acp_7(x) \u2192 p_8(x))\np_10(Dimples)\np_12(Dimples)\n\u00acp_11(Dimples)\np_1(Dimples) \u2227 p_10(Dimples)\np_12(Dimples) \u2228 \u00acp_5(Dimples) \u2228 \u00acp_6(Dimples)\n(p_5(Dimples) \u2227 p_6(Dimples)) \u2192 p_12(Dimples)\np_4(Dimples) \u2192 p_4(Dimples)\np_12(Dimples) \u2228 \u00acp_12(Dimples)\n\u2200x (p_12(x) \u2228 \u00acp_5(x) \u2228 \u00acp_6(x))\np_7(Dimples)",
            "Initial Goal": "p_7(Dimples) \u2192 p_11(Dimples)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Dimples).",
                    "p_6(Dimples).",
                    "p_4(Dimples).",
                    "-p_3(Dimples).",
                    "p_0(Dimples).",
                    "p_1(Dimples).",
                    "all x ((p_5(x) & p_6(x)) -> p_12(x)).",
                    "(p_11(Dimples) -> (-(p_4(Dimples) <-> p_12(Dimples)))).",
                    "all x (p_0(x) -> (p_1(x) & p_10(x))).",
                    "all x (p_9(x) -> (-(p_8(x) <-> p_10(x)))).",
                    "all x (-p_7(x) -> p_8(x)).",
                    "p_10(Dimples).",
                    "p_12(Dimples).",
                    "-p_11(Dimples).",
                    "(p_1(Dimples) & p_10(Dimples)).",
                    "(p_12(Dimples) | -p_5(Dimples) | -p_6(Dimples)).",
                    "((p_5(Dimples) & p_6(Dimples)) -> p_12(Dimples)).",
                    "(p_4(Dimples) -> p_4(Dimples)).",
                    "(p_12(Dimples) | -p_12(Dimples)).",
                    "all x (p_12(x) | -p_5(x) | -p_6(x)).",
                    "p_7(Dimples)."
                ],
                "formulas(goals)": [
                    "- (p_7(Dimples) -> p_11(Dimples))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Dimples)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Dimples)"
                ],
                "added_rules": []
            }
        }
    ]
}