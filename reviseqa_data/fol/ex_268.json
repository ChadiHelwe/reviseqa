{
    "background_story": "Miley was a meticulous jeweler with an eye for detail. She spent most of her days crafting intricate pieces that sparkled with precision. Miley's workshop was a treasure trove of gems, metals, and curious tools, including an antique scale that measured in pennyweights. She adored working with gold and silver, carefully weighing each piece to ensure it met her exacting standards. One day, a client requested a custom necklace featuring a rare, 10-pennyweight diamond. Miley poured her heart into the project, carefully setting the stone amidst a delicate filigree of 18-karat gold. The finished piece was breathtaking, and Miley's client was overjoyed. From then on, Miley was known as the 'pennyweight perfectionist' among jewelry connoisseurs, sought after for her exceptional craftsmanship and attention to detail.",
    "predicates": [
        {
            "id": 0,
            "name": "sets_stones"
        },
        {
            "id": 1,
            "name": "designs_rings"
        },
        {
            "id": 2,
            "name": "is_proficient"
        },
        {
            "id": 3,
            "name": "uses_gold"
        },
        {
            "id": 4,
            "name": "works_precisely"
        },
        {
            "id": 5,
            "name": "is_meticulous"
        },
        {
            "id": 6,
            "name": "creates_quality_pieces"
        },
        {
            "id": 7,
            "name": "uses_precise_tools"
        },
        {
            "id": 8,
            "name": "works_with_gems"
        },
        {
            "id": 9,
            "name": "crafts_necklaces"
        },
        {
            "id": 10,
            "name": "is_skilled"
        },
        {
            "id": 11,
            "name": "makes_earrings"
        },
        {
            "id": 12,
            "name": "pays_attention"
        },
        {
            "id": 13,
            "name": "has_exacting_standards"
        },
        {
            "id": 14,
            "name": "measures_accurately"
        },
        {
            "id": 15,
            "name": "cuts_metals"
        },
        {
            "id": 16,
            "name": "polishes_stones"
        },
        {
            "id": 17,
            "name": "polishes_jewels"
        },
        {
            "id": 18,
            "name": "handles_metals"
        },
        {
            "id": 19,
            "name": "polishes_pendants"
        }
    ],
    "subject_name": "Miley",
    "subject_category": "jeweler",
    "keyword": "pennyweight",
    "all_facts": [
        {
            "id": 0,
            "subject": "Miley",
            "text": "Miley does not set stones.",
            "fol": "\u00acp_0(Miley)",
            "str_fol": "\u00acsets_stones(Miley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Miley",
            "text": "Miley designs rings.",
            "fol": "p_1(Miley)",
            "str_fol": "designs_rings(Miley)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Miley",
            "text": "Miley is not proficient.",
            "fol": "\u00acp_2(Miley)",
            "str_fol": "\u00acis_proficient(Miley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Miley",
            "text": "Miley does not use gold.",
            "fol": "\u00acp_3(Miley)",
            "str_fol": "\u00acuses_gold(Miley)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Miley",
            "text": "Miley does not work precisely when making earrings, so she must use gold if she makes earrings.",
            "fol": "\u00acp_4(Miley)",
            "str_fol": "\u00acworks_precisely(Miley)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Miley",
            "text": "Miley does not make earrings.",
            "fol": "\u00acp_11(Miley)",
            "str_fol": "\u00acmakes_earrings(Miley)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Miley",
            "text": "Miley is not skilled.",
            "fol": "\u00acp_10(Miley)",
            "str_fol": "\u00acis_skilled(Miley)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Miley",
            "text": "Miley crafts necklaces.",
            "fol": "p_9(Miley)",
            "str_fol": "crafts_necklaces(Miley)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Miley",
            "text": "Miley works with gems.",
            "fol": "p_8(Miley)",
            "str_fol": "works_with_gems(Miley)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Miley",
            "text": "Miley does not use precise tools.",
            "fol": "\u00acp_7(Miley)",
            "str_fol": "\u00acuses_precise_tools(Miley)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Miley",
            "text": "Miley is meticulous.",
            "fol": "p_5(Miley)",
            "str_fol": "is_meticulous(Miley)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Miley",
            "text": "Miley creates quality pieces.",
            "fol": "p_6(Miley)",
            "str_fol": "creates_quality_pieces(Miley)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Miley",
            "text": "Miley does not use gold.",
            "fol": "\u00acp_3(Miley)",
            "str_fol": "\u00acuses_gold(Miley)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Miley",
            "text": "Miley does not work precisely when making earrings, so she must use gold if she makes earrings.",
            "fol": "\u00acp_4(Miley)",
            "str_fol": "\u00acworks_precisely(Miley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Miley",
            "text": "Miley is not proficient.",
            "fol": "\u00acp_2(Miley)",
            "str_fol": "\u00acis_proficient(Miley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Miley",
            "text": "Miley designs rings.",
            "fol": "p_1(Miley)",
            "str_fol": "designs_rings(Miley)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Miley",
            "text": "Miley does not set stones.",
            "fol": "\u00acp_0(Miley)",
            "str_fol": "\u00acsets_stones(Miley)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Miley makes earrings, then she either uses gold or works precisely (or both).",
            "fol": "p_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))",
            "str_fol": "makes_earrings(Miley) \u2192 (uses_gold(Miley) \u2228 works_precisely(Miley))"
        },
        {
            "id": 5,
            "text": "If a jeweler is either skilled or makes earrings, then they are proficient.",
            "fol": "\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((is_skilled(x) \u2295 makes_earrings(x)) \u2192 is_proficient(x))"
        },
        {
            "id": 4,
            "text": "For all jewelers, if they either craft necklaces or design rings, then they are skilled.",
            "fol": "\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((crafts_necklaces(x) \u2295 designs_rings(x)) \u2192 is_skilled(x))"
        },
        {
            "id": 3,
            "text": "If Miley crafts necklaces, then she either sets stones or works with gems, but not both.",
            "fol": "p_9(Miley) \u2192 (p_0(Miley) \u2295 p_8(Miley))",
            "str_fol": "crafts_necklaces(Miley) \u2192 (sets_stones(Miley) \u2295 works_with_gems(Miley))"
        },
        {
            "id": 2,
            "text": "Miley either uses precise tools or works with gems, but not both.",
            "fol": "p_7(Miley) \u2295 p_8(Miley)",
            "str_fol": "uses_precise_tools(Miley) \u2295 works_with_gems(Miley)"
        },
        {
            "id": 1,
            "text": "Every jeweler is meticulous or uses precise tools.",
            "fol": "\u2200x (p_5(x) \u2228 p_7(x))",
            "str_fol": "\u2200x (is_meticulous(x) \u2228 uses_precise_tools(x))"
        },
        {
            "id": 0,
            "text": "For all jewelers, if they are meticulous, then they create quality pieces.",
            "fol": "\u2200x (p_5(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (is_meticulous(x) \u2192 creates_quality_pieces(x))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Miley",
            "text": "Miley does not use gold.",
            "fol": "\u00acp_3(Miley)",
            "str_fol": "\u00acuses_gold(Miley)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Miley",
            "text": "Miley does not work precisely when making earrings, so she must use gold if she makes earrings.",
            "fol": "\u00acp_4(Miley)",
            "str_fol": "\u00acworks_precisely(Miley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Miley",
            "text": "Miley is not proficient.",
            "fol": "\u00acp_2(Miley)",
            "str_fol": "\u00acis_proficient(Miley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Miley",
            "text": "Miley designs rings.",
            "fol": "p_1(Miley)",
            "str_fol": "designs_rings(Miley)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Miley",
            "text": "Miley does not set stones.",
            "fol": "\u00acp_0(Miley)",
            "str_fol": "\u00acsets_stones(Miley)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Miley makes earrings, then she either uses gold or works precisely (or both).",
            "fol": "p_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))",
            "str_fol": "makes_earrings(Miley) \u2192 (uses_gold(Miley) \u2228 works_precisely(Miley))"
        },
        {
            "id": 5,
            "text": "If a jeweler is either skilled or makes earrings, then they are proficient.",
            "fol": "\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((is_skilled(x) \u2295 makes_earrings(x)) \u2192 is_proficient(x))"
        },
        {
            "id": 4,
            "text": "For all jewelers, if they either craft necklaces or design rings, then they are skilled.",
            "fol": "\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((crafts_necklaces(x) \u2295 designs_rings(x)) \u2192 is_skilled(x))"
        },
        {
            "id": 3,
            "text": "If Miley crafts necklaces, then she either sets stones or works with gems, but not both.",
            "fol": "p_9(Miley) \u2192 (p_0(Miley) \u2295 p_8(Miley))",
            "str_fol": "crafts_necklaces(Miley) \u2192 (sets_stones(Miley) \u2295 works_with_gems(Miley))"
        },
        {
            "id": 2,
            "text": "Miley either uses precise tools or works with gems, but not both.",
            "fol": "p_7(Miley) \u2295 p_8(Miley)",
            "str_fol": "uses_precise_tools(Miley) \u2295 works_with_gems(Miley)"
        },
        {
            "id": 1,
            "text": "Every jeweler is meticulous or uses precise tools.",
            "fol": "\u2200x (p_5(x) \u2228 p_7(x))",
            "str_fol": "\u2200x (is_meticulous(x) \u2228 uses_precise_tools(x))"
        },
        {
            "id": 0,
            "text": "For all jewelers, if they are meticulous, then they create quality pieces.",
            "fol": "\u2200x (p_5(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (is_meticulous(x) \u2192 creates_quality_pieces(x))"
        }
    ],
    "context_fol": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2295 p_8(Miley))\np_7(Miley) \u2295 p_8(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))",
    "conclusion": {
        "id": 11,
        "subject": "Miley",
        "text": "Miley creates quality pieces.",
        "fol": "p_6(Miley)",
        "str_fol": "creates_quality_pieces(Miley)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_6(Miley)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Miley",
                    "text": "Miley does not use gold.",
                    "fol": "\u00acp_3(Miley)",
                    "str_fol": "\u00acuses_gold(Miley)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Miley",
                    "text": "Miley does not work precisely when making earrings, so she must use gold if she makes earrings.",
                    "fol": "\u00acp_4(Miley)",
                    "str_fol": "\u00acworks_precisely(Miley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Miley makes earrings, then she either uses gold or works precisely (or both).",
                    "fol": "p_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))",
                    "str_fol": "makes_earrings(Miley) \u2192 (uses_gold(Miley) \u2228 works_precisely(Miley))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Miley",
                "text": "Miley does not make earrings.",
                "fol": "\u00acp_11(Miley)",
                "str_fol": "\u00acmakes_earrings(Miley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Miley",
                    "text": "Miley does not make earrings.",
                    "fol": "\u00acp_11(Miley)",
                    "str_fol": "\u00acmakes_earrings(Miley)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Miley",
                    "text": "Miley is not proficient.",
                    "fol": "\u00acp_2(Miley)",
                    "str_fol": "\u00acis_proficient(Miley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If a jeweler is either skilled or makes earrings, then they are proficient.",
                    "fol": "\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((is_skilled(x) \u2295 makes_earrings(x)) \u2192 is_proficient(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Miley",
                "text": "Miley is not skilled.",
                "fol": "\u00acp_10(Miley)",
                "str_fol": "\u00acis_skilled(Miley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Miley",
                    "text": "Miley designs rings.",
                    "fol": "p_1(Miley)",
                    "str_fol": "designs_rings(Miley)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Miley",
                    "text": "Miley is not skilled.",
                    "fol": "\u00acp_10(Miley)",
                    "str_fol": "\u00acis_skilled(Miley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all jewelers, if they either craft necklaces or design rings, then they are skilled.",
                    "fol": "\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((crafts_necklaces(x) \u2295 designs_rings(x)) \u2192 is_skilled(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Miley",
                "text": "Miley crafts necklaces.",
                "fol": "p_9(Miley)",
                "str_fol": "crafts_necklaces(Miley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Miley",
                    "text": "Miley crafts necklaces.",
                    "fol": "p_9(Miley)",
                    "str_fol": "crafts_necklaces(Miley)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Miley",
                    "text": "Miley does not set stones.",
                    "fol": "\u00acp_0(Miley)",
                    "str_fol": "\u00acsets_stones(Miley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Miley crafts necklaces, then she either sets stones or works with gems, but not both.",
                    "fol": "p_9(Miley) \u2192 (p_0(Miley) \u2295 p_8(Miley))",
                    "str_fol": "crafts_necklaces(Miley) \u2192 (sets_stones(Miley) \u2295 works_with_gems(Miley))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Miley",
                "text": "Miley works with gems.",
                "fol": "p_8(Miley)",
                "str_fol": "works_with_gems(Miley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Miley",
                    "text": "Miley works with gems.",
                    "fol": "p_8(Miley)",
                    "str_fol": "works_with_gems(Miley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Miley either uses precise tools or works with gems, but not both.",
                    "fol": "p_7(Miley) \u2295 p_8(Miley)",
                    "str_fol": "uses_precise_tools(Miley) \u2295 works_with_gems(Miley)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Miley",
                "text": "Miley does not use precise tools.",
                "fol": "\u00acp_7(Miley)",
                "str_fol": "\u00acuses_precise_tools(Miley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Miley",
                    "text": "Miley does not use precise tools.",
                    "fol": "\u00acp_7(Miley)",
                    "str_fol": "\u00acuses_precise_tools(Miley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every jeweler is meticulous or uses precise tools.",
                    "fol": "\u2200x (p_5(x) \u2228 p_7(x))",
                    "str_fol": "\u2200x (is_meticulous(x) \u2228 uses_precise_tools(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Miley",
                "text": "Miley is meticulous.",
                "fol": "p_5(Miley)",
                "str_fol": "is_meticulous(Miley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Miley",
                    "text": "Miley is meticulous.",
                    "fol": "p_5(Miley)",
                    "str_fol": "is_meticulous(Miley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all jewelers, if they are meticulous, then they create quality pieces.",
                    "fol": "\u2200x (p_5(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (is_meticulous(x) \u2192 creates_quality_pieces(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Miley",
                "text": "Miley creates quality pieces.",
                "fol": "p_6(Miley)",
                "str_fol": "creates_quality_pieces(Miley)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_11(Miley) -> p_3(Miley) | p_4(Miley).  [assumption].\n2 (all x (-(p_10(x) <-> p_11(x)) -> p_2(x))).  [assumption].\n3 (all x (-(p_9(x) <-> p_1(x)) -> p_10(x))).  [assumption].\n4 p_9(Miley) -> -(p_0(Miley) <-> p_8(Miley)).  [assumption].\n5 -(p_7(Miley) <-> p_8(Miley)).  [assumption].\n6 (all x (p_5(x) | p_7(x))).  [assumption].\n7 (all x (p_5(x) -> p_6(x))).  [assumption].\n8 p_6(Miley).  [goal].\n9 -p_11(Miley) | p_3(Miley) | p_4(Miley).  [clausify(1)].\n10 -p_3(Miley).  [assumption].\n11 -p_11(Miley) | p_4(Miley).  [resolve(9,b,10,a)].\n12 -p_4(Miley).  [assumption].\n13 -p_10(x) | p_11(x) | p_2(x).  [clausify(2)].\n14 -p_2(Miley).  [assumption].\n16 p_9(x) | -p_1(x) | p_10(x).  [clausify(3)].\n17 p_1(Miley).  [assumption].\n19 -p_9(Miley) | p_0(Miley) | p_8(Miley).  [clausify(4)].\n20 -p_0(Miley).  [assumption].\n22 -p_7(Miley) | -p_8(Miley).  [clausify(5)].\n24 p_5(x) | p_7(x).  [clausify(6)].\n25 p_5(Miley) | -p_8(Miley).  [resolve(24,b,22,a)].\n26 -p_5(x) | p_6(x).  [clausify(7)].\n27 -p_8(Miley) | p_6(Miley).  [resolve(25,a,26,a)].\n28 -p_6(Miley).  [deny(8)].\n29 -p_10(Miley) | p_11(Miley).  [resolve(13,c,14,a)].\n30 -p_11(Miley).  [resolve(11,b,12,a)].\n31 -p_9(Miley) | p_8(Miley).  [resolve(19,b,20,a)].\n32 p_9(Miley) | p_10(Miley).  [resolve(16,b,17,a)].\n33 p_8(Miley) | p_10(Miley).  [resolve(31,a,32,a)].\n34 -p_8(Miley).  [resolve(27,b,28,a)].\n35 p_10(Miley).  [resolve(33,a,34,a)].\n36 -p_10(Miley).  [resolve(29,b,30,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2295 p_8(Miley))\np_7(Miley) \u2295 p_8(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))",
            "Initial Goal": "p_6(Miley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley)",
                    "-p_4(Miley)",
                    "-p_2(Miley)",
                    "p_1(Miley)",
                    "-p_0(Miley)",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley))",
                    "all x ((-(p_10(x) <-> p_11(x))) -> p_2(x))",
                    "all x ((-(p_9(x) <-> p_1(x))) -> p_10(x))",
                    "p_9(Miley) -> (-(p_0(Miley) <-> p_8(Miley)))",
                    "-(p_7(Miley) <-> p_8(Miley))",
                    "all x (p_5(x) | p_7(x))",
                    "all x (p_5(x) -> p_6(x))"
                ],
                "formulas(goals)": [
                    "p_6(Miley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))\np_7(Miley) \u2194 \u00acp_8(Miley)\np_5(Miley) \u2228 p_7(Miley)\np_5(Miley) \u2192 p_6(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))",
            "Initial Goal": "p_6(Miley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley)",
                    "-p_4(Miley)",
                    "-p_2(Miley)",
                    "p_1(Miley)",
                    "-p_0(Miley)",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley))",
                    "all x ((-(p_10(x) <-> p_11(x))) -> p_2(x))",
                    "all x ((-(p_9(x) <-> p_1(x))) -> p_10(x))",
                    "p_9(Miley) -> (p_0(Miley) <-> -p_8(Miley))",
                    "p_7(Miley) <-> -p_8(Miley)",
                    "p_5(Miley) | p_7(Miley)",
                    "p_5(Miley) -> p_6(Miley)",
                    "all x (p_5(x) | p_7(x))",
                    "all x (p_5(x) -> p_6(x))"
                ],
                "formulas(goals)": [
                    "p_6(Miley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Miley) \u2228 p_7(Miley)",
                    "p_5(Miley) \u2192 p_6(Miley)"
                ],
                "added_rules": [
                    "\u2200x ((p_10(x) \u2194 \u00acp_11(x)) \u2192 p_2(x))",
                    "\u2200x ((p_9(x) \u2194 \u00acp_1(x)) \u2192 p_10(x))",
                    "p_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))",
                    "p_7(Miley) \u2194 \u00acp_8(Miley)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))\np_7(Miley) \u2194 \u00acp_8(Miley)\np_5(Miley) \u2228 p_7(Miley)\np_5(Miley) \u2192 p_6(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))\np_6(Miley) \u2228 p_7(Miley)\n\u00acp_7(Miley) \u2192 p_6(Miley)\np_8(Miley) \u2194 \u00acp_7(Miley)\n\u00acp_6(Miley) \u2192 \u00acp_5(Miley)",
            "Initial Goal": "p_6(Miley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley)",
                    "-p_4(Miley)",
                    "-p_2(Miley)",
                    "p_1(Miley)",
                    "-p_0(Miley)",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley))",
                    "all x ((-(p_10(x) <-> p_11(x))) -> p_2(x))",
                    "all x ((-(p_9(x) <-> p_1(x))) -> p_10(x))",
                    "p_9(Miley) -> (p_0(Miley) <-> -p_8(Miley))",
                    "p_7(Miley) <-> -p_8(Miley)",
                    "p_5(Miley) | p_7(Miley)",
                    "p_5(Miley) -> p_6(Miley)",
                    "all x (p_5(x) | p_7(x))",
                    "all x (p_5(x) -> p_6(x))",
                    "p_6(Miley) | p_7(Miley)",
                    "-p_7(Miley) -> p_6(Miley)",
                    "p_8(Miley) <-> -p_7(Miley)",
                    "-p_6(Miley) -> -p_5(Miley)"
                ],
                "formulas(goals)": [
                    "p_6(Miley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Miley) \u2228 p_7(Miley)",
                    "\u00acp_7(Miley) \u2192 p_6(Miley)",
                    "p_8(Miley) \u2194 \u00acp_7(Miley)",
                    "\u00acp_6(Miley) \u2192 \u00acp_5(Miley)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))\np_7(Miley) \u2194 \u00acp_8(Miley)\np_5(Miley) \u2228 p_7(Miley)\np_5(Miley) \u2192 p_6(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))\np_6(Miley) \u2228 p_7(Miley)\n\u00acp_7(Miley) \u2192 p_6(Miley)\np_8(Miley) \u2194 \u00acp_7(Miley)\n\u00acp_6(Miley) \u2192 \u00acp_5(Miley)\np_9(Miley)\n\u00acp_11(Miley)\n\u00acp_10(Miley)\np_0(Miley) \u2194 p_7(Miley)",
            "Initial Goal": "p_6(Miley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley)",
                    "-p_4(Miley)",
                    "-p_2(Miley)",
                    "p_1(Miley)",
                    "-p_0(Miley)",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley))",
                    "all x ((-(p_10(x) <-> p_11(x))) -> p_2(x))",
                    "all x ((-(p_9(x) <-> p_1(x))) -> p_10(x))",
                    "p_9(Miley) -> (p_0(Miley) <-> -p_8(Miley))",
                    "p_7(Miley) <-> -p_8(Miley)",
                    "p_5(Miley) | p_7(Miley)",
                    "p_5(Miley) -> p_6(Miley)",
                    "all x (p_5(x) | p_7(x))",
                    "all x (p_5(x) -> p_6(x))",
                    "p_6(Miley) | p_7(Miley)",
                    "-p_7(Miley) -> p_6(Miley)",
                    "p_8(Miley) <-> -p_7(Miley)",
                    "-p_6(Miley) -> -p_5(Miley)",
                    "p_9(Miley)",
                    "-p_11(Miley)",
                    "-p_10(Miley)",
                    "p_0(Miley) <-> p_7(Miley)"
                ],
                "formulas(goals)": [
                    "p_6(Miley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Miley)",
                    "\u00acp_11(Miley)",
                    "\u00acp_10(Miley)",
                    "p_0(Miley) \u2194 p_7(Miley)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))\np_7(Miley) \u2194 \u00acp_8(Miley)\np_5(Miley) \u2228 p_7(Miley)\np_5(Miley) \u2192 p_6(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))\np_8(Miley) \u2194 \u00acp_7(Miley)\n\u00acp_6(Miley) \u2192 \u00acp_5(Miley)\np_9(Miley)\n\u00acp_11(Miley)\n\u00acp_10(Miley)\np_0(Miley) \u2194 p_7(Miley)\n\u00acp_5(Miley)\np_7(Miley) \u2192 \u00acp_6(Miley)",
            "Initial Goal": "p_6(Miley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley).",
                    "-p_4(Miley).",
                    "-p_2(Miley).",
                    "p_1(Miley).",
                    "-p_0(Miley).",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley)).",
                    "(all x (-(p_10(x) <-> p_11(x)) -> p_2(x))).",
                    "(all x (-(p_9(x) <-> p_1(x)) -> p_10(x))).",
                    "p_9(Miley) -> (p_0(Miley) <-> -p_8(Miley)).",
                    "p_7(Miley) <-> -p_8(Miley).",
                    "p_5(Miley) | p_7(Miley).",
                    "p_5(Miley) -> p_6(Miley).",
                    "(all x (p_5(x) | p_7(x))).",
                    "(all x (p_5(x) -> p_6(x))).",
                    "p_8(Miley) <-> -p_7(Miley).",
                    "-p_6(Miley) -> -p_5(Miley).",
                    "p_9(Miley).",
                    "-p_11(Miley).",
                    "-p_10(Miley).",
                    "p_0(Miley) <-> p_7(Miley).",
                    "-p_5(Miley).",
                    "p_7(Miley) -> -p_6(Miley)."
                ],
                "formulas(goals)": [
                    "-p_6(Miley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Miley) \u2228 p_7(Miley)",
                    "\u00acp_7(Miley) \u2192 p_6(Miley)"
                ],
                "added_facts": [
                    "\u00acp_5(Miley)"
                ],
                "added_rules": [
                    "p_7(Miley) \u2192 \u00acp_6(Miley)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))\np_7(Miley) \u2194 \u00acp_8(Miley)\np_5(Miley) \u2228 p_7(Miley)\np_5(Miley) \u2192 p_6(Miley)\n\u2200x (p_5(x) \u2228 p_7(x))\n\u2200x (p_5(x) \u2192 p_6(x))\np_8(Miley) \u2194 \u00acp_7(Miley)\n\u00acp_6(Miley) \u2192 \u00acp_5(Miley)\np_9(Miley)\n\u00acp_11(Miley)\n\u00acp_10(Miley)\np_0(Miley) \u2194 p_7(Miley)\np_5(Miley)",
            "Initial Goal": "p_6(Miley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley)",
                    "-p_4(Miley)",
                    "-p_2(Miley)",
                    "p_1(Miley)",
                    "-p_0(Miley)",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley))",
                    "all x (-(p_10(x) <-> p_11(x)) -> p_2(x))",
                    "all x (-(p_9(x) <-> p_1(x)) -> p_10(x))",
                    "p_9(Miley) -> (p_0(Miley) <-> -p_8(Miley))",
                    "p_7(Miley) <-> -p_8(Miley)",
                    "p_5(Miley) | p_7(Miley)",
                    "p_5(Miley) -> p_6(Miley)",
                    "all x (p_5(x) | p_7(x))",
                    "all x (p_5(x) -> p_6(x))",
                    "p_8(Miley) <-> -p_7(Miley)",
                    "-p_6(Miley) -> -p_5(Miley)",
                    "p_9(Miley)",
                    "-p_11(Miley)",
                    "-p_10(Miley)",
                    "p_0(Miley) <-> p_7(Miley)",
                    "p_5(Miley)"
                ],
                "formulas(goals)": [
                    "p_6(Miley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_5(Miley)",
                    "p_7(Miley) \u2192 \u00acp_6(Miley)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Miley)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Miley)\n\u00acp_4(Miley)\n\u00acp_2(Miley)\np_1(Miley)\n\u00acp_0(Miley)\np_11(Miley) \u2192 (p_3(Miley) \u2228 p_4(Miley))\n\u2200x ((p_10(x) \u2295 p_11(x)) \u2192 p_2(x))\n\u2200x ((p_9(x) \u2295 p_1(x)) \u2192 p_10(x))\np_9(Miley) \u2192 (p_0(Miley) \u2194 \u00acp_8(Miley))\np_7(Miley) \u2194 \u00acp_8(Miley)\np_5(Miley) \u2228 p_7(Miley)\np_8(Miley) \u2194 \u00acp_7(Miley)\n\u00acp_6(Miley) \u2192 \u00acp_5(Miley)\np_9(Miley)\n\u00acp_11(Miley)\n\u00acp_10(Miley)\np_0(Miley) \u2194 p_7(Miley)\np_5(Miley)\np_5(Miley) \u2192 \u00acp_6(Miley)",
            "Initial Goal": "p_6(Miley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Miley).",
                    "-p_4(Miley).",
                    "-p_2(Miley).",
                    "p_1(Miley).",
                    "-p_0(Miley).",
                    "p_11(Miley) -> (p_3(Miley) | p_4(Miley)).",
                    "all x ((-(p_10(x) <-> p_11(x))) -> p_2(x)).",
                    "all x ((-(p_9(x) <-> p_1(x))) -> p_10(x)).",
                    "p_9(Miley) -> (p_0(Miley) <-> -p_8(Miley)).",
                    "p_7(Miley) <-> -p_8(Miley).",
                    "p_5(Miley) | p_7(Miley).",
                    "p_8(Miley) <-> -p_7(Miley).",
                    "-p_6(Miley) -> -p_5(Miley).",
                    "p_9(Miley).",
                    "-p_11(Miley).",
                    "-p_10(Miley).",
                    "p_0(Miley) <-> p_7(Miley).",
                    "p_5(Miley).",
                    "p_5(Miley) -> -p_6(Miley)."
                ],
                "formulas(goals)": [
                    "-p_6(Miley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Miley)",
                    "p_5(Miley) \u2192 p_6(Miley)"
                ],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2192 p_6(x))"
                ],
                "added_facts": [
                    "p_5(Miley) \u2192 \u00acp_6(Miley)"
                ],
                "added_rules": []
            }
        }
    ]
}