{
    "background_story": "Madelynn was a brilliant geologist studying volcanic rocks. Her research focused on vesiculation, the process by which gas bubbles form in magma, creating unique textures in volcanic rocks. During an expedition to a recently erupted volcano, Madelynn collected samples of pumice and obsidian, fascinated by the varying degrees of vesiculation. She spent hours in the lab, analyzing the rocks under a microscope, unraveling the secrets of gas bubble formation. Her groundbreaking findings on vesiculation shed new light on the dynamics of volcanic eruptions, earning her recognition in the scientific community. Madelynn's work not only advanced the field of geology but also helped in predicting and preparing for future volcanic events, saving countless lives.",
    "predicates": [
        {
            "id": 0,
            "name": "predict_eruptions"
        },
        {
            "id": 1,
            "name": "date_fossils"
        },
        {
            "id": 2,
            "name": "know_land"
        },
        {
            "id": 3,
            "name": "identify_patterns"
        },
        {
            "id": 4,
            "name": "understand_geology"
        },
        {
            "id": 5,
            "name": "classify_minerals"
        },
        {
            "id": 6,
            "name": "study_volcanic_rocks"
        },
        {
            "id": 7,
            "name": "analyze_data"
        },
        {
            "id": 8,
            "name": "examine_rocks"
        },
        {
            "id": 9,
            "name": "understand_earth_processes"
        },
        {
            "id": 10,
            "name": "collect_samples"
        },
        {
            "id": 11,
            "name": "map_terrain"
        },
        {
            "id": 12,
            "name": "research_magma"
        },
        {
            "id": 13,
            "name": "explore_landforms"
        },
        {
            "id": 14,
            "name": "read_charts"
        },
        {
            "id": 15,
            "name": "use_gps"
        },
        {
            "id": 16,
            "name": "investigate_land"
        },
        {
            "id": 17,
            "name": "read_research"
        },
        {
            "id": 18,
            "name": "conduct_experiments"
        }
    ],
    "subject_name": "Madelynn",
    "subject_category": "geologist",
    "keyword": "vesiculation",
    "all_facts": [
        {
            "id": 0,
            "subject": "Madelynn",
            "text": "Madelynn can predict eruptions.",
            "fol": "p_0(Madelynn)",
            "str_fol": "predict_eruptions(Madelynn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Madelynn",
            "text": "Madelynn does not date fossils.",
            "fol": "\u00acp_1(Madelynn)",
            "str_fol": "\u00acdate_fossils(Madelynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Madelynn",
            "text": "Madelynn does not have knowledge of the land.",
            "fol": "\u00acp_2(Madelynn)",
            "str_fol": "\u00acknow_land(Madelynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Madelynn",
            "text": "Madelynn identifies patterns.",
            "fol": "p_3(Madelynn)",
            "str_fol": "identify_patterns(Madelynn)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Madelynn",
            "text": "Madelynn does not understand geology.",
            "fol": "\u00acp_4(Madelynn)",
            "str_fol": "\u00acunderstand_geology(Madelynn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Madelynn",
            "text": "Madelynn does not classify minerals.",
            "fol": "\u00acp_5(Madelynn)",
            "str_fol": "\u00acclassify_minerals(Madelynn)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Madelynn",
            "text": "Madelynn collects samples.",
            "fol": "p_10(Madelynn)",
            "str_fol": "collect_samples(Madelynn)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Madelynn",
            "text": "Madelynn does not examine rocks.",
            "fol": "\u00acp_8(Madelynn)",
            "str_fol": "\u00acexamine_rocks(Madelynn)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Madelynn",
            "text": "Madelynn does not map terrain.",
            "fol": "\u00acp_11(Madelynn)",
            "str_fol": "\u00acmap_terrain(Madelynn)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Madelynn",
            "text": "Madelynn analyzes data.",
            "fol": "p_7(Madelynn)",
            "str_fol": "analyze_data(Madelynn)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Madelynn",
            "text": "Madelynn does not classify minerals.",
            "fol": "\u00acp_5(Madelynn)",
            "str_fol": "\u00acclassify_minerals(Madelynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Madelynn",
            "text": "Madelynn does not date fossils.",
            "fol": "\u00acp_1(Madelynn)",
            "str_fol": "\u00acdate_fossils(Madelynn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Madelynn",
            "text": "Madelynn does not understand geology.",
            "fol": "\u00acp_4(Madelynn)",
            "str_fol": "\u00acunderstand_geology(Madelynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Madelynn",
            "text": "Madelynn does not have knowledge of the land.",
            "fol": "\u00acp_2(Madelynn)",
            "str_fol": "\u00acknow_land(Madelynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Madelynn",
            "text": "Madelynn identifies patterns.",
            "fol": "p_3(Madelynn)",
            "str_fol": "identify_patterns(Madelynn)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Madelynn",
            "text": "Madelynn can predict eruptions.",
            "fol": "p_0(Madelynn)",
            "str_fol": "predict_eruptions(Madelynn)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Madelynn either collects samples or classifies minerals, but she does not do both simultaneously.",
            "fol": "p_10(Madelynn) \u2295 p_5(Madelynn)",
            "str_fol": "collect_samples(Madelynn) \u2295 classify_minerals(Madelynn)"
        },
        {
            "id": 4,
            "text": "If Madelynn either dates fossils or examines rocks (but not both), then she understands geology.",
            "fol": "(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)",
            "str_fol": "(date_fossils(Madelynn) \u2295 examine_rocks(Madelynn)) \u2192 understand_geology(Madelynn)"
        },
        {
            "id": 3,
            "text": "Every geologist who maps terrain has knowledge of the land.",
            "fol": "\u2200x (p_11(x) \u2192 p_2(x))",
            "str_fol": "\u2200x (map_terrain(x) \u2192 know_land(x))"
        },
        {
            "id": 2,
            "text": "If Madelynn collects samples, then she either analyzes data or maps terrain, but not both.",
            "fol": "p_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))",
            "str_fol": "collect_samples(Madelynn) \u2192 (analyze_data(Madelynn) \u2295 map_terrain(Madelynn))"
        },
        {
            "id": 1,
            "text": "Every geologist who examines rocks either identifies patterns or understands earth processes.",
            "fol": "\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (examine_rocks(x) \u2192 (identify_patterns(x) \u2228 understand_earth_processes(x)))"
        },
        {
            "id": 0,
            "text": "If Madelynn studies volcanic rocks or analyzes data, then she can predict eruptions.",
            "fol": "(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)",
            "str_fol": "(study_volcanic_rocks(Madelynn) \u2228 analyze_data(Madelynn)) \u2192 predict_eruptions(Madelynn)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Madelynn",
            "text": "Madelynn does not classify minerals.",
            "fol": "\u00acp_5(Madelynn)",
            "str_fol": "\u00acclassify_minerals(Madelynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Madelynn",
            "text": "Madelynn does not date fossils.",
            "fol": "\u00acp_1(Madelynn)",
            "str_fol": "\u00acdate_fossils(Madelynn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Madelynn",
            "text": "Madelynn does not understand geology.",
            "fol": "\u00acp_4(Madelynn)",
            "str_fol": "\u00acunderstand_geology(Madelynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Madelynn",
            "text": "Madelynn does not have knowledge of the land.",
            "fol": "\u00acp_2(Madelynn)",
            "str_fol": "\u00acknow_land(Madelynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Madelynn",
            "text": "Madelynn identifies patterns.",
            "fol": "p_3(Madelynn)",
            "str_fol": "identify_patterns(Madelynn)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Madelynn",
            "text": "Madelynn can predict eruptions.",
            "fol": "p_0(Madelynn)",
            "str_fol": "predict_eruptions(Madelynn)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Madelynn either collects samples or classifies minerals, but she does not do both simultaneously.",
            "fol": "p_10(Madelynn) \u2295 p_5(Madelynn)",
            "str_fol": "collect_samples(Madelynn) \u2295 classify_minerals(Madelynn)"
        },
        {
            "id": 4,
            "text": "If Madelynn either dates fossils or examines rocks (but not both), then she understands geology.",
            "fol": "(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)",
            "str_fol": "(date_fossils(Madelynn) \u2295 examine_rocks(Madelynn)) \u2192 understand_geology(Madelynn)"
        },
        {
            "id": 3,
            "text": "Every geologist who maps terrain has knowledge of the land.",
            "fol": "\u2200x (p_11(x) \u2192 p_2(x))",
            "str_fol": "\u2200x (map_terrain(x) \u2192 know_land(x))"
        },
        {
            "id": 2,
            "text": "If Madelynn collects samples, then she either analyzes data or maps terrain, but not both.",
            "fol": "p_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))",
            "str_fol": "collect_samples(Madelynn) \u2192 (analyze_data(Madelynn) \u2295 map_terrain(Madelynn))"
        },
        {
            "id": 1,
            "text": "Every geologist who examines rocks either identifies patterns or understands earth processes.",
            "fol": "\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (examine_rocks(x) \u2192 (identify_patterns(x) \u2228 understand_earth_processes(x)))"
        },
        {
            "id": 0,
            "text": "If Madelynn studies volcanic rocks or analyzes data, then she can predict eruptions.",
            "fol": "(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)",
            "str_fol": "(study_volcanic_rocks(Madelynn) \u2228 analyze_data(Madelynn)) \u2192 predict_eruptions(Madelynn)"
        }
    ],
    "context_fol": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)",
    "conclusion": {
        "id": 12,
        "text": "If Madelynn studies volcanic rocks, then she understands earth processes.",
        "fol": "p_6(Madelynn) \u2192 p_9(Madelynn)",
        "str_fol": "study_volcanic_rocks(Madelynn) \u2192 understand_earth_processes(Madelynn)"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Madelynn",
                    "text": "Madelynn does not classify minerals.",
                    "fol": "\u00acp_5(Madelynn)",
                    "str_fol": "\u00acclassify_minerals(Madelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Madelynn either collects samples or classifies minerals, but she does not do both simultaneously.",
                    "fol": "p_10(Madelynn) \u2295 p_5(Madelynn)",
                    "str_fol": "collect_samples(Madelynn) \u2295 classify_minerals(Madelynn)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Madelynn",
                "text": "Madelynn collects samples.",
                "fol": "p_10(Madelynn)",
                "str_fol": "collect_samples(Madelynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Madelynn",
                    "text": "Madelynn does not date fossils.",
                    "fol": "\u00acp_1(Madelynn)",
                    "str_fol": "\u00acdate_fossils(Madelynn)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Madelynn",
                    "text": "Madelynn does not understand geology.",
                    "fol": "\u00acp_4(Madelynn)",
                    "str_fol": "\u00acunderstand_geology(Madelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Madelynn either dates fossils or examines rocks (but not both), then she understands geology.",
                    "fol": "(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)",
                    "str_fol": "(date_fossils(Madelynn) \u2295 examine_rocks(Madelynn)) \u2192 understand_geology(Madelynn)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Madelynn",
                "text": "Madelynn does not examine rocks.",
                "fol": "\u00acp_8(Madelynn)",
                "str_fol": "\u00acexamine_rocks(Madelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Madelynn",
                    "text": "Madelynn does not have knowledge of the land.",
                    "fol": "\u00acp_2(Madelynn)",
                    "str_fol": "\u00acknow_land(Madelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Every geologist who maps terrain has knowledge of the land.",
                    "fol": "\u2200x (p_11(x) \u2192 p_2(x))",
                    "str_fol": "\u2200x (map_terrain(x) \u2192 know_land(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Madelynn",
                "text": "Madelynn does not map terrain.",
                "fol": "\u00acp_11(Madelynn)",
                "str_fol": "\u00acmap_terrain(Madelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Madelynn",
                    "text": "Madelynn collects samples.",
                    "fol": "p_10(Madelynn)",
                    "str_fol": "collect_samples(Madelynn)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Madelynn",
                    "text": "Madelynn does not map terrain.",
                    "fol": "\u00acp_11(Madelynn)",
                    "str_fol": "\u00acmap_terrain(Madelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Madelynn collects samples, then she either analyzes data or maps terrain, but not both.",
                    "fol": "p_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))",
                    "str_fol": "collect_samples(Madelynn) \u2192 (analyze_data(Madelynn) \u2295 map_terrain(Madelynn))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Madelynn",
                "text": "Madelynn analyzes data.",
                "fol": "p_7(Madelynn)",
                "str_fol": "analyze_data(Madelynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Madelynn",
                    "text": "Madelynn does not examine rocks.",
                    "fol": "\u00acp_8(Madelynn)",
                    "str_fol": "\u00acexamine_rocks(Madelynn)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Madelynn",
                    "text": "Madelynn identifies patterns.",
                    "fol": "p_3(Madelynn)",
                    "str_fol": "identify_patterns(Madelynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every geologist who examines rocks either identifies patterns or understands earth processes.",
                    "fol": "\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (examine_rocks(x) \u2192 (identify_patterns(x) \u2228 understand_earth_processes(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Madelynn",
                    "text": "Madelynn analyzes data.",
                    "fol": "p_7(Madelynn)",
                    "str_fol": "analyze_data(Madelynn)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Madelynn",
                    "text": "Madelynn can predict eruptions.",
                    "fol": "p_0(Madelynn)",
                    "str_fol": "predict_eruptions(Madelynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Madelynn studies volcanic rocks or analyzes data, then she can predict eruptions.",
                    "fol": "(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)",
                    "str_fol": "(study_volcanic_rocks(Madelynn) \u2228 analyze_data(Madelynn)) \u2192 predict_eruptions(Madelynn)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn)",
                    "-p_1(Madelynn)",
                    "-p_4(Madelynn)",
                    "-p_2(Madelynn)",
                    "p_3(Madelynn)",
                    "p_0(Madelynn)",
                    "-(p_10(Madelynn) <-> p_5(Madelynn))",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn)",
                    "all x (p_11(x) -> p_2(x))",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn)))",
                    "all x (p_8(x) -> (p_3(x) | p_9(x)))",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn)",
                    "p_6(Madelynn) -> p_8(Madelynn)",
                    "p_8(Madelynn) -> p_9(Madelynn)"
                ],
                "formulas(goals)": [
                    "p_6(Madelynn) -> p_9(Madelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Madelynn) \u2192 p_8(Madelynn)",
                    "p_8(Madelynn) \u2192 p_9(Madelynn)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)\np_3(Madelynn) \u2192 p_6(Madelynn)\np_3(Madelynn) \u2192 \u00acp_9(Madelynn)",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn)",
                    "-p_1(Madelynn)",
                    "-p_4(Madelynn)",
                    "-p_2(Madelynn)",
                    "p_3(Madelynn)",
                    "p_0(Madelynn)",
                    "-(p_10(Madelynn) <-> p_5(Madelynn))",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn)",
                    "all x (p_11(x) -> p_2(x))",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn)))",
                    "all x (p_8(x) -> (p_3(x) | p_9(x)))",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn)",
                    "p_3(Madelynn) -> p_6(Madelynn)",
                    "p_3(Madelynn) -> -p_9(Madelynn)"
                ],
                "formulas(goals)": [
                    "p_6(Madelynn) & -p_9(Madelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Madelynn) \u2192 p_6(Madelynn)",
                    "p_3(Madelynn) \u2192 \u00acp_9(Madelynn)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)\n\u00acp_6(Madelynn) \u2192 \u00acp_3(Madelynn)\np_3(Madelynn) \u2192 \u00acp_9(Madelynn)\np_6(Madelynn)\n\u00acp_9(Madelynn)",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn)",
                    "-p_1(Madelynn)",
                    "-p_4(Madelynn)",
                    "-p_2(Madelynn)",
                    "p_3(Madelynn)",
                    "p_0(Madelynn)",
                    "-(p_10(Madelynn) <-> p_5(Madelynn))",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn)",
                    "all x (p_11(x) -> p_2(x))",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn)))",
                    "all x (p_8(x) -> (p_3(x) | p_9(x)))",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn)",
                    "-p_6(Madelynn) -> -p_3(Madelynn)",
                    "p_3(Madelynn) -> -p_9(Madelynn)",
                    "p_6(Madelynn)",
                    "-p_9(Madelynn)"
                ],
                "formulas(goals)": [
                    "-((p_6(Madelynn) -> p_9(Madelynn)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Madelynn) \u2192 p_6(Madelynn)"
                ],
                "added_facts": [
                    "p_6(Madelynn)",
                    "\u00acp_9(Madelynn)"
                ],
                "added_rules": [
                    "\u00acp_6(Madelynn) \u2192 \u00acp_3(Madelynn)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)\n\u00acp_6(Madelynn) \u2192 \u00acp_3(Madelynn)\np_3(Madelynn) \u2192 \u00acp_9(Madelynn)\np_6(Madelynn)\n\u00acp_9(Madelynn)\np_10(Madelynn)\n\u00acp_8(Madelynn)\np_7(Madelynn) \u2295 p_11(Madelynn)\np_9(Madelynn) \u2192 \u00acp_3(Madelynn)\np_3(Madelynn) \u2192 p_6(Madelynn)\np_6(Madelynn) \u2227 \u00acp_9(Madelynn)",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn)",
                    "-p_1(Madelynn)",
                    "-p_4(Madelynn)",
                    "-p_2(Madelynn)",
                    "p_3(Madelynn)",
                    "p_0(Madelynn)",
                    "-(p_10(Madelynn) <-> p_5(Madelynn))",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn)",
                    "all x (p_11(x) -> p_2(x))",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn)))",
                    "all x (p_8(x) -> (p_3(x) | p_9(x)))",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn)",
                    "-p_6(Madelynn) -> -p_3(Madelynn)",
                    "p_3(Madelynn) -> -p_9(Madelynn)",
                    "p_6(Madelynn)",
                    "-p_9(Madelynn)",
                    "p_10(Madelynn)",
                    "-p_8(Madelynn)",
                    "-(p_7(Madelynn) <-> p_11(Madelynn))",
                    "p_9(Madelynn) -> -p_3(Madelynn)",
                    "p_3(Madelynn) -> p_6(Madelynn)",
                    "p_6(Madelynn) & -p_9(Madelynn)"
                ],
                "formulas(goals)": [
                    "-(-p_6(Madelynn) | p_9(Madelynn))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Madelynn)",
                    "\u00acp_8(Madelynn)",
                    "p_6(Madelynn) \u2227 \u00acp_9(Madelynn)"
                ],
                "added_rules": [
                    "p_7(Madelynn) \u2295 p_11(Madelynn)",
                    "p_9(Madelynn) \u2192 \u00acp_3(Madelynn)",
                    "p_3(Madelynn) \u2192 p_6(Madelynn)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)\n\u00acp_6(Madelynn) \u2192 \u00acp_3(Madelynn)\np_3(Madelynn) \u2192 \u00acp_9(Madelynn)\np_6(Madelynn)\n\u00acp_9(Madelynn)\np_10(Madelynn)\n\u00acp_8(Madelynn)\np_7(Madelynn) \u2295 p_11(Madelynn)\np_9(Madelynn) \u2192 \u00acp_3(Madelynn)\np_3(Madelynn) \u2192 p_6(Madelynn)\np_6(Madelynn) \u2227 \u00acp_9(Madelynn)\np_7(Madelynn)",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn).",
                    "-p_1(Madelynn).",
                    "-p_4(Madelynn).",
                    "-p_2(Madelynn).",
                    "p_3(Madelynn).",
                    "p_0(Madelynn).",
                    "-(p_10(Madelynn) <-> p_5(Madelynn)).",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn).",
                    "all x (p_11(x) -> p_2(x)).",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn))).",
                    "all x (p_8(x) -> (p_3(x) | p_9(x))).",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn).",
                    "-p_6(Madelynn) -> -p_3(Madelynn).",
                    "p_3(Madelynn) -> -p_9(Madelynn).",
                    "p_6(Madelynn).",
                    "-p_9(Madelynn).",
                    "p_10(Madelynn).",
                    "-p_8(Madelynn).",
                    "-(p_7(Madelynn) <-> p_11(Madelynn)).",
                    "p_9(Madelynn) -> -p_3(Madelynn).",
                    "p_3(Madelynn) -> p_6(Madelynn).",
                    "p_6(Madelynn) & -p_9(Madelynn).",
                    "p_7(Madelynn)."
                ],
                "formulas(goals)": [
                    "p_6(Madelynn) & -p_9(Madelynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Madelynn)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Madelynn).\n\u00acp_1(Madelynn).\n\u00acp_4(Madelynn).\n\u00acp_2(Madelynn).\np_3(Madelynn).\np_0(Madelynn).\np_10(Madelynn) \u2295 p_5(Madelynn).\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn).\n\u2200x (p_11(x) \u2192 p_2(x)).\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn)).\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x))).\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn).\n\u00acp_6(Madelynn) \u2192 \u00acp_3(Madelynn).\np_3(Madelynn) \u2192 \u00acp_9(Madelynn).\np_6(Madelynn).\n\u00acp_9(Madelynn).\np_10(Madelynn).\n\u00acp_8(Madelynn).\np_7(Madelynn) \u2295 p_11(Madelynn).\np_9(Madelynn) \u2192 \u00acp_3(Madelynn).\n\u00acp_3(Madelynn) \u2228 p_6(Madelynn).\np_6(Madelynn) \u2227 \u00acp_9(Madelynn).\np_7(Madelynn).\np_10(Madelynn) \u2228 p_5(Madelynn).\n\u00acp_11(Madelynn).\np_6(Madelynn) \u2228 p_9(Madelynn).",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn).",
                    "-p_1(Madelynn).",
                    "-p_4(Madelynn).",
                    "-p_2(Madelynn).",
                    "p_3(Madelynn).",
                    "p_0(Madelynn).",
                    "-(p_10(Madelynn) <-> p_5(Madelynn)).",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn).",
                    "all x (p_11(x) -> p_2(x)).",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn))).",
                    "all x (p_8(x) -> (p_3(x) | p_9(x))).",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn).",
                    "(-p_6(Madelynn)) -> (-p_3(Madelynn)).",
                    "p_3(Madelynn) -> (-p_9(Madelynn)).",
                    "p_6(Madelynn).",
                    "-p_9(Madelynn).",
                    "p_10(Madelynn).",
                    "-p_8(Madelynn).",
                    "-(p_7(Madelynn) <-> p_11(Madelynn)).",
                    "p_9(Madelynn) -> (-p_3(Madelynn)).",
                    "(-p_3(Madelynn)) | p_6(Madelynn).",
                    "p_6(Madelynn) & (-p_9(Madelynn)).",
                    "p_7(Madelynn).",
                    "p_10(Madelynn) | p_5(Madelynn).",
                    "-p_11(Madelynn).",
                    "p_6(Madelynn) | p_9(Madelynn)."
                ],
                "formulas(goals)": [
                    "-(p_6(Madelynn) -> p_9(Madelynn))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Madelynn) \u2228 p_5(Madelynn)",
                    "\u00acp_11(Madelynn)",
                    "p_6(Madelynn) \u2228 p_9(Madelynn)"
                ],
                "added_rules": [
                    "\u00acp_3(Madelynn) \u2228 p_6(Madelynn)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Madelynn)\n\u00acp_1(Madelynn)\n\u00acp_4(Madelynn)\n\u00acp_2(Madelynn)\np_3(Madelynn)\np_0(Madelynn)\np_10(Madelynn) \u2295 p_5(Madelynn)\n(p_1(Madelynn) \u2295 p_8(Madelynn)) \u2192 p_4(Madelynn)\n\u2200x (p_11(x) \u2192 p_2(x))\np_10(Madelynn) \u2192 (p_7(Madelynn) \u2295 p_11(Madelynn))\n\u2200x (p_8(x) \u2192 (p_3(x) \u2228 p_9(x)))\n(p_6(Madelynn) \u2228 p_7(Madelynn)) \u2192 p_0(Madelynn)\n\u00acp_6(Madelynn) \u2192 \u00acp_3(Madelynn)\np_3(Madelynn) \u2192 \u00acp_9(Madelynn)\np_6(Madelynn)\n\u00acp_9(Madelynn)\np_10(Madelynn)\n\u00acp_8(Madelynn)\np_7(Madelynn) \u2295 p_11(Madelynn)\np_9(Madelynn) \u2192 \u00acp_3(Madelynn)\n\u00acp_3(Madelynn) \u2228 p_6(Madelynn)\np_6(Madelynn) \u2227 \u00acp_9(Madelynn)\np_7(Madelynn)\np_10(Madelynn) \u2228 p_5(Madelynn)\n\u00acp_11(Madelynn)\np_6(Madelynn) \u2228 p_9(Madelynn)\np_6(Madelynn) \u2228 p_4(Madelynn)\n\u00acp_9(Madelynn) \u2228 p_7(Madelynn)",
            "Initial Goal": "p_6(Madelynn) \u2192 p_9(Madelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Madelynn).",
                    "-p_1(Madelynn).",
                    "-p_4(Madelynn).",
                    "-p_2(Madelynn).",
                    "p_3(Madelynn).",
                    "p_0(Madelynn).",
                    "-(p_10(Madelynn) <-> p_5(Madelynn)).",
                    "(-(p_1(Madelynn) <-> p_8(Madelynn))) -> p_4(Madelynn).",
                    "all x (p_11(x) -> p_2(x)).",
                    "p_10(Madelynn) -> (-(p_7(Madelynn) <-> p_11(Madelynn))).",
                    "all x (p_8(x) -> (p_3(x) | p_9(x))).",
                    "(p_6(Madelynn) | p_7(Madelynn)) -> p_0(Madelynn).",
                    "-p_6(Madelynn) -> -p_3(Madelynn).",
                    "p_3(Madelynn) -> -p_9(Madelynn).",
                    "p_6(Madelynn).",
                    "-p_9(Madelynn).",
                    "p_10(Madelynn).",
                    "-p_8(Madelynn).",
                    "-(p_7(Madelynn) <-> p_11(Madelynn)).",
                    "p_9(Madelynn) -> -p_3(Madelynn).",
                    "-p_3(Madelynn) | p_6(Madelynn).",
                    "p_6(Madelynn) & -p_9(Madelynn).",
                    "p_7(Madelynn).",
                    "p_10(Madelynn) | p_5(Madelynn).",
                    "-p_11(Madelynn).",
                    "p_6(Madelynn) | p_9(Madelynn).",
                    "p_6(Madelynn) | p_4(Madelynn).",
                    "-p_9(Madelynn) | p_7(Madelynn)."
                ],
                "formulas(goals)": [
                    "-(p_6(Madelynn) -> p_9(Madelynn))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Madelynn) \u2228 p_4(Madelynn)",
                    "\u00acp_9(Madelynn) \u2228 p_7(Madelynn)"
                ],
                "added_rules": []
            }
        }
    ]
}