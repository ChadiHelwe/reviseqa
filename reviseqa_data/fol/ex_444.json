{
    "background_story": "Camila was an ancient vampire who roamed the streets of 18th century Paris. With piercing green eyes and raven-black hair, she was as mysterious as she was beautiful. Turned by a powerful vampire lord, Camila struggled to maintain her humanity amidst the eternal curse. She walked the fine line between monster and noble, preying only on those who would not be missed. Camila's existence was one of solitude and secrecy, yet she found solace in the city's shadows and the whispered tales of her kind. Her immortal life was a testament to the enduring power of the vampire's kiss, and the haunting beauty that lingered long after death.",
    "predicates": [
        {
            "id": 0,
            "name": "immortal"
        },
        {
            "id": 1,
            "name": "casts_shadow"
        },
        {
            "id": 2,
            "name": "regenerates"
        },
        {
            "id": 3,
            "name": "needs_blood"
        },
        {
            "id": 4,
            "name": "adapts_quick"
        },
        {
            "id": 5,
            "name": "has_scales"
        },
        {
            "id": 6,
            "name": "mortal"
        },
        {
            "id": 7,
            "name": "legendary"
        },
        {
            "id": 8,
            "name": "has_heart"
        },
        {
            "id": 9,
            "name": "bleeds_easily"
        },
        {
            "id": 10,
            "name": "has_veins"
        },
        {
            "id": 11,
            "name": "gets_wounds"
        },
        {
            "id": 12,
            "name": "uses_magic"
        },
        {
            "id": 13,
            "name": "is_injured"
        },
        {
            "id": 14,
            "name": "heals_fast"
        },
        {
            "id": 15,
            "name": "lives_forever"
        },
        {
            "id": 16,
            "name": "has_soul"
        },
        {
            "id": 17,
            "name": "shows_emotion"
        },
        {
            "id": 18,
            "name": "loves_deeply"
        },
        {
            "id": 19,
            "name": "feels_pain"
        },
        {
            "id": 20,
            "name": "has_claws"
        },
        {
            "id": 21,
            "name": "casts_spell"
        },
        {
            "id": 22,
            "name": "has_powers"
        },
        {
            "id": 23,
            "name": "is_wounded"
        },
        {
            "id": 24,
            "name": "transforms_body"
        },
        {
            "id": 25,
            "name": "is_nocturnal"
        },
        {
            "id": 26,
            "name": "has_fangs"
        }
    ],
    "subject_name": "Camila",
    "subject_category": "mythical creature",
    "keyword": "vampire",
    "all_facts": [
        {
            "id": 0,
            "subject": "Camila",
            "text": "Camila is immortal.",
            "fol": "p_0(Camila)",
            "str_fol": "immortal(Camila)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Camila",
            "text": "Camila does not cast a shadow.",
            "fol": "\u00acp_1(Camila)",
            "str_fol": "\u00accasts_shadow(Camila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Camila",
            "text": "Camila does not regenerate.",
            "fol": "\u00acp_2(Camila)",
            "str_fol": "\u00acregenerates(Camila)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Camila",
            "text": "Camila does not need blood.",
            "fol": "\u00acp_3(Camila)",
            "str_fol": "\u00acneeds_blood(Camila)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Camila",
            "text": "Camila does not adapt quickly.",
            "fol": "\u00acp_4(Camila)",
            "str_fol": "\u00acadapts_quick(Camila)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Camila",
            "text": "Camila does not have scales.",
            "fol": "\u00acp_5(Camila)",
            "str_fol": "\u00achas_scales(Camila)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Camila",
            "text": "Camila has veins.",
            "fol": "p_10(Camila)",
            "str_fol": "has_veins(Camila)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Camila",
            "text": "Camila heals quickly.",
            "fol": "p_14(Camila)",
            "str_fol": "heals_fast(Camila)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Camila",
            "text": "Camila is injured.",
            "fol": "p_13(Camila)",
            "str_fol": "is_injured(Camila)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Camila",
            "text": "Camila does not use magic.",
            "fol": "\u00acp_12(Camila)",
            "str_fol": "\u00acuses_magic(Camila)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Camila",
            "text": "Camila does not get wounds.",
            "fol": "\u00acp_11(Camila)",
            "str_fol": "\u00acgets_wounds(Camila)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Camila",
            "text": "Camila bleeds easily.",
            "fol": "p_9(Camila)",
            "str_fol": "bleeds_easily(Camila)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Camila",
            "text": "Camila has a heart.",
            "fol": "p_8(Camila)",
            "str_fol": "has_heart(Camila)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Camila",
            "text": "Camila is mortal.",
            "fol": "p_6(Camila)",
            "str_fol": "mortal(Camila)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Camila",
            "text": "Camila is not legendary.",
            "fol": "\u00acp_7(Camila)",
            "str_fol": "\u00aclegendary(Camila)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Camila",
            "text": "Camila does not have scales.",
            "fol": "\u00acp_5(Camila)",
            "str_fol": "\u00achas_scales(Camila)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Camila",
            "text": "Camila does not adapt quickly.",
            "fol": "\u00acp_4(Camila)",
            "str_fol": "\u00acadapts_quick(Camila)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Camila",
            "text": "Camila does not need blood.",
            "fol": "\u00acp_3(Camila)",
            "str_fol": "\u00acneeds_blood(Camila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Camila",
            "text": "Camila does not regenerate.",
            "fol": "\u00acp_2(Camila)",
            "str_fol": "\u00acregenerates(Camila)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Camila",
            "text": "Camila does not cast a shadow.",
            "fol": "\u00acp_1(Camila)",
            "str_fol": "\u00accasts_shadow(Camila)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Camila",
            "text": "Camila is immortal.",
            "fol": "p_0(Camila)",
            "str_fol": "immortal(Camila)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Camila, being a vampire, either has veins or has scales, but not both, which is unlikely given her nature.",
            "fol": "p_10(Camila) \u2295 p_5(Camila)",
            "str_fol": "has_veins(Camila) \u2295 has_scales(Camila)"
        },
        {
            "id": 7,
            "text": "Camila either heals fast or adapts quickly.",
            "fol": "p_14(Camila) \u2228 p_4(Camila)",
            "str_fol": "heals_fast(Camila) \u2228 adapts_quick(Camila)"
        },
        {
            "id": 6,
            "text": "Camila is either injured or needs blood.",
            "fol": "p_13(Camila) \u2228 p_3(Camila)",
            "str_fol": "is_injured(Camila) \u2228 needs_blood(Camila)"
        },
        {
            "id": 5,
            "text": "If Camila is injured, then she either heals quickly or uses magic.",
            "fol": "p_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))",
            "str_fol": "is_injured(Camila) \u2192 (heals_fast(Camila) \u2295 uses_magic(Camila))"
        },
        {
            "id": 4,
            "text": "If Camila gets wounds, then she either regenerates or uses magic.",
            "fol": "p_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))",
            "str_fol": "gets_wounds(Camila) \u2192 (regenerates(Camila) \u2295 uses_magic(Camila))"
        },
        {
            "id": 3,
            "text": "If Camila either has veins or gets wounds (but not both), then she bleeds easily.",
            "fol": "(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)",
            "str_fol": "(has_veins(Camila) \u2295 gets_wounds(Camila)) \u2192 bleeds_easily(Camila)"
        },
        {
            "id": 2,
            "text": "Camila either has a heart or casts a shadow.",
            "fol": "p_8(Camila) \u2228 p_1(Camila)",
            "str_fol": "has_heart(Camila) \u2228 casts_shadow(Camila)"
        },
        {
            "id": 1,
            "text": "If Camila has a heart and bleeds easily, then she is mortal.",
            "fol": "(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)",
            "str_fol": "(has_heart(Camila) \u2227 bleeds_easily(Camila)) \u2192 mortal(Camila)"
        },
        {
            "id": 0,
            "text": "For all mythical creatures, if they are either immortal or mortal (but not both), then they are legendary.",
            "fol": "\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((immortal(x) \u2295 mortal(x)) \u2192 legendary(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Camila",
            "text": "Camila does not have scales.",
            "fol": "\u00acp_5(Camila)",
            "str_fol": "\u00achas_scales(Camila)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Camila",
            "text": "Camila does not adapt quickly.",
            "fol": "\u00acp_4(Camila)",
            "str_fol": "\u00acadapts_quick(Camila)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Camila",
            "text": "Camila does not need blood.",
            "fol": "\u00acp_3(Camila)",
            "str_fol": "\u00acneeds_blood(Camila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Camila",
            "text": "Camila does not regenerate.",
            "fol": "\u00acp_2(Camila)",
            "str_fol": "\u00acregenerates(Camila)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Camila",
            "text": "Camila does not cast a shadow.",
            "fol": "\u00acp_1(Camila)",
            "str_fol": "\u00accasts_shadow(Camila)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Camila",
            "text": "Camila is immortal.",
            "fol": "p_0(Camila)",
            "str_fol": "immortal(Camila)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Camila, being a vampire, either has veins or has scales, but not both, which is unlikely given her nature.",
            "fol": "p_10(Camila) \u2295 p_5(Camila)",
            "str_fol": "has_veins(Camila) \u2295 has_scales(Camila)"
        },
        {
            "id": 7,
            "text": "Camila either heals fast or adapts quickly.",
            "fol": "p_14(Camila) \u2228 p_4(Camila)",
            "str_fol": "heals_fast(Camila) \u2228 adapts_quick(Camila)"
        },
        {
            "id": 6,
            "text": "Camila is either injured or needs blood.",
            "fol": "p_13(Camila) \u2228 p_3(Camila)",
            "str_fol": "is_injured(Camila) \u2228 needs_blood(Camila)"
        },
        {
            "id": 5,
            "text": "If Camila is injured, then she either heals quickly or uses magic.",
            "fol": "p_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))",
            "str_fol": "is_injured(Camila) \u2192 (heals_fast(Camila) \u2295 uses_magic(Camila))"
        },
        {
            "id": 4,
            "text": "If Camila gets wounds, then she either regenerates or uses magic.",
            "fol": "p_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))",
            "str_fol": "gets_wounds(Camila) \u2192 (regenerates(Camila) \u2295 uses_magic(Camila))"
        },
        {
            "id": 3,
            "text": "If Camila either has veins or gets wounds (but not both), then she bleeds easily.",
            "fol": "(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)",
            "str_fol": "(has_veins(Camila) \u2295 gets_wounds(Camila)) \u2192 bleeds_easily(Camila)"
        },
        {
            "id": 2,
            "text": "Camila either has a heart or casts a shadow.",
            "fol": "p_8(Camila) \u2228 p_1(Camila)",
            "str_fol": "has_heart(Camila) \u2228 casts_shadow(Camila)"
        },
        {
            "id": 1,
            "text": "If Camila has a heart and bleeds easily, then she is mortal.",
            "fol": "(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)",
            "str_fol": "(has_heart(Camila) \u2227 bleeds_easily(Camila)) \u2192 mortal(Camila)"
        },
        {
            "id": 0,
            "text": "For all mythical creatures, if they are either immortal or mortal (but not both), then they are legendary.",
            "fol": "\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((immortal(x) \u2295 mortal(x)) \u2192 legendary(x))"
        }
    ],
    "context_fol": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2295 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\np_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))\np_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))\n(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)\n\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))",
    "conclusion": {
        "id": 14,
        "subject": "Camila",
        "text": "Camila is not legendary.",
        "fol": "\u00acp_7(Camila)",
        "str_fol": "\u00aclegendary(Camila)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Camila)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Camila",
                    "text": "Camila does not have scales.",
                    "fol": "\u00acp_5(Camila)",
                    "str_fol": "\u00achas_scales(Camila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Camila, being a vampire, either has veins or has scales, but not both, which is unlikely given her nature.",
                    "fol": "p_10(Camila) \u2295 p_5(Camila)",
                    "str_fol": "has_veins(Camila) \u2295 has_scales(Camila)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Camila",
                "text": "Camila has veins.",
                "fol": "p_10(Camila)",
                "str_fol": "has_veins(Camila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Camila",
                    "text": "Camila does not adapt quickly.",
                    "fol": "\u00acp_4(Camila)",
                    "str_fol": "\u00acadapts_quick(Camila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Camila either heals fast or adapts quickly.",
                    "fol": "p_14(Camila) \u2228 p_4(Camila)",
                    "str_fol": "heals_fast(Camila) \u2228 adapts_quick(Camila)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Camila",
                "text": "Camila heals quickly.",
                "fol": "p_14(Camila)",
                "str_fol": "heals_fast(Camila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Camila",
                    "text": "Camila does not need blood.",
                    "fol": "\u00acp_3(Camila)",
                    "str_fol": "\u00acneeds_blood(Camila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Camila is either injured or needs blood.",
                    "fol": "p_13(Camila) \u2228 p_3(Camila)",
                    "str_fol": "is_injured(Camila) \u2228 needs_blood(Camila)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Camila",
                "text": "Camila is injured.",
                "fol": "p_13(Camila)",
                "str_fol": "is_injured(Camila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Camila",
                    "text": "Camila is injured.",
                    "fol": "p_13(Camila)",
                    "str_fol": "is_injured(Camila)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Camila",
                    "text": "Camila heals quickly.",
                    "fol": "p_14(Camila)",
                    "str_fol": "heals_fast(Camila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Camila is injured, then she either heals quickly or uses magic.",
                    "fol": "p_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))",
                    "str_fol": "is_injured(Camila) \u2192 (heals_fast(Camila) \u2295 uses_magic(Camila))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Camila",
                "text": "Camila does not use magic.",
                "fol": "\u00acp_12(Camila)",
                "str_fol": "\u00acuses_magic(Camila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Camila",
                    "text": "Camila does not regenerate.",
                    "fol": "\u00acp_2(Camila)",
                    "str_fol": "\u00acregenerates(Camila)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Camila",
                    "text": "Camila does not use magic.",
                    "fol": "\u00acp_12(Camila)",
                    "str_fol": "\u00acuses_magic(Camila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Camila gets wounds, then she either regenerates or uses magic.",
                    "fol": "p_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))",
                    "str_fol": "gets_wounds(Camila) \u2192 (regenerates(Camila) \u2295 uses_magic(Camila))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Camila",
                "text": "Camila does not get wounds.",
                "fol": "\u00acp_11(Camila)",
                "str_fol": "\u00acgets_wounds(Camila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Camila",
                    "text": "Camila has veins.",
                    "fol": "p_10(Camila)",
                    "str_fol": "has_veins(Camila)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Camila",
                    "text": "Camila does not get wounds.",
                    "fol": "\u00acp_11(Camila)",
                    "str_fol": "\u00acgets_wounds(Camila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Camila either has veins or gets wounds (but not both), then she bleeds easily.",
                    "fol": "(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)",
                    "str_fol": "(has_veins(Camila) \u2295 gets_wounds(Camila)) \u2192 bleeds_easily(Camila)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Camila",
                "text": "Camila bleeds easily.",
                "fol": "p_9(Camila)",
                "str_fol": "bleeds_easily(Camila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Camila",
                    "text": "Camila does not cast a shadow.",
                    "fol": "\u00acp_1(Camila)",
                    "str_fol": "\u00accasts_shadow(Camila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Camila either has a heart or casts a shadow.",
                    "fol": "p_8(Camila) \u2228 p_1(Camila)",
                    "str_fol": "has_heart(Camila) \u2228 casts_shadow(Camila)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Camila",
                "text": "Camila has a heart.",
                "fol": "p_8(Camila)",
                "str_fol": "has_heart(Camila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Camila",
                    "text": "Camila has a heart.",
                    "fol": "p_8(Camila)",
                    "str_fol": "has_heart(Camila)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Camila",
                    "text": "Camila bleeds easily.",
                    "fol": "p_9(Camila)",
                    "str_fol": "bleeds_easily(Camila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Camila has a heart and bleeds easily, then she is mortal.",
                    "fol": "(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)",
                    "str_fol": "(has_heart(Camila) \u2227 bleeds_easily(Camila)) \u2192 mortal(Camila)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Camila",
                "text": "Camila is mortal.",
                "fol": "p_6(Camila)",
                "str_fol": "mortal(Camila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Camila",
                    "text": "Camila is immortal.",
                    "fol": "p_0(Camila)",
                    "str_fol": "immortal(Camila)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Camila",
                    "text": "Camila is mortal.",
                    "fol": "p_6(Camila)",
                    "str_fol": "mortal(Camila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all mythical creatures, if they are either immortal or mortal (but not both), then they are legendary.",
                    "fol": "\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((immortal(x) \u2295 mortal(x)) \u2192 legendary(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2295 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\np_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))\np_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))\n(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)\n\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Camila).",
                    "-p_4(Camila).",
                    "-p_3(Camila).",
                    "-p_2(Camila).",
                    "-p_1(Camila).",
                    "p_0(Camila).",
                    "-(p_10(Camila) <-> p_5(Camila)).",
                    "p_14(Camila) | p_4(Camila).",
                    "p_13(Camila) | p_3(Camila).",
                    "-p_13(Camila) | -(p_14(Camila) <-> p_12(Camila)).",
                    "-p_11(Camila) | -(p_2(Camila) <-> p_12(Camila)).",
                    "-(-(p_10(Camila) <-> p_11(Camila))) | p_9(Camila).",
                    "p_8(Camila) | p_1(Camila).",
                    "(-p_8(Camila) | -p_9(Camila)) | p_6(Camila).",
                    "all x ((-(p_0(x) <-> p_6(x))) | p_7(x)).",
                    "p_6(Camila).",
                    "-p_6(Camila) | -p_7(Camila)."
                ],
                "formulas(goals)": [
                    "-p_7(Camila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Camila)"
                ],
                "added_rules": [
                    "p_6(Camila) \u2192 \u00acp_7(Camila)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2295 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\np_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))\np_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))\n(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)\n\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))\np_11(Camila)",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Camila).",
                    "-p_4(Camila).",
                    "-p_3(Camila).",
                    "-p_2(Camila).",
                    "-p_1(Camila).",
                    "p_0(Camila).",
                    "-(p_10(Camila) <-> p_5(Camila)).",
                    "p_14(Camila) | p_4(Camila).",
                    "p_13(Camila) | p_3(Camila).",
                    "-p_13(Camila) | -(p_14(Camila) <-> p_12(Camila)).",
                    "-p_11(Camila) | -(p_2(Camila) <-> p_12(Camila)).",
                    "-(-(p_10(Camila) <-> p_11(Camila))) | p_9(Camila).",
                    "p_8(Camila) | p_1(Camila).",
                    "-p_8(Camila) | -p_9(Camila) | p_6(Camila).",
                    "all x (-(p_0(x) <-> p_6(x)) -> p_7(x)).",
                    "p_11(Camila)."
                ],
                "formulas(goals)": [
                    "p_7(Camila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Camila)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2228 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila) \u2228 p_12(Camila)\np_11(Camila) \u2192 (p_2(Camila) \u2228 p_12(Camila))\n(p_10(Camila) \u2228 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)\n\u2200x ((p_0(x) \u2228 p_6(x)) \u2192 p_7(x))\np_11(Camila)\np_10(Camila)\np_14(Camila)",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Camila)",
                    "-p_4(Camila)",
                    "-p_3(Camila)",
                    "-p_2(Camila)",
                    "-p_1(Camila)",
                    "p_0(Camila)",
                    "p_10(Camila) | p_5(Camila)",
                    "p_14(Camila) | p_4(Camila)",
                    "p_13(Camila) | p_3(Camila)",
                    "-p_13(Camila) | p_14(Camila) | p_12(Camila)",
                    "p_11(Camila) -> (p_2(Camila) | p_12(Camila))",
                    "(p_10(Camila) | p_11(Camila)) -> p_9(Camila)",
                    "p_8(Camila) | p_1(Camila)",
                    "(p_8(Camila) & p_9(Camila)) -> p_6(Camila)",
                    "all x ((p_0(x) | p_6(x)) -> p_7(x))",
                    "p_11(Camila)",
                    "p_10(Camila)",
                    "p_14(Camila)"
                ],
                "formulas(goals)": [
                    "--p_7(Camila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Camila) \u2295 p_5(Camila)",
                    "p_13(Camila) \u2192 (p_14(Camila) \u2295 p_12(Camila))",
                    "p_11(Camila) \u2192 (p_2(Camila) \u2295 p_12(Camila))",
                    "(p_10(Camila) \u2295 p_11(Camila)) \u2192 p_9(Camila)",
                    "\u2200x ((p_0(x) \u2295 p_6(x)) \u2192 p_7(x))"
                ],
                "added_facts": [
                    "p_10(Camila)",
                    "p_14(Camila)"
                ],
                "added_rules": [
                    "p_10(Camila) \u2228 p_5(Camila)",
                    "\u00acp_13(Camila) \u2228 p_14(Camila) \u2228 p_12(Camila)",
                    "p_11(Camila) \u2192 (p_2(Camila) \u2228 p_12(Camila))",
                    "(p_10(Camila) \u2228 p_11(Camila)) \u2192 p_9(Camila)",
                    "\u2200x ((p_0(x) \u2228 p_6(x)) \u2192 p_7(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2228 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila) \u2228 p_12(Camila)\np_11(Camila) \u2192 (p_2(Camila) \u2228 p_12(Camila))\n(p_10(Camila) \u2228 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)\n\u2200x ((p_0(x) \u2228 p_6(x)) \u2192 p_7(x))\np_11(Camila)\np_10(Camila)\np_14(Camila)\np_13(Camila)\np_12(Camila)\np_9(Camila)\np_8(Camila)\np_6(Camila)",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Camila)",
                    "-p_4(Camila)",
                    "-p_3(Camila)",
                    "-p_2(Camila)",
                    "-p_1(Camila)",
                    "p_0(Camila)",
                    "p_10(Camila) | p_5(Camila)",
                    "p_14(Camila) | p_4(Camila)",
                    "p_13(Camila) | p_3(Camila)",
                    "-p_13(Camila) | p_14(Camila) | p_12(Camila)",
                    "p_11(Camila) -> (p_2(Camila) | p_12(Camila))",
                    "(p_10(Camila) | p_11(Camila)) -> p_9(Camila)",
                    "p_8(Camila) | p_1(Camila)",
                    "(p_8(Camila) & p_9(Camila)) -> p_6(Camila)",
                    "all x ((p_0(x) | p_6(x)) -> p_7(x))",
                    "p_11(Camila)",
                    "p_10(Camila)",
                    "p_14(Camila)",
                    "p_13(Camila)",
                    "p_12(Camila)",
                    "p_9(Camila)",
                    "p_8(Camila)",
                    "p_6(Camila)"
                ],
                "formulas(goals)": [
                    "-(-p_7(Camila))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Camila)",
                    "p_12(Camila)",
                    "p_9(Camila)",
                    "p_8(Camila)",
                    "p_6(Camila)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2228 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila) \u2228 p_12(Camila)\np_11(Camila) \u2192 (p_2(Camila) \u2228 p_12(Camila))\n(p_10(Camila) \u2228 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n\u00acp_8(Camila) \u2228 \u00acp_9(Camila) \u2228 p_6(Camila)\n\u2200x ((p_0(x) \u2228 p_6(x)) \u2192 p_7(x))\np_11(Camila)\np_10(Camila)\np_14(Camila)\np_13(Camila)\np_12(Camila)\np_9(Camila)\np_8(Camila)\np_6(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila)\n(p_0(Camila) \u2228 p_6(Camila)) \u2192 p_7(Camila)",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Camila)",
                    "-p_4(Camila)",
                    "-p_3(Camila)",
                    "-p_2(Camila)",
                    "-p_1(Camila)",
                    "p_0(Camila)",
                    "p_10(Camila) | p_5(Camila)",
                    "p_14(Camila) | p_4(Camila)",
                    "p_13(Camila) | p_3(Camila)",
                    "-p_13(Camila) | p_14(Camila) | p_12(Camila)",
                    "p_11(Camila) -> (p_2(Camila) | p_12(Camila))",
                    "(p_10(Camila) | p_11(Camila)) -> p_9(Camila)",
                    "p_8(Camila) | p_1(Camila)",
                    "-p_8(Camila) | -p_9(Camila) | p_6(Camila)",
                    "all x ((p_0(x) | p_6(x)) -> p_7(x))",
                    "p_11(Camila)",
                    "p_10(Camila)",
                    "p_14(Camila)",
                    "p_13(Camila)",
                    "p_12(Camila)",
                    "p_9(Camila)",
                    "p_8(Camila)",
                    "p_6(Camila)",
                    "-p_13(Camila) | p_14(Camila)",
                    "(p_0(Camila) | p_6(Camila)) -> p_7(Camila)"
                ],
                "formulas(goals)": [
                    "p_7(Camila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_8(Camila) \u2227 p_9(Camila)) \u2192 p_6(Camila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_8(Camila) \u2228 \u00acp_9(Camila) \u2228 p_6(Camila)",
                    "\u00acp_13(Camila) \u2228 p_14(Camila)",
                    "(p_0(Camila) \u2228 p_6(Camila)) \u2192 p_7(Camila)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2228 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila) \u2228 p_12(Camila)\np_11(Camila) \u2192 (p_2(Camila) \u2228 p_12(Camila))\n(p_10(Camila) \u2228 p_11(Camila)) \u2192 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n\u00acp_8(Camila) \u2228 \u00acp_9(Camila) \u2228 p_6(Camila)\np_11(Camila)\np_10(Camila)\np_14(Camila)\np_13(Camila)\np_12(Camila)\np_9(Camila)\np_8(Camila)\np_6(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila)\np_10(Camila) \u2192 \u00acp_7(Camila)",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_5(Camila).",
                    "- p_4(Camila).",
                    "- p_3(Camila).",
                    "- p_2(Camila).",
                    "- p_1(Camila).",
                    "p_0(Camila).",
                    "p_10(Camila) | p_5(Camila).",
                    "p_14(Camila) | p_4(Camila).",
                    "p_13(Camila) | p_3(Camila).",
                    "- p_13(Camila) | p_14(Camila) | p_12(Camila).",
                    "p_11(Camila) -> (p_2(Camila) | p_12(Camila)).",
                    "(p_10(Camila) | p_11(Camila)) -> p_9(Camila).",
                    "p_8(Camila) | p_1(Camila).",
                    "- p_8(Camila) | - p_9(Camila) | p_6(Camila).",
                    "p_11(Camila).",
                    "p_10(Camila).",
                    "p_14(Camila).",
                    "p_13(Camila).",
                    "p_12(Camila).",
                    "p_9(Camila).",
                    "p_8(Camila).",
                    "p_6(Camila).",
                    "- p_13(Camila) | p_14(Camila).",
                    "p_10(Camila) -> - p_7(Camila)."
                ],
                "formulas(goals)": [
                    "- p_7(Camila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_0(x) \u2228 p_6(x)) \u2192 p_7(x))",
                    "(p_0(Camila) \u2228 p_6(Camila)) \u2192 p_7(Camila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Camila) \u2192 \u00acp_7(Camila)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Camila)\n\u00acp_4(Camila)\n\u00acp_3(Camila)\n\u00acp_2(Camila)\n\u00acp_1(Camila)\np_0(Camila)\np_10(Camila) \u2228 p_5(Camila)\np_14(Camila) \u2228 p_4(Camila)\np_13(Camila) \u2228 p_3(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila) \u2228 p_12(Camila)\n\u00acp_11(Camila) \u2228 p_2(Camila) \u2228 p_12(Camila)\n\u00ac(p_10(Camila) \u2228 p_11(Camila)) \u2228 p_9(Camila)\np_8(Camila) \u2228 p_1(Camila)\n\u00acp_8(Camila) \u2228 \u00acp_9(Camila) \u2228 p_6(Camila)\np_11(Camila)\np_10(Camila)\np_14(Camila)\np_13(Camila)\np_12(Camila)\np_9(Camila)\np_8(Camila)\np_6(Camila)\n\u00acp_13(Camila) \u2228 p_14(Camila)\n\u00acp_10(Camila) \u2228 p_7(Camila)",
            "Initial Goal": "\u00acp_7(Camila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Camila)",
                    "-p_4(Camila)",
                    "-p_3(Camila)",
                    "-p_2(Camila)",
                    "-p_1(Camila)",
                    "p_0(Camila)",
                    "p_10(Camila) | p_5(Camila)",
                    "p_14(Camila) | p_4(Camila)",
                    "p_13(Camila) | p_3(Camila)",
                    "-p_13(Camila) | p_14(Camila) | p_12(Camila)",
                    "-p_11(Camila) | p_2(Camila) | p_12(Camila)",
                    "(-(p_10(Camila) | p_11(Camila))) | p_9(Camila)",
                    "p_8(Camila) | p_1(Camila)",
                    "-p_8(Camila) | -p_9(Camila) | p_6(Camila)",
                    "p_11(Camila)",
                    "p_10(Camila)",
                    "p_14(Camila)",
                    "p_13(Camila)",
                    "p_12(Camila)",
                    "p_9(Camila)",
                    "p_8(Camila)",
                    "p_6(Camila)",
                    "-p_13(Camila) | p_14(Camila)",
                    "-p_10(Camila) | p_7(Camila)"
                ],
                "formulas(goals)": [
                    "-(-p_7(Camila))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Camila) \u2192 \u00acp_7(Camila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Camila) \u2192 p_7(Camila)"
                ]
            }
        }
    ]
}