{
    "background_story": "Egypt, a brilliant and eccentric mathematician, spent her life studying the intricacies of geometric shapes. Her obsession with the hyperbola led her to make groundbreaking discoveries in the field of algebraic geometry. She proved that the hyperbola, with its two separate branches and infinite asymptotes, held the key to understanding the behavior of complex systems. Egypt's work on the hyperbola took her to the ancient monuments of her namesake country, where she found inspiration in the symmetric shapes and patterns of the pyramids. Her research culminated in the development of a new mathematical model, known as 'Egypt's Hyperbola,' which has been widely applied in fields ranging from astronomy to engineering.",
    "predicates": [
        {
            "id": 0,
            "name": "has_dimensions"
        },
        {
            "id": 1,
            "name": "is_curved"
        },
        {
            "id": 2,
            "name": "repeats_shape"
        },
        {
            "id": 3,
            "name": "is_scalable"
        },
        {
            "id": 4,
            "name": "is_consistent"
        },
        {
            "id": 5,
            "name": "have_symmetry"
        },
        {
            "id": 6,
            "name": "have_asymptotes"
        },
        {
            "id": 7,
            "name": "is_geometric"
        },
        {
            "id": 8,
            "name": "is_fractal"
        },
        {
            "id": 9,
            "name": "has_branches"
        },
        {
            "id": 10,
            "name": "has_pattern"
        },
        {
            "id": 11,
            "name": "is_structured"
        },
        {
            "id": 12,
            "name": "follows_rules"
        },
        {
            "id": 13,
            "name": "obeys_laws"
        },
        {
            "id": 14,
            "name": "has_reflection"
        },
        {
            "id": 15,
            "name": "has_rotation"
        },
        {
            "id": 16,
            "name": "is_self_similar"
        },
        {
            "id": 17,
            "name": "has_infinite_detail"
        },
        {
            "id": 18,
            "name": "describes_shape"
        },
        {
            "id": 19,
            "name": "relates_angles"
        },
        {
            "id": 20,
            "name": "is_divisible"
        },
        {
            "id": 21,
            "name": "is_connected"
        },
        {
            "id": 22,
            "name": "has_order"
        },
        {
            "id": 23,
            "name": "is_repeated"
        },
        {
            "id": 24,
            "name": "is_complex"
        },
        {
            "id": 25,
            "name": "is_abstract"
        },
        {
            "id": 26,
            "name": "is_precise"
        }
    ],
    "subject_name": "Egypt",
    "subject_category": "mathematical concept",
    "keyword": "hyperbola",
    "all_facts": [
        {
            "id": 0,
            "subject": "Egypt",
            "text": "Egypt has dimensions.",
            "fol": "p_0(Egypt)",
            "str_fol": "has_dimensions(Egypt)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Egypt",
            "text": "Egypt is curved.",
            "fol": "p_1(Egypt)",
            "str_fol": "is_curved(Egypt)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Egypt",
            "text": "Egypt repeats a shape.",
            "fol": "p_2(Egypt)",
            "str_fol": "repeats_shape(Egypt)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Egypt",
            "text": "Egypt is not scalable.",
            "fol": "\u00acp_3(Egypt)",
            "str_fol": "\u00acis_scalable(Egypt)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Egypt",
            "text": "Egypt is not consistent.",
            "fol": "\u00acp_4(Egypt)",
            "str_fol": "\u00acis_consistent(Egypt)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Egypt",
            "text": "Egypt does not obey laws.",
            "fol": "\u00acp_13(Egypt)",
            "str_fol": "\u00acobeys_laws(Egypt)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Egypt",
            "text": "Egypt follows rules.",
            "fol": "p_12(Egypt)",
            "str_fol": "follows_rules(Egypt)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Egypt",
            "text": "Egypt has a pattern.",
            "fol": "p_10(Egypt)",
            "str_fol": "has_pattern(Egypt)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Egypt",
            "text": "Egypt is structured.",
            "fol": "p_11(Egypt)",
            "str_fol": "is_structured(Egypt)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Egypt",
            "text": "Egypt does not have branches.",
            "fol": "\u00acp_9(Egypt)",
            "str_fol": "\u00achas_branches(Egypt)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Egypt",
            "text": "Egypt is a geometric concept.",
            "fol": "p_7(Egypt)",
            "str_fol": "is_geometric(Egypt)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Egypt",
            "text": "Egypt is a fractal.",
            "fol": "p_8(Egypt)",
            "str_fol": "is_fractal(Egypt)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Egypt",
            "text": "Egypt does not have symmetry.",
            "fol": "\u00acp_5(Egypt)",
            "str_fol": "\u00achave_symmetry(Egypt)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Egypt",
            "text": "The hyperbola in Egypt has asymptotes.",
            "fol": "p_6(Egypt)",
            "str_fol": "have_asymptotes(Egypt)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Egypt",
            "text": "Egypt is not consistent.",
            "fol": "\u00acp_4(Egypt)",
            "str_fol": "\u00acis_consistent(Egypt)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Egypt",
            "text": "Egypt repeats a shape.",
            "fol": "p_2(Egypt)",
            "str_fol": "repeats_shape(Egypt)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Egypt",
            "text": "Egypt has dimensions.",
            "fol": "p_0(Egypt)",
            "str_fol": "has_dimensions(Egypt)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Egypt",
            "text": "Egypt is not scalable.",
            "fol": "\u00acp_3(Egypt)",
            "str_fol": "\u00acis_scalable(Egypt)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Egypt",
            "text": "Egypt is curved.",
            "fol": "p_1(Egypt)",
            "str_fol": "is_curved(Egypt)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Any mathematical concept that obeys laws is consistent.",
            "fol": "\u2200x (p_13(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (obeys_laws(x) \u2192 is_consistent(x))"
        },
        {
            "id": 7,
            "text": "Every mathematical concept either follows rules or obeys laws.",
            "fol": "\u2200x (p_12(x) \u2228 p_13(x))",
            "str_fol": "\u2200x (follows_rules(x) \u2228 obeys_laws(x))"
        },
        {
            "id": 6,
            "text": "Any mathematical concept that repeats a shape and follows rules has a pattern.",
            "fol": "\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((repeats_shape(x) \u2227 follows_rules(x)) \u2192 has_pattern(x))"
        },
        {
            "id": 5,
            "text": "Any mathematical concept that has dimensions is either structured or scalable.",
            "fol": "\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))",
            "str_fol": "\u2200x (has_dimensions(x) \u2192 (is_structured(x) \u2228 is_scalable(x)))"
        },
        {
            "id": 4,
            "text": "The hyperbola is either curved or has branches, but not both.",
            "fol": "p_1(Egypt) \u2295 p_9(Egypt)",
            "str_fol": "is_curved(Egypt) \u2295 has_branches(Egypt)"
        },
        {
            "id": 3,
            "text": "If the hyperbola has a pattern or is structured, then it is geometric.",
            "fol": "(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)",
            "str_fol": "(has_pattern(Egypt) \u2228 is_structured(Egypt)) \u2192 is_geometric(Egypt)"
        },
        {
            "id": 2,
            "text": "The hyperbola is either fractal or has branches, but not both.",
            "fol": "p_9(Egypt) \u2295 p_8(Egypt)",
            "str_fol": "has_branches(Egypt) \u2295 is_fractal(Egypt)"
        },
        {
            "id": 1,
            "text": "If the hyperbola is a geometric concept, then it either has fractal properties or symmetry, but not both.",
            "fol": "p_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))",
            "str_fol": "is_geometric(Egypt) \u2192 (is_fractal(Egypt) \u2295 have_symmetry(Egypt))"
        },
        {
            "id": 0,
            "text": "The hyperbola either has symmetry or has asymptotes (or both).",
            "fol": "p_5(Egypt) \u2228 p_6(Egypt)",
            "str_fol": "have_symmetry(Egypt) \u2228 have_asymptotes(Egypt)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Egypt",
            "text": "Egypt is not consistent.",
            "fol": "\u00acp_4(Egypt)",
            "str_fol": "\u00acis_consistent(Egypt)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Egypt",
            "text": "Egypt repeats a shape.",
            "fol": "p_2(Egypt)",
            "str_fol": "repeats_shape(Egypt)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Egypt",
            "text": "Egypt has dimensions.",
            "fol": "p_0(Egypt)",
            "str_fol": "has_dimensions(Egypt)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Egypt",
            "text": "Egypt is not scalable.",
            "fol": "\u00acp_3(Egypt)",
            "str_fol": "\u00acis_scalable(Egypt)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Egypt",
            "text": "Egypt is curved.",
            "fol": "p_1(Egypt)",
            "str_fol": "is_curved(Egypt)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Any mathematical concept that obeys laws is consistent.",
            "fol": "\u2200x (p_13(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (obeys_laws(x) \u2192 is_consistent(x))"
        },
        {
            "id": 7,
            "text": "Every mathematical concept either follows rules or obeys laws.",
            "fol": "\u2200x (p_12(x) \u2228 p_13(x))",
            "str_fol": "\u2200x (follows_rules(x) \u2228 obeys_laws(x))"
        },
        {
            "id": 6,
            "text": "Any mathematical concept that repeats a shape and follows rules has a pattern.",
            "fol": "\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((repeats_shape(x) \u2227 follows_rules(x)) \u2192 has_pattern(x))"
        },
        {
            "id": 5,
            "text": "Any mathematical concept that has dimensions is either structured or scalable.",
            "fol": "\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))",
            "str_fol": "\u2200x (has_dimensions(x) \u2192 (is_structured(x) \u2228 is_scalable(x)))"
        },
        {
            "id": 4,
            "text": "The hyperbola is either curved or has branches, but not both.",
            "fol": "p_1(Egypt) \u2295 p_9(Egypt)",
            "str_fol": "is_curved(Egypt) \u2295 has_branches(Egypt)"
        },
        {
            "id": 3,
            "text": "If the hyperbola has a pattern or is structured, then it is geometric.",
            "fol": "(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)",
            "str_fol": "(has_pattern(Egypt) \u2228 is_structured(Egypt)) \u2192 is_geometric(Egypt)"
        },
        {
            "id": 2,
            "text": "The hyperbola is either fractal or has branches, but not both.",
            "fol": "p_9(Egypt) \u2295 p_8(Egypt)",
            "str_fol": "has_branches(Egypt) \u2295 is_fractal(Egypt)"
        },
        {
            "id": 1,
            "text": "If the hyperbola is a geometric concept, then it either has fractal properties or symmetry, but not both.",
            "fol": "p_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))",
            "str_fol": "is_geometric(Egypt) \u2192 (is_fractal(Egypt) \u2295 have_symmetry(Egypt))"
        },
        {
            "id": 0,
            "text": "The hyperbola either has symmetry or has asymptotes (or both).",
            "fol": "p_5(Egypt) \u2228 p_6(Egypt)",
            "str_fol": "have_symmetry(Egypt) \u2228 have_asymptotes(Egypt)"
        }
    ],
    "context_fol": "\u00acp_4(Egypt)\np_2(Egypt)\np_0(Egypt)\n\u00acp_3(Egypt)\np_1(Egypt)\n\u2200x (p_13(x) \u2192 p_4(x))\n\u2200x (p_12(x) \u2228 p_13(x))\n\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))\np_1(Egypt) \u2295 p_9(Egypt)\n(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)\np_9(Egypt) \u2295 p_8(Egypt)\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))\np_5(Egypt) \u2228 p_6(Egypt)",
    "conclusion": {
        "id": 13,
        "subject": "Egypt",
        "text": "The hyperbola in Egypt has asymptotes.",
        "fol": "p_6(Egypt)",
        "str_fol": "have_asymptotes(Egypt)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_6(Egypt)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Egypt",
                    "text": "Egypt is not consistent.",
                    "fol": "\u00acp_4(Egypt)",
                    "str_fol": "\u00acis_consistent(Egypt)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Any mathematical concept that obeys laws is consistent.",
                    "fol": "\u2200x (p_13(x) \u2192 p_4(x))",
                    "str_fol": "\u2200x (obeys_laws(x) \u2192 is_consistent(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Egypt",
                "text": "Egypt does not obey laws.",
                "fol": "\u00acp_13(Egypt)",
                "str_fol": "\u00acobeys_laws(Egypt)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Egypt",
                    "text": "Egypt does not obey laws.",
                    "fol": "\u00acp_13(Egypt)",
                    "str_fol": "\u00acobeys_laws(Egypt)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Every mathematical concept either follows rules or obeys laws.",
                    "fol": "\u2200x (p_12(x) \u2228 p_13(x))",
                    "str_fol": "\u2200x (follows_rules(x) \u2228 obeys_laws(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Egypt",
                "text": "Egypt follows rules.",
                "fol": "p_12(Egypt)",
                "str_fol": "follows_rules(Egypt)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Egypt",
                    "text": "Egypt repeats a shape.",
                    "fol": "p_2(Egypt)",
                    "str_fol": "repeats_shape(Egypt)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Egypt",
                    "text": "Egypt follows rules.",
                    "fol": "p_12(Egypt)",
                    "str_fol": "follows_rules(Egypt)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Any mathematical concept that repeats a shape and follows rules has a pattern.",
                    "fol": "\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((repeats_shape(x) \u2227 follows_rules(x)) \u2192 has_pattern(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Egypt",
                "text": "Egypt has a pattern.",
                "fol": "p_10(Egypt)",
                "str_fol": "has_pattern(Egypt)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Egypt",
                    "text": "Egypt has dimensions.",
                    "fol": "p_0(Egypt)",
                    "str_fol": "has_dimensions(Egypt)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Egypt",
                    "text": "Egypt is not scalable.",
                    "fol": "\u00acp_3(Egypt)",
                    "str_fol": "\u00acis_scalable(Egypt)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Any mathematical concept that has dimensions is either structured or scalable.",
                    "fol": "\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))",
                    "str_fol": "\u2200x (has_dimensions(x) \u2192 (is_structured(x) \u2228 is_scalable(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Egypt",
                "text": "Egypt is structured.",
                "fol": "p_11(Egypt)",
                "str_fol": "is_structured(Egypt)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Egypt",
                    "text": "Egypt is curved.",
                    "fol": "p_1(Egypt)",
                    "str_fol": "is_curved(Egypt)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "The hyperbola is either curved or has branches, but not both.",
                    "fol": "p_1(Egypt) \u2295 p_9(Egypt)",
                    "str_fol": "is_curved(Egypt) \u2295 has_branches(Egypt)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Egypt",
                "text": "Egypt does not have branches.",
                "fol": "\u00acp_9(Egypt)",
                "str_fol": "\u00achas_branches(Egypt)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Egypt",
                    "text": "Egypt has a pattern.",
                    "fol": "p_10(Egypt)",
                    "str_fol": "has_pattern(Egypt)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Egypt",
                    "text": "Egypt is structured.",
                    "fol": "p_11(Egypt)",
                    "str_fol": "is_structured(Egypt)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If the hyperbola has a pattern or is structured, then it is geometric.",
                    "fol": "(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)",
                    "str_fol": "(has_pattern(Egypt) \u2228 is_structured(Egypt)) \u2192 is_geometric(Egypt)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Egypt",
                "text": "Egypt is a geometric concept.",
                "fol": "p_7(Egypt)",
                "str_fol": "is_geometric(Egypt)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Egypt",
                    "text": "Egypt does not have branches.",
                    "fol": "\u00acp_9(Egypt)",
                    "str_fol": "\u00achas_branches(Egypt)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "The hyperbola is either fractal or has branches, but not both.",
                    "fol": "p_9(Egypt) \u2295 p_8(Egypt)",
                    "str_fol": "has_branches(Egypt) \u2295 is_fractal(Egypt)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Egypt",
                "text": "Egypt is a fractal.",
                "fol": "p_8(Egypt)",
                "str_fol": "is_fractal(Egypt)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Egypt",
                    "text": "Egypt is a geometric concept.",
                    "fol": "p_7(Egypt)",
                    "str_fol": "is_geometric(Egypt)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Egypt",
                    "text": "Egypt is a fractal.",
                    "fol": "p_8(Egypt)",
                    "str_fol": "is_fractal(Egypt)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If the hyperbola is a geometric concept, then it either has fractal properties or symmetry, but not both.",
                    "fol": "p_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))",
                    "str_fol": "is_geometric(Egypt) \u2192 (is_fractal(Egypt) \u2295 have_symmetry(Egypt))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Egypt",
                "text": "Egypt does not have symmetry.",
                "fol": "\u00acp_5(Egypt)",
                "str_fol": "\u00achave_symmetry(Egypt)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Egypt",
                    "text": "Egypt does not have symmetry.",
                    "fol": "\u00acp_5(Egypt)",
                    "str_fol": "\u00achave_symmetry(Egypt)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "The hyperbola either has symmetry or has asymptotes (or both).",
                    "fol": "p_5(Egypt) \u2228 p_6(Egypt)",
                    "str_fol": "have_symmetry(Egypt) \u2228 have_asymptotes(Egypt)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Egypt",
                "text": "The hyperbola in Egypt has asymptotes.",
                "fol": "p_6(Egypt)",
                "str_fol": "have_asymptotes(Egypt)",
                "negation": false
            }
        }
    ],
    "proof_trace": "4 (all x (p_0(x) -> p_11(x) | p_3(x))).  [assumption].\n5 -(p_1(Egypt) <-> p_9(Egypt)).  [assumption].\n6 p_10(Egypt) | p_11(Egypt) -> p_7(Egypt).  [assumption].\n7 -(p_9(Egypt) <-> p_8(Egypt)).  [assumption].\n8 p_7(Egypt) -> -(p_8(Egypt) <-> p_5(Egypt)).  [assumption].\n9 p_6(Egypt).  [goal].\n14 -p_0(x) | p_11(x) | p_3(x).  [clausify(4)].\n15 p_0(Egypt).  [assumption].\n16 p_11(Egypt) | p_3(Egypt).  [resolve(14,a,15,a)].\n17 -p_3(Egypt).  [assumption].\n18 -p_1(Egypt) | -p_9(Egypt).  [clausify(5)].\n19 p_1(Egypt).  [assumption].\n25 p_11(Egypt).  [resolve(16,b,17,a)].\n26 -p_11(Egypt) | p_7(Egypt).  [clausify(6)].\n28 p_9(Egypt) | p_8(Egypt).  [clausify(7)].\n29 -p_9(Egypt).  [resolve(18,a,19,a)].\n32 -p_7(Egypt) | -p_8(Egypt) | -p_5(Egypt).  [clausify(8)].\n33 p_7(Egypt).  [resolve(25,a,26,a)].\n35 p_5(Egypt) | p_6(Egypt).  [assumption].\n36 -p_8(Egypt) | -p_5(Egypt).  [resolve(33,a,32,a)].\n38 -p_6(Egypt).  [deny(9)].\n39 -p_8(Egypt) | p_6(Egypt).  [resolve(36,b,35,a)].\n42 -p_8(Egypt).  [resolve(39,b,38,a)].\n43 p_8(Egypt).  [resolve(29,a,28,a)].\n44 $F.  [resolve(42,a,43,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Egypt)\np_2(Egypt)\np_0(Egypt)\n\u00acp_3(Egypt)\np_1(Egypt)\n\u2200x (p_13(x) \u2192 p_4(x))\n\u2200x (p_12(x) \u2228 p_13(x))\n\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))\np_1(Egypt) \u2295 p_9(Egypt)\n(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)\np_9(Egypt) \u2295 p_8(Egypt)\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))\n\u2200x (p_7(x) \u2192 \u00acp_6(x))",
            "Initial Goal": "p_6(Egypt)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Egypt)",
                    "p_2(Egypt)",
                    "p_0(Egypt)",
                    "-p_3(Egypt)",
                    "p_1(Egypt)",
                    "all x (p_13(x) -> p_4(x))",
                    "all x (p_12(x) | p_13(x))",
                    "all x ((p_2(x) & p_12(x)) -> p_10(x))",
                    "all x (p_0(x) -> (p_11(x) | p_3(x)))",
                    "-(p_1(Egypt) <-> p_9(Egypt))",
                    "(p_10(Egypt) | p_11(Egypt)) -> p_7(Egypt)",
                    "-(p_9(Egypt) <-> p_8(Egypt))",
                    "p_7(Egypt) -> (-(p_8(Egypt) <-> p_5(Egypt)))",
                    "all x (p_7(x) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "-p_6(Egypt)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Egypt) \u2228 p_6(Egypt)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_7(x) \u2192 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Egypt).\np_2(Egypt).\np_0(Egypt).\n\u00acp_3(Egypt).\np_1(Egypt).\n\u2200x (\u00acp_4(x) \u2192 \u00acp_13(x)).\n\u2200x (\u00acp_12(x) \u2192 p_13(x)).\n\u2200x (p_2(x) \u2192 (p_12(x) \u2192 p_10(x))).\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x))).\n(p_1(Egypt) \u2228 p_9(Egypt)) \u2227 \u00ac(p_1(Egypt) \u2227 p_9(Egypt)).\n(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt).\n(p_9(Egypt) \u2228 p_8(Egypt)) \u2227 \u00ac(p_9(Egypt) \u2227 p_8(Egypt)).\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt)).\n\u2200x (p_7(x) \u2192 \u00acp_6(x)).\np_12(Egypt).\np_10(Egypt).",
            "Initial Goal": "p_6(Egypt)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_4(Egypt).",
                    "p_2(Egypt).",
                    "p_0(Egypt).",
                    "- p_3(Egypt).",
                    "p_1(Egypt).",
                    "all x (-p_4(x) -> -p_13(x)).",
                    "all x (-p_12(x) -> p_13(x)).",
                    "all x (p_2(x) -> (p_12(x) -> p_10(x))).",
                    "all x (p_0(x) -> (p_11(x) | p_3(x))).",
                    "(p_1(Egypt) | p_9(Egypt)) & (-(p_1(Egypt) & p_9(Egypt))).",
                    "(p_10(Egypt) | p_11(Egypt)) -> p_7(Egypt).",
                    "(p_9(Egypt) | p_8(Egypt)) & (-(p_9(Egypt) & p_8(Egypt))).",
                    "p_7(Egypt) -> (-(p_8(Egypt) <-> p_5(Egypt))).",
                    "all x (p_7(x) -> -p_6(x)).",
                    "p_12(Egypt).",
                    "p_10(Egypt)."
                ],
                "formulas(goals)": [
                    "- p_6(Egypt)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_13(x) \u2192 p_4(x))",
                    "\u2200x (p_12(x) \u2228 p_13(x))",
                    "\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))",
                    "p_1(Egypt) \u2295 p_9(Egypt)",
                    "p_9(Egypt) \u2295 p_8(Egypt)"
                ],
                "added_facts": [
                    "p_12(Egypt)",
                    "p_10(Egypt)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_4(x) \u2192 \u00acp_13(x))",
                    "\u2200x (\u00acp_12(x) \u2192 p_13(x))",
                    "\u2200x (p_2(x) \u2192 (p_12(x) \u2192 p_10(x)))",
                    "(p_1(Egypt) \u2228 p_9(Egypt)) \u2227 \u00ac(p_1(Egypt) \u2227 p_9(Egypt))",
                    "(p_9(Egypt) \u2228 p_8(Egypt)) \u2227 \u00ac(p_9(Egypt) \u2227 p_8(Egypt))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Egypt)\np_2(Egypt)\np_0(Egypt)\n\u00acp_3(Egypt)\np_1(Egypt)\n\u2200x (\u00acp_4(x) \u2192 \u00acp_13(x))\n\u2200x (\u00acp_12(x) \u2192 p_13(x))\n\u2200x (p_2(x) \u2192 (p_12(x) \u2192 p_10(x)))\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))\n(p_1(Egypt) \u2228 p_9(Egypt)) \u2227 \u00ac(p_1(Egypt) \u2227 p_9(Egypt))\n(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)\n(p_9(Egypt) \u2228 p_8(Egypt)) \u2227 \u00ac(p_9(Egypt) \u2227 p_8(Egypt))\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\np_12(Egypt)\np_10(Egypt)\np_7(Egypt)\n\u2200x (p_13(x) \u2192 p_4(x))",
            "Initial Goal": "p_6(Egypt)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Egypt).",
                    "p_2(Egypt).",
                    "p_0(Egypt).",
                    "-p_3(Egypt).",
                    "p_1(Egypt).",
                    "all x (-p_4(x) -> -p_13(x)).",
                    "all x (-p_12(x) -> p_13(x)).",
                    "all x (p_2(x) -> (p_12(x) -> p_10(x))).",
                    "all x (p_0(x) -> (p_11(x) | p_3(x))).",
                    "(p_1(Egypt) | p_9(Egypt)) & (-(p_1(Egypt) & p_9(Egypt))).",
                    "(p_10(Egypt) | p_11(Egypt)) -> p_7(Egypt).",
                    "(p_9(Egypt) | p_8(Egypt)) & (-(p_9(Egypt) & p_8(Egypt))).",
                    "p_7(Egypt) -> (-(p_8(Egypt) <-> p_5(Egypt))).",
                    "all x (p_7(x) -> -p_6(x)).",
                    "p_12(Egypt).",
                    "p_10(Egypt).",
                    "p_7(Egypt).",
                    "all x (p_13(x) -> p_4(x))."
                ],
                "formulas(goals)": [
                    "-p_6(Egypt)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Egypt)"
                ],
                "added_rules": [
                    "\u2200x (p_13(x) \u2192 p_4(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Egypt)\np_2(Egypt)\np_0(Egypt)\n\u00acp_3(Egypt)\np_1(Egypt)\n\u2200x (\u00acp_4(x) \u2192 \u00acp_13(x))\n\u2200x (\u00acp_12(x) \u2192 p_13(x))\n\u2200x (p_2(x) \u2192 (p_12(x) \u2192 p_10(x)))\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))\n(p_1(Egypt) \u2228 p_9(Egypt)) \u2227 \u00ac(p_1(Egypt) \u2227 p_9(Egypt))\n(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)\n(p_9(Egypt) \u2228 p_8(Egypt)) \u2227 \u00ac(p_9(Egypt) \u2227 p_8(Egypt))\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))\np_12(Egypt)\np_10(Egypt)\np_7(Egypt)\n\u2200x (p_13(x) \u2192 p_4(x))\n\u2200x (p_7(x) \u2227 p_8(x) \u2192 p_6(x))",
            "Initial Goal": "p_6(Egypt)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Egypt)",
                    "p_2(Egypt)",
                    "p_0(Egypt)",
                    "-p_3(Egypt)",
                    "p_1(Egypt)",
                    "all x (-p_4(x) -> -p_13(x))",
                    "all x (-p_12(x) -> p_13(x))",
                    "all x (p_2(x) -> (p_12(x) -> p_10(x)))",
                    "all x (p_0(x) -> (p_11(x) | p_3(x)))",
                    "(p_1(Egypt) | p_9(Egypt)) & (-(p_1(Egypt) & p_9(Egypt)))",
                    "(p_10(Egypt) | p_11(Egypt)) -> p_7(Egypt)",
                    "(p_9(Egypt) | p_8(Egypt)) & (-(p_9(Egypt) & p_8(Egypt)))",
                    "p_7(Egypt) -> (-(p_8(Egypt) <-> p_5(Egypt)))",
                    "p_12(Egypt)",
                    "p_10(Egypt)",
                    "p_7(Egypt)",
                    "all x (p_13(x) -> p_4(x))",
                    "all x ((p_7(x) & p_8(x)) -> p_6(x))"
                ],
                "formulas(goals)": [
                    "p_6(Egypt)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_7(x) \u2192 \u00acp_6(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_7(x) \u2227 p_8(x) \u2192 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Egypt)\np_2(Egypt)\np_0(Egypt)\n\u00acp_3(Egypt)\np_1(Egypt)\n\u2200x (\u00acp_4(x) \u2192 \u00acp_13(x))\n\u2200x (\u00acp_12(x) \u2192 p_13(x))\n\u2200x (p_2(x) \u2192 (p_12(x) \u2192 p_10(x)))\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))\n(p_1(Egypt) \u2228 p_9(Egypt)) \u2227 \u00ac(p_1(Egypt) \u2227 p_9(Egypt))\n(p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt)\n(p_9(Egypt) \u2228 p_8(Egypt)) \u2227 \u00ac(p_9(Egypt) \u2227 p_8(Egypt))\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))\np_12(Egypt)\np_10(Egypt)\np_7(Egypt)\n\u2200x (p_13(x) \u2192 p_4(x))\n\u2200x (p_7(x) \u2227 p_8(x) \u2192 p_6(x))\np_11(Egypt)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2192 p_6(x)))\n\u2200x (\u00acp_13(x) \u2192 p_12(x))\n\u2200x (p_2(x) \u2227 p_12(x) \u2192 p_10(x))\n\u2200x (p_0(x) \u2192 (\u00acp_11(x) \u2192 p_3(x)))",
            "Initial Goal": "p_6(Egypt)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Egypt).",
                    "p_2(Egypt).",
                    "p_0(Egypt).",
                    "-p_3(Egypt).",
                    "p_1(Egypt).",
                    "all x (-p_4(x) -> -p_13(x)).",
                    "all x (-p_12(x) -> p_13(x)).",
                    "all x (p_2(x) -> (p_12(x) -> p_10(x))).",
                    "all x (p_0(x) -> (p_11(x) | p_3(x))).",
                    "(p_1(Egypt) | p_9(Egypt)) & (-p_1(Egypt) | -p_9(Egypt)).",
                    "(p_10(Egypt) | p_11(Egypt)) -> p_7(Egypt).",
                    "(p_9(Egypt) | p_8(Egypt)) & (-p_9(Egypt) | -p_8(Egypt)).",
                    "p_7(Egypt) -> (-(p_8(Egypt) <-> p_5(Egypt))).",
                    "p_12(Egypt).",
                    "p_10(Egypt).",
                    "p_7(Egypt).",
                    "all x (p_13(x) -> p_4(x)).",
                    "all x ((p_7(x) & p_8(x)) -> p_6(x)).",
                    "p_11(Egypt).",
                    "all x (p_7(x) -> (p_8(x) -> p_6(x))).",
                    "all x (-p_13(x) -> p_12(x)).",
                    "all x ((p_2(x) & p_12(x)) -> p_10(x)).",
                    "all x (p_0(x) -> (-p_11(x) -> p_3(x)))."
                ],
                "formulas(goals)": [
                    "p_6(Egypt)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Egypt)"
                ],
                "added_rules": [
                    "\u2200x (p_7(x) \u2192 (p_8(x) \u2192 p_6(x)))",
                    "\u2200x (\u00acp_13(x) \u2192 p_12(x))",
                    "\u2200x (p_2(x) \u2227 p_12(x) \u2192 p_10(x))",
                    "\u2200x (p_0(x) \u2192 (\u00acp_11(x) \u2192 p_3(x)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Egypt)\np_2(Egypt)\np_0(Egypt)\n\u00acp_3(Egypt)\np_1(Egypt)\n\u2200x (\u00acp_4(x) \u2192 \u00acp_13(x))\n\u2200x (\u00acp_12(x) \u2192 p_13(x))\n\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))\n\u2200x (p_0(x) \u2192 (p_11(x) \u2228 p_3(x)))\n(p_1(Egypt) \u2228 p_9(Egypt)) \u2227 \u00ac(p_1(Egypt) \u2227 p_9(Egypt))\n((p_10(Egypt) \u2228 p_11(Egypt)) \u2192 p_7(Egypt))\n(p_9(Egypt) \u2228 p_8(Egypt)) \u2227 \u00ac(p_9(Egypt) \u2227 p_8(Egypt))\np_7(Egypt) \u2192 (p_8(Egypt) \u2295 p_5(Egypt))\np_12(Egypt)\np_10(Egypt)\np_7(Egypt)\n\u2200x (p_13(x) \u2192 p_4(x))\n\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_6(x))\np_11(Egypt)\n\u2200x (\u00acp_13(x) \u2192 p_12(x))\np_8(Egypt)\n\u00acp_9(Egypt)\np_6(Egypt)\n\u2200x (p_12(x) \u2228 p_13(x))\n\u2200x (p_4(x) \u2228 \u00acp_13(x))\n\u2200x (p_3(x) \u2228 p_11(x) \u2228 \u00acp_0(x))",
            "Initial Goal": "p_6(Egypt)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Egypt)",
                    "p_2(Egypt)",
                    "p_0(Egypt)",
                    "-p_3(Egypt)",
                    "p_1(Egypt)",
                    "all x (-p_4(x) -> -p_13(x))",
                    "all x (-p_12(x) -> p_13(x))",
                    "all x ((p_2(x) & p_12(x)) -> p_10(x))",
                    "all x (p_0(x) -> (p_11(x) | p_3(x)))",
                    "(p_1(Egypt) | p_9(Egypt)) & (-(p_1(Egypt) & p_9(Egypt)))",
                    "((p_10(Egypt) | p_11(Egypt)) -> p_7(Egypt))",
                    "(p_9(Egypt) | p_8(Egypt)) & (-(p_9(Egypt) & p_8(Egypt)))",
                    "p_7(Egypt) -> (-(p_8(Egypt) <-> p_5(Egypt)))",
                    "p_12(Egypt)",
                    "p_10(Egypt)",
                    "p_7(Egypt)",
                    "all x (p_13(x) -> p_4(x))",
                    "all x ((p_7(x) & p_8(x)) -> p_6(x))",
                    "p_11(Egypt)",
                    "all x (-p_13(x) -> p_12(x))",
                    "p_8(Egypt)",
                    "-p_9(Egypt)",
                    "p_6(Egypt)",
                    "all x (p_12(x) | p_13(x))",
                    "all x (p_4(x) | -p_13(x))",
                    "all x (p_3(x) | p_11(x) | -p_0(x))"
                ],
                "formulas(goals)": [
                    "p_6(Egypt)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_2(x) \u2192 (p_12(x) \u2192 p_10(x)))",
                    "\u2200x (p_7(x) \u2192 (p_8(x) \u2192 p_6(x)))",
                    "\u2200x (p_2(x) \u2227 p_12(x) \u2192 p_10(x))",
                    "\u2200x (p_0(x) \u2192 (\u00acp_11(x) \u2192 p_3(x)))"
                ],
                "added_facts": [
                    "p_8(Egypt)",
                    "\u00acp_9(Egypt)",
                    "p_6(Egypt)"
                ],
                "added_rules": [
                    "\u2200x ((p_2(x) \u2227 p_12(x)) \u2192 p_10(x))",
                    "\u2200x (p_12(x) \u2228 p_13(x))",
                    "\u2200x (p_4(x) \u2228 \u00acp_13(x))",
                    "\u2200x (p_3(x) \u2228 p_11(x) \u2228 \u00acp_0(x))"
                ]
            }
        }
    ]
}