{
    "background_story": "Shelby was a sturdy cargo vessel that had been navigating the open seas for decades. One fateful night, a fierce storm rolled in, threatening to capsize the ship. As the waves crashed against the hull, the crew fought to keep Shelby on course. Amidships, where the vessel was widest, the storm's fury was most intense. The cargo hold, located amidships, was taking on water, but the crew's swift actions managed to stabilize the ship. Thanks to their bravery and Shelby's robust design, she rode out the tempest, emerging battered but unbroken on the other side. The ordeal became a testament to the ship's endurance and the crew's seamanship, earning Shelby a reputation as one of the toughest ships on the high seas.",
    "predicates": [
        {
            "id": 0,
            "name": "is_seaworthy"
        },
        {
            "id": 1,
            "name": "resist_damage"
        },
        {
            "id": 2,
            "name": "have_good_crew"
        },
        {
            "id": 3,
            "name": "navigate_treacherous_waters"
        },
        {
            "id": 4,
            "name": "is_reliable"
        },
        {
            "id": 5,
            "name": "sturdy"
        },
        {
            "id": 6,
            "name": "withstand_storms"
        },
        {
            "id": 7,
            "name": "earn_reputation"
        },
        {
            "id": 8,
            "name": "have_robust_design"
        },
        {
            "id": 9,
            "name": "have_brave_crew"
        },
        {
            "id": 10,
            "name": "stay_on_course"
        },
        {
            "id": 11,
            "name": "ride_out_tempest"
        },
        {
            "id": 12,
            "name": "avoid_wrecks"
        },
        {
            "id": 13,
            "name": "sail_long_distance"
        },
        {
            "id": 14,
            "name": "has_deep_hull"
        },
        {
            "id": 15,
            "name": "is_heavy"
        },
        {
            "id": 16,
            "name": "holds_cargo"
        },
        {
            "id": 17,
            "name": "carry_heavy_loads"
        },
        {
            "id": 18,
            "name": "carry_heavy_load"
        },
        {
            "id": 19,
            "name": "have_deep_keel"
        },
        {
            "id": 20,
            "name": "heavy_duty"
        },
        {
            "id": 21,
            "name": "chart_course"
        },
        {
            "id": 22,
            "name": "heeds_warnings"
        },
        {
            "id": 23,
            "name": "is_reliable_vessel"
        }
    ],
    "subject_name": "Shelby",
    "subject_category": "ship",
    "keyword": "amidships",
    "all_facts": [
        {
            "id": 0,
            "subject": "Shelby",
            "text": "Shelby is not seaworthy.",
            "fol": "\u00acp_0(Shelby)",
            "str_fol": "\u00acis_seaworthy(Shelby)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Shelby",
            "text": "Shelby cannot resist damage.",
            "fol": "\u00acp_1(Shelby)",
            "str_fol": "\u00acresist_damage(Shelby)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Shelby",
            "text": "Shelby does not have a good crew.",
            "fol": "\u00acp_2(Shelby)",
            "str_fol": "\u00achave_good_crew(Shelby)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Shelby",
            "text": "Shelby navigates treacherous waters.",
            "fol": "p_3(Shelby)",
            "str_fol": "navigate_treacherous_waters(Shelby)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Shelby",
            "text": "Shelby is not reliable.",
            "fol": "\u00acp_4(Shelby)",
            "str_fol": "\u00acis_reliable(Shelby)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Shelby",
            "text": "Shelby does not avoid wrecks.",
            "fol": "\u00acp_12(Shelby)",
            "str_fol": "\u00acavoid_wrecks(Shelby)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Shelby",
            "text": "Shelby does not earn a good reputation.",
            "fol": "\u00acp_7(Shelby)",
            "str_fol": "\u00acearn_reputation(Shelby)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Shelby",
            "text": "Shelby cannot ride out a tempest.",
            "fol": "\u00acp_11(Shelby)",
            "str_fol": "\u00acride_out_tempest(Shelby)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Shelby",
            "text": "Shelby does not have a robust design.",
            "fol": "\u00acp_8(Shelby)",
            "str_fol": "\u00achave_robust_design(Shelby)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Shelby",
            "text": "Shelby does not have a brave crew.",
            "fol": "\u00acp_9(Shelby)",
            "str_fol": "\u00achave_brave_crew(Shelby)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Shelby",
            "text": "Shelby cannot withstand storms.",
            "fol": "\u00acp_6(Shelby)",
            "str_fol": "\u00acwithstand_storms(Shelby)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Shelby",
            "text": "Shelby is sturdy.",
            "fol": "p_5(Shelby)",
            "str_fol": "sturdy(Shelby)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Shelby",
            "text": "Shelby is not reliable.",
            "fol": "\u00acp_4(Shelby)",
            "str_fol": "\u00acis_reliable(Shelby)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Shelby",
            "text": "Shelby navigates treacherous waters.",
            "fol": "p_3(Shelby)",
            "str_fol": "navigate_treacherous_waters(Shelby)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Shelby",
            "text": "Shelby does not have a good crew.",
            "fol": "\u00acp_2(Shelby)",
            "str_fol": "\u00achave_good_crew(Shelby)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Shelby",
            "text": "Shelby is not seaworthy.",
            "fol": "\u00acp_0(Shelby)",
            "str_fol": "\u00acis_seaworthy(Shelby)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Shelby",
            "text": "Shelby cannot resist damage.",
            "fol": "\u00acp_1(Shelby)",
            "str_fol": "\u00acresist_damage(Shelby)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "All reliable ships can sail long distances.",
            "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (is_reliable(x) \u2192 sail_long_distance(x))"
        },
        {
            "id": 6,
            "text": "Shelby either avoids wrecks or navigates treacherous waters, but not both, in order to ensure her safety at sea.",
            "fol": "p_12(Shelby) \u2295 p_3(Shelby)",
            "str_fol": "avoid_wrecks(Shelby) \u2295 navigate_treacherous_waters(Shelby)"
        },
        {
            "id": 5,
            "text": "If Shelby sails long distances or earns a reputation, then she has a good crew.",
            "fol": "(p_13(Shelby) \u2228 p_7(Shelby)) \u2192 p_2(Shelby)",
            "str_fol": "(sail_long_distance(Shelby) \u2228 earn_reputation(Shelby)) \u2192 have_good_crew(Shelby)"
        },
        {
            "id": 4,
            "text": "If Shelby either rides out tempests or avoids wrecks (but not both), then she is seaworthy.",
            "fol": "(p_11(Shelby) \u2295 p_12(Shelby)) \u2192 p_0(Shelby)",
            "str_fol": "(ride_out_tempest(Shelby) \u2295 avoid_wrecks(Shelby)) \u2192 is_seaworthy(Shelby)"
        },
        {
            "id": 3,
            "text": "Any ship with a robust design can resist damage.",
            "fol": "\u2200x (p_8(x) \u2192 p_1(x))",
            "str_fol": "\u2200x (have_robust_design(x) \u2192 resist_damage(x))"
        },
        {
            "id": 2,
            "text": "Any ship with a brave crew or that stays on course can ride out a tempest.",
            "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((have_brave_crew(x) \u2228 stay_on_course(x)) \u2192 ride_out_tempest(x))"
        },
        {
            "id": 1,
            "text": "Any ship that withstands storms either has a robust design or a brave crew (or both).",
            "fol": "\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (withstand_storms(x) \u2192 (have_robust_design(x) \u2228 have_brave_crew(x)))"
        },
        {
            "id": 0,
            "text": "For all ships, if a ship is sturdy, then it can withstand storms and earn a good reputation.",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))",
            "str_fol": "\u2200x (sturdy(x) \u2192 (withstand_storms(x) \u2227 earn_reputation(x)))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Shelby",
            "text": "Shelby is not reliable.",
            "fol": "\u00acp_4(Shelby)",
            "str_fol": "\u00acis_reliable(Shelby)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Shelby",
            "text": "Shelby navigates treacherous waters.",
            "fol": "p_3(Shelby)",
            "str_fol": "navigate_treacherous_waters(Shelby)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Shelby",
            "text": "Shelby does not have a good crew.",
            "fol": "\u00acp_2(Shelby)",
            "str_fol": "\u00achave_good_crew(Shelby)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Shelby",
            "text": "Shelby is not seaworthy.",
            "fol": "\u00acp_0(Shelby)",
            "str_fol": "\u00acis_seaworthy(Shelby)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Shelby",
            "text": "Shelby cannot resist damage.",
            "fol": "\u00acp_1(Shelby)",
            "str_fol": "\u00acresist_damage(Shelby)",
            "negation": true
        },
        {
            "id": 7,
            "text": "All reliable ships can sail long distances.",
            "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (is_reliable(x) \u2192 sail_long_distance(x))"
        },
        {
            "id": 6,
            "text": "Shelby either avoids wrecks or navigates treacherous waters, but not both, in order to ensure her safety at sea.",
            "fol": "p_12(Shelby) \u2295 p_3(Shelby)",
            "str_fol": "avoid_wrecks(Shelby) \u2295 navigate_treacherous_waters(Shelby)"
        },
        {
            "id": 5,
            "text": "If Shelby sails long distances or earns a reputation, then she has a good crew.",
            "fol": "(p_13(Shelby) \u2228 p_7(Shelby)) \u2192 p_2(Shelby)",
            "str_fol": "(sail_long_distance(Shelby) \u2228 earn_reputation(Shelby)) \u2192 have_good_crew(Shelby)"
        },
        {
            "id": 4,
            "text": "If Shelby either rides out tempests or avoids wrecks (but not both), then she is seaworthy.",
            "fol": "(p_11(Shelby) \u2295 p_12(Shelby)) \u2192 p_0(Shelby)",
            "str_fol": "(ride_out_tempest(Shelby) \u2295 avoid_wrecks(Shelby)) \u2192 is_seaworthy(Shelby)"
        },
        {
            "id": 3,
            "text": "Any ship with a robust design can resist damage.",
            "fol": "\u2200x (p_8(x) \u2192 p_1(x))",
            "str_fol": "\u2200x (have_robust_design(x) \u2192 resist_damage(x))"
        },
        {
            "id": 2,
            "text": "Any ship with a brave crew or that stays on course can ride out a tempest.",
            "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((have_brave_crew(x) \u2228 stay_on_course(x)) \u2192 ride_out_tempest(x))"
        },
        {
            "id": 1,
            "text": "Any ship that withstands storms either has a robust design or a brave crew (or both).",
            "fol": "\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (withstand_storms(x) \u2192 (have_robust_design(x) \u2228 have_brave_crew(x)))"
        },
        {
            "id": 0,
            "text": "For all ships, if a ship is sturdy, then it can withstand storms and earn a good reputation.",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))",
            "str_fol": "\u2200x (sturdy(x) \u2192 (withstand_storms(x) \u2227 earn_reputation(x)))"
        }
    ],
    "context_fol": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n(p_13(Shelby) \u2228 p_7(Shelby)) \u2192 p_2(Shelby)\n(p_11(Shelby) \u2295 p_12(Shelby)) \u2192 p_0(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))",
    "conclusion": {
        "id": 11,
        "subject": "Shelby",
        "text": "Shelby is sturdy.",
        "fol": "p_5(Shelby)",
        "str_fol": "sturdy(Shelby)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_5(Shelby)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Shelby",
                    "text": "Shelby is not reliable.",
                    "fol": "\u00acp_4(Shelby)",
                    "str_fol": "\u00acis_reliable(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "All reliable ships can sail long distances.",
                    "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
                    "str_fol": "\u2200x (is_reliable(x) \u2192 sail_long_distance(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Shelby",
                    "text": "Shelby navigates treacherous waters.",
                    "fol": "p_3(Shelby)",
                    "str_fol": "navigate_treacherous_waters(Shelby)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Shelby either avoids wrecks or navigates treacherous waters, but not both, in order to ensure her safety at sea.",
                    "fol": "p_12(Shelby) \u2295 p_3(Shelby)",
                    "str_fol": "avoid_wrecks(Shelby) \u2295 navigate_treacherous_waters(Shelby)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Shelby",
                "text": "Shelby does not avoid wrecks.",
                "fol": "\u00acp_12(Shelby)",
                "str_fol": "\u00acavoid_wrecks(Shelby)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Shelby",
                    "text": "Shelby does not have a good crew.",
                    "fol": "\u00acp_2(Shelby)",
                    "str_fol": "\u00achave_good_crew(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Shelby sails long distances or earns a reputation, then she has a good crew.",
                    "fol": "(p_13(Shelby) \u2228 p_7(Shelby)) \u2192 p_2(Shelby)",
                    "str_fol": "(sail_long_distance(Shelby) \u2228 earn_reputation(Shelby)) \u2192 have_good_crew(Shelby)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Shelby",
                "text": "Shelby does not earn a good reputation.",
                "fol": "\u00acp_7(Shelby)",
                "str_fol": "\u00acearn_reputation(Shelby)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Shelby",
                    "text": "Shelby does not avoid wrecks.",
                    "fol": "\u00acp_12(Shelby)",
                    "str_fol": "\u00acavoid_wrecks(Shelby)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Shelby",
                    "text": "Shelby is not seaworthy.",
                    "fol": "\u00acp_0(Shelby)",
                    "str_fol": "\u00acis_seaworthy(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Shelby either rides out tempests or avoids wrecks (but not both), then she is seaworthy.",
                    "fol": "(p_11(Shelby) \u2295 p_12(Shelby)) \u2192 p_0(Shelby)",
                    "str_fol": "(ride_out_tempest(Shelby) \u2295 avoid_wrecks(Shelby)) \u2192 is_seaworthy(Shelby)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Shelby",
                "text": "Shelby cannot ride out a tempest.",
                "fol": "\u00acp_11(Shelby)",
                "str_fol": "\u00acride_out_tempest(Shelby)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Shelby",
                    "text": "Shelby cannot resist damage.",
                    "fol": "\u00acp_1(Shelby)",
                    "str_fol": "\u00acresist_damage(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Any ship with a robust design can resist damage.",
                    "fol": "\u2200x (p_8(x) \u2192 p_1(x))",
                    "str_fol": "\u2200x (have_robust_design(x) \u2192 resist_damage(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Shelby",
                "text": "Shelby does not have a robust design.",
                "fol": "\u00acp_8(Shelby)",
                "str_fol": "\u00achave_robust_design(Shelby)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Shelby",
                    "text": "Shelby cannot ride out a tempest.",
                    "fol": "\u00acp_11(Shelby)",
                    "str_fol": "\u00acride_out_tempest(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Any ship with a brave crew or that stays on course can ride out a tempest.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((have_brave_crew(x) \u2228 stay_on_course(x)) \u2192 ride_out_tempest(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Shelby",
                "text": "Shelby does not have a brave crew.",
                "fol": "\u00acp_9(Shelby)",
                "str_fol": "\u00achave_brave_crew(Shelby)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Shelby",
                    "text": "Shelby does not have a robust design.",
                    "fol": "\u00acp_8(Shelby)",
                    "str_fol": "\u00achave_robust_design(Shelby)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Shelby",
                    "text": "Shelby does not have a brave crew.",
                    "fol": "\u00acp_9(Shelby)",
                    "str_fol": "\u00achave_brave_crew(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Any ship that withstands storms either has a robust design or a brave crew (or both).",
                    "fol": "\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (withstand_storms(x) \u2192 (have_robust_design(x) \u2228 have_brave_crew(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Shelby",
                "text": "Shelby cannot withstand storms.",
                "fol": "\u00acp_6(Shelby)",
                "str_fol": "\u00acwithstand_storms(Shelby)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Shelby",
                    "text": "Shelby cannot withstand storms.",
                    "fol": "\u00acp_6(Shelby)",
                    "str_fol": "\u00acwithstand_storms(Shelby)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Shelby",
                    "text": "Shelby does not earn a good reputation.",
                    "fol": "\u00acp_7(Shelby)",
                    "str_fol": "\u00acearn_reputation(Shelby)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all ships, if a ship is sturdy, then it can withstand storms and earn a good reputation.",
                    "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))",
                    "str_fol": "\u2200x (sturdy(x) \u2192 (withstand_storms(x) \u2227 earn_reputation(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Shelby",
                "text": "Shelby is sturdy.",
                "fol": "p_5(Shelby)",
                "str_fol": "sturdy(Shelby)",
                "negation": false
            }
        }
    ],
    "proof_trace": "3 p_13(Shelby) | p_7(Shelby) -> p_2(Shelby).  [assumption].\n8 (all x (p_5(x) -> p_6(x) & p_7(x))).  [assumption].\n9 -p_5(Shelby).  [goal].\n14 -p_2(Shelby).  [assumption].\n15 -p_7(Shelby) | p_2(Shelby).  [clausify(3)].\n23 p_5(Shelby).  [deny(9)].\n25 -p_5(x) | p_7(x).  [clausify(8)].\n28 p_7(Shelby).  [resolve(23,a,25,a)].\n29 -p_7(Shelby).  [resolve(15,b,14,a)].\n32 $F.  [resolve(28,a,29,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_3(Shelby) \u2192 p_5(Shelby)",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby)",
                    "p_3(Shelby)",
                    "-p_2(Shelby)",
                    "-p_0(Shelby)",
                    "-p_1(Shelby)",
                    "(all x (p_4(x) -> p_13(x)))",
                    "-(p_12(Shelby) <-> p_3(Shelby))",
                    "(all x (p_8(x) -> p_1(x)))",
                    "(all x (p_9(x) | p_10(x) -> p_11(x)))",
                    "(all x (p_6(x) -> p_8(x) | p_9(x)))",
                    "(all x (p_5(x) -> p_6(x) & p_7(x)))",
                    "p_3(Shelby) -> p_5(Shelby)"
                ],
                "formulas(goals)": [
                    "p_5(Shelby)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_11(Shelby) \u2295 p_12(Shelby)) \u2192 p_0(Shelby)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Shelby) \u2192 p_5(Shelby)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_3(Shelby) \u2192 \u00acp_5(Shelby)",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby)",
                    "p_3(Shelby)",
                    "-p_2(Shelby)",
                    "-p_0(Shelby)",
                    "-p_1(Shelby)",
                    "all x (p_4(x) -> p_13(x))",
                    "-(p_12(Shelby) <-> p_3(Shelby))",
                    "all x (p_8(x) -> p_1(x))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x (p_6(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_5(x) -> (p_6(x) & p_7(x)))",
                    "p_3(Shelby) -> -p_5(Shelby)"
                ],
                "formulas(goals)": [
                    "-p_5(Shelby)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Shelby) \u2192 p_5(Shelby)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Shelby) \u2192 \u00acp_5(Shelby)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_3(Shelby) \u2227 p_5(Shelby)",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby)",
                    "p_3(Shelby)",
                    "-p_2(Shelby)",
                    "-p_0(Shelby)",
                    "-p_1(Shelby)",
                    "all x (p_4(x) -> p_13(x))",
                    "-(p_12(Shelby) <-> p_3(Shelby))",
                    "all x (p_8(x) -> p_1(x))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x (p_6(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_5(x) -> (p_6(x) & p_7(x)))",
                    "p_3(Shelby) & p_5(Shelby)"
                ],
                "formulas(goals)": [
                    "p_5(Shelby)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_3(Shelby) \u2192 \u00acp_5(Shelby)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_3(Shelby) \u2227 p_5(Shelby)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_3(Shelby) \u2192 \u00acp_5(Shelby)",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby)",
                    "p_3(Shelby)",
                    "-p_2(Shelby)",
                    "-p_0(Shelby)",
                    "-p_1(Shelby)",
                    "all x (p_4(x) -> p_13(x))",
                    "-(p_12(Shelby) <-> p_3(Shelby))",
                    "all x (p_8(x) -> p_1(x))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x (p_6(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_5(x) -> (p_6(x) & p_7(x)))",
                    "p_3(Shelby) -> -p_5(Shelby)"
                ],
                "formulas(goals)": [
                    "-p_5(Shelby)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_3(Shelby) \u2227 p_5(Shelby)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Shelby) \u2192 \u00acp_5(Shelby)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\n\u2200x (p_3(x) \u2227 \u00acp_4(x) \u2192 p_5(x))",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby)",
                    "p_3(Shelby)",
                    "-p_2(Shelby)",
                    "-p_0(Shelby)",
                    "-p_1(Shelby)",
                    "all x (p_4(x) -> p_13(x))",
                    "-(p_12(Shelby) <-> p_3(Shelby))",
                    "all x (p_8(x) -> p_1(x))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x (p_6(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_5(x) -> (p_6(x) & p_7(x)))",
                    "all x ((p_3(x) & -p_4(x)) -> p_5(x))"
                ],
                "formulas(goals)": [
                    "p_5(Shelby)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Shelby) \u2192 \u00acp_5(Shelby)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_3(x) \u2227 \u00acp_4(x)) \u2192 p_5(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\np_12(Shelby) \u2295 p_3(Shelby)\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\n\u2200x (p_3(x) \u2192 \u00acp_5(x))",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby)",
                    "p_3(Shelby)",
                    "-p_2(Shelby)",
                    "-p_0(Shelby)",
                    "-p_1(Shelby)",
                    "all x (p_4(x) -> p_13(x))",
                    "-(p_12(Shelby) <-> p_3(Shelby))",
                    "all x (p_8(x) -> p_1(x))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x (p_6(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_5(x) -> (p_6(x) & p_7(x)))",
                    "all x (p_3(x) -> -p_5(x))"
                ],
                "formulas(goals)": [
                    "-p_5(Shelby)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_3(x) \u2227 \u00acp_4(x) \u2192 p_5(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_3(x) \u2192 \u00acp_5(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Shelby)\np_3(Shelby)\n\u00acp_2(Shelby)\n\u00acp_0(Shelby)\n\u00acp_1(Shelby)\n\u2200x (p_4(x) \u2192 p_13(x))\n\u00ac(p_12(Shelby) \u2194 p_3(Shelby))\n\u2200x (p_8(x) \u2192 p_1(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x (p_6(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2227 p_7(x)))\n\u2200x (\u00acp_1(x) \u2192 p_5(x))",
            "Initial Goal": "p_5(Shelby)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Shelby).",
                    "p_3(Shelby).",
                    "-p_2(Shelby).",
                    "-p_0(Shelby).",
                    "-p_1(Shelby).",
                    "all x (p_4(x) -> p_13(x)).",
                    "-(p_12(Shelby) <-> p_3(Shelby)).",
                    "all x (p_8(x) -> p_1(x)).",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x)).",
                    "all x (p_6(x) -> (p_8(x) | p_9(x))).",
                    "all x (p_5(x) -> (p_6(x) & p_7(x))).",
                    "all x (-p_1(x) -> p_5(x))."
                ],
                "formulas(goals)": [
                    "p_5(Shelby)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_3(x) \u2192 \u00acp_5(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_1(x) \u2192 p_5(x))"
                ]
            }
        }
    ]
}