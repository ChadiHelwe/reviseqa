{
    "background_story": "Cameron, a travel enthusiast, had always been fascinated by the rich cultural heritage of India. On his latest adventure, he found himself in Jodhpur, the Blue City, surrounded by majestic forts and palaces. As he wandered through the narrow streets, he stumbled upon a local artisan who taught him the ancient art of block printing. Cameron was captivated by the intricate designs and vibrant colors of the traditional textiles. He spent weeks learning the craft, and soon, his own designs began to flourish. The people of Jodhpur welcomed him with open arms, and he formed lasting bonds with the community. Cameron's experience in Jodhpur not only broadened his cultural understanding but also inspired him to start his own sustainable fashion label, showcasing the beauty of Indian craftsmanship to the world.",
    "predicates": [
        {
            "id": 0,
            "name": "master_artisan"
        },
        {
            "id": 1,
            "name": "is_artistic"
        },
        {
            "id": 2,
            "name": "meet_new_people"
        },
        {
            "id": 3,
            "name": "support_local_art"
        },
        {
            "id": 4,
            "name": "preserve_legacy"
        },
        {
            "id": 5,
            "name": "seeks_adventure"
        },
        {
            "id": 6,
            "name": "loves_diversity"
        },
        {
            "id": 7,
            "name": "gain_knowledge"
        },
        {
            "id": 8,
            "name": "learn_block_printing"
        },
        {
            "id": 9,
            "name": "appreciate_culture"
        },
        {
            "id": 10,
            "name": "create_beautiful_designs"
        },
        {
            "id": 11,
            "name": "respect_tradition"
        },
        {
            "id": 12,
            "name": "value_heritage"
        },
        {
            "id": 13,
            "name": "admire_craftsmanship"
        },
        {
            "id": 14,
            "name": "explore_cities"
        },
        {
            "id": 15,
            "name": "travel_abroad"
        },
        {
            "id": 16,
            "name": "study_history"
        },
        {
            "id": 17,
            "name": "find_inspiration"
        },
        {
            "id": 18,
            "name": "make_unique_items"
        },
        {
            "id": 19,
            "name": "enjoys_textiles"
        },
        {
            "id": 20,
            "name": "likes_handicraft"
        },
        {
            "id": 21,
            "name": "honor_customs"
        },
        {
            "id": 22,
            "name": "embrace_community"
        },
        {
            "id": 23,
            "name": "collect_artifacts"
        },
        {
            "id": 24,
            "name": "study_archaeology"
        },
        {
            "id": 25,
            "name": "seek_experience"
        },
        {
            "id": 26,
            "name": "discover_hidden_gems"
        },
        {
            "id": 27,
            "name": "likes_handmade"
        },
        {
            "id": 28,
            "name": "reads_books"
        }
    ],
    "subject_name": "Cameron",
    "subject_category": "human",
    "keyword": "jodhpur",
    "all_facts": [
        {
            "id": 0,
            "subject": "Cameron",
            "text": "Cameron is not a master artisan.",
            "fol": "\u00acp_0(Cameron)",
            "str_fol": "\u00acmaster_artisan(Cameron)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Cameron",
            "text": "Cameron is artistic.",
            "fol": "p_1(Cameron)",
            "str_fol": "is_artistic(Cameron)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Cameron",
            "text": "Cameron does not meet new people when he travels abroad.",
            "fol": "\u00acp_2(Cameron)",
            "str_fol": "\u00acmeet_new_people(Cameron)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Cameron",
            "text": "Cameron does not support local art.",
            "fol": "\u00acp_3(Cameron)",
            "str_fol": "\u00acsupport_local_art(Cameron)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Cameron",
            "text": "Cameron preserves legacy.",
            "fol": "p_4(Cameron)",
            "str_fol": "preserve_legacy(Cameron)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Cameron",
            "text": "Cameron seeks adventure.",
            "fol": "p_5(Cameron)",
            "str_fol": "seeks_adventure(Cameron)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Cameron",
            "text": "Cameron loves diversity.",
            "fol": "p_6(Cameron)",
            "str_fol": "loves_diversity(Cameron)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Cameron",
            "text": "Cameron does not gain knowledge.",
            "fol": "\u00acp_7(Cameron)",
            "str_fol": "\u00acgain_knowledge(Cameron)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Cameron",
            "text": "Cameron does not study history.",
            "fol": "\u00acp_16(Cameron)",
            "str_fol": "\u00acstudy_history(Cameron)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Cameron",
            "text": "Cameron travels abroad.",
            "fol": "p_15(Cameron)",
            "str_fol": "travel_abroad(Cameron)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Cameron",
            "text": "Cameron explores cities.",
            "fol": "p_14(Cameron)",
            "str_fol": "explore_cities(Cameron)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Cameron",
            "text": "Cameron values heritage.",
            "fol": "p_12(Cameron)",
            "str_fol": "value_heritage(Cameron)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Cameron",
            "text": "Cameron respects tradition.",
            "fol": "p_11(Cameron)",
            "str_fol": "respect_tradition(Cameron)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Cameron",
            "text": "Cameron learns block printing.",
            "fol": "p_8(Cameron)",
            "str_fol": "learn_block_printing(Cameron)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Cameron",
            "text": "Cameron can create beautiful designs.",
            "fol": "p_10(Cameron)",
            "str_fol": "create_beautiful_designs(Cameron)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Cameron",
            "text": "Cameron appreciates the culture.",
            "fol": "p_9(Cameron)",
            "str_fol": "appreciate_culture(Cameron)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Cameron",
            "text": "Cameron does not gain knowledge.",
            "fol": "\u00acp_7(Cameron)",
            "str_fol": "\u00acgain_knowledge(Cameron)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Cameron",
            "text": "Cameron seeks adventure.",
            "fol": "p_5(Cameron)",
            "str_fol": "seeks_adventure(Cameron)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Cameron",
            "text": "Cameron loves diversity.",
            "fol": "p_6(Cameron)",
            "str_fol": "loves_diversity(Cameron)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Cameron",
            "text": "Cameron preserves legacy.",
            "fol": "p_4(Cameron)",
            "str_fol": "preserve_legacy(Cameron)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Cameron",
            "text": "Cameron does not meet new people when he travels abroad.",
            "fol": "\u00acp_2(Cameron)",
            "str_fol": "\u00acmeet_new_people(Cameron)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Cameron",
            "text": "Cameron does not support local art.",
            "fol": "\u00acp_3(Cameron)",
            "str_fol": "\u00acsupport_local_art(Cameron)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Cameron",
            "text": "Cameron is artistic.",
            "fol": "p_1(Cameron)",
            "str_fol": "is_artistic(Cameron)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Cameron",
            "text": "Cameron is not a master artisan.",
            "fol": "\u00acp_0(Cameron)",
            "str_fol": "\u00acmaster_artisan(Cameron)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If someone studies history, then they will gain knowledge.",
            "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
            "str_fol": "\u2200x (study_history(x) \u2192 gain_knowledge(x))"
        },
        {
            "id": 7,
            "text": "If Cameron seeks adventure and loves diversity, then he travels abroad.",
            "fol": "(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)",
            "str_fol": "(seeks_adventure(Cameron) \u2227 loves_diversity(Cameron)) \u2192 travel_abroad(Cameron)"
        },
        {
            "id": 6,
            "text": "If Cameron studies history or admires craftsmanship, then he will preserve legacy.",
            "fol": "(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)",
            "str_fol": "(study_history(Cameron) \u2228 admire_craftsmanship(Cameron)) \u2192 preserve_legacy(Cameron)"
        },
        {
            "id": 5,
            "text": "If Cameron travels abroad, then he either meets new people or explores cities, but not both.",
            "fol": "p_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))",
            "str_fol": "travel_abroad(Cameron) \u2192 (meet_new_people(Cameron) \u2295 explore_cities(Cameron))"
        },
        {
            "id": 4,
            "text": "If Cameron explores cities, then he either supports local art or values heritage.",
            "fol": "p_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))",
            "str_fol": "explore_cities(Cameron) \u2192 (support_local_art(Cameron) \u2228 value_heritage(Cameron))"
        },
        {
            "id": 3,
            "text": "If someone values heritage, then they respect tradition and admire craftsmanship.",
            "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))",
            "str_fol": "\u2200x (value_heritage(x) \u2192 (respect_tradition(x) \u2227 admire_craftsmanship(x)))"
        },
        {
            "id": 2,
            "text": "If Cameron is artistic, then he either learns block printing or becomes a master artisan, but not both.",
            "fol": "p_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))",
            "str_fol": "is_artistic(Cameron) \u2192 (learn_block_printing(Cameron) \u2295 master_artisan(Cameron))"
        },
        {
            "id": 1,
            "text": "If Cameron respects tradition, then he can create beautiful designs.",
            "fol": "p_11(Cameron) \u2192 p_10(Cameron)",
            "str_fol": "respect_tradition(Cameron) \u2192 create_beautiful_designs(Cameron)"
        },
        {
            "id": 0,
            "text": "For all humans, if they learn block printing and appreciate the culture, then they can create beautiful designs.",
            "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((learn_block_printing(x) \u2227 appreciate_culture(x)) \u2192 create_beautiful_designs(x))"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Cameron",
            "text": "Cameron does not gain knowledge.",
            "fol": "\u00acp_7(Cameron)",
            "str_fol": "\u00acgain_knowledge(Cameron)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Cameron",
            "text": "Cameron seeks adventure.",
            "fol": "p_5(Cameron)",
            "str_fol": "seeks_adventure(Cameron)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Cameron",
            "text": "Cameron loves diversity.",
            "fol": "p_6(Cameron)",
            "str_fol": "loves_diversity(Cameron)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Cameron",
            "text": "Cameron preserves legacy.",
            "fol": "p_4(Cameron)",
            "str_fol": "preserve_legacy(Cameron)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Cameron",
            "text": "Cameron does not meet new people when he travels abroad.",
            "fol": "\u00acp_2(Cameron)",
            "str_fol": "\u00acmeet_new_people(Cameron)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Cameron",
            "text": "Cameron does not support local art.",
            "fol": "\u00acp_3(Cameron)",
            "str_fol": "\u00acsupport_local_art(Cameron)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Cameron",
            "text": "Cameron is artistic.",
            "fol": "p_1(Cameron)",
            "str_fol": "is_artistic(Cameron)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Cameron",
            "text": "Cameron is not a master artisan.",
            "fol": "\u00acp_0(Cameron)",
            "str_fol": "\u00acmaster_artisan(Cameron)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If someone studies history, then they will gain knowledge.",
            "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
            "str_fol": "\u2200x (study_history(x) \u2192 gain_knowledge(x))"
        },
        {
            "id": 7,
            "text": "If Cameron seeks adventure and loves diversity, then he travels abroad.",
            "fol": "(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)",
            "str_fol": "(seeks_adventure(Cameron) \u2227 loves_diversity(Cameron)) \u2192 travel_abroad(Cameron)"
        },
        {
            "id": 6,
            "text": "If Cameron studies history or admires craftsmanship, then he will preserve legacy.",
            "fol": "(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)",
            "str_fol": "(study_history(Cameron) \u2228 admire_craftsmanship(Cameron)) \u2192 preserve_legacy(Cameron)"
        },
        {
            "id": 5,
            "text": "If Cameron travels abroad, then he either meets new people or explores cities, but not both.",
            "fol": "p_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))",
            "str_fol": "travel_abroad(Cameron) \u2192 (meet_new_people(Cameron) \u2295 explore_cities(Cameron))"
        },
        {
            "id": 4,
            "text": "If Cameron explores cities, then he either supports local art or values heritage.",
            "fol": "p_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))",
            "str_fol": "explore_cities(Cameron) \u2192 (support_local_art(Cameron) \u2228 value_heritage(Cameron))"
        },
        {
            "id": 3,
            "text": "If someone values heritage, then they respect tradition and admire craftsmanship.",
            "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))",
            "str_fol": "\u2200x (value_heritage(x) \u2192 (respect_tradition(x) \u2227 admire_craftsmanship(x)))"
        },
        {
            "id": 2,
            "text": "If Cameron is artistic, then he either learns block printing or becomes a master artisan, but not both.",
            "fol": "p_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))",
            "str_fol": "is_artistic(Cameron) \u2192 (learn_block_printing(Cameron) \u2295 master_artisan(Cameron))"
        },
        {
            "id": 1,
            "text": "If Cameron respects tradition, then he can create beautiful designs.",
            "fol": "p_11(Cameron) \u2192 p_10(Cameron)",
            "str_fol": "respect_tradition(Cameron) \u2192 create_beautiful_designs(Cameron)"
        },
        {
            "id": 0,
            "text": "For all humans, if they learn block printing and appreciate the culture, then they can create beautiful designs.",
            "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((learn_block_printing(x) \u2227 appreciate_culture(x)) \u2192 create_beautiful_designs(x))"
        }
    ],
    "context_fol": "\u00acp_7(Cameron)\np_5(Cameron)\np_6(Cameron)\np_4(Cameron)\n\u00acp_2(Cameron)\n\u00acp_3(Cameron)\np_1(Cameron)\n\u00acp_0(Cameron)\n\u2200x (p_16(x) \u2192 p_7(x))\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)\np_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))\np_11(Cameron) \u2192 p_10(Cameron)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))",
    "conclusion": {
        "id": 15,
        "subject": "Cameron",
        "text": "Cameron appreciates the culture.",
        "fol": "p_9(Cameron)",
        "str_fol": "appreciate_culture(Cameron)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_9(Cameron)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Cameron",
                    "text": "Cameron does not gain knowledge.",
                    "fol": "\u00acp_7(Cameron)",
                    "str_fol": "\u00acgain_knowledge(Cameron)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If someone studies history, then they will gain knowledge.",
                    "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
                    "str_fol": "\u2200x (study_history(x) \u2192 gain_knowledge(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Cameron",
                "text": "Cameron does not study history.",
                "fol": "\u00acp_16(Cameron)",
                "str_fol": "\u00acstudy_history(Cameron)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Cameron",
                    "text": "Cameron seeks adventure.",
                    "fol": "p_5(Cameron)",
                    "str_fol": "seeks_adventure(Cameron)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Cameron",
                    "text": "Cameron loves diversity.",
                    "fol": "p_6(Cameron)",
                    "str_fol": "loves_diversity(Cameron)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Cameron seeks adventure and loves diversity, then he travels abroad.",
                    "fol": "(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)",
                    "str_fol": "(seeks_adventure(Cameron) \u2227 loves_diversity(Cameron)) \u2192 travel_abroad(Cameron)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Cameron",
                "text": "Cameron travels abroad.",
                "fol": "p_15(Cameron)",
                "str_fol": "travel_abroad(Cameron)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Cameron",
                    "text": "Cameron does not study history.",
                    "fol": "\u00acp_16(Cameron)",
                    "str_fol": "\u00acstudy_history(Cameron)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Cameron",
                    "text": "Cameron preserves legacy.",
                    "fol": "p_4(Cameron)",
                    "str_fol": "preserve_legacy(Cameron)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Cameron studies history or admires craftsmanship, then he will preserve legacy.",
                    "fol": "(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)",
                    "str_fol": "(study_history(Cameron) \u2228 admire_craftsmanship(Cameron)) \u2192 preserve_legacy(Cameron)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Cameron",
                    "text": "Cameron travels abroad.",
                    "fol": "p_15(Cameron)",
                    "str_fol": "travel_abroad(Cameron)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Cameron",
                    "text": "Cameron does not meet new people when he travels abroad.",
                    "fol": "\u00acp_2(Cameron)",
                    "str_fol": "\u00acmeet_new_people(Cameron)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Cameron travels abroad, then he either meets new people or explores cities, but not both.",
                    "fol": "p_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))",
                    "str_fol": "travel_abroad(Cameron) \u2192 (meet_new_people(Cameron) \u2295 explore_cities(Cameron))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Cameron",
                "text": "Cameron explores cities.",
                "fol": "p_14(Cameron)",
                "str_fol": "explore_cities(Cameron)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Cameron",
                    "text": "Cameron explores cities.",
                    "fol": "p_14(Cameron)",
                    "str_fol": "explore_cities(Cameron)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Cameron",
                    "text": "Cameron does not support local art.",
                    "fol": "\u00acp_3(Cameron)",
                    "str_fol": "\u00acsupport_local_art(Cameron)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Cameron explores cities, then he either supports local art or values heritage.",
                    "fol": "p_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))",
                    "str_fol": "explore_cities(Cameron) \u2192 (support_local_art(Cameron) \u2228 value_heritage(Cameron))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Cameron",
                "text": "Cameron values heritage.",
                "fol": "p_12(Cameron)",
                "str_fol": "value_heritage(Cameron)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Cameron",
                    "text": "Cameron values heritage.",
                    "fol": "p_12(Cameron)",
                    "str_fol": "value_heritage(Cameron)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone values heritage, then they respect tradition and admire craftsmanship.",
                    "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))",
                    "str_fol": "\u2200x (value_heritage(x) \u2192 (respect_tradition(x) \u2227 admire_craftsmanship(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Cameron",
                "text": "Cameron respects tradition.",
                "fol": "p_11(Cameron)",
                "str_fol": "respect_tradition(Cameron)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Cameron",
                    "text": "Cameron is artistic.",
                    "fol": "p_1(Cameron)",
                    "str_fol": "is_artistic(Cameron)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Cameron",
                    "text": "Cameron is not a master artisan.",
                    "fol": "\u00acp_0(Cameron)",
                    "str_fol": "\u00acmaster_artisan(Cameron)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Cameron is artistic, then he either learns block printing or becomes a master artisan, but not both.",
                    "fol": "p_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))",
                    "str_fol": "is_artistic(Cameron) \u2192 (learn_block_printing(Cameron) \u2295 master_artisan(Cameron))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Cameron",
                "text": "Cameron learns block printing.",
                "fol": "p_8(Cameron)",
                "str_fol": "learn_block_printing(Cameron)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Cameron",
                    "text": "Cameron respects tradition.",
                    "fol": "p_11(Cameron)",
                    "str_fol": "respect_tradition(Cameron)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Cameron respects tradition, then he can create beautiful designs.",
                    "fol": "p_11(Cameron) \u2192 p_10(Cameron)",
                    "str_fol": "respect_tradition(Cameron) \u2192 create_beautiful_designs(Cameron)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Cameron",
                "text": "Cameron can create beautiful designs.",
                "fol": "p_10(Cameron)",
                "str_fol": "create_beautiful_designs(Cameron)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Cameron",
                    "text": "Cameron learns block printing.",
                    "fol": "p_8(Cameron)",
                    "str_fol": "learn_block_printing(Cameron)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Cameron",
                    "text": "Cameron can create beautiful designs.",
                    "fol": "p_10(Cameron)",
                    "str_fol": "create_beautiful_designs(Cameron)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they learn block printing and appreciate the culture, then they can create beautiful designs.",
                    "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((learn_block_printing(x) \u2227 appreciate_culture(x)) \u2192 create_beautiful_designs(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_7(Cameron)\np_5(Cameron)\np_6(Cameron)\np_4(Cameron)\n\u00acp_2(Cameron)\n\u00acp_3(Cameron)\np_1(Cameron)\n\u00acp_0(Cameron)\n\u2200x (p_16(x) \u2192 p_7(x))\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)\np_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))\np_11(Cameron) \u2192 p_10(Cameron)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron)",
                    "p_5(Cameron)",
                    "p_6(Cameron)",
                    "p_4(Cameron)",
                    "-p_2(Cameron)",
                    "-p_3(Cameron)",
                    "p_1(Cameron)",
                    "-p_0(Cameron)",
                    "all x (p_16(x) -> p_7(x))",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron)",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron)",
                    "p_15(Cameron) -> (-(p_2(Cameron) <-> p_14(Cameron)))",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron))",
                    "all x (p_12(x) -> (p_11(x) & p_13(x)))",
                    "p_1(Cameron) -> (-(p_8(Cameron) <-> p_0(Cameron)))",
                    "p_11(Cameron) -> p_10(Cameron)",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x))",
                    "p_8(Cameron) -> p_9(Cameron)"
                ],
                "formulas(goals)": [
                    "p_9(Cameron)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Cameron) \u2192 p_9(Cameron)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Cameron)\np_5(Cameron)\np_6(Cameron)\np_4(Cameron)\n\u00acp_2(Cameron)\n\u00acp_3(Cameron)\np_1(Cameron)\n\u00acp_0(Cameron)\n\u2200x (p_16(x) \u2192 p_7(x))\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)\np_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_13(x))\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))\np_11(Cameron) \u2192 p_10(Cameron)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))\n\u00acp_16(Cameron)\np_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron))",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron)",
                    "p_5(Cameron)",
                    "p_6(Cameron)",
                    "p_4(Cameron)",
                    "-p_2(Cameron)",
                    "-p_3(Cameron)",
                    "p_1(Cameron)",
                    "-p_0(Cameron)",
                    "all x (p_16(x) -> p_7(x))",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron)",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron)",
                    "p_15(Cameron) -> (-(p_2(Cameron) <-> p_14(Cameron)))",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron))",
                    "all x (p_12(x) -> p_11(x))",
                    "all x (p_12(x) -> p_13(x))",
                    "p_1(Cameron) -> (-(p_8(Cameron) <-> p_0(Cameron)))",
                    "p_11(Cameron) -> p_10(Cameron)",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x))",
                    "-p_16(Cameron)",
                    "p_8(Cameron) -> (p_0(Cameron) | p_9(Cameron))"
                ],
                "formulas(goals)": [
                    "p_9(Cameron)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))"
                ],
                "added_facts": [
                    "\u00acp_16(Cameron)"
                ],
                "added_rules": [
                    "\u2200x (p_12(x) \u2192 p_11(x))",
                    "\u2200x (p_12(x) \u2192 p_13(x))",
                    "p_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Cameron)\np_5(Cameron)\np_6(Cameron)\np_4(Cameron)\n\u00acp_2(Cameron)\n\u00acp_3(Cameron)\np_1(Cameron)\n\u00acp_0(Cameron)\n\u2200x (p_16(x) \u2192 p_7(x))\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)\np_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron))\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_13(x))\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))\np_11(Cameron) \u2192 p_10(Cameron)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))\n\u00acp_16(Cameron)\np_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron))\n\u00acp_8(Cameron) \u2228 p_0(Cameron) \u2228 p_9(Cameron)\n\u00acp_5(Cameron) \u2228 \u00acp_6(Cameron) \u2228 p_15(Cameron)\n\u00acp_14(Cameron) \u2228 p_3(Cameron) \u2228 p_12(Cameron)",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron).",
                    "p_5(Cameron).",
                    "p_6(Cameron).",
                    "p_4(Cameron).",
                    "-p_2(Cameron).",
                    "-p_3(Cameron).",
                    "p_1(Cameron).",
                    "-p_0(Cameron).",
                    "all x (p_16(x) -> p_7(x)).",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron).",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron).",
                    "p_15(Cameron) -> (-(p_2(Cameron) <-> p_14(Cameron))).",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron)).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_13(x)).",
                    "p_1(Cameron) -> (-(p_8(Cameron) <-> p_0(Cameron))).",
                    "p_11(Cameron) -> p_10(Cameron).",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x)).",
                    "-p_16(Cameron).",
                    "p_8(Cameron) -> (p_0(Cameron) | p_9(Cameron)).",
                    "-p_8(Cameron) | p_0(Cameron) | p_9(Cameron).",
                    "-p_5(Cameron) | -p_6(Cameron) | p_15(Cameron).",
                    "-p_14(Cameron) | p_3(Cameron) | p_12(Cameron)."
                ],
                "formulas(goals)": [
                    "p_9(Cameron)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_8(Cameron) \u2228 p_0(Cameron) \u2228 p_9(Cameron)",
                    "\u00acp_5(Cameron) \u2228 \u00acp_6(Cameron) \u2228 p_15(Cameron)",
                    "\u00acp_14(Cameron) \u2228 p_3(Cameron) \u2228 p_12(Cameron)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Cameron).\np_5(Cameron).\np_6(Cameron).\np_4(Cameron).\n\u00acp_2(Cameron).\n\u00acp_3(Cameron).\np_1(Cameron).\n\u00acp_0(Cameron).\n\u2200x (p_16(x) \u2192 p_7(x)).\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron).\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron).\np_15(Cameron) \u2192 (p_2(Cameron) \u2295 p_14(Cameron)).\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron)).\n\u2200x (p_12(x) \u2192 p_11(x)).\n\u2200x (p_12(x) \u2192 p_13(x)).\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron)).\np_11(Cameron) \u2192 p_10(Cameron).\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x)).\n\u00acp_16(Cameron).\np_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron)).\n\u00acp_8(Cameron) \u2228 p_0(Cameron) \u2228 p_9(Cameron).\n\u00acp_5(Cameron) \u2228 \u00acp_6(Cameron) \u2228 p_15(Cameron).\n\u00acp_14(Cameron) \u2228 p_3(Cameron) \u2228 p_12(Cameron).\np_8(Cameron).\n(p_8(Cameron) \u2227 \u00acp_0(Cameron)) \u2192 p_9(Cameron).\np_9(Cameron).",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron).",
                    "p_5(Cameron).",
                    "p_6(Cameron).",
                    "p_4(Cameron).",
                    "-p_2(Cameron).",
                    "-p_3(Cameron).",
                    "p_1(Cameron).",
                    "-p_0(Cameron).",
                    "all x (p_16(x) -> p_7(x)).",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron).",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron).",
                    "p_15(Cameron) -> (-(p_2(Cameron) <-> p_14(Cameron))).",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron)).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_13(x)).",
                    "p_1(Cameron) -> (-(p_8(Cameron) <-> p_0(Cameron))).",
                    "p_11(Cameron) -> p_10(Cameron).",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x)).",
                    "-p_16(Cameron).",
                    "p_8(Cameron) -> (p_0(Cameron) | p_9(Cameron)).",
                    "(-p_8(Cameron)) | p_0(Cameron) | p_9(Cameron).",
                    "(-p_5(Cameron)) | (-p_6(Cameron)) | p_15(Cameron).",
                    "(-p_14(Cameron)) | p_3(Cameron) | p_12(Cameron).",
                    "p_8(Cameron).",
                    "(p_8(Cameron) & -p_0(Cameron)) -> p_9(Cameron).",
                    "p_9(Cameron)."
                ],
                "formulas(goals)": [
                    "p_9(Cameron)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Cameron)",
                    "p_9(Cameron)"
                ],
                "added_rules": [
                    "(p_8(Cameron) \u2227 \u00acp_0(Cameron)) \u2192 p_9(Cameron)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Cameron).\np_5(Cameron).\np_6(Cameron).\np_4(Cameron).\n\u00acp_2(Cameron).\n\u00acp_3(Cameron).\np_1(Cameron).\n\u00acp_0(Cameron).\n\u2200x (p_16(x) \u2192 p_7(x)).\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron).\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron).\np_15(Cameron) \u2192 ((p_2(Cameron) \u2227 \u00acp_14(Cameron)) \u2228 (\u00acp_2(Cameron) \u2227 p_14(Cameron))).\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron)).\n\u2200x (p_12(x) \u2192 p_11(x)).\n\u2200x (p_12(x) \u2192 p_13(x)).\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron)).\np_11(Cameron) \u2192 p_10(Cameron).\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x)).\n\u00acp_16(Cameron).\np_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron)).\n\u00acp_8(Cameron) \u2228 p_0(Cameron) \u2228 p_9(Cameron).\n\u00acp_5(Cameron) \u2228 \u00acp_6(Cameron) \u2228 p_15(Cameron).\n\u00acp_14(Cameron) \u2228 p_3(Cameron) \u2228 p_12(Cameron).\np_8(Cameron).\np_8(Cameron) \u2192 (\u00acp_0(Cameron) \u2192 p_9(Cameron)).\np_9(Cameron).\np_10(Cameron).\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x))).",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron).",
                    "p_5(Cameron).",
                    "p_6(Cameron).",
                    "p_4(Cameron).",
                    "-p_2(Cameron).",
                    "-p_3(Cameron).",
                    "p_1(Cameron).",
                    "-p_0(Cameron).",
                    "all x (p_16(x) -> p_7(x)).",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron).",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron).",
                    "p_15(Cameron) -> ((p_2(Cameron) & -p_14(Cameron)) | (-p_2(Cameron) & p_14(Cameron))).",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron)).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_13(x)).",
                    "p_1(Cameron) -> (-(p_8(Cameron) <-> p_0(Cameron))).",
                    "p_11(Cameron) -> p_10(Cameron).",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x)).",
                    "-p_16(Cameron).",
                    "p_8(Cameron) -> (p_0(Cameron) | p_9(Cameron)).",
                    "(-p_8(Cameron)) | p_0(Cameron) | p_9(Cameron).",
                    "(-p_5(Cameron)) | (-p_6(Cameron)) | p_15(Cameron).",
                    "(-p_14(Cameron)) | p_3(Cameron) | p_12(Cameron).",
                    "p_8(Cameron).",
                    "p_8(Cameron) -> (-p_0(Cameron) -> p_9(Cameron)).",
                    "p_9(Cameron).",
                    "p_10(Cameron).",
                    "all x (p_12(x) -> (p_11(x) & p_13(x)))."
                ],
                "formulas(goals)": [
                    "p_9(Cameron)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_8(Cameron) \u2227 \u00acp_0(Cameron)) \u2192 p_9(Cameron)"
                ],
                "added_facts": [
                    "p_10(Cameron)"
                ],
                "added_rules": [
                    "p_15(Cameron) \u2192 ((p_2(Cameron) \u2227 \u00acp_14(Cameron)) \u2228 (\u00acp_2(Cameron) \u2227 p_14(Cameron)))",
                    "p_8(Cameron) \u2192 (\u00acp_0(Cameron) \u2192 p_9(Cameron))",
                    "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Cameron)\np_5(Cameron)\np_6(Cameron)\np_4(Cameron)\n\u00acp_2(Cameron)\n\u00acp_3(Cameron)\np_1(Cameron)\n\u00acp_0(Cameron)\n\u2200x (p_16(x) \u2192 p_7(x))\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)\np_15(Cameron) \u2192 ((p_2(Cameron) \u2227 \u00acp_14(Cameron)) \u2228 (\u00acp_2(Cameron) \u2227 p_14(Cameron)))\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_13(x))\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))\np_11(Cameron) \u2192 p_10(Cameron)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))\n\u00acp_16(Cameron)\np_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron))\n\u00acp_8(Cameron) \u2228 p_0(Cameron) \u2228 p_9(Cameron)\n\u00acp_5(Cameron) \u2228 \u00acp_6(Cameron) \u2228 p_15(Cameron)\n\u00acp_14(Cameron) \u2228 p_3(Cameron) \u2228 p_12(Cameron)\np_8(Cameron)\np_8(Cameron) \u2192 (\u00acp_0(Cameron) \u2192 p_9(Cameron))\np_9(Cameron)\np_10(Cameron)\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))\n\u00acp_15(Cameron) \u2228 p_2(Cameron) \u2228 p_14(Cameron)\n\u00acp_15(Cameron) \u2228 \u00acp_2(Cameron) \u2228 \u00acp_14(Cameron)",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron).",
                    "p_5(Cameron).",
                    "p_6(Cameron).",
                    "p_4(Cameron).",
                    "-p_2(Cameron).",
                    "-p_3(Cameron).",
                    "p_1(Cameron).",
                    "-p_0(Cameron).",
                    "all x (p_16(x) -> p_7(x)).",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron).",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron).",
                    "p_15(Cameron) -> ((p_2(Cameron) & -p_14(Cameron)) | (-p_2(Cameron) & p_14(Cameron))).",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron)).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_13(x)).",
                    "p_1(Cameron) -> -(p_8(Cameron) <-> p_0(Cameron)).",
                    "p_11(Cameron) -> p_10(Cameron).",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x)).",
                    "-p_16(Cameron).",
                    "p_8(Cameron) -> (p_0(Cameron) | p_9(Cameron)).",
                    "-p_8(Cameron) | p_0(Cameron) | p_9(Cameron).",
                    "-p_5(Cameron) | -p_6(Cameron) | p_15(Cameron).",
                    "-p_14(Cameron) | p_3(Cameron) | p_12(Cameron).",
                    "p_8(Cameron).",
                    "p_8(Cameron) -> (-p_0(Cameron) -> p_9(Cameron)).",
                    "p_9(Cameron).",
                    "p_10(Cameron).",
                    "all x (p_12(x) -> (p_11(x) & p_13(x))).",
                    "-p_15(Cameron) | p_2(Cameron) | p_14(Cameron).",
                    "-p_15(Cameron) | -p_2(Cameron) | -p_14(Cameron)."
                ],
                "formulas(goals)": [
                    "p_9(Cameron)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_15(Cameron) \u2228 p_2(Cameron) \u2228 p_14(Cameron)",
                    "\u00acp_15(Cameron) \u2228 \u00acp_2(Cameron) \u2228 \u00acp_14(Cameron)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Cameron)\np_5(Cameron)\np_6(Cameron)\np_4(Cameron)\n\u00acp_2(Cameron)\n\u00acp_3(Cameron)\np_1(Cameron)\n\u00acp_0(Cameron)\n\u2200x (p_16(x) \u2192 p_7(x))\n(p_5(Cameron) \u2227 p_6(Cameron)) \u2192 p_15(Cameron)\n(p_16(Cameron) \u2228 p_13(Cameron)) \u2192 p_4(Cameron)\np_15(Cameron) \u2192 ((p_2(Cameron) \u2227 \u00acp_14(Cameron)) \u2228 (\u00acp_2(Cameron) \u2227 p_14(Cameron)))\np_14(Cameron) \u2192 (p_3(Cameron) \u2228 p_12(Cameron))\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_13(x))\np_1(Cameron) \u2192 (p_8(Cameron) \u2295 p_0(Cameron))\np_11(Cameron) \u2192 p_10(Cameron)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_10(x))\n\u00acp_16(Cameron)\np_8(Cameron) \u2192 (p_0(Cameron) \u2228 p_9(Cameron))\n\u00acp_8(Cameron) \u2228 p_0(Cameron) \u2228 p_9(Cameron)\n\u00acp_5(Cameron) \u2228 \u00acp_6(Cameron) \u2228 p_15(Cameron)\n\u00acp_14(Cameron) \u2228 p_3(Cameron) \u2228 p_12(Cameron)\np_8(Cameron)\np_8(Cameron) \u2192 (\u00acp_0(Cameron) \u2192 p_9(Cameron))\np_9(Cameron)\np_10(Cameron)\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_13(x)))\n\u00acp_15(Cameron) \u2228 p_2(Cameron) \u2228 p_14(Cameron)\n\u00acp_15(Cameron) \u2228 \u00acp_2(Cameron) \u2228 \u00acp_14(Cameron)\np_17(Cameron) \u2228 \u00acp_17(Cameron)",
            "Initial Goal": "p_9(Cameron)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Cameron)",
                    "p_5(Cameron)",
                    "p_6(Cameron)",
                    "p_4(Cameron)",
                    "-p_2(Cameron)",
                    "-p_3(Cameron)",
                    "p_1(Cameron)",
                    "-p_0(Cameron)",
                    "all x (p_16(x) -> p_7(x))",
                    "(p_5(Cameron) & p_6(Cameron)) -> p_15(Cameron)",
                    "(p_16(Cameron) | p_13(Cameron)) -> p_4(Cameron)",
                    "p_15(Cameron) -> ((p_2(Cameron) & -p_14(Cameron)) | (-p_2(Cameron) & p_14(Cameron)))",
                    "p_14(Cameron) -> (p_3(Cameron) | p_12(Cameron))",
                    "all x (p_12(x) -> p_11(x))",
                    "all x (p_12(x) -> p_13(x))",
                    "p_1(Cameron) -> (-(p_8(Cameron) <-> p_0(Cameron)))",
                    "p_11(Cameron) -> p_10(Cameron)",
                    "all x ((p_8(x) & p_9(x)) -> p_10(x))",
                    "-p_16(Cameron)",
                    "p_8(Cameron) -> (p_0(Cameron) | p_9(Cameron))",
                    "-p_8(Cameron) | p_0(Cameron) | p_9(Cameron)",
                    "-p_5(Cameron) | -p_6(Cameron) | p_15(Cameron)",
                    "-p_14(Cameron) | p_3(Cameron) | p_12(Cameron)",
                    "p_8(Cameron)",
                    "p_8(Cameron) -> (-p_0(Cameron) -> p_9(Cameron))",
                    "p_9(Cameron)",
                    "p_10(Cameron)",
                    "all x (p_12(x) -> (p_11(x) & p_13(x)))",
                    "-p_15(Cameron) | p_2(Cameron) | p_14(Cameron)",
                    "-p_15(Cameron) | -p_2(Cameron) | -p_14(Cameron)",
                    "p_17(Cameron) | -p_17(Cameron)"
                ],
                "formulas(goals)": [
                    "p_9(Cameron)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_17(Cameron) \u2228 \u00acp_17(Cameron)"
                ]
            }
        }
    ]
}