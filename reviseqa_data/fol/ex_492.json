{
    "background_story": "Kiara was a miniature pinscher with a big personality. Despite her small size, she had a fearless attitude and a sharp mind. As a pinscher, Kiara was bred to be a guardian and a companion, and she took her job very seriously. She would often stand watch at the front door, alerting her family to any potential threats with a high-pitched bark. But Kiara's tough exterior hid a soft spot for snuggles and playtime. She loved to chase toys and go on long walks with her owner, exploring the neighborhood and making new friends. With her distinctive appearance and lively demeanor, Kiara was a beloved member of the community, and her family cherished her loyal and affectionate nature.",
    "predicates": [
        {
            "id": 0,
            "name": "chases_squirrels"
        },
        {
            "id": 1,
            "name": "guards_home"
        },
        {
            "id": 2,
            "name": "feels_happy"
        },
        {
            "id": 3,
            "name": "receives_treats"
        },
        {
            "id": 4,
            "name": "goes_walking"
        },
        {
            "id": 5,
            "name": "is_loyal"
        },
        {
            "id": 6,
            "name": "is_affectionate"
        },
        {
            "id": 7,
            "name": "makes_good_companion"
        },
        {
            "id": 8,
            "name": "plays_friendly"
        },
        {
            "id": 9,
            "name": "gets_petted"
        },
        {
            "id": 10,
            "name": "wags_tail"
        },
        {
            "id": 11,
            "name": "barks_loud"
        },
        {
            "id": 12,
            "name": "is_playful"
        },
        {
            "id": 13,
            "name": "stands_guard"
        },
        {
            "id": 14,
            "name": "snuggles_owner"
        },
        {
            "id": 15,
            "name": "is_curious"
        },
        {
            "id": 16,
            "name": "runs_fast"
        },
        {
            "id": 17,
            "name": "likes_toy"
        },
        {
            "id": 18,
            "name": "sees_stranger"
        },
        {
            "id": 19,
            "name": "gets_belly_rub"
        },
        {
            "id": 20,
            "name": "loves_toys"
        },
        {
            "id": 21,
            "name": "enjoys_runs"
        }
    ],
    "subject_name": "Kiara",
    "subject_category": "dog",
    "keyword": "pinscher",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kiara",
            "text": "Kiara chases squirrels.",
            "fol": "p_0(Kiara)",
            "str_fol": "chases_squirrels(Kiara)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kiara",
            "text": "Kiara does not guard her home.",
            "fol": "\u00acp_1(Kiara)",
            "str_fol": "\u00acguards_home(Kiara)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kiara",
            "text": "Kiara does not feel happy.",
            "fol": "\u00acp_2(Kiara)",
            "str_fol": "\u00acfeels_happy(Kiara)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kiara",
            "text": "Kiara receives treats.",
            "fol": "p_3(Kiara)",
            "str_fol": "receives_treats(Kiara)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kiara",
            "text": "Kiara does not go for walks.",
            "fol": "\u00acp_4(Kiara)",
            "str_fol": "\u00acgoes_walking(Kiara)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kiara",
            "text": "Kiara is playful.",
            "fol": "p_12(Kiara)",
            "str_fol": "is_playful(Kiara)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kiara",
            "text": "Kiara does not get petted.",
            "fol": "\u00acp_9(Kiara)",
            "str_fol": "\u00acgets_petted(Kiara)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kiara",
            "text": "Kiara barks loud.",
            "fol": "p_11(Kiara)",
            "str_fol": "barks_loud(Kiara)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Kiara",
            "text": "Kiara does not wag her tail.",
            "fol": "\u00acp_10(Kiara)",
            "str_fol": "\u00acwags_tail(Kiara)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Kiara",
            "text": "Kiara is not affectionate.",
            "fol": "\u00acp_6(Kiara)",
            "str_fol": "\u00acis_affectionate(Kiara)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Kiara",
            "text": "Kiara does not play friendly.",
            "fol": "\u00acp_8(Kiara)",
            "str_fol": "\u00acplays_friendly(Kiara)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Kiara",
            "text": "Kiara is loyal.",
            "fol": "p_5(Kiara)",
            "str_fol": "is_loyal(Kiara)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Kiara",
            "text": "Kiara makes a good companion.",
            "fol": "p_7(Kiara)",
            "str_fol": "makes_good_companion(Kiara)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Kiara",
            "text": "Kiara receives treats.",
            "fol": "p_3(Kiara)",
            "str_fol": "receives_treats(Kiara)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kiara",
            "text": "Kiara does not go for walks.",
            "fol": "\u00acp_4(Kiara)",
            "str_fol": "\u00acgoes_walking(Kiara)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kiara",
            "text": "Kiara does not feel happy.",
            "fol": "\u00acp_2(Kiara)",
            "str_fol": "\u00acfeels_happy(Kiara)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kiara",
            "text": "Kiara chases squirrels.",
            "fol": "p_0(Kiara)",
            "str_fol": "chases_squirrels(Kiara)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kiara",
            "text": "Kiara does not guard her home.",
            "fol": "\u00acp_1(Kiara)",
            "str_fol": "\u00acguards_home(Kiara)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Kiara receives treats, then she either goes for walks or is playful (or both).",
            "fol": "p_3(Kiara) \u2192 (p_4(Kiara) \u2228 p_12(Kiara))",
            "str_fol": "receives_treats(Kiara) \u2192 (goes_walking(Kiara) \u2228 is_playful(Kiara))"
        },
        {
            "id": 6,
            "text": "If a dog gets petted and is playful, then it feels happy.",
            "fol": "\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((gets_petted(x) \u2227 is_playful(x)) \u2192 feels_happy(x))"
        },
        {
            "id": 5,
            "text": "If Kiara either chases squirrels or guards her home (but not both), then she barks loud.",
            "fol": "(p_0(Kiara) \u2295 p_1(Kiara)) \u2192 p_11(Kiara)",
            "str_fol": "(chases_squirrels(Kiara) \u2295 guards_home(Kiara)) \u2192 barks_loud(Kiara)"
        },
        {
            "id": 4,
            "text": "For Kiara, either she barks loud or wags her tail, but not both at the same time.",
            "fol": "p_11(Kiara) \u2295 p_10(Kiara)",
            "str_fol": "barks_loud(Kiara) \u2295 wags_tail(Kiara)"
        },
        {
            "id": 3,
            "text": "Every affectionate dog wags its tail.",
            "fol": "\u2200x (p_6(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (is_affectionate(x) \u2192 wags_tail(x))"
        },
        {
            "id": 2,
            "text": "If Kiara plays friendly, then she gets petted.",
            "fol": "p_8(Kiara) \u2192 p_9(Kiara)",
            "str_fol": "plays_friendly(Kiara) \u2192 gets_petted(Kiara)"
        },
        {
            "id": 1,
            "text": "Kiara either plays friendly or is loyal.",
            "fol": "p_8(Kiara) \u2228 p_5(Kiara)",
            "str_fol": "plays_friendly(Kiara) \u2228 is_loyal(Kiara)"
        },
        {
            "id": 0,
            "text": "For all dogs, if they are loyal or affectionate (or both), then they make a good companion.",
            "fol": "\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((is_loyal(x) \u2228 is_affectionate(x)) \u2192 makes_good_companion(x))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Kiara",
            "text": "Kiara receives treats.",
            "fol": "p_3(Kiara)",
            "str_fol": "receives_treats(Kiara)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kiara",
            "text": "Kiara does not go for walks.",
            "fol": "\u00acp_4(Kiara)",
            "str_fol": "\u00acgoes_walking(Kiara)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kiara",
            "text": "Kiara does not feel happy.",
            "fol": "\u00acp_2(Kiara)",
            "str_fol": "\u00acfeels_happy(Kiara)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kiara",
            "text": "Kiara chases squirrels.",
            "fol": "p_0(Kiara)",
            "str_fol": "chases_squirrels(Kiara)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kiara",
            "text": "Kiara does not guard her home.",
            "fol": "\u00acp_1(Kiara)",
            "str_fol": "\u00acguards_home(Kiara)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If Kiara receives treats, then she either goes for walks or is playful (or both).",
            "fol": "p_3(Kiara) \u2192 (p_4(Kiara) \u2228 p_12(Kiara))",
            "str_fol": "receives_treats(Kiara) \u2192 (goes_walking(Kiara) \u2228 is_playful(Kiara))"
        },
        {
            "id": 6,
            "text": "If a dog gets petted and is playful, then it feels happy.",
            "fol": "\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((gets_petted(x) \u2227 is_playful(x)) \u2192 feels_happy(x))"
        },
        {
            "id": 5,
            "text": "If Kiara either chases squirrels or guards her home (but not both), then she barks loud.",
            "fol": "(p_0(Kiara) \u2295 p_1(Kiara)) \u2192 p_11(Kiara)",
            "str_fol": "(chases_squirrels(Kiara) \u2295 guards_home(Kiara)) \u2192 barks_loud(Kiara)"
        },
        {
            "id": 4,
            "text": "For Kiara, either she barks loud or wags her tail, but not both at the same time.",
            "fol": "p_11(Kiara) \u2295 p_10(Kiara)",
            "str_fol": "barks_loud(Kiara) \u2295 wags_tail(Kiara)"
        },
        {
            "id": 3,
            "text": "Every affectionate dog wags its tail.",
            "fol": "\u2200x (p_6(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (is_affectionate(x) \u2192 wags_tail(x))"
        },
        {
            "id": 2,
            "text": "If Kiara plays friendly, then she gets petted.",
            "fol": "p_8(Kiara) \u2192 p_9(Kiara)",
            "str_fol": "plays_friendly(Kiara) \u2192 gets_petted(Kiara)"
        },
        {
            "id": 1,
            "text": "Kiara either plays friendly or is loyal.",
            "fol": "p_8(Kiara) \u2228 p_5(Kiara)",
            "str_fol": "plays_friendly(Kiara) \u2228 is_loyal(Kiara)"
        },
        {
            "id": 0,
            "text": "For all dogs, if they are loyal or affectionate (or both), then they make a good companion.",
            "fol": "\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((is_loyal(x) \u2228 is_affectionate(x)) \u2192 makes_good_companion(x))"
        }
    ],
    "context_fol": "p_3(Kiara)\n\u00acp_4(Kiara)\n\u00acp_2(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\np_3(Kiara) \u2192 (p_4(Kiara) \u2228 p_12(Kiara))\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(p_0(Kiara) \u2295 p_1(Kiara)) \u2192 p_11(Kiara)\np_11(Kiara) \u2295 p_10(Kiara)\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\np_8(Kiara) \u2228 p_5(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))",
    "conclusion": {
        "id": 12,
        "subject": "Kiara",
        "text": "Kiara makes a good companion.",
        "fol": "p_7(Kiara)",
        "str_fol": "makes_good_companion(Kiara)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_7(Kiara)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kiara",
                    "text": "Kiara receives treats.",
                    "fol": "p_3(Kiara)",
                    "str_fol": "receives_treats(Kiara)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Kiara",
                    "text": "Kiara does not go for walks.",
                    "fol": "\u00acp_4(Kiara)",
                    "str_fol": "\u00acgoes_walking(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Kiara receives treats, then she either goes for walks or is playful (or both).",
                    "fol": "p_3(Kiara) \u2192 (p_4(Kiara) \u2228 p_12(Kiara))",
                    "str_fol": "receives_treats(Kiara) \u2192 (goes_walking(Kiara) \u2228 is_playful(Kiara))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kiara",
                "text": "Kiara is playful.",
                "fol": "p_12(Kiara)",
                "str_fol": "is_playful(Kiara)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Kiara",
                    "text": "Kiara is playful.",
                    "fol": "p_12(Kiara)",
                    "str_fol": "is_playful(Kiara)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Kiara",
                    "text": "Kiara does not feel happy.",
                    "fol": "\u00acp_2(Kiara)",
                    "str_fol": "\u00acfeels_happy(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If a dog gets petted and is playful, then it feels happy.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((gets_petted(x) \u2227 is_playful(x)) \u2192 feels_happy(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kiara",
                "text": "Kiara does not get petted.",
                "fol": "\u00acp_9(Kiara)",
                "str_fol": "\u00acgets_petted(Kiara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kiara",
                    "text": "Kiara chases squirrels.",
                    "fol": "p_0(Kiara)",
                    "str_fol": "chases_squirrels(Kiara)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Kiara",
                    "text": "Kiara does not guard her home.",
                    "fol": "\u00acp_1(Kiara)",
                    "str_fol": "\u00acguards_home(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Kiara either chases squirrels or guards her home (but not both), then she barks loud.",
                    "fol": "(p_0(Kiara) \u2295 p_1(Kiara)) \u2192 p_11(Kiara)",
                    "str_fol": "(chases_squirrels(Kiara) \u2295 guards_home(Kiara)) \u2192 barks_loud(Kiara)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kiara",
                "text": "Kiara barks loud.",
                "fol": "p_11(Kiara)",
                "str_fol": "barks_loud(Kiara)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kiara",
                    "text": "Kiara barks loud.",
                    "fol": "p_11(Kiara)",
                    "str_fol": "barks_loud(Kiara)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For Kiara, either she barks loud or wags her tail, but not both at the same time.",
                    "fol": "p_11(Kiara) \u2295 p_10(Kiara)",
                    "str_fol": "barks_loud(Kiara) \u2295 wags_tail(Kiara)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kiara",
                "text": "Kiara does not wag her tail.",
                "fol": "\u00acp_10(Kiara)",
                "str_fol": "\u00acwags_tail(Kiara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Kiara",
                    "text": "Kiara does not wag her tail.",
                    "fol": "\u00acp_10(Kiara)",
                    "str_fol": "\u00acwags_tail(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Every affectionate dog wags its tail.",
                    "fol": "\u2200x (p_6(x) \u2192 p_10(x))",
                    "str_fol": "\u2200x (is_affectionate(x) \u2192 wags_tail(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Kiara",
                "text": "Kiara is not affectionate.",
                "fol": "\u00acp_6(Kiara)",
                "str_fol": "\u00acis_affectionate(Kiara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Kiara",
                    "text": "Kiara does not get petted.",
                    "fol": "\u00acp_9(Kiara)",
                    "str_fol": "\u00acgets_petted(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Kiara plays friendly, then she gets petted.",
                    "fol": "p_8(Kiara) \u2192 p_9(Kiara)",
                    "str_fol": "plays_friendly(Kiara) \u2192 gets_petted(Kiara)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Kiara",
                "text": "Kiara does not play friendly.",
                "fol": "\u00acp_8(Kiara)",
                "str_fol": "\u00acplays_friendly(Kiara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Kiara",
                    "text": "Kiara does not play friendly.",
                    "fol": "\u00acp_8(Kiara)",
                    "str_fol": "\u00acplays_friendly(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Kiara either plays friendly or is loyal.",
                    "fol": "p_8(Kiara) \u2228 p_5(Kiara)",
                    "str_fol": "plays_friendly(Kiara) \u2228 is_loyal(Kiara)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Kiara",
                "text": "Kiara is loyal.",
                "fol": "p_5(Kiara)",
                "str_fol": "is_loyal(Kiara)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Kiara",
                    "text": "Kiara is loyal.",
                    "fol": "p_5(Kiara)",
                    "str_fol": "is_loyal(Kiara)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Kiara",
                    "text": "Kiara is not affectionate.",
                    "fol": "\u00acp_6(Kiara)",
                    "str_fol": "\u00acis_affectionate(Kiara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all dogs, if they are loyal or affectionate (or both), then they make a good companion.",
                    "fol": "\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((is_loyal(x) \u2228 is_affectionate(x)) \u2192 makes_good_companion(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Kiara",
                "text": "Kiara makes a good companion.",
                "fol": "p_7(Kiara)",
                "str_fol": "makes_good_companion(Kiara)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_3(Kiara) -> p_4(Kiara) | p_12(Kiara).  [assumption].\n2 (all x (p_9(x) & p_12(x) -> p_2(x))).  [assumption].\n6 p_8(Kiara) -> p_9(Kiara).  [assumption].\n7 (all x (p_5(x) | p_6(x) -> p_7(x))).  [assumption].\n8 p_7(Kiara).  [goal].\n9 -p_3(Kiara) | p_4(Kiara) | p_12(Kiara).  [clausify(1)].\n10 p_3(Kiara).  [assumption].\n11 p_4(Kiara) | p_12(Kiara).  [resolve(9,a,10,a)].\n12 -p_4(Kiara).  [assumption].\n13 -p_9(x) | -p_12(x) | p_2(x).  [clausify(2)].\n14 -p_2(Kiara).  [assumption].\n23 p_8(Kiara) | p_5(Kiara).  [assumption].\n24 -p_8(Kiara) | p_9(Kiara).  [clausify(6)].\n25 p_5(Kiara) | p_9(Kiara).  [resolve(23,a,24,a)].\n26 -p_5(x) | p_7(x).  [clausify(7)].\n27 p_9(Kiara) | p_7(Kiara).  [resolve(25,a,26,a)].\n28 -p_7(Kiara).  [deny(8)].\n29 -p_9(Kiara) | -p_12(Kiara).  [resolve(13,c,14,a)].\n30 p_12(Kiara).  [resolve(11,a,12,a)].\n31 -p_9(Kiara).  [resolve(29,b,30,a)].\n32 p_9(Kiara).  [resolve(27,b,28,a)].\n33 $F.  [resolve(31,a,32,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kiara)\n\u00acp_4(Kiara)\n\u00acp_2(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\np_3(Kiara) \u2192 (p_4(Kiara) \u2228 p_12(Kiara))\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(\u00ac(p_0(Kiara) \u2194 p_1(Kiara))) \u2192 p_11(Kiara)\n\u00ac(p_11(Kiara) \u2194 p_10(Kiara))\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))\np_8(Kiara)\np_8(Kiara) \u2192 \u00acp_7(Kiara)",
            "Initial Goal": "p_7(Kiara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kiara).",
                    "-p_4(Kiara).",
                    "-p_2(Kiara).",
                    "p_0(Kiara).",
                    "-p_1(Kiara).",
                    "p_3(Kiara) -> (p_4(Kiara) | p_12(Kiara)).",
                    "all x ((p_9(x) & p_12(x)) -> p_2(x)).",
                    "(-(p_0(Kiara) <-> p_1(Kiara))) -> p_11(Kiara).",
                    "-(p_11(Kiara) <-> p_10(Kiara)).",
                    "all x (p_6(x) -> p_10(x)).",
                    "p_8(Kiara) -> p_9(Kiara).",
                    "all x ((p_5(x) | p_6(x)) -> p_7(x)).",
                    "p_8(Kiara).",
                    "p_8(Kiara) -> -p_7(Kiara)."
                ],
                "formulas(goals)": [
                    "-p_7(Kiara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Kiara) \u2228 p_5(Kiara)"
                ],
                "added_facts": [
                    "p_8(Kiara)"
                ],
                "added_rules": [
                    "p_8(Kiara) \u2192 \u00acp_7(Kiara)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Kiara)\n\u00acp_4(Kiara)\n\u00acp_2(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\n(p_3(Kiara) \u2227 \u00acp_4(Kiara)) \u2192 p_12(Kiara)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(\u00ac(p_0(Kiara) \u2194 p_1(Kiara))) \u2192 p_11(Kiara)\n\u00ac(p_11(Kiara) \u2194 p_10(Kiara))\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))\np_8(Kiara)\np_8(Kiara) \u2192 \u00acp_7(Kiara)\np_9(Kiara)\np_11(Kiara)",
            "Initial Goal": "p_7(Kiara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kiara).",
                    "-p_4(Kiara).",
                    "-p_2(Kiara).",
                    "p_0(Kiara).",
                    "-p_1(Kiara).",
                    "(p_3(Kiara) & -p_4(Kiara)) -> p_12(Kiara).",
                    "all x ((p_9(x) & p_12(x)) -> p_2(x)).",
                    "(-(p_0(Kiara) <-> p_1(Kiara))) -> p_11(Kiara).",
                    "-(p_11(Kiara) <-> p_10(Kiara)).",
                    "all x (p_6(x) -> p_10(x)).",
                    "p_8(Kiara) -> p_9(Kiara).",
                    "all x ((p_5(x) | p_6(x)) -> p_7(x)).",
                    "p_8(Kiara).",
                    "p_8(Kiara) -> -p_7(Kiara).",
                    "p_9(Kiara).",
                    "p_11(Kiara)."
                ],
                "formulas(goals)": [
                    "-p_7(Kiara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Kiara) \u2192 (p_4(Kiara) \u2228 p_12(Kiara))"
                ],
                "added_facts": [
                    "p_9(Kiara)",
                    "p_11(Kiara)"
                ],
                "added_rules": [
                    "(p_3(Kiara) \u2227 \u00acp_4(Kiara)) \u2192 p_12(Kiara)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kiara)\n\u00acp_4(Kiara)\n\u00acp_2(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\n(p_3(Kiara) \u2227 \u00acp_4(Kiara)) \u2192 p_12(Kiara)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(\u00ac(p_0(Kiara) \u2194 p_1(Kiara))) \u2192 p_11(Kiara)\n\u00ac(p_11(Kiara) \u2194 p_10(Kiara))\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))\np_8(Kiara)\np_9(Kiara)\np_11(Kiara)\np_6(Kiara)",
            "Initial Goal": "p_7(Kiara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kiara).",
                    "-p_4(Kiara).",
                    "-p_2(Kiara).",
                    "p_0(Kiara).",
                    "-p_1(Kiara).",
                    "(p_3(Kiara) & -p_4(Kiara)) -> p_12(Kiara).",
                    "all x ((p_9(x) & p_12(x)) -> p_2(x)).",
                    "(-(p_0(Kiara) <-> p_1(Kiara))) -> p_11(Kiara).",
                    "-(p_11(Kiara) <-> p_10(Kiara)).",
                    "all x (p_6(x) -> p_10(x)).",
                    "p_8(Kiara) -> p_9(Kiara).",
                    "all x ((p_5(x) | p_6(x)) -> p_7(x)).",
                    "p_8(Kiara).",
                    "p_9(Kiara).",
                    "p_11(Kiara).",
                    "p_6(Kiara)."
                ],
                "formulas(goals)": [
                    "p_7(Kiara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Kiara) \u2192 \u00acp_7(Kiara)"
                ],
                "added_facts": [
                    "p_6(Kiara)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kiara)\n\u00acp_4(Kiara)\n\u00acp_2(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\n(p_3(Kiara) \u2227 \u00acp_4(Kiara)) \u2192 p_12(Kiara)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(\u00ac(p_0(Kiara) \u2194 p_1(Kiara))) \u2192 p_11(Kiara)\n\u00ac(p_11(Kiara) \u2194 p_10(Kiara))\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))\np_8(Kiara)\np_9(Kiara)\np_11(Kiara)\n\u00acp_5(Kiara)",
            "Initial Goal": "p_7(Kiara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kiara).",
                    "-p_4(Kiara).",
                    "-p_2(Kiara).",
                    "p_0(Kiara).",
                    "-p_1(Kiara).",
                    "(p_3(Kiara) & -p_4(Kiara)) -> p_12(Kiara).",
                    "all x ((p_9(x) & p_12(x)) -> p_2(x)).",
                    "(-(p_0(Kiara) <-> p_1(Kiara))) -> p_11(Kiara).",
                    "-(p_11(Kiara) <-> p_10(Kiara)).",
                    "all x (p_6(x) -> p_10(x)).",
                    "p_8(Kiara) -> p_9(Kiara).",
                    "all x ((p_5(x) | p_6(x)) -> p_7(x)).",
                    "p_8(Kiara).",
                    "p_9(Kiara).",
                    "p_11(Kiara).",
                    "-p_5(Kiara)."
                ],
                "formulas(goals)": [
                    "-p_7(Kiara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Kiara)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_5(Kiara)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kiara)\n\u00acp_4(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\n(p_3(Kiara) \u2227 \u00acp_4(Kiara)) \u2192 p_12(Kiara)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(\u00ac(p_0(Kiara) \u2194 p_1(Kiara))) \u2192 p_11(Kiara)\n\u00ac(p_11(Kiara) \u2194 p_10(Kiara))\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))\np_8(Kiara)\np_9(Kiara)\np_11(Kiara)\np_11(Kiara) \u2192 p_5(Kiara)",
            "Initial Goal": "p_7(Kiara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kiara).",
                    "-p_4(Kiara).",
                    "p_0(Kiara).",
                    "-p_1(Kiara).",
                    "(p_3(Kiara) & -p_4(Kiara)) -> p_12(Kiara).",
                    "all x ((p_9(x) & p_12(x)) -> p_2(x)).",
                    "(-(p_0(Kiara) <-> p_1(Kiara))) -> p_11(Kiara).",
                    "-(p_11(Kiara) <-> p_10(Kiara)).",
                    "all x (p_6(x) -> p_10(x)).",
                    "p_8(Kiara) -> p_9(Kiara).",
                    "all x ((p_5(x) | p_6(x)) -> p_7(x)).",
                    "p_8(Kiara).",
                    "p_9(Kiara).",
                    "p_11(Kiara).",
                    "p_11(Kiara) -> p_5(Kiara)."
                ],
                "formulas(goals)": [
                    "p_7(Kiara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_2(Kiara)",
                    "\u00acp_5(Kiara)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Kiara) \u2192 p_5(Kiara)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kiara)\n\u00acp_4(Kiara)\np_0(Kiara)\n\u00acp_1(Kiara)\n(p_3(Kiara) \u2227 \u00acp_4(Kiara)) \u2192 p_12(Kiara)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_2(x))\n(\u00ac(p_0(Kiara) \u2194 p_1(Kiara))) \u2192 p_11(Kiara)\n\u00ac(p_11(Kiara) \u2194 p_10(Kiara))\n\u2200x (p_6(x) \u2192 p_10(x))\np_8(Kiara) \u2192 p_9(Kiara)\n\u2200x ((p_5(x) \u2228 p_6(x)) \u2192 p_7(x))\np_8(Kiara)\np_9(Kiara)\np_11(Kiara)\np_11(Kiara) \u2192 \u00acp_5(Kiara)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_6(x))\np_7(Kiara) \u2192 (p_0(Kiara) \u2194 p_1(Kiara))",
            "Initial Goal": "p_7(Kiara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kiara)",
                    "-p_4(Kiara)",
                    "p_0(Kiara)",
                    "-p_1(Kiara)",
                    "(p_3(Kiara) & -p_4(Kiara)) -> p_12(Kiara)",
                    "all x ((p_9(x) & p_12(x)) -> p_2(x))",
                    "(-(p_0(Kiara) <-> p_1(Kiara))) -> p_11(Kiara)",
                    "-(p_11(Kiara) <-> p_10(Kiara))",
                    "all x (p_6(x) -> p_10(x))",
                    "p_8(Kiara) -> p_9(Kiara)",
                    "all x ((p_5(x) | p_6(x)) -> p_7(x))",
                    "p_8(Kiara)",
                    "p_9(Kiara)",
                    "p_11(Kiara)",
                    "p_11(Kiara) -> -p_5(Kiara)",
                    "all x (-p_10(x) -> -p_6(x))",
                    "p_7(Kiara) -> (p_0(Kiara) <-> p_1(Kiara))"
                ],
                "formulas(goals)": [
                    "-p_7(Kiara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_11(Kiara) \u2192 p_5(Kiara)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_11(Kiara) \u2192 \u00acp_5(Kiara)",
                    "\u2200x (\u00acp_10(x) \u2192 \u00acp_6(x))",
                    "p_7(Kiara) \u2192 (p_0(Kiara) \u2194 p_1(Kiara))"
                ]
            }
        }
    ]
}