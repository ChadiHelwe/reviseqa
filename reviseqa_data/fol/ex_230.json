{
    "background_story": "Ayla was a brilliant and ambitious high school student with a dream to attend Princeton University. She spent countless hours studying, volunteering, and extracurricular activities to make her application stand out. Her hard work paid off when she received the acceptance letter from Princeton, one of the most prestigious universities in the world. As a Princeton student, Ayla excelled in her studies, majoring in economics and minoring in public policy. She was an active member of the Princeton Debate Team and volunteered at a local non-profit organization. After graduating magna cum laude, Ayla went on to work for a top investment firm in New York City, crediting Princeton for providing her with the foundation and network to achieve her goals.",
    "predicates": [
        {
            "id": 0,
            "name": "get_scholarship"
        },
        {
            "id": 1,
            "name": "build_network"
        },
        {
            "id": 2,
            "name": "pursue_passion"
        },
        {
            "id": 3,
            "name": "earn_recognition"
        },
        {
            "id": 4,
            "name": "develop_skills"
        },
        {
            "id": 5,
            "name": "make_plans"
        },
        {
            "id": 6,
            "name": "work_hard"
        },
        {
            "id": 7,
            "name": "attend_Princeton"
        },
        {
            "id": 8,
            "name": "achieve_success"
        },
        {
            "id": 9,
            "name": "land_dream_job"
        },
        {
            "id": 10,
            "name": "gain_experience"
        },
        {
            "id": 11,
            "name": "set_goals"
        },
        {
            "id": 12,
            "name": "plan_future"
        },
        {
            "id": 13,
            "name": "sets_goals"
        },
        {
            "id": 14,
            "name": "excel_academics"
        },
        {
            "id": 15,
            "name": "gain_practical_knowledge"
        },
        {
            "id": 16,
            "name": "take_initiative"
        },
        {
            "id": 17,
            "name": "meet_mentor"
        },
        {
            "id": 18,
            "name": "set_high_goals"
        },
        {
            "id": 19,
            "name": "face_challenges"
        },
        {
            "id": 20,
            "name": "strive_excellence"
        },
        {
            "id": 21,
            "name": "make_progress"
        }
    ],
    "subject_name": "Ayla",
    "subject_category": "human",
    "keyword": "princeton",
    "all_facts": [
        {
            "id": 0,
            "subject": "Ayla",
            "text": "Ayla gets a scholarship.",
            "fol": "p_0(Ayla)",
            "str_fol": "get_scholarship(Ayla)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Ayla",
            "text": "Ayla does not build a strong network.",
            "fol": "\u00acp_1(Ayla)",
            "str_fol": "\u00acbuild_network(Ayla)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Ayla",
            "text": "Ayla pursues her passion.",
            "fol": "p_2(Ayla)",
            "str_fol": "pursue_passion(Ayla)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Ayla",
            "text": "Ayla earns recognition.",
            "fol": "p_3(Ayla)",
            "str_fol": "earn_recognition(Ayla)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Ayla",
            "text": "Ayla does not develop skills.",
            "fol": "\u00acp_4(Ayla)",
            "str_fol": "\u00acdevelop_skills(Ayla)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Ayla",
            "text": "Ayla makes plans.",
            "fol": "p_5(Ayla)",
            "str_fol": "make_plans(Ayla)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Ayla",
            "text": "Ayla sets goals.",
            "fol": "p_11(Ayla)",
            "str_fol": "set_goals(Ayla)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Ayla",
            "text": "Ayla achieves success.",
            "fol": "p_8(Ayla)",
            "str_fol": "achieve_success(Ayla)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Ayla",
            "text": "Ayla gains valuable experience.",
            "fol": "p_10(Ayla)",
            "str_fol": "gain_experience(Ayla)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Ayla",
            "text": "Ayla lands her dream job.",
            "fol": "p_9(Ayla)",
            "str_fol": "land_dream_job(Ayla)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Ayla",
            "text": "Ayla does not attend Princeton.",
            "fol": "\u00acp_7(Ayla)",
            "str_fol": "\u00acattend_Princeton(Ayla)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Ayla",
            "text": "Ayla makes plans.",
            "fol": "p_5(Ayla)",
            "str_fol": "make_plans(Ayla)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Ayla",
            "text": "Ayla earns recognition.",
            "fol": "p_3(Ayla)",
            "str_fol": "earn_recognition(Ayla)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Ayla",
            "text": "Ayla pursues her passion.",
            "fol": "p_2(Ayla)",
            "str_fol": "pursue_passion(Ayla)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Ayla",
            "text": "Ayla does not develop skills.",
            "fol": "\u00acp_4(Ayla)",
            "str_fol": "\u00acdevelop_skills(Ayla)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Ayla",
            "text": "Ayla does not build a strong network.",
            "fol": "\u00acp_1(Ayla)",
            "str_fol": "\u00acbuild_network(Ayla)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Ayla",
            "text": "Ayla gets a scholarship.",
            "fol": "p_0(Ayla)",
            "str_fol": "get_scholarship(Ayla)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Anyone who plans their future or makes plans sets goals.",
            "fol": "\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((plan_future(x) \u2228 make_plans(x)) \u2192 set_goals(x))"
        },
        {
            "id": 4,
            "text": "If Ayla sets goals, then she achieves success and earns recognition.",
            "fol": "p_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))",
            "str_fol": "set_goals(Ayla) \u2192 (achieve_success(Ayla) \u2227 earn_recognition(Ayla))"
        },
        {
            "id": 3,
            "text": "Everyone who pursues their passion either develops skills or gains experience (or both).",
            "fol": "\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (pursue_passion(x) \u2192 (develop_skills(x) \u2228 gain_experience(x)))"
        },
        {
            "id": 2,
            "text": "If Ayla either builds a strong network or gains valuable experience (but not both), then she lands her dream job.",
            "fol": "(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)",
            "str_fol": "(build_network(Ayla) \u2295 gain_experience(Ayla)) \u2192 land_dream_job(Ayla)"
        },
        {
            "id": 1,
            "text": "If Ayla works hard, then she either gets a scholarship or lands her dream job.",
            "fol": "p_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))",
            "str_fol": "work_hard(Ayla) \u2192 (get_scholarship(Ayla) \u2228 land_dream_job(Ayla))"
        },
        {
            "id": 0,
            "text": "If Ayla works hard and attends Princeton, then she will achieve success.",
            "fol": "(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)",
            "str_fol": "(work_hard(Ayla) \u2227 attend_Princeton(Ayla)) \u2192 achieve_success(Ayla)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Ayla",
            "text": "Ayla makes plans.",
            "fol": "p_5(Ayla)",
            "str_fol": "make_plans(Ayla)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Ayla",
            "text": "Ayla earns recognition.",
            "fol": "p_3(Ayla)",
            "str_fol": "earn_recognition(Ayla)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Ayla",
            "text": "Ayla pursues her passion.",
            "fol": "p_2(Ayla)",
            "str_fol": "pursue_passion(Ayla)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Ayla",
            "text": "Ayla does not develop skills.",
            "fol": "\u00acp_4(Ayla)",
            "str_fol": "\u00acdevelop_skills(Ayla)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Ayla",
            "text": "Ayla does not build a strong network.",
            "fol": "\u00acp_1(Ayla)",
            "str_fol": "\u00acbuild_network(Ayla)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Ayla",
            "text": "Ayla gets a scholarship.",
            "fol": "p_0(Ayla)",
            "str_fol": "get_scholarship(Ayla)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Anyone who plans their future or makes plans sets goals.",
            "fol": "\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((plan_future(x) \u2228 make_plans(x)) \u2192 set_goals(x))"
        },
        {
            "id": 4,
            "text": "If Ayla sets goals, then she achieves success and earns recognition.",
            "fol": "p_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))",
            "str_fol": "set_goals(Ayla) \u2192 (achieve_success(Ayla) \u2227 earn_recognition(Ayla))"
        },
        {
            "id": 3,
            "text": "Everyone who pursues their passion either develops skills or gains experience (or both).",
            "fol": "\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (pursue_passion(x) \u2192 (develop_skills(x) \u2228 gain_experience(x)))"
        },
        {
            "id": 2,
            "text": "If Ayla either builds a strong network or gains valuable experience (but not both), then she lands her dream job.",
            "fol": "(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)",
            "str_fol": "(build_network(Ayla) \u2295 gain_experience(Ayla)) \u2192 land_dream_job(Ayla)"
        },
        {
            "id": 1,
            "text": "If Ayla works hard, then she either gets a scholarship or lands her dream job.",
            "fol": "p_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))",
            "str_fol": "work_hard(Ayla) \u2192 (get_scholarship(Ayla) \u2228 land_dream_job(Ayla))"
        },
        {
            "id": 0,
            "text": "If Ayla works hard and attends Princeton, then she will achieve success.",
            "fol": "(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)",
            "str_fol": "(work_hard(Ayla) \u2227 attend_Princeton(Ayla)) \u2192 achieve_success(Ayla)"
        }
    ],
    "context_fol": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)",
    "conclusion": {
        "id": 10,
        "subject": "Ayla",
        "text": "Ayla does not attend Princeton.",
        "fol": "\u00acp_7(Ayla)",
        "str_fol": "\u00acattend_Princeton(Ayla)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Ayla)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Ayla",
                    "text": "Ayla makes plans.",
                    "fol": "p_5(Ayla)",
                    "str_fol": "make_plans(Ayla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who plans their future or makes plans sets goals.",
                    "fol": "\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((plan_future(x) \u2228 make_plans(x)) \u2192 set_goals(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Ayla",
                "text": "Ayla sets goals.",
                "fol": "p_11(Ayla)",
                "str_fol": "set_goals(Ayla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Ayla",
                    "text": "Ayla sets goals.",
                    "fol": "p_11(Ayla)",
                    "str_fol": "set_goals(Ayla)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Ayla",
                    "text": "Ayla earns recognition.",
                    "fol": "p_3(Ayla)",
                    "str_fol": "earn_recognition(Ayla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Ayla sets goals, then she achieves success and earns recognition.",
                    "fol": "p_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))",
                    "str_fol": "set_goals(Ayla) \u2192 (achieve_success(Ayla) \u2227 earn_recognition(Ayla))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Ayla",
                "text": "Ayla achieves success.",
                "fol": "p_8(Ayla)",
                "str_fol": "achieve_success(Ayla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Ayla",
                    "text": "Ayla pursues her passion.",
                    "fol": "p_2(Ayla)",
                    "str_fol": "pursue_passion(Ayla)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Ayla",
                    "text": "Ayla does not develop skills.",
                    "fol": "\u00acp_4(Ayla)",
                    "str_fol": "\u00acdevelop_skills(Ayla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Everyone who pursues their passion either develops skills or gains experience (or both).",
                    "fol": "\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (pursue_passion(x) \u2192 (develop_skills(x) \u2228 gain_experience(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Ayla",
                "text": "Ayla gains valuable experience.",
                "fol": "p_10(Ayla)",
                "str_fol": "gain_experience(Ayla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Ayla",
                    "text": "Ayla does not build a strong network.",
                    "fol": "\u00acp_1(Ayla)",
                    "str_fol": "\u00acbuild_network(Ayla)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Ayla",
                    "text": "Ayla gains valuable experience.",
                    "fol": "p_10(Ayla)",
                    "str_fol": "gain_experience(Ayla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Ayla either builds a strong network or gains valuable experience (but not both), then she lands her dream job.",
                    "fol": "(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)",
                    "str_fol": "(build_network(Ayla) \u2295 gain_experience(Ayla)) \u2192 land_dream_job(Ayla)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Ayla",
                "text": "Ayla lands her dream job.",
                "fol": "p_9(Ayla)",
                "str_fol": "land_dream_job(Ayla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Ayla",
                    "text": "Ayla gets a scholarship.",
                    "fol": "p_0(Ayla)",
                    "str_fol": "get_scholarship(Ayla)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Ayla",
                    "text": "Ayla lands her dream job.",
                    "fol": "p_9(Ayla)",
                    "str_fol": "land_dream_job(Ayla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Ayla works hard, then she either gets a scholarship or lands her dream job.",
                    "fol": "p_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))",
                    "str_fol": "work_hard(Ayla) \u2192 (get_scholarship(Ayla) \u2228 land_dream_job(Ayla))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Ayla",
                    "text": "Ayla achieves success.",
                    "fol": "p_8(Ayla)",
                    "str_fol": "achieve_success(Ayla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Ayla works hard and attends Princeton, then she will achieve success.",
                    "fol": "(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)",
                    "str_fol": "(work_hard(Ayla) \u2227 attend_Princeton(Ayla)) \u2192 achieve_success(Ayla)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla).",
                    "p_3(Ayla).",
                    "p_2(Ayla).",
                    "-p_4(Ayla).",
                    "-p_1(Ayla).",
                    "p_0(Ayla).",
                    "all x (-(p_12(x) | p_5(x)) | p_11(x)).",
                    "(-p_11(Ayla)) | (p_8(Ayla) & p_3(Ayla)).",
                    "all x (-p_2(x) | p_4(x) | p_10(x)).",
                    "(-(-(p_1(Ayla) <-> p_10(Ayla)))) | p_9(Ayla).",
                    "(-p_6(Ayla)) | p_0(Ayla) | p_9(Ayla).",
                    "(-(p_6(Ayla) & p_7(Ayla))) | p_8(Ayla).",
                    "(-p_10(Ayla)) | -p_7(Ayla)."
                ],
                "formulas(goals)": [
                    "-p_7(Ayla)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Ayla) \u2192 \u00acp_7(Ayla)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)\np_5(Ayla) \u2192 \u00acp_7(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla)",
                    "p_3(Ayla)",
                    "p_2(Ayla)",
                    "-p_4(Ayla)",
                    "-p_1(Ayla)",
                    "p_0(Ayla)",
                    "all x ((p_12(x) | p_5(x)) -> p_11(x))",
                    "p_11(Ayla) -> (p_8(Ayla) & p_3(Ayla))",
                    "all x (p_2(x) -> (p_4(x) | p_10(x)))",
                    "(-(p_1(Ayla) <-> p_10(Ayla))) -> p_9(Ayla)",
                    "p_6(Ayla) -> (p_0(Ayla) | p_9(Ayla))",
                    "(p_6(Ayla) & p_7(Ayla)) -> p_8(Ayla)",
                    "p_5(Ayla) -> -p_7(Ayla)"
                ],
                "formulas(goals)": [
                    "-p_7(Ayla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Ayla) \u2192 \u00acp_7(Ayla)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ( (p_12(x) \u2228 p_5(x)) \u2192 p_11(x) )\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x ( p_2(x) \u2192 (p_4(x) \u2228 p_10(x)) )\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)\np_5(Ayla) \u2192 \u00acp_7(Ayla)\n\u00acp_7(Ayla)\np_5(Ayla) \u2192 p_11(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla)",
                    "p_3(Ayla)",
                    "p_2(Ayla)",
                    "-p_4(Ayla)",
                    "-p_1(Ayla)",
                    "p_0(Ayla)",
                    "all x ( (p_12(x) | p_5(x)) -> p_11(x) )",
                    "p_11(Ayla) -> (p_8(Ayla) & p_3(Ayla))",
                    "all x ( p_2(x) -> (p_4(x) | p_10(x)) )",
                    "( -(p_1(Ayla) <-> p_10(Ayla)) ) -> p_9(Ayla)",
                    "p_6(Ayla) -> (p_0(Ayla) | p_9(Ayla))",
                    "(p_6(Ayla) & p_7(Ayla)) -> p_8(Ayla)",
                    "p_5(Ayla) -> -p_7(Ayla)",
                    "-p_7(Ayla)",
                    "p_5(Ayla) -> p_11(Ayla)"
                ],
                "formulas(goals)": [
                    "-p_7(Ayla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Ayla)"
                ],
                "added_rules": [
                    "p_5(Ayla) \u2192 p_11(Ayla)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ( (p_12(x) \u2228 p_5(x)) \u2192 p_11(x) )\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x ( p_2(x) \u2192 (p_4(x) \u2228 p_10(x)) )\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(\u00acp_6(Ayla) \u2228 \u00acp_7(Ayla) \u2228 p_8(Ayla))\n(\u00acp_5(Ayla) \u2228 \u00acp_7(Ayla))\n\u00acp_7(Ayla)\np_5(Ayla) \u2192 p_11(Ayla)\np_11(Ayla)\np_10(Ayla)\np_9(Ayla)\np_8(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla).",
                    "p_3(Ayla).",
                    "p_2(Ayla).",
                    "-p_4(Ayla).",
                    "-p_1(Ayla).",
                    "p_0(Ayla).",
                    "all x ((p_12(x) | p_5(x)) -> p_11(x)).",
                    "p_11(Ayla) -> (p_8(Ayla) & p_3(Ayla)).",
                    "all x (p_2(x) -> (p_4(x) | p_10(x))).",
                    "(-(p_1(Ayla) <-> p_10(Ayla))) -> p_9(Ayla).",
                    "p_6(Ayla) -> (p_0(Ayla) | p_9(Ayla)).",
                    "(-p_6(Ayla) | -p_7(Ayla) | p_8(Ayla)).",
                    "(-p_5(Ayla) | -p_7(Ayla)).",
                    "-p_7(Ayla).",
                    "p_5(Ayla) -> p_11(Ayla).",
                    "p_11(Ayla).",
                    "p_10(Ayla).",
                    "p_9(Ayla).",
                    "p_8(Ayla)."
                ],
                "formulas(goals)": [
                    "-p_7(Ayla)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Ayla) \u2227 p_7(Ayla)) \u2192 p_8(Ayla)",
                    "p_5(Ayla) \u2192 \u00acp_7(Ayla)"
                ],
                "added_facts": [
                    "p_11(Ayla)",
                    "p_10(Ayla)",
                    "p_9(Ayla)",
                    "p_8(Ayla)"
                ],
                "added_rules": [
                    "\u00acp_6(Ayla) \u2228 \u00acp_7(Ayla) \u2228 p_8(Ayla)",
                    "\u00acp_5(Ayla) \u2228 \u00acp_7(Ayla)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(\u00acp_6(Ayla) \u2228 \u00acp_7(Ayla) \u2228 p_8(Ayla))\n(\u00acp_5(Ayla) \u2228 \u00acp_7(Ayla))\np_5(Ayla) \u2192 p_11(Ayla)\np_11(Ayla)\np_10(Ayla)\np_9(Ayla)\np_8(Ayla)\np_11(Ayla) \u2192 p_7(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla).",
                    "p_3(Ayla).",
                    "p_2(Ayla).",
                    "-p_4(Ayla).",
                    "-p_1(Ayla).",
                    "p_0(Ayla).",
                    "all x ((p_12(x) | p_5(x)) -> p_11(x)).",
                    "p_11(Ayla) -> (p_8(Ayla) & p_3(Ayla)).",
                    "all x (p_2(x) -> (p_4(x) | p_10(x))).",
                    "(-(p_1(Ayla) <-> p_10(Ayla))) -> p_9(Ayla).",
                    "p_6(Ayla) -> (p_0(Ayla) | p_9(Ayla)).",
                    "(-p_6(Ayla) | -p_7(Ayla) | p_8(Ayla)).",
                    "(-p_5(Ayla) | -p_7(Ayla)).",
                    "p_5(Ayla) -> p_11(Ayla).",
                    "p_11(Ayla).",
                    "p_10(Ayla).",
                    "p_9(Ayla).",
                    "p_8(Ayla).",
                    "p_11(Ayla) -> p_7(Ayla)."
                ],
                "formulas(goals)": [
                    "p_7(Ayla)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Ayla)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Ayla) \u2192 p_7(Ayla)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x ((p_12(x) \u2228 p_5(x)) \u2192 p_11(x))\np_11(Ayla) \u2192 (p_8(Ayla) \u2227 p_3(Ayla))\n\u2200x (p_2(x) \u2192 (p_4(x) \u2228 p_10(x)))\n(p_1(Ayla) \u2295 p_10(Ayla)) \u2192 p_9(Ayla)\np_6(Ayla) \u2192 (p_0(Ayla) \u2228 p_9(Ayla))\n(\u00acp_6(Ayla) \u2228 \u00acp_7(Ayla) \u2228 p_8(Ayla))\n(p_5(Ayla) \u2227 p_7(Ayla))\np_5(Ayla) \u2192 p_11(Ayla)\np_11(Ayla)\np_10(Ayla)\np_9(Ayla)\np_8(Ayla)\np_11(Ayla) \u2192 p_7(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla)",
                    "p_3(Ayla)",
                    "p_2(Ayla)",
                    "-p_4(Ayla)",
                    "-p_1(Ayla)",
                    "p_0(Ayla)",
                    "all x ((p_12(x) | p_5(x)) -> p_11(x))",
                    "p_11(Ayla) -> (p_8(Ayla) & p_3(Ayla))",
                    "all x (p_2(x) -> (p_4(x) | p_10(x)))",
                    "(-(p_1(Ayla) <-> p_10(Ayla))) -> p_9(Ayla)",
                    "p_6(Ayla) -> (p_0(Ayla) | p_9(Ayla))",
                    "(-p_6(Ayla) | -p_7(Ayla) | p_8(Ayla))",
                    "(p_5(Ayla) & p_7(Ayla))",
                    "p_5(Ayla) -> p_11(Ayla)",
                    "p_11(Ayla)",
                    "p_10(Ayla)",
                    "p_9(Ayla)",
                    "p_8(Ayla)",
                    "p_11(Ayla) -> p_7(Ayla)"
                ],
                "formulas(goals)": [
                    "p_7(Ayla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(\u00acp_5(Ayla) \u2228 \u00acp_7(Ayla))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Ayla) \u2227 p_7(Ayla))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Ayla)\np_3(Ayla)\np_2(Ayla)\n\u00acp_4(Ayla)\n\u00acp_1(Ayla)\np_0(Ayla)\n\u2200x (\u00acp_12(x) \u2228 p_11(x))\n\u2200x (\u00acp_5(x) \u2228 p_11(x))\n\u00acp_11(Ayla) \u2228 p_8(Ayla)\n\u00acp_11(Ayla) \u2228 p_3(Ayla)\n\u2200x (\u00acp_2(x) \u2228 p_4(x) \u2228 p_10(x))\n\u00acp_1(Ayla) \u2228 \u00acp_10(Ayla) \u2228 p_9(Ayla)\np_1(Ayla) \u2228 p_10(Ayla) \u2228 p_9(Ayla)\n\u00acp_6(Ayla) \u2228 p_0(Ayla) \u2228 p_9(Ayla)\n\u00acp_6(Ayla) \u2228 \u00acp_7(Ayla) \u2228 p_8(Ayla)\np_7(Ayla)\n\u00acp_5(Ayla) \u2228 p_11(Ayla)\np_11(Ayla)\np_10(Ayla)\np_9(Ayla)\np_8(Ayla)\n\u00acp_11(Ayla) \u2228 p_7(Ayla)\np_7(Ayla) \u2228 \u00acp_5(Ayla)\np_4(Ayla) \u2228 \u00acp_4(Ayla)\n\u00acp_11(Ayla) \u2228 p_7(Ayla) \u2228 p_7(Ayla)\np_11(Ayla) \u2228 p_12(Ayla)",
            "Initial Goal": "\u00acp_7(Ayla)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Ayla)",
                    "p_3(Ayla)",
                    "p_2(Ayla)",
                    "-p_4(Ayla)",
                    "-p_1(Ayla)",
                    "p_0(Ayla)",
                    "(-p_12(x)) | p_11(x)",
                    "(-p_5(x)) | p_11(x)",
                    "(-p_11(Ayla)) | p_8(Ayla)",
                    "(-p_11(Ayla)) | p_3(Ayla)",
                    "(-p_2(x)) | p_4(x) | p_10(x)",
                    "(-p_1(Ayla)) | (-p_10(Ayla)) | p_9(Ayla)",
                    "p_1(Ayla) | p_10(Ayla) | p_9(Ayla)",
                    "(-p_6(Ayla)) | p_0(Ayla) | p_9(Ayla)",
                    "(-p_6(Ayla)) | (-p_7(Ayla)) | p_8(Ayla)",
                    "p_7(Ayla)",
                    "(-p_5(Ayla)) | p_11(Ayla)",
                    "p_11(Ayla)",
                    "p_10(Ayla)",
                    "p_9(Ayla)",
                    "p_8(Ayla)",
                    "(-p_11(Ayla)) | p_7(Ayla)",
                    "p_7(Ayla) | (-p_5(Ayla))",
                    "p_4(Ayla) | (-p_4(Ayla))",
                    "(-p_11(Ayla)) | p_7(Ayla) | p_7(Ayla)",
                    "p_11(Ayla) | p_12(Ayla)"
                ],
                "formulas(goals)": [
                    "p_7(Ayla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Ayla)",
                    "p_7(Ayla) \u2228 \u00acp_5(Ayla)",
                    "p_4(Ayla) \u2228 \u00acp_4(Ayla)",
                    "\u00acp_11(Ayla) \u2228 p_7(Ayla) \u2228 p_7(Ayla)",
                    "p_11(Ayla) \u2228 p_12(Ayla)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_12(x) \u2228 p_11(x))",
                    "\u2200x (\u00acp_5(x) \u2228 p_11(x))",
                    "\u2200x (\u00acp_2(x) \u2228 p_4(x) \u2228 p_10(x))",
                    "\u00acp_1(Ayla) \u2228 \u00acp_10(Ayla) \u2228 p_9(Ayla)",
                    "p_1(Ayla) \u2228 p_10(Ayla) \u2228 p_9(Ayla)",
                    "\u00acp_6(Ayla) \u2228 p_0(Ayla) \u2228 p_9(Ayla)",
                    "\u00acp_6(Ayla) \u2228 \u00acp_7(Ayla) \u2228 p_8(Ayla)",
                    "\u00acp_5(Ayla) \u2228 p_11(Ayla)",
                    "\u00acp_11(Ayla) \u2228 p_7(Ayla)"
                ]
            }
        }
    ]
}