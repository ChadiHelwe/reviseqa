{
    "background_story": "Bailey was a rare and extraordinary species of plant, discovered deep in the Amazon rainforest. She possessed the unique ability to undergo photosynthesis at an accelerated rate, allowing her to thrive in even the most challenging environments. Bailey's leaves shimmered with an iridescent glow, as if infused with an inner light. As she absorbed sunlight, she released oxygen at a remarkable pace, earning her the nickname 'The Breath of Life'. Scientists from around the world flocked to study Bailey, hoping to unlock the secrets of her photosynthetic prowess. Her remarkable abilities inspired new innovations in sustainable energy and environmental conservation, making her a symbol of hope for a greener future.",
    "predicates": [
        {
            "id": 0,
            "name": "slow_growth"
        },
        {
            "id": 1,
            "name": "purifies_air"
        },
        {
            "id": 2,
            "name": "is_alive"
        },
        {
            "id": 3,
            "name": "has_deep_roots"
        },
        {
            "id": 4,
            "name": "fast_growth"
        },
        {
            "id": 5,
            "name": "resilient"
        },
        {
            "id": 6,
            "name": "thrives_easily"
        },
        {
            "id": 7,
            "name": "adapts_quickly"
        },
        {
            "id": 8,
            "name": "releases_oxygen"
        },
        {
            "id": 9,
            "name": "blooms_vibrantly"
        },
        {
            "id": 10,
            "name": "gets_sunlight"
        },
        {
            "id": 11,
            "name": "absorbs_water"
        },
        {
            "id": 12,
            "name": "absorbs_light"
        },
        {
            "id": 13,
            "name": "retains_water"
        },
        {
            "id": 14,
            "name": "absorbs_sunlight"
        },
        {
            "id": 15,
            "name": "glows_iridescent"
        },
        {
            "id": 16,
            "name": "grows_strong"
        },
        {
            "id": 17,
            "name": "gets_sufficient_water"
        },
        {
            "id": 18,
            "name": "receives_adequate_light"
        }
    ],
    "subject_name": "Bailey",
    "subject_category": "plant",
    "keyword": "photosynthetic",
    "all_facts": [
        {
            "id": 0,
            "subject": "Bailey",
            "text": "Bailey does not have slow growth.",
            "fol": "\u00acp_0(Bailey)",
            "str_fol": "\u00acslow_growth(Bailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bailey",
            "text": "Bailey purifies the air.",
            "fol": "p_1(Bailey)",
            "str_fol": "purifies_air(Bailey)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Bailey",
            "text": "Bailey is not alive.",
            "fol": "\u00acp_2(Bailey)",
            "str_fol": "\u00acis_alive(Bailey)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Bailey",
            "text": "Bailey does not have deep roots.",
            "fol": "\u00acp_3(Bailey)",
            "str_fol": "\u00achas_deep_roots(Bailey)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Bailey",
            "text": "Bailey blooms vibrantly.",
            "fol": "p_9(Bailey)",
            "str_fol": "blooms_vibrantly(Bailey)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bailey",
            "text": "Bailey does not adapt quickly.",
            "fol": "\u00acp_7(Bailey)",
            "str_fol": "\u00acadapts_quickly(Bailey)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Bailey",
            "text": "Bailey does not release oxygen.",
            "fol": "\u00acp_8(Bailey)",
            "str_fol": "\u00acreleases_oxygen(Bailey)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Bailey",
            "text": "Bailey does not thrive easily.",
            "fol": "\u00acp_6(Bailey)",
            "str_fol": "\u00acthrives_easily(Bailey)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Bailey",
            "text": "Bailey has fast growth.",
            "fol": "p_4(Bailey)",
            "str_fol": "fast_growth(Bailey)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Bailey",
            "text": "Bailey is resilient.",
            "fol": "p_5(Bailey)",
            "str_fol": "resilient(Bailey)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Bailey",
            "text": "Bailey does not have deep roots.",
            "fol": "\u00acp_3(Bailey)",
            "str_fol": "\u00achas_deep_roots(Bailey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bailey",
            "text": "Bailey is not alive.",
            "fol": "\u00acp_2(Bailey)",
            "str_fol": "\u00acis_alive(Bailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bailey",
            "text": "Bailey purifies the air.",
            "fol": "p_1(Bailey)",
            "str_fol": "purifies_air(Bailey)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Bailey",
            "text": "Bailey does not have slow growth.",
            "fol": "\u00acp_0(Bailey)",
            "str_fol": "\u00acslow_growth(Bailey)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Bailey either has deep roots or blooms vibrantly, but she doesn't necessarily do both.",
            "fol": "p_3(Bailey) \u2295 p_9(Bailey)",
            "str_fol": "has_deep_roots(Bailey) \u2295 blooms_vibrantly(Bailey)"
        },
        {
            "id": 4,
            "text": "Bailey either adapts quickly to her surroundings or blooms vibrantly, but she doesn't necessarily do both.",
            "fol": "p_7(Bailey) \u2295 p_9(Bailey)",
            "str_fol": "adapts_quickly(Bailey) \u2295 blooms_vibrantly(Bailey)"
        },
        {
            "id": 3,
            "text": "All plants that release oxygen are alive.",
            "fol": "\u2200x (p_8(x) \u2192 p_2(x))",
            "str_fol": "\u2200x (releases_oxygen(x) \u2192 is_alive(x))"
        },
        {
            "id": 2,
            "text": "Any plant that thrives easily or adapts quickly releases oxygen.",
            "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((thrives_easily(x) \u2228 adapts_quickly(x)) \u2192 releases_oxygen(x))"
        },
        {
            "id": 1,
            "text": "If Bailey either purifies the air or has fast growth (but not both), then she thrives easily.",
            "fol": "(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)",
            "str_fol": "(purifies_air(Bailey) \u2295 fast_growth(Bailey)) \u2192 thrives_easily(Bailey)"
        },
        {
            "id": 0,
            "text": "If Bailey has either fast growth or slow growth (but not both), then she is resilient.",
            "fol": "(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)",
            "str_fol": "(fast_growth(Bailey) \u2295 slow_growth(Bailey)) \u2192 resilient(Bailey)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Bailey",
            "text": "Bailey does not have deep roots.",
            "fol": "\u00acp_3(Bailey)",
            "str_fol": "\u00achas_deep_roots(Bailey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bailey",
            "text": "Bailey is not alive.",
            "fol": "\u00acp_2(Bailey)",
            "str_fol": "\u00acis_alive(Bailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bailey",
            "text": "Bailey purifies the air.",
            "fol": "p_1(Bailey)",
            "str_fol": "purifies_air(Bailey)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Bailey",
            "text": "Bailey does not have slow growth.",
            "fol": "\u00acp_0(Bailey)",
            "str_fol": "\u00acslow_growth(Bailey)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Bailey either has deep roots or blooms vibrantly, but she doesn't necessarily do both.",
            "fol": "p_3(Bailey) \u2295 p_9(Bailey)",
            "str_fol": "has_deep_roots(Bailey) \u2295 blooms_vibrantly(Bailey)"
        },
        {
            "id": 4,
            "text": "Bailey either adapts quickly to her surroundings or blooms vibrantly, but she doesn't necessarily do both.",
            "fol": "p_7(Bailey) \u2295 p_9(Bailey)",
            "str_fol": "adapts_quickly(Bailey) \u2295 blooms_vibrantly(Bailey)"
        },
        {
            "id": 3,
            "text": "All plants that release oxygen are alive.",
            "fol": "\u2200x (p_8(x) \u2192 p_2(x))",
            "str_fol": "\u2200x (releases_oxygen(x) \u2192 is_alive(x))"
        },
        {
            "id": 2,
            "text": "Any plant that thrives easily or adapts quickly releases oxygen.",
            "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((thrives_easily(x) \u2228 adapts_quickly(x)) \u2192 releases_oxygen(x))"
        },
        {
            "id": 1,
            "text": "If Bailey either purifies the air or has fast growth (but not both), then she thrives easily.",
            "fol": "(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)",
            "str_fol": "(purifies_air(Bailey) \u2295 fast_growth(Bailey)) \u2192 thrives_easily(Bailey)"
        },
        {
            "id": 0,
            "text": "If Bailey has either fast growth or slow growth (but not both), then she is resilient.",
            "fol": "(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)",
            "str_fol": "(fast_growth(Bailey) \u2295 slow_growth(Bailey)) \u2192 resilient(Bailey)"
        }
    ],
    "context_fol": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (p_8(x) \u2192 p_2(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\n(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)",
    "conclusion": {
        "id": 9,
        "subject": "Bailey",
        "text": "Bailey is resilient.",
        "fol": "p_5(Bailey)",
        "str_fol": "resilient(Bailey)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Bailey)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Bailey",
                    "text": "Bailey does not have deep roots.",
                    "fol": "\u00acp_3(Bailey)",
                    "str_fol": "\u00achas_deep_roots(Bailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Bailey either has deep roots or blooms vibrantly, but she doesn't necessarily do both.",
                    "fol": "p_3(Bailey) \u2295 p_9(Bailey)",
                    "str_fol": "has_deep_roots(Bailey) \u2295 blooms_vibrantly(Bailey)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Bailey",
                "text": "Bailey blooms vibrantly.",
                "fol": "p_9(Bailey)",
                "str_fol": "blooms_vibrantly(Bailey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Bailey",
                    "text": "Bailey blooms vibrantly.",
                    "fol": "p_9(Bailey)",
                    "str_fol": "blooms_vibrantly(Bailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Bailey either adapts quickly to her surroundings or blooms vibrantly, but she doesn't necessarily do both.",
                    "fol": "p_7(Bailey) \u2295 p_9(Bailey)",
                    "str_fol": "adapts_quickly(Bailey) \u2295 blooms_vibrantly(Bailey)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Bailey",
                "text": "Bailey does not adapt quickly.",
                "fol": "\u00acp_7(Bailey)",
                "str_fol": "\u00acadapts_quickly(Bailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Bailey",
                    "text": "Bailey is not alive.",
                    "fol": "\u00acp_2(Bailey)",
                    "str_fol": "\u00acis_alive(Bailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "All plants that release oxygen are alive.",
                    "fol": "\u2200x (p_8(x) \u2192 p_2(x))",
                    "str_fol": "\u2200x (releases_oxygen(x) \u2192 is_alive(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Bailey",
                "text": "Bailey does not release oxygen.",
                "fol": "\u00acp_8(Bailey)",
                "str_fol": "\u00acreleases_oxygen(Bailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Bailey",
                    "text": "Bailey does not adapt quickly.",
                    "fol": "\u00acp_7(Bailey)",
                    "str_fol": "\u00acadapts_quickly(Bailey)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Bailey",
                    "text": "Bailey does not release oxygen.",
                    "fol": "\u00acp_8(Bailey)",
                    "str_fol": "\u00acreleases_oxygen(Bailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Any plant that thrives easily or adapts quickly releases oxygen.",
                    "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((thrives_easily(x) \u2228 adapts_quickly(x)) \u2192 releases_oxygen(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Bailey",
                "text": "Bailey does not thrive easily.",
                "fol": "\u00acp_6(Bailey)",
                "str_fol": "\u00acthrives_easily(Bailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Bailey",
                    "text": "Bailey purifies the air.",
                    "fol": "p_1(Bailey)",
                    "str_fol": "purifies_air(Bailey)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Bailey",
                    "text": "Bailey does not thrive easily.",
                    "fol": "\u00acp_6(Bailey)",
                    "str_fol": "\u00acthrives_easily(Bailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Bailey either purifies the air or has fast growth (but not both), then she thrives easily.",
                    "fol": "(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)",
                    "str_fol": "(purifies_air(Bailey) \u2295 fast_growth(Bailey)) \u2192 thrives_easily(Bailey)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Bailey",
                "text": "Bailey has fast growth.",
                "fol": "p_4(Bailey)",
                "str_fol": "fast_growth(Bailey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Bailey",
                    "text": "Bailey has fast growth.",
                    "fol": "p_4(Bailey)",
                    "str_fol": "fast_growth(Bailey)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Bailey",
                    "text": "Bailey does not have slow growth.",
                    "fol": "\u00acp_0(Bailey)",
                    "str_fol": "\u00acslow_growth(Bailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Bailey has either fast growth or slow growth (but not both), then she is resilient.",
                    "fol": "(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)",
                    "str_fol": "(fast_growth(Bailey) \u2295 slow_growth(Bailey)) \u2192 resilient(Bailey)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Bailey",
                "text": "Bailey is resilient.",
                "fol": "p_5(Bailey)",
                "str_fol": "resilient(Bailey)",
                "negation": false
            }
        }
    ],
    "proof_trace": "3 (all x (p_8(x) -> p_2(x))).  [assumption].\n4 (all x (p_6(x) | p_7(x) -> p_8(x))).  [assumption].\n5 -(p_1(Bailey) <-> p_4(Bailey)) -> p_6(Bailey).  [assumption].\n6 -(p_4(Bailey) <-> p_0(Bailey)) -> p_5(Bailey).  [assumption].\n7 p_5(Bailey).  [goal].\n11 -p_8(x) | p_2(x).  [clausify(3)].\n12 -p_2(Bailey).  [assumption].\n13 -p_1(Bailey) | p_4(Bailey) | p_6(Bailey).  [clausify(5)].\n14 p_1(Bailey).  [assumption].\n16 -p_4(Bailey) | p_0(Bailey) | p_5(Bailey).  [clausify(6)].\n17 -p_0(Bailey).  [assumption].\n22 p_4(Bailey) | p_6(Bailey).  [resolve(13,a,14,a)].\n23 -p_6(x) | p_8(x).  [clausify(4)].\n24 -p_4(Bailey) | p_5(Bailey).  [resolve(16,b,17,a)].\n25 -p_5(Bailey).  [deny(7)].\n26 p_4(Bailey) | p_8(Bailey).  [resolve(22,b,23,a)].\n27 -p_8(Bailey).  [resolve(11,b,12,a)].\n28 p_4(Bailey).  [resolve(26,b,27,a)].\n29 -p_4(Bailey).  [resolve(24,b,25,a)].\n30 $F.  [resolve(28,a,29,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (p_8(x) \u2192 p_2(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\n(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)\np_4(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey).",
                    "-p_2(Bailey).",
                    "p_1(Bailey).",
                    "-p_0(Bailey).",
                    "-(p_3(Bailey) <-> p_9(Bailey)).",
                    "-(p_7(Bailey) <-> p_9(Bailey)).",
                    "all x (p_8(x) -> p_2(x)).",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x)).",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey).",
                    "(-(p_4(Bailey) <-> p_0(Bailey))) -> p_5(Bailey).",
                    "p_4(Bailey)."
                ],
                "formulas(goals)": [
                    "p_5(Bailey)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Bailey)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (p_8(x) \u2192 p_2(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\n(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)\np_4(Bailey)\np_9(Bailey)\n\u00acp_7(Bailey)\n\u00ac(p_1(Bailey) \u2295 p_4(Bailey))\np_5(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey)",
                    "-p_2(Bailey)",
                    "p_1(Bailey)",
                    "-p_0(Bailey)",
                    "-(p_3(Bailey) <-> p_9(Bailey))",
                    "-(p_7(Bailey) <-> p_9(Bailey))",
                    "all x (p_8(x) -> p_2(x))",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey)",
                    "(-(p_4(Bailey) <-> p_0(Bailey))) -> p_5(Bailey)",
                    "p_4(Bailey)",
                    "p_9(Bailey)",
                    "-p_7(Bailey)",
                    "-(-(p_1(Bailey) <-> p_4(Bailey)))",
                    "p_5(Bailey)"
                ],
                "formulas(goals)": [
                    "p_5(Bailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Bailey)",
                    "\u00acp_7(Bailey)",
                    "\u00ac(p_1(Bailey) \u2295 p_4(Bailey))",
                    "p_5(Bailey)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (\u00acp_2(x) \u2192 \u00acp_8(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\n\u00acp_5(Bailey) \u2192 \u00ac(p_4(Bailey) \u2295 p_0(Bailey))\np_4(Bailey)\np_9(Bailey)\n\u00acp_7(Bailey)\n\u00ac(p_1(Bailey) \u2295 p_4(Bailey))\np_5(Bailey)\np_4(Bailey) \u2192 p_4(Bailey)\np_5(Bailey) \u2228 \u00acp_5(Bailey)\np_9(Bailey) \u2192 p_9(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey)",
                    "-p_2(Bailey)",
                    "p_1(Bailey)",
                    "-p_0(Bailey)",
                    "-(p_3(Bailey) <-> p_9(Bailey))",
                    "-(p_7(Bailey) <-> p_9(Bailey))",
                    "all x (-p_2(x) -> -p_8(x))",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey)",
                    "-p_5(Bailey) -> (-(p_4(Bailey) <-> p_0(Bailey)))",
                    "p_4(Bailey)",
                    "p_9(Bailey)",
                    "-p_7(Bailey)",
                    "-(-(p_1(Bailey) <-> p_4(Bailey)))",
                    "p_5(Bailey)",
                    "p_4(Bailey) -> p_4(Bailey)",
                    "p_5(Bailey) | -p_5(Bailey)",
                    "p_9(Bailey) -> p_9(Bailey)"
                ],
                "formulas(goals)": [
                    "p_5(Bailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_8(x) \u2192 p_2(x))",
                    "(p_4(Bailey) \u2295 p_0(Bailey)) \u2192 p_5(Bailey)"
                ],
                "added_facts": [
                    "p_4(Bailey) \u2192 p_4(Bailey)",
                    "p_5(Bailey) \u2228 \u00acp_5(Bailey)",
                    "p_9(Bailey) \u2192 p_9(Bailey)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_2(x) \u2192 \u00acp_8(x))",
                    "\u00acp_5(Bailey) \u2192 \u00ac(p_4(Bailey) \u2295 p_0(Bailey))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (\u00acp_2(x) \u2192 \u00acp_8(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\np_5(Bailey) \u2192 \u00ac(p_4(Bailey) \u2295 p_0(Bailey))\np_4(Bailey)\np_9(Bailey)\n\u00acp_7(Bailey)\n\u00ac(p_1(Bailey) \u2295 p_4(Bailey))\np_4(Bailey) \u2192 p_4(Bailey)\np_5(Bailey) \u2228 \u00acp_5(Bailey)\np_9(Bailey) \u2192 p_9(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey)",
                    "-p_2(Bailey)",
                    "p_1(Bailey)",
                    "-p_0(Bailey)",
                    "-(p_3(Bailey) <-> p_9(Bailey))",
                    "-(p_7(Bailey) <-> p_9(Bailey))",
                    "all x (-p_2(x) -> -p_8(x))",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey)",
                    "p_5(Bailey) -> (p_4(Bailey) <-> p_0(Bailey))",
                    "p_4(Bailey)",
                    "p_9(Bailey)",
                    "-p_7(Bailey)",
                    "(p_1(Bailey) <-> p_4(Bailey))",
                    "p_4(Bailey) -> p_4(Bailey)",
                    "p_5(Bailey) | -p_5(Bailey)",
                    "p_9(Bailey) -> p_9(Bailey)"
                ],
                "formulas(goals)": [
                    "-p_5(Bailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Bailey)"
                ],
                "removed_rules": [
                    "\u00acp_5(Bailey) \u2192 \u00ac(p_4(Bailey) \u2295 p_0(Bailey))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Bailey) \u2192 \u00ac(p_4(Bailey) \u2295 p_0(Bailey))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (\u00acp_2(x) \u2192 \u00acp_8(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\np_4(Bailey)\np_9(Bailey)\n\u00acp_7(Bailey)\n\u00ac(p_1(Bailey) \u2295 p_4(Bailey))\np_4(Bailey) \u2192 p_4(Bailey)\np_5(Bailey) \u2228 \u00acp_5(Bailey)\np_9(Bailey) \u2192 p_9(Bailey)\np_4(Bailey) \u2192 p_5(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey)",
                    "-p_2(Bailey)",
                    "p_1(Bailey)",
                    "-p_0(Bailey)",
                    "-(p_3(Bailey) <-> p_9(Bailey))",
                    "-(p_7(Bailey) <-> p_9(Bailey))",
                    "all x (-p_2(x) -> -p_8(x))",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey)",
                    "p_4(Bailey)",
                    "p_9(Bailey)",
                    "-p_7(Bailey)",
                    "-(-(p_1(Bailey) <-> p_4(Bailey)))",
                    "p_4(Bailey) -> p_4(Bailey)",
                    "p_5(Bailey) | -p_5(Bailey)",
                    "p_9(Bailey) -> p_9(Bailey)",
                    "p_4(Bailey) -> p_5(Bailey)"
                ],
                "formulas(goals)": [
                    "p_5(Bailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Bailey) \u2192 \u00ac(p_4(Bailey) \u2295 p_0(Bailey))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Bailey) \u2192 p_5(Bailey)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (\u00acp_2(x) \u2192 \u00acp_8(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\np_4(Bailey)\np_9(Bailey)\n\u00acp_7(Bailey)\n\u00ac(p_1(Bailey) \u2295 p_4(Bailey))\np_4(Bailey) \u2192 p_4(Bailey)\np_5(Bailey) \u2228 \u00acp_5(Bailey)\np_9(Bailey) \u2192 p_9(Bailey)\np_4(Bailey) \u2192 \u00acp_5(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey)",
                    "-p_2(Bailey)",
                    "p_1(Bailey)",
                    "-p_0(Bailey)",
                    "-(p_3(Bailey) <-> p_9(Bailey))",
                    "-(p_7(Bailey) <-> p_9(Bailey))",
                    "all x (-p_2(x) -> -p_8(x))",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey)",
                    "p_4(Bailey)",
                    "p_9(Bailey)",
                    "-p_7(Bailey)",
                    "(p_1(Bailey) <-> p_4(Bailey))",
                    "p_4(Bailey) -> p_4(Bailey)",
                    "p_5(Bailey) | -p_5(Bailey)",
                    "p_9(Bailey) -> p_9(Bailey)",
                    "p_4(Bailey) -> -p_5(Bailey)"
                ],
                "formulas(goals)": [
                    "-p_5(Bailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Bailey) \u2192 p_5(Bailey)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Bailey) \u2192 \u00acp_5(Bailey)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Bailey)\n\u00acp_2(Bailey)\np_1(Bailey)\n\u00acp_0(Bailey)\np_3(Bailey) \u2295 p_9(Bailey)\np_7(Bailey) \u2295 p_9(Bailey)\n\u2200x (\u00acp_2(x) \u2192 \u00acp_8(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n(p_1(Bailey) \u2295 p_4(Bailey)) \u2192 p_6(Bailey)\np_4(Bailey)\np_9(Bailey)\n\u00acp_7(Bailey)\n\u00ac(p_1(Bailey) \u2295 p_4(Bailey))\np_4(Bailey) \u2192 p_4(Bailey)\np_5(Bailey) \u2228 \u00acp_5(Bailey)\np_9(Bailey) \u2192 p_9(Bailey)\n(p_4(Bailey) \u2227 p_1(Bailey)) \u2192 p_5(Bailey)",
            "Initial Goal": "p_5(Bailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Bailey)",
                    "-p_2(Bailey)",
                    "p_1(Bailey)",
                    "-p_0(Bailey)",
                    "-(p_3(Bailey) <-> p_9(Bailey))",
                    "-(p_7(Bailey) <-> p_9(Bailey))",
                    "all x (-p_2(x) -> -p_8(x))",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "(-(p_1(Bailey) <-> p_4(Bailey))) -> p_6(Bailey)",
                    "p_4(Bailey)",
                    "p_9(Bailey)",
                    "-p_7(Bailey)",
                    "-(-(p_1(Bailey) <-> p_4(Bailey)))",
                    "p_4(Bailey) -> p_4(Bailey)",
                    "p_5(Bailey) | -p_5(Bailey)",
                    "p_9(Bailey) -> p_9(Bailey)",
                    "(p_4(Bailey) & p_1(Bailey)) -> p_5(Bailey)"
                ],
                "formulas(goals)": [
                    "p_5(Bailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Bailey) \u2192 \u00acp_5(Bailey)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_4(Bailey) \u2227 p_1(Bailey)) \u2192 p_5(Bailey)"
                ]
            }
        }
    ]
}