{
    "background_story": "Lukas was a bright and vibrant young man who had been living with alopecia areata since his early teens. Despite the challenges of hair loss, he never let it define him. With the support of his loving family and friends, Lukas learned to embrace his unique appearance. He became an advocate for body positivity and self-acceptance, using his platform to raise awareness about alopecia and promote inclusivity. Lukas's confidence and resilience inspired those around him, and he went on to become a successful model and public speaker, proving that true beauty comes from within. His mantra, 'Bald is Beautiful,' became a rallying cry for many who struggled with similar conditions, and Lukas's story served as a powerful reminder of the importance of self-love and acceptance.",
    "predicates": [
        {
            "id": 0,
            "name": "embraces_self"
        },
        {
            "id": 1,
            "name": "is_passionate"
        },
        {
            "id": 2,
            "name": "accepts_flaws"
        },
        {
            "id": 3,
            "name": "values_life"
        },
        {
            "id": 4,
            "name": "is_vibrant"
        },
        {
            "id": 5,
            "name": "is_outgoing"
        },
        {
            "id": 6,
            "name": "is_confident"
        },
        {
            "id": 7,
            "name": "deserves_respect"
        },
        {
            "id": 8,
            "name": "has_Inner_strength"
        },
        {
            "id": 9,
            "name": "is_beautiful"
        },
        {
            "id": 10,
            "name": "is_authentic"
        },
        {
            "id": 11,
            "name": "loves_himself"
        },
        {
            "id": 12,
            "name": "is_unique"
        },
        {
            "id": 13,
            "name": "is_talented"
        },
        {
            "id": 14,
            "name": "has_positive_attitude"
        },
        {
            "id": 15,
            "name": "inspires_others"
        },
        {
            "id": 16,
            "name": "overcomes_adversity"
        },
        {
            "id": 17,
            "name": "feels_proud"
        },
        {
            "id": 18,
            "name": "faces_challenges"
        },
        {
            "id": 19,
            "name": "finds_happiness"
        },
        {
            "id": 20,
            "name": "speaks_truth"
        }
    ],
    "subject_name": "Lukas",
    "subject_category": "human",
    "keyword": "alopecic",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lukas",
            "text": "Lukas embraces himself.",
            "fol": "p_0(Lukas)",
            "str_fol": "embraces_self(Lukas)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lukas",
            "text": "Lukas is passionate.",
            "fol": "p_1(Lukas)",
            "str_fol": "is_passionate(Lukas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lukas",
            "text": "Lukas accepts his flaws.",
            "fol": "p_2(Lukas)",
            "str_fol": "accepts_flaws(Lukas)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lukas",
            "text": "Lukas values life.",
            "fol": "p_3(Lukas)",
            "str_fol": "values_life(Lukas)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lukas",
            "text": "Lukas is vibrant.",
            "fol": "p_4(Lukas)",
            "str_fol": "is_vibrant(Lukas)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lukas",
            "text": "Lukas is not outgoing.",
            "fol": "\u00acp_5(Lukas)",
            "str_fol": "\u00acis_outgoing(Lukas)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lukas",
            "text": "Lukas is authentic.",
            "fol": "p_10(Lukas)",
            "str_fol": "is_authentic(Lukas)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lukas",
            "text": "Lukas does not love himself.",
            "fol": "\u00acp_11(Lukas)",
            "str_fol": "\u00acloves_himself(Lukas)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Lukas",
            "text": "Lukas has inner strength.",
            "fol": "p_8(Lukas)",
            "str_fol": "has_Inner_strength(Lukas)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Lukas",
            "text": "Lukas is not confident.",
            "fol": "\u00acp_6(Lukas)",
            "str_fol": "\u00acis_confident(Lukas)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Lukas",
            "text": "Lukas is beautiful.",
            "fol": "p_9(Lukas)",
            "str_fol": "is_beautiful(Lukas)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Lukas",
            "text": "Lukas deserves respect.",
            "fol": "p_7(Lukas)",
            "str_fol": "deserves_respect(Lukas)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Lukas",
            "text": "Lukas deserves respect and is beautiful.",
            "fol": "p_7(Lukas) \u2227 is_beautiful(Lukas)",
            "str_fol": "deserves_respect(Lukas) \u2227 is_beautiful(Lukas)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Lukas",
            "text": "Lukas is vibrant.",
            "fol": "p_4(Lukas)",
            "str_fol": "is_vibrant(Lukas)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lukas",
            "text": "Lukas is not outgoing.",
            "fol": "\u00acp_5(Lukas)",
            "str_fol": "\u00acis_outgoing(Lukas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lukas",
            "text": "Lukas values life.",
            "fol": "p_3(Lukas)",
            "str_fol": "values_life(Lukas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lukas",
            "text": "Lukas accepts his flaws.",
            "fol": "p_2(Lukas)",
            "str_fol": "accepts_flaws(Lukas)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lukas",
            "text": "Lukas is passionate.",
            "fol": "p_1(Lukas)",
            "str_fol": "is_passionate(Lukas)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Lukas",
            "text": "Lukas embraces himself.",
            "fol": "p_0(Lukas)",
            "str_fol": "embraces_self(Lukas)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Lukas is vibrant, then he is either outgoing or authentic, but not both.",
            "fol": "p_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))",
            "str_fol": "is_vibrant(Lukas) \u2192 (is_outgoing(Lukas) \u2295 is_authentic(Lukas))"
        },
        {
            "id": 4,
            "text": "If Lukas loves himself, then he may not necessarily value life, and if Lukas values life, then he may not necessarily love himself.",
            "fol": "p_11(Lukas) \u2295 p_3(Lukas)",
            "str_fol": "loves_himself(Lukas) \u2295 values_life(Lukas)"
        },
        {
            "id": 3,
            "text": "Anyone who loves themselves or accepts their flaws has inner strength.",
            "fol": "\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((loves_himself(x) \u2228 accepts_flaws(x)) \u2192 has_Inner_strength(x))"
        },
        {
            "id": 2,
            "text": "If Lukas is authentic, then he is either passionate or confident, but not both.",
            "fol": "p_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))",
            "str_fol": "is_authentic(Lukas) \u2192 (is_passionate(Lukas) \u2295 is_confident(Lukas))"
        },
        {
            "id": 1,
            "text": "If someone embraces themselves, then they have inner strength and are beautiful.",
            "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (embraces_self(x) \u2192 (has_Inner_strength(x) \u2227 is_beautiful(x)))"
        },
        {
            "id": 0,
            "text": "Lukas is either confident or deserves respect, but not necessarily both.",
            "fol": "p_6(Lukas) \u2295 p_7(Lukas)",
            "str_fol": "is_confident(Lukas) \u2295 deserves_respect(Lukas)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Lukas",
            "text": "Lukas is vibrant.",
            "fol": "p_4(Lukas)",
            "str_fol": "is_vibrant(Lukas)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lukas",
            "text": "Lukas is not outgoing.",
            "fol": "\u00acp_5(Lukas)",
            "str_fol": "\u00acis_outgoing(Lukas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lukas",
            "text": "Lukas values life.",
            "fol": "p_3(Lukas)",
            "str_fol": "values_life(Lukas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lukas",
            "text": "Lukas accepts his flaws.",
            "fol": "p_2(Lukas)",
            "str_fol": "accepts_flaws(Lukas)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lukas",
            "text": "Lukas is passionate.",
            "fol": "p_1(Lukas)",
            "str_fol": "is_passionate(Lukas)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Lukas",
            "text": "Lukas embraces himself.",
            "fol": "p_0(Lukas)",
            "str_fol": "embraces_self(Lukas)",
            "negation": false
        },
        {
            "id": 5,
            "text": "If Lukas is vibrant, then he is either outgoing or authentic, but not both.",
            "fol": "p_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))",
            "str_fol": "is_vibrant(Lukas) \u2192 (is_outgoing(Lukas) \u2295 is_authentic(Lukas))"
        },
        {
            "id": 4,
            "text": "If Lukas loves himself, then he may not necessarily value life, and if Lukas values life, then he may not necessarily love himself.",
            "fol": "p_11(Lukas) \u2295 p_3(Lukas)",
            "str_fol": "loves_himself(Lukas) \u2295 values_life(Lukas)"
        },
        {
            "id": 3,
            "text": "Anyone who loves themselves or accepts their flaws has inner strength.",
            "fol": "\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((loves_himself(x) \u2228 accepts_flaws(x)) \u2192 has_Inner_strength(x))"
        },
        {
            "id": 2,
            "text": "If Lukas is authentic, then he is either passionate or confident, but not both.",
            "fol": "p_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))",
            "str_fol": "is_authentic(Lukas) \u2192 (is_passionate(Lukas) \u2295 is_confident(Lukas))"
        },
        {
            "id": 1,
            "text": "If someone embraces themselves, then they have inner strength and are beautiful.",
            "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (embraces_self(x) \u2192 (has_Inner_strength(x) \u2227 is_beautiful(x)))"
        },
        {
            "id": 0,
            "text": "Lukas is either confident or deserves respect, but not necessarily both.",
            "fol": "p_6(Lukas) \u2295 p_7(Lukas)",
            "str_fol": "is_confident(Lukas) \u2295 deserves_respect(Lukas)"
        }
    ],
    "context_fol": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_1(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\np_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2295 p_7(Lukas)",
    "conclusion": {
        "id": 12,
        "text": "Lukas deserves respect and is beautiful.",
        "fol": "p_7(Lukas) \u2227 p_9(Lukas)",
        "str_fol": "deserves_respect(Lukas) \u2227 is_beautiful(Lukas)"
    },
    "initial_answer": "True",
    "initial_goal": "p_7(Lukas) \u2227 p_9(Lukas)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Lukas",
                    "text": "Lukas is vibrant.",
                    "fol": "p_4(Lukas)",
                    "str_fol": "is_vibrant(Lukas)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Lukas",
                    "text": "Lukas is not outgoing.",
                    "fol": "\u00acp_5(Lukas)",
                    "str_fol": "\u00acis_outgoing(Lukas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Lukas is vibrant, then he is either outgoing or authentic, but not both.",
                    "fol": "p_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))",
                    "str_fol": "is_vibrant(Lukas) \u2192 (is_outgoing(Lukas) \u2295 is_authentic(Lukas))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Lukas",
                "text": "Lukas is authentic.",
                "fol": "p_10(Lukas)",
                "str_fol": "is_authentic(Lukas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Lukas",
                    "text": "Lukas values life.",
                    "fol": "p_3(Lukas)",
                    "str_fol": "values_life(Lukas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Lukas loves himself, then he may not necessarily value life, and if Lukas values life, then he may not necessarily love himself.",
                    "fol": "p_11(Lukas) \u2295 p_3(Lukas)",
                    "str_fol": "loves_himself(Lukas) \u2295 values_life(Lukas)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Lukas",
                "text": "Lukas does not love himself.",
                "fol": "\u00acp_11(Lukas)",
                "str_fol": "\u00acloves_himself(Lukas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Lukas",
                    "text": "Lukas does not love himself.",
                    "fol": "\u00acp_11(Lukas)",
                    "str_fol": "\u00acloves_himself(Lukas)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Lukas",
                    "text": "Lukas accepts his flaws.",
                    "fol": "p_2(Lukas)",
                    "str_fol": "accepts_flaws(Lukas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who loves themselves or accepts their flaws has inner strength.",
                    "fol": "\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((loves_himself(x) \u2228 accepts_flaws(x)) \u2192 has_Inner_strength(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Lukas",
                "text": "Lukas has inner strength.",
                "fol": "p_8(Lukas)",
                "str_fol": "has_Inner_strength(Lukas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lukas",
                    "text": "Lukas is authentic.",
                    "fol": "p_10(Lukas)",
                    "str_fol": "is_authentic(Lukas)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Lukas",
                    "text": "Lukas is passionate.",
                    "fol": "p_1(Lukas)",
                    "str_fol": "is_passionate(Lukas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Lukas is authentic, then he is either passionate or confident, but not both.",
                    "fol": "p_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))",
                    "str_fol": "is_authentic(Lukas) \u2192 (is_passionate(Lukas) \u2295 is_confident(Lukas))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lukas",
                "text": "Lukas is not confident.",
                "fol": "\u00acp_6(Lukas)",
                "str_fol": "\u00acis_confident(Lukas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Lukas",
                    "text": "Lukas embraces himself.",
                    "fol": "p_0(Lukas)",
                    "str_fol": "embraces_self(Lukas)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Lukas",
                    "text": "Lukas has inner strength.",
                    "fol": "p_8(Lukas)",
                    "str_fol": "has_Inner_strength(Lukas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone embraces themselves, then they have inner strength and are beautiful.",
                    "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))",
                    "str_fol": "\u2200x (embraces_self(x) \u2192 (has_Inner_strength(x) \u2227 is_beautiful(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lukas",
                "text": "Lukas is beautiful.",
                "fol": "p_9(Lukas)",
                "str_fol": "is_beautiful(Lukas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Lukas",
                    "text": "Lukas is not confident.",
                    "fol": "\u00acp_6(Lukas)",
                    "str_fol": "\u00acis_confident(Lukas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Lukas is either confident or deserves respect, but not necessarily both.",
                    "fol": "p_6(Lukas) \u2295 p_7(Lukas)",
                    "str_fol": "is_confident(Lukas) \u2295 deserves_respect(Lukas)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lukas",
                "text": "Lukas deserves respect.",
                "fol": "p_7(Lukas)",
                "str_fol": "deserves_respect(Lukas)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Lukas",
                    "text": "Lukas deserves respect.",
                    "fol": "p_7(Lukas)",
                    "str_fol": "deserves_respect(Lukas)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Lukas",
                    "text": "Lukas is beautiful.",
                    "fol": "p_9(Lukas)",
                    "str_fol": "is_beautiful(Lukas)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 12,
                "text": "Lukas deserves respect and is beautiful.",
                "fol": "p_7(Lukas) \u2227 p_9(Lukas)",
                "str_fol": "deserves_respect(Lukas) \u2227 is_beautiful(Lukas)"
            }
        }
    ],
    "proof_trace": "1 p_4(Lukas) -> -(p_5(Lukas) <-> p_10(Lukas)).  [assumption].\n4 p_10(Lukas) -> -(p_1(Lukas) <-> p_6(Lukas)).  [assumption].\n5 (all x (p_0(x) -> p_8(x) & p_9(x))).  [assumption].\n6 -(p_6(Lukas) <-> p_7(Lukas)).  [assumption].\n7 p_7(Lukas) & p_9(Lukas).  [goal].\n8 -p_4(Lukas) | p_5(Lukas) | p_10(Lukas).  [clausify(1)].\n9 p_4(Lukas).  [assumption].\n11 p_5(Lukas) | p_10(Lukas).  [resolve(8,a,9,a)].\n12 -p_5(Lukas).  [assumption].\n19 -p_10(Lukas) | -p_1(Lukas) | -p_6(Lukas).  [clausify(4)].\n20 p_1(Lukas).  [assumption].\n23 p_0(Lukas).  [assumption].\n24 -p_0(x) | p_9(x).  [clausify(5)].\n26 p_6(Lukas) | p_7(Lukas).  [clausify(6)].\n27 -p_10(Lukas) | -p_6(Lukas).  [resolve(19,b,20,a)].\n28 -p_10(Lukas) | p_7(Lukas).  [resolve(27,b,26,a)].\n29 -p_7(Lukas) | -p_9(Lukas).  [deny(7)].\n30 -p_10(Lukas) | -p_9(Lukas).  [resolve(28,b,29,a)].\n31 p_10(Lukas).  [resolve(11,a,12,a)].\n32 -p_9(Lukas).  [resolve(30,a,31,a)].\n33 p_9(Lukas).  [resolve(24,a,23,a)].\n34 $F.  [resolve(32,a,33,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_1(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\np_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2194 p_7(Lukas)",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas)",
                    "-p_5(Lukas)",
                    "p_3(Lukas)",
                    "p_2(Lukas)",
                    "p_1(Lukas)",
                    "p_0(Lukas)",
                    "p_4(Lukas) -> (-(p_5(Lukas) <-> p_10(Lukas)))",
                    "-(p_11(Lukas) <-> p_3(Lukas))",
                    "all x ((p_11(x) | p_2(x)) -> p_8(x))",
                    "p_10(Lukas) -> (-(p_1(Lukas) <-> p_6(Lukas)))",
                    "all x (p_0(x) -> (p_8(x) & p_9(x)))",
                    "p_6(Lukas) <-> p_7(Lukas)"
                ],
                "formulas(goals)": [
                    "-(p_7(Lukas) & p_9(Lukas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Lukas) \u2295 p_7(Lukas)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Lukas) \u2194 p_7(Lukas)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_1(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\np_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2194 p_7(Lukas)\np_10(Lukas)\np_9(Lukas)\n\u00acp_11(Lukas)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas)",
                    "-p_5(Lukas)",
                    "p_3(Lukas)",
                    "p_2(Lukas)",
                    "p_1(Lukas)",
                    "p_0(Lukas)",
                    "p_4(Lukas) -> (-(p_5(Lukas) <-> p_10(Lukas)))",
                    "-(p_11(Lukas) <-> p_3(Lukas))",
                    "all x ((p_11(x) | p_2(x)) -> p_8(x))",
                    "p_10(Lukas) -> (-(p_1(Lukas) <-> p_6(Lukas)))",
                    "all x (p_0(x) -> (p_8(x) & p_9(x)))",
                    "p_6(Lukas) <-> p_7(Lukas)",
                    "p_10(Lukas)",
                    "p_9(Lukas)",
                    "-p_11(Lukas)",
                    "all x (-p_8(x) -> (-p_11(x) & -p_2(x)))"
                ],
                "formulas(goals)": [
                    "-(p_7(Lukas) & p_9(Lukas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Lukas)",
                    "p_9(Lukas)",
                    "\u00acp_11(Lukas)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\n\u00acp_1(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\np_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2194 p_7(Lukas)\np_10(Lukas)\np_9(Lukas)\n\u00acp_11(Lukas)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas)",
                    "-p_5(Lukas)",
                    "p_3(Lukas)",
                    "p_2(Lukas)",
                    "-p_1(Lukas)",
                    "p_0(Lukas)",
                    "p_4(Lukas) -> (p_5(Lukas) | p_10(Lukas)) & (-p_5(Lukas) | -p_10(Lukas))",
                    "(p_11(Lukas) | p_3(Lukas)) & (-p_11(Lukas) | -p_3(Lukas))",
                    "all x ((p_11(x) | p_2(x)) -> p_8(x))",
                    "p_10(Lukas) -> (p_1(Lukas) | p_6(Lukas)) & (-p_1(Lukas) | -p_6(Lukas))",
                    "all x (p_0(x) -> (p_8(x) & p_9(x)))",
                    "p_6(Lukas) <-> p_7(Lukas)",
                    "p_10(Lukas)",
                    "p_9(Lukas)",
                    "-p_11(Lukas)",
                    "all x (-p_8(x) -> (-p_11(x) & -p_2(x)))"
                ],
                "formulas(goals)": [
                    "p_7(Lukas) & p_9(Lukas)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_1(Lukas)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_1(Lukas)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\np_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2194 p_7(Lukas)\np_10(Lukas)\np_9(Lukas)\n\u00acp_11(Lukas)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))\np_1(Lukas)",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas)",
                    "-p_5(Lukas)",
                    "p_3(Lukas)",
                    "p_2(Lukas)",
                    "p_0(Lukas)",
                    "p_4(Lukas) -> (-(p_5(Lukas) <-> p_10(Lukas)))",
                    "(-(p_11(Lukas) <-> p_3(Lukas)))",
                    "all x ((p_11(x) | p_2(x)) -> p_8(x))",
                    "p_10(Lukas) -> (-(p_1(Lukas) <-> p_6(Lukas)))",
                    "all x (p_0(x) -> (p_8(x) & p_9(x)))",
                    "(p_6(Lukas) <-> p_7(Lukas))",
                    "p_10(Lukas)",
                    "p_9(Lukas)",
                    "-p_11(Lukas)",
                    "all x (-p_8(x) -> (-p_11(x) & -p_2(x)))",
                    "p_1(Lukas)"
                ],
                "formulas(goals)": [
                    "-(p_7(Lukas) & p_9(Lukas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Lukas)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Lukas)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\np_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2192 p_7(Lukas)\np_7(Lukas) \u2192 p_6(Lukas)\np_10(Lukas)\np_9(Lukas)\n\u00acp_11(Lukas)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))\np_1(Lukas)\np_8(Lukas)\n\u00acp_7(Lukas)",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas)",
                    "-p_5(Lukas)",
                    "p_3(Lukas)",
                    "p_2(Lukas)",
                    "p_0(Lukas)",
                    "p_4(Lukas) -> (-(p_5(Lukas) <-> p_10(Lukas)))",
                    "(-(p_11(Lukas) <-> p_3(Lukas)))",
                    "all x ((p_11(x) | p_2(x)) -> p_8(x))",
                    "p_10(Lukas) -> (-(p_1(Lukas) <-> p_6(Lukas)))",
                    "all x (p_0(x) -> (p_8(x) & p_9(x)))",
                    "p_6(Lukas) -> p_7(Lukas)",
                    "p_7(Lukas) -> p_6(Lukas)",
                    "p_10(Lukas)",
                    "p_9(Lukas)",
                    "-p_11(Lukas)",
                    "all x (-p_8(x) -> (-p_11(x) & -p_2(x)))",
                    "p_1(Lukas)",
                    "p_8(Lukas)",
                    "-p_7(Lukas)"
                ],
                "formulas(goals)": [
                    "-(p_7(Lukas) & p_9(Lukas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Lukas) \u2194 p_7(Lukas)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Lukas) \u2192 p_7(Lukas)",
                    "p_7(Lukas) \u2192 p_6(Lukas)",
                    "p_8(Lukas)",
                    "\u00acp_7(Lukas)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2192 p_7(Lukas)\np_7(Lukas) \u2192 p_6(Lukas)\np_10(Lukas)\np_9(Lukas)\n\u00acp_11(Lukas)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))\np_1(Lukas)\np_8(Lukas)\np_7(Lukas)",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas)",
                    "-p_5(Lukas)",
                    "p_3(Lukas)",
                    "p_2(Lukas)",
                    "p_0(Lukas)",
                    "p_4(Lukas) -> ( (p_5(Lukas) | p_10(Lukas)) & (-p_5(Lukas) | -p_10(Lukas)) )",
                    "(p_11(Lukas) | p_3(Lukas)) & (-p_11(Lukas) | -p_3(Lukas))",
                    "all x ( (p_11(x) | p_2(x)) -> p_8(x) )",
                    "all x ( p_0(x) -> (p_8(x) & p_9(x)) )",
                    "p_6(Lukas) -> p_7(Lukas)",
                    "p_7(Lukas) -> p_6(Lukas)",
                    "p_10(Lukas)",
                    "p_9(Lukas)",
                    "-p_11(Lukas)",
                    "all x ( -p_8(x) -> (-p_11(x) & -p_2(x)) )",
                    "p_1(Lukas)",
                    "p_8(Lukas)",
                    "p_7(Lukas)"
                ],
                "formulas(goals)": [
                    "p_7(Lukas) & p_9(Lukas)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Lukas)"
                ],
                "removed_rules": [
                    "p_10(Lukas) \u2192 (p_1(Lukas) \u2295 p_6(Lukas))"
                ],
                "added_facts": [
                    "p_7(Lukas)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lukas)\n\u00acp_5(Lukas)\np_3(Lukas)\np_2(Lukas)\np_0(Lukas)\np_4(Lukas) \u2192 (p_5(Lukas) \u2295 p_10(Lukas))\np_11(Lukas) \u2295 p_3(Lukas)\n\u2200x ((p_11(x) \u2228 p_2(x)) \u2192 p_8(x))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_6(Lukas) \u2192 p_7(Lukas)\np_7(Lukas) \u2192 p_6(Lukas)\np_10(Lukas)\np_9(Lukas)\n\u00acp_11(Lukas)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_2(x)))\np_1(Lukas)\np_8(Lukas)\np_3(Lukas) \u2192 \u00acp_7(Lukas)",
            "Initial Goal": "p_7(Lukas) \u2227 p_9(Lukas)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lukas).",
                    "-p_5(Lukas).",
                    "p_3(Lukas).",
                    "p_2(Lukas).",
                    "p_0(Lukas).",
                    "p_4(Lukas) -> (-(p_5(Lukas) <-> p_10(Lukas))).",
                    "-(p_11(Lukas) <-> p_3(Lukas)).",
                    "all x ((p_11(x) | p_2(x)) -> p_8(x)).",
                    "all x (p_0(x) -> (p_8(x) & p_9(x))).",
                    "p_6(Lukas) -> p_7(Lukas).",
                    "p_7(Lukas) -> p_6(Lukas).",
                    "p_10(Lukas).",
                    "p_9(Lukas).",
                    "-p_11(Lukas).",
                    "all x (-p_8(x) -> (-p_11(x) & -p_2(x))).",
                    "p_1(Lukas).",
                    "p_8(Lukas).",
                    "p_3(Lukas) -> -p_7(Lukas)."
                ],
                "formulas(goals)": [
                    "-(p_7(Lukas) & p_9(Lukas))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_7(Lukas)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Lukas) \u2192 \u00acp_7(Lukas)"
                ]
            }
        }
    ]
}