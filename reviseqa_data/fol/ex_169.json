{
    "background_story": "Kaizen was a talented yet fragile artist, whose delicate hands crafted exquisite glass sculptures. His pieces were renowned for their beauty and intricacy, but also for their vulnerability to breakage. Kaizen's own life was a reflection of his art - he struggled with mental health issues and physical ailments that made everyday tasks a challenge. Despite his fragility, he persevered, using his art as a means of expression and healing. Kaizen's studio was a sanctuary, where he could temporarily escape the burdens of his fragile existence. His art became a testament to the beauty that can emerge from vulnerability, and the strength that can be found in embracing one's fragility.",
    "predicates": [
        {
            "id": 0,
            "name": "experience_suffering"
        },
        {
            "id": 1,
            "name": "seek_solace"
        },
        {
            "id": 2,
            "name": "find_inner_strength"
        },
        {
            "id": 3,
            "name": "is_talented"
        },
        {
            "id": 4,
            "name": "gets_recognition"
        },
        {
            "id": 5,
            "name": "feels_fulfilled"
        },
        {
            "id": 6,
            "name": "struggle_with_pain"
        },
        {
            "id": 7,
            "name": "face_vulnerability"
        },
        {
            "id": 8,
            "name": "create_beautiful_art"
        },
        {
            "id": 9,
            "name": "express_emotion"
        },
        {
            "id": 10,
            "name": "find_healing"
        },
        {
            "id": 11,
            "name": "overcome_adversity"
        },
        {
            "id": 12,
            "name": "pursue_passion"
        },
        {
            "id": 13,
            "name": "achieve_success"
        },
        {
            "id": 14,
            "name": "is_sensitive"
        },
        {
            "id": 15,
            "name": "is_innovative"
        },
        {
            "id": 16,
            "name": "experience_empathy"
        },
        {
            "id": 17,
            "name": "make_meaningful_connections"
        },
        {
            "id": 18,
            "name": "feels_deeply"
        },
        {
            "id": 19,
            "name": "feel_deeply"
        },
        {
            "id": 20,
            "name": "fights_hard"
        },
        {
            "id": 21,
            "name": "stays_resilient"
        },
        {
            "id": 22,
            "name": "makes_art"
        },
        {
            "id": 23,
            "name": "works_hard"
        }
    ],
    "subject_name": "Kaizen",
    "subject_category": "human",
    "keyword": "fragile",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kaizen",
            "text": "Kaizen does not experience suffering.",
            "fol": "\u00acp_0(Kaizen)",
            "str_fol": "\u00acexperience_suffering(Kaizen)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kaizen",
            "text": "Kaizen seeks solace in his studio.",
            "fol": "p_1(Kaizen)",
            "str_fol": "seek_solace(Kaizen)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kaizen",
            "text": "Kaizen does not find inner strength.",
            "fol": "\u00acp_2(Kaizen)",
            "str_fol": "\u00acfind_inner_strength(Kaizen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kaizen",
            "text": "Kaizen is talented.",
            "fol": "p_3(Kaizen)",
            "str_fol": "is_talented(Kaizen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kaizen",
            "text": "Kaizen gets recognition.",
            "fol": "p_4(Kaizen)",
            "str_fol": "gets_recognition(Kaizen)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kaizen",
            "text": "Kaizen does not feel fulfilled.",
            "fol": "\u00acp_5(Kaizen)",
            "str_fol": "\u00acfeels_fulfilled(Kaizen)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Kaizen",
            "text": "Kaizen does not achieve success.",
            "fol": "\u00acp_13(Kaizen)",
            "str_fol": "\u00acachieve_success(Kaizen)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kaizen",
            "text": "Kaizen pursues his passion.",
            "fol": "p_12(Kaizen)",
            "str_fol": "pursue_passion(Kaizen)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Kaizen",
            "text": "Kaizen does not overcome adversity.",
            "fol": "\u00acp_11(Kaizen)",
            "str_fol": "\u00acovercome_adversity(Kaizen)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Kaizen",
            "text": "Kaizen does not struggle with pain.",
            "fol": "\u00acp_6(Kaizen)",
            "str_fol": "\u00acstruggle_with_pain(Kaizen)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Kaizen",
            "text": "Kaizen expresses emotion.",
            "fol": "p_9(Kaizen)",
            "str_fol": "express_emotion(Kaizen)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Kaizen",
            "text": "Kaizen does not find healing.",
            "fol": "\u00acp_10(Kaizen)",
            "str_fol": "\u00acfind_healing(Kaizen)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Kaizen",
            "text": "Kaizen creates beautiful art.",
            "fol": "p_8(Kaizen)",
            "str_fol": "create_beautiful_art(Kaizen)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Kaizen",
            "text": "Kaizen faces vulnerability.",
            "fol": "p_7(Kaizen)",
            "str_fol": "face_vulnerability(Kaizen)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Kaizen",
            "text": "Kaizen gets recognition.",
            "fol": "p_4(Kaizen)",
            "str_fol": "gets_recognition(Kaizen)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kaizen",
            "text": "Kaizen does not feel fulfilled.",
            "fol": "\u00acp_5(Kaizen)",
            "str_fol": "\u00acfeels_fulfilled(Kaizen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kaizen",
            "text": "Kaizen is talented.",
            "fol": "p_3(Kaizen)",
            "str_fol": "is_talented(Kaizen)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kaizen",
            "text": "Kaizen does not experience suffering.",
            "fol": "\u00acp_0(Kaizen)",
            "str_fol": "\u00acexperience_suffering(Kaizen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kaizen",
            "text": "Kaizen does not find inner strength.",
            "fol": "\u00acp_2(Kaizen)",
            "str_fol": "\u00acfind_inner_strength(Kaizen)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kaizen",
            "text": "Kaizen seeks solace in his studio.",
            "fol": "p_1(Kaizen)",
            "str_fol": "seek_solace(Kaizen)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If someone achieves success and gets recognition, then they feel fulfilled.",
            "fol": "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((achieve_success(x) \u2227 gets_recognition(x)) \u2192 feels_fulfilled(x))"
        },
        {
            "id": 6,
            "text": "If Kaizen is talented, then he either achieves success or pursues his passion, but not both.",
            "fol": "p_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))",
            "str_fol": "is_talented(Kaizen) \u2192 (achieve_success(Kaizen) \u2295 pursue_passion(Kaizen))"
        },
        {
            "id": 5,
            "text": "A person either pursues their passion or overcomes adversity, but not necessarily both.",
            "fol": "\u2200x (p_12(x) \u2295 p_11(x))",
            "str_fol": "\u2200x (pursue_passion(x) \u2295 overcome_adversity(x))"
        },
        {
            "id": 4,
            "text": "If Kaizen either experiences suffering or struggles with pain (but not both), then he can find inner strength.",
            "fol": "(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)",
            "str_fol": "(experience_suffering(Kaizen) \u2295 struggle_with_pain(Kaizen)) \u2192 find_inner_strength(Kaizen)"
        },
        {
            "id": 3,
            "text": "Kaizen either overcomes adversity or expresses emotion, but not necessarily both.",
            "fol": "p_11(Kaizen) \u2295 p_9(Kaizen)",
            "str_fol": "overcome_adversity(Kaizen) \u2295 express_emotion(Kaizen)"
        },
        {
            "id": 2,
            "text": "For Kaizen, finding healing through his art and seeking solace in his studio are mutually exclusive, meaning that he can either find healing or seek solace, but not both simultaneously.",
            "fol": "p_10(Kaizen) \u2295 p_1(Kaizen)",
            "str_fol": "find_healing(Kaizen) \u2295 seek_solace(Kaizen)"
        },
        {
            "id": 1,
            "text": "Anyone who expresses emotion can either create beautiful art or find healing.",
            "fol": "\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (express_emotion(x) \u2192 (create_beautiful_art(x) \u2228 find_healing(x)))"
        },
        {
            "id": 0,
            "text": "If Kaizen struggles with pain or faces vulnerability, then he can create beautiful art.",
            "fol": "(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)",
            "str_fol": "(struggle_with_pain(Kaizen) \u2228 face_vulnerability(Kaizen)) \u2192 create_beautiful_art(Kaizen)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Kaizen",
            "text": "Kaizen gets recognition.",
            "fol": "p_4(Kaizen)",
            "str_fol": "gets_recognition(Kaizen)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kaizen",
            "text": "Kaizen does not feel fulfilled.",
            "fol": "\u00acp_5(Kaizen)",
            "str_fol": "\u00acfeels_fulfilled(Kaizen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kaizen",
            "text": "Kaizen is talented.",
            "fol": "p_3(Kaizen)",
            "str_fol": "is_talented(Kaizen)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kaizen",
            "text": "Kaizen does not experience suffering.",
            "fol": "\u00acp_0(Kaizen)",
            "str_fol": "\u00acexperience_suffering(Kaizen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kaizen",
            "text": "Kaizen does not find inner strength.",
            "fol": "\u00acp_2(Kaizen)",
            "str_fol": "\u00acfind_inner_strength(Kaizen)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kaizen",
            "text": "Kaizen seeks solace in his studio.",
            "fol": "p_1(Kaizen)",
            "str_fol": "seek_solace(Kaizen)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If someone achieves success and gets recognition, then they feel fulfilled.",
            "fol": "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((achieve_success(x) \u2227 gets_recognition(x)) \u2192 feels_fulfilled(x))"
        },
        {
            "id": 6,
            "text": "If Kaizen is talented, then he either achieves success or pursues his passion, but not both.",
            "fol": "p_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))",
            "str_fol": "is_talented(Kaizen) \u2192 (achieve_success(Kaizen) \u2295 pursue_passion(Kaizen))"
        },
        {
            "id": 5,
            "text": "A person either pursues their passion or overcomes adversity, but not necessarily both.",
            "fol": "\u2200x (p_12(x) \u2295 p_11(x))",
            "str_fol": "\u2200x (pursue_passion(x) \u2295 overcome_adversity(x))"
        },
        {
            "id": 4,
            "text": "If Kaizen either experiences suffering or struggles with pain (but not both), then he can find inner strength.",
            "fol": "(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)",
            "str_fol": "(experience_suffering(Kaizen) \u2295 struggle_with_pain(Kaizen)) \u2192 find_inner_strength(Kaizen)"
        },
        {
            "id": 3,
            "text": "Kaizen either overcomes adversity or expresses emotion, but not necessarily both.",
            "fol": "p_11(Kaizen) \u2295 p_9(Kaizen)",
            "str_fol": "overcome_adversity(Kaizen) \u2295 express_emotion(Kaizen)"
        },
        {
            "id": 2,
            "text": "For Kaizen, finding healing through his art and seeking solace in his studio are mutually exclusive, meaning that he can either find healing or seek solace, but not both simultaneously.",
            "fol": "p_10(Kaizen) \u2295 p_1(Kaizen)",
            "str_fol": "find_healing(Kaizen) \u2295 seek_solace(Kaizen)"
        },
        {
            "id": 1,
            "text": "Anyone who expresses emotion can either create beautiful art or find healing.",
            "fol": "\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (express_emotion(x) \u2192 (create_beautiful_art(x) \u2228 find_healing(x)))"
        },
        {
            "id": 0,
            "text": "If Kaizen struggles with pain or faces vulnerability, then he can create beautiful art.",
            "fol": "(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)",
            "str_fol": "(struggle_with_pain(Kaizen) \u2228 face_vulnerability(Kaizen)) \u2192 create_beautiful_art(Kaizen)"
        }
    ],
    "context_fol": "p_4(Kaizen)\n\u00acp_5(Kaizen)\np_3(Kaizen)\n\u00acp_0(Kaizen)\n\u00acp_2(Kaizen)\np_1(Kaizen)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\np_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))\n\u2200x (p_12(x) \u2295 p_11(x))\n(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)\np_11(Kaizen) \u2295 p_9(Kaizen)\np_10(Kaizen) \u2295 p_1(Kaizen)\n\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)",
    "conclusion": {
        "id": 13,
        "subject": "Kaizen",
        "text": "Kaizen faces vulnerability.",
        "fol": "p_7(Kaizen)",
        "str_fol": "face_vulnerability(Kaizen)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Kaizen)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kaizen",
                    "text": "Kaizen gets recognition.",
                    "fol": "p_4(Kaizen)",
                    "str_fol": "gets_recognition(Kaizen)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Kaizen",
                    "text": "Kaizen does not feel fulfilled.",
                    "fol": "\u00acp_5(Kaizen)",
                    "str_fol": "\u00acfeels_fulfilled(Kaizen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If someone achieves success and gets recognition, then they feel fulfilled.",
                    "fol": "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((achieve_success(x) \u2227 gets_recognition(x)) \u2192 feels_fulfilled(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kaizen",
                "text": "Kaizen does not achieve success.",
                "fol": "\u00acp_13(Kaizen)",
                "str_fol": "\u00acachieve_success(Kaizen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kaizen",
                    "text": "Kaizen is talented.",
                    "fol": "p_3(Kaizen)",
                    "str_fol": "is_talented(Kaizen)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Kaizen",
                    "text": "Kaizen does not achieve success.",
                    "fol": "\u00acp_13(Kaizen)",
                    "str_fol": "\u00acachieve_success(Kaizen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Kaizen is talented, then he either achieves success or pursues his passion, but not both.",
                    "fol": "p_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))",
                    "str_fol": "is_talented(Kaizen) \u2192 (achieve_success(Kaizen) \u2295 pursue_passion(Kaizen))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kaizen",
                "text": "Kaizen pursues his passion.",
                "fol": "p_12(Kaizen)",
                "str_fol": "pursue_passion(Kaizen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kaizen",
                    "text": "Kaizen pursues his passion.",
                    "fol": "p_12(Kaizen)",
                    "str_fol": "pursue_passion(Kaizen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "A person either pursues their passion or overcomes adversity, but not necessarily both.",
                    "fol": "\u2200x (p_12(x) \u2295 p_11(x))",
                    "str_fol": "\u2200x (pursue_passion(x) \u2295 overcome_adversity(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kaizen",
                "text": "Kaizen does not overcome adversity.",
                "fol": "\u00acp_11(Kaizen)",
                "str_fol": "\u00acovercome_adversity(Kaizen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kaizen",
                    "text": "Kaizen does not experience suffering.",
                    "fol": "\u00acp_0(Kaizen)",
                    "str_fol": "\u00acexperience_suffering(Kaizen)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Kaizen",
                    "text": "Kaizen does not find inner strength.",
                    "fol": "\u00acp_2(Kaizen)",
                    "str_fol": "\u00acfind_inner_strength(Kaizen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Kaizen either experiences suffering or struggles with pain (but not both), then he can find inner strength.",
                    "fol": "(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)",
                    "str_fol": "(experience_suffering(Kaizen) \u2295 struggle_with_pain(Kaizen)) \u2192 find_inner_strength(Kaizen)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Kaizen",
                "text": "Kaizen does not struggle with pain.",
                "fol": "\u00acp_6(Kaizen)",
                "str_fol": "\u00acstruggle_with_pain(Kaizen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Kaizen",
                    "text": "Kaizen does not overcome adversity.",
                    "fol": "\u00acp_11(Kaizen)",
                    "str_fol": "\u00acovercome_adversity(Kaizen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Kaizen either overcomes adversity or expresses emotion, but not necessarily both.",
                    "fol": "p_11(Kaizen) \u2295 p_9(Kaizen)",
                    "str_fol": "overcome_adversity(Kaizen) \u2295 express_emotion(Kaizen)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Kaizen",
                "text": "Kaizen expresses emotion.",
                "fol": "p_9(Kaizen)",
                "str_fol": "express_emotion(Kaizen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Kaizen",
                    "text": "Kaizen seeks solace in his studio.",
                    "fol": "p_1(Kaizen)",
                    "str_fol": "seek_solace(Kaizen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For Kaizen, finding healing through his art and seeking solace in his studio are mutually exclusive, meaning that he can either find healing or seek solace, but not both simultaneously.",
                    "fol": "p_10(Kaizen) \u2295 p_1(Kaizen)",
                    "str_fol": "find_healing(Kaizen) \u2295 seek_solace(Kaizen)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Kaizen",
                "text": "Kaizen does not find healing.",
                "fol": "\u00acp_10(Kaizen)",
                "str_fol": "\u00acfind_healing(Kaizen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Kaizen",
                    "text": "Kaizen expresses emotion.",
                    "fol": "p_9(Kaizen)",
                    "str_fol": "express_emotion(Kaizen)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Kaizen",
                    "text": "Kaizen does not find healing.",
                    "fol": "\u00acp_10(Kaizen)",
                    "str_fol": "\u00acfind_healing(Kaizen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who expresses emotion can either create beautiful art or find healing.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (express_emotion(x) \u2192 (create_beautiful_art(x) \u2228 find_healing(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Kaizen",
                "text": "Kaizen creates beautiful art.",
                "fol": "p_8(Kaizen)",
                "str_fol": "create_beautiful_art(Kaizen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Kaizen",
                    "text": "Kaizen does not struggle with pain.",
                    "fol": "\u00acp_6(Kaizen)",
                    "str_fol": "\u00acstruggle_with_pain(Kaizen)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Kaizen",
                    "text": "Kaizen creates beautiful art.",
                    "fol": "p_8(Kaizen)",
                    "str_fol": "create_beautiful_art(Kaizen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Kaizen struggles with pain or faces vulnerability, then he can create beautiful art.",
                    "fol": "(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)",
                    "str_fol": "(struggle_with_pain(Kaizen) \u2228 face_vulnerability(Kaizen)) \u2192 create_beautiful_art(Kaizen)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Kaizen)\n\u00acp_5(Kaizen)\np_3(Kaizen)\n\u00acp_0(Kaizen)\n\u00acp_2(Kaizen)\np_1(Kaizen)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\np_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))\n\u2200x (p_12(x) \u2295 p_11(x))\n(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)\np_11(Kaizen) \u2295 p_9(Kaizen)\np_10(Kaizen) \u2295 p_1(Kaizen)\n\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Kaizen).",
                    "-p_5(Kaizen).",
                    "p_3(Kaizen).",
                    "-p_0(Kaizen).",
                    "-p_2(Kaizen).",
                    "p_1(Kaizen).",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x)).",
                    "p_3(Kaizen) -> (-(p_13(Kaizen) <-> p_12(Kaizen))).",
                    "all x (-(p_12(x) <-> p_11(x))).",
                    "(-(p_0(Kaizen) <-> p_6(Kaizen))) -> p_2(Kaizen).",
                    "-(p_11(Kaizen) <-> p_9(Kaizen)).",
                    "-(p_10(Kaizen) <-> p_1(Kaizen)).",
                    "all x (p_9(x) -> (p_8(x) | p_10(x))).",
                    "(p_6(Kaizen) | p_7(Kaizen)) -> p_8(Kaizen).",
                    "p_3(Kaizen) -> p_7(Kaizen)."
                ],
                "formulas(goals)": [
                    "p_7(Kaizen)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Kaizen) \u2192 p_7(Kaizen)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Kaizen)\n\u00acp_5(Kaizen)\np_3(Kaizen)\n\u00acp_0(Kaizen)\n\u00acp_2(Kaizen)\np_1(Kaizen)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\np_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))\n\u2200x (p_12(x) \u2295 p_11(x))\n(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)\np_11(Kaizen) \u2295 p_9(Kaizen)\np_10(Kaizen) \u2295 p_1(Kaizen)\n\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)\np_7(Kaizen)",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Kaizen)",
                    "-p_5(Kaizen)",
                    "p_3(Kaizen)",
                    "-p_0(Kaizen)",
                    "-p_2(Kaizen)",
                    "p_1(Kaizen)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "p_3(Kaizen) -> (-(p_13(Kaizen) <-> p_12(Kaizen)))",
                    "all x (-(p_12(x) <-> p_11(x)))",
                    "(-(p_0(Kaizen) <-> p_6(Kaizen))) -> p_2(Kaizen)",
                    "(-(p_11(Kaizen) <-> p_9(Kaizen)))",
                    "(-(p_10(Kaizen) <-> p_1(Kaizen)))",
                    "all x (p_9(x) -> (p_8(x) | p_10(x)))",
                    "(p_6(Kaizen) | p_7(Kaizen)) -> p_8(Kaizen)",
                    "p_7(Kaizen)"
                ],
                "formulas(goals)": [
                    "p_7(Kaizen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Kaizen)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Kaizen)\n\u00acp_5(Kaizen)\np_3(Kaizen)\n\u00acp_0(Kaizen)\n\u00acp_2(Kaizen)\np_1(Kaizen)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\np_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))\n\u2200x (p_12(x) \u2295 p_11(x))\n(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)\np_11(Kaizen) \u2295 p_9(Kaizen)\np_10(Kaizen) \u2295 p_1(Kaizen)\n\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)\np_7(Kaizen)\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_13(x) \u2228 \u00acp_4(x)))\n\u2200x (p_12(x) \u2228 p_11(x))\n\u2200x (\u00acp_12(x) \u2228 \u00acp_11(x))\n\u00acp_10(Kaizen)\n(\u00acp_8(Kaizen) \u2192 (\u00acp_6(Kaizen) \u2227 \u00acp_7(Kaizen)))\np_8(Kaizen)\n\u00acp_6(Kaizen)",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Kaizen)",
                    "-p_5(Kaizen)",
                    "p_3(Kaizen)",
                    "-p_0(Kaizen)",
                    "-p_2(Kaizen)",
                    "p_1(Kaizen)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "p_3(Kaizen) -> (-(p_13(Kaizen) <-> p_12(Kaizen)))",
                    "all x (-(p_12(x) <-> p_11(x)))",
                    "(-(p_0(Kaizen) <-> p_6(Kaizen))) -> p_2(Kaizen)",
                    "-(p_11(Kaizen) <-> p_9(Kaizen))",
                    "-(p_10(Kaizen) <-> p_1(Kaizen))",
                    "all x (p_9(x) -> (p_8(x) | p_10(x)))",
                    "(p_6(Kaizen) | p_7(Kaizen)) -> p_8(Kaizen)",
                    "p_7(Kaizen)",
                    "all x (-p_5(x) -> (-p_13(x) | -p_4(x)))",
                    "all x (p_12(x) | p_11(x))",
                    "all x (-p_12(x) | -p_11(x))",
                    "-p_10(Kaizen)",
                    "-p_8(Kaizen) -> (-p_6(Kaizen) & -p_7(Kaizen))",
                    "p_8(Kaizen)",
                    "-p_6(Kaizen)"
                ],
                "formulas(goals)": [
                    "p_7(Kaizen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Kaizen)",
                    "p_8(Kaizen)",
                    "\u00acp_6(Kaizen)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_5(x) \u2192 (\u00acp_13(x) \u2228 \u00acp_4(x)))",
                    "\u2200x (p_12(x) \u2228 p_11(x))",
                    "\u2200x (\u00acp_12(x) \u2228 \u00acp_11(x))",
                    "(\u00acp_8(Kaizen) \u2192 (\u00acp_6(Kaizen) \u2227 \u00acp_7(Kaizen)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Kaizen)\n\u00acp_5(Kaizen)\np_3(Kaizen)\n\u00acp_0(Kaizen)\n\u00acp_2(Kaizen)\np_1(Kaizen)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\np_3(Kaizen) \u2192 (p_13(Kaizen) \u2295 p_12(Kaizen))\n\u2200x (p_12(x) \u2295 p_11(x))\n(p_0(Kaizen) \u2295 p_6(Kaizen)) \u2192 p_2(Kaizen)\np_11(Kaizen) \u2295 p_9(Kaizen)\np_10(Kaizen) \u2295 p_1(Kaizen)\n\u2200x (p_9(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_13(x) \u2228 \u00acp_4(x)))\n\u2200x (p_12(x) \u2228 p_11(x))\n\u2200x (\u00acp_12(x) \u2228 \u00acp_11(x))\n\u00acp_10(Kaizen)\n(\u00acp_8(Kaizen) \u2192 (\u00acp_6(Kaizen) \u2227 \u00acp_7(Kaizen)))\n\u00acp_8(Kaizen)\n\u00acp_6(Kaizen)",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Kaizen).",
                    "-p_5(Kaizen).",
                    "p_3(Kaizen).",
                    "-p_0(Kaizen).",
                    "-p_2(Kaizen).",
                    "p_1(Kaizen).",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x)).",
                    "p_3(Kaizen) -> (-(p_13(Kaizen) <-> p_12(Kaizen))).",
                    "all x (-(p_12(x) <-> p_11(x))).",
                    "(-(p_0(Kaizen) <-> p_6(Kaizen))) -> p_2(Kaizen).",
                    "-(p_11(Kaizen) <-> p_9(Kaizen)).",
                    "-(p_10(Kaizen) <-> p_1(Kaizen)).",
                    "all x (p_9(x) -> (p_8(x) | p_10(x))).",
                    "(p_6(Kaizen) | p_7(Kaizen)) -> p_8(Kaizen).",
                    "all x (-p_5(x) -> (-p_13(x) | -p_4(x))).",
                    "all x (p_12(x) | p_11(x)).",
                    "all x (-p_12(x) | -p_11(x)).",
                    "-p_10(Kaizen).",
                    "(-p_8(Kaizen) -> (-p_6(Kaizen) & -p_7(Kaizen))).",
                    "-p_8(Kaizen).",
                    "-p_6(Kaizen)."
                ],
                "formulas(goals)": [
                    "-p_7(Kaizen)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_7(Kaizen)",
                    "p_8(Kaizen)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Kaizen)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_8(Kaizen)\n\u00acp_6(Kaizen)\n(\u00acp_6(Kaizen) \u2192 p_7(Kaizen))",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_8(Kaizen)",
                    "-p_6(Kaizen)",
                    "(-p_6(Kaizen) -> p_7(Kaizen))"
                ],
                "formulas(goals)": [
                    "p_7(Kaizen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Kaizen) \u2228 p_7(Kaizen)) \u2192 p_8(Kaizen)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Kaizen) \u2192 p_7(Kaizen)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_8(Kaizen)\n\u00acp_6(Kaizen)\n(\u00acp_6(Kaizen) \u2192 p_7(Kaizen))\np_7(Kaizen)\n(p_6(Kaizen) \u2228 p_7(Kaizen))",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_8(Kaizen)",
                    "-p_6(Kaizen)",
                    "(-p_6(Kaizen) -> p_7(Kaizen))",
                    "p_7(Kaizen)",
                    "(p_6(Kaizen) | p_7(Kaizen))"
                ],
                "formulas(goals)": [
                    "p_7(Kaizen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Kaizen)"
                ],
                "added_rules": [
                    "(p_6(Kaizen) \u2228 p_7(Kaizen))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_8(Kaizen)\n\u00acp_6(Kaizen)\n(\u00acp_6(Kaizen) \u2192 p_7(Kaizen))\np_7(Kaizen)\n(p_6(Kaizen) \u2228 p_7(Kaizen))\n(\u00acp_6(Kaizen) \u2228 p_7(Kaizen))",
            "Initial Goal": "p_7(Kaizen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_8(Kaizen)",
                    "-p_6(Kaizen)",
                    "(-p_6(Kaizen) -> p_7(Kaizen))",
                    "p_7(Kaizen)",
                    "(p_6(Kaizen) | p_7(Kaizen))",
                    "(-p_6(Kaizen) | p_7(Kaizen))"
                ],
                "formulas(goals)": [
                    "p_7(Kaizen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Kaizen) \u2228 p_7(Kaizen)"
                ],
                "added_rules": []
            }
        }
    ]
}