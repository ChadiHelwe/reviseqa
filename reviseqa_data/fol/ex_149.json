{
    "background_story": "In the heart of a lush valley lay Eden, a garden of unparalleled beauty. Founded by an avid horticulturist, Eden was designed to showcase a wide variety of flora from around the world. The garden's centerpiece was a stunning vara orchid, a rare and exquisite species known for its delicate, star-shaped blooms. As visitors wandered through the serene paths, they were captivated by the vara's elegance and the garden's tranquil atmosphere. Over time, Eden became a haven for botanists, nature lovers, and those seeking solace in nature's splendor. The vara orchid, with its dainty beauty, remained the symbol of Eden's allure, attracting visitors from far and wide to marvel at its simple yet profound beauty.",
    "predicates": [
        {
            "id": 0,
            "name": "preserve_biodiversity"
        },
        {
            "id": 1,
            "name": "support_research"
        },
        {
            "id": 2,
            "name": "serene"
        },
        {
            "id": 3,
            "name": "have_orchids"
        },
        {
            "id": 4,
            "name": "have_water_features"
        },
        {
            "id": 5,
            "name": "host_events"
        },
        {
            "id": 6,
            "name": "showcase_flora"
        },
        {
            "id": 7,
            "name": "provide_nature_therapy"
        },
        {
            "id": 8,
            "name": "beautiful"
        },
        {
            "id": 9,
            "name": "attract_tourists"
        },
        {
            "id": 10,
            "name": "well_maintained"
        },
        {
            "id": 11,
            "name": "diverse"
        },
        {
            "id": 12,
            "name": "educate_visitors"
        },
        {
            "id": 13,
            "name": "display_rare_plants"
        },
        {
            "id": 14,
            "name": "offer_guided_tours"
        },
        {
            "id": 15,
            "name": "historic"
        },
        {
            "id": 16,
            "name": "have_landmarks"
        },
        {
            "id": 17,
            "name": "has_rare_plants"
        },
        {
            "id": 18,
            "name": "get_regular_pruning"
        },
        {
            "id": 19,
            "name": "inspire_wonder"
        },
        {
            "id": 20,
            "name": "foster_community"
        },
        {
            "id": 21,
            "name": "large"
        },
        {
            "id": 22,
            "name": "have_paths"
        },
        {
            "id": 23,
            "name": "have_experts"
        },
        {
            "id": 24,
            "name": "create_maps"
        },
        {
            "id": 25,
            "name": "have_greenhouses"
        },
        {
            "id": 26,
            "name": "employ_horticulturists"
        }
    ],
    "subject_name": "Eden",
    "subject_category": "garden",
    "keyword": "vara",
    "all_facts": [
        {
            "id": 0,
            "subject": "Eden",
            "text": "Eden preserves biodiversity.",
            "fol": "p_0(Eden)",
            "str_fol": "preserve_biodiversity(Eden)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eden",
            "text": "Eden supports research.",
            "fol": "p_1(Eden)",
            "str_fol": "support_research(Eden)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Eden",
            "text": "Eden is serene.",
            "fol": "p_2(Eden)",
            "str_fol": "serene(Eden)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Eden",
            "text": "Eden has orchids.",
            "fol": "p_3(Eden)",
            "str_fol": "have_orchids(Eden)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Eden",
            "text": "Eden has water features.",
            "fol": "p_4(Eden)",
            "str_fol": "have_water_features(Eden)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Eden",
            "text": "Eden hosts events.",
            "fol": "p_5(Eden)",
            "str_fol": "host_events(Eden)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Eden",
            "text": "Eden showcases flora.",
            "fol": "p_6(Eden)",
            "str_fol": "showcase_flora(Eden)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Eden",
            "text": "Eden does not provide nature therapy.",
            "fol": "\u00acp_7(Eden)",
            "str_fol": "\u00acprovide_nature_therapy(Eden)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Eden",
            "text": "Eden displays rare plants.",
            "fol": "p_13(Eden)",
            "str_fol": "display_rare_plants(Eden)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Eden",
            "text": "Eden does not offer guided tours.",
            "fol": "\u00acp_14(Eden)",
            "str_fol": "\u00acoffer_guided_tours(Eden)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Eden",
            "text": "Eden is diverse.",
            "fol": "p_11(Eden)",
            "str_fol": "diverse(Eden)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Eden",
            "text": "Eden educates its visitors.",
            "fol": "p_12(Eden)",
            "str_fol": "educate_visitors(Eden)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Eden",
            "text": "Eden is well-maintained.",
            "fol": "p_10(Eden)",
            "str_fol": "well_maintained(Eden)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Eden",
            "text": "Eden does not attract tourists.",
            "fol": "\u00acp_9(Eden)",
            "str_fol": "\u00acattract_tourists(Eden)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Eden",
            "text": "Eden is beautiful.",
            "fol": "p_8(Eden)",
            "str_fol": "beautiful(Eden)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Eden",
            "text": "Eden showcases flora.",
            "fol": "p_6(Eden)",
            "str_fol": "showcase_flora(Eden)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Eden",
            "text": "Eden does not provide nature therapy.",
            "fol": "\u00acp_7(Eden)",
            "str_fol": "\u00acprovide_nature_therapy(Eden)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Eden",
            "text": "Eden has water features.",
            "fol": "p_4(Eden)",
            "str_fol": "have_water_features(Eden)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Eden",
            "text": "Eden hosts events.",
            "fol": "p_5(Eden)",
            "str_fol": "host_events(Eden)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Eden",
            "text": "Eden is serene.",
            "fol": "p_2(Eden)",
            "str_fol": "serene(Eden)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Eden",
            "text": "Eden has orchids.",
            "fol": "p_3(Eden)",
            "str_fol": "have_orchids(Eden)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Eden",
            "text": "Eden preserves biodiversity.",
            "fol": "p_0(Eden)",
            "str_fol": "preserve_biodiversity(Eden)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eden",
            "text": "Eden supports research.",
            "fol": "p_1(Eden)",
            "str_fol": "support_research(Eden)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Eden showcases flora, then it either displays rare plants or provides nature therapy.",
            "fol": "p_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))",
            "str_fol": "showcase_flora(Eden) \u2192 (display_rare_plants(Eden) \u2228 provide_nature_therapy(Eden))"
        },
        {
            "id": 5,
            "text": "If Eden has water features, then it either offers guided tours or hosts events, but not both.",
            "fol": "p_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))",
            "str_fol": "have_water_features(Eden) \u2192 (offer_guided_tours(Eden) \u2295 host_events(Eden))"
        },
        {
            "id": 4,
            "text": "If Eden is serene, then it has orchids and is diverse.",
            "fol": "p_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))",
            "str_fol": "serene(Eden) \u2192 (have_orchids(Eden) \u2227 diverse(Eden))"
        },
        {
            "id": 3,
            "text": "If Eden either displays rare plants or offers guided tours (but not both), then it educates its visitors.",
            "fol": "(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)",
            "str_fol": "(display_rare_plants(Eden) \u2295 offer_guided_tours(Eden)) \u2192 educate_visitors(Eden)"
        },
        {
            "id": 2,
            "text": "If Eden is diverse, then it is well-maintained and educates visitors.",
            "fol": "p_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))",
            "str_fol": "diverse(Eden) \u2192 (well_maintained(Eden) \u2227 educate_visitors(Eden))"
        },
        {
            "id": 1,
            "text": "If Eden is well-maintained, then it either preserves biodiversity or attracts tourists, but not both.",
            "fol": "p_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))",
            "str_fol": "well_maintained(Eden) \u2192 (preserve_biodiversity(Eden) \u2295 attract_tourists(Eden))"
        },
        {
            "id": 0,
            "text": "If Eden is beautiful, then it either attracts tourists or supports research, but not both.",
            "fol": "p_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))",
            "str_fol": "beautiful(Eden) \u2192 (attract_tourists(Eden) \u2295 support_research(Eden))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Eden",
            "text": "Eden showcases flora.",
            "fol": "p_6(Eden)",
            "str_fol": "showcase_flora(Eden)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Eden",
            "text": "Eden does not provide nature therapy.",
            "fol": "\u00acp_7(Eden)",
            "str_fol": "\u00acprovide_nature_therapy(Eden)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Eden",
            "text": "Eden has water features.",
            "fol": "p_4(Eden)",
            "str_fol": "have_water_features(Eden)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Eden",
            "text": "Eden hosts events.",
            "fol": "p_5(Eden)",
            "str_fol": "host_events(Eden)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Eden",
            "text": "Eden is serene.",
            "fol": "p_2(Eden)",
            "str_fol": "serene(Eden)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Eden",
            "text": "Eden has orchids.",
            "fol": "p_3(Eden)",
            "str_fol": "have_orchids(Eden)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Eden",
            "text": "Eden preserves biodiversity.",
            "fol": "p_0(Eden)",
            "str_fol": "preserve_biodiversity(Eden)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eden",
            "text": "Eden supports research.",
            "fol": "p_1(Eden)",
            "str_fol": "support_research(Eden)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If Eden showcases flora, then it either displays rare plants or provides nature therapy.",
            "fol": "p_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))",
            "str_fol": "showcase_flora(Eden) \u2192 (display_rare_plants(Eden) \u2228 provide_nature_therapy(Eden))"
        },
        {
            "id": 5,
            "text": "If Eden has water features, then it either offers guided tours or hosts events, but not both.",
            "fol": "p_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))",
            "str_fol": "have_water_features(Eden) \u2192 (offer_guided_tours(Eden) \u2295 host_events(Eden))"
        },
        {
            "id": 4,
            "text": "If Eden is serene, then it has orchids and is diverse.",
            "fol": "p_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))",
            "str_fol": "serene(Eden) \u2192 (have_orchids(Eden) \u2227 diverse(Eden))"
        },
        {
            "id": 3,
            "text": "If Eden either displays rare plants or offers guided tours (but not both), then it educates its visitors.",
            "fol": "(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)",
            "str_fol": "(display_rare_plants(Eden) \u2295 offer_guided_tours(Eden)) \u2192 educate_visitors(Eden)"
        },
        {
            "id": 2,
            "text": "If Eden is diverse, then it is well-maintained and educates visitors.",
            "fol": "p_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))",
            "str_fol": "diverse(Eden) \u2192 (well_maintained(Eden) \u2227 educate_visitors(Eden))"
        },
        {
            "id": 1,
            "text": "If Eden is well-maintained, then it either preserves biodiversity or attracts tourists, but not both.",
            "fol": "p_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))",
            "str_fol": "well_maintained(Eden) \u2192 (preserve_biodiversity(Eden) \u2295 attract_tourists(Eden))"
        },
        {
            "id": 0,
            "text": "If Eden is beautiful, then it either attracts tourists or supports research, but not both.",
            "fol": "p_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))",
            "str_fol": "beautiful(Eden) \u2192 (attract_tourists(Eden) \u2295 support_research(Eden))"
        }
    ],
    "context_fol": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\np_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))",
    "conclusion": {
        "id": 14,
        "subject": "Eden",
        "text": "Eden is beautiful.",
        "fol": "p_8(Eden)",
        "str_fol": "beautiful(Eden)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_8(Eden)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Eden",
                    "text": "Eden showcases flora.",
                    "fol": "p_6(Eden)",
                    "str_fol": "showcase_flora(Eden)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Eden",
                    "text": "Eden does not provide nature therapy.",
                    "fol": "\u00acp_7(Eden)",
                    "str_fol": "\u00acprovide_nature_therapy(Eden)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Eden showcases flora, then it either displays rare plants or provides nature therapy.",
                    "fol": "p_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))",
                    "str_fol": "showcase_flora(Eden) \u2192 (display_rare_plants(Eden) \u2228 provide_nature_therapy(Eden))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Eden",
                "text": "Eden displays rare plants.",
                "fol": "p_13(Eden)",
                "str_fol": "display_rare_plants(Eden)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Eden",
                    "text": "Eden has water features.",
                    "fol": "p_4(Eden)",
                    "str_fol": "have_water_features(Eden)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Eden",
                    "text": "Eden hosts events.",
                    "fol": "p_5(Eden)",
                    "str_fol": "host_events(Eden)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Eden has water features, then it either offers guided tours or hosts events, but not both.",
                    "fol": "p_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))",
                    "str_fol": "have_water_features(Eden) \u2192 (offer_guided_tours(Eden) \u2295 host_events(Eden))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Eden",
                "text": "Eden does not offer guided tours.",
                "fol": "\u00acp_14(Eden)",
                "str_fol": "\u00acoffer_guided_tours(Eden)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Eden",
                    "text": "Eden is serene.",
                    "fol": "p_2(Eden)",
                    "str_fol": "serene(Eden)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Eden",
                    "text": "Eden has orchids.",
                    "fol": "p_3(Eden)",
                    "str_fol": "have_orchids(Eden)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Eden is serene, then it has orchids and is diverse.",
                    "fol": "p_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))",
                    "str_fol": "serene(Eden) \u2192 (have_orchids(Eden) \u2227 diverse(Eden))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Eden",
                "text": "Eden is diverse.",
                "fol": "p_11(Eden)",
                "str_fol": "diverse(Eden)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Eden",
                    "text": "Eden displays rare plants.",
                    "fol": "p_13(Eden)",
                    "str_fol": "display_rare_plants(Eden)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Eden",
                    "text": "Eden does not offer guided tours.",
                    "fol": "\u00acp_14(Eden)",
                    "str_fol": "\u00acoffer_guided_tours(Eden)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Eden either displays rare plants or offers guided tours (but not both), then it educates its visitors.",
                    "fol": "(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)",
                    "str_fol": "(display_rare_plants(Eden) \u2295 offer_guided_tours(Eden)) \u2192 educate_visitors(Eden)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Eden",
                "text": "Eden educates its visitors.",
                "fol": "p_12(Eden)",
                "str_fol": "educate_visitors(Eden)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Eden",
                    "text": "Eden is diverse.",
                    "fol": "p_11(Eden)",
                    "str_fol": "diverse(Eden)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Eden",
                    "text": "Eden educates its visitors.",
                    "fol": "p_12(Eden)",
                    "str_fol": "educate_visitors(Eden)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Eden is diverse, then it is well-maintained and educates visitors.",
                    "fol": "p_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))",
                    "str_fol": "diverse(Eden) \u2192 (well_maintained(Eden) \u2227 educate_visitors(Eden))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Eden",
                "text": "Eden is well-maintained.",
                "fol": "p_10(Eden)",
                "str_fol": "well_maintained(Eden)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Eden",
                    "text": "Eden is well-maintained.",
                    "fol": "p_10(Eden)",
                    "str_fol": "well_maintained(Eden)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Eden",
                    "text": "Eden preserves biodiversity.",
                    "fol": "p_0(Eden)",
                    "str_fol": "preserve_biodiversity(Eden)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Eden is well-maintained, then it either preserves biodiversity or attracts tourists, but not both.",
                    "fol": "p_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))",
                    "str_fol": "well_maintained(Eden) \u2192 (preserve_biodiversity(Eden) \u2295 attract_tourists(Eden))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Eden",
                "text": "Eden does not attract tourists.",
                "fol": "\u00acp_9(Eden)",
                "str_fol": "\u00acattract_tourists(Eden)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Eden",
                    "text": "Eden does not attract tourists.",
                    "fol": "\u00acp_9(Eden)",
                    "str_fol": "\u00acattract_tourists(Eden)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Eden",
                    "text": "Eden supports research.",
                    "fol": "p_1(Eden)",
                    "str_fol": "support_research(Eden)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Eden is beautiful, then it either attracts tourists or supports research, but not both.",
                    "fol": "p_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))",
                    "str_fol": "beautiful(Eden) \u2192 (attract_tourists(Eden) \u2295 support_research(Eden))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\np_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))",
            "Initial Goal": "p_8(Eden)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden)",
                    "-p_7(Eden)",
                    "p_4(Eden)",
                    "p_5(Eden)",
                    "p_2(Eden)",
                    "p_3(Eden)",
                    "p_0(Eden)",
                    "p_1(Eden)",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden))",
                    "p_4(Eden) -> (-(p_14(Eden) <-> p_5(Eden)))",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden))",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden)",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden))",
                    "p_10(Eden) -> (-(p_0(Eden) <-> p_9(Eden)))",
                    "p_8(Eden) -> (-(p_9(Eden) <-> p_1(Eden)))",
                    "p_12(Eden) -> p_8(Eden)"
                ],
                "formulas(goals)": [
                    "p_8(Eden)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_12(Eden) \u2192 p_8(Eden)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\n\u00acp_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))",
            "Initial Goal": "p_8(Eden)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden)",
                    "-p_7(Eden)",
                    "p_4(Eden)",
                    "p_5(Eden)",
                    "p_2(Eden)",
                    "p_3(Eden)",
                    "p_0(Eden)",
                    "-p_1(Eden)",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden))",
                    "p_4(Eden) -> (-(p_14(Eden) <-> p_5(Eden)))",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden))",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden)",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden))",
                    "p_10(Eden) -> (-(p_0(Eden) <-> p_9(Eden)))",
                    "p_8(Eden) -> (-(p_9(Eden) <-> p_1(Eden)))"
                ],
                "formulas(goals)": [
                    "-p_8(Eden)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_1(Eden)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_1(Eden)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\n\u00acp_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\n(p_6(Eden) \u2227 \u00acp_13(Eden)) \u2192 p_7(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))\n(p_8(Eden) \u2227 p_9(Eden)) \u2192 \u00acp_1(Eden)\n(p_4(Eden) \u2227 p_14(Eden)) \u2192 \u00acp_5(Eden)",
            "Initial Goal": "p_8(Eden)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden)",
                    "-p_7(Eden)",
                    "p_4(Eden)",
                    "p_5(Eden)",
                    "p_2(Eden)",
                    "p_3(Eden)",
                    "p_0(Eden)",
                    "-p_1(Eden)",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden))",
                    "(p_6(Eden) & -p_13(Eden)) -> p_7(Eden)",
                    "p_4(Eden) -> (-(p_14(Eden) <-> p_5(Eden)))",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden))",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden)",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden))",
                    "p_10(Eden) -> (-(p_0(Eden) <-> p_9(Eden)))",
                    "p_8(Eden) -> (-(p_9(Eden) <-> p_1(Eden)))",
                    "(p_8(Eden) & p_9(Eden)) -> -p_1(Eden)",
                    "(p_4(Eden) & p_14(Eden)) -> -p_5(Eden)"
                ],
                "formulas(goals)": [
                    "-p_8(Eden)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Eden) \u2227 \u00acp_13(Eden)) \u2192 p_7(Eden)",
                    "(p_8(Eden) \u2227 p_9(Eden)) \u2192 \u00acp_1(Eden)",
                    "(p_4(Eden) \u2227 p_14(Eden)) \u2192 \u00acp_5(Eden)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\n\u00acp_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\n(p_6(Eden) \u2227 \u00acp_13(Eden)) \u2192 p_7(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))\n(p_8(Eden) \u2227 p_9(Eden)) \u2192 \u00acp_1(Eden)\n(p_4(Eden) \u2227 p_14(Eden)) \u2192 \u00acp_5(Eden)\np_13(Eden)\n\u00acp_14(Eden)\np_11(Eden)\np_12(Eden)\np_10(Eden)\n\u00acp_9(Eden)\n\u00acp_8(Eden)\n(p_6(Eden) \u2227 \u00acp_7(Eden)) \u2192 p_13(Eden)\np_4(Eden) \u2192 \u00acp_14(Eden)",
            "Initial Goal": "p_8(Eden)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden)",
                    "-p_7(Eden)",
                    "p_4(Eden)",
                    "p_5(Eden)",
                    "p_2(Eden)",
                    "p_3(Eden)",
                    "p_0(Eden)",
                    "-p_1(Eden)",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden))",
                    "(p_6(Eden) & -p_13(Eden)) -> p_7(Eden)",
                    "p_4(Eden) -> (-(p_14(Eden) <-> p_5(Eden)))",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden))",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden)",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden))",
                    "p_10(Eden) -> (-(p_0(Eden) <-> p_9(Eden)))",
                    "p_8(Eden) -> (-(p_9(Eden) <-> p_1(Eden)))",
                    "(p_8(Eden) & p_9(Eden)) -> -p_1(Eden)",
                    "(p_4(Eden) & p_14(Eden)) -> -p_5(Eden)",
                    "p_13(Eden)",
                    "-p_14(Eden)",
                    "p_11(Eden)",
                    "p_12(Eden)",
                    "p_10(Eden)",
                    "-p_9(Eden)",
                    "-p_8(Eden)",
                    "(p_6(Eden) & -p_7(Eden)) -> p_13(Eden)",
                    "p_4(Eden) -> -p_14(Eden)"
                ],
                "formulas(goals)": [
                    "-p_8(Eden)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Eden)",
                    "\u00acp_14(Eden)",
                    "p_11(Eden)",
                    "p_12(Eden)",
                    "p_10(Eden)",
                    "\u00acp_9(Eden)",
                    "\u00acp_8(Eden)"
                ],
                "added_rules": [
                    "(p_6(Eden) \u2227 \u00acp_7(Eden)) \u2192 p_13(Eden)",
                    "p_4(Eden) \u2192 \u00acp_14(Eden)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\n\u00acp_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\n(p_6(Eden) \u2227 \u00acp_13(Eden)) \u2192 p_7(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))\n(p_8(Eden) \u2227 p_9(Eden)) \u2192 \u00acp_1(Eden)\n(p_4(Eden) \u2227 p_14(Eden)) \u2192 \u00acp_5(Eden)\np_13(Eden)\n\u00acp_14(Eden)\np_11(Eden)\np_12(Eden)\np_10(Eden)\n\u00acp_9(Eden)\n\u00acp_8(Eden)\n(p_6(Eden) \u2227 \u00acp_7(Eden)) \u2192 p_13(Eden)\np_4(Eden) \u2192 \u00acp_14(Eden)\np_6(Eden) \u2192 p_13(Eden)\np_13(Eden) \u2228 p_7(Eden)\np_12(Eden) \u2228 p_14(Eden)\n\u00acp_14(Eden) \u2228 p_5(Eden)",
            "Initial Goal": "p_8(Eden)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden)",
                    "-p_7(Eden)",
                    "p_4(Eden)",
                    "p_5(Eden)",
                    "p_2(Eden)",
                    "p_3(Eden)",
                    "p_0(Eden)",
                    "-p_1(Eden)",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden))",
                    "(p_6(Eden) & -p_13(Eden)) -> p_7(Eden)",
                    "p_4(Eden) -> (-(p_14(Eden) <-> p_5(Eden)))",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden))",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden)",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden))",
                    "p_10(Eden) -> (-(p_0(Eden) <-> p_9(Eden)))",
                    "p_8(Eden) -> (-(p_9(Eden) <-> p_1(Eden)))",
                    "(p_8(Eden) & p_9(Eden)) -> -p_1(Eden)",
                    "(p_4(Eden) & p_14(Eden)) -> -p_5(Eden)",
                    "p_13(Eden)",
                    "-p_14(Eden)",
                    "p_11(Eden)",
                    "p_12(Eden)",
                    "p_10(Eden)",
                    "-p_9(Eden)",
                    "-p_8(Eden)",
                    "(p_6(Eden) & -p_7(Eden)) -> p_13(Eden)",
                    "p_4(Eden) -> -p_14(Eden)",
                    "p_6(Eden) -> p_13(Eden)",
                    "p_13(Eden) | p_7(Eden)",
                    "p_12(Eden) | p_14(Eden)",
                    "-p_14(Eden) | p_5(Eden)"
                ],
                "formulas(goals)": [
                    "-p_8(Eden)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Eden) \u2228 p_7(Eden)",
                    "p_12(Eden) \u2228 p_14(Eden)",
                    "\u00acp_14(Eden) \u2228 p_5(Eden)"
                ],
                "added_rules": [
                    "p_6(Eden) \u2192 p_13(Eden)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\n\u00acp_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\n(p_6(Eden) \u2227 \u00acp_13(Eden)) \u2192 p_7(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))\n(p_8(Eden) \u2227 p_9(Eden)) \u2192 \u00acp_1(Eden)\n(p_4(Eden) \u2227 p_14(Eden)) \u2192 \u00acp_5(Eden)\np_13(Eden)\n\u00acp_14(Eden)\np_11(Eden)\np_12(Eden)\np_10(Eden)\n\u00acp_9(Eden)\n\u00acp_8(Eden)\n(p_6(Eden) \u2227 \u00acp_7(Eden)) \u2192 p_13(Eden)\np_4(Eden) \u2192 \u00acp_14(Eden)\np_6(Eden) \u2192 p_13(Eden)\np_13(Eden) \u2228 p_7(Eden)\np_12(Eden) \u2228 p_14(Eden)\n\u00acp_14(Eden) \u2228 p_5(Eden)\np_2(Eden) \u2192 p_3(Eden)\np_2(Eden) \u2192 p_11(Eden)\n(p_13(Eden) \u2227 \u00acp_14(Eden)) \u2192 p_12(Eden)\n(\u00acp_13(Eden) \u2227 p_14(Eden)) \u2192 p_12(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2228 p_5(Eden))",
            "Initial Goal": "p_8(Eden)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden)",
                    "-p_7(Eden)",
                    "p_4(Eden)",
                    "p_5(Eden)",
                    "p_2(Eden)",
                    "p_3(Eden)",
                    "p_0(Eden)",
                    "-p_1(Eden)",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden))",
                    "(p_6(Eden) & -p_13(Eden)) -> p_7(Eden)",
                    "p_4(Eden) -> -(p_14(Eden) <-> p_5(Eden))",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden))",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden)",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden))",
                    "p_10(Eden) -> -(p_0(Eden) <-> p_9(Eden))",
                    "p_8(Eden) -> -(p_9(Eden) <-> p_1(Eden))",
                    "(p_8(Eden) & p_9(Eden)) -> -p_1(Eden)",
                    "(p_4(Eden) & p_14(Eden)) -> -p_5(Eden)",
                    "p_13(Eden)",
                    "-p_14(Eden)",
                    "p_11(Eden)",
                    "p_12(Eden)",
                    "p_10(Eden)",
                    "-p_9(Eden)",
                    "-p_8(Eden)",
                    "(p_6(Eden) & -p_7(Eden)) -> p_13(Eden)",
                    "p_4(Eden) -> -p_14(Eden)",
                    "p_6(Eden) -> p_13(Eden)",
                    "p_13(Eden) | p_7(Eden)",
                    "p_12(Eden) | p_14(Eden)",
                    "-p_14(Eden) | p_5(Eden)",
                    "p_2(Eden) -> p_3(Eden)",
                    "p_2(Eden) -> p_11(Eden)",
                    "(p_13(Eden) & -p_14(Eden)) -> p_12(Eden)",
                    "(-p_13(Eden) & p_14(Eden)) -> p_12(Eden)",
                    "p_4(Eden) -> (p_14(Eden) | p_5(Eden))"
                ],
                "formulas(goals)": [
                    "-p_8(Eden)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_2(Eden) \u2192 p_3(Eden)",
                    "p_2(Eden) \u2192 p_11(Eden)",
                    "(p_13(Eden) \u2227 \u00acp_14(Eden)) \u2192 p_12(Eden)",
                    "(\u00acp_13(Eden) \u2227 p_14(Eden)) \u2192 p_12(Eden)",
                    "p_4(Eden) \u2192 (p_14(Eden) \u2228 p_5(Eden))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Eden)\n\u00acp_7(Eden)\np_4(Eden)\np_5(Eden)\np_2(Eden)\np_3(Eden)\np_0(Eden)\n\u00acp_1(Eden)\np_6(Eden) \u2192 (p_13(Eden) \u2228 p_7(Eden))\n(p_6(Eden) \u2227 \u00acp_13(Eden)) \u2192 p_7(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2295 p_5(Eden))\np_2(Eden) \u2192 (p_3(Eden) \u2227 p_11(Eden))\n(p_13(Eden) \u2295 p_14(Eden)) \u2192 p_12(Eden)\np_11(Eden) \u2192 (p_10(Eden) \u2227 p_12(Eden))\np_10(Eden) \u2192 (p_0(Eden) \u2295 p_9(Eden))\np_8(Eden) \u2192 (p_9(Eden) \u2295 p_1(Eden))\n(p_8(Eden) \u2227 p_9(Eden)) \u2192 \u00acp_1(Eden)\n(p_4(Eden) \u2227 p_14(Eden)) \u2192 \u00acp_5(Eden)\np_13(Eden)\n\u00acp_14(Eden)\np_11(Eden)\np_12(Eden)\np_10(Eden)\n\u00acp_9(Eden)\n(p_6(Eden) \u2227 \u00acp_7(Eden)) \u2192 p_13(Eden)\np_4(Eden) \u2192 \u00acp_14(Eden)\np_6(Eden) \u2192 p_13(Eden)\np_13(Eden) \u2228 p_7(Eden)\np_12(Eden) \u2228 p_14(Eden)\n\u00acp_14(Eden) \u2228 p_5(Eden)\np_2(Eden) \u2192 p_3(Eden)\np_2(Eden) \u2192 p_11(Eden)\n(p_13(Eden) \u2227 \u00acp_14(Eden)) \u2192 p_12(Eden)\n(\u00acp_13(Eden) \u2227 p_14(Eden)) \u2192 p_12(Eden)\np_4(Eden) \u2192 (p_14(Eden) \u2228 p_5(Eden))\n(p_13(Eden) \u2227 \u00acp_14(Eden)) \u2192 p_8(Eden)",
            "Initial Goal": "p_8(Eden)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Eden).",
                    "-p_7(Eden).",
                    "p_4(Eden).",
                    "p_5(Eden).",
                    "p_2(Eden).",
                    "p_3(Eden).",
                    "p_0(Eden).",
                    "-p_1(Eden).",
                    "p_6(Eden) -> (p_13(Eden) | p_7(Eden)).",
                    "(p_6(Eden) & -p_13(Eden)) -> p_7(Eden).",
                    "p_4(Eden) -> (-(p_14(Eden) <-> p_5(Eden))).",
                    "p_2(Eden) -> (p_3(Eden) & p_11(Eden)).",
                    "(-(p_13(Eden) <-> p_14(Eden))) -> p_12(Eden).",
                    "p_11(Eden) -> (p_10(Eden) & p_12(Eden)).",
                    "p_10(Eden) -> (-(p_0(Eden) <-> p_9(Eden))).",
                    "p_8(Eden) -> (-(p_9(Eden) <-> p_1(Eden))).",
                    "(p_8(Eden) & p_9(Eden)) -> -p_1(Eden).",
                    "(p_4(Eden) & p_14(Eden)) -> -p_5(Eden).",
                    "p_13(Eden).",
                    "-p_14(Eden).",
                    "p_11(Eden).",
                    "p_12(Eden).",
                    "p_10(Eden).",
                    "-p_9(Eden).",
                    "(p_6(Eden) & -p_7(Eden)) -> p_13(Eden).",
                    "p_4(Eden) -> -p_14(Eden).",
                    "p_6(Eden) -> p_13(Eden).",
                    "p_13(Eden) | p_7(Eden).",
                    "p_12(Eden) | p_14(Eden).",
                    "-p_14(Eden) | p_5(Eden).",
                    "p_2(Eden) -> p_3(Eden).",
                    "p_2(Eden) -> p_11(Eden).",
                    "(p_13(Eden) & -p_14(Eden)) -> p_12(Eden).",
                    "(-p_13(Eden) & p_14(Eden)) -> p_12(Eden).",
                    "p_4(Eden) -> (p_14(Eden) | p_5(Eden)).",
                    "(p_13(Eden) & -p_14(Eden)) -> p_8(Eden)."
                ],
                "formulas(goals)": [
                    "p_8(Eden)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Eden)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_13(Eden) \u2227 \u00acp_14(Eden)) \u2192 p_8(Eden)"
                ]
            }
        }
    ]
}