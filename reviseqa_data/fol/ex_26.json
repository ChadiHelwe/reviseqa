{
    "background_story": "Emersyn was a brilliant and eccentric scientist who spent her life studying the rare and unusual lomogramma, a type of orchid found only in the depths of the Amazon rainforest. Her fascination with this exotic plant began when she was a graduate student, and she became determined to unlock its secrets. Emersyn's research took her to the remote jungles, where she spent years observing and experimenting with the lomogramma. Her findings led to groundbreaking discoveries in the field of botany, and she was hailed as a leading expert on the species. Emersyn's love for the lomogramma was more than just scientific - she saw it as a symbol of beauty and resilience in a rapidly changing world.",
    "predicates": [
        {
            "id": 0,
            "name": "is_scientist"
        },
        {
            "id": 1,
            "name": "is_innovator"
        },
        {
            "id": 2,
            "name": "find_solutions"
        },
        {
            "id": 3,
            "name": "study_lomogramma"
        },
        {
            "id": 4,
            "name": "make_new_discoveries"
        },
        {
            "id": 5,
            "name": "explore_wilderness"
        },
        {
            "id": 6,
            "name": "work_in_lab"
        },
        {
            "id": 7,
            "name": "is_researcher"
        },
        {
            "id": 8,
            "name": "conduct_experiments"
        },
        {
            "id": 9,
            "name": "collect_data"
        },
        {
            "id": 10,
            "name": "think_critically"
        },
        {
            "id": 11,
            "name": "solve_problems"
        },
        {
            "id": 12,
            "name": "ask_questions"
        },
        {
            "id": 13,
            "name": "curious_mind"
        },
        {
            "id": 14,
            "name": "passionate_person"
        },
        {
            "id": 15,
            "name": "love_nature"
        },
        {
            "id": 16,
            "name": "reads_books"
        },
        {
            "id": 17,
            "name": "uses_microscope"
        },
        {
            "id": 18,
            "name": "read_books"
        },
        {
            "id": 19,
            "name": "has_curiosity"
        },
        {
            "id": 20,
            "name": "gather_samples"
        },
        {
            "id": 21,
            "name": "learn_fast"
        },
        {
            "id": 22,
            "name": "seek_knowledge"
        }
    ],
    "subject_name": "Emersyn",
    "subject_category": "human",
    "keyword": "lomogramma",
    "all_facts": [
        {
            "id": 0,
            "subject": "Emersyn",
            "text": "Emersyn is a scientist.",
            "fol": "p_0(Emersyn)",
            "str_fol": "is_scientist(Emersyn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Emersyn",
            "text": "Emersyn is not an innovator.",
            "fol": "\u00acp_1(Emersyn)",
            "str_fol": "\u00acis_innovator(Emersyn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emersyn",
            "text": "Emersyn finds solutions in her pursuit of knowledge and understanding.",
            "fol": "p_2(Emersyn)",
            "str_fol": "find_solutions(Emersyn)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Emersyn",
            "text": "Emersyn does not ask questions.",
            "fol": "\u00acp_12(Emersyn)",
            "str_fol": "\u00acask_questions(Emersyn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Emersyn",
            "text": "Emersyn does not think critically.",
            "fol": "\u00acp_10(Emersyn)",
            "str_fol": "\u00acthink_critically(Emersyn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emersyn",
            "text": "Emersyn does not collect data.",
            "fol": "\u00acp_9(Emersyn)",
            "str_fol": "\u00accollect_data(Emersyn)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emersyn",
            "text": "Emersyn conducts experiments.",
            "fol": "p_8(Emersyn)",
            "str_fol": "conduct_experiments(Emersyn)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Emersyn",
            "text": "Emersyn is a researcher.",
            "fol": "p_7(Emersyn)",
            "str_fol": "is_researcher(Emersyn)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Emersyn",
            "text": "Emersyn works in a lab.",
            "fol": "p_6(Emersyn)",
            "str_fol": "work_in_lab(Emersyn)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Emersyn",
            "text": "Emersyn does not explore the wilderness.",
            "fol": "\u00acp_5(Emersyn)",
            "str_fol": "\u00acexplore_wilderness(Emersyn)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Emersyn",
            "text": "Emersyn makes new discoveries.",
            "fol": "p_4(Emersyn)",
            "str_fol": "make_new_discoveries(Emersyn)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Emersyn",
            "text": "Emersyn does not study the lomogramma.",
            "fol": "\u00acp_3(Emersyn)",
            "str_fol": "\u00acstudy_lomogramma(Emersyn)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Emersyn",
            "text": "Emersyn finds solutions in her pursuit of knowledge and understanding.",
            "fol": "p_2(Emersyn)",
            "str_fol": "find_solutions(Emersyn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Emersyn",
            "text": "Emersyn is not an innovator.",
            "fol": "\u00acp_1(Emersyn)",
            "str_fol": "\u00acis_innovator(Emersyn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Emersyn",
            "text": "Emersyn is a scientist.",
            "fol": "p_0(Emersyn)",
            "str_fol": "is_scientist(Emersyn)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Emersyn either asks questions or finds solutions, but not both, in her pursuit of knowledge and understanding.",
            "fol": "p_12(Emersyn) \u2295 p_2(Emersyn)",
            "str_fol": "ask_questions(Emersyn) \u2295 find_solutions(Emersyn)"
        },
        {
            "id": 7,
            "text": "If Emersyn either thinks critically or asks questions (but not both), then she is an innovator.",
            "fol": "(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)",
            "str_fol": "(think_critically(Emersyn) \u2295 ask_questions(Emersyn)) \u2192 is_innovator(Emersyn)"
        },
        {
            "id": 6,
            "text": "If Emersyn collects data, then she thinks critically and solves problems.",
            "fol": "p_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))",
            "str_fol": "collect_data(Emersyn) \u2192 (think_critically(Emersyn) \u2227 solve_problems(Emersyn))"
        },
        {
            "id": 5,
            "text": "If Emersyn is a scientist, then she either collects data or conducts experiments, but not both.",
            "fol": "p_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))",
            "str_fol": "is_scientist(Emersyn) \u2192 (collect_data(Emersyn) \u2295 conduct_experiments(Emersyn))"
        },
        {
            "id": 4,
            "text": "If Emersyn conducts experiments, then she is a researcher.",
            "fol": "p_8(Emersyn) \u2192 p_7(Emersyn)",
            "str_fol": "conduct_experiments(Emersyn) \u2192 is_researcher(Emersyn)"
        },
        {
            "id": 3,
            "text": "If Emersyn is a researcher, then she works in a lab.",
            "fol": "p_7(Emersyn) \u2192 p_6(Emersyn)",
            "str_fol": "is_researcher(Emersyn) \u2192 work_in_lab(Emersyn)"
        },
        {
            "id": 2,
            "text": "Emersyn either explores the wilderness or works in a lab, but not both.",
            "fol": "p_5(Emersyn) \u2295 p_6(Emersyn)",
            "str_fol": "explore_wilderness(Emersyn) \u2295 work_in_lab(Emersyn)"
        },
        {
            "id": 1,
            "text": "Emersyn either makes new discoveries or explores the wilderness, but not both.",
            "fol": "p_4(Emersyn) \u2295 p_5(Emersyn)",
            "str_fol": "make_new_discoveries(Emersyn) \u2295 explore_wilderness(Emersyn)"
        },
        {
            "id": 0,
            "text": "If Emersyn studies the lomogramma, then she makes new discoveries.",
            "fol": "p_3(Emersyn) \u2192 p_4(Emersyn)",
            "str_fol": "study_lomogramma(Emersyn) \u2192 make_new_discoveries(Emersyn)"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Emersyn",
            "text": "Emersyn finds solutions in her pursuit of knowledge and understanding.",
            "fol": "p_2(Emersyn)",
            "str_fol": "find_solutions(Emersyn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Emersyn",
            "text": "Emersyn is not an innovator.",
            "fol": "\u00acp_1(Emersyn)",
            "str_fol": "\u00acis_innovator(Emersyn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Emersyn",
            "text": "Emersyn is a scientist.",
            "fol": "p_0(Emersyn)",
            "str_fol": "is_scientist(Emersyn)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Emersyn either asks questions or finds solutions, but not both, in her pursuit of knowledge and understanding.",
            "fol": "p_12(Emersyn) \u2295 p_2(Emersyn)",
            "str_fol": "ask_questions(Emersyn) \u2295 find_solutions(Emersyn)"
        },
        {
            "id": 7,
            "text": "If Emersyn either thinks critically or asks questions (but not both), then she is an innovator.",
            "fol": "(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)",
            "str_fol": "(think_critically(Emersyn) \u2295 ask_questions(Emersyn)) \u2192 is_innovator(Emersyn)"
        },
        {
            "id": 6,
            "text": "If Emersyn collects data, then she thinks critically and solves problems.",
            "fol": "p_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))",
            "str_fol": "collect_data(Emersyn) \u2192 (think_critically(Emersyn) \u2227 solve_problems(Emersyn))"
        },
        {
            "id": 5,
            "text": "If Emersyn is a scientist, then she either collects data or conducts experiments, but not both.",
            "fol": "p_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))",
            "str_fol": "is_scientist(Emersyn) \u2192 (collect_data(Emersyn) \u2295 conduct_experiments(Emersyn))"
        },
        {
            "id": 4,
            "text": "If Emersyn conducts experiments, then she is a researcher.",
            "fol": "p_8(Emersyn) \u2192 p_7(Emersyn)",
            "str_fol": "conduct_experiments(Emersyn) \u2192 is_researcher(Emersyn)"
        },
        {
            "id": 3,
            "text": "If Emersyn is a researcher, then she works in a lab.",
            "fol": "p_7(Emersyn) \u2192 p_6(Emersyn)",
            "str_fol": "is_researcher(Emersyn) \u2192 work_in_lab(Emersyn)"
        },
        {
            "id": 2,
            "text": "Emersyn either explores the wilderness or works in a lab, but not both.",
            "fol": "p_5(Emersyn) \u2295 p_6(Emersyn)",
            "str_fol": "explore_wilderness(Emersyn) \u2295 work_in_lab(Emersyn)"
        },
        {
            "id": 1,
            "text": "Emersyn either makes new discoveries or explores the wilderness, but not both.",
            "fol": "p_4(Emersyn) \u2295 p_5(Emersyn)",
            "str_fol": "make_new_discoveries(Emersyn) \u2295 explore_wilderness(Emersyn)"
        },
        {
            "id": 0,
            "text": "If Emersyn studies the lomogramma, then she makes new discoveries.",
            "fol": "p_3(Emersyn) \u2192 p_4(Emersyn)",
            "str_fol": "study_lomogramma(Emersyn) \u2192 make_new_discoveries(Emersyn)"
        }
    ],
    "context_fol": "p_2(Emersyn)\n\u00acp_1(Emersyn)\np_0(Emersyn)\np_12(Emersyn) \u2295 p_2(Emersyn)\n(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)\np_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))\np_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))\np_8(Emersyn) \u2192 p_7(Emersyn)\np_7(Emersyn) \u2192 p_6(Emersyn)\np_5(Emersyn) \u2295 p_6(Emersyn)\np_4(Emersyn) \u2295 p_5(Emersyn)\np_3(Emersyn) \u2192 p_4(Emersyn)",
    "conclusion": {
        "id": 11,
        "subject": "Emersyn",
        "text": "Emersyn does not study the lomogramma.",
        "fol": "\u00acp_3(Emersyn)",
        "str_fol": "\u00acstudy_lomogramma(Emersyn)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_3(Emersyn)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Emersyn",
                    "text": "Emersyn finds solutions in her pursuit of knowledge and understanding.",
                    "fol": "p_2(Emersyn)",
                    "str_fol": "find_solutions(Emersyn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Emersyn either asks questions or finds solutions, but not both, in her pursuit of knowledge and understanding.",
                    "fol": "p_12(Emersyn) \u2295 p_2(Emersyn)",
                    "str_fol": "ask_questions(Emersyn) \u2295 find_solutions(Emersyn)"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Emersyn",
                "text": "Emersyn does not ask questions.",
                "fol": "\u00acp_12(Emersyn)",
                "str_fol": "\u00acask_questions(Emersyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Emersyn",
                    "text": "Emersyn does not ask questions.",
                    "fol": "\u00acp_12(Emersyn)",
                    "str_fol": "\u00acask_questions(Emersyn)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Emersyn",
                    "text": "Emersyn is not an innovator.",
                    "fol": "\u00acp_1(Emersyn)",
                    "str_fol": "\u00acis_innovator(Emersyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Emersyn either thinks critically or asks questions (but not both), then she is an innovator.",
                    "fol": "(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)",
                    "str_fol": "(think_critically(Emersyn) \u2295 ask_questions(Emersyn)) \u2192 is_innovator(Emersyn)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Emersyn",
                "text": "Emersyn does not think critically.",
                "fol": "\u00acp_10(Emersyn)",
                "str_fol": "\u00acthink_critically(Emersyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Emersyn",
                    "text": "Emersyn does not think critically.",
                    "fol": "\u00acp_10(Emersyn)",
                    "str_fol": "\u00acthink_critically(Emersyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Emersyn collects data, then she thinks critically and solves problems.",
                    "fol": "p_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))",
                    "str_fol": "collect_data(Emersyn) \u2192 (think_critically(Emersyn) \u2227 solve_problems(Emersyn))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Emersyn",
                "text": "Emersyn does not collect data.",
                "fol": "\u00acp_9(Emersyn)",
                "str_fol": "\u00accollect_data(Emersyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Emersyn",
                    "text": "Emersyn is a scientist.",
                    "fol": "p_0(Emersyn)",
                    "str_fol": "is_scientist(Emersyn)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Emersyn",
                    "text": "Emersyn does not collect data.",
                    "fol": "\u00acp_9(Emersyn)",
                    "str_fol": "\u00accollect_data(Emersyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Emersyn is a scientist, then she either collects data or conducts experiments, but not both.",
                    "fol": "p_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))",
                    "str_fol": "is_scientist(Emersyn) \u2192 (collect_data(Emersyn) \u2295 conduct_experiments(Emersyn))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Emersyn",
                "text": "Emersyn conducts experiments.",
                "fol": "p_8(Emersyn)",
                "str_fol": "conduct_experiments(Emersyn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Emersyn",
                    "text": "Emersyn conducts experiments.",
                    "fol": "p_8(Emersyn)",
                    "str_fol": "conduct_experiments(Emersyn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Emersyn conducts experiments, then she is a researcher.",
                    "fol": "p_8(Emersyn) \u2192 p_7(Emersyn)",
                    "str_fol": "conduct_experiments(Emersyn) \u2192 is_researcher(Emersyn)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Emersyn",
                "text": "Emersyn is a researcher.",
                "fol": "p_7(Emersyn)",
                "str_fol": "is_researcher(Emersyn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Emersyn",
                    "text": "Emersyn is a researcher.",
                    "fol": "p_7(Emersyn)",
                    "str_fol": "is_researcher(Emersyn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Emersyn is a researcher, then she works in a lab.",
                    "fol": "p_7(Emersyn) \u2192 p_6(Emersyn)",
                    "str_fol": "is_researcher(Emersyn) \u2192 work_in_lab(Emersyn)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Emersyn",
                "text": "Emersyn works in a lab.",
                "fol": "p_6(Emersyn)",
                "str_fol": "work_in_lab(Emersyn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Emersyn",
                    "text": "Emersyn works in a lab.",
                    "fol": "p_6(Emersyn)",
                    "str_fol": "work_in_lab(Emersyn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Emersyn either explores the wilderness or works in a lab, but not both.",
                    "fol": "p_5(Emersyn) \u2295 p_6(Emersyn)",
                    "str_fol": "explore_wilderness(Emersyn) \u2295 work_in_lab(Emersyn)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Emersyn",
                "text": "Emersyn does not explore the wilderness.",
                "fol": "\u00acp_5(Emersyn)",
                "str_fol": "\u00acexplore_wilderness(Emersyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Emersyn",
                    "text": "Emersyn does not explore the wilderness.",
                    "fol": "\u00acp_5(Emersyn)",
                    "str_fol": "\u00acexplore_wilderness(Emersyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Emersyn either makes new discoveries or explores the wilderness, but not both.",
                    "fol": "p_4(Emersyn) \u2295 p_5(Emersyn)",
                    "str_fol": "make_new_discoveries(Emersyn) \u2295 explore_wilderness(Emersyn)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Emersyn",
                "text": "Emersyn makes new discoveries.",
                "fol": "p_4(Emersyn)",
                "str_fol": "make_new_discoveries(Emersyn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Emersyn",
                    "text": "Emersyn makes new discoveries.",
                    "fol": "p_4(Emersyn)",
                    "str_fol": "make_new_discoveries(Emersyn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Emersyn studies the lomogramma, then she makes new discoveries.",
                    "fol": "p_3(Emersyn) \u2192 p_4(Emersyn)",
                    "str_fol": "study_lomogramma(Emersyn) \u2192 make_new_discoveries(Emersyn)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_2(Emersyn)\n\u00acp_1(Emersyn)\np_0(Emersyn)\np_12(Emersyn) \u2295 p_2(Emersyn)\n(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)\np_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))\np_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))\np_8(Emersyn) \u2192 p_7(Emersyn)\np_7(Emersyn) \u2192 p_6(Emersyn)\np_5(Emersyn) \u2295 p_6(Emersyn)\np_4(Emersyn) \u2295 p_5(Emersyn)\np_3(Emersyn) \u2192 p_4(Emersyn)",
            "Initial Goal": "\u00acp_3(Emersyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Emersyn)",
                    "-p_1(Emersyn)",
                    "p_0(Emersyn)",
                    "-(p_12(Emersyn) <-> p_2(Emersyn))",
                    "(-(p_10(Emersyn) <-> p_12(Emersyn))) -> p_1(Emersyn)",
                    "p_9(Emersyn) -> (p_10(Emersyn) & p_11(Emersyn))",
                    "p_0(Emersyn) -> (-(p_9(Emersyn) <-> p_8(Emersyn)))",
                    "p_8(Emersyn) -> p_7(Emersyn)",
                    "p_7(Emersyn) -> p_6(Emersyn)",
                    "-(p_5(Emersyn) <-> p_6(Emersyn))",
                    "-(p_4(Emersyn) <-> p_5(Emersyn))",
                    "p_3(Emersyn) -> p_4(Emersyn)",
                    "p_4(Emersyn) -> -p_3(Emersyn)"
                ],
                "formulas(goals)": [
                    "-p_3(Emersyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Emersyn) \u2192 \u00acp_3(Emersyn)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Emersyn)\n\u00acp_1(Emersyn)\np_0(Emersyn)\np_12(Emersyn) \u2295 p_2(Emersyn)\n(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)\np_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))\np_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))\np_8(Emersyn) \u2192 p_7(Emersyn)\np_7(Emersyn) \u2192 p_6(Emersyn)\np_5(Emersyn) \u2295 p_6(Emersyn)\np_4(Emersyn) \u2295 p_5(Emersyn)\np_3(Emersyn) \u2192 p_4(Emersyn)\np_4(Emersyn) \u2192 p_3(Emersyn)",
            "Initial Goal": "\u00acp_3(Emersyn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Emersyn)",
                    "-p_1(Emersyn)",
                    "p_0(Emersyn)",
                    "-(p_12(Emersyn) <-> p_2(Emersyn))",
                    "(-(p_10(Emersyn) <-> p_12(Emersyn))) -> p_1(Emersyn)",
                    "p_9(Emersyn) -> (p_10(Emersyn) & p_11(Emersyn))",
                    "p_0(Emersyn) -> (-(p_9(Emersyn) <-> p_8(Emersyn)))",
                    "p_8(Emersyn) -> p_7(Emersyn)",
                    "p_7(Emersyn) -> p_6(Emersyn)",
                    "-(p_5(Emersyn) <-> p_6(Emersyn))",
                    "-(p_4(Emersyn) <-> p_5(Emersyn))",
                    "p_3(Emersyn) -> p_4(Emersyn)",
                    "p_4(Emersyn) -> p_3(Emersyn)"
                ],
                "formulas(goals)": [
                    "--p_3(Emersyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Emersyn) \u2192 p_3(Emersyn)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Emersyn)\n\u00acp_1(Emersyn)\np_0(Emersyn)\np_12(Emersyn) \u2295 p_2(Emersyn)\n(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)\np_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))\np_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))\np_8(Emersyn) \u2192 p_7(Emersyn)\np_7(Emersyn) \u2192 p_6(Emersyn)\np_5(Emersyn) \u2295 p_6(Emersyn)\np_4(Emersyn) \u2295 p_5(Emersyn)\np_3(Emersyn) \u2192 p_4(Emersyn)\np_4(Emersyn) \u2192 \u00acp_3(Emersyn)",
            "Initial Goal": "\u00acp_3(Emersyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Emersyn)",
                    "-p_1(Emersyn)",
                    "p_0(Emersyn)",
                    "-(p_12(Emersyn) <-> p_2(Emersyn))",
                    "(-(p_10(Emersyn) <-> p_12(Emersyn))) -> p_1(Emersyn)",
                    "p_9(Emersyn) -> (p_10(Emersyn) & p_11(Emersyn))",
                    "p_0(Emersyn) -> (-(p_9(Emersyn) <-> p_8(Emersyn)))",
                    "p_8(Emersyn) -> p_7(Emersyn)",
                    "p_7(Emersyn) -> p_6(Emersyn)",
                    "-(p_5(Emersyn) <-> p_6(Emersyn))",
                    "-(p_4(Emersyn) <-> p_5(Emersyn))",
                    "p_3(Emersyn) -> p_4(Emersyn)",
                    "p_4(Emersyn) -> -p_3(Emersyn)"
                ],
                "formulas(goals)": [
                    "-p_3(Emersyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Emersyn) \u2192 p_3(Emersyn)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Emersyn) \u2192 \u00acp_3(Emersyn)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Emersyn)\n\u00acp_1(Emersyn)\np_0(Emersyn)\np_12(Emersyn) \u2295 p_2(Emersyn)\n(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)\np_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))\np_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))\np_8(Emersyn) \u2192 p_7(Emersyn)\np_7(Emersyn) \u2192 p_6(Emersyn)\np_5(Emersyn) \u2295 p_6(Emersyn)\np_4(Emersyn) \u2295 p_5(Emersyn)\np_3(Emersyn) \u2192 p_4(Emersyn)\np_4(Emersyn) \u2192 p_3(Emersyn)",
            "Initial Goal": "\u00acp_3(Emersyn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Emersyn)",
                    "-p_1(Emersyn)",
                    "p_0(Emersyn)",
                    "-(p_12(Emersyn) <-> p_2(Emersyn))",
                    "(-(p_10(Emersyn) <-> p_12(Emersyn))) -> p_1(Emersyn)",
                    "p_9(Emersyn) -> (p_10(Emersyn) & p_11(Emersyn))",
                    "p_0(Emersyn) -> (-(p_9(Emersyn) <-> p_8(Emersyn)))",
                    "p_8(Emersyn) -> p_7(Emersyn)",
                    "p_7(Emersyn) -> p_6(Emersyn)",
                    "-(p_5(Emersyn) <-> p_6(Emersyn))",
                    "-(p_4(Emersyn) <-> p_5(Emersyn))",
                    "p_3(Emersyn) -> p_4(Emersyn)",
                    "p_4(Emersyn) -> p_3(Emersyn)"
                ],
                "formulas(goals)": [
                    "-(-p_3(Emersyn))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Emersyn) \u2192 \u00acp_3(Emersyn)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Emersyn) \u2192 p_3(Emersyn)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Emersyn)\n\u00acp_1(Emersyn)\np_0(Emersyn)\n(p_12(Emersyn) \u2295 p_2(Emersyn))\n(p_10(Emersyn) \u2295 p_12(Emersyn)) \u2192 p_1(Emersyn)\np_9(Emersyn) \u2192 (p_10(Emersyn) \u2227 p_11(Emersyn))\np_0(Emersyn) \u2192 (p_9(Emersyn) \u2295 p_8(Emersyn))\np_8(Emersyn) \u2192 p_7(Emersyn)\np_7(Emersyn) \u2192 \u00acp_6(Emersyn)\n(p_5(Emersyn) \u2295 p_6(Emersyn))\n(p_4(Emersyn) \u2295 p_5(Emersyn))\np_3(Emersyn) \u2192 p_4(Emersyn)\np_4(Emersyn) \u2192 p_3(Emersyn)",
            "Initial Goal": "\u00acp_3(Emersyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Emersyn)",
                    "-p_1(Emersyn)",
                    "p_0(Emersyn)",
                    "p_12(Emersyn) | p_2(Emersyn)",
                    "-p_12(Emersyn) | -p_2(Emersyn)",
                    "((p_10(Emersyn) | p_12(Emersyn)) & (-p_10(Emersyn) | -p_12(Emersyn))) -> p_1(Emersyn)",
                    "p_9(Emersyn) -> (p_10(Emersyn) & p_11(Emersyn))",
                    "p_0(Emersyn) -> ((p_9(Emersyn) | p_8(Emersyn)) & (-p_9(Emersyn) | -p_8(Emersyn)))",
                    "p_8(Emersyn) -> p_7(Emersyn)",
                    "p_7(Emersyn) -> -p_6(Emersyn)",
                    "p_5(Emersyn) | p_6(Emersyn)",
                    "-p_5(Emersyn) | -p_6(Emersyn)",
                    "p_4(Emersyn) | p_5(Emersyn)",
                    "-p_4(Emersyn) | -p_5(Emersyn)",
                    "p_3(Emersyn) -> p_4(Emersyn)",
                    "p_4(Emersyn) -> p_3(Emersyn)"
                ],
                "formulas(goals)": [
                    "-p_3(Emersyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Emersyn) \u2192 p_6(Emersyn)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Emersyn) \u2192 \u00acp_6(Emersyn)"
                ]
            }
        }
    ]
}