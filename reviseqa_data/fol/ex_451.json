{
    "background_story": "Amara, a vibrant and active 28-year-old, was suddenly faced with a painful and unexpected health issue - urethritis, an inflammation of the urethra. The symptoms caught her off guard, causing discomfort and anxiety. Determined to regain her health, Amara consulted a urologist and began a course of antibiotics. She also made significant lifestyle changes, including increasing her water intake and practicing better hygiene. Through her journey, Amara learned the importance of prioritizing her health and being proactive about seeking medical care when needed. With treatment and self-care, Amara was able to manage her condition and return to her normal, active lifestyle, more informed and appreciative of her overall well-being.",
    "predicates": [
        {
            "id": 0,
            "name": "seeks_medical_help"
        },
        {
            "id": 1,
            "name": "experiences_pain"
        },
        {
            "id": 2,
            "name": "feels_better"
        },
        {
            "id": 3,
            "name": "feels_energized"
        },
        {
            "id": 4,
            "name": "maintains_weight"
        },
        {
            "id": 5,
            "name": "sleeps_soundly"
        },
        {
            "id": 6,
            "name": "feels_active"
        },
        {
            "id": 7,
            "name": "has_urethritis"
        },
        {
            "id": 8,
            "name": "makes_lifestyle_changes"
        },
        {
            "id": 9,
            "name": "regains_health"
        },
        {
            "id": 10,
            "name": "takes_medicine"
        },
        {
            "id": 11,
            "name": "eats_well"
        },
        {
            "id": 12,
            "name": "stays_hydrated"
        },
        {
            "id": 13,
            "name": "stays_healthy"
        },
        {
            "id": 14,
            "name": "gets_exercise"
        },
        {
            "id": 15,
            "name": "manages_stress"
        },
        {
            "id": 16,
            "name": "faces_challenges"
        },
        {
            "id": 17,
            "name": "wants_improvement"
        },
        {
            "id": 18,
            "name": "seeks_treatment"
        },
        {
            "id": 19,
            "name": "gains_knowledge"
        },
        {
            "id": 20,
            "name": "gets_sick"
        },
        {
            "id": 21,
            "name": "sees_doctor"
        },
        {
            "id": 22,
            "name": "gets_checkups"
        },
        {
            "id": 23,
            "name": "takes_care"
        },
        {
            "id": 24,
            "name": "practices_self_care"
        },
        {
            "id": 25,
            "name": "gets_enough_rest"
        },
        {
            "id": 26,
            "name": "is_active"
        },
        {
            "id": 27,
            "name": "has_balance"
        }
    ],
    "subject_name": "Amara",
    "subject_category": "human",
    "keyword": "urethritis",
    "all_facts": [
        {
            "id": 0,
            "subject": "Amara",
            "text": "Amara does not seek medical help.",
            "fol": "\u00acp_0(Amara)",
            "str_fol": "\u00acseeks_medical_help(Amara)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Amara",
            "text": "Amara experiences pain.",
            "fol": "p_1(Amara)",
            "str_fol": "experiences_pain(Amara)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Amara",
            "text": "Amara does not feel better.",
            "fol": "\u00acp_2(Amara)",
            "str_fol": "\u00acfeels_better(Amara)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Amara",
            "text": "Amara does not feel energized.",
            "fol": "\u00acp_3(Amara)",
            "str_fol": "\u00acfeels_energized(Amara)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Amara",
            "text": "Amara does not maintain a healthy weight.",
            "fol": "\u00acp_4(Amara)",
            "str_fol": "\u00acmaintains_weight(Amara)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Amara",
            "text": "Amara does not sleep soundly.",
            "fol": "\u00acp_5(Amara)",
            "str_fol": "\u00acsleeps_soundly(Amara)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Amara",
            "text": "Amara does not feel active.",
            "fol": "\u00acp_6(Amara)",
            "str_fol": "\u00acfeels_active(Amara)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Amara",
            "text": "Amara does not get exercise.",
            "fol": "\u00acp_14(Amara)",
            "str_fol": "\u00acgets_exercise(Amara)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Amara",
            "text": "Amara does not stay hydrated.",
            "fol": "\u00acp_12(Amara)",
            "str_fol": "\u00acstays_hydrated(Amara)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Amara",
            "text": "Amara does not stay healthy.",
            "fol": "\u00acp_13(Amara)",
            "str_fol": "\u00acstays_healthy(Amara)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Amara",
            "text": "Amara does not eat well.",
            "fol": "\u00acp_11(Amara)",
            "str_fol": "\u00aceats_well(Amara)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Amara",
            "text": "Amara takes medicine.",
            "fol": "p_10(Amara)",
            "str_fol": "takes_medicine(Amara)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Amara",
            "text": "Amara does not regain health.",
            "fol": "\u00acp_9(Amara)",
            "str_fol": "\u00acregains_health(Amara)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Amara",
            "text": "Amara does not make lifestyle changes.",
            "fol": "\u00acp_8(Amara)",
            "str_fol": "\u00acmakes_lifestyle_changes(Amara)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Amara",
            "text": "Amara has urethritis.",
            "fol": "p_7(Amara)",
            "str_fol": "has_urethritis(Amara)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Amara",
            "text": "Amara does not sleep soundly.",
            "fol": "\u00acp_5(Amara)",
            "str_fol": "\u00acsleeps_soundly(Amara)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Amara",
            "text": "Amara does not feel active.",
            "fol": "\u00acp_6(Amara)",
            "str_fol": "\u00acfeels_active(Amara)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Amara",
            "text": "Amara does not feel energized.",
            "fol": "\u00acp_3(Amara)",
            "str_fol": "\u00acfeels_energized(Amara)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Amara",
            "text": "Amara does not maintain a healthy weight.",
            "fol": "\u00acp_4(Amara)",
            "str_fol": "\u00acmaintains_weight(Amara)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Amara",
            "text": "Amara does not feel better.",
            "fol": "\u00acp_2(Amara)",
            "str_fol": "\u00acfeels_better(Amara)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Amara",
            "text": "Amara experiences pain.",
            "fol": "p_1(Amara)",
            "str_fol": "experiences_pain(Amara)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Amara",
            "text": "Amara does not seek medical help.",
            "fol": "\u00acp_0(Amara)",
            "str_fol": "\u00acseeks_medical_help(Amara)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Amara either sleeps soundly or gets exercise (but not both), then she feels active.",
            "fol": "(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)",
            "str_fol": "(sleeps_soundly(Amara) \u2295 gets_exercise(Amara)) \u2192 feels_active(Amara)"
        },
        {
            "id": 6,
            "text": "Anyone who stays hydrated either feels energized or maintains a healthy weight (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))",
            "str_fol": "\u2200x (stays_hydrated(x) \u2192 (feels_energized(x) \u2228 maintains_weight(x)))"
        },
        {
            "id": 5,
            "text": "If a person stays healthy, then they get exercise and manage stress.",
            "fol": "\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))",
            "str_fol": "\u2200x (stays_healthy(x) \u2192 (gets_exercise(x) \u2227 manages_stress(x)))"
        },
        {
            "id": 4,
            "text": "Anyone who stays hydrated or eats well can stay healthy.",
            "fol": "\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((stays_hydrated(x) \u2228 eats_well(x)) \u2192 stays_healthy(x))"
        },
        {
            "id": 3,
            "text": "Amara either eats well or takes medicine.",
            "fol": "p_11(Amara) \u2228 p_10(Amara)",
            "str_fol": "eats_well(Amara) \u2228 takes_medicine(Amara)"
        },
        {
            "id": 2,
            "text": "For all humans, if they take medicine and regain health, then they feel better.",
            "fol": "\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((takes_medicine(x) \u2227 regains_health(x)) \u2192 feels_better(x))"
        },
        {
            "id": 1,
            "text": "If Amara experiences pain and makes lifestyle changes, then she regains health.",
            "fol": "(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)",
            "str_fol": "(experiences_pain(Amara) \u2227 makes_lifestyle_changes(Amara)) \u2192 regains_health(Amara)"
        },
        {
            "id": 0,
            "text": "For all humans, if someone has urethritis, then they either seek medical help or make lifestyle changes (or both).",
            "fol": "\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (has_urethritis(x) \u2192 (seeks_medical_help(x) \u2228 makes_lifestyle_changes(x)))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Amara",
            "text": "Amara does not sleep soundly.",
            "fol": "\u00acp_5(Amara)",
            "str_fol": "\u00acsleeps_soundly(Amara)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Amara",
            "text": "Amara does not feel active.",
            "fol": "\u00acp_6(Amara)",
            "str_fol": "\u00acfeels_active(Amara)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Amara",
            "text": "Amara does not feel energized.",
            "fol": "\u00acp_3(Amara)",
            "str_fol": "\u00acfeels_energized(Amara)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Amara",
            "text": "Amara does not maintain a healthy weight.",
            "fol": "\u00acp_4(Amara)",
            "str_fol": "\u00acmaintains_weight(Amara)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Amara",
            "text": "Amara does not feel better.",
            "fol": "\u00acp_2(Amara)",
            "str_fol": "\u00acfeels_better(Amara)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Amara",
            "text": "Amara experiences pain.",
            "fol": "p_1(Amara)",
            "str_fol": "experiences_pain(Amara)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Amara",
            "text": "Amara does not seek medical help.",
            "fol": "\u00acp_0(Amara)",
            "str_fol": "\u00acseeks_medical_help(Amara)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If Amara either sleeps soundly or gets exercise (but not both), then she feels active.",
            "fol": "(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)",
            "str_fol": "(sleeps_soundly(Amara) \u2295 gets_exercise(Amara)) \u2192 feels_active(Amara)"
        },
        {
            "id": 6,
            "text": "Anyone who stays hydrated either feels energized or maintains a healthy weight (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))",
            "str_fol": "\u2200x (stays_hydrated(x) \u2192 (feels_energized(x) \u2228 maintains_weight(x)))"
        },
        {
            "id": 5,
            "text": "If a person stays healthy, then they get exercise and manage stress.",
            "fol": "\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))",
            "str_fol": "\u2200x (stays_healthy(x) \u2192 (gets_exercise(x) \u2227 manages_stress(x)))"
        },
        {
            "id": 4,
            "text": "Anyone who stays hydrated or eats well can stay healthy.",
            "fol": "\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((stays_hydrated(x) \u2228 eats_well(x)) \u2192 stays_healthy(x))"
        },
        {
            "id": 3,
            "text": "Amara either eats well or takes medicine.",
            "fol": "p_11(Amara) \u2228 p_10(Amara)",
            "str_fol": "eats_well(Amara) \u2228 takes_medicine(Amara)"
        },
        {
            "id": 2,
            "text": "For all humans, if they take medicine and regain health, then they feel better.",
            "fol": "\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((takes_medicine(x) \u2227 regains_health(x)) \u2192 feels_better(x))"
        },
        {
            "id": 1,
            "text": "If Amara experiences pain and makes lifestyle changes, then she regains health.",
            "fol": "(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)",
            "str_fol": "(experiences_pain(Amara) \u2227 makes_lifestyle_changes(Amara)) \u2192 regains_health(Amara)"
        },
        {
            "id": 0,
            "text": "For all humans, if someone has urethritis, then they either seek medical help or make lifestyle changes (or both).",
            "fol": "\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (has_urethritis(x) \u2192 (seeks_medical_help(x) \u2228 makes_lifestyle_changes(x)))"
        }
    ],
    "context_fol": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\n\u00acp_2(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\np_11(Amara) \u2228 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))",
    "conclusion": {
        "id": 14,
        "subject": "Amara",
        "text": "Amara has urethritis.",
        "fol": "p_7(Amara)",
        "str_fol": "has_urethritis(Amara)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_7(Amara)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Amara",
                    "text": "Amara does not sleep soundly.",
                    "fol": "\u00acp_5(Amara)",
                    "str_fol": "\u00acsleeps_soundly(Amara)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Amara",
                    "text": "Amara does not feel active.",
                    "fol": "\u00acp_6(Amara)",
                    "str_fol": "\u00acfeels_active(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Amara either sleeps soundly or gets exercise (but not both), then she feels active.",
                    "fol": "(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)",
                    "str_fol": "(sleeps_soundly(Amara) \u2295 gets_exercise(Amara)) \u2192 feels_active(Amara)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Amara",
                "text": "Amara does not get exercise.",
                "fol": "\u00acp_14(Amara)",
                "str_fol": "\u00acgets_exercise(Amara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Amara",
                    "text": "Amara does not feel energized.",
                    "fol": "\u00acp_3(Amara)",
                    "str_fol": "\u00acfeels_energized(Amara)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Amara",
                    "text": "Amara does not maintain a healthy weight.",
                    "fol": "\u00acp_4(Amara)",
                    "str_fol": "\u00acmaintains_weight(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who stays hydrated either feels energized or maintains a healthy weight (or both).",
                    "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))",
                    "str_fol": "\u2200x (stays_hydrated(x) \u2192 (feels_energized(x) \u2228 maintains_weight(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Amara",
                "text": "Amara does not stay hydrated.",
                "fol": "\u00acp_12(Amara)",
                "str_fol": "\u00acstays_hydrated(Amara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Amara",
                    "text": "Amara does not get exercise.",
                    "fol": "\u00acp_14(Amara)",
                    "str_fol": "\u00acgets_exercise(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If a person stays healthy, then they get exercise and manage stress.",
                    "fol": "\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))",
                    "str_fol": "\u2200x (stays_healthy(x) \u2192 (gets_exercise(x) \u2227 manages_stress(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Amara",
                "text": "Amara does not stay healthy.",
                "fol": "\u00acp_13(Amara)",
                "str_fol": "\u00acstays_healthy(Amara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Amara",
                    "text": "Amara does not stay hydrated.",
                    "fol": "\u00acp_12(Amara)",
                    "str_fol": "\u00acstays_hydrated(Amara)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Amara",
                    "text": "Amara does not stay healthy.",
                    "fol": "\u00acp_13(Amara)",
                    "str_fol": "\u00acstays_healthy(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who stays hydrated or eats well can stay healthy.",
                    "fol": "\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((stays_hydrated(x) \u2228 eats_well(x)) \u2192 stays_healthy(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Amara",
                "text": "Amara does not eat well.",
                "fol": "\u00acp_11(Amara)",
                "str_fol": "\u00aceats_well(Amara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Amara",
                    "text": "Amara does not eat well.",
                    "fol": "\u00acp_11(Amara)",
                    "str_fol": "\u00aceats_well(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Amara either eats well or takes medicine.",
                    "fol": "p_11(Amara) \u2228 p_10(Amara)",
                    "str_fol": "eats_well(Amara) \u2228 takes_medicine(Amara)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Amara",
                "text": "Amara takes medicine.",
                "fol": "p_10(Amara)",
                "str_fol": "takes_medicine(Amara)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Amara",
                    "text": "Amara takes medicine.",
                    "fol": "p_10(Amara)",
                    "str_fol": "takes_medicine(Amara)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Amara",
                    "text": "Amara does not feel better.",
                    "fol": "\u00acp_2(Amara)",
                    "str_fol": "\u00acfeels_better(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For all humans, if they take medicine and regain health, then they feel better.",
                    "fol": "\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((takes_medicine(x) \u2227 regains_health(x)) \u2192 feels_better(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Amara",
                "text": "Amara does not regain health.",
                "fol": "\u00acp_9(Amara)",
                "str_fol": "\u00acregains_health(Amara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Amara",
                    "text": "Amara experiences pain.",
                    "fol": "p_1(Amara)",
                    "str_fol": "experiences_pain(Amara)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Amara",
                    "text": "Amara does not regain health.",
                    "fol": "\u00acp_9(Amara)",
                    "str_fol": "\u00acregains_health(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Amara experiences pain and makes lifestyle changes, then she regains health.",
                    "fol": "(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)",
                    "str_fol": "(experiences_pain(Amara) \u2227 makes_lifestyle_changes(Amara)) \u2192 regains_health(Amara)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Amara",
                "text": "Amara does not make lifestyle changes.",
                "fol": "\u00acp_8(Amara)",
                "str_fol": "\u00acmakes_lifestyle_changes(Amara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Amara",
                    "text": "Amara does not seek medical help.",
                    "fol": "\u00acp_0(Amara)",
                    "str_fol": "\u00acseeks_medical_help(Amara)",
                    "negation": true
                },
                {
                    "id": 13,
                    "subject": "Amara",
                    "text": "Amara does not make lifestyle changes.",
                    "fol": "\u00acp_8(Amara)",
                    "str_fol": "\u00acmakes_lifestyle_changes(Amara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if someone has urethritis, then they either seek medical help or make lifestyle changes (or both).",
                    "fol": "\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))",
                    "str_fol": "\u2200x (has_urethritis(x) \u2192 (seeks_medical_help(x) \u2228 makes_lifestyle_changes(x)))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Amara",
                "text": "Amara has urethritis.",
                "fol": "p_7(Amara)",
                "str_fol": "has_urethritis(Amara)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_5(Amara) <-> p_14(Amara)) -> p_6(Amara).  [assumption].\n3 (all x (p_13(x) -> p_14(x) & p_15(x))).  [assumption].\n4 (all x (p_12(x) | p_11(x) -> p_13(x))).  [assumption].\n5 (all x (p_10(x) & p_9(x) -> p_2(x))).  [assumption].\n6 p_1(Amara) & p_8(Amara) -> p_9(Amara).  [assumption].\n7 (all x (p_7(x) -> p_0(x) | p_8(x))).  [assumption].\n8 -p_7(Amara).  [goal].\n9 p_5(Amara) | -p_14(Amara) | p_6(Amara).  [clausify(1)].\n10 -p_5(Amara).  [assumption].\n12 -p_14(Amara) | p_6(Amara).  [resolve(9,a,10,a)].\n13 -p_6(Amara).  [assumption].\n18 -p_10(x) | -p_9(x) | p_2(x).  [clausify(5)].\n19 -p_2(Amara).  [assumption].\n20 -p_1(Amara) | -p_8(Amara) | p_9(Amara).  [clausify(6)].\n21 p_1(Amara).  [assumption].\n22 -p_7(x) | p_0(x) | p_8(x).  [clausify(7)].\n23 -p_0(Amara).  [assumption].\n25 -p_13(x) | p_14(x).  [clausify(3)].\n27 -p_11(x) | p_13(x).  [clausify(4)].\n28 -p_11(x) | p_14(x).  [resolve(27,b,25,a)].\n29 p_11(Amara) | p_10(Amara).  [assumption].\n31 -p_7(Amara) | p_8(Amara).  [resolve(22,b,23,a)].\n32 p_7(Amara).  [deny(8)].\n34 -p_14(Amara).  [resolve(12,b,13,a)].\n35 p_14(Amara) | p_10(Amara).  [resolve(28,a,29,a)].\n37 -p_10(Amara) | -p_9(Amara).  [resolve(18,c,19,a)].\n38 p_10(Amara).  [resolve(35,a,34,a)].\n39 p_8(Amara).  [resolve(31,a,32,a)].\n40 -p_8(Amara) | p_9(Amara).  [resolve(20,a,21,a)].\n41 p_9(Amara).  [resolve(39,a,40,a)].\n42 -p_9(Amara).  [resolve(38,a,37,a)].\n43 $F.  [resolve(41,a,42,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\np_11(Amara) \u2228 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))\np_10(Amara) \u2192 p_7(Amara)\np_1(Amara) \u2192 \u00acp_11(Amara)",
            "Initial Goal": "p_7(Amara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara)",
                    "-p_6(Amara)",
                    "-p_3(Amara)",
                    "-p_4(Amara)",
                    "p_1(Amara)",
                    "-p_0(Amara)",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_6(Amara)",
                    "all x (p_12(x) -> (p_3(x) | p_4(x)))",
                    "all x (p_13(x) -> (p_14(x) & p_15(x)))",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x))",
                    "p_11(Amara) | p_10(Amara)",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x))",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara)",
                    "all x (p_7(x) -> (p_0(x) | p_8(x)))",
                    "p_10(Amara) -> p_7(Amara)",
                    "p_1(Amara) -> -p_11(Amara)"
                ],
                "formulas(goals)": [
                    "p_7(Amara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_2(Amara)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Amara) \u2192 p_7(Amara)",
                    "p_1(Amara) \u2192 \u00acp_11(Amara)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\np_11(Amara) \u2228 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))\np_1(Amara) \u2192 \u00acp_11(Amara)\np_10(Amara) \u2192 \u00acp_7(Amara)",
            "Initial Goal": "p_7(Amara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara).",
                    "-p_6(Amara).",
                    "-p_3(Amara).",
                    "-p_4(Amara).",
                    "p_1(Amara).",
                    "-p_0(Amara).",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_6(Amara).",
                    "all x (p_12(x) -> (p_3(x) | p_4(x))).",
                    "all x (p_13(x) -> (p_14(x) & p_15(x))).",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x)).",
                    "p_11(Amara) | p_10(Amara).",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x)).",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara).",
                    "all x (p_7(x) -> (p_0(x) | p_8(x))).",
                    "p_1(Amara) -> -p_11(Amara).",
                    "p_10(Amara) -> -p_7(Amara)."
                ],
                "formulas(goals)": [
                    "-p_7(Amara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Amara) \u2192 p_7(Amara)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Amara) \u2192 \u00acp_7(Amara)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Amara).\n\u00acp_6(Amara).\n\u00acp_3(Amara).\n\u00acp_4(Amara).\np_1(Amara).\n\u00acp_0(Amara).\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara).\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x))).\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x))).\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x)).\np_11(Amara) \u2228 p_10(Amara).\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x)).\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara).\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x))).\np_1(Amara) \u2192 p_11(Amara).\np_11(Amara) \u2192 p_7(Amara).\np_10(Amara) \u2192 \u00acp_7(Amara).",
            "Initial Goal": "p_7(Amara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara).",
                    "-p_6(Amara).",
                    "-p_3(Amara).",
                    "-p_4(Amara).",
                    "p_1(Amara).",
                    "-p_0(Amara).",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_6(Amara).",
                    "all x (p_12(x) -> (p_3(x) | p_4(x))).",
                    "all x (p_13(x) -> (p_14(x) & p_15(x))).",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x)).",
                    "p_11(Amara) | p_10(Amara).",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x)).",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara).",
                    "all x (p_7(x) -> (p_0(x) | p_8(x))).",
                    "p_1(Amara) -> p_11(Amara).",
                    "p_11(Amara) -> p_7(Amara).",
                    "p_10(Amara) -> -p_7(Amara)."
                ],
                "formulas(goals)": [
                    "p_7(Amara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_1(Amara) \u2192 \u00acp_11(Amara)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_1(Amara) \u2192 p_11(Amara)",
                    "p_11(Amara) \u2192 p_7(Amara)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\np_11(Amara) \u2228 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))\np_11(Amara) \u2192 p_7(Amara)\np_10(Amara) \u2192 \u00acp_7(Amara)\np_1(Amara) \u2192 p_10(Amara)",
            "Initial Goal": "p_7(Amara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara).",
                    "-p_6(Amara).",
                    "-p_3(Amara).",
                    "-p_4(Amara).",
                    "p_1(Amara).",
                    "-p_0(Amara).",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_6(Amara).",
                    "all x (p_12(x) -> (p_3(x) | p_4(x))).",
                    "all x (p_13(x) -> (p_14(x) & p_15(x))).",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x)).",
                    "p_11(Amara) | p_10(Amara).",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x)).",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara).",
                    "all x (p_7(x) -> (p_0(x) | p_8(x))).",
                    "p_11(Amara) -> p_7(Amara).",
                    "p_10(Amara) -> -p_7(Amara).",
                    "p_1(Amara) -> p_10(Amara)."
                ],
                "formulas(goals)": [
                    "-p_7(Amara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_1(Amara) \u2192 p_11(Amara)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_1(Amara) \u2192 p_10(Amara)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_7(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\np_11(Amara) \u2228 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))\np_11(Amara) \u2192 p_7(Amara)\np_10(Amara) \u2192 \u00acp_7(Amara)\np_1(Amara) \u2192 \u00acp_10(Amara)",
            "Initial Goal": "p_7(Amara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara)",
                    "-p_6(Amara)",
                    "-p_3(Amara)",
                    "-p_4(Amara)",
                    "p_1(Amara)",
                    "-p_0(Amara)",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_7(Amara)",
                    "all x (p_12(x) -> (p_3(x) | p_4(x)))",
                    "all x (p_13(x) -> (p_14(x) & p_15(x)))",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x))",
                    "p_11(Amara) | p_10(Amara)",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x))",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara)",
                    "all x (p_7(x) -> (p_0(x) | p_8(x)))",
                    "p_11(Amara) -> p_7(Amara)",
                    "p_10(Amara) -> -p_7(Amara)",
                    "p_1(Amara) -> -p_10(Amara)"
                ],
                "formulas(goals)": [
                    "p_7(Amara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_6(Amara)",
                    "p_1(Amara) \u2192 p_10(Amara)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_7(Amara)",
                    "p_1(Amara) \u2192 \u00acp_10(Amara)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_7(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\n\u00acp_11(Amara) \u2192 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))\np_11(Amara) \u2192 p_7(Amara)\np_10(Amara) \u2192 \u00acp_7(Amara)\np_10(Amara) \u2192 \u00acp_1(Amara)\n\u00acp_10(Amara)",
            "Initial Goal": "p_7(Amara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara)",
                    "-p_6(Amara)",
                    "-p_3(Amara)",
                    "-p_4(Amara)",
                    "p_1(Amara)",
                    "-p_0(Amara)",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_7(Amara)",
                    "all x (p_12(x) -> (p_3(x) | p_4(x)))",
                    "all x (p_13(x) -> (p_14(x) & p_15(x)))",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x))",
                    "-p_11(Amara) -> p_10(Amara)",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x))",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara)",
                    "all x (p_7(x) -> (p_0(x) | p_8(x)))",
                    "p_11(Amara) -> p_7(Amara)",
                    "p_10(Amara) -> -p_7(Amara)",
                    "p_10(Amara) -> -p_1(Amara)",
                    "-p_10(Amara)"
                ],
                "formulas(goals)": [
                    "p_7(Amara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Amara)"
                ],
                "added_rules": [
                    "\u00acp_11(Amara) \u2192 p_10(Amara)",
                    "p_10(Amara) \u2192 \u00acp_1(Amara)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Amara)\n\u00acp_6(Amara)\n\u00acp_3(Amara)\n\u00acp_4(Amara)\np_1(Amara)\n\u00acp_0(Amara)\n(p_5(Amara) \u2295 p_14(Amara)) \u2192 p_7(Amara)\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_4(x)))\n\u2200x (p_13(x) \u2192 (p_14(x) \u2227 p_15(x)))\n\u2200x ((p_12(x) \u2228 p_11(x)) \u2192 p_13(x))\n\u00acp_11(Amara) \u2192 p_10(Amara)\n\u2200x ((p_10(x) \u2227 p_9(x)) \u2192 p_2(x))\n(p_1(Amara) \u2227 p_8(Amara)) \u2192 p_9(Amara)\n\u2200x (p_7(x) \u2192 (p_0(x) \u2228 p_8(x)))\np_11(Amara) \u2192 p_7(Amara)\np_10(Amara) \u2192 \u00acp_7(Amara)\np_10(Amara) \u2192 \u00acp_1(Amara)\np_1(Amara) \u2192 \u00acp_11(Amara)",
            "Initial Goal": "p_7(Amara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Amara).",
                    "-p_6(Amara).",
                    "-p_3(Amara).",
                    "-p_4(Amara).",
                    "p_1(Amara).",
                    "-p_0(Amara).",
                    "(-(p_5(Amara) <-> p_14(Amara))) -> p_7(Amara).",
                    "all x (p_12(x) -> (p_3(x) | p_4(x))).",
                    "all x (p_13(x) -> (p_14(x) & p_15(x))).",
                    "all x ((p_12(x) | p_11(x)) -> p_13(x)).",
                    "-p_11(Amara) -> p_10(Amara).",
                    "all x ((p_10(x) & p_9(x)) -> p_2(x)).",
                    "(p_1(Amara) & p_8(Amara)) -> p_9(Amara).",
                    "all x (p_7(x) -> (p_0(x) | p_8(x))).",
                    "p_11(Amara) -> p_7(Amara).",
                    "p_10(Amara) -> -p_7(Amara).",
                    "p_10(Amara) -> -p_1(Amara).",
                    "p_1(Amara) -> -p_11(Amara)."
                ],
                "formulas(goals)": [
                    "-p_7(Amara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_10(Amara)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_1(Amara) \u2192 \u00acp_11(Amara)"
                ]
            }
        }
    ]
}