{
    "background_story": "Brielle was a dedicated environmentalist who spent most of her life studying the majestic Shorea trees native to the rainforests of Southeast Asia. She was particularly fascinated by the Shorea's unique ability to support entire ecosystems. Brielle dedicated herself to conserving these natural wonders, working tirelessly with local communities to protect the forests from deforestation. Her efforts led to the establishment of several protected areas, safeguarding not only the Shorea but also the countless species that call these forests home. Brielle's love and respect for nature inspired a new generation of conservationists, and her work will forever be linked to the preservation of the Shorea and the biodiversity it embodies.",
    "predicates": [
        {
            "id": 0,
            "name": "defends_biodiversity"
        },
        {
            "id": 1,
            "name": "supports_ecosystems"
        },
        {
            "id": 2,
            "name": "is_conservational"
        },
        {
            "id": 3,
            "name": "uses_recycling"
        },
        {
            "id": 4,
            "name": "loves_wildlife"
        },
        {
            "id": 5,
            "name": "cares_for_nature"
        },
        {
            "id": 6,
            "name": "respects_environment"
        },
        {
            "id": 7,
            "name": "saves_trees"
        },
        {
            "id": 8,
            "name": "protects_forests"
        },
        {
            "id": 9,
            "name": "reduces_waste"
        },
        {
            "id": 10,
            "name": "lives_sustainably"
        },
        {
            "id": 11,
            "name": "promotes_education"
        },
        {
            "id": 12,
            "name": "appreciates_beauty"
        },
        {
            "id": 13,
            "name": "conserves_resources"
        },
        {
            "id": 14,
            "name": "hikes_often"
        },
        {
            "id": 15,
            "name": "admires_animals"
        },
        {
            "id": 16,
            "name": "plants_seeds"
        },
        {
            "id": 17,
            "name": "fights_pollution"
        },
        {
            "id": 18,
            "name": "fights_deforestation"
        },
        {
            "id": 19,
            "name": "promotes_sustainability"
        },
        {
            "id": 20,
            "name": "avoids_plastic"
        },
        {
            "id": 21,
            "name": "uses_renewable"
        },
        {
            "id": 22,
            "name": "environment"
        }
    ],
    "subject_name": "Brielle",
    "subject_category": "human",
    "keyword": "shorea",
    "all_facts": [
        {
            "id": 0,
            "subject": "Brielle",
            "text": "Brielle defends biodiversity.",
            "fol": "p_0(Brielle)",
            "str_fol": "defends_biodiversity(Brielle)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Brielle",
            "text": "Brielle does not support ecosystems.",
            "fol": "\u00acp_1(Brielle)",
            "str_fol": "\u00acsupports_ecosystems(Brielle)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Brielle",
            "text": "Brielle is conservational.",
            "fol": "p_2(Brielle)",
            "str_fol": "is_conservational(Brielle)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Brielle",
            "text": "Brielle does not use recycling.",
            "fol": "\u00acp_3(Brielle)",
            "str_fol": "\u00acuses_recycling(Brielle)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Brielle",
            "text": "Brielle reduces waste.",
            "fol": "p_9(Brielle)",
            "str_fol": "reduces_waste(Brielle)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Brielle",
            "text": "Brielle protects forests.",
            "fol": "p_8(Brielle)",
            "str_fol": "protects_forests(Brielle)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Brielle",
            "text": "Brielle does not save trees.",
            "fol": "\u00acp_7(Brielle)",
            "str_fol": "\u00acsaves_trees(Brielle)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Brielle",
            "text": "Brielle loves wildlife.",
            "fol": "p_4(Brielle)",
            "str_fol": "loves_wildlife(Brielle)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Brielle",
            "text": "Brielle does not respect the environment.",
            "fol": "\u00acp_6(Brielle)",
            "str_fol": "\u00acrespects_environment(Brielle)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Brielle",
            "text": "Brielle does not care for nature.",
            "fol": "\u00acp_5(Brielle)",
            "str_fol": "\u00accares_for_nature(Brielle)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Brielle",
            "text": "Brielle either cares for nature or respects the environment (or both).",
            "fol": "p_5(Brielle) \u2228 respects_environment(Brielle)",
            "str_fol": "cares_for_nature(Brielle) \u2228 respects_environment(Brielle)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Brielle",
            "text": "Brielle does not use recycling.",
            "fol": "\u00acp_3(Brielle)",
            "str_fol": "\u00acuses_recycling(Brielle)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Brielle",
            "text": "Brielle defends biodiversity.",
            "fol": "p_0(Brielle)",
            "str_fol": "defends_biodiversity(Brielle)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Brielle",
            "text": "Brielle is conservational.",
            "fol": "p_2(Brielle)",
            "str_fol": "is_conservational(Brielle)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Brielle",
            "text": "Brielle does not support ecosystems.",
            "fol": "\u00acp_1(Brielle)",
            "str_fol": "\u00acsupports_ecosystems(Brielle)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Brielle uses recycling or reduces waste.",
            "fol": "p_3(Brielle) \u2228 p_9(Brielle)",
            "str_fol": "uses_recycling(Brielle) \u2228 reduces_waste(Brielle)"
        },
        {
            "id": 4,
            "text": "Anyone who defends biodiversity will protect forests.",
            "fol": "\u2200x (p_0(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (defends_biodiversity(x) \u2192 protects_forests(x))"
        },
        {
            "id": 3,
            "text": "If Brielle is conservational, then she either reduces waste or saves trees, but not both.",
            "fol": "p_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))",
            "str_fol": "is_conservational(Brielle) \u2192 (reduces_waste(Brielle) \u2295 saves_trees(Brielle))"
        },
        {
            "id": 2,
            "text": "Anyone who protects forests either loves wildlife or supports ecosystems.",
            "fol": "\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (protects_forests(x) \u2192 (loves_wildlife(x) \u2228 supports_ecosystems(x)))"
        },
        {
            "id": 1,
            "text": "If Brielle respects the environment, then she saves trees.",
            "fol": "p_6(Brielle) \u2192 p_7(Brielle)",
            "str_fol": "respects_environment(Brielle) \u2192 saves_trees(Brielle)"
        },
        {
            "id": 0,
            "text": "Brielle either loves wildlife or cares for nature, which is evident in her dedication to conserving the Shorea trees and the ecosystems they support.",
            "fol": "p_4(Brielle) \u2295 p_5(Brielle)",
            "str_fol": "loves_wildlife(Brielle) \u2295 cares_for_nature(Brielle)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Brielle",
            "text": "Brielle does not use recycling.",
            "fol": "\u00acp_3(Brielle)",
            "str_fol": "\u00acuses_recycling(Brielle)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Brielle",
            "text": "Brielle defends biodiversity.",
            "fol": "p_0(Brielle)",
            "str_fol": "defends_biodiversity(Brielle)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Brielle",
            "text": "Brielle is conservational.",
            "fol": "p_2(Brielle)",
            "str_fol": "is_conservational(Brielle)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Brielle",
            "text": "Brielle does not support ecosystems.",
            "fol": "\u00acp_1(Brielle)",
            "str_fol": "\u00acsupports_ecosystems(Brielle)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Brielle uses recycling or reduces waste.",
            "fol": "p_3(Brielle) \u2228 p_9(Brielle)",
            "str_fol": "uses_recycling(Brielle) \u2228 reduces_waste(Brielle)"
        },
        {
            "id": 4,
            "text": "Anyone who defends biodiversity will protect forests.",
            "fol": "\u2200x (p_0(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (defends_biodiversity(x) \u2192 protects_forests(x))"
        },
        {
            "id": 3,
            "text": "If Brielle is conservational, then she either reduces waste or saves trees, but not both.",
            "fol": "p_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))",
            "str_fol": "is_conservational(Brielle) \u2192 (reduces_waste(Brielle) \u2295 saves_trees(Brielle))"
        },
        {
            "id": 2,
            "text": "Anyone who protects forests either loves wildlife or supports ecosystems.",
            "fol": "\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (protects_forests(x) \u2192 (loves_wildlife(x) \u2228 supports_ecosystems(x)))"
        },
        {
            "id": 1,
            "text": "If Brielle respects the environment, then she saves trees.",
            "fol": "p_6(Brielle) \u2192 p_7(Brielle)",
            "str_fol": "respects_environment(Brielle) \u2192 saves_trees(Brielle)"
        },
        {
            "id": 0,
            "text": "Brielle either loves wildlife or cares for nature, which is evident in her dedication to conserving the Shorea trees and the ecosystems they support.",
            "fol": "p_4(Brielle) \u2295 p_5(Brielle)",
            "str_fol": "loves_wildlife(Brielle) \u2295 cares_for_nature(Brielle)"
        }
    ],
    "context_fol": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (p_0(x) \u2192 p_8(x))\np_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_4(Brielle) \u2295 p_5(Brielle)",
    "conclusion": {
        "id": 12,
        "text": "Brielle either cares for nature or respects the environment (or both).",
        "fol": "p_5(Brielle) \u2228 p_6(Brielle)",
        "str_fol": "cares_for_nature(Brielle) \u2228 respects_environment(Brielle)"
    },
    "initial_answer": "False",
    "initial_goal": "p_5(Brielle) \u2228 p_6(Brielle)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Brielle",
                    "text": "Brielle does not use recycling.",
                    "fol": "\u00acp_3(Brielle)",
                    "str_fol": "\u00acuses_recycling(Brielle)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Brielle uses recycling or reduces waste.",
                    "fol": "p_3(Brielle) \u2228 p_9(Brielle)",
                    "str_fol": "uses_recycling(Brielle) \u2228 reduces_waste(Brielle)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Brielle",
                "text": "Brielle reduces waste.",
                "fol": "p_9(Brielle)",
                "str_fol": "reduces_waste(Brielle)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Brielle",
                    "text": "Brielle defends biodiversity.",
                    "fol": "p_0(Brielle)",
                    "str_fol": "defends_biodiversity(Brielle)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who defends biodiversity will protect forests.",
                    "fol": "\u2200x (p_0(x) \u2192 p_8(x))",
                    "str_fol": "\u2200x (defends_biodiversity(x) \u2192 protects_forests(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Brielle",
                "text": "Brielle protects forests.",
                "fol": "p_8(Brielle)",
                "str_fol": "protects_forests(Brielle)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Brielle",
                    "text": "Brielle is conservational.",
                    "fol": "p_2(Brielle)",
                    "str_fol": "is_conservational(Brielle)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Brielle",
                    "text": "Brielle reduces waste.",
                    "fol": "p_9(Brielle)",
                    "str_fol": "reduces_waste(Brielle)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Brielle is conservational, then she either reduces waste or saves trees, but not both.",
                    "fol": "p_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))",
                    "str_fol": "is_conservational(Brielle) \u2192 (reduces_waste(Brielle) \u2295 saves_trees(Brielle))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Brielle",
                "text": "Brielle does not save trees.",
                "fol": "\u00acp_7(Brielle)",
                "str_fol": "\u00acsaves_trees(Brielle)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Brielle",
                    "text": "Brielle protects forests.",
                    "fol": "p_8(Brielle)",
                    "str_fol": "protects_forests(Brielle)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Brielle",
                    "text": "Brielle does not support ecosystems.",
                    "fol": "\u00acp_1(Brielle)",
                    "str_fol": "\u00acsupports_ecosystems(Brielle)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who protects forests either loves wildlife or supports ecosystems.",
                    "fol": "\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))",
                    "str_fol": "\u2200x (protects_forests(x) \u2192 (loves_wildlife(x) \u2228 supports_ecosystems(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Brielle",
                "text": "Brielle loves wildlife.",
                "fol": "p_4(Brielle)",
                "str_fol": "loves_wildlife(Brielle)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Brielle",
                    "text": "Brielle does not save trees.",
                    "fol": "\u00acp_7(Brielle)",
                    "str_fol": "\u00acsaves_trees(Brielle)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Brielle respects the environment, then she saves trees.",
                    "fol": "p_6(Brielle) \u2192 p_7(Brielle)",
                    "str_fol": "respects_environment(Brielle) \u2192 saves_trees(Brielle)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Brielle",
                "text": "Brielle does not respect the environment.",
                "fol": "\u00acp_6(Brielle)",
                "str_fol": "\u00acrespects_environment(Brielle)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Brielle",
                    "text": "Brielle loves wildlife.",
                    "fol": "p_4(Brielle)",
                    "str_fol": "loves_wildlife(Brielle)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Brielle either loves wildlife or cares for nature, which is evident in her dedication to conserving the Shorea trees and the ecosystems they support.",
                    "fol": "p_4(Brielle) \u2295 p_5(Brielle)",
                    "str_fol": "loves_wildlife(Brielle) \u2295 cares_for_nature(Brielle)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Brielle",
                "text": "Brielle does not care for nature.",
                "fol": "\u00acp_5(Brielle)",
                "str_fol": "\u00accares_for_nature(Brielle)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Brielle",
                    "text": "Brielle does not care for nature.",
                    "fol": "\u00acp_5(Brielle)",
                    "str_fol": "\u00accares_for_nature(Brielle)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Brielle",
                    "text": "Brielle does not respect the environment.",
                    "fol": "\u00acp_6(Brielle)",
                    "str_fol": "\u00acrespects_environment(Brielle)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 12,
                "text": "Brielle either cares for nature or respects the environment (or both).",
                "fol": "p_5(Brielle) \u2228 p_6(Brielle)",
                "str_fol": "cares_for_nature(Brielle) \u2228 respects_environment(Brielle)"
            }
        }
    ],
    "proof_trace": "1 (all x (p_0(x) -> p_8(x))).  [assumption].\n2 p_2(Brielle) -> -(p_9(Brielle) <-> p_7(Brielle)).  [assumption].\n3 (all x (p_8(x) -> p_4(x) | p_1(x))).  [assumption].\n4 p_6(Brielle) -> p_7(Brielle).  [assumption].\n5 -(p_4(Brielle) <-> p_5(Brielle)).  [assumption].\n6 -(p_5(Brielle) | p_6(Brielle)).  [goal].\n7 p_3(Brielle) | p_9(Brielle).  [assumption].\n8 -p_3(Brielle).  [assumption].\n9 -p_0(x) | p_8(x).  [clausify(1)].\n10 p_0(Brielle).  [assumption].\n12 p_2(Brielle).  [assumption].\n13 -p_2(Brielle) | -p_9(Brielle) | -p_7(Brielle).  [clausify(2)].\n14 -p_8(x) | p_4(x) | p_1(x).  [clausify(3)].\n15 -p_1(Brielle).  [assumption].\n16 p_5(Brielle) | p_6(Brielle).  [deny(6)].\n17 -p_6(Brielle) | p_7(Brielle).  [clausify(4)].\n18 -p_4(Brielle) | -p_5(Brielle).  [clausify(5)].\n20 -p_8(Brielle) | p_4(Brielle).  [resolve(14,c,15,a)].\n21 -p_9(Brielle) | -p_7(Brielle).  [resolve(13,a,12,a)].\n22 p_9(Brielle).  [resolve(7,a,8,a)].\n23 -p_8(Brielle) | -p_5(Brielle).  [resolve(20,b,18,a)].\n24 p_8(Brielle).  [resolve(9,a,10,a)].\n25 -p_5(Brielle).  [resolve(23,a,24,a)].\n26 p_5(Brielle) | p_7(Brielle).  [resolve(16,b,17,a)].\n27 p_7(Brielle).  [resolve(25,a,26,a)].\n28 -p_7(Brielle).  [resolve(21,a,22,a)].\n29 $F.  [resolve(27,a,28,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_4(Brielle) \u2295 p_5(Brielle)\np_8(Brielle)\np_9(Brielle)",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle).",
                    "p_0(Brielle).",
                    "p_2(Brielle).",
                    "-p_1(Brielle).",
                    "p_3(Brielle) | p_9(Brielle).",
                    "all x (-p_8(x) -> -p_0(x)).",
                    "p_2(Brielle) -> (-(p_9(Brielle) <-> p_7(Brielle))).",
                    "all x (p_8(x) -> (p_4(x) | p_1(x))).",
                    "p_6(Brielle) -> p_7(Brielle).",
                    "-(p_4(Brielle) <-> p_5(Brielle)).",
                    "p_8(Brielle).",
                    "p_9(Brielle)."
                ],
                "formulas(goals)": [
                    "-(p_5(Brielle) | p_6(Brielle))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_0(x) \u2192 p_8(x))"
                ],
                "added_facts": [
                    "p_8(Brielle)",
                    "p_9(Brielle)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_8(Brielle)\np_9(Brielle)\np_4(Brielle) \u2192 p_5(Brielle)",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle)",
                    "p_0(Brielle)",
                    "p_2(Brielle)",
                    "-p_1(Brielle)",
                    "p_3(Brielle) | p_9(Brielle)",
                    "all x (-p_8(x) -> -p_0(x))",
                    "p_2(Brielle) -> (-(p_9(Brielle) <-> p_7(Brielle)))",
                    "all x (p_8(x) -> (p_4(x) | p_1(x)))",
                    "p_6(Brielle) -> p_7(Brielle)",
                    "p_8(Brielle)",
                    "p_9(Brielle)",
                    "-p_4(Brielle) | p_5(Brielle)"
                ],
                "formulas(goals)": [
                    "p_5(Brielle) | p_6(Brielle)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Brielle) \u2295 p_5(Brielle)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Brielle) \u2192 p_5(Brielle)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_8(Brielle)\np_9(Brielle)\np_4(Brielle) \u2192 \u00acp_5(Brielle)\np_9(Brielle) \u2192 \u00acp_6(Brielle)",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle)",
                    "p_0(Brielle)",
                    "p_2(Brielle)",
                    "-p_1(Brielle)",
                    "p_3(Brielle) | p_9(Brielle)",
                    "all x (-p_8(x) -> -p_0(x))",
                    "p_2(Brielle) -> (-(p_9(Brielle) <-> p_7(Brielle)))",
                    "all x (p_8(x) -> (p_4(x) | p_1(x)))",
                    "p_6(Brielle) -> p_7(Brielle)",
                    "p_8(Brielle)",
                    "p_9(Brielle)",
                    "p_4(Brielle) -> -p_5(Brielle)",
                    "p_9(Brielle) -> -p_6(Brielle)"
                ],
                "formulas(goals)": [
                    "-p_5(Brielle) & -p_6(Brielle)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Brielle) \u2192 p_5(Brielle)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Brielle) \u2192 \u00acp_5(Brielle)",
                    "p_9(Brielle) \u2192 \u00acp_6(Brielle)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_8(Brielle)\np_9(Brielle)\np_4(Brielle) \u2192 \u00acp_5(Brielle)\np_9(Brielle) \u2192 \u00acp_6(Brielle)\n\u00acp_6(Brielle)\np_4(Brielle)\n\u00acp_5(Brielle)\n\u2200x (p_0(x) \u2192 p_8(x))",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle).",
                    "p_0(Brielle).",
                    "p_2(Brielle).",
                    "-p_1(Brielle).",
                    "p_3(Brielle) | p_9(Brielle).",
                    "all x (-p_8(x) -> -p_0(x)).",
                    "p_2(Brielle) -> (-(p_9(Brielle) <-> p_7(Brielle))).",
                    "all x (p_8(x) -> (p_4(x) | p_1(x))).",
                    "p_6(Brielle) -> p_7(Brielle).",
                    "p_8(Brielle).",
                    "p_9(Brielle).",
                    "p_4(Brielle) -> -p_5(Brielle).",
                    "p_9(Brielle) -> -p_6(Brielle).",
                    "-p_6(Brielle).",
                    "p_4(Brielle).",
                    "-p_5(Brielle).",
                    "all x (p_0(x) -> p_8(x))."
                ],
                "formulas(goals)": [
                    "-(p_5(Brielle) | p_6(Brielle))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Brielle)",
                    "p_4(Brielle)",
                    "\u00acp_5(Brielle)"
                ],
                "added_rules": [
                    "\u2200x (p_0(x) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 ((p_9(Brielle) \u2228 p_7(Brielle)) \u2227 \u00ac(p_9(Brielle) \u2227 p_7(Brielle)))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_8(Brielle)\np_9(Brielle)\n\u00acp_4(Brielle) \u2228 \u00acp_5(Brielle)\n\u00acp_9(Brielle) \u2228 \u00acp_6(Brielle)\n\u00acp_6(Brielle)\np_4(Brielle)\n\u00acp_5(Brielle)\n\u2200x (p_0(x) \u2192 p_8(x))\n\u00acp_7(Brielle)\np_7(Brielle) \u2228 p_9(Brielle)\n\u00acp_6(Brielle) \u2228 \u00acp_5(Brielle)",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle)",
                    "p_0(Brielle)",
                    "p_2(Brielle)",
                    "-p_1(Brielle)",
                    "p_3(Brielle) | p_9(Brielle)",
                    "(all x (-p_8(x) -> -p_0(x)))",
                    "p_2(Brielle) -> ((p_9(Brielle) | p_7(Brielle)) & -(p_9(Brielle) & p_7(Brielle)))",
                    "(all x (p_8(x) -> (p_4(x) | p_1(x))))",
                    "p_6(Brielle) -> p_7(Brielle)",
                    "p_8(Brielle)",
                    "p_9(Brielle)",
                    "-p_4(Brielle) | -p_5(Brielle)",
                    "-p_9(Brielle) | -p_6(Brielle)",
                    "-p_6(Brielle)",
                    "p_4(Brielle)",
                    "-p_5(Brielle)",
                    "(all x (p_0(x) -> p_8(x)))",
                    "-p_7(Brielle)",
                    "p_7(Brielle) | p_9(Brielle)",
                    "-p_6(Brielle) | -p_5(Brielle)"
                ],
                "formulas(goals)": [
                    "-(p_5(Brielle) | p_6(Brielle))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Brielle) \u2192 (p_9(Brielle) \u2295 p_7(Brielle))",
                    "p_4(Brielle) \u2192 \u00acp_5(Brielle)",
                    "p_9(Brielle) \u2192 \u00acp_6(Brielle)"
                ],
                "added_facts": [
                    "\u00acp_7(Brielle)",
                    "p_7(Brielle) \u2228 p_9(Brielle)",
                    "\u00acp_6(Brielle) \u2228 \u00acp_5(Brielle)"
                ],
                "added_rules": [
                    "p_2(Brielle) \u2192 ((p_9(Brielle) \u2228 p_7(Brielle)) \u2227 \u00ac(p_9(Brielle) \u2227 p_7(Brielle)))",
                    "\u00acp_4(Brielle) \u2228 \u00acp_5(Brielle)",
                    "\u00acp_9(Brielle) \u2228 \u00acp_6(Brielle)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 ((p_9(Brielle) \u2228 p_7(Brielle)) \u2227 (\u00acp_9(Brielle) \u2228 \u00acp_7(Brielle)))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_6(Brielle) \u2192 p_7(Brielle)\np_8(Brielle)\np_9(Brielle)\n\u00acp_4(Brielle) \u2228 \u00acp_5(Brielle)\n\u00acp_9(Brielle) \u2228 \u00acp_6(Brielle)\n\u00acp_6(Brielle)\np_4(Brielle)\n\u00acp_5(Brielle)\n\u2200x (p_0(x) \u2192 p_8(x))\n\u00acp_7(Brielle)\np_7(Brielle) \u2228 p_9(Brielle)\n\u00acp_6(Brielle) \u2228 \u00acp_5(Brielle)\n\u00acp_9(Brielle) \u2228 \u00acp_7(Brielle)\np_4(Brielle) \u2227 \u00acp_5(Brielle)\np_9(Brielle) \u2227 \u00acp_6(Brielle)",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle)",
                    "p_0(Brielle)",
                    "p_2(Brielle)",
                    "-p_1(Brielle)",
                    "p_3(Brielle) | p_9(Brielle)",
                    "all x (-p_8(x) -> -p_0(x))",
                    "p_2(Brielle) -> ((p_9(Brielle) | p_7(Brielle)) & (-p_9(Brielle) | -p_7(Brielle)))",
                    "all x (p_8(x) -> (p_4(x) | p_1(x)))",
                    "p_6(Brielle) -> p_7(Brielle)",
                    "p_8(Brielle)",
                    "p_9(Brielle)",
                    "-p_4(Brielle) | -p_5(Brielle)",
                    "-p_9(Brielle) | -p_6(Brielle)",
                    "-p_6(Brielle)",
                    "p_4(Brielle)",
                    "-p_5(Brielle)",
                    "all x (p_0(x) -> p_8(x))",
                    "-p_7(Brielle)",
                    "p_7(Brielle) | p_9(Brielle)",
                    "-p_6(Brielle) | -p_5(Brielle)",
                    "-p_9(Brielle) | -p_7(Brielle)",
                    "p_4(Brielle) & -p_5(Brielle)",
                    "p_9(Brielle) & -p_6(Brielle)"
                ],
                "formulas(goals)": [
                    "-(p_5(Brielle) | p_6(Brielle))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_9(Brielle) \u2228 \u00acp_7(Brielle)",
                    "p_4(Brielle) \u2227 \u00acp_5(Brielle)",
                    "p_9(Brielle) \u2227 \u00acp_6(Brielle)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Brielle)\np_0(Brielle)\np_2(Brielle)\n\u00acp_1(Brielle)\np_3(Brielle) \u2228 p_9(Brielle)\n\u2200x (\u00acp_8(x) \u2192 \u00acp_0(x))\np_2(Brielle) \u2192 ((p_9(Brielle) \u2228 p_7(Brielle)) \u2227 (\u00acp_9(Brielle) \u2228 \u00acp_7(Brielle)))\n\u2200x (p_8(x) \u2192 (p_4(x) \u2228 p_1(x)))\np_8(Brielle)\np_9(Brielle)\n\u00acp_4(Brielle) \u2228 \u00acp_5(Brielle)\np_4(Brielle)\n\u00acp_5(Brielle)\n\u2200x (p_0(x) \u2192 p_8(x))\n\u00acp_7(Brielle)\np_7(Brielle) \u2228 p_9(Brielle)\n\u00acp_6(Brielle) \u2228 \u00acp_5(Brielle)\n\u00acp_9(Brielle) \u2228 \u00acp_7(Brielle)\np_4(Brielle) \u2227 \u00acp_5(Brielle)\n\u00acp_9(Brielle) \u2228 p_6(Brielle)",
            "Initial Goal": "p_5(Brielle) \u2228 p_6(Brielle)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Brielle)",
                    "p_0(Brielle)",
                    "p_2(Brielle)",
                    "-p_1(Brielle)",
                    "p_3(Brielle) | p_9(Brielle)",
                    "all x (-p_8(x) -> -p_0(x))",
                    "p_2(Brielle) -> ((p_9(Brielle) | p_7(Brielle)) & (-p_9(Brielle) | -p_7(Brielle)))",
                    "all x (p_8(x) -> (p_4(x) | p_1(x)))",
                    "p_8(Brielle)",
                    "p_9(Brielle)",
                    "-p_4(Brielle) | -p_5(Brielle)",
                    "p_4(Brielle)",
                    "-p_5(Brielle)",
                    "all x (p_0(x) -> p_8(x))",
                    "-p_7(Brielle)",
                    "p_7(Brielle) | p_9(Brielle)",
                    "-p_6(Brielle) | -p_5(Brielle)",
                    "-p_9(Brielle) | -p_7(Brielle)",
                    "p_4(Brielle) & -p_5(Brielle)",
                    "-p_9(Brielle) | p_6(Brielle)"
                ],
                "formulas(goals)": [
                    "p_5(Brielle) | p_6(Brielle)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Brielle)",
                    "p_9(Brielle) \u2227 \u00acp_6(Brielle)"
                ],
                "removed_rules": [
                    "p_6(Brielle) \u2192 p_7(Brielle)",
                    "\u00acp_9(Brielle) \u2228 \u00acp_6(Brielle)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_9(Brielle) \u2228 p_6(Brielle)"
                ]
            }
        }
    ]
}