{
    "background_story": "Leonidas, the legendary King of Sparta, had a secret passion beyond battle tactics and warrior ethos. In the quiet moments, away from the din of war, he would often stroll through the gardens of his palace, admiring the coriandrum, or cilantro, that grew abundantly in the Greek soil. He believed the herb possessed mystical properties, not just for its flavor in culinary delights, but for its purported ability to enhance strength and vitality. Before the Battle of Thermopylae, Leonidas would ritually sprinkle coriandrum seeds in his armor, a symbol of his connection to the earth and his ancestors. This ancient ritual gave him the courage and resilience to face the invading forces, embodying the spirit of a true warrior-king.",
    "predicates": [
        {
            "id": 0,
            "name": "is_resilient"
        },
        {
            "id": 1,
            "name": "makes_sacrifices"
        },
        {
            "id": 2,
            "name": "inspires_others"
        },
        {
            "id": 3,
            "name": "fights_battles"
        },
        {
            "id": 4,
            "name": "holds_beliefs"
        },
        {
            "id": 5,
            "name": "rules_kingdom"
        },
        {
            "id": 6,
            "name": "is_remembered"
        },
        {
            "id": 7,
            "name": "faces_challenges"
        },
        {
            "id": 8,
            "name": "is_courageous"
        },
        {
            "id": 9,
            "name": "leads_people"
        },
        {
            "id": 10,
            "name": "has_secret_passion"
        },
        {
            "id": 11,
            "name": "embodies_honor"
        },
        {
            "id": 12,
            "name": "defends_legacy"
        },
        {
            "id": 13,
            "name": "leads_by_example"
        },
        {
            "id": 14,
            "name": "stands_for_principle"
        },
        {
            "id": 15,
            "name": "seeks_strength"
        },
        {
            "id": 16,
            "name": "values_nature"
        },
        {
            "id": 17,
            "name": "seeks_wisdom"
        },
        {
            "id": 18,
            "name": "holds_power"
        },
        {
            "id": 19,
            "name": "gains_loyalty"
        },
        {
            "id": 20,
            "name": "values_tradition"
        },
        {
            "id": 21,
            "name": "respects_ancestors"
        },
        {
            "id": 22,
            "name": "upholds_tradition"
        },
        {
            "id": 23,
            "name": "protects_homeland"
        }
    ],
    "subject_name": "Leonidas",
    "subject_category": "historical figure",
    "keyword": "coriandrum",
    "all_facts": [
        {
            "id": 0,
            "subject": "Leonidas",
            "text": "Leonidas is not resilient.",
            "fol": "\u00acp_0(Leonidas)",
            "str_fol": "\u00acis_resilient(Leonidas)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Leonidas",
            "text": "Leonidas makes sacrifices.",
            "fol": "p_1(Leonidas)",
            "str_fol": "makes_sacrifices(Leonidas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Leonidas",
            "text": "Leonidas inspires others.",
            "fol": "p_2(Leonidas)",
            "str_fol": "inspires_others(Leonidas)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Leonidas",
            "text": "Leonidas does not fight battles.",
            "fol": "\u00acp_3(Leonidas)",
            "str_fol": "\u00acfights_battles(Leonidas)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Leonidas",
            "text": "Leonidas holds beliefs.",
            "fol": "p_4(Leonidas)",
            "str_fol": "holds_beliefs(Leonidas)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Leonidas",
            "text": "Leonidas does not rule a kingdom.",
            "fol": "\u00acp_5(Leonidas)",
            "str_fol": "\u00acrules_kingdom(Leonidas)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Leonidas",
            "text": "Leonidas is not remembered.",
            "fol": "\u00acp_6(Leonidas)",
            "str_fol": "\u00acis_remembered(Leonidas)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Leonidas",
            "text": "Leonidas does not defend his legacy.",
            "fol": "\u00acp_12(Leonidas)",
            "str_fol": "\u00acdefends_legacy(Leonidas)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Leonidas",
            "text": "Leonidas does not embody honor.",
            "fol": "\u00acp_11(Leonidas)",
            "str_fol": "\u00acembodies_honor(Leonidas)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Leonidas",
            "text": "Leonidas cannot lead people.",
            "fol": "\u00acp_9(Leonidas)",
            "str_fol": "\u00acleads_people(Leonidas)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Leonidas",
            "text": "Leonidas does not face challenges.",
            "fol": "\u00acp_7(Leonidas)",
            "str_fol": "\u00acfaces_challenges(Leonidas)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Leonidas",
            "text": "Leonidas is not courageous.",
            "fol": "\u00acp_8(Leonidas)",
            "str_fol": "\u00acis_courageous(Leonidas)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Leonidas",
            "text": "Leonidas is not remembered.",
            "fol": "\u00acp_6(Leonidas)",
            "str_fol": "\u00acis_remembered(Leonidas)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Leonidas",
            "text": "Leonidas does not rule a kingdom.",
            "fol": "\u00acp_5(Leonidas)",
            "str_fol": "\u00acrules_kingdom(Leonidas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Leonidas",
            "text": "Leonidas does not fight battles.",
            "fol": "\u00acp_3(Leonidas)",
            "str_fol": "\u00acfights_battles(Leonidas)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Leonidas",
            "text": "Leonidas holds beliefs.",
            "fol": "p_4(Leonidas)",
            "str_fol": "holds_beliefs(Leonidas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Leonidas",
            "text": "Leonidas inspires others.",
            "fol": "p_2(Leonidas)",
            "str_fol": "inspires_others(Leonidas)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Leonidas",
            "text": "Leonidas makes sacrifices.",
            "fol": "p_1(Leonidas)",
            "str_fol": "makes_sacrifices(Leonidas)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Leonidas",
            "text": "Leonidas is not resilient.",
            "fol": "\u00acp_0(Leonidas)",
            "str_fol": "\u00acis_resilient(Leonidas)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Leonidas defends his legacy, then he is remembered.",
            "fol": "p_12(Leonidas) \u2192 p_6(Leonidas)",
            "str_fol": "defends_legacy(Leonidas) \u2192 is_remembered(Leonidas)"
        },
        {
            "id": 4,
            "text": "If Leonidas either rules a kingdom or embodies honor (but not both), then he defends his legacy.",
            "fol": "(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)",
            "str_fol": "(rules_kingdom(Leonidas) \u2295 embodies_honor(Leonidas)) \u2192 defends_legacy(Leonidas)"
        },
        {
            "id": 3,
            "text": "If Leonidas either fights battles or leads people (but not both), then he embodies honor.",
            "fol": "(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)",
            "str_fol": "(fights_battles(Leonidas) \u2295 leads_people(Leonidas)) \u2192 embodies_honor(Leonidas)"
        },
        {
            "id": 2,
            "text": "Every historical figure either holds beliefs or has a secret passion.",
            "fol": "\u2200x (p_4(x) \u2228 p_10(x))",
            "str_fol": "\u2200x (holds_beliefs(x) \u2228 has_secret_passion(x))"
        },
        {
            "id": 1,
            "text": "All historical figures who face challenges either inspire others or make sacrifices.",
            "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))",
            "str_fol": "\u2200x (faces_challenges(x) \u2192 (inspires_others(x) \u2295 makes_sacrifices(x)))"
        },
        {
            "id": 0,
            "text": "If Leonidas faces challenges or is courageous, then he can lead people.",
            "fol": "(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)",
            "str_fol": "(faces_challenges(Leonidas) \u2228 is_courageous(Leonidas)) \u2192 leads_people(Leonidas)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Leonidas",
            "text": "Leonidas is not remembered.",
            "fol": "\u00acp_6(Leonidas)",
            "str_fol": "\u00acis_remembered(Leonidas)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Leonidas",
            "text": "Leonidas does not rule a kingdom.",
            "fol": "\u00acp_5(Leonidas)",
            "str_fol": "\u00acrules_kingdom(Leonidas)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Leonidas",
            "text": "Leonidas does not fight battles.",
            "fol": "\u00acp_3(Leonidas)",
            "str_fol": "\u00acfights_battles(Leonidas)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Leonidas",
            "text": "Leonidas holds beliefs.",
            "fol": "p_4(Leonidas)",
            "str_fol": "holds_beliefs(Leonidas)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Leonidas",
            "text": "Leonidas inspires others.",
            "fol": "p_2(Leonidas)",
            "str_fol": "inspires_others(Leonidas)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Leonidas",
            "text": "Leonidas makes sacrifices.",
            "fol": "p_1(Leonidas)",
            "str_fol": "makes_sacrifices(Leonidas)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Leonidas",
            "text": "Leonidas is not resilient.",
            "fol": "\u00acp_0(Leonidas)",
            "str_fol": "\u00acis_resilient(Leonidas)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Leonidas defends his legacy, then he is remembered.",
            "fol": "p_12(Leonidas) \u2192 p_6(Leonidas)",
            "str_fol": "defends_legacy(Leonidas) \u2192 is_remembered(Leonidas)"
        },
        {
            "id": 4,
            "text": "If Leonidas either rules a kingdom or embodies honor (but not both), then he defends his legacy.",
            "fol": "(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)",
            "str_fol": "(rules_kingdom(Leonidas) \u2295 embodies_honor(Leonidas)) \u2192 defends_legacy(Leonidas)"
        },
        {
            "id": 3,
            "text": "If Leonidas either fights battles or leads people (but not both), then he embodies honor.",
            "fol": "(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)",
            "str_fol": "(fights_battles(Leonidas) \u2295 leads_people(Leonidas)) \u2192 embodies_honor(Leonidas)"
        },
        {
            "id": 2,
            "text": "Every historical figure either holds beliefs or has a secret passion.",
            "fol": "\u2200x (p_4(x) \u2228 p_10(x))",
            "str_fol": "\u2200x (holds_beliefs(x) \u2228 has_secret_passion(x))"
        },
        {
            "id": 1,
            "text": "All historical figures who face challenges either inspire others or make sacrifices.",
            "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))",
            "str_fol": "\u2200x (faces_challenges(x) \u2192 (inspires_others(x) \u2295 makes_sacrifices(x)))"
        },
        {
            "id": 0,
            "text": "If Leonidas faces challenges or is courageous, then he can lead people.",
            "fol": "(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)",
            "str_fol": "(faces_challenges(Leonidas) \u2228 is_courageous(Leonidas)) \u2192 leads_people(Leonidas)"
        }
    ],
    "context_fol": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_4(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)\n(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_4(x) \u2228 p_10(x))\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)",
    "conclusion": {
        "id": 12,
        "text": "If Leonidas has a secret passion, then he is either courageous or resilient, but not both.",
        "fol": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
        "str_fol": "has_secret_passion(Leonidas) \u2192 (is_courageous(Leonidas) \u2295 is_resilient(Leonidas))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Leonidas",
                    "text": "Leonidas is not remembered.",
                    "fol": "\u00acp_6(Leonidas)",
                    "str_fol": "\u00acis_remembered(Leonidas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Leonidas defends his legacy, then he is remembered.",
                    "fol": "p_12(Leonidas) \u2192 p_6(Leonidas)",
                    "str_fol": "defends_legacy(Leonidas) \u2192 is_remembered(Leonidas)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Leonidas",
                "text": "Leonidas does not defend his legacy.",
                "fol": "\u00acp_12(Leonidas)",
                "str_fol": "\u00acdefends_legacy(Leonidas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Leonidas",
                    "text": "Leonidas does not rule a kingdom.",
                    "fol": "\u00acp_5(Leonidas)",
                    "str_fol": "\u00acrules_kingdom(Leonidas)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Leonidas",
                    "text": "Leonidas does not defend his legacy.",
                    "fol": "\u00acp_12(Leonidas)",
                    "str_fol": "\u00acdefends_legacy(Leonidas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Leonidas either rules a kingdom or embodies honor (but not both), then he defends his legacy.",
                    "fol": "(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)",
                    "str_fol": "(rules_kingdom(Leonidas) \u2295 embodies_honor(Leonidas)) \u2192 defends_legacy(Leonidas)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Leonidas",
                "text": "Leonidas does not embody honor.",
                "fol": "\u00acp_11(Leonidas)",
                "str_fol": "\u00acembodies_honor(Leonidas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Leonidas",
                    "text": "Leonidas does not fight battles.",
                    "fol": "\u00acp_3(Leonidas)",
                    "str_fol": "\u00acfights_battles(Leonidas)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Leonidas",
                    "text": "Leonidas does not embody honor.",
                    "fol": "\u00acp_11(Leonidas)",
                    "str_fol": "\u00acembodies_honor(Leonidas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Leonidas either fights battles or leads people (but not both), then he embodies honor.",
                    "fol": "(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)",
                    "str_fol": "(fights_battles(Leonidas) \u2295 leads_people(Leonidas)) \u2192 embodies_honor(Leonidas)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Leonidas",
                "text": "Leonidas cannot lead people.",
                "fol": "\u00acp_9(Leonidas)",
                "str_fol": "\u00acleads_people(Leonidas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Leonidas",
                    "text": "Leonidas holds beliefs.",
                    "fol": "p_4(Leonidas)",
                    "str_fol": "holds_beliefs(Leonidas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Every historical figure either holds beliefs or has a secret passion.",
                    "fol": "\u2200x (p_4(x) \u2228 p_10(x))",
                    "str_fol": "\u2200x (holds_beliefs(x) \u2228 has_secret_passion(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Leonidas",
                    "text": "Leonidas inspires others.",
                    "fol": "p_2(Leonidas)",
                    "str_fol": "inspires_others(Leonidas)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Leonidas",
                    "text": "Leonidas makes sacrifices.",
                    "fol": "p_1(Leonidas)",
                    "str_fol": "makes_sacrifices(Leonidas)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "All historical figures who face challenges either inspire others or make sacrifices.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))",
                    "str_fol": "\u2200x (faces_challenges(x) \u2192 (inspires_others(x) \u2295 makes_sacrifices(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Leonidas",
                "text": "Leonidas does not face challenges.",
                "fol": "\u00acp_7(Leonidas)",
                "str_fol": "\u00acfaces_challenges(Leonidas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Leonidas",
                    "text": "Leonidas does not face challenges.",
                    "fol": "\u00acp_7(Leonidas)",
                    "str_fol": "\u00acfaces_challenges(Leonidas)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Leonidas",
                    "text": "Leonidas cannot lead people.",
                    "fol": "\u00acp_9(Leonidas)",
                    "str_fol": "\u00acleads_people(Leonidas)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Leonidas faces challenges or is courageous, then he can lead people.",
                    "fol": "(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)",
                    "str_fol": "(faces_challenges(Leonidas) \u2228 is_courageous(Leonidas)) \u2192 leads_people(Leonidas)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Leonidas",
                "text": "Leonidas is not courageous.",
                "fol": "\u00acp_8(Leonidas)",
                "str_fol": "\u00acis_courageous(Leonidas)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Leonidas",
                    "text": "Leonidas is not courageous.",
                    "fol": "\u00acp_8(Leonidas)",
                    "str_fol": "\u00acis_courageous(Leonidas)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Leonidas",
                    "text": "Leonidas is not resilient.",
                    "fol": "\u00acp_0(Leonidas)",
                    "str_fol": "\u00acis_resilient(Leonidas)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_4(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)\n(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_4(x) \u2228 p_10(x))\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Leonidas)",
                    "-p_5(Leonidas)",
                    "-p_3(Leonidas)",
                    "p_4(Leonidas)",
                    "p_2(Leonidas)",
                    "p_1(Leonidas)",
                    "-p_0(Leonidas)",
                    "p_12(Leonidas) -> p_6(Leonidas)",
                    "(-(p_5(Leonidas) <-> p_11(Leonidas))) -> p_12(Leonidas)",
                    "(-(p_3(Leonidas) <-> p_9(Leonidas))) -> p_11(Leonidas)",
                    "all x (p_4(x) | p_10(x))",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x))))",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas)",
                    "p_10(Leonidas) -> p_8(Leonidas)"
                ],
                "formulas(goals)": [
                    "p_10(Leonidas) -> (-(p_8(Leonidas) <-> p_0(Leonidas)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Leonidas) \u2192 p_8(Leonidas)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)\n(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)\np_10(Leonidas)\n\u00acp_8(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_6(Leonidas)",
                    "\u00acp_5(Leonidas)",
                    "\u00acp_3(Leonidas)",
                    "p_2(Leonidas)",
                    "p_1(Leonidas)",
                    "\u00acp_0(Leonidas)",
                    "p_12(Leonidas) -> p_6(Leonidas)",
                    "(-(p_5(Leonidas) <-> p_11(Leonidas))) -> p_12(Leonidas)",
                    "(-(p_3(Leonidas) <-> p_9(Leonidas))) -> p_11(Leonidas)",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x))))",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas)",
                    "p_10(Leonidas)",
                    "\u00acp_8(Leonidas)"
                ],
                "formulas(goals)": [
                    "\u00ac(p_10(Leonidas) -> (-(p_8(Leonidas) <-> p_0(Leonidas))))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Leonidas)"
                ],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2228 p_10(x))"
                ],
                "added_facts": [
                    "p_10(Leonidas)",
                    "\u00acp_8(Leonidas)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)\np_10(Leonidas)\np_10(Leonidas) \u2192 p_8(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Leonidas)",
                    "-p_5(Leonidas)",
                    "-p_3(Leonidas)",
                    "p_2(Leonidas)",
                    "p_1(Leonidas)",
                    "-p_0(Leonidas)",
                    "p_12(Leonidas) -> p_6(Leonidas)",
                    "(-(p_3(Leonidas) <-> p_9(Leonidas))) -> p_11(Leonidas)",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x))))",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas)",
                    "p_10(Leonidas)",
                    "p_10(Leonidas) -> p_8(Leonidas)"
                ],
                "formulas(goals)": [
                    "p_10(Leonidas) -> (-(p_8(Leonidas) <-> p_0(Leonidas)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Leonidas)"
                ],
                "removed_rules": [
                    "(p_5(Leonidas) \u2295 p_11(Leonidas)) \u2192 p_12(Leonidas)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Leonidas) \u2192 p_8(Leonidas)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)\np_10(Leonidas)\n\u00acp_8(Leonidas) \u2228 p_6(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Leonidas)",
                    "-p_5(Leonidas)",
                    "-p_3(Leonidas)",
                    "p_2(Leonidas)",
                    "p_1(Leonidas)",
                    "-p_0(Leonidas)",
                    "p_12(Leonidas) -> p_6(Leonidas)",
                    "(-(p_3(Leonidas) <-> p_9(Leonidas))) -> p_11(Leonidas)",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x))))",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas)",
                    "p_10(Leonidas)",
                    "-p_8(Leonidas) | p_6(Leonidas)"
                ],
                "formulas(goals)": [
                    "p_10(Leonidas) & (p_8(Leonidas) <-> p_0(Leonidas))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Leonidas) \u2192 p_8(Leonidas)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_8(Leonidas) \u2228 p_6(Leonidas)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_3(Leonidas) \u2295 p_9(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)\np_10(Leonidas)\np_8(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Leonidas).",
                    "-p_5(Leonidas).",
                    "-p_3(Leonidas).",
                    "p_2(Leonidas).",
                    "p_1(Leonidas).",
                    "-p_0(Leonidas).",
                    "p_12(Leonidas) -> p_6(Leonidas).",
                    "(-(p_3(Leonidas) <-> p_9(Leonidas))) -> p_11(Leonidas).",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x)))).",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas).",
                    "p_10(Leonidas).",
                    "p_8(Leonidas)."
                ],
                "formulas(goals)": [
                    "p_10(Leonidas) -> (-(p_8(Leonidas) <-> p_0(Leonidas)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_8(Leonidas) \u2228 p_6(Leonidas)"
                ],
                "added_facts": [
                    "p_8(Leonidas)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_9(Leonidas) \u2295 p_3(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)\np_10(Leonidas)\np_8(Leonidas)\np_8(Leonidas) \u2228 \u00acp_8(Leonidas)\np_8(Leonidas) \u2227 \u00acp_0(Leonidas)\np_10(Leonidas) \u2192 p_10(Leonidas)\np_10(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Leonidas)",
                    "-p_5(Leonidas)",
                    "-p_3(Leonidas)",
                    "p_2(Leonidas)",
                    "p_1(Leonidas)",
                    "-p_0(Leonidas)",
                    "p_12(Leonidas) -> p_6(Leonidas)",
                    "(-(p_9(Leonidas) <-> p_3(Leonidas))) -> p_11(Leonidas)",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x))))",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas)",
                    "p_10(Leonidas)",
                    "p_8(Leonidas)",
                    "p_8(Leonidas) | -p_8(Leonidas)",
                    "p_8(Leonidas) & -p_0(Leonidas)",
                    "p_10(Leonidas) -> p_10(Leonidas)",
                    "p_10(Leonidas)"
                ],
                "formulas(goals)": [
                    "p_10(Leonidas) -> (-(p_8(Leonidas) <-> p_0(Leonidas)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Leonidas) \u2228 \u00acp_8(Leonidas)",
                    "p_8(Leonidas) \u2227 \u00acp_0(Leonidas)",
                    "p_10(Leonidas)"
                ],
                "added_rules": [
                    "(p_9(Leonidas) \u2295 p_3(Leonidas)) \u2192 p_11(Leonidas)",
                    "p_10(Leonidas) \u2192 p_10(Leonidas)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Leonidas)\n\u00acp_5(Leonidas)\n\u00acp_3(Leonidas)\np_2(Leonidas)\np_1(Leonidas)\n\u00acp_0(Leonidas)\np_12(Leonidas) \u2192 p_6(Leonidas)\n(p_9(Leonidas) \u2295 p_3(Leonidas)) \u2192 p_11(Leonidas)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2295 p_1(x)))\n(p_7(Leonidas) \u2228 p_8(Leonidas)) \u2192 p_9(Leonidas)\np_10(Leonidas)\np_8(Leonidas)\np_8(Leonidas) \u2228 \u00acp_8(Leonidas)\np_8(Leonidas) \u2227 \u00acp_0(Leonidas)\n\u00acp_10(Leonidas) \u2228 p_10(Leonidas)\np_9(Leonidas)\np_8(Leonidas) \u2192 p_9(Leonidas)\np_7(Leonidas) \u2192 p_9(Leonidas)\np_8(Leonidas) \u2295 p_0(Leonidas)",
            "Initial Goal": "p_10(Leonidas) \u2192 (p_8(Leonidas) \u2295 p_0(Leonidas))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Leonidas).",
                    "-p_5(Leonidas).",
                    "-p_3(Leonidas).",
                    "p_2(Leonidas).",
                    "p_1(Leonidas).",
                    "-p_0(Leonidas).",
                    "p_12(Leonidas) -> p_6(Leonidas).",
                    "(-(p_9(Leonidas) <-> p_3(Leonidas))) -> p_11(Leonidas).",
                    "all x (p_7(x) -> (-(p_2(x) <-> p_1(x)))).",
                    "(p_7(Leonidas) | p_8(Leonidas)) -> p_9(Leonidas).",
                    "p_10(Leonidas).",
                    "p_8(Leonidas).",
                    "p_8(Leonidas) | -p_8(Leonidas).",
                    "p_8(Leonidas) & -p_0(Leonidas).",
                    "-p_10(Leonidas) | p_10(Leonidas).",
                    "p_9(Leonidas).",
                    "p_8(Leonidas) -> p_9(Leonidas).",
                    "p_7(Leonidas) -> p_9(Leonidas).",
                    "-(p_8(Leonidas) <-> p_0(Leonidas))."
                ],
                "formulas(goals)": [
                    "p_10(Leonidas) -> (-(p_8(Leonidas) <-> p_0(Leonidas)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Leonidas)",
                    "p_8(Leonidas) \u2295 p_0(Leonidas)"
                ],
                "added_rules": [
                    "p_8(Leonidas) \u2192 p_9(Leonidas)",
                    "p_7(Leonidas) \u2192 p_9(Leonidas)"
                ]
            }
        }
    ]
}