{
    "background_story": "Kyson was a charismatic gambler with a knack for rolling dice. He made a name for himself in the underground gaming circles, where his luck and skill with the dice were unmatched. Kyson's rise to fame began in a small, smoky bar where he consistently won high-stakes games, earning him the respect and admiration of his peers. His signature move, the 'Kyson's Roll,' became legendary, a complex combination of bets and rolls that always seemed to pay off. Despite his success, Kyson never forgot his humble beginnings and used his winnings to help those in need, making him a beloved figure in the community. The roll of the dice was not just a game to Kyson; it was a way of life.",
    "predicates": [
        {
            "id": 0,
            "name": "has_good_luck"
        },
        {
            "id": 1,
            "name": "takes_calculated_risks"
        },
        {
            "id": 2,
            "name": "reads_people"
        },
        {
            "id": 3,
            "name": "helps_others"
        },
        {
            "id": 4,
            "name": "is_respected"
        },
        {
            "id": 5,
            "name": "knows_Kysons_Roll"
        },
        {
            "id": 6,
            "name": "wins_big"
        },
        {
            "id": 7,
            "name": "is_successful"
        },
        {
            "id": 8,
            "name": "makes_smart_bets"
        },
        {
            "id": 9,
            "name": "is_confident"
        },
        {
            "id": 10,
            "name": "wins_games"
        },
        {
            "id": 11,
            "name": "practices_often"
        },
        {
            "id": 12,
            "name": "studies_strategy"
        },
        {
            "id": 13,
            "name": "plays_dice"
        },
        {
            "id": 14,
            "name": "makes_strategic_moves"
        },
        {
            "id": 15,
            "name": "trusts_self"
        },
        {
            "id": 16,
            "name": "studies_odds"
        },
        {
            "id": 17,
            "name": "controls_nerves"
        }
    ],
    "subject_name": "Kyson",
    "subject_category": "person",
    "keyword": "dice",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kyson",
            "text": "Kyson does not have good luck.",
            "fol": "\u00acp_0(Kyson)",
            "str_fol": "\u00achas_good_luck(Kyson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kyson",
            "text": "Kyson does not take calculated risks.",
            "fol": "\u00acp_1(Kyson)",
            "str_fol": "\u00actakes_calculated_risks(Kyson)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kyson",
            "text": "Kyson reads people.",
            "fol": "p_2(Kyson)",
            "str_fol": "reads_people(Kyson)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kyson",
            "text": "Kyson helps others.",
            "fol": "p_3(Kyson)",
            "str_fol": "helps_others(Kyson)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kyson",
            "text": "Kyson is not respected.",
            "fol": "\u00acp_4(Kyson)",
            "str_fol": "\u00acis_respected(Kyson)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kyson",
            "text": "Kyson does not win games.",
            "fol": "\u00acp_10(Kyson)",
            "str_fol": "\u00acwins_games(Kyson)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Kyson",
            "text": "Kyson does not make smart bets.",
            "fol": "\u00acp_8(Kyson)",
            "str_fol": "\u00acmakes_smart_bets(Kyson)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kyson",
            "text": "Kyson is not confident.",
            "fol": "\u00acp_9(Kyson)",
            "str_fol": "\u00acis_confident(Kyson)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Kyson",
            "text": "Kyson is not successful.",
            "fol": "\u00acp_7(Kyson)",
            "str_fol": "\u00acis_successful(Kyson)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Kyson",
            "text": "Kyson does not know Kyson's Roll.",
            "fol": "\u00acp_5(Kyson)",
            "str_fol": "\u00acknows_Kysons_Roll(Kyson)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Kyson",
            "text": "Kyson wins big.",
            "fol": "p_6(Kyson)",
            "str_fol": "wins_big(Kyson)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Kyson",
            "text": "Kyson is not respected.",
            "fol": "\u00acp_4(Kyson)",
            "str_fol": "\u00acis_respected(Kyson)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kyson",
            "text": "Kyson helps others.",
            "fol": "p_3(Kyson)",
            "str_fol": "helps_others(Kyson)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kyson",
            "text": "Kyson reads people.",
            "fol": "p_2(Kyson)",
            "str_fol": "reads_people(Kyson)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kyson",
            "text": "Kyson does not have good luck.",
            "fol": "\u00acp_0(Kyson)",
            "str_fol": "\u00achas_good_luck(Kyson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kyson",
            "text": "Kyson does not take calculated risks.",
            "fol": "\u00acp_1(Kyson)",
            "str_fol": "\u00actakes_calculated_risks(Kyson)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Kyson wins games, then he is respected.",
            "fol": "p_10(Kyson) \u2192 p_4(Kyson)",
            "str_fol": "wins_games(Kyson) \u2192 is_respected(Kyson)"
        },
        {
            "id": 4,
            "text": "Kyson either helps others or makes smart bets, but not both.",
            "fol": "p_3(Kyson) \u2295 p_8(Kyson)",
            "str_fol": "helps_others(Kyson) \u2295 makes_smart_bets(Kyson)"
        },
        {
            "id": 3,
            "text": "If Kyson reads people and is confident, then he wins games.",
            "fol": "(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)",
            "str_fol": "(reads_people(Kyson) \u2227 is_confident(Kyson)) \u2192 wins_games(Kyson)"
        },
        {
            "id": 2,
            "text": "If Kyson is either successful or makes smart bets (but not both), then he is confident.",
            "fol": "(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)",
            "str_fol": "(is_successful(Kyson) \u2295 makes_smart_bets(Kyson)) \u2192 is_confident(Kyson)"
        },
        {
            "id": 1,
            "text": "If Kyson has good luck or knows Kyson's Roll, then he is successful.",
            "fol": "(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)",
            "str_fol": "(has_good_luck(Kyson) \u2228 knows_Kysons_Roll(Kyson)) \u2192 is_successful(Kyson)"
        },
        {
            "id": 0,
            "text": "If Kyson knows Kyson's Roll and takes calculated risks, then he wins big.",
            "fol": "(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)",
            "str_fol": "(knows_Kysons_Roll(Kyson) \u2227 takes_calculated_risks(Kyson)) \u2192 wins_big(Kyson)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Kyson",
            "text": "Kyson is not respected.",
            "fol": "\u00acp_4(Kyson)",
            "str_fol": "\u00acis_respected(Kyson)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kyson",
            "text": "Kyson helps others.",
            "fol": "p_3(Kyson)",
            "str_fol": "helps_others(Kyson)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kyson",
            "text": "Kyson reads people.",
            "fol": "p_2(Kyson)",
            "str_fol": "reads_people(Kyson)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kyson",
            "text": "Kyson does not have good luck.",
            "fol": "\u00acp_0(Kyson)",
            "str_fol": "\u00achas_good_luck(Kyson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kyson",
            "text": "Kyson does not take calculated risks.",
            "fol": "\u00acp_1(Kyson)",
            "str_fol": "\u00actakes_calculated_risks(Kyson)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Kyson wins games, then he is respected.",
            "fol": "p_10(Kyson) \u2192 p_4(Kyson)",
            "str_fol": "wins_games(Kyson) \u2192 is_respected(Kyson)"
        },
        {
            "id": 4,
            "text": "Kyson either helps others or makes smart bets, but not both.",
            "fol": "p_3(Kyson) \u2295 p_8(Kyson)",
            "str_fol": "helps_others(Kyson) \u2295 makes_smart_bets(Kyson)"
        },
        {
            "id": 3,
            "text": "If Kyson reads people and is confident, then he wins games.",
            "fol": "(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)",
            "str_fol": "(reads_people(Kyson) \u2227 is_confident(Kyson)) \u2192 wins_games(Kyson)"
        },
        {
            "id": 2,
            "text": "If Kyson is either successful or makes smart bets (but not both), then he is confident.",
            "fol": "(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)",
            "str_fol": "(is_successful(Kyson) \u2295 makes_smart_bets(Kyson)) \u2192 is_confident(Kyson)"
        },
        {
            "id": 1,
            "text": "If Kyson has good luck or knows Kyson's Roll, then he is successful.",
            "fol": "(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)",
            "str_fol": "(has_good_luck(Kyson) \u2228 knows_Kysons_Roll(Kyson)) \u2192 is_successful(Kyson)"
        },
        {
            "id": 0,
            "text": "If Kyson knows Kyson's Roll and takes calculated risks, then he wins big.",
            "fol": "(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)",
            "str_fol": "(knows_Kysons_Roll(Kyson) \u2227 takes_calculated_risks(Kyson)) \u2192 wins_big(Kyson)"
        }
    ],
    "context_fol": "\u00acp_4(Kyson)\np_3(Kyson)\np_2(Kyson)\n\u00acp_0(Kyson)\n\u00acp_1(Kyson)\np_10(Kyson) \u2192 p_4(Kyson)\np_3(Kyson) \u2295 p_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)",
    "conclusion": {
        "id": 10,
        "subject": "Kyson",
        "text": "Kyson wins big.",
        "fol": "p_6(Kyson)",
        "str_fol": "wins_big(Kyson)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Kyson)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kyson",
                    "text": "Kyson is not respected.",
                    "fol": "\u00acp_4(Kyson)",
                    "str_fol": "\u00acis_respected(Kyson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Kyson wins games, then he is respected.",
                    "fol": "p_10(Kyson) \u2192 p_4(Kyson)",
                    "str_fol": "wins_games(Kyson) \u2192 is_respected(Kyson)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kyson",
                "text": "Kyson does not win games.",
                "fol": "\u00acp_10(Kyson)",
                "str_fol": "\u00acwins_games(Kyson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kyson",
                    "text": "Kyson helps others.",
                    "fol": "p_3(Kyson)",
                    "str_fol": "helps_others(Kyson)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Kyson either helps others or makes smart bets, but not both.",
                    "fol": "p_3(Kyson) \u2295 p_8(Kyson)",
                    "str_fol": "helps_others(Kyson) \u2295 makes_smart_bets(Kyson)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kyson",
                "text": "Kyson does not make smart bets.",
                "fol": "\u00acp_8(Kyson)",
                "str_fol": "\u00acmakes_smart_bets(Kyson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kyson",
                    "text": "Kyson reads people.",
                    "fol": "p_2(Kyson)",
                    "str_fol": "reads_people(Kyson)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Kyson",
                    "text": "Kyson does not win games.",
                    "fol": "\u00acp_10(Kyson)",
                    "str_fol": "\u00acwins_games(Kyson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Kyson reads people and is confident, then he wins games.",
                    "fol": "(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)",
                    "str_fol": "(reads_people(Kyson) \u2227 is_confident(Kyson)) \u2192 wins_games(Kyson)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kyson",
                "text": "Kyson is not confident.",
                "fol": "\u00acp_9(Kyson)",
                "str_fol": "\u00acis_confident(Kyson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Kyson",
                    "text": "Kyson does not make smart bets.",
                    "fol": "\u00acp_8(Kyson)",
                    "str_fol": "\u00acmakes_smart_bets(Kyson)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Kyson",
                    "text": "Kyson is not confident.",
                    "fol": "\u00acp_9(Kyson)",
                    "str_fol": "\u00acis_confident(Kyson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Kyson is either successful or makes smart bets (but not both), then he is confident.",
                    "fol": "(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)",
                    "str_fol": "(is_successful(Kyson) \u2295 makes_smart_bets(Kyson)) \u2192 is_confident(Kyson)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kyson",
                "text": "Kyson is not successful.",
                "fol": "\u00acp_7(Kyson)",
                "str_fol": "\u00acis_successful(Kyson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kyson",
                    "text": "Kyson does not have good luck.",
                    "fol": "\u00acp_0(Kyson)",
                    "str_fol": "\u00achas_good_luck(Kyson)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Kyson",
                    "text": "Kyson is not successful.",
                    "fol": "\u00acp_7(Kyson)",
                    "str_fol": "\u00acis_successful(Kyson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Kyson has good luck or knows Kyson's Roll, then he is successful.",
                    "fol": "(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)",
                    "str_fol": "(has_good_luck(Kyson) \u2228 knows_Kysons_Roll(Kyson)) \u2192 is_successful(Kyson)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Kyson",
                "text": "Kyson does not know Kyson's Roll.",
                "fol": "\u00acp_5(Kyson)",
                "str_fol": "\u00acknows_Kysons_Roll(Kyson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Kyson",
                    "text": "Kyson does not know Kyson's Roll.",
                    "fol": "\u00acp_5(Kyson)",
                    "str_fol": "\u00acknows_Kysons_Roll(Kyson)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Kyson",
                    "text": "Kyson does not take calculated risks.",
                    "fol": "\u00acp_1(Kyson)",
                    "str_fol": "\u00actakes_calculated_risks(Kyson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Kyson knows Kyson's Roll and takes calculated risks, then he wins big.",
                    "fol": "(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)",
                    "str_fol": "(knows_Kysons_Roll(Kyson) \u2227 takes_calculated_risks(Kyson)) \u2192 wins_big(Kyson)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_3(Kyson)\np_2(Kyson)\n\u00acp_0(Kyson)\n\u00acp_1(Kyson)\np_10(Kyson) \u2192 p_4(Kyson)\np_3(Kyson) \u2295 p_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kyson)",
                    "p_3(Kyson)",
                    "p_2(Kyson)",
                    "-p_0(Kyson)",
                    "-p_1(Kyson)",
                    "p_10(Kyson) -> p_4(Kyson)",
                    "-(p_3(Kyson) <-> p_8(Kyson))",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson)",
                    "(-(p_7(Kyson) <-> p_8(Kyson))) -> p_9(Kyson)",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson)",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson)",
                    "p_2(Kyson) -> p_6(Kyson)"
                ],
                "formulas(goals)": [
                    "p_6(Kyson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_2(Kyson) \u2192 p_6(Kyson)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_3(Kyson)\np_2(Kyson)\n\u00acp_0(Kyson)\n\u00acp_1(Kyson)\np_10(Kyson) \u2192 p_4(Kyson)\np_3(Kyson) \u2295 p_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)\np_6(Kyson)",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_4(Kyson)",
                    "p_3(Kyson)",
                    "p_2(Kyson)",
                    "\u00acp_0(Kyson)",
                    "\u00acp_1(Kyson)",
                    "p_10(Kyson) -> p_4(Kyson)",
                    "-(p_3(Kyson) <-> p_8(Kyson))",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson)",
                    "(-(p_7(Kyson) <-> p_8(Kyson))) -> p_9(Kyson)",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson)",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson)",
                    "p_6(Kyson)"
                ],
                "formulas(goals)": [
                    "p_6(Kyson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Kyson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_3(Kyson)\np_2(Kyson)\n\u00acp_0(Kyson)\n\u00acp_1(Kyson)\np_10(Kyson) \u2192 p_4(Kyson)\np_3(Kyson) \u2295 p_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2295 p_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)\np_6(Kyson) \u2192 p_0(Kyson)",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kyson)",
                    "p_3(Kyson)",
                    "p_2(Kyson)",
                    "-p_0(Kyson)",
                    "-p_1(Kyson)",
                    "p_10(Kyson) -> p_4(Kyson)",
                    "-(p_3(Kyson) <-> p_8(Kyson))",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson)",
                    "(-(p_7(Kyson) <-> p_8(Kyson))) -> p_9(Kyson)",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson)",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson)",
                    "p_6(Kyson) -> p_0(Kyson)"
                ],
                "formulas(goals)": [
                    "-p_6(Kyson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Kyson)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Kyson) \u2192 p_0(Kyson)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_3(Kyson)\np_2(Kyson)\n\u00acp_1(Kyson)\np_10(Kyson) \u2192 p_4(Kyson)\np_3(Kyson) \u2228 p_8(Kyson)\n\u00acp_3(Kyson) \u2228 \u00acp_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2228 p_8(Kyson)) \u2192 p_9(Kyson)\n(\u00acp_7(Kyson) \u2228 \u00acp_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)\np_6(Kyson) \u2192 p_0(Kyson)\n\u00acp_4(Kyson) \u2192 p_6(Kyson)",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kyson).",
                    "p_3(Kyson).",
                    "p_2(Kyson).",
                    "-p_1(Kyson).",
                    "p_10(Kyson) -> p_4(Kyson).",
                    "(p_3(Kyson) | p_8(Kyson)).",
                    "(-p_3(Kyson) | -p_8(Kyson)).",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson).",
                    "(p_7(Kyson) | p_8(Kyson)) -> p_9(Kyson).",
                    "(-p_7(Kyson) | -p_8(Kyson)) -> p_9(Kyson).",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson).",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson).",
                    "p_6(Kyson) -> p_0(Kyson).",
                    "-p_4(Kyson) -> p_6(Kyson)."
                ],
                "formulas(goals)": [
                    "p_6(Kyson)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_0(Kyson)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Kyson) \u2192 p_6(Kyson)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_3(Kyson)\np_2(Kyson)\n\u00acp_1(Kyson)\np_10(Kyson) \u2192 p_4(Kyson)\np_3(Kyson) \u2228 p_8(Kyson)\n\u00acp_3(Kyson) \u2228 \u00acp_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2227 p_8(Kyson)) \u2192 p_9(Kyson)\n(\u00acp_7(Kyson) \u2227 \u00acp_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)\np_6(Kyson) \u2192 p_0(Kyson)\n(\u00acp_4(Kyson) \u2227 \u00acp_3(Kyson)) \u2192 p_6(Kyson)\np_3(Kyson) \u2192 \u00acp_6(Kyson)",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kyson)",
                    "p_3(Kyson)",
                    "p_2(Kyson)",
                    "-p_1(Kyson)",
                    "p_10(Kyson) -> p_4(Kyson)",
                    "p_3(Kyson) | p_8(Kyson)",
                    "-p_3(Kyson) | -p_8(Kyson)",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson)",
                    "(p_7(Kyson) & p_8(Kyson)) -> p_9(Kyson)",
                    "(-p_7(Kyson) & -p_8(Kyson)) -> p_9(Kyson)",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson)",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson)",
                    "p_6(Kyson) -> p_0(Kyson)",
                    "(-p_4(Kyson) & -p_3(Kyson)) -> p_6(Kyson)",
                    "p_3(Kyson) -> -p_6(Kyson)"
                ],
                "formulas(goals)": [
                    "-p_6(Kyson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_7(Kyson) \u2228 p_8(Kyson)) \u2192 p_9(Kyson)",
                    "(\u00acp_7(Kyson) \u2228 \u00acp_8(Kyson)) \u2192 p_9(Kyson)",
                    "\u00acp_4(Kyson) \u2192 p_6(Kyson)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Kyson) \u2227 p_8(Kyson)) \u2192 p_9(Kyson)",
                    "(\u00acp_7(Kyson) \u2227 \u00acp_8(Kyson)) \u2192 p_9(Kyson)",
                    "(\u00acp_4(Kyson) \u2227 \u00acp_3(Kyson)) \u2192 p_6(Kyson)",
                    "p_3(Kyson) \u2192 \u00acp_6(Kyson)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_2(Kyson)\n\u00acp_1(Kyson)\np_3(Kyson) \u2228 p_8(Kyson)\n\u00acp_3(Kyson) \u2228 \u00acp_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2227 p_8(Kyson)) \u2192 p_9(Kyson)\n(\u00acp_7(Kyson) \u2227 \u00acp_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)\np_6(Kyson) \u2192 p_0(Kyson)\n(\u00acp_4(Kyson) \u2227 \u00acp_3(Kyson)) \u2192 p_6(Kyson)\np_3(Kyson) \u2192 \u00acp_6(Kyson)\np_8(Kyson)",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kyson)",
                    "p_2(Kyson)",
                    "-p_1(Kyson)",
                    "p_3(Kyson) | p_8(Kyson)",
                    "-p_3(Kyson) | -p_8(Kyson)",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson)",
                    "(p_7(Kyson) & p_8(Kyson)) -> p_9(Kyson)",
                    "(-p_7(Kyson) & -p_8(Kyson)) -> p_9(Kyson)",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson)",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson)",
                    "p_6(Kyson) -> p_0(Kyson)",
                    "(-p_4(Kyson) & -p_3(Kyson)) -> p_6(Kyson)",
                    "p_3(Kyson) -> -p_6(Kyson)",
                    "p_8(Kyson)"
                ],
                "formulas(goals)": [
                    "p_6(Kyson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_3(Kyson)"
                ],
                "removed_rules": [
                    "p_10(Kyson) \u2192 p_4(Kyson)"
                ],
                "added_facts": [
                    "p_8(Kyson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kyson)\np_2(Kyson)\n\u00acp_1(Kyson)\np_8(Kyson) \u2228 p_3(Kyson)\n\u00acp_3(Kyson) \u2228 \u00acp_8(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 p_10(Kyson)\n(p_7(Kyson) \u2227 p_8(Kyson)) \u2192 p_9(Kyson)\n(\u00acp_7(Kyson) \u2227 \u00acp_8(Kyson)) \u2192 p_9(Kyson)\n(p_0(Kyson) \u2228 p_5(Kyson)) \u2192 p_7(Kyson)\n(p_5(Kyson) \u2227 p_1(Kyson)) \u2192 p_6(Kyson)\np_6(Kyson) \u2192 p_0(Kyson)\n(\u00acp_4(Kyson) \u2227 \u00acp_3(Kyson)) \u2192 p_6(Kyson)\np_3(Kyson) \u2192 \u00acp_6(Kyson)\np_8(Kyson)\n\u00acp_3(Kyson)\n(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 (p_10(Kyson) \u2228 p_9(Kyson))\n(p_7(Kyson) \u2227 p_8(Kyson)) \u2192 (p_9(Kyson) \u2228 \u00acp_8(Kyson))",
            "Initial Goal": "p_6(Kyson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kyson)",
                    "p_2(Kyson)",
                    "-p_1(Kyson)",
                    "p_8(Kyson) | p_3(Kyson)",
                    "-p_3(Kyson) | -p_8(Kyson)",
                    "(p_2(Kyson) & p_9(Kyson)) -> p_10(Kyson)",
                    "(p_7(Kyson) & p_8(Kyson)) -> p_9(Kyson)",
                    "(-p_7(Kyson) & -p_8(Kyson)) -> p_9(Kyson)",
                    "(p_0(Kyson) | p_5(Kyson)) -> p_7(Kyson)",
                    "(p_5(Kyson) & p_1(Kyson)) -> p_6(Kyson)",
                    "p_6(Kyson) -> p_0(Kyson)",
                    "(-p_4(Kyson) & -p_3(Kyson)) -> p_6(Kyson)",
                    "p_3(Kyson) -> -p_6(Kyson)",
                    "p_8(Kyson)",
                    "-p_3(Kyson)",
                    "(p_2(Kyson) & p_9(Kyson)) -> (p_10(Kyson) | p_9(Kyson))",
                    "(p_7(Kyson) & p_8(Kyson)) -> (p_9(Kyson) | -p_8(Kyson))"
                ],
                "formulas(goals)": [
                    "p_6(Kyson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Kyson) \u2228 p_8(Kyson)"
                ],
                "added_facts": [
                    "\u00acp_3(Kyson)"
                ],
                "added_rules": [
                    "p_8(Kyson) \u2228 p_3(Kyson)",
                    "(p_2(Kyson) \u2227 p_9(Kyson)) \u2192 (p_10(Kyson) \u2228 p_9(Kyson))",
                    "(p_7(Kyson) \u2227 p_8(Kyson)) \u2192 (p_9(Kyson) \u2228 \u00acp_8(Kyson))"
                ]
            }
        }
    ]
}