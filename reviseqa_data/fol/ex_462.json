{
    "background_story": "In the realm of Aethoria, where dragons ruled the skies, Legacy was a majestic creature of legend. Born with scales that shimmered like the brightest ollari stones, a gemstone found only in the heart of the mystical mountains, Legacy was destined for greatness. The ollari stones embedded in his scales gave him the power to heal the land and bring prosperity to the dragon kingdom. With his wings spread wide, Legacy soared through the heavens, leaving trails of glittering ollari dust in his wake. His legacy, as his name suggested, was one of peace, wisdom, and the unwavering protection of his kingdom, ensuring the ollari's magic would forever thrive under his watchful eye.",
    "predicates": [
        {
            "id": 0,
            "name": "is_majestic"
        },
        {
            "id": 1,
            "name": "leads_nobly"
        },
        {
            "id": 2,
            "name": "hoards_gems"
        },
        {
            "id": 3,
            "name": "defends_lair"
        },
        {
            "id": 4,
            "name": "soars_high"
        },
        {
            "id": 5,
            "name": "inspires_others"
        },
        {
            "id": 6,
            "name": "breathes_fire"
        },
        {
            "id": 7,
            "name": "has_ollari_scales"
        },
        {
            "id": 8,
            "name": "can_heal_land"
        },
        {
            "id": 9,
            "name": "shines_brightly"
        },
        {
            "id": 10,
            "name": "spreads_prosperity"
        },
        {
            "id": 11,
            "name": "protects_kingdom"
        },
        {
            "id": 12,
            "name": "wise"
        },
        {
            "id": 13,
            "name": "guards_treasure"
        },
        {
            "id": 14,
            "name": "roars_loudly"
        },
        {
            "id": 15,
            "name": "rules_skies"
        },
        {
            "id": 16,
            "name": "has_vision"
        },
        {
            "id": 17,
            "name": "is_noble"
        },
        {
            "id": 18,
            "name": "brings_peace"
        },
        {
            "id": 19,
            "name": "brings_wealth"
        },
        {
            "id": 20,
            "name": "fosters_growth"
        },
        {
            "id": 21,
            "name": "keeps_order"
        },
        {
            "id": 22,
            "name": "glows_naturally"
        },
        {
            "id": 23,
            "name": "seeks_knowledge"
        },
        {
            "id": 24,
            "name": "makes_wise_decisions"
        },
        {
            "id": 25,
            "name": "values_honor"
        },
        {
            "id": 26,
            "name": "keeps_vigil"
        },
        {
            "id": 27,
            "name": "flies_free"
        },
        {
            "id": 28,
            "name": "claims_territory"
        },
        {
            "id": 29,
            "name": "flaps_wings"
        }
    ],
    "subject_name": "Legacy",
    "subject_category": "dragon",
    "keyword": "ollari",
    "all_facts": [
        {
            "id": 0,
            "subject": "Legacy",
            "text": "Legacy is not majestic.",
            "fol": "\u00acp_0(Legacy)",
            "str_fol": "\u00acis_majestic(Legacy)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Legacy",
            "text": "Legacy does not lead nobly.",
            "fol": "\u00acp_1(Legacy)",
            "str_fol": "\u00acleads_nobly(Legacy)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Legacy",
            "text": "Legacy does not hoard gems.",
            "fol": "\u00acp_2(Legacy)",
            "str_fol": "\u00achoards_gems(Legacy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Legacy",
            "text": "Legacy defends his lair.",
            "fol": "p_3(Legacy)",
            "str_fol": "defends_lair(Legacy)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Legacy",
            "text": "Legacy does not soar high.",
            "fol": "\u00acp_4(Legacy)",
            "str_fol": "\u00acsoars_high(Legacy)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Legacy",
            "text": "Legacy does not inspire others.",
            "fol": "\u00acp_5(Legacy)",
            "str_fol": "\u00acinspires_others(Legacy)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Legacy",
            "text": "Legacy does not breathe fire.",
            "fol": "\u00acp_6(Legacy)",
            "str_fol": "\u00acbreathes_fire(Legacy)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Legacy",
            "text": "Legacy roars loudly.",
            "fol": "p_14(Legacy)",
            "str_fol": "roars_loudly(Legacy)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Legacy",
            "text": "Legacy does not rule the skies.",
            "fol": "\u00acp_15(Legacy)",
            "str_fol": "\u00acrules_skies(Legacy)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Legacy",
            "text": "Legacy guards treasure.",
            "fol": "p_13(Legacy)",
            "str_fol": "guards_treasure(Legacy)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Legacy",
            "text": "Legacy is not wise.",
            "fol": "\u00acp_12(Legacy)",
            "str_fol": "\u00acwise(Legacy)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Legacy",
            "text": "Legacy shines brightly.",
            "fol": "p_9(Legacy)",
            "str_fol": "shines_brightly(Legacy)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Legacy",
            "text": "Legacy does not spread prosperity.",
            "fol": "\u00acp_10(Legacy)",
            "str_fol": "\u00acspreads_prosperity(Legacy)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Legacy",
            "text": "Legacy has ollari scales.",
            "fol": "p_7(Legacy)",
            "str_fol": "has_ollari_scales(Legacy)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Legacy",
            "text": "Legacy cannot heal the land.",
            "fol": "\u00acp_8(Legacy)",
            "str_fol": "\u00accan_heal_land(Legacy)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Legacy",
            "text": "Legacy does not breathe fire.",
            "fol": "\u00acp_6(Legacy)",
            "str_fol": "\u00acbreathes_fire(Legacy)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Legacy",
            "text": "Legacy does not soar high.",
            "fol": "\u00acp_4(Legacy)",
            "str_fol": "\u00acsoars_high(Legacy)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Legacy",
            "text": "Legacy does not inspire others.",
            "fol": "\u00acp_5(Legacy)",
            "str_fol": "\u00acinspires_others(Legacy)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Legacy",
            "text": "Legacy does not hoard gems.",
            "fol": "\u00acp_2(Legacy)",
            "str_fol": "\u00achoards_gems(Legacy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Legacy",
            "text": "Legacy defends his lair.",
            "fol": "p_3(Legacy)",
            "str_fol": "defends_lair(Legacy)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Legacy",
            "text": "Legacy does not lead nobly.",
            "fol": "\u00acp_1(Legacy)",
            "str_fol": "\u00acleads_nobly(Legacy)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Legacy",
            "text": "Legacy is not majestic.",
            "fol": "\u00acp_0(Legacy)",
            "str_fol": "\u00acis_majestic(Legacy)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Legacy either roars loudly or breathes fire, but not both.",
            "fol": "p_14(Legacy) \u2295 p_6(Legacy)",
            "str_fol": "roars_loudly(Legacy) \u2295 breathes_fire(Legacy)"
        },
        {
            "id": 7,
            "text": "If Legacy rules the skies or soars high, then he inspires others.",
            "fol": "(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)",
            "str_fol": "(rules_skies(Legacy) \u2228 soars_high(Legacy)) \u2192 inspires_others(Legacy)"
        },
        {
            "id": 6,
            "text": "If Legacy either hoards gems or defends his lair (but not both), then he guards treasure.",
            "fol": "(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)",
            "str_fol": "(hoards_gems(Legacy) \u2295 defends_lair(Legacy)) \u2192 guards_treasure(Legacy)"
        },
        {
            "id": 5,
            "text": "If Legacy is wise or has vision, then he will lead nobly.",
            "fol": "(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)",
            "str_fol": "(wise(Legacy) \u2228 has_vision(Legacy)) \u2192 leads_nobly(Legacy)"
        },
        {
            "id": 4,
            "text": "If Legacy either roars loudly or shines brightly (but not both), then he rules the skies.",
            "fol": "(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)",
            "str_fol": "(roars_loudly(Legacy) \u2295 shines_brightly(Legacy)) \u2192 rules_skies(Legacy)"
        },
        {
            "id": 3,
            "text": "If Legacy is wise, then he protects his kingdom and guards treasure.",
            "fol": "p_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))",
            "str_fol": "wise(Legacy) \u2192 (protects_kingdom(Legacy) \u2227 guards_treasure(Legacy))"
        },
        {
            "id": 2,
            "text": "If Legacy spreads prosperity or protects his kingdom, then he is majestic.",
            "fol": "(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)",
            "str_fol": "(spreads_prosperity(Legacy) \u2228 protects_kingdom(Legacy)) \u2192 is_majestic(Legacy)"
        },
        {
            "id": 1,
            "text": "If Legacy either shines brightly or spreads prosperity (but not both), then he has ollari scales.",
            "fol": "(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)",
            "str_fol": "(shines_brightly(Legacy) \u2295 spreads_prosperity(Legacy)) \u2192 has_ollari_scales(Legacy)"
        },
        {
            "id": 0,
            "text": "If Legacy has ollari scales, then he can heal the land.",
            "fol": "p_7(Legacy) \u2192 p_8(Legacy)",
            "str_fol": "has_ollari_scales(Legacy) \u2192 can_heal_land(Legacy)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Legacy",
            "text": "Legacy does not breathe fire.",
            "fol": "\u00acp_6(Legacy)",
            "str_fol": "\u00acbreathes_fire(Legacy)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Legacy",
            "text": "Legacy does not soar high.",
            "fol": "\u00acp_4(Legacy)",
            "str_fol": "\u00acsoars_high(Legacy)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Legacy",
            "text": "Legacy does not inspire others.",
            "fol": "\u00acp_5(Legacy)",
            "str_fol": "\u00acinspires_others(Legacy)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Legacy",
            "text": "Legacy does not hoard gems.",
            "fol": "\u00acp_2(Legacy)",
            "str_fol": "\u00achoards_gems(Legacy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Legacy",
            "text": "Legacy defends his lair.",
            "fol": "p_3(Legacy)",
            "str_fol": "defends_lair(Legacy)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Legacy",
            "text": "Legacy does not lead nobly.",
            "fol": "\u00acp_1(Legacy)",
            "str_fol": "\u00acleads_nobly(Legacy)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Legacy",
            "text": "Legacy is not majestic.",
            "fol": "\u00acp_0(Legacy)",
            "str_fol": "\u00acis_majestic(Legacy)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Legacy either roars loudly or breathes fire, but not both.",
            "fol": "p_14(Legacy) \u2295 p_6(Legacy)",
            "str_fol": "roars_loudly(Legacy) \u2295 breathes_fire(Legacy)"
        },
        {
            "id": 7,
            "text": "If Legacy rules the skies or soars high, then he inspires others.",
            "fol": "(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)",
            "str_fol": "(rules_skies(Legacy) \u2228 soars_high(Legacy)) \u2192 inspires_others(Legacy)"
        },
        {
            "id": 6,
            "text": "If Legacy either hoards gems or defends his lair (but not both), then he guards treasure.",
            "fol": "(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)",
            "str_fol": "(hoards_gems(Legacy) \u2295 defends_lair(Legacy)) \u2192 guards_treasure(Legacy)"
        },
        {
            "id": 5,
            "text": "If Legacy is wise or has vision, then he will lead nobly.",
            "fol": "(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)",
            "str_fol": "(wise(Legacy) \u2228 has_vision(Legacy)) \u2192 leads_nobly(Legacy)"
        },
        {
            "id": 4,
            "text": "If Legacy either roars loudly or shines brightly (but not both), then he rules the skies.",
            "fol": "(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)",
            "str_fol": "(roars_loudly(Legacy) \u2295 shines_brightly(Legacy)) \u2192 rules_skies(Legacy)"
        },
        {
            "id": 3,
            "text": "If Legacy is wise, then he protects his kingdom and guards treasure.",
            "fol": "p_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))",
            "str_fol": "wise(Legacy) \u2192 (protects_kingdom(Legacy) \u2227 guards_treasure(Legacy))"
        },
        {
            "id": 2,
            "text": "If Legacy spreads prosperity or protects his kingdom, then he is majestic.",
            "fol": "(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)",
            "str_fol": "(spreads_prosperity(Legacy) \u2228 protects_kingdom(Legacy)) \u2192 is_majestic(Legacy)"
        },
        {
            "id": 1,
            "text": "If Legacy either shines brightly or spreads prosperity (but not both), then he has ollari scales.",
            "fol": "(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)",
            "str_fol": "(shines_brightly(Legacy) \u2295 spreads_prosperity(Legacy)) \u2192 has_ollari_scales(Legacy)"
        },
        {
            "id": 0,
            "text": "If Legacy has ollari scales, then he can heal the land.",
            "fol": "p_7(Legacy) \u2192 p_8(Legacy)",
            "str_fol": "has_ollari_scales(Legacy) \u2192 can_heal_land(Legacy)"
        }
    ],
    "context_fol": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\n\u00acp_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_7(Legacy) \u2192 p_8(Legacy)",
    "conclusion": {
        "id": 14,
        "subject": "Legacy",
        "text": "Legacy cannot heal the land.",
        "fol": "\u00acp_8(Legacy)",
        "str_fol": "\u00accan_heal_land(Legacy)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_8(Legacy)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Legacy",
                    "text": "Legacy does not breathe fire.",
                    "fol": "\u00acp_6(Legacy)",
                    "str_fol": "\u00acbreathes_fire(Legacy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Legacy either roars loudly or breathes fire, but not both.",
                    "fol": "p_14(Legacy) \u2295 p_6(Legacy)",
                    "str_fol": "roars_loudly(Legacy) \u2295 breathes_fire(Legacy)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Legacy",
                "text": "Legacy roars loudly.",
                "fol": "p_14(Legacy)",
                "str_fol": "roars_loudly(Legacy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Legacy",
                    "text": "Legacy does not soar high.",
                    "fol": "\u00acp_4(Legacy)",
                    "str_fol": "\u00acsoars_high(Legacy)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Legacy",
                    "text": "Legacy does not inspire others.",
                    "fol": "\u00acp_5(Legacy)",
                    "str_fol": "\u00acinspires_others(Legacy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Legacy rules the skies or soars high, then he inspires others.",
                    "fol": "(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)",
                    "str_fol": "(rules_skies(Legacy) \u2228 soars_high(Legacy)) \u2192 inspires_others(Legacy)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Legacy",
                "text": "Legacy does not rule the skies.",
                "fol": "\u00acp_15(Legacy)",
                "str_fol": "\u00acrules_skies(Legacy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Legacy",
                    "text": "Legacy does not hoard gems.",
                    "fol": "\u00acp_2(Legacy)",
                    "str_fol": "\u00achoards_gems(Legacy)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Legacy",
                    "text": "Legacy defends his lair.",
                    "fol": "p_3(Legacy)",
                    "str_fol": "defends_lair(Legacy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Legacy either hoards gems or defends his lair (but not both), then he guards treasure.",
                    "fol": "(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)",
                    "str_fol": "(hoards_gems(Legacy) \u2295 defends_lair(Legacy)) \u2192 guards_treasure(Legacy)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Legacy",
                "text": "Legacy guards treasure.",
                "fol": "p_13(Legacy)",
                "str_fol": "guards_treasure(Legacy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Legacy",
                    "text": "Legacy does not lead nobly.",
                    "fol": "\u00acp_1(Legacy)",
                    "str_fol": "\u00acleads_nobly(Legacy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Legacy is wise or has vision, then he will lead nobly.",
                    "fol": "(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)",
                    "str_fol": "(wise(Legacy) \u2228 has_vision(Legacy)) \u2192 leads_nobly(Legacy)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Legacy",
                "text": "Legacy is not wise.",
                "fol": "\u00acp_12(Legacy)",
                "str_fol": "\u00acwise(Legacy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Legacy",
                    "text": "Legacy roars loudly.",
                    "fol": "p_14(Legacy)",
                    "str_fol": "roars_loudly(Legacy)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Legacy",
                    "text": "Legacy does not rule the skies.",
                    "fol": "\u00acp_15(Legacy)",
                    "str_fol": "\u00acrules_skies(Legacy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Legacy either roars loudly or shines brightly (but not both), then he rules the skies.",
                    "fol": "(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)",
                    "str_fol": "(roars_loudly(Legacy) \u2295 shines_brightly(Legacy)) \u2192 rules_skies(Legacy)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Legacy",
                "text": "Legacy shines brightly.",
                "fol": "p_9(Legacy)",
                "str_fol": "shines_brightly(Legacy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Legacy",
                    "text": "Legacy is not wise.",
                    "fol": "\u00acp_12(Legacy)",
                    "str_fol": "\u00acwise(Legacy)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Legacy",
                    "text": "Legacy guards treasure.",
                    "fol": "p_13(Legacy)",
                    "str_fol": "guards_treasure(Legacy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Legacy is wise, then he protects his kingdom and guards treasure.",
                    "fol": "p_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))",
                    "str_fol": "wise(Legacy) \u2192 (protects_kingdom(Legacy) \u2227 guards_treasure(Legacy))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Legacy",
                    "text": "Legacy is not majestic.",
                    "fol": "\u00acp_0(Legacy)",
                    "str_fol": "\u00acis_majestic(Legacy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Legacy spreads prosperity or protects his kingdom, then he is majestic.",
                    "fol": "(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)",
                    "str_fol": "(spreads_prosperity(Legacy) \u2228 protects_kingdom(Legacy)) \u2192 is_majestic(Legacy)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Legacy",
                "text": "Legacy does not spread prosperity.",
                "fol": "\u00acp_10(Legacy)",
                "str_fol": "\u00acspreads_prosperity(Legacy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Legacy",
                    "text": "Legacy shines brightly.",
                    "fol": "p_9(Legacy)",
                    "str_fol": "shines_brightly(Legacy)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Legacy",
                    "text": "Legacy does not spread prosperity.",
                    "fol": "\u00acp_10(Legacy)",
                    "str_fol": "\u00acspreads_prosperity(Legacy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Legacy either shines brightly or spreads prosperity (but not both), then he has ollari scales.",
                    "fol": "(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)",
                    "str_fol": "(shines_brightly(Legacy) \u2295 spreads_prosperity(Legacy)) \u2192 has_ollari_scales(Legacy)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Legacy",
                "text": "Legacy has ollari scales.",
                "fol": "p_7(Legacy)",
                "str_fol": "has_ollari_scales(Legacy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Legacy",
                    "text": "Legacy has ollari scales.",
                    "fol": "p_7(Legacy)",
                    "str_fol": "has_ollari_scales(Legacy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Legacy has ollari scales, then he can heal the land.",
                    "fol": "p_7(Legacy) \u2192 p_8(Legacy)",
                    "str_fol": "has_ollari_scales(Legacy) \u2192 can_heal_land(Legacy)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Legacy",
                "text": "Legacy cannot heal the land.",
                "fol": "\u00acp_8(Legacy)",
                "str_fol": "\u00accan_heal_land(Legacy)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 -(p_14(Legacy) <-> p_6(Legacy)).  [assumption].\n2 p_15(Legacy) | p_4(Legacy) -> p_5(Legacy).  [assumption].\n5 -(p_14(Legacy) <-> p_9(Legacy)) -> p_15(Legacy).  [assumption].\n7 p_10(Legacy) | p_11(Legacy) -> p_0(Legacy).  [assumption].\n8 -(p_9(Legacy) <-> p_10(Legacy)) -> p_7(Legacy).  [assumption].\n9 p_7(Legacy) -> p_8(Legacy).  [assumption].\n10 --p_8(Legacy).  [goal].\n11 p_14(Legacy) | p_6(Legacy).  [clausify(1)].\n12 -p_6(Legacy).  [assumption].\n14 -p_15(Legacy) | p_5(Legacy).  [clausify(2)].\n15 -p_5(Legacy).  [assumption].\n24 -p_10(Legacy) | p_0(Legacy).  [clausify(7)].\n25 -p_0(Legacy).  [assumption].\n28 -p_14(Legacy) | p_9(Legacy) | p_15(Legacy).  [clausify(5)].\n29 p_14(Legacy).  [resolve(11,b,12,a)].\n31 -p_9(Legacy) | p_10(Legacy) | p_7(Legacy).  [clausify(8)].\n32 p_9(Legacy) | p_15(Legacy).  [resolve(29,a,28,a)].\n33 p_15(Legacy) | p_10(Legacy) | p_7(Legacy).  [resolve(32,a,31,a)].\n34 -p_7(Legacy) | p_8(Legacy).  [clausify(9)].\n35 p_15(Legacy) | p_10(Legacy) | p_8(Legacy).  [resolve(33,c,34,a)].\n36 -p_8(Legacy).  [deny(10)].\n37 p_15(Legacy) | p_10(Legacy).  [resolve(35,c,36,a)].\n38 -p_15(Legacy).  [resolve(14,b,15,a)].\n39 p_10(Legacy).  [resolve(37,a,38,a)].\n40 -p_10(Legacy).  [resolve(24,b,25,a)].\n41 $F.  [resolve(39,a,40,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\n\u00acp_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_7(Legacy) \u2192 p_8(Legacy)\np_14(Legacy)\n\u00acp_12(Legacy)\n\u00acp_16(Legacy)\np_15(Legacy) \u2192 p_5(Legacy)",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy)",
                    "-p_4(Legacy)",
                    "-p_5(Legacy)",
                    "-p_2(Legacy)",
                    "p_3(Legacy)",
                    "-p_1(Legacy)",
                    "-p_0(Legacy)",
                    "-(p_14(Legacy) <-> p_6(Legacy))",
                    "(p_15(Legacy) | p_4(Legacy)) -> p_5(Legacy)",
                    "-(p_2(Legacy) <-> p_3(Legacy)) -> p_13(Legacy)",
                    "(p_12(Legacy) | p_16(Legacy)) -> p_1(Legacy)",
                    "-(p_14(Legacy) <-> p_9(Legacy)) -> p_15(Legacy)",
                    "p_12(Legacy) -> (p_11(Legacy) & p_13(Legacy))",
                    "(p_10(Legacy) | p_11(Legacy)) -> p_0(Legacy)",
                    "-(p_9(Legacy) <-> p_10(Legacy)) -> p_7(Legacy)",
                    "p_7(Legacy) -> p_8(Legacy)",
                    "p_14(Legacy)",
                    "-p_12(Legacy)",
                    "-p_16(Legacy)",
                    "p_15(Legacy) -> p_5(Legacy)"
                ],
                "formulas(goals)": [
                    "--p_8(Legacy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Legacy)",
                    "\u00acp_12(Legacy)",
                    "\u00acp_16(Legacy)"
                ],
                "added_rules": [
                    "p_15(Legacy) \u2192 p_5(Legacy)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\n\u00acp_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_7(Legacy) \u2192 p_8(Legacy)\np_14(Legacy)\n\u00acp_12(Legacy)\n\u00acp_16(Legacy)\np_15(Legacy) \u2192 p_5(Legacy)\np_9(Legacy)\n\u00acp_15(Legacy)\np_13(Legacy)\np_9(Legacy) \u2192 p_7(Legacy)\n\u00acp_8(Legacy) \u2192 \u00acp_7(Legacy)",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy).",
                    "-p_4(Legacy).",
                    "-p_5(Legacy).",
                    "-p_2(Legacy).",
                    "p_3(Legacy).",
                    "-p_1(Legacy).",
                    "-p_0(Legacy).",
                    "-(p_14(Legacy) <-> p_6(Legacy)).",
                    "(p_15(Legacy) | p_4(Legacy)) -> p_5(Legacy).",
                    "(-(p_2(Legacy) <-> p_3(Legacy))) -> p_13(Legacy).",
                    "(p_12(Legacy) | p_16(Legacy)) -> p_1(Legacy).",
                    "(-(p_14(Legacy) <-> p_9(Legacy))) -> p_15(Legacy).",
                    "p_12(Legacy) -> (p_11(Legacy) & p_13(Legacy)).",
                    "(p_10(Legacy) | p_11(Legacy)) -> p_0(Legacy).",
                    "(-(p_9(Legacy) <-> p_10(Legacy))) -> p_7(Legacy).",
                    "p_7(Legacy) -> p_8(Legacy).",
                    "p_14(Legacy).",
                    "-p_12(Legacy).",
                    "-p_16(Legacy).",
                    "p_15(Legacy) -> p_5(Legacy).",
                    "p_9(Legacy).",
                    "-p_15(Legacy).",
                    "p_13(Legacy).",
                    "p_9(Legacy) -> p_7(Legacy).",
                    "-p_8(Legacy) -> -p_7(Legacy)."
                ],
                "formulas(goals)": [
                    "--p_8(Legacy)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Legacy)",
                    "\u00acp_15(Legacy)",
                    "p_13(Legacy)"
                ],
                "added_rules": [
                    "p_9(Legacy) \u2192 p_7(Legacy)",
                    "\u00acp_8(Legacy) \u2192 \u00acp_7(Legacy)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\n\u00acp_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_7(Legacy) \u2192 p_8(Legacy)\np_14(Legacy)\n\u00acp_12(Legacy)\n\u00acp_16(Legacy)\np_15(Legacy) \u2192 p_5(Legacy)\np_9(Legacy)\n\u00acp_15(Legacy)\np_13(Legacy)\np_9(Legacy) \u2192 p_7(Legacy)\n\u00acp_8(Legacy) \u2192 \u00acp_7(Legacy)\np_9(Legacy) \u2192 p_8(Legacy)",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy)",
                    "-p_4(Legacy)",
                    "-p_5(Legacy)",
                    "-p_2(Legacy)",
                    "p_3(Legacy)",
                    "-p_1(Legacy)",
                    "-p_0(Legacy)",
                    "-(p_14(Legacy) <-> p_6(Legacy))",
                    "(p_15(Legacy) | p_4(Legacy)) -> p_5(Legacy)",
                    "(-(p_2(Legacy) <-> p_3(Legacy))) -> p_13(Legacy)",
                    "(p_12(Legacy) | p_16(Legacy)) -> p_1(Legacy)",
                    "(-(p_14(Legacy) <-> p_9(Legacy))) -> p_15(Legacy)",
                    "p_12(Legacy) -> (p_11(Legacy) & p_13(Legacy))",
                    "(p_10(Legacy) | p_11(Legacy)) -> p_0(Legacy)",
                    "(-(p_9(Legacy) <-> p_10(Legacy))) -> p_7(Legacy)",
                    "p_7(Legacy) -> p_8(Legacy)",
                    "p_14(Legacy)",
                    "-p_12(Legacy)",
                    "-p_16(Legacy)",
                    "p_15(Legacy) -> p_5(Legacy)",
                    "p_9(Legacy)",
                    "-p_15(Legacy)",
                    "p_13(Legacy)",
                    "p_9(Legacy) -> p_7(Legacy)",
                    "-p_8(Legacy) -> -p_7(Legacy)",
                    "p_9(Legacy) -> p_8(Legacy)"
                ],
                "formulas(goals)": [
                    "-(-p_8(Legacy))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_9(Legacy) \u2192 p_8(Legacy)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\np_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_14(Legacy)\n\u00acp_12(Legacy)\n\u00acp_16(Legacy)\np_15(Legacy) \u2192 p_5(Legacy)\np_9(Legacy)\n\u00acp_15(Legacy)\np_13(Legacy)\n\u00acp_8(Legacy) \u2192 \u00acp_7(Legacy)\np_11(Legacy) \u2192 \u00acp_8(Legacy)\np_11(Legacy)",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy)",
                    "-p_4(Legacy)",
                    "-p_5(Legacy)",
                    "-p_2(Legacy)",
                    "p_3(Legacy)",
                    "-p_1(Legacy)",
                    "p_0(Legacy)",
                    "-(p_14(Legacy) <-> p_6(Legacy))",
                    "(p_15(Legacy) | p_4(Legacy)) -> p_5(Legacy)",
                    "-(p_2(Legacy) <-> p_3(Legacy)) -> p_13(Legacy)",
                    "(p_12(Legacy) | p_16(Legacy)) -> p_1(Legacy)",
                    "-(p_14(Legacy) <-> p_9(Legacy)) -> p_15(Legacy)",
                    "p_12(Legacy) -> (p_11(Legacy) & p_13(Legacy))",
                    "(p_10(Legacy) | p_11(Legacy)) -> p_0(Legacy)",
                    "-(p_9(Legacy) <-> p_10(Legacy)) -> p_7(Legacy)",
                    "p_14(Legacy)",
                    "-p_12(Legacy)",
                    "-p_16(Legacy)",
                    "p_15(Legacy) -> p_5(Legacy)",
                    "p_9(Legacy)",
                    "-p_15(Legacy)",
                    "p_13(Legacy)",
                    "(-p_8(Legacy)) -> (-p_7(Legacy))",
                    "p_11(Legacy) -> (-p_8(Legacy))",
                    "p_11(Legacy)"
                ],
                "formulas(goals)": [
                    "-p_8(Legacy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_0(Legacy)"
                ],
                "removed_rules": [
                    "p_9(Legacy) \u2192 p_7(Legacy)",
                    "p_9(Legacy) \u2192 p_8(Legacy)"
                ],
                "added_facts": [
                    "p_0(Legacy)",
                    "p_11(Legacy)"
                ],
                "added_rules": [
                    "p_11(Legacy) \u2192 \u00acp_8(Legacy)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Legacy).\n\u00acp_4(Legacy).\n\u00acp_5(Legacy).\n\u00acp_2(Legacy).\np_3(Legacy).\n\u00acp_1(Legacy).\np_0(Legacy).\np_14(Legacy) \u2295 p_6(Legacy).\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy).\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy).\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy).\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy).\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy)).\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy).\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy).\np_14(Legacy).\n\u00acp_12(Legacy).\n\u00acp_16(Legacy).\np_15(Legacy) \u2192 p_5(Legacy).\np_9(Legacy).\n\u00acp_15(Legacy).\np_13(Legacy).\n\u00acp_8(Legacy) \u2192 \u00acp_7(Legacy).\np_11(Legacy) \u2192 \u00acp_8(Legacy).\n\u00acp_10(Legacy).",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy).",
                    "-p_4(Legacy).",
                    "-p_5(Legacy).",
                    "-p_2(Legacy).",
                    "p_3(Legacy).",
                    "-p_1(Legacy).",
                    "p_0(Legacy).",
                    "-(p_14(Legacy) <-> p_6(Legacy)).",
                    "(p_15(Legacy) | p_4(Legacy)) -> p_5(Legacy).",
                    "(-(p_2(Legacy) <-> p_3(Legacy))) -> p_13(Legacy).",
                    "(p_12(Legacy) | p_16(Legacy)) -> p_1(Legacy).",
                    "(-(p_14(Legacy) <-> p_9(Legacy))) -> p_15(Legacy).",
                    "p_12(Legacy) -> (p_11(Legacy) & p_13(Legacy)).",
                    "(p_10(Legacy) | p_11(Legacy)) -> p_0(Legacy).",
                    "(-(p_9(Legacy) <-> p_10(Legacy))) -> p_7(Legacy).",
                    "p_14(Legacy).",
                    "-p_12(Legacy).",
                    "-p_16(Legacy).",
                    "p_15(Legacy) -> p_5(Legacy).",
                    "p_9(Legacy).",
                    "-p_15(Legacy).",
                    "p_13(Legacy).",
                    "-p_8(Legacy) -> -p_7(Legacy).",
                    "p_11(Legacy) -> -p_8(Legacy).",
                    "-p_10(Legacy)."
                ],
                "formulas(goals)": [
                    "--p_8(Legacy)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_11(Legacy)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Legacy)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\np_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\np_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))\n(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_14(Legacy)\n\u00acp_12(Legacy)\n\u00acp_16(Legacy)\np_15(Legacy) \u2192 p_5(Legacy)\np_9(Legacy)\n\u00acp_15(Legacy)\np_13(Legacy)\np_7(Legacy) \u2192 p_8(Legacy)\np_11(Legacy) \u2192 \u00acp_8(Legacy)\n\u00acp_10(Legacy)\np_7(Legacy)\n\u00acp_11(Legacy)",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy).",
                    "-p_4(Legacy).",
                    "-p_5(Legacy).",
                    "-p_2(Legacy).",
                    "p_3(Legacy).",
                    "-p_1(Legacy).",
                    "p_0(Legacy).",
                    "-(p_14(Legacy) <-> p_6(Legacy)).",
                    "(p_15(Legacy) | p_4(Legacy)) -> p_5(Legacy).",
                    "(-(p_2(Legacy) <-> p_3(Legacy))) -> p_13(Legacy).",
                    "(p_12(Legacy) | p_16(Legacy)) -> p_1(Legacy).",
                    "(-(p_14(Legacy) <-> p_9(Legacy))) -> p_15(Legacy).",
                    "p_12(Legacy) -> (p_11(Legacy) & p_13(Legacy)).",
                    "(p_10(Legacy) | p_11(Legacy)) -> p_0(Legacy).",
                    "(-(p_9(Legacy) <-> p_10(Legacy))) -> p_7(Legacy).",
                    "p_14(Legacy).",
                    "-p_12(Legacy).",
                    "-p_16(Legacy).",
                    "p_15(Legacy) -> p_5(Legacy).",
                    "p_9(Legacy).",
                    "-p_15(Legacy).",
                    "p_13(Legacy).",
                    "p_7(Legacy) -> p_8(Legacy).",
                    "p_11(Legacy) -> -p_8(Legacy).",
                    "-p_10(Legacy).",
                    "p_7(Legacy).",
                    "-p_11(Legacy)."
                ],
                "formulas(goals)": [
                    "--p_8(Legacy)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_8(Legacy) \u2192 \u00acp_7(Legacy)"
                ],
                "added_facts": [
                    "p_7(Legacy)",
                    "\u00acp_11(Legacy)"
                ],
                "added_rules": [
                    "p_7(Legacy) \u2192 p_8(Legacy)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Legacy)\n\u00acp_4(Legacy)\n\u00acp_5(Legacy)\n\u00acp_2(Legacy)\np_3(Legacy)\n\u00acp_1(Legacy)\np_0(Legacy)\np_14(Legacy) \u2295 p_6(Legacy)\n\u00acp_15(Legacy) \u2192 (p_4(Legacy) \u2192 p_5(Legacy))\n(p_2(Legacy) \u2295 p_3(Legacy)) \u2192 p_13(Legacy)\n\u00acp_12(Legacy) \u2192 (p_16(Legacy) \u2192 p_1(Legacy))\n(p_14(Legacy) \u2295 p_9(Legacy)) \u2192 p_15(Legacy)\n(p_12(Legacy) \u2192 p_11(Legacy)) \u2227 (p_12(Legacy) \u2192 p_13(Legacy))\n\u00acp_10(Legacy) \u2192 (p_11(Legacy) \u2192 p_0(Legacy))\n(p_9(Legacy) \u2295 p_10(Legacy)) \u2192 p_7(Legacy)\np_14(Legacy)\n\u00acp_12(Legacy)\n\u00acp_16(Legacy)\np_15(Legacy) \u2192 p_5(Legacy)\np_9(Legacy)\n\u00acp_15(Legacy)\np_13(Legacy)\np_7(Legacy) \u2192 p_8(Legacy)\np_11(Legacy) \u2192 \u00acp_8(Legacy)\n\u00acp_10(Legacy)\np_7(Legacy)\n\u00acp_11(Legacy)\np_9(Legacy) \u2295 p_10(Legacy)",
            "Initial Goal": "\u00acp_8(Legacy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Legacy)",
                    "-p_4(Legacy)",
                    "-p_5(Legacy)",
                    "-p_2(Legacy)",
                    "p_3(Legacy)",
                    "-p_1(Legacy)",
                    "p_0(Legacy)",
                    "-(p_14(Legacy) <-> p_6(Legacy))",
                    "(-p_15(Legacy) -> (p_4(Legacy) -> p_5(Legacy)))",
                    "(-(p_2(Legacy) <-> p_3(Legacy)) -> p_13(Legacy))",
                    "(-p_12(Legacy) -> (p_16(Legacy) -> p_1(Legacy)))",
                    "(-(p_14(Legacy) <-> p_9(Legacy)) -> p_15(Legacy))",
                    "(p_12(Legacy) -> p_11(Legacy)) & (p_12(Legacy) -> p_13(Legacy))",
                    "(-p_10(Legacy) -> (p_11(Legacy) -> p_0(Legacy)))",
                    "(-(p_9(Legacy) <-> p_10(Legacy)) -> p_7(Legacy))",
                    "p_14(Legacy)",
                    "-p_12(Legacy)",
                    "-p_16(Legacy)",
                    "p_15(Legacy) -> p_5(Legacy)",
                    "p_9(Legacy)",
                    "-p_15(Legacy)",
                    "p_13(Legacy)",
                    "p_7(Legacy) -> p_8(Legacy)",
                    "p_11(Legacy) -> -p_8(Legacy)",
                    "-p_10(Legacy)",
                    "p_7(Legacy)",
                    "-p_11(Legacy)",
                    "-(p_9(Legacy) <-> p_10(Legacy))"
                ],
                "formulas(goals)": [
                    "--p_8(Legacy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_15(Legacy) \u2228 p_4(Legacy)) \u2192 p_5(Legacy)",
                    "(p_12(Legacy) \u2228 p_16(Legacy)) \u2192 p_1(Legacy)",
                    "p_12(Legacy) \u2192 (p_11(Legacy) \u2227 p_13(Legacy))",
                    "(p_10(Legacy) \u2228 p_11(Legacy)) \u2192 p_0(Legacy)"
                ],
                "added_facts": [
                    "p_9(Legacy) \u2295 p_10(Legacy)"
                ],
                "added_rules": [
                    "\u00acp_15(Legacy) \u2192 (p_4(Legacy) \u2192 p_5(Legacy))",
                    "\u00acp_12(Legacy) \u2192 (p_16(Legacy) \u2192 p_1(Legacy))",
                    "(p_12(Legacy) \u2192 p_11(Legacy)) \u2227 (p_12(Legacy) \u2192 p_13(Legacy))",
                    "\u00acp_10(Legacy) \u2192 (p_11(Legacy) \u2192 p_0(Legacy))"
                ]
            }
        }
    ]
}