{
    "background_story": "Wilder was a visionary entrepreneur who always thought ahead of his time. Growing up, he was fascinated by technology and innovation, often spending hours reading about future trends and advancements. As he entered adulthood, Wilder turned his passion into a career, founding a startup that focused on developing sustainable energy solutions. His ability to anticipate and adapt to changing market needs allowed his company to stay ahead of the competition. Wilder's forward-thinking approach led to the creation of groundbreaking products that transformed the industry. He became a respected leader in his field, known for his insightful predictions and innovative strategies that consistently kept him and his company ahead of the curve.",
    "predicates": [
        {
            "id": 0,
            "name": "becomes_leader"
        },
        {
            "id": 1,
            "name": "forward_thinking"
        },
        {
            "id": 2,
            "name": "is_cautious"
        },
        {
            "id": 3,
            "name": "has_passion"
        },
        {
            "id": 4,
            "name": "is_expert"
        },
        {
            "id": 5,
            "name": "makes_discovery"
        },
        {
            "id": 6,
            "name": "innovative"
        },
        {
            "id": 7,
            "name": "successful"
        },
        {
            "id": 8,
            "name": "takes_risks"
        },
        {
            "id": 9,
            "name": "achieves_goals"
        },
        {
            "id": 10,
            "name": "gains_recognition"
        },
        {
            "id": 11,
            "name": "solves_problems"
        },
        {
            "id": 12,
            "name": "creates_value"
        },
        {
            "id": 13,
            "name": "thinks_critically"
        },
        {
            "id": 14,
            "name": "pioneers_tech"
        },
        {
            "id": 15,
            "name": "drives_progress"
        },
        {
            "id": 16,
            "name": "sets_objectives"
        },
        {
            "id": 17,
            "name": "is_adventurous"
        },
        {
            "id": 18,
            "name": "has_vision"
        },
        {
            "id": 19,
            "name": "earns_awards"
        },
        {
            "id": 20,
            "name": "is_pioneer"
        },
        {
            "id": 21,
            "name": "is_curious"
        },
        {
            "id": 22,
            "name": "works_hard"
        }
    ],
    "subject_name": "Wilder",
    "subject_category": "person",
    "keyword": "ahead",
    "all_facts": [
        {
            "id": 0,
            "subject": "Wilder",
            "text": "Wilder does not become a leader.",
            "fol": "\u00acp_0(Wilder)",
            "str_fol": "\u00acbecomes_leader(Wilder)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Wilder",
            "text": "Wilder is not forward-thinking.",
            "fol": "\u00acp_1(Wilder)",
            "str_fol": "\u00acforward_thinking(Wilder)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Wilder",
            "text": "Wilder is cautious.",
            "fol": "p_2(Wilder)",
            "str_fol": "is_cautious(Wilder)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Wilder",
            "text": "Wilder does not have passion.",
            "fol": "\u00acp_3(Wilder)",
            "str_fol": "\u00achas_passion(Wilder)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Wilder",
            "text": "Wilder is an expert.",
            "fol": "p_4(Wilder)",
            "str_fol": "is_expert(Wilder)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Wilder",
            "text": "Wilder does not make discoveries.",
            "fol": "\u00acp_5(Wilder)",
            "str_fol": "\u00acmakes_discovery(Wilder)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Wilder",
            "text": "Wilder solves problems.",
            "fol": "p_11(Wilder)",
            "str_fol": "solves_problems(Wilder)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Wilder",
            "text": "Wilder does not create value.",
            "fol": "\u00acp_12(Wilder)",
            "str_fol": "\u00accreates_value(Wilder)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Wilder",
            "text": "Wilder gains recognition.",
            "fol": "p_10(Wilder)",
            "str_fol": "gains_recognition(Wilder)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Wilder",
            "text": "Wilder does not take risks.",
            "fol": "\u00acp_8(Wilder)",
            "str_fol": "\u00actakes_risks(Wilder)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Wilder",
            "text": "Wilder does not achieve his goals.",
            "fol": "\u00acp_9(Wilder)",
            "str_fol": "\u00acachieves_goals(Wilder)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Wilder",
            "text": "Wilder is not innovative.",
            "fol": "\u00acp_6(Wilder)",
            "str_fol": "\u00acinnovative(Wilder)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Wilder",
            "text": "Wilder is not successful.",
            "fol": "\u00acp_7(Wilder)",
            "str_fol": "\u00acsuccessful(Wilder)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Wilder",
            "text": "Wilder is an expert.",
            "fol": "p_4(Wilder)",
            "str_fol": "is_expert(Wilder)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Wilder",
            "text": "Wilder does not make discoveries.",
            "fol": "\u00acp_5(Wilder)",
            "str_fol": "\u00acmakes_discovery(Wilder)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Wilder",
            "text": "Wilder does not have passion.",
            "fol": "\u00acp_3(Wilder)",
            "str_fol": "\u00achas_passion(Wilder)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Wilder",
            "text": "Wilder is cautious.",
            "fol": "p_2(Wilder)",
            "str_fol": "is_cautious(Wilder)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Wilder",
            "text": "Wilder does not become a leader.",
            "fol": "\u00acp_0(Wilder)",
            "str_fol": "\u00acbecomes_leader(Wilder)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Wilder",
            "text": "Wilder is not forward-thinking.",
            "fol": "\u00acp_1(Wilder)",
            "str_fol": "\u00acforward_thinking(Wilder)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Wilder is an expert, then he either solves problems or makes discoveries, but not both.",
            "fol": "p_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))",
            "str_fol": "is_expert(Wilder) \u2192 (solves_problems(Wilder) \u2295 makes_discovery(Wilder))"
        },
        {
            "id": 5,
            "text": "If a person creates value, then they have passion and think critically.",
            "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))",
            "str_fol": "\u2200x (creates_value(x) \u2192 (has_passion(x) \u2227 thinks_critically(x)))"
        },
        {
            "id": 4,
            "text": "If Wilder either solves problems or creates value (but not both), then he gains recognition.",
            "fol": "(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)",
            "str_fol": "(solves_problems(Wilder) \u2295 creates_value(Wilder)) \u2192 gains_recognition(Wilder)"
        },
        {
            "id": 3,
            "text": "Wilder is either cautious or takes risks, but not both.",
            "fol": "p_2(Wilder) \u2295 p_8(Wilder)",
            "str_fol": "is_cautious(Wilder) \u2295 takes_risks(Wilder)"
        },
        {
            "id": 2,
            "text": "If Wilder achieves his goals and gains recognition, then he will become a leader.",
            "fol": "(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)",
            "str_fol": "(achieves_goals(Wilder) \u2227 gains_recognition(Wilder)) \u2192 becomes_leader(Wilder)"
        },
        {
            "id": 1,
            "text": "If Wilder is innovative or takes risks, then he will achieve his goals.",
            "fol": "(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)",
            "str_fol": "(innovative(Wilder) \u2228 takes_risks(Wilder)) \u2192 achieves_goals(Wilder)"
        },
        {
            "id": 0,
            "text": "If Wilder is innovative or forward-thinking, then he is successful.",
            "fol": "(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)",
            "str_fol": "(innovative(Wilder) \u2228 forward_thinking(Wilder)) \u2192 successful(Wilder)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Wilder",
            "text": "Wilder is an expert.",
            "fol": "p_4(Wilder)",
            "str_fol": "is_expert(Wilder)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Wilder",
            "text": "Wilder does not make discoveries.",
            "fol": "\u00acp_5(Wilder)",
            "str_fol": "\u00acmakes_discovery(Wilder)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Wilder",
            "text": "Wilder does not have passion.",
            "fol": "\u00acp_3(Wilder)",
            "str_fol": "\u00achas_passion(Wilder)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Wilder",
            "text": "Wilder is cautious.",
            "fol": "p_2(Wilder)",
            "str_fol": "is_cautious(Wilder)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Wilder",
            "text": "Wilder does not become a leader.",
            "fol": "\u00acp_0(Wilder)",
            "str_fol": "\u00acbecomes_leader(Wilder)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Wilder",
            "text": "Wilder is not forward-thinking.",
            "fol": "\u00acp_1(Wilder)",
            "str_fol": "\u00acforward_thinking(Wilder)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Wilder is an expert, then he either solves problems or makes discoveries, but not both.",
            "fol": "p_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))",
            "str_fol": "is_expert(Wilder) \u2192 (solves_problems(Wilder) \u2295 makes_discovery(Wilder))"
        },
        {
            "id": 5,
            "text": "If a person creates value, then they have passion and think critically.",
            "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))",
            "str_fol": "\u2200x (creates_value(x) \u2192 (has_passion(x) \u2227 thinks_critically(x)))"
        },
        {
            "id": 4,
            "text": "If Wilder either solves problems or creates value (but not both), then he gains recognition.",
            "fol": "(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)",
            "str_fol": "(solves_problems(Wilder) \u2295 creates_value(Wilder)) \u2192 gains_recognition(Wilder)"
        },
        {
            "id": 3,
            "text": "Wilder is either cautious or takes risks, but not both.",
            "fol": "p_2(Wilder) \u2295 p_8(Wilder)",
            "str_fol": "is_cautious(Wilder) \u2295 takes_risks(Wilder)"
        },
        {
            "id": 2,
            "text": "If Wilder achieves his goals and gains recognition, then he will become a leader.",
            "fol": "(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)",
            "str_fol": "(achieves_goals(Wilder) \u2227 gains_recognition(Wilder)) \u2192 becomes_leader(Wilder)"
        },
        {
            "id": 1,
            "text": "If Wilder is innovative or takes risks, then he will achieve his goals.",
            "fol": "(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)",
            "str_fol": "(innovative(Wilder) \u2228 takes_risks(Wilder)) \u2192 achieves_goals(Wilder)"
        },
        {
            "id": 0,
            "text": "If Wilder is innovative or forward-thinking, then he is successful.",
            "fol": "(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)",
            "str_fol": "(innovative(Wilder) \u2228 forward_thinking(Wilder)) \u2192 successful(Wilder)"
        }
    ],
    "context_fol": "p_4(Wilder)\n\u00acp_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\n\u00acp_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\n(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)",
    "conclusion": {
        "id": 12,
        "subject": "Wilder",
        "text": "Wilder is not successful.",
        "fol": "\u00acp_7(Wilder)",
        "str_fol": "\u00acsuccessful(Wilder)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Wilder)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Wilder",
                    "text": "Wilder is an expert.",
                    "fol": "p_4(Wilder)",
                    "str_fol": "is_expert(Wilder)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Wilder",
                    "text": "Wilder does not make discoveries.",
                    "fol": "\u00acp_5(Wilder)",
                    "str_fol": "\u00acmakes_discovery(Wilder)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Wilder is an expert, then he either solves problems or makes discoveries, but not both.",
                    "fol": "p_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))",
                    "str_fol": "is_expert(Wilder) \u2192 (solves_problems(Wilder) \u2295 makes_discovery(Wilder))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Wilder",
                "text": "Wilder solves problems.",
                "fol": "p_11(Wilder)",
                "str_fol": "solves_problems(Wilder)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Wilder",
                    "text": "Wilder does not have passion.",
                    "fol": "\u00acp_3(Wilder)",
                    "str_fol": "\u00achas_passion(Wilder)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If a person creates value, then they have passion and think critically.",
                    "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))",
                    "str_fol": "\u2200x (creates_value(x) \u2192 (has_passion(x) \u2227 thinks_critically(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Wilder",
                "text": "Wilder does not create value.",
                "fol": "\u00acp_12(Wilder)",
                "str_fol": "\u00accreates_value(Wilder)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Wilder",
                    "text": "Wilder solves problems.",
                    "fol": "p_11(Wilder)",
                    "str_fol": "solves_problems(Wilder)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Wilder",
                    "text": "Wilder does not create value.",
                    "fol": "\u00acp_12(Wilder)",
                    "str_fol": "\u00accreates_value(Wilder)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Wilder either solves problems or creates value (but not both), then he gains recognition.",
                    "fol": "(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)",
                    "str_fol": "(solves_problems(Wilder) \u2295 creates_value(Wilder)) \u2192 gains_recognition(Wilder)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Wilder",
                "text": "Wilder gains recognition.",
                "fol": "p_10(Wilder)",
                "str_fol": "gains_recognition(Wilder)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Wilder",
                    "text": "Wilder is cautious.",
                    "fol": "p_2(Wilder)",
                    "str_fol": "is_cautious(Wilder)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Wilder is either cautious or takes risks, but not both.",
                    "fol": "p_2(Wilder) \u2295 p_8(Wilder)",
                    "str_fol": "is_cautious(Wilder) \u2295 takes_risks(Wilder)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Wilder",
                "text": "Wilder does not take risks.",
                "fol": "\u00acp_8(Wilder)",
                "str_fol": "\u00actakes_risks(Wilder)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Wilder",
                    "text": "Wilder gains recognition.",
                    "fol": "p_10(Wilder)",
                    "str_fol": "gains_recognition(Wilder)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Wilder",
                    "text": "Wilder does not become a leader.",
                    "fol": "\u00acp_0(Wilder)",
                    "str_fol": "\u00acbecomes_leader(Wilder)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Wilder achieves his goals and gains recognition, then he will become a leader.",
                    "fol": "(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)",
                    "str_fol": "(achieves_goals(Wilder) \u2227 gains_recognition(Wilder)) \u2192 becomes_leader(Wilder)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Wilder",
                "text": "Wilder does not achieve his goals.",
                "fol": "\u00acp_9(Wilder)",
                "str_fol": "\u00acachieves_goals(Wilder)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Wilder",
                    "text": "Wilder does not take risks.",
                    "fol": "\u00acp_8(Wilder)",
                    "str_fol": "\u00actakes_risks(Wilder)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Wilder",
                    "text": "Wilder does not achieve his goals.",
                    "fol": "\u00acp_9(Wilder)",
                    "str_fol": "\u00acachieves_goals(Wilder)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Wilder is innovative or takes risks, then he will achieve his goals.",
                    "fol": "(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)",
                    "str_fol": "(innovative(Wilder) \u2228 takes_risks(Wilder)) \u2192 achieves_goals(Wilder)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Wilder",
                "text": "Wilder is not innovative.",
                "fol": "\u00acp_6(Wilder)",
                "str_fol": "\u00acinnovative(Wilder)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Wilder",
                    "text": "Wilder is not innovative.",
                    "fol": "\u00acp_6(Wilder)",
                    "str_fol": "\u00acinnovative(Wilder)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Wilder",
                    "text": "Wilder is not forward-thinking.",
                    "fol": "\u00acp_1(Wilder)",
                    "str_fol": "\u00acforward_thinking(Wilder)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Wilder is innovative or forward-thinking, then he is successful.",
                    "fol": "(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)",
                    "str_fol": "(innovative(Wilder) \u2228 forward_thinking(Wilder)) \u2192 successful(Wilder)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Wilder)\n\u00acp_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\n\u00acp_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\n(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "-p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "-p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "(-(p_2(Wilder) <-> p_8(Wilder)))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "(p_6(Wilder) | p_1(Wilder)) -> p_7(Wilder)",
                    "-p_6(Wilder)",
                    "(-p_6(Wilder) & -p_1(Wilder)) -> -p_7(Wilder)"
                ],
                "formulas(goals)": [
                    "-p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Wilder)"
                ],
                "added_rules": [
                    "(\u00acp_6(Wilder) \u2227 \u00acp_1(Wilder)) \u2192 \u00acp_7(Wilder)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Wilder)\n\u00acp_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\np_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\n(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "-p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "(-(p_2(Wilder) <-> p_8(Wilder)))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "(p_6(Wilder) | p_1(Wilder)) -> p_7(Wilder)"
                ],
                "formulas(goals)": [
                    "p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Wilder)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Wilder)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Wilder)\n\u00acp_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\np_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\np_6(Wilder) \u2192 p_7(Wilder)\np_11(Wilder) \u2192 \u00acp_7(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "-p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "-(p_2(Wilder) <-> p_8(Wilder))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "p_6(Wilder) -> p_7(Wilder)",
                    "p_11(Wilder) -> -p_7(Wilder)"
                ],
                "formulas(goals)": [
                    "-p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Wilder) \u2228 p_1(Wilder)) \u2192 p_7(Wilder)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Wilder) \u2192 p_7(Wilder)",
                    "p_11(Wilder) \u2192 \u00acp_7(Wilder)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Wilder)\n\u00acp_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\np_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\np_6(Wilder) \u2192 p_7(Wilder)\np_11(Wilder) \u2192 p_7(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "-p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "-(p_2(Wilder) <-> p_8(Wilder))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "p_6(Wilder) -> p_7(Wilder)",
                    "p_11(Wilder) -> p_7(Wilder)"
                ],
                "formulas(goals)": [
                    "p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_11(Wilder) \u2192 \u00acp_7(Wilder)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_11(Wilder) \u2192 p_7(Wilder)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Wilder)\np_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\np_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\np_6(Wilder) \u2192 p_7(Wilder)\np_11(Wilder) \u2192 p_7(Wilder)\n\u00acp_6(Wilder)\n(p_5(Wilder) \u2227 \u00acp_6(Wilder)) \u2192 \u00acp_7(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "-(p_2(Wilder) <-> p_8(Wilder))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "p_6(Wilder) -> p_7(Wilder)",
                    "p_11(Wilder) -> p_7(Wilder)",
                    "-p_6(Wilder)",
                    "(p_5(Wilder) & -p_6(Wilder)) -> -p_7(Wilder)"
                ],
                "formulas(goals)": [
                    "-p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_5(Wilder)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Wilder)",
                    "\u00acp_6(Wilder)"
                ],
                "added_rules": [
                    "(p_5(Wilder) \u2227 \u00acp_6(Wilder)) \u2192 \u00acp_7(Wilder)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Wilder)\np_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\np_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\np_6(Wilder) \u2192 p_7(Wilder)\np_11(Wilder) \u2192 p_7(Wilder)\n(p_5(Wilder) \u2227 \u00acp_6(Wilder)) \u2192 \u00acp_7(Wilder)\np_4(Wilder) \u2192 p_6(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "-(p_2(Wilder) <-> p_8(Wilder))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "p_6(Wilder) -> p_7(Wilder)",
                    "p_11(Wilder) -> p_7(Wilder)",
                    "(p_5(Wilder) & -p_6(Wilder)) -> -p_7(Wilder)",
                    "p_4(Wilder) -> p_6(Wilder)"
                ],
                "formulas(goals)": [
                    "p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Wilder)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Wilder) \u2192 p_6(Wilder)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Wilder)\np_5(Wilder)\n\u00acp_3(Wilder)\np_2(Wilder)\n\u00acp_0(Wilder)\np_1(Wilder)\np_4(Wilder) \u2192 (p_11(Wilder) \u2295 p_5(Wilder))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2227 p_13(x)))\n(p_11(Wilder) \u2295 p_12(Wilder)) \u2192 p_10(Wilder)\np_2(Wilder) \u2295 p_8(Wilder)\n(p_9(Wilder) \u2227 p_10(Wilder)) \u2192 p_0(Wilder)\n(p_6(Wilder) \u2228 p_8(Wilder)) \u2192 p_9(Wilder)\np_6(Wilder) \u2192 p_7(Wilder)\np_11(Wilder) \u2192 p_7(Wilder)\n(p_5(Wilder) \u2227 \u00acp_6(Wilder)) \u2192 \u00acp_7(Wilder)\np_5(Wilder) \u2192 \u00acp_6(Wilder)",
            "Initial Goal": "\u00acp_7(Wilder)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Wilder)",
                    "p_5(Wilder)",
                    "-p_3(Wilder)",
                    "p_2(Wilder)",
                    "-p_0(Wilder)",
                    "p_1(Wilder)",
                    "p_4(Wilder) -> (-(p_11(Wilder) <-> p_5(Wilder)))",
                    "all x (p_12(x) -> (p_3(x) & p_13(x)))",
                    "(-(p_11(Wilder) <-> p_12(Wilder))) -> p_10(Wilder)",
                    "-(p_2(Wilder) <-> p_8(Wilder))",
                    "(p_9(Wilder) & p_10(Wilder)) -> p_0(Wilder)",
                    "(p_6(Wilder) | p_8(Wilder)) -> p_9(Wilder)",
                    "p_6(Wilder) -> p_7(Wilder)",
                    "p_11(Wilder) -> p_7(Wilder)",
                    "(p_5(Wilder) & -p_6(Wilder)) -> -p_7(Wilder)",
                    "p_5(Wilder) -> -p_6(Wilder)"
                ],
                "formulas(goals)": [
                    "-p_7(Wilder)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Wilder) \u2192 p_6(Wilder)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Wilder) \u2192 \u00acp_6(Wilder)"
                ]
            }
        }
    ]
}