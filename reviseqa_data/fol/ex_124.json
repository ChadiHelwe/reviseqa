{
    "background_story": "Kylian, a young and adventurous traveler, had always been drawn to the vibrant culture of Honduras. After saving up for months, he finally embarked on a journey to this Central American country. In Honduras, Kylian immersed himself in the local way of life, learning about the history, trying the cuisine, and practicing his Spanish. He spent his days exploring the ancient Mayan ruins of Cop\u00e1n, snorkeling in the crystal-clear waters of the Caribbean, and hiking through the lush cloud forests of Pico Bonito National Park. The people of Honduras, with their warm hospitality, left a lasting impression on Kylian. He formed strong bonds with the locals, who shared with him their stories of resilience and hope. Kylian's experience in Honduras was transformative, teaching him the value of community and the beauty of cultural diversity.",
    "predicates": [
        {
            "id": 0,
            "name": "respect_traditions"
        },
        {
            "id": 1,
            "name": "immersed_in_local_culture"
        },
        {
            "id": 2,
            "name": "values_community"
        },
        {
            "id": 3,
            "name": "curious_mind"
        },
        {
            "id": 4,
            "name": "open_minded"
        },
        {
            "id": 5,
            "name": "loves_history"
        },
        {
            "id": 6,
            "name": "plays_sports"
        },
        {
            "id": 7,
            "name": "learn_languages"
        },
        {
            "id": 8,
            "name": "takes_risks"
        },
        {
            "id": 9,
            "name": "reads_books"
        },
        {
            "id": 10,
            "name": "form_lasting_bonds"
        },
        {
            "id": 11,
            "name": "appreciate_diversity"
        },
        {
            "id": 12,
            "name": "enjoys_travel"
        },
        {
            "id": 13,
            "name": "seek_adventure"
        },
        {
            "id": 14,
            "name": "try_new_things"
        },
        {
            "id": 15,
            "name": "explore_cities"
        },
        {
            "id": 16,
            "name": "is_adventurous"
        },
        {
            "id": 17,
            "name": "enjoys_walking"
        },
        {
            "id": 18,
            "name": "likes_outdoors"
        },
        {
            "id": 19,
            "name": "makes_friends"
        },
        {
            "id": 20,
            "name": "meets_new_people"
        },
        {
            "id": 21,
            "name": "shares_stories"
        },
        {
            "id": 22,
            "name": "tries_new_foods"
        },
        {
            "id": 23,
            "name": "craves_exploration"
        },
        {
            "id": 24,
            "name": "loves_discovery"
        },
        {
            "id": 25,
            "name": "meets_people"
        },
        {
            "id": 26,
            "name": "uses_map"
        },
        {
            "id": 27,
            "name": "meets_locals"
        },
        {
            "id": 28,
            "name": "likes_hiking"
        },
        {
            "id": 29,
            "name": "visit_rural"
        },
        {
            "id": 30,
            "name": "meet_strangers"
        },
        {
            "id": 31,
            "name": "loves_nature"
        },
        {
            "id": 32,
            "name": "goes_hiking"
        }
    ],
    "subject_name": "Kylian",
    "subject_category": "human",
    "keyword": "honduras",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kylian",
            "text": "Kylian does not respect traditions.",
            "fol": "\u00acp_0(Kylian)",
            "str_fol": "\u00acrespect_traditions(Kylian)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kylian",
            "text": "Kylian is not immersed in local culture.",
            "fol": "\u00acp_1(Kylian)",
            "str_fol": "\u00acimmersed_in_local_culture(Kylian)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kylian",
            "text": "Kylian values community.",
            "fol": "p_2(Kylian)",
            "str_fol": "values_community(Kylian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kylian",
            "text": "Kylian has a curious mind.",
            "fol": "p_3(Kylian)",
            "str_fol": "curious_mind(Kylian)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kylian",
            "text": "Kylian is open-minded.",
            "fol": "p_4(Kylian)",
            "str_fol": "open_minded(Kylian)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kylian",
            "text": "Kylian loves history.",
            "fol": "p_5(Kylian)",
            "str_fol": "loves_history(Kylian)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kylian",
            "text": "Kylian does not play sports.",
            "fol": "\u00acp_6(Kylian)",
            "str_fol": "\u00acplays_sports(Kylian)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kylian",
            "text": "Kylian does not learn languages.",
            "fol": "\u00acp_7(Kylian)",
            "str_fol": "\u00aclearn_languages(Kylian)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Kylian",
            "text": "Kylian takes risks.",
            "fol": "p_8(Kylian)",
            "str_fol": "takes_risks(Kylian)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Kylian",
            "text": "Kylian does not read books.",
            "fol": "\u00acp_9(Kylian)",
            "str_fol": "\u00acreads_books(Kylian)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Kylian",
            "text": "Kylian likes the outdoors.",
            "fol": "p_18(Kylian)",
            "str_fol": "likes_outdoors(Kylian)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Kylian",
            "text": "Kylian is adventurous.",
            "fol": "p_16(Kylian)",
            "str_fol": "is_adventurous(Kylian)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Kylian",
            "text": "Kylian enjoys walking.",
            "fol": "p_17(Kylian)",
            "str_fol": "enjoys_walking(Kylian)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Kylian",
            "text": "Kylian explores cities.",
            "fol": "p_15(Kylian)",
            "str_fol": "explore_cities(Kylian)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Kylian",
            "text": "Kylian seeks adventure.",
            "fol": "p_13(Kylian)",
            "str_fol": "seek_adventure(Kylian)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Kylian",
            "text": "Kylian enjoys travel.",
            "fol": "p_12(Kylian)",
            "str_fol": "enjoys_travel(Kylian)",
            "negation": false
        },
        {
            "id": 16,
            "subject": "Kylian",
            "text": "Kylian does not form lasting bonds.",
            "fol": "\u00acp_10(Kylian)",
            "str_fol": "\u00acform_lasting_bonds(Kylian)",
            "negation": true
        },
        {
            "id": 17,
            "subject": "Kylian",
            "text": "If Kylian is immersed in local culture, then he appreciates diversity and forms lasting bonds.",
            "fol": "p_1(Kylian) \u2192 (appreciate_diversity(Kylian) \u2227 form_lasting_bonds(Kylian))",
            "str_fol": "immersed_in_local_culture(Kylian) \u2192 (appreciate_diversity(Kylian) \u2227 form_lasting_bonds(Kylian))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 9,
            "subject": "Kylian",
            "text": "Kylian does not read books.",
            "fol": "\u00acp_9(Kylian)",
            "str_fol": "\u00acreads_books(Kylian)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Kylian",
            "text": "Kylian takes risks.",
            "fol": "p_8(Kylian)",
            "str_fol": "takes_risks(Kylian)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kylian",
            "text": "Kylian does not play sports.",
            "fol": "\u00acp_6(Kylian)",
            "str_fol": "\u00acplays_sports(Kylian)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kylian",
            "text": "Kylian loves history.",
            "fol": "p_5(Kylian)",
            "str_fol": "loves_history(Kylian)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kylian",
            "text": "Kylian is open-minded.",
            "fol": "p_4(Kylian)",
            "str_fol": "open_minded(Kylian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kylian",
            "text": "Kylian has a curious mind.",
            "fol": "p_3(Kylian)",
            "str_fol": "curious_mind(Kylian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kylian",
            "text": "Kylian values community.",
            "fol": "p_2(Kylian)",
            "str_fol": "values_community(Kylian)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Kylian",
            "text": "Kylian does not learn languages.",
            "fol": "\u00acp_7(Kylian)",
            "str_fol": "\u00aclearn_languages(Kylian)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kylian",
            "text": "Kylian does not respect traditions.",
            "fol": "\u00acp_0(Kylian)",
            "str_fol": "\u00acrespect_traditions(Kylian)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kylian",
            "text": "Kylian is not immersed in local culture.",
            "fol": "\u00acp_1(Kylian)",
            "str_fol": "\u00acimmersed_in_local_culture(Kylian)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Kylian either likes the outdoors or reads books, but he does not do both.",
            "fol": "p_18(Kylian) \u2295 p_9(Kylian)",
            "str_fol": "likes_outdoors(Kylian) \u2295 reads_books(Kylian)"
        },
        {
            "id": 7,
            "text": "Anyone who takes risks is adventurous.",
            "fol": "\u2200x (p_8(x) \u2192 p_16(x))",
            "str_fol": "\u2200x (takes_risks(x) \u2192 is_adventurous(x))"
        },
        {
            "id": 6,
            "text": "If Kylian likes the outdoors, then he either enjoys walking or plays sports (but not both).",
            "fol": "p_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))",
            "str_fol": "likes_outdoors(Kylian) \u2192 (enjoys_walking(Kylian) \u2295 plays_sports(Kylian))"
        },
        {
            "id": 5,
            "text": "If someone loves history and enjoys walking, then they can explore cities.",
            "fol": "\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))",
            "str_fol": "\u2200x ((loves_history(x) \u2227 enjoys_walking(x)) \u2192 explore_cities(x))"
        },
        {
            "id": 4,
            "text": "If Kylian either explores cities or tries new things (but not both), then he is adventurous.",
            "fol": "(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)",
            "str_fol": "(explore_cities(Kylian) \u2295 try_new_things(Kylian)) \u2192 is_adventurous(Kylian)"
        },
        {
            "id": 3,
            "text": "All open-minded people seek adventure and try new things.",
            "fol": "\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))",
            "str_fol": "\u2200x (open_minded(x) \u2192 (seek_adventure(x) \u2227 try_new_things(x)))"
        },
        {
            "id": 2,
            "text": "If Kylian has a curious mind, then he enjoys travel and seeks adventure.",
            "fol": "p_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))",
            "str_fol": "curious_mind(Kylian) \u2192 (enjoys_travel(Kylian) \u2227 seek_adventure(Kylian))"
        },
        {
            "id": 1,
            "text": "If Kylian appreciates diversity and values community, then he enjoys travel.",
            "fol": "(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)",
            "str_fol": "(appreciate_diversity(Kylian) \u2227 values_community(Kylian)) \u2192 enjoys_travel(Kylian)"
        },
        {
            "id": 0,
            "text": "If Kylian forms lasting bonds, then he learns languages and respects traditions.",
            "fol": "p_10(Kylian) \u2192 (p_7(Kylian) \u2227 p_0(Kylian))",
            "str_fol": "form_lasting_bonds(Kylian) \u2192 (learn_languages(Kylian) \u2227 respect_traditions(Kylian))"
        }
    ],
    "context": [
        {
            "id": 9,
            "subject": "Kylian",
            "text": "Kylian does not read books.",
            "fol": "\u00acp_9(Kylian)",
            "str_fol": "\u00acreads_books(Kylian)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Kylian",
            "text": "Kylian takes risks.",
            "fol": "p_8(Kylian)",
            "str_fol": "takes_risks(Kylian)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kylian",
            "text": "Kylian does not play sports.",
            "fol": "\u00acp_6(Kylian)",
            "str_fol": "\u00acplays_sports(Kylian)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kylian",
            "text": "Kylian loves history.",
            "fol": "p_5(Kylian)",
            "str_fol": "loves_history(Kylian)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kylian",
            "text": "Kylian is open-minded.",
            "fol": "p_4(Kylian)",
            "str_fol": "open_minded(Kylian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kylian",
            "text": "Kylian has a curious mind.",
            "fol": "p_3(Kylian)",
            "str_fol": "curious_mind(Kylian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kylian",
            "text": "Kylian values community.",
            "fol": "p_2(Kylian)",
            "str_fol": "values_community(Kylian)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Kylian",
            "text": "Kylian does not learn languages.",
            "fol": "\u00acp_7(Kylian)",
            "str_fol": "\u00aclearn_languages(Kylian)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kylian",
            "text": "Kylian does not respect traditions.",
            "fol": "\u00acp_0(Kylian)",
            "str_fol": "\u00acrespect_traditions(Kylian)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kylian",
            "text": "Kylian is not immersed in local culture.",
            "fol": "\u00acp_1(Kylian)",
            "str_fol": "\u00acimmersed_in_local_culture(Kylian)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Kylian either likes the outdoors or reads books, but he does not do both.",
            "fol": "p_18(Kylian) \u2295 p_9(Kylian)",
            "str_fol": "likes_outdoors(Kylian) \u2295 reads_books(Kylian)"
        },
        {
            "id": 7,
            "text": "Anyone who takes risks is adventurous.",
            "fol": "\u2200x (p_8(x) \u2192 p_16(x))",
            "str_fol": "\u2200x (takes_risks(x) \u2192 is_adventurous(x))"
        },
        {
            "id": 6,
            "text": "If Kylian likes the outdoors, then he either enjoys walking or plays sports (but not both).",
            "fol": "p_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))",
            "str_fol": "likes_outdoors(Kylian) \u2192 (enjoys_walking(Kylian) \u2295 plays_sports(Kylian))"
        },
        {
            "id": 5,
            "text": "If someone loves history and enjoys walking, then they can explore cities.",
            "fol": "\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))",
            "str_fol": "\u2200x ((loves_history(x) \u2227 enjoys_walking(x)) \u2192 explore_cities(x))"
        },
        {
            "id": 4,
            "text": "If Kylian either explores cities or tries new things (but not both), then he is adventurous.",
            "fol": "(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)",
            "str_fol": "(explore_cities(Kylian) \u2295 try_new_things(Kylian)) \u2192 is_adventurous(Kylian)"
        },
        {
            "id": 3,
            "text": "All open-minded people seek adventure and try new things.",
            "fol": "\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))",
            "str_fol": "\u2200x (open_minded(x) \u2192 (seek_adventure(x) \u2227 try_new_things(x)))"
        },
        {
            "id": 2,
            "text": "If Kylian has a curious mind, then he enjoys travel and seeks adventure.",
            "fol": "p_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))",
            "str_fol": "curious_mind(Kylian) \u2192 (enjoys_travel(Kylian) \u2227 seek_adventure(Kylian))"
        },
        {
            "id": 1,
            "text": "If Kylian appreciates diversity and values community, then he enjoys travel.",
            "fol": "(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)",
            "str_fol": "(appreciate_diversity(Kylian) \u2227 values_community(Kylian)) \u2192 enjoys_travel(Kylian)"
        },
        {
            "id": 0,
            "text": "If Kylian forms lasting bonds, then he learns languages and respects traditions.",
            "fol": "p_10(Kylian) \u2192 (p_7(Kylian) \u2227 p_0(Kylian))",
            "str_fol": "form_lasting_bonds(Kylian) \u2192 (learn_languages(Kylian) \u2227 respect_traditions(Kylian))"
        }
    ],
    "context_fol": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\n\u00acp_1(Kylian)\np_18(Kylian) \u2295 p_9(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_10(Kylian) \u2192 (p_7(Kylian) \u2227 p_0(Kylian))",
    "conclusion": {
        "id": 18,
        "text": "If Kylian is immersed in local culture, then he appreciates diversity and forms lasting bonds.",
        "fol": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
        "str_fol": "immersed_in_local_culture(Kylian) \u2192 (appreciate_diversity(Kylian) \u2227 form_lasting_bonds(Kylian))"
    },
    "initial_answer": "True",
    "initial_goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Kylian",
                    "text": "Kylian does not read books.",
                    "fol": "\u00acp_9(Kylian)",
                    "str_fol": "\u00acreads_books(Kylian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Kylian either likes the outdoors or reads books, but he does not do both.",
                    "fol": "p_18(Kylian) \u2295 p_9(Kylian)",
                    "str_fol": "likes_outdoors(Kylian) \u2295 reads_books(Kylian)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Kylian",
                "text": "Kylian likes the outdoors.",
                "fol": "p_18(Kylian)",
                "str_fol": "likes_outdoors(Kylian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Kylian",
                    "text": "Kylian takes risks.",
                    "fol": "p_8(Kylian)",
                    "str_fol": "takes_risks(Kylian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who takes risks is adventurous.",
                    "fol": "\u2200x (p_8(x) \u2192 p_16(x))",
                    "str_fol": "\u2200x (takes_risks(x) \u2192 is_adventurous(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Kylian",
                "text": "Kylian is adventurous.",
                "fol": "p_16(Kylian)",
                "str_fol": "is_adventurous(Kylian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Kylian",
                    "text": "Kylian likes the outdoors.",
                    "fol": "p_18(Kylian)",
                    "str_fol": "likes_outdoors(Kylian)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Kylian",
                    "text": "Kylian does not play sports.",
                    "fol": "\u00acp_6(Kylian)",
                    "str_fol": "\u00acplays_sports(Kylian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Kylian likes the outdoors, then he either enjoys walking or plays sports (but not both).",
                    "fol": "p_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))",
                    "str_fol": "likes_outdoors(Kylian) \u2192 (enjoys_walking(Kylian) \u2295 plays_sports(Kylian))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Kylian",
                "text": "Kylian enjoys walking.",
                "fol": "p_17(Kylian)",
                "str_fol": "enjoys_walking(Kylian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Kylian",
                    "text": "Kylian loves history.",
                    "fol": "p_5(Kylian)",
                    "str_fol": "loves_history(Kylian)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Kylian",
                    "text": "Kylian enjoys walking.",
                    "fol": "p_17(Kylian)",
                    "str_fol": "enjoys_walking(Kylian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone loves history and enjoys walking, then they can explore cities.",
                    "fol": "\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))",
                    "str_fol": "\u2200x ((loves_history(x) \u2227 enjoys_walking(x)) \u2192 explore_cities(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Kylian",
                "text": "Kylian explores cities.",
                "fol": "p_15(Kylian)",
                "str_fol": "explore_cities(Kylian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Kylian",
                    "text": "Kylian explores cities.",
                    "fol": "p_15(Kylian)",
                    "str_fol": "explore_cities(Kylian)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Kylian",
                    "text": "Kylian is adventurous.",
                    "fol": "p_16(Kylian)",
                    "str_fol": "is_adventurous(Kylian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Kylian either explores cities or tries new things (but not both), then he is adventurous.",
                    "fol": "(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)",
                    "str_fol": "(explore_cities(Kylian) \u2295 try_new_things(Kylian)) \u2192 is_adventurous(Kylian)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kylian",
                    "text": "Kylian is open-minded.",
                    "fol": "p_4(Kylian)",
                    "str_fol": "open_minded(Kylian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "All open-minded people seek adventure and try new things.",
                    "fol": "\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))",
                    "str_fol": "\u2200x (open_minded(x) \u2192 (seek_adventure(x) \u2227 try_new_things(x)))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Kylian",
                "text": "Kylian seeks adventure.",
                "fol": "p_13(Kylian)",
                "str_fol": "seek_adventure(Kylian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kylian",
                    "text": "Kylian has a curious mind.",
                    "fol": "p_3(Kylian)",
                    "str_fol": "curious_mind(Kylian)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Kylian",
                    "text": "Kylian seeks adventure.",
                    "fol": "p_13(Kylian)",
                    "str_fol": "seek_adventure(Kylian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Kylian has a curious mind, then he enjoys travel and seeks adventure.",
                    "fol": "p_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))",
                    "str_fol": "curious_mind(Kylian) \u2192 (enjoys_travel(Kylian) \u2227 seek_adventure(Kylian))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Kylian",
                "text": "Kylian enjoys travel.",
                "fol": "p_12(Kylian)",
                "str_fol": "enjoys_travel(Kylian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kylian",
                    "text": "Kylian values community.",
                    "fol": "p_2(Kylian)",
                    "str_fol": "values_community(Kylian)",
                    "negation": false
                },
                {
                    "id": 15,
                    "subject": "Kylian",
                    "text": "Kylian enjoys travel.",
                    "fol": "p_12(Kylian)",
                    "str_fol": "enjoys_travel(Kylian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Kylian appreciates diversity and values community, then he enjoys travel.",
                    "fol": "(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)",
                    "str_fol": "(appreciate_diversity(Kylian) \u2227 values_community(Kylian)) \u2192 enjoys_travel(Kylian)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kylian",
                    "text": "Kylian does not learn languages.",
                    "fol": "\u00acp_7(Kylian)",
                    "str_fol": "\u00aclearn_languages(Kylian)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Kylian",
                    "text": "Kylian does not respect traditions.",
                    "fol": "\u00acp_0(Kylian)",
                    "str_fol": "\u00acrespect_traditions(Kylian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Kylian forms lasting bonds, then he learns languages and respects traditions.",
                    "fol": "p_10(Kylian) \u2192 (p_7(Kylian) \u2227 p_0(Kylian))",
                    "str_fol": "form_lasting_bonds(Kylian) \u2192 (learn_languages(Kylian) \u2227 respect_traditions(Kylian))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Kylian",
                "text": "Kylian does not form lasting bonds.",
                "fol": "\u00acp_10(Kylian)",
                "str_fol": "\u00acform_lasting_bonds(Kylian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Kylian",
                    "text": "Kylian is not immersed in local culture.",
                    "fol": "\u00acp_1(Kylian)",
                    "str_fol": "\u00acimmersed_in_local_culture(Kylian)",
                    "negation": true
                },
                {
                    "id": 16,
                    "subject": "Kylian",
                    "text": "Kylian does not form lasting bonds.",
                    "fol": "\u00acp_10(Kylian)",
                    "str_fol": "\u00acform_lasting_bonds(Kylian)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 18,
                "text": "If Kylian is immersed in local culture, then he appreciates diversity and forms lasting bonds.",
                "fol": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
                "str_fol": "immersed_in_local_culture(Kylian) \u2192 (appreciate_diversity(Kylian) \u2227 form_lasting_bonds(Kylian))"
            }
        }
    ],
    "proof_trace": "10 p_1(Kylian) -> p_11(Kylian) & p_10(Kylian).  [goal].\n33 p_1(Kylian).  [deny(10)].\n34 -p_1(Kylian).  [assumption].\n40 $F.  [resolve(33,a,34,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\np_18(Kylian) \u2295 p_9(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_10(Kylian) \u2192 (p_7(Kylian) \u2227 p_0(Kylian))",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_9(Kylian)",
                    "p_8(Kylian)",
                    "-p_6(Kylian)",
                    "p_5(Kylian)",
                    "p_4(Kylian)",
                    "p_3(Kylian)",
                    "p_2(Kylian)",
                    "-p_7(Kylian)",
                    "-p_0(Kylian)",
                    "p_1(Kylian)",
                    "-(p_18(Kylian) <-> p_9(Kylian))",
                    "all x (p_8(x) -> p_16(x))",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian)))",
                    "all x ((p_5(x) & p_17(x)) -> p_15(x))",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian)",
                    "all x (p_4(x) -> (p_13(x) & p_14(x)))",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian))",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian)",
                    "p_10(Kylian) -> (p_7(Kylian) & p_0(Kylian))"
                ],
                "formulas(goals)": [
                    "- (p_1(Kylian) -> (p_11(Kylian) & p_10(Kylian)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Kylian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Kylian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\np_18(Kylian) \u2295 p_9(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_18(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_9(Kylian)",
                    "p_8(Kylian)",
                    "-p_6(Kylian)",
                    "p_5(Kylian)",
                    "p_4(Kylian)",
                    "p_3(Kylian)",
                    "p_2(Kylian)",
                    "-p_7(Kylian)",
                    "-p_0(Kylian)",
                    "p_1(Kylian)",
                    "-(p_18(Kylian) <-> p_9(Kylian))",
                    "all x (p_8(x) -> p_16(x))",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian)))",
                    "all x ((p_5(x) & p_17(x)) -> p_15(x))",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian)",
                    "all x (p_4(x) -> (p_13(x) & p_14(x)))",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian))",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian)",
                    "p_18(Kylian) -> (p_11(Kylian) & p_10(Kylian))"
                ],
                "formulas(goals)": [
                    "p_1(Kylian) -> (p_11(Kylian) & p_10(Kylian))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Kylian) \u2192 (p_7(Kylian) \u2227 p_0(Kylian))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_18(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_18(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))\np_10(Kylian) \u2192 p_9(Kylian)",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_9(Kylian).",
                    "p_8(Kylian).",
                    "-p_6(Kylian).",
                    "p_5(Kylian).",
                    "p_4(Kylian).",
                    "p_3(Kylian).",
                    "p_2(Kylian).",
                    "-p_7(Kylian).",
                    "-p_0(Kylian).",
                    "p_1(Kylian).",
                    "all x (p_8(x) -> p_16(x)).",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian))).",
                    "all x ((p_5(x) & p_17(x)) -> p_15(x)).",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian).",
                    "all x (p_4(x) -> (p_13(x) & p_14(x))).",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian)).",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian).",
                    "p_18(Kylian) -> (p_11(Kylian) & p_10(Kylian)).",
                    "p_10(Kylian) -> p_9(Kylian)."
                ],
                "formulas(goals)": [
                    "p_1(Kylian) & (-p_11(Kylian) | -p_10(Kylian))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_18(Kylian) \u2295 p_9(Kylian)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Kylian) \u2192 p_9(Kylian)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x (p_5(x) \u2192 (p_17(x) \u2192 p_15(x)))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_18(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))\np_10(Kylian) \u2192 p_9(Kylian)\n\u00acp_10(Kylian)\n\u00acp_18(Kylian)\np_16(Kylian)",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_9(Kylian)",
                    "p_8(Kylian)",
                    "-p_6(Kylian)",
                    "p_5(Kylian)",
                    "p_4(Kylian)",
                    "p_3(Kylian)",
                    "p_2(Kylian)",
                    "-p_7(Kylian)",
                    "-p_0(Kylian)",
                    "p_1(Kylian)",
                    "all x (p_8(x) -> p_16(x))",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian)))",
                    "all x (p_5(x) -> (p_17(x) -> p_15(x)))",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian)",
                    "all x (p_4(x) -> (p_13(x) & p_14(x)))",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian))",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian)",
                    "p_18(Kylian) -> (p_11(Kylian) & p_10(Kylian))",
                    "p_10(Kylian) -> p_9(Kylian)",
                    "-p_10(Kylian)",
                    "-p_18(Kylian)",
                    "p_16(Kylian)"
                ],
                "formulas(goals)": [
                    "- (p_1(Kylian) -> (p_11(Kylian) & p_10(Kylian)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_5(x) \u2227 p_17(x)) \u2192 p_15(x))"
                ],
                "added_facts": [
                    "\u00acp_10(Kylian)",
                    "\u00acp_18(Kylian)",
                    "p_16(Kylian)"
                ],
                "added_rules": [
                    "\u2200x (p_5(x) \u2192 (p_17(x) \u2192 p_15(x)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x (p_5(x) \u2192 (p_17(x) \u2192 p_15(x)))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_18(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))\np_10(Kylian) \u2192 p_9(Kylian)\np_18(Kylian)\np_16(Kylian)",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_9(Kylian).",
                    "p_8(Kylian).",
                    "-p_6(Kylian).",
                    "p_5(Kylian).",
                    "p_4(Kylian).",
                    "p_3(Kylian).",
                    "p_2(Kylian).",
                    "-p_7(Kylian).",
                    "-p_0(Kylian).",
                    "p_1(Kylian).",
                    "all x (p_8(x) -> p_16(x)).",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian))).",
                    "all x (p_5(x) -> (p_17(x) -> p_15(x))).",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian).",
                    "all x (p_4(x) -> (p_13(x) & p_14(x))).",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian)).",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian).",
                    "p_18(Kylian) -> (p_11(Kylian) & p_10(Kylian)).",
                    "p_10(Kylian) -> p_9(Kylian).",
                    "p_18(Kylian).",
                    "p_16(Kylian)."
                ],
                "formulas(goals)": [
                    "p_1(Kylian) -> (p_11(Kylian) & p_10(Kylian))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_10(Kylian)",
                    "\u00acp_18(Kylian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_18(Kylian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_9(Kylian)\np_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x (p_5(x) \u2192 (p_17(x) \u2192 p_15(x)))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_10(Kylian) \u2192 p_9(Kylian)\np_18(Kylian)\np_16(Kylian)\n\u00acp_10(Kylian)",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_9(Kylian)",
                    "p_8(Kylian)",
                    "-p_6(Kylian)",
                    "p_5(Kylian)",
                    "p_4(Kylian)",
                    "p_3(Kylian)",
                    "p_2(Kylian)",
                    "-p_7(Kylian)",
                    "-p_0(Kylian)",
                    "p_1(Kylian)",
                    "all x (p_8(x) -> p_16(x))",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian)))",
                    "all x (p_5(x) -> (p_17(x) -> p_15(x)))",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian)",
                    "all x (p_4(x) -> (p_13(x) & p_14(x)))",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian))",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian)",
                    "p_10(Kylian) -> p_9(Kylian)",
                    "p_18(Kylian)",
                    "p_16(Kylian)",
                    "-p_10(Kylian)"
                ],
                "formulas(goals)": [
                    "-(-p_1(Kylian) | (p_11(Kylian) & p_10(Kylian)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_18(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))"
                ],
                "added_facts": [
                    "\u00acp_10(Kylian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Kylian)\n\u00acp_6(Kylian)\np_5(Kylian)\np_4(Kylian)\np_3(Kylian)\np_2(Kylian)\n\u00acp_7(Kylian)\n\u00acp_0(Kylian)\np_1(Kylian)\n\u2200x (p_8(x) \u2192 p_16(x))\np_18(Kylian) \u2192 (p_17(Kylian) \u2295 p_6(Kylian))\n\u2200x (p_5(x) \u2192 (p_17(x) \u2192 p_15(x)))\n(p_15(Kylian) \u2295 p_14(Kylian)) \u2192 p_16(Kylian)\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_14(x)))\np_3(Kylian) \u2192 (p_12(Kylian) \u2227 p_13(Kylian))\n(p_11(Kylian) \u2227 p_2(Kylian)) \u2192 p_12(Kylian)\np_10(Kylian) \u2192 p_9(Kylian)\np_18(Kylian)\np_16(Kylian)\np_10(Kylian)\np_11(Kylian)",
            "Initial Goal": "p_1(Kylian) \u2192 (p_11(Kylian) \u2227 p_10(Kylian))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Kylian)",
                    "-p_6(Kylian)",
                    "p_5(Kylian)",
                    "p_4(Kylian)",
                    "p_3(Kylian)",
                    "p_2(Kylian)",
                    "-p_7(Kylian)",
                    "-p_0(Kylian)",
                    "p_1(Kylian)",
                    "all x (p_8(x) -> p_16(x))",
                    "p_18(Kylian) -> (-(p_17(Kylian) <-> p_6(Kylian)))",
                    "all x (p_5(x) -> (p_17(x) -> p_15(x)))",
                    "(-(p_15(Kylian) <-> p_14(Kylian))) -> p_16(Kylian)",
                    "all x (p_4(x) -> (p_13(x) & p_14(x)))",
                    "p_3(Kylian) -> (p_12(Kylian) & p_13(Kylian))",
                    "(p_11(Kylian) & p_2(Kylian)) -> p_12(Kylian)",
                    "p_10(Kylian) -> p_9(Kylian)",
                    "p_18(Kylian)",
                    "p_16(Kylian)",
                    "p_10(Kylian)",
                    "p_11(Kylian)"
                ],
                "formulas(goals)": [
                    "p_1(Kylian) -> (p_11(Kylian) & p_10(Kylian))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_9(Kylian)",
                    "\u00acp_10(Kylian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Kylian)",
                    "p_11(Kylian)"
                ],
                "added_rules": []
            }
        }
    ]
}