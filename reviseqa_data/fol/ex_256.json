{
    "background_story": "Raina was known among her friends for her lavish lifestyle and penchant for luxury. As a successful event planner, she had a keen eye for detail and a love for the finer things in life. Her spending habits were legendary, from designer clothes and handbags to exotic vacations and high-end cars. Raina's motto was 'live life to the fullest,' and she spared no expense in pursuing her passions. Whether it was a spontaneous weekend getaway to Paris or a private yacht party, Raina was always the life of the party. Her friends admired her carefree spirit, but often worried about her financial future. Despite this, Raina remained unapologetic about her spending, believing that life was too short to save every penny.",
    "predicates": [
        {
            "id": 0,
            "name": "enjoys_luxury"
        },
        {
            "id": 1,
            "name": "likes_adventure"
        },
        {
            "id": 2,
            "name": "has_passport"
        },
        {
            "id": 3,
            "name": "is_affluent"
        },
        {
            "id": 4,
            "name": "buys_art"
        },
        {
            "id": 5,
            "name": "loves_design"
        },
        {
            "id": 6,
            "name": "enjoys_elegance"
        },
        {
            "id": 7,
            "name": "frugal"
        },
        {
            "id": 8,
            "name": "extravagant"
        },
        {
            "id": 9,
            "name": "spends_freely"
        },
        {
            "id": 10,
            "name": "earns_well"
        },
        {
            "id": 11,
            "name": "lives_lavishly"
        },
        {
            "id": 12,
            "name": "has_taste"
        },
        {
            "id": 13,
            "name": "owns_mansions"
        },
        {
            "id": 14,
            "name": "travels_abroad"
        },
        {
            "id": 15,
            "name": "appreciate_beauty"
        },
        {
            "id": 16,
            "name": "value_quality"
        },
        {
            "id": 17,
            "name": "saves_money"
        },
        {
            "id": 18,
            "name": "likes_fun"
        },
        {
            "id": 19,
            "name": "makes_money"
        },
        {
            "id": 20,
            "name": "works_hard"
        },
        {
            "id": 21,
            "name": "is_successful"
        },
        {
            "id": 22,
            "name": "owns_jewels"
        },
        {
            "id": 23,
            "name": "drives_fast"
        },
        {
            "id": 24,
            "name": "collects_jewels"
        },
        {
            "id": 25,
            "name": "wears_designer"
        },
        {
            "id": 26,
            "name": "buys_jewels"
        },
        {
            "id": 27,
            "name": "has_wealth"
        },
        {
            "id": 28,
            "name": "invests_wisely"
        },
        {
            "id": 29,
            "name": "admires_craft"
        },
        {
            "id": 30,
            "name": "seeks_elegance"
        }
    ],
    "subject_name": "Raina",
    "subject_category": "human",
    "keyword": "spender",
    "all_facts": [
        {
            "id": 0,
            "subject": "Raina",
            "text": "Raina does not enjoy luxury.",
            "fol": "\u00acp_0(Raina)",
            "str_fol": "\u00acenjoys_luxury(Raina)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Raina",
            "text": "Raina likes adventure.",
            "fol": "p_1(Raina)",
            "str_fol": "likes_adventure(Raina)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Raina",
            "text": "Raina has a passport.",
            "fol": "p_2(Raina)",
            "str_fol": "has_passport(Raina)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Raina",
            "text": "Raina is affluent.",
            "fol": "p_3(Raina)",
            "str_fol": "is_affluent(Raina)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Raina",
            "text": "Raina does not buy art.",
            "fol": "\u00acp_4(Raina)",
            "str_fol": "\u00acbuys_art(Raina)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Raina",
            "text": "Raina loves design.",
            "fol": "p_5(Raina)",
            "str_fol": "loves_design(Raina)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Raina",
            "text": "Raina does not enjoy elegance.",
            "fol": "\u00acp_6(Raina)",
            "str_fol": "\u00acenjoys_elegance(Raina)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Raina",
            "text": "Raina appreciates beauty.",
            "fol": "p_15(Raina)",
            "str_fol": "appreciate_beauty(Raina)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Raina",
            "text": "Raina owns mansions.",
            "fol": "p_13(Raina)",
            "str_fol": "owns_mansions(Raina)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Raina",
            "text": "Raina travels abroad.",
            "fol": "p_14(Raina)",
            "str_fol": "travels_abroad(Raina)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Raina",
            "text": "Raina has good taste.",
            "fol": "p_12(Raina)",
            "str_fol": "has_taste(Raina)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Raina",
            "text": "Raina does not live lavishly.",
            "fol": "\u00acp_11(Raina)",
            "str_fol": "\u00aclives_lavishly(Raina)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Raina",
            "text": "Raina does not earn well.",
            "fol": "\u00acp_10(Raina)",
            "str_fol": "\u00acearns_well(Raina)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Raina",
            "text": "Raina does not spend freely.",
            "fol": "\u00acp_9(Raina)",
            "str_fol": "\u00acspends_freely(Raina)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Raina",
            "text": "Raina is frugal.",
            "fol": "p_7(Raina)",
            "str_fol": "frugal(Raina)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Raina",
            "text": "Raina is not extravagant.",
            "fol": "\u00acp_8(Raina)",
            "str_fol": "\u00acextravagant(Raina)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Raina",
            "text": "Raina loves design.",
            "fol": "p_5(Raina)",
            "str_fol": "loves_design(Raina)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Raina",
            "text": "Raina does not enjoy elegance.",
            "fol": "\u00acp_6(Raina)",
            "str_fol": "\u00acenjoys_elegance(Raina)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Raina",
            "text": "Raina is affluent.",
            "fol": "p_3(Raina)",
            "str_fol": "is_affluent(Raina)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Raina",
            "text": "Raina does not buy art.",
            "fol": "\u00acp_4(Raina)",
            "str_fol": "\u00acbuys_art(Raina)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Raina",
            "text": "Raina likes adventure.",
            "fol": "p_1(Raina)",
            "str_fol": "likes_adventure(Raina)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Raina",
            "text": "Raina has a passport.",
            "fol": "p_2(Raina)",
            "str_fol": "has_passport(Raina)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Raina",
            "text": "Raina does not enjoy luxury.",
            "fol": "\u00acp_0(Raina)",
            "str_fol": "\u00acenjoys_luxury(Raina)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "For all humans, if they either appreciate beauty or love design, then they enjoy elegance.",
            "fol": "\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((appreciate_beauty(x) \u2295 loves_design(x)) \u2192 enjoys_elegance(x))"
        },
        {
            "id": 7,
            "text": "If Raina is affluent, then she either owns mansions or buys art, but not both.",
            "fol": "p_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))",
            "str_fol": "is_affluent(Raina) \u2192 (buys_art(Raina) \u2295 owns_mansions(Raina))"
        },
        {
            "id": 6,
            "text": "If Raina likes adventure and has a passport, then she can travel abroad.",
            "fol": "(p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina)",
            "str_fol": "(likes_adventure(Raina) \u2227 has_passport(Raina)) \u2192 travels_abroad(Raina)"
        },
        {
            "id": 5,
            "text": "If someone appreciates beauty, then they value quality and have good taste.",
            "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))",
            "str_fol": "\u2200x (appreciate_beauty(x) \u2192 (value_quality(x) \u2227 has_taste(x)))"
        },
        {
            "id": 4,
            "text": "If Raina lives lavishly, then she either owns mansions or travels abroad, but not both.",
            "fol": "p_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))",
            "str_fol": "lives_lavishly(Raina) \u2192 (owns_mansions(Raina) \u2295 travels_abroad(Raina))"
        },
        {
            "id": 3,
            "text": "For all humans, if they have good taste and earn well, then they enjoy luxury.",
            "fol": "\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((has_taste(x) \u2227 earns_well(x)) \u2192 enjoys_luxury(x))"
        },
        {
            "id": 2,
            "text": "If Raina either earns well or spends freely (but not both), then she lives lavishly.",
            "fol": "(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)",
            "str_fol": "(earns_well(Raina) \u2295 spends_freely(Raina)) \u2192 lives_lavishly(Raina)"
        },
        {
            "id": 1,
            "text": "Raina is either frugal or spends freely.",
            "fol": "p_7(Raina) \u2228 p_9(Raina)",
            "str_fol": "frugal(Raina) \u2228 spends_freely(Raina)"
        },
        {
            "id": 0,
            "text": "Raina is either frugal or extravagant, but not both.",
            "fol": "p_7(Raina) \u2295 p_8(Raina)",
            "str_fol": "frugal(Raina) \u2295 extravagant(Raina)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Raina",
            "text": "Raina loves design.",
            "fol": "p_5(Raina)",
            "str_fol": "loves_design(Raina)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Raina",
            "text": "Raina does not enjoy elegance.",
            "fol": "\u00acp_6(Raina)",
            "str_fol": "\u00acenjoys_elegance(Raina)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Raina",
            "text": "Raina is affluent.",
            "fol": "p_3(Raina)",
            "str_fol": "is_affluent(Raina)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Raina",
            "text": "Raina does not buy art.",
            "fol": "\u00acp_4(Raina)",
            "str_fol": "\u00acbuys_art(Raina)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Raina",
            "text": "Raina likes adventure.",
            "fol": "p_1(Raina)",
            "str_fol": "likes_adventure(Raina)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Raina",
            "text": "Raina has a passport.",
            "fol": "p_2(Raina)",
            "str_fol": "has_passport(Raina)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Raina",
            "text": "Raina does not enjoy luxury.",
            "fol": "\u00acp_0(Raina)",
            "str_fol": "\u00acenjoys_luxury(Raina)",
            "negation": true
        },
        {
            "id": 8,
            "text": "For all humans, if they either appreciate beauty or love design, then they enjoy elegance.",
            "fol": "\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((appreciate_beauty(x) \u2295 loves_design(x)) \u2192 enjoys_elegance(x))"
        },
        {
            "id": 7,
            "text": "If Raina is affluent, then she either owns mansions or buys art, but not both.",
            "fol": "p_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))",
            "str_fol": "is_affluent(Raina) \u2192 (buys_art(Raina) \u2295 owns_mansions(Raina))"
        },
        {
            "id": 6,
            "text": "If Raina likes adventure and has a passport, then she can travel abroad.",
            "fol": "(p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina)",
            "str_fol": "(likes_adventure(Raina) \u2227 has_passport(Raina)) \u2192 travels_abroad(Raina)"
        },
        {
            "id": 5,
            "text": "If someone appreciates beauty, then they value quality and have good taste.",
            "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))",
            "str_fol": "\u2200x (appreciate_beauty(x) \u2192 (value_quality(x) \u2227 has_taste(x)))"
        },
        {
            "id": 4,
            "text": "If Raina lives lavishly, then she either owns mansions or travels abroad, but not both.",
            "fol": "p_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))",
            "str_fol": "lives_lavishly(Raina) \u2192 (owns_mansions(Raina) \u2295 travels_abroad(Raina))"
        },
        {
            "id": 3,
            "text": "For all humans, if they have good taste and earn well, then they enjoy luxury.",
            "fol": "\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((has_taste(x) \u2227 earns_well(x)) \u2192 enjoys_luxury(x))"
        },
        {
            "id": 2,
            "text": "If Raina either earns well or spends freely (but not both), then she lives lavishly.",
            "fol": "(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)",
            "str_fol": "(earns_well(Raina) \u2295 spends_freely(Raina)) \u2192 lives_lavishly(Raina)"
        },
        {
            "id": 1,
            "text": "Raina is either frugal or spends freely.",
            "fol": "p_7(Raina) \u2228 p_9(Raina)",
            "str_fol": "frugal(Raina) \u2228 spends_freely(Raina)"
        },
        {
            "id": 0,
            "text": "Raina is either frugal or extravagant, but not both.",
            "fol": "p_7(Raina) \u2295 p_8(Raina)",
            "str_fol": "frugal(Raina) \u2295 extravagant(Raina)"
        }
    ],
    "context_fol": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n(p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2295 p_8(Raina)",
    "conclusion": {
        "id": 15,
        "subject": "Raina",
        "text": "Raina is not extravagant.",
        "fol": "\u00acp_8(Raina)",
        "str_fol": "\u00acextravagant(Raina)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_8(Raina)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Raina",
                    "text": "Raina loves design.",
                    "fol": "p_5(Raina)",
                    "str_fol": "loves_design(Raina)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Raina",
                    "text": "Raina does not enjoy elegance.",
                    "fol": "\u00acp_6(Raina)",
                    "str_fol": "\u00acenjoys_elegance(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "For all humans, if they either appreciate beauty or love design, then they enjoy elegance.",
                    "fol": "\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((appreciate_beauty(x) \u2295 loves_design(x)) \u2192 enjoys_elegance(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Raina",
                "text": "Raina appreciates beauty.",
                "fol": "p_15(Raina)",
                "str_fol": "appreciate_beauty(Raina)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Raina",
                    "text": "Raina is affluent.",
                    "fol": "p_3(Raina)",
                    "str_fol": "is_affluent(Raina)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Raina",
                    "text": "Raina does not buy art.",
                    "fol": "\u00acp_4(Raina)",
                    "str_fol": "\u00acbuys_art(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Raina is affluent, then she either owns mansions or buys art, but not both.",
                    "fol": "p_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))",
                    "str_fol": "is_affluent(Raina) \u2192 (buys_art(Raina) \u2295 owns_mansions(Raina))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Raina",
                "text": "Raina owns mansions.",
                "fol": "p_13(Raina)",
                "str_fol": "owns_mansions(Raina)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Raina",
                    "text": "Raina likes adventure.",
                    "fol": "p_1(Raina)",
                    "str_fol": "likes_adventure(Raina)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Raina",
                    "text": "Raina has a passport.",
                    "fol": "p_2(Raina)",
                    "str_fol": "has_passport(Raina)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Raina likes adventure and has a passport, then she can travel abroad.",
                    "fol": "(p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina)",
                    "str_fol": "(likes_adventure(Raina) \u2227 has_passport(Raina)) \u2192 travels_abroad(Raina)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Raina",
                "text": "Raina travels abroad.",
                "fol": "p_14(Raina)",
                "str_fol": "travels_abroad(Raina)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Raina",
                    "text": "Raina appreciates beauty.",
                    "fol": "p_15(Raina)",
                    "str_fol": "appreciate_beauty(Raina)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone appreciates beauty, then they value quality and have good taste.",
                    "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))",
                    "str_fol": "\u2200x (appreciate_beauty(x) \u2192 (value_quality(x) \u2227 has_taste(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Raina",
                "text": "Raina has good taste.",
                "fol": "p_12(Raina)",
                "str_fol": "has_taste(Raina)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Raina",
                    "text": "Raina owns mansions.",
                    "fol": "p_13(Raina)",
                    "str_fol": "owns_mansions(Raina)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Raina",
                    "text": "Raina travels abroad.",
                    "fol": "p_14(Raina)",
                    "str_fol": "travels_abroad(Raina)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Raina lives lavishly, then she either owns mansions or travels abroad, but not both.",
                    "fol": "p_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))",
                    "str_fol": "lives_lavishly(Raina) \u2192 (owns_mansions(Raina) \u2295 travels_abroad(Raina))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Raina",
                "text": "Raina does not live lavishly.",
                "fol": "\u00acp_11(Raina)",
                "str_fol": "\u00aclives_lavishly(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Raina",
                    "text": "Raina has good taste.",
                    "fol": "p_12(Raina)",
                    "str_fol": "has_taste(Raina)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Raina",
                    "text": "Raina does not enjoy luxury.",
                    "fol": "\u00acp_0(Raina)",
                    "str_fol": "\u00acenjoys_luxury(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "For all humans, if they have good taste and earn well, then they enjoy luxury.",
                    "fol": "\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((has_taste(x) \u2227 earns_well(x)) \u2192 enjoys_luxury(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Raina",
                "text": "Raina does not earn well.",
                "fol": "\u00acp_10(Raina)",
                "str_fol": "\u00acearns_well(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Raina",
                    "text": "Raina does not earn well.",
                    "fol": "\u00acp_10(Raina)",
                    "str_fol": "\u00acearns_well(Raina)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Raina",
                    "text": "Raina does not live lavishly.",
                    "fol": "\u00acp_11(Raina)",
                    "str_fol": "\u00aclives_lavishly(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Raina either earns well or spends freely (but not both), then she lives lavishly.",
                    "fol": "(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)",
                    "str_fol": "(earns_well(Raina) \u2295 spends_freely(Raina)) \u2192 lives_lavishly(Raina)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Raina",
                "text": "Raina does not spend freely.",
                "fol": "\u00acp_9(Raina)",
                "str_fol": "\u00acspends_freely(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Raina",
                    "text": "Raina does not spend freely.",
                    "fol": "\u00acp_9(Raina)",
                    "str_fol": "\u00acspends_freely(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Raina is either frugal or spends freely.",
                    "fol": "p_7(Raina) \u2228 p_9(Raina)",
                    "str_fol": "frugal(Raina) \u2228 spends_freely(Raina)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Raina",
                "text": "Raina is frugal.",
                "fol": "p_7(Raina)",
                "str_fol": "frugal(Raina)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Raina",
                    "text": "Raina is frugal.",
                    "fol": "p_7(Raina)",
                    "str_fol": "frugal(Raina)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Raina is either frugal or extravagant, but not both.",
                    "fol": "p_7(Raina) \u2295 p_8(Raina)",
                    "str_fol": "frugal(Raina) \u2295 extravagant(Raina)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Raina",
                "text": "Raina is not extravagant.",
                "fol": "\u00acp_8(Raina)",
                "str_fol": "\u00acextravagant(Raina)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (-(p_15(x) <-> p_5(x)) -> p_6(x))).  [assumption].\n2 p_3(Raina) -> -(p_4(Raina) <-> p_13(Raina)).  [assumption].\n3 p_1(Raina) & p_2(Raina) -> p_14(Raina).  [assumption].\n4 (all x (p_15(x) -> p_16(x) & p_12(x))).  [assumption].\n5 p_11(Raina) -> -(p_13(Raina) <-> p_14(Raina)).  [assumption].\n6 (all x (p_12(x) & p_10(x) -> p_0(x))).  [assumption].\n7 -(p_10(Raina) <-> p_9(Raina)) -> p_11(Raina).  [assumption].\n8 -(p_7(Raina) <-> p_8(Raina)).  [assumption].\n9 -p_8(Raina).  [goal].\n10 p_15(x) | -p_5(x) | p_6(x).  [clausify(1)].\n11 p_5(Raina).  [assumption].\n13 p_15(Raina) | p_6(Raina).  [resolve(10,b,11,a)].\n14 -p_6(Raina).  [assumption].\n15 -p_3(Raina) | p_4(Raina) | p_13(Raina).  [clausify(2)].\n16 p_3(Raina).  [assumption].\n18 p_4(Raina) | p_13(Raina).  [resolve(15,a,16,a)].\n19 -p_4(Raina).  [assumption].\n21 -p_1(Raina) | -p_2(Raina) | p_14(Raina).  [clausify(3)].\n22 p_1(Raina).  [assumption].\n23 -p_2(Raina) | p_14(Raina).  [resolve(21,a,22,a)].\n24 p_2(Raina).  [assumption].\n25 -p_12(x) | -p_10(x) | p_0(x).  [clausify(6)].\n26 -p_0(Raina).  [assumption].\n27 p_15(Raina).  [resolve(13,b,14,a)].\n29 -p_15(x) | p_12(x).  [clausify(4)].\n32 -p_11(Raina) | -p_13(Raina) | -p_14(Raina).  [clausify(5)].\n33 p_10(Raina) | -p_9(Raina) | p_11(Raina).  [clausify(7)].\n34 -p_7(Raina) | -p_8(Raina).  [clausify(8)].\n35 p_7(Raina) | p_9(Raina).  [assumption].\n37 -p_8(Raina) | p_9(Raina).  [resolve(34,a,35,a)].\n38 p_8(Raina).  [deny(9)].\n40 p_13(Raina).  [resolve(18,a,19,a)].\n41 p_10(Raina) | -p_9(Raina) | -p_13(Raina) | -p_14(Raina).  [resolve(33,c,32,a)].\n42 p_10(Raina) | -p_9(Raina) | -p_14(Raina).  [resolve(41,c,40,a)].\n43 p_14(Raina).  [resolve(23,a,24,a)].\n44 p_12(Raina).  [resolve(27,a,29,a)].\n45 -p_12(Raina) | -p_10(Raina).  [resolve(25,c,26,a)].\n46 p_10(Raina) | -p_9(Raina).  [resolve(42,c,43,a)].\n47 p_9(Raina).  [resolve(37,a,38,a)].\n48 p_10(Raina).  [resolve(46,b,47,a)].\n49 -p_10(Raina).  [resolve(44,a,45,a)].\n50 $F.  [resolve(48,a,49,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2295 p_8(Raina)\np_7(Raina) \u2192 p_8(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_4(Raina)",
                    "p_1(Raina)",
                    "p_2(Raina)",
                    "-p_0(Raina)",
                    "all x (-(p_15(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Raina) -> (-p_4(Raina) <-> p_13(Raina))",
                    "-(p_1(Raina) & p_2(Raina) -> p_14(Raina))",
                    "all x (p_15(x) -> (p_16(x) & p_12(x)))",
                    "p_11(Raina) -> (-p_13(Raina) <-> p_14(Raina))",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x))",
                    "(-p_10(Raina) <-> p_9(Raina)) -> p_11(Raina)",
                    "p_7(Raina) | p_9(Raina)",
                    "-(p_7(Raina) <-> p_8(Raina))",
                    "p_7(Raina) -> p_8(Raina)"
                ],
                "formulas(goals)": [
                    "--p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))",
                    "p_7(Raina) \u2192 p_8(Raina)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2295 p_8(Raina)\np_7(Raina) \u2192 p_8(Raina)\np_8(Raina) \u2295 p_7(Raina)\n\u00acp_8(Raina) \u2192 \u00acp_7(Raina)\n\u00acp_7(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_4(Raina)",
                    "p_1(Raina)",
                    "p_2(Raina)",
                    "-p_0(Raina)",
                    "all x (-(p_15(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Raina) -> (-(p_4(Raina) <-> p_13(Raina)))",
                    "-((p_1(Raina) & p_2(Raina)) -> p_14(Raina))",
                    "all x (p_15(x) -> (p_16(x) & p_12(x)))",
                    "p_11(Raina) -> (-(p_13(Raina) <-> p_14(Raina)))",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x))",
                    "(-(p_10(Raina) <-> p_9(Raina))) -> p_11(Raina)",
                    "p_7(Raina) | p_9(Raina)",
                    "-(p_7(Raina) <-> p_8(Raina))",
                    "p_7(Raina) -> p_8(Raina)",
                    "-(p_8(Raina) <-> p_7(Raina))",
                    "-p_8(Raina) -> -p_7(Raina)",
                    "-p_7(Raina)"
                ],
                "formulas(goals)": [
                    "--p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Raina)"
                ],
                "added_rules": [
                    "p_8(Raina) \u2295 p_7(Raina)",
                    "\u00acp_8(Raina) \u2192 \u00acp_7(Raina)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2192 p_8(Raina)\n\u00acp_8(Raina) \u2192 \u00acp_7(Raina)\n\u00acp_7(Raina)\n\u00acp_7(Raina) \u2192 \u00acp_8(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_4(Raina)",
                    "p_1(Raina)",
                    "p_2(Raina)",
                    "-p_0(Raina)",
                    "all x (-(p_15(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Raina) -> (-(p_4(Raina) <-> p_13(Raina)))",
                    "-((p_1(Raina) & p_2(Raina)) -> p_14(Raina))",
                    "all x (p_15(x) -> (p_16(x) & p_12(x)))",
                    "p_11(Raina) -> (-(p_13(Raina) <-> p_14(Raina)))",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x))",
                    "(-(p_10(Raina) <-> p_9(Raina))) -> p_11(Raina)",
                    "p_7(Raina) | p_9(Raina)",
                    "p_7(Raina) -> p_8(Raina)",
                    "-p_8(Raina) -> -p_7(Raina)",
                    "-p_7(Raina)",
                    "-p_7(Raina) -> -p_8(Raina)"
                ],
                "formulas(goals)": [
                    "-p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Raina) \u2295 p_7(Raina)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_7(Raina) \u2192 \u00acp_8(Raina)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2192 p_8(Raina)\n\u00acp_7(Raina)\np_9(Raina) \u2192 p_8(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina).",
                    "-p_6(Raina).",
                    "p_3(Raina).",
                    "-p_4(Raina).",
                    "p_1(Raina).",
                    "p_2(Raina).",
                    "-p_0(Raina).",
                    "all x (-( (p_15(x) <-> -p_5(x)) ) -> p_6(x)).",
                    "p_3(Raina) -> ( -(p_4(Raina) <-> -p_13(Raina)) ).",
                    "-((p_1(Raina) & p_2(Raina)) -> p_14(Raina)).",
                    "all x (p_15(x) -> (p_16(x) & p_12(x))).",
                    "p_11(Raina) -> (-(p_13(Raina) <-> -p_14(Raina))).",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x)).",
                    "(-(p_10(Raina) <-> -p_9(Raina))) -> p_11(Raina).",
                    "p_7(Raina) | p_9(Raina).",
                    "p_7(Raina) -> p_8(Raina).",
                    "-p_7(Raina).",
                    "p_9(Raina) -> p_8(Raina)."
                ],
                "formulas(goals)": [
                    "--p_8(Raina)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_7(Raina) \u2192 \u00acp_8(Raina)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Raina) \u2192 p_8(Raina)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2192 p_8(Raina)\n\u00acp_7(Raina)\np_9(Raina) \u2192 \u00acp_8(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_4(Raina)",
                    "p_1(Raina)",
                    "p_2(Raina)",
                    "-p_0(Raina)",
                    "all x (-(p_15(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Raina) -> (-(p_4(Raina) <-> p_13(Raina)))",
                    "-((p_1(Raina) & p_2(Raina)) -> p_14(Raina))",
                    "all x (p_15(x) -> (p_16(x) & p_12(x)))",
                    "p_11(Raina) -> (-(p_13(Raina) <-> p_14(Raina)))",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x))",
                    "(-(p_10(Raina) <-> p_9(Raina))) -> p_11(Raina)",
                    "p_7(Raina) | p_9(Raina)",
                    "p_7(Raina) -> p_8(Raina)",
                    "-p_7(Raina)",
                    "p_9(Raina) -> -p_8(Raina)"
                ],
                "formulas(goals)": [
                    "-p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Raina) \u2192 p_8(Raina)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Raina) \u2192 \u00acp_8(Raina)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2192 p_8(Raina)\n\u00acp_7(Raina)\np_9(Raina) \u2192 \u00acp_8(Raina)\n\u00acp_7(Raina) \u2192 p_9(Raina)\np_8(Raina) \u2192 p_7(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_4(Raina)",
                    "p_1(Raina)",
                    "p_2(Raina)",
                    "-p_0(Raina)",
                    "all x (-(p_15(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Raina) -> (-(p_4(Raina) <-> p_13(Raina)))",
                    "-((p_1(Raina) & p_2(Raina)) -> p_14(Raina))",
                    "all x (p_15(x) -> (p_16(x) & p_12(x)))",
                    "p_11(Raina) -> (-(p_13(Raina) <-> p_14(Raina)))",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x))",
                    "(-(p_10(Raina) <-> p_9(Raina))) -> p_11(Raina)",
                    "p_7(Raina) | p_9(Raina)",
                    "p_7(Raina) -> p_8(Raina)",
                    "-p_7(Raina)",
                    "p_9(Raina) -> -p_8(Raina)",
                    "-p_7(Raina) -> p_9(Raina)",
                    "p_8(Raina) -> p_7(Raina)"
                ],
                "formulas(goals)": [
                    "-p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_7(Raina) \u2192 p_9(Raina)",
                    "p_8(Raina) \u2192 p_7(Raina)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_4(Raina)\np_1(Raina)\np_2(Raina)\n\u00acp_0(Raina)\n\u2200x ((p_15(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Raina) \u2192 (p_4(Raina) \u2295 p_13(Raina))\n\u00ac((p_1(Raina) \u2227 p_2(Raina)) \u2192 p_14(Raina))\n\u2200x (p_15(x) \u2192 (p_16(x) \u2227 p_12(x)))\np_11(Raina) \u2192 (p_13(Raina) \u2295 p_14(Raina))\n\u2200x ((p_12(x) \u2227 p_10(x)) \u2192 p_0(x))\n(p_10(Raina) \u2295 p_9(Raina)) \u2192 p_11(Raina)\np_7(Raina) \u2228 p_9(Raina)\np_7(Raina) \u2192 p_8(Raina)\n\u00acp_7(Raina)\np_9(Raina) \u2192 \u00acp_8(Raina)\n\u00acp_7(Raina) \u2192 p_9(Raina)\np_8(Raina) \u2192 p_7(Raina)\np_9(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_4(Raina)",
                    "p_1(Raina)",
                    "p_2(Raina)",
                    "-p_0(Raina)",
                    "all x (-(p_15(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Raina) -> (-(p_4(Raina) <-> p_13(Raina)))",
                    "-((p_1(Raina) & p_2(Raina)) -> p_14(Raina))",
                    "all x (p_15(x) -> (p_16(x) & p_12(x)))",
                    "p_11(Raina) -> (-(p_13(Raina) <-> p_14(Raina)))",
                    "all x ((p_12(x) & p_10(x)) -> p_0(x))",
                    "(-(p_10(Raina) <-> p_9(Raina))) -> p_11(Raina)",
                    "p_7(Raina) | p_9(Raina)",
                    "p_7(Raina) -> p_8(Raina)",
                    "-p_7(Raina)",
                    "p_9(Raina) -> -p_8(Raina)",
                    "-p_7(Raina) -> p_9(Raina)",
                    "p_8(Raina) -> p_7(Raina)",
                    "p_9(Raina)"
                ],
                "formulas(goals)": [
                    "-p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Raina)"
                ],
                "added_rules": []
            }
        }
    ]
}