{
    "background_story": "Samara was a free-spirited artist, known for her captivating street performances. One evening, while dancing in the city square, she momentarily caught the eye of a renowned choreographer. Entranced by her raw talent, he stopped to watch her finish her routine. Though their interaction was brief, it was enough to change the course of Samara's life. The choreographer offered her a spot in his upcoming production, and she accepted. For one fleeting moment, their paths crossed, and Samara's career was forever altered. She went on to tour the world, her name becoming synonymous with innovative and passionate dance. That momentary connection had sparked a journey that would take her to heights she never thought possible.",
    "predicates": [
        {
            "id": 0,
            "name": "take_risks"
        },
        {
            "id": 1,
            "name": "succeed_professionally"
        },
        {
            "id": 2,
            "name": "stay_focused"
        },
        {
            "id": 3,
            "name": "is_disciplined"
        },
        {
            "id": 4,
            "name": "perform_publicly"
        },
        {
            "id": 5,
            "name": "inspire_others"
        },
        {
            "id": 6,
            "name": "talented"
        },
        {
            "id": 7,
            "name": "get_discovered"
        },
        {
            "id": 8,
            "name": "become_famous"
        },
        {
            "id": 9,
            "name": "work_hard"
        },
        {
            "id": 10,
            "name": "practice_daily"
        },
        {
            "id": 11,
            "name": "gain_recognition"
        },
        {
            "id": 12,
            "name": "create_art"
        },
        {
            "id": 13,
            "name": "has_charisma"
        },
        {
            "id": 14,
            "name": "pursue_passion"
        },
        {
            "id": 15,
            "name": "sets_goals"
        },
        {
            "id": 16,
            "name": "tracks_progress"
        },
        {
            "id": 17,
            "name": "has_passion"
        },
        {
            "id": 18,
            "name": "shows_excellence"
        },
        {
            "id": 19,
            "name": "express_themselves"
        },
        {
            "id": 20,
            "name": "find_passion"
        }
    ],
    "subject_name": "Samara",
    "subject_category": "human",
    "keyword": "momentarily",
    "all_facts": [
        {
            "id": 0,
            "subject": "Samara",
            "text": "Samara takes risks.",
            "fol": "p_0(Samara)",
            "str_fol": "take_risks(Samara)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Samara",
            "text": "Samara does not succeed professionally.",
            "fol": "\u00acp_1(Samara)",
            "str_fol": "\u00acsucceed_professionally(Samara)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Samara",
            "text": "Samara stays focused.",
            "fol": "p_2(Samara)",
            "str_fol": "stay_focused(Samara)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Samara",
            "text": "Samara is disciplined.",
            "fol": "p_3(Samara)",
            "str_fol": "is_disciplined(Samara)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Samara",
            "text": "Samara performs publicly.",
            "fol": "p_4(Samara)",
            "str_fol": "perform_publicly(Samara)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Samara",
            "text": "Samara does not inspire others when she performs publicly.",
            "fol": "\u00acp_5(Samara)",
            "str_fol": "\u00acinspire_others(Samara)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Samara",
            "text": "Samara creates art.",
            "fol": "p_12(Samara)",
            "str_fol": "create_art(Samara)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Samara",
            "text": "Samara gains recognition.",
            "fol": "p_11(Samara)",
            "str_fol": "gain_recognition(Samara)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Samara",
            "text": "Samara does not get discovered.",
            "fol": "\u00acp_7(Samara)",
            "str_fol": "\u00acget_discovered(Samara)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Samara",
            "text": "Samara does not practice daily.",
            "fol": "\u00acp_10(Samara)",
            "str_fol": "\u00acpractice_daily(Samara)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Samara",
            "text": "Samara does not work hard.",
            "fol": "\u00acp_9(Samara)",
            "str_fol": "\u00acwork_hard(Samara)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Samara",
            "text": "Samara does not become famous.",
            "fol": "\u00acp_8(Samara)",
            "str_fol": "\u00acbecome_famous(Samara)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Samara",
            "text": "Samara is talented.",
            "fol": "p_6(Samara)",
            "str_fol": "talented(Samara)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Samara",
            "text": "Samara performs publicly.",
            "fol": "p_4(Samara)",
            "str_fol": "perform_publicly(Samara)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Samara",
            "text": "Samara does not inspire others when she performs publicly.",
            "fol": "\u00acp_5(Samara)",
            "str_fol": "\u00acinspire_others(Samara)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Samara",
            "text": "Samara is disciplined.",
            "fol": "p_3(Samara)",
            "str_fol": "is_disciplined(Samara)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Samara",
            "text": "Samara stays focused.",
            "fol": "p_2(Samara)",
            "str_fol": "stay_focused(Samara)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Samara",
            "text": "Samara does not succeed professionally.",
            "fol": "\u00acp_1(Samara)",
            "str_fol": "\u00acsucceed_professionally(Samara)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Samara",
            "text": "Samara takes risks.",
            "fol": "p_0(Samara)",
            "str_fol": "take_risks(Samara)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Samara performs publicly, then she either inspires others or creates art (or both).",
            "fol": "p_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))",
            "str_fol": "perform_publicly(Samara) \u2192 (inspire_others(Samara) \u2228 create_art(Samara))"
        },
        {
            "id": 5,
            "text": "If Samara creates art, then she gains recognition.",
            "fol": "p_12(Samara) \u2192 p_11(Samara)",
            "str_fol": "create_art(Samara) \u2192 gain_recognition(Samara)"
        },
        {
            "id": 4,
            "text": "If Samara gets discovered, then she does not gain recognition, and if she gains recognition, then she is not discovered.",
            "fol": "p_7(Samara) \u2295 p_11(Samara)",
            "str_fol": "get_discovered(Samara) \u2295 gain_recognition(Samara)"
        },
        {
            "id": 3,
            "text": "If Samara is disciplined, then she either practices daily or stays focused, but not both.",
            "fol": "p_3(Samara) \u2192 (p_10(Samara) \u2295 p_2(Samara))",
            "str_fol": "is_disciplined(Samara) \u2192 (practice_daily(Samara) \u2295 stay_focused(Samara))"
        },
        {
            "id": 2,
            "text": "If Samara either practices daily or works hard (but not both), then she succeeds professionally.",
            "fol": "(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)",
            "str_fol": "(practice_daily(Samara) \u2295 work_hard(Samara)) \u2192 succeed_professionally(Samara)"
        },
        {
            "id": 1,
            "text": "If Samara becomes famous, then she works hard and takes risks.",
            "fol": "p_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))",
            "str_fol": "become_famous(Samara) \u2192 (work_hard(Samara) \u2227 take_risks(Samara))"
        },
        {
            "id": 0,
            "text": "If Samara is talented, then she either gets discovered or becomes famous (or both).",
            "fol": "p_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))",
            "str_fol": "talented(Samara) \u2192 (get_discovered(Samara) \u2228 become_famous(Samara))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Samara",
            "text": "Samara performs publicly.",
            "fol": "p_4(Samara)",
            "str_fol": "perform_publicly(Samara)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Samara",
            "text": "Samara does not inspire others when she performs publicly.",
            "fol": "\u00acp_5(Samara)",
            "str_fol": "\u00acinspire_others(Samara)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Samara",
            "text": "Samara is disciplined.",
            "fol": "p_3(Samara)",
            "str_fol": "is_disciplined(Samara)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Samara",
            "text": "Samara stays focused.",
            "fol": "p_2(Samara)",
            "str_fol": "stay_focused(Samara)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Samara",
            "text": "Samara does not succeed professionally.",
            "fol": "\u00acp_1(Samara)",
            "str_fol": "\u00acsucceed_professionally(Samara)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Samara",
            "text": "Samara takes risks.",
            "fol": "p_0(Samara)",
            "str_fol": "take_risks(Samara)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If Samara performs publicly, then she either inspires others or creates art (or both).",
            "fol": "p_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))",
            "str_fol": "perform_publicly(Samara) \u2192 (inspire_others(Samara) \u2228 create_art(Samara))"
        },
        {
            "id": 5,
            "text": "If Samara creates art, then she gains recognition.",
            "fol": "p_12(Samara) \u2192 p_11(Samara)",
            "str_fol": "create_art(Samara) \u2192 gain_recognition(Samara)"
        },
        {
            "id": 4,
            "text": "If Samara gets discovered, then she does not gain recognition, and if she gains recognition, then she is not discovered.",
            "fol": "p_7(Samara) \u2295 p_11(Samara)",
            "str_fol": "get_discovered(Samara) \u2295 gain_recognition(Samara)"
        },
        {
            "id": 3,
            "text": "If Samara is disciplined, then she either practices daily or stays focused, but not both.",
            "fol": "p_3(Samara) \u2192 (p_10(Samara) \u2295 p_2(Samara))",
            "str_fol": "is_disciplined(Samara) \u2192 (practice_daily(Samara) \u2295 stay_focused(Samara))"
        },
        {
            "id": 2,
            "text": "If Samara either practices daily or works hard (but not both), then she succeeds professionally.",
            "fol": "(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)",
            "str_fol": "(practice_daily(Samara) \u2295 work_hard(Samara)) \u2192 succeed_professionally(Samara)"
        },
        {
            "id": 1,
            "text": "If Samara becomes famous, then she works hard and takes risks.",
            "fol": "p_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))",
            "str_fol": "become_famous(Samara) \u2192 (work_hard(Samara) \u2227 take_risks(Samara))"
        },
        {
            "id": 0,
            "text": "If Samara is talented, then she either gets discovered or becomes famous (or both).",
            "fol": "p_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))",
            "str_fol": "talented(Samara) \u2192 (get_discovered(Samara) \u2228 become_famous(Samara))"
        }
    ],
    "context_fol": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2295 p_11(Samara)\np_3(Samara) \u2192 (p_10(Samara) \u2295 p_2(Samara))\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))",
    "conclusion": {
        "id": 12,
        "subject": "Samara",
        "text": "Samara is talented.",
        "fol": "p_6(Samara)",
        "str_fol": "talented(Samara)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_6(Samara)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Samara",
                    "text": "Samara performs publicly.",
                    "fol": "p_4(Samara)",
                    "str_fol": "perform_publicly(Samara)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Samara",
                    "text": "Samara does not inspire others when she performs publicly.",
                    "fol": "\u00acp_5(Samara)",
                    "str_fol": "\u00acinspire_others(Samara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Samara performs publicly, then she either inspires others or creates art (or both).",
                    "fol": "p_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))",
                    "str_fol": "perform_publicly(Samara) \u2192 (inspire_others(Samara) \u2228 create_art(Samara))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Samara",
                "text": "Samara creates art.",
                "fol": "p_12(Samara)",
                "str_fol": "create_art(Samara)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Samara",
                    "text": "Samara creates art.",
                    "fol": "p_12(Samara)",
                    "str_fol": "create_art(Samara)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Samara creates art, then she gains recognition.",
                    "fol": "p_12(Samara) \u2192 p_11(Samara)",
                    "str_fol": "create_art(Samara) \u2192 gain_recognition(Samara)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Samara",
                "text": "Samara gains recognition.",
                "fol": "p_11(Samara)",
                "str_fol": "gain_recognition(Samara)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Samara",
                    "text": "Samara gains recognition.",
                    "fol": "p_11(Samara)",
                    "str_fol": "gain_recognition(Samara)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Samara gets discovered, then she does not gain recognition, and if she gains recognition, then she is not discovered.",
                    "fol": "p_7(Samara) \u2295 p_11(Samara)",
                    "str_fol": "get_discovered(Samara) \u2295 gain_recognition(Samara)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Samara",
                "text": "Samara does not get discovered.",
                "fol": "\u00acp_7(Samara)",
                "str_fol": "\u00acget_discovered(Samara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Samara",
                    "text": "Samara is disciplined.",
                    "fol": "p_3(Samara)",
                    "str_fol": "is_disciplined(Samara)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Samara",
                    "text": "Samara stays focused.",
                    "fol": "p_2(Samara)",
                    "str_fol": "stay_focused(Samara)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Samara is disciplined, then she either practices daily or stays focused, but not both.",
                    "fol": "p_3(Samara) \u2192 (p_10(Samara) \u2295 p_2(Samara))",
                    "str_fol": "is_disciplined(Samara) \u2192 (practice_daily(Samara) \u2295 stay_focused(Samara))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Samara",
                "text": "Samara does not practice daily.",
                "fol": "\u00acp_10(Samara)",
                "str_fol": "\u00acpractice_daily(Samara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Samara",
                    "text": "Samara does not practice daily.",
                    "fol": "\u00acp_10(Samara)",
                    "str_fol": "\u00acpractice_daily(Samara)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Samara",
                    "text": "Samara does not succeed professionally.",
                    "fol": "\u00acp_1(Samara)",
                    "str_fol": "\u00acsucceed_professionally(Samara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Samara either practices daily or works hard (but not both), then she succeeds professionally.",
                    "fol": "(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)",
                    "str_fol": "(practice_daily(Samara) \u2295 work_hard(Samara)) \u2192 succeed_professionally(Samara)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Samara",
                "text": "Samara does not work hard.",
                "fol": "\u00acp_9(Samara)",
                "str_fol": "\u00acwork_hard(Samara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Samara",
                    "text": "Samara does not work hard.",
                    "fol": "\u00acp_9(Samara)",
                    "str_fol": "\u00acwork_hard(Samara)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Samara",
                    "text": "Samara takes risks.",
                    "fol": "p_0(Samara)",
                    "str_fol": "take_risks(Samara)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Samara becomes famous, then she works hard and takes risks.",
                    "fol": "p_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))",
                    "str_fol": "become_famous(Samara) \u2192 (work_hard(Samara) \u2227 take_risks(Samara))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Samara",
                "text": "Samara does not become famous.",
                "fol": "\u00acp_8(Samara)",
                "str_fol": "\u00acbecome_famous(Samara)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Samara",
                    "text": "Samara does not get discovered.",
                    "fol": "\u00acp_7(Samara)",
                    "str_fol": "\u00acget_discovered(Samara)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Samara",
                    "text": "Samara does not become famous.",
                    "fol": "\u00acp_8(Samara)",
                    "str_fol": "\u00acbecome_famous(Samara)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Samara is talented, then she either gets discovered or becomes famous (or both).",
                    "fol": "p_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))",
                    "str_fol": "talented(Samara) \u2192 (get_discovered(Samara) \u2228 become_famous(Samara))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Samara",
                "text": "Samara is talented.",
                "fol": "p_6(Samara)",
                "str_fol": "talented(Samara)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_4(Samara) -> p_5(Samara) | p_12(Samara).  [assumption].\n2 p_12(Samara) -> p_11(Samara).  [assumption].\n3 -(p_7(Samara) <-> p_11(Samara)).  [assumption].\n4 p_3(Samara) -> -(p_10(Samara) <-> p_2(Samara)).  [assumption].\n5 -(p_10(Samara) <-> p_9(Samara)) -> p_1(Samara).  [assumption].\n6 p_8(Samara) -> p_9(Samara) & p_0(Samara).  [assumption].\n7 p_6(Samara) -> p_7(Samara) | p_8(Samara).  [assumption].\n8 -p_6(Samara).  [goal].\n9 -p_4(Samara) | p_5(Samara) | p_12(Samara).  [clausify(1)].\n10 p_4(Samara).  [assumption].\n11 p_5(Samara) | p_12(Samara).  [resolve(9,a,10,a)].\n12 -p_5(Samara).  [assumption].\n14 p_3(Samara).  [assumption].\n15 -p_3(Samara) | -p_10(Samara) | -p_2(Samara).  [clausify(4)].\n16 -p_10(Samara) | -p_2(Samara).  [resolve(15,a,14,a)].\n17 p_2(Samara).  [assumption].\n20 -p_1(Samara).  [assumption].\n21 p_10(Samara) | -p_9(Samara) | p_1(Samara).  [clausify(5)].\n22 p_12(Samara).  [resolve(11,a,12,a)].\n23 -p_12(Samara) | p_11(Samara).  [clausify(2)].\n24 -p_7(Samara) | -p_11(Samara).  [clausify(3)].\n26 -p_6(Samara) | p_7(Samara) | p_8(Samara).  [clausify(7)].\n27 -p_6(Samara) | p_8(Samara) | -p_11(Samara).  [resolve(26,b,24,a)].\n28 -p_8(Samara) | p_9(Samara).  [clausify(6)].\n29 -p_6(Samara) | -p_11(Samara) | p_9(Samara).  [resolve(27,b,28,a)].\n30 p_6(Samara).  [deny(8)].\n31 p_10(Samara) | -p_9(Samara).  [resolve(21,c,20,a)].\n32 -p_10(Samara).  [resolve(16,b,17,a)].\n33 -p_11(Samara) | p_9(Samara).  [resolve(29,a,30,a)].\n34 p_11(Samara).  [resolve(22,a,23,a)].\n35 p_9(Samara).  [resolve(33,a,34,a)].\n36 -p_9(Samara).  [resolve(31,a,32,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\n\u00acp_10(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2228 p_11(Samara)\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara)\np_3(Samara) \u2192 (p_10(Samara) \u2295 p_2(Samara))\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))",
            "Initial Goal": "p_6(Samara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara)",
                    "-p_5(Samara)",
                    "p_3(Samara)",
                    "p_2(Samara)",
                    "-p_1(Samara)",
                    "p_0(Samara)",
                    "-p_10(Samara)",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara))",
                    "p_12(Samara) -> p_11(Samara)",
                    "p_7(Samara) | p_11(Samara)",
                    "-p_7(Samara) | -p_11(Samara)",
                    "p_3(Samara) -> (-(p_10(Samara) <-> p_2(Samara)))",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara)",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara))",
                    "p_6(Samara) -> (p_7(Samara) | p_8(Samara))"
                ],
                "formulas(goals)": [
                    "-p_6(Samara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Samara) \u2295 p_11(Samara)"
                ],
                "added_facts": [
                    "\u00acp_10(Samara)"
                ],
                "added_rules": [
                    "p_7(Samara) \u2228 p_11(Samara)",
                    "\u00acp_7(Samara) \u2228 \u00acp_11(Samara)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\n\u00acp_10(Samara)\np_12(Samara)\np_11(Samara)\n\u00acp_7(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2228 p_11(Samara)\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara)\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))\np_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara)))",
            "Initial Goal": "p_6(Samara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara)",
                    "-p_5(Samara)",
                    "p_3(Samara)",
                    "p_2(Samara)",
                    "-p_1(Samara)",
                    "p_0(Samara)",
                    "-p_10(Samara)",
                    "p_12(Samara)",
                    "p_11(Samara)",
                    "-p_7(Samara)",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara))",
                    "p_12(Samara) -> p_11(Samara)",
                    "p_7(Samara) | p_11(Samara)",
                    "-p_7(Samara) | -p_11(Samara)",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara)",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara))",
                    "p_6(Samara) -> (p_7(Samara) | p_8(Samara))",
                    "p_3(Samara) -> ((p_10(Samara) | p_2(Samara)) & (-p_10(Samara) | -p_2(Samara)))"
                ],
                "formulas(goals)": [
                    "-p_6(Samara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Samara) \u2192 (p_10(Samara) \u2295 p_2(Samara))"
                ],
                "added_facts": [
                    "p_12(Samara)",
                    "p_11(Samara)",
                    "\u00acp_7(Samara)"
                ],
                "added_rules": [
                    "p_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara)))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\n\u00acp_10(Samara)\np_12(Samara)\np_11(Samara)\n\u00acp_7(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2228 p_11(Samara)\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara)\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))\np_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara)))\np_4(Samara) \u2192 p_12(Samara)",
            "Initial Goal": "p_6(Samara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara)",
                    "-p_5(Samara)",
                    "p_3(Samara)",
                    "p_2(Samara)",
                    "-p_1(Samara)",
                    "p_0(Samara)",
                    "-p_10(Samara)",
                    "p_12(Samara)",
                    "p_11(Samara)",
                    "-p_7(Samara)",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara))",
                    "p_12(Samara) -> p_11(Samara)",
                    "p_7(Samara) | p_11(Samara)",
                    "-p_7(Samara) | -p_11(Samara)",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara)",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara))",
                    "p_6(Samara) -> (p_7(Samara) | p_8(Samara))",
                    "p_3(Samara) -> ((p_10(Samara) | p_2(Samara)) & (-p_10(Samara) | -p_2(Samara)))",
                    "p_4(Samara) -> p_12(Samara)"
                ],
                "formulas(goals)": [
                    "-p_6(Samara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Samara) \u2192 p_12(Samara)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\n\u00acp_10(Samara)\np_12(Samara)\np_11(Samara)\n\u00acp_7(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2228 p_11(Samara)\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara)\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara)))\np_4(Samara) \u2192 p_12(Samara)\np_2(Samara) \u2192 p_6(Samara)",
            "Initial Goal": "p_6(Samara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara)",
                    "-p_5(Samara)",
                    "p_3(Samara)",
                    "p_2(Samara)",
                    "-p_1(Samara)",
                    "p_0(Samara)",
                    "-p_10(Samara)",
                    "p_12(Samara)",
                    "p_11(Samara)",
                    "-p_7(Samara)",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara))",
                    "p_12(Samara) -> p_11(Samara)",
                    "p_7(Samara) | p_11(Samara)",
                    "-p_7(Samara) | -p_11(Samara)",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara)",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara))",
                    "p_3(Samara) -> ((p_10(Samara) | p_2(Samara)) & (-p_10(Samara) | -p_2(Samara)))",
                    "p_4(Samara) -> p_12(Samara)",
                    "p_2(Samara) -> p_6(Samara)"
                ],
                "formulas(goals)": [
                    "p_6(Samara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Samara) \u2192 (p_7(Samara) \u2228 p_8(Samara))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Samara) \u2192 p_6(Samara)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\n\u00acp_10(Samara)\np_12(Samara)\np_11(Samara)\n\u00acp_7(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2228 p_11(Samara)\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara)\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara)))\np_4(Samara) \u2192 p_12(Samara)\np_2(Samara) \u2192 p_6(Samara)\n\u00acp_10(Samara)\n\u00acp_9(Samara)\n\u00acp_8(Samara)",
            "Initial Goal": "p_6(Samara)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara)",
                    "-p_5(Samara)",
                    "p_3(Samara)",
                    "p_2(Samara)",
                    "-p_1(Samara)",
                    "p_0(Samara)",
                    "-p_10(Samara)",
                    "p_12(Samara)",
                    "p_11(Samara)",
                    "-p_7(Samara)",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara))",
                    "p_12(Samara) -> p_11(Samara)",
                    "p_7(Samara) | p_11(Samara)",
                    "-p_7(Samara) | -p_11(Samara)",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara)",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara))",
                    "p_3(Samara) -> ((p_10(Samara) | p_2(Samara)) & (-p_10(Samara) | -p_2(Samara)))",
                    "p_4(Samara) -> p_12(Samara)",
                    "p_2(Samara) -> p_6(Samara)",
                    "-p_10(Samara)",
                    "-p_9(Samara)",
                    "-p_8(Samara)"
                ],
                "formulas(goals)": [
                    "p_6(Samara)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Samara)",
                    "\u00acp_9(Samara)",
                    "\u00acp_8(Samara)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Samara).\n\u00acp_5(Samara).\np_3(Samara).\np_2(Samara).\n\u00acp_1(Samara).\np_0(Samara).\n\u00acp_10(Samara).\np_12(Samara).\np_11(Samara).\n\u00acp_7(Samara).\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara)).\np_12(Samara) \u2192 p_11(Samara).\np_7(Samara) \u2228 p_11(Samara).\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara).\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara).\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara)).\np_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara))).\np_4(Samara) \u2192 p_12(Samara).\n\u00acp_10(Samara).\n\u00acp_9(Samara).\n\u00acp_8(Samara).\np_2(Samara) \u2192 \u00acp_6(Samara).",
            "Initial Goal": "p_6(Samara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara).",
                    "-p_5(Samara).",
                    "p_3(Samara).",
                    "p_2(Samara).",
                    "-p_1(Samara).",
                    "p_0(Samara).",
                    "-p_10(Samara).",
                    "p_12(Samara).",
                    "p_11(Samara).",
                    "-p_7(Samara).",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara)).",
                    "p_12(Samara) -> p_11(Samara).",
                    "p_7(Samara) | p_11(Samara).",
                    "-p_7(Samara) | -p_11(Samara).",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara).",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara)).",
                    "p_3(Samara) -> ((p_10(Samara) | p_2(Samara)) & (-p_10(Samara) | -p_2(Samara))).",
                    "p_4(Samara) -> p_12(Samara).",
                    "-p_10(Samara).",
                    "-p_9(Samara).",
                    "-p_8(Samara).",
                    "p_2(Samara) -> -p_6(Samara)."
                ],
                "formulas(goals)": [
                    "-p_6(Samara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Samara) \u2192 p_6(Samara)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Samara) \u2192 \u00acp_6(Samara)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Samara)\n\u00acp_5(Samara)\np_3(Samara)\np_2(Samara)\n\u00acp_1(Samara)\np_0(Samara)\n\u00acp_10(Samara)\np_12(Samara)\np_11(Samara)\n\u00acp_7(Samara)\n\u00acp_9(Samara)\n\u00acp_8(Samara)\np_4(Samara) \u2192 (p_5(Samara) \u2228 p_12(Samara))\np_12(Samara) \u2192 p_11(Samara)\np_7(Samara) \u2228 p_11(Samara)\n\u00acp_7(Samara) \u2228 \u00acp_11(Samara)\n(p_10(Samara) \u2295 p_9(Samara)) \u2192 p_1(Samara)\np_8(Samara) \u2192 (p_9(Samara) \u2227 p_0(Samara))\np_3(Samara) \u2192 ((p_10(Samara) \u2228 p_2(Samara)) \u2227 (\u00acp_10(Samara) \u2228 \u00acp_2(Samara)))\np_4(Samara) \u2192 p_12(Samara)\np_2(Samara) \u2192 \u00acp_6(Samara)\n\u00acp_11(Samara) \u2192 \u00acp_12(Samara)\np_6(Samara) \u2192 \u00acp_2(Samara)",
            "Initial Goal": "p_6(Samara)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Samara).",
                    "-p_5(Samara).",
                    "p_3(Samara).",
                    "p_2(Samara).",
                    "-p_1(Samara).",
                    "p_0(Samara).",
                    "-p_10(Samara).",
                    "p_12(Samara).",
                    "p_11(Samara).",
                    "-p_7(Samara).",
                    "-p_9(Samara).",
                    "-p_8(Samara).",
                    "p_4(Samara) -> (p_5(Samara) | p_12(Samara)).",
                    "p_12(Samara) -> p_11(Samara).",
                    "p_7(Samara) | p_11(Samara).",
                    "-p_7(Samara) | -p_11(Samara).",
                    "(-(p_10(Samara) <-> p_9(Samara))) -> p_1(Samara).",
                    "p_8(Samara) -> (p_9(Samara) & p_0(Samara)).",
                    "p_3(Samara) -> ((p_10(Samara) | p_2(Samara)) & (-p_10(Samara) | -p_2(Samara))).",
                    "p_4(Samara) -> p_12(Samara).",
                    "p_2(Samara) -> -p_6(Samara).",
                    "-p_11(Samara) -> -p_12(Samara).",
                    "p_6(Samara) -> -p_2(Samara)."
                ],
                "formulas(goals)": [
                    "-p_6(Samara)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_11(Samara) \u2192 \u00acp_12(Samara)",
                    "p_6(Samara) \u2192 \u00acp_2(Samara)"
                ]
            }
        }
    ]
}