{
    "background_story": "Estrella, a skilled astronaut, embarked on a mission to Mars aboard the spaceship Aurora. Her role was to oversee the deployment of a massive gantry system, crucial for assembling the habitat modules that would serve as the base for future human settlements. As the Aurora entered Mars' orbit, Estrella carefully guided the gantry's robotic arms to construct the framework of their new home. The gantry's precision and Estrella's expertise proved invaluable, allowing the team to complete the habitat ahead of schedule. Estrella's dedication to the mission and her proficiency with the gantry system earned her the respect and admiration of her crewmates, cementing her place in the history of space exploration.",
    "predicates": [
        {
            "id": 0,
            "name": "has_expertise"
        },
        {
            "id": 1,
            "name": "leads_team"
        },
        {
            "id": 2,
            "name": "is_dedicated"
        },
        {
            "id": 3,
            "name": "navigates_orbit"
        },
        {
            "id": 4,
            "name": "sets_priorities"
        },
        {
            "id": 5,
            "name": "meets_deadlines"
        },
        {
            "id": 6,
            "name": "operates_gantry"
        },
        {
            "id": 7,
            "name": "designs_module"
        },
        {
            "id": 8,
            "name": "skilled_with_robotics"
        },
        {
            "id": 9,
            "name": "experienced_in_space_construction"
        },
        {
            "id": 10,
            "name": "successful_in_mission"
        },
        {
            "id": 11,
            "name": "knows_engineering"
        },
        {
            "id": 12,
            "name": "achieves_goal"
        },
        {
            "id": 13,
            "name": "works_hard"
        },
        {
            "id": 14,
            "name": "builds_habitat"
        },
        {
            "id": 15,
            "name": "is_reliable"
        },
        {
            "id": 16,
            "name": "completes_task"
        },
        {
            "id": 17,
            "name": "masters_technology"
        },
        {
            "id": 18,
            "name": "travels_far"
        },
        {
            "id": 19,
            "name": "uses_tools"
        },
        {
            "id": 20,
            "name": "travels_mars"
        },
        {
            "id": 21,
            "name": "fixes_equipment"
        },
        {
            "id": 22,
            "name": "thinks_critically"
        },
        {
            "id": 23,
            "name": "coordinates_effort"
        },
        {
            "id": 24,
            "name": "has_passion"
        },
        {
            "id": 25,
            "name": "sets_goals"
        },
        {
            "id": 26,
            "name": "excels_task"
        },
        {
            "id": 27,
            "name": "plans_mission"
        },
        {
            "id": 28,
            "name": "studies_blueprints"
        }
    ],
    "subject_name": "Estrella",
    "subject_category": "space explorer",
    "keyword": "gantry",
    "all_facts": [
        {
            "id": 0,
            "subject": "Estrella",
            "text": "Estrella does not have expertise.",
            "fol": "\u00acp_0(Estrella)",
            "str_fol": "\u00achas_expertise(Estrella)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Estrella",
            "text": "Estrella does not lead a team.",
            "fol": "\u00acp_1(Estrella)",
            "str_fol": "\u00acleads_team(Estrella)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Estrella",
            "text": "Estrella is dedicated.",
            "fol": "p_2(Estrella)",
            "str_fol": "is_dedicated(Estrella)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Estrella",
            "text": "Estrella does not navigate orbit.",
            "fol": "\u00acp_3(Estrella)",
            "str_fol": "\u00acnavigates_orbit(Estrella)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Estrella",
            "text": "Estrella does not set priorities.",
            "fol": "\u00acp_4(Estrella)",
            "str_fol": "\u00acsets_priorities(Estrella)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Estrella",
            "text": "Estrella does not meet deadlines.",
            "fol": "\u00acp_5(Estrella)",
            "str_fol": "\u00acmeets_deadlines(Estrella)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Estrella",
            "text": "Estrella operates a gantry system.",
            "fol": "p_6(Estrella)",
            "str_fol": "operates_gantry(Estrella)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Estrella",
            "text": "Estrella designs modules.",
            "fol": "p_7(Estrella)",
            "str_fol": "designs_module(Estrella)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Estrella",
            "text": "Estrella does not build habitats.",
            "fol": "\u00acp_14(Estrella)",
            "str_fol": "\u00acbuilds_habitat(Estrella)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Estrella",
            "text": "Estrella does not complete her task.",
            "fol": "\u00acp_16(Estrella)",
            "str_fol": "\u00accompletes_task(Estrella)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Estrella",
            "text": "Estrella is not reliable.",
            "fol": "\u00acp_15(Estrella)",
            "str_fol": "\u00acis_reliable(Estrella)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Estrella",
            "text": "Estrella works hard.",
            "fol": "p_13(Estrella)",
            "str_fol": "works_hard(Estrella)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Estrella",
            "text": "Estrella does not achieve her goal.",
            "fol": "\u00acp_12(Estrella)",
            "str_fol": "\u00acachieves_goal(Estrella)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Estrella",
            "text": "Estrella does not know engineering.",
            "fol": "\u00acp_11(Estrella)",
            "str_fol": "\u00acknows_engineering(Estrella)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Estrella",
            "text": "Estrella is not skilled with robotics.",
            "fol": "\u00acp_8(Estrella)",
            "str_fol": "\u00acskilled_with_robotics(Estrella)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Estrella",
            "text": "Estrella is experienced in space construction.",
            "fol": "p_9(Estrella)",
            "str_fol": "experienced_in_space_construction(Estrella)",
            "negation": false
        },
        {
            "id": 16,
            "subject": "Estrella",
            "text": "Estrella is not successful in her mission.",
            "fol": "\u00acp_10(Estrella)",
            "str_fol": "\u00acsuccessful_in_mission(Estrella)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Estrella",
            "text": "Estrella operates a gantry system.",
            "fol": "p_6(Estrella)",
            "str_fol": "operates_gantry(Estrella)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Estrella",
            "text": "Estrella designs modules.",
            "fol": "p_7(Estrella)",
            "str_fol": "designs_module(Estrella)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Estrella",
            "text": "Estrella does not set priorities.",
            "fol": "\u00acp_4(Estrella)",
            "str_fol": "\u00acsets_priorities(Estrella)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Estrella",
            "text": "Estrella does not meet deadlines.",
            "fol": "\u00acp_5(Estrella)",
            "str_fol": "\u00acmeets_deadlines(Estrella)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Estrella",
            "text": "Estrella does not navigate orbit.",
            "fol": "\u00acp_3(Estrella)",
            "str_fol": "\u00acnavigates_orbit(Estrella)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Estrella",
            "text": "Estrella is dedicated.",
            "fol": "p_2(Estrella)",
            "str_fol": "is_dedicated(Estrella)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Estrella",
            "text": "Estrella does not have expertise.",
            "fol": "\u00acp_0(Estrella)",
            "str_fol": "\u00achas_expertise(Estrella)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Estrella",
            "text": "Estrella does not lead a team.",
            "fol": "\u00acp_1(Estrella)",
            "str_fol": "\u00acleads_team(Estrella)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Estrella operates a gantry system, then she either builds habitats or designs modules, but not both.",
            "fol": "p_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))",
            "str_fol": "operates_gantry(Estrella) \u2192 (builds_habitat(Estrella) \u2295 designs_module(Estrella))"
        },
        {
            "id": 7,
            "text": "If Estrella either completes her tasks or sets priorities (but not both), then she meets deadlines.",
            "fol": "(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)",
            "str_fol": "(completes_task(Estrella) \u2295 sets_priorities(Estrella)) \u2192 meets_deadlines(Estrella)"
        },
        {
            "id": 6,
            "text": "For all space explorers, if they either navigate orbit or are reliable, then they complete their task.",
            "fol": "\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))",
            "str_fol": "\u2200x ((navigates_orbit(x) \u2295 is_reliable(x)) \u2192 completes_task(x))"
        },
        {
            "id": 5,
            "text": "Every dedicated space explorer either works hard or has expertise.",
            "fol": "\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (is_dedicated(x) \u2192 (works_hard(x) \u2228 has_expertise(x)))"
        },
        {
            "id": 4,
            "text": "If Estrella achieves her goal, then she is reliable.",
            "fol": "p_12(Estrella) \u2192 p_15(Estrella)",
            "str_fol": "achieves_goal(Estrella) \u2192 is_reliable(Estrella)"
        },
        {
            "id": 3,
            "text": "For all space explorers, if they work hard and know engineering, then they can build habitats.",
            "fol": "\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((works_hard(x) \u2227 knows_engineering(x)) \u2192 builds_habitat(x))"
        },
        {
            "id": 2,
            "text": "If Estrella is skilled with robotics or leads a team, then she can achieve her goal.",
            "fol": "(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)",
            "str_fol": "(skilled_with_robotics(Estrella) \u2228 leads_team(Estrella)) \u2192 achieves_goal(Estrella)"
        },
        {
            "id": 1,
            "text": "Estrella either knows engineering or has experience in space construction.",
            "fol": "p_11(Estrella) \u2228 p_9(Estrella)",
            "str_fol": "knows_engineering(Estrella) \u2228 experienced_in_space_construction(Estrella)"
        },
        {
            "id": 0,
            "text": "If Estrella is skilled with robotics or experienced in space construction, then she is successful in her mission.",
            "fol": "(p_8(Estrella) \u2228 p_9(Estrella)) \u2192 p_10(Estrella)",
            "str_fol": "(skilled_with_robotics(Estrella) \u2228 experienced_in_space_construction(Estrella)) \u2192 successful_in_mission(Estrella)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Estrella",
            "text": "Estrella operates a gantry system.",
            "fol": "p_6(Estrella)",
            "str_fol": "operates_gantry(Estrella)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Estrella",
            "text": "Estrella designs modules.",
            "fol": "p_7(Estrella)",
            "str_fol": "designs_module(Estrella)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Estrella",
            "text": "Estrella does not set priorities.",
            "fol": "\u00acp_4(Estrella)",
            "str_fol": "\u00acsets_priorities(Estrella)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Estrella",
            "text": "Estrella does not meet deadlines.",
            "fol": "\u00acp_5(Estrella)",
            "str_fol": "\u00acmeets_deadlines(Estrella)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Estrella",
            "text": "Estrella does not navigate orbit.",
            "fol": "\u00acp_3(Estrella)",
            "str_fol": "\u00acnavigates_orbit(Estrella)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Estrella",
            "text": "Estrella is dedicated.",
            "fol": "p_2(Estrella)",
            "str_fol": "is_dedicated(Estrella)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Estrella",
            "text": "Estrella does not have expertise.",
            "fol": "\u00acp_0(Estrella)",
            "str_fol": "\u00achas_expertise(Estrella)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Estrella",
            "text": "Estrella does not lead a team.",
            "fol": "\u00acp_1(Estrella)",
            "str_fol": "\u00acleads_team(Estrella)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Estrella operates a gantry system, then she either builds habitats or designs modules, but not both.",
            "fol": "p_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))",
            "str_fol": "operates_gantry(Estrella) \u2192 (builds_habitat(Estrella) \u2295 designs_module(Estrella))"
        },
        {
            "id": 7,
            "text": "If Estrella either completes her tasks or sets priorities (but not both), then she meets deadlines.",
            "fol": "(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)",
            "str_fol": "(completes_task(Estrella) \u2295 sets_priorities(Estrella)) \u2192 meets_deadlines(Estrella)"
        },
        {
            "id": 6,
            "text": "For all space explorers, if they either navigate orbit or are reliable, then they complete their task.",
            "fol": "\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))",
            "str_fol": "\u2200x ((navigates_orbit(x) \u2295 is_reliable(x)) \u2192 completes_task(x))"
        },
        {
            "id": 5,
            "text": "Every dedicated space explorer either works hard or has expertise.",
            "fol": "\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (is_dedicated(x) \u2192 (works_hard(x) \u2228 has_expertise(x)))"
        },
        {
            "id": 4,
            "text": "If Estrella achieves her goal, then she is reliable.",
            "fol": "p_12(Estrella) \u2192 p_15(Estrella)",
            "str_fol": "achieves_goal(Estrella) \u2192 is_reliable(Estrella)"
        },
        {
            "id": 3,
            "text": "For all space explorers, if they work hard and know engineering, then they can build habitats.",
            "fol": "\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((works_hard(x) \u2227 knows_engineering(x)) \u2192 builds_habitat(x))"
        },
        {
            "id": 2,
            "text": "If Estrella is skilled with robotics or leads a team, then she can achieve her goal.",
            "fol": "(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)",
            "str_fol": "(skilled_with_robotics(Estrella) \u2228 leads_team(Estrella)) \u2192 achieves_goal(Estrella)"
        },
        {
            "id": 1,
            "text": "Estrella either knows engineering or has experience in space construction.",
            "fol": "p_11(Estrella) \u2228 p_9(Estrella)",
            "str_fol": "knows_engineering(Estrella) \u2228 experienced_in_space_construction(Estrella)"
        },
        {
            "id": 0,
            "text": "If Estrella is skilled with robotics or experienced in space construction, then she is successful in her mission.",
            "fol": "(p_8(Estrella) \u2228 p_9(Estrella)) \u2192 p_10(Estrella)",
            "str_fol": "(skilled_with_robotics(Estrella) \u2228 experienced_in_space_construction(Estrella)) \u2192 successful_in_mission(Estrella)"
        }
    ],
    "context_fol": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\n(p_8(Estrella) \u2228 p_9(Estrella)) \u2192 p_10(Estrella)",
    "conclusion": {
        "id": 16,
        "subject": "Estrella",
        "text": "Estrella is not successful in her mission.",
        "fol": "\u00acp_10(Estrella)",
        "str_fol": "\u00acsuccessful_in_mission(Estrella)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_10(Estrella)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Estrella",
                    "text": "Estrella operates a gantry system.",
                    "fol": "p_6(Estrella)",
                    "str_fol": "operates_gantry(Estrella)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Estrella",
                    "text": "Estrella designs modules.",
                    "fol": "p_7(Estrella)",
                    "str_fol": "designs_module(Estrella)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Estrella operates a gantry system, then she either builds habitats or designs modules, but not both.",
                    "fol": "p_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))",
                    "str_fol": "operates_gantry(Estrella) \u2192 (builds_habitat(Estrella) \u2295 designs_module(Estrella))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Estrella",
                "text": "Estrella does not build habitats.",
                "fol": "\u00acp_14(Estrella)",
                "str_fol": "\u00acbuilds_habitat(Estrella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Estrella",
                    "text": "Estrella does not set priorities.",
                    "fol": "\u00acp_4(Estrella)",
                    "str_fol": "\u00acsets_priorities(Estrella)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Estrella",
                    "text": "Estrella does not meet deadlines.",
                    "fol": "\u00acp_5(Estrella)",
                    "str_fol": "\u00acmeets_deadlines(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Estrella either completes her tasks or sets priorities (but not both), then she meets deadlines.",
                    "fol": "(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)",
                    "str_fol": "(completes_task(Estrella) \u2295 sets_priorities(Estrella)) \u2192 meets_deadlines(Estrella)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Estrella",
                "text": "Estrella does not complete her task.",
                "fol": "\u00acp_16(Estrella)",
                "str_fol": "\u00accompletes_task(Estrella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Estrella",
                    "text": "Estrella does not navigate orbit.",
                    "fol": "\u00acp_3(Estrella)",
                    "str_fol": "\u00acnavigates_orbit(Estrella)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Estrella",
                    "text": "Estrella does not complete her task.",
                    "fol": "\u00acp_16(Estrella)",
                    "str_fol": "\u00accompletes_task(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "For all space explorers, if they either navigate orbit or are reliable, then they complete their task.",
                    "fol": "\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))",
                    "str_fol": "\u2200x ((navigates_orbit(x) \u2295 is_reliable(x)) \u2192 completes_task(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Estrella",
                "text": "Estrella is not reliable.",
                "fol": "\u00acp_15(Estrella)",
                "str_fol": "\u00acis_reliable(Estrella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Estrella",
                    "text": "Estrella is dedicated.",
                    "fol": "p_2(Estrella)",
                    "str_fol": "is_dedicated(Estrella)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Estrella",
                    "text": "Estrella does not have expertise.",
                    "fol": "\u00acp_0(Estrella)",
                    "str_fol": "\u00achas_expertise(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Every dedicated space explorer either works hard or has expertise.",
                    "fol": "\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))",
                    "str_fol": "\u2200x (is_dedicated(x) \u2192 (works_hard(x) \u2228 has_expertise(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Estrella",
                "text": "Estrella works hard.",
                "fol": "p_13(Estrella)",
                "str_fol": "works_hard(Estrella)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Estrella",
                    "text": "Estrella is not reliable.",
                    "fol": "\u00acp_15(Estrella)",
                    "str_fol": "\u00acis_reliable(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Estrella achieves her goal, then she is reliable.",
                    "fol": "p_12(Estrella) \u2192 p_15(Estrella)",
                    "str_fol": "achieves_goal(Estrella) \u2192 is_reliable(Estrella)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Estrella",
                "text": "Estrella does not achieve her goal.",
                "fol": "\u00acp_12(Estrella)",
                "str_fol": "\u00acachieves_goal(Estrella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Estrella",
                    "text": "Estrella works hard.",
                    "fol": "p_13(Estrella)",
                    "str_fol": "works_hard(Estrella)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Estrella",
                    "text": "Estrella does not build habitats.",
                    "fol": "\u00acp_14(Estrella)",
                    "str_fol": "\u00acbuilds_habitat(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "For all space explorers, if they work hard and know engineering, then they can build habitats.",
                    "fol": "\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((works_hard(x) \u2227 knows_engineering(x)) \u2192 builds_habitat(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Estrella",
                "text": "Estrella does not know engineering.",
                "fol": "\u00acp_11(Estrella)",
                "str_fol": "\u00acknows_engineering(Estrella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Estrella",
                    "text": "Estrella does not lead a team.",
                    "fol": "\u00acp_1(Estrella)",
                    "str_fol": "\u00acleads_team(Estrella)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Estrella",
                    "text": "Estrella does not achieve her goal.",
                    "fol": "\u00acp_12(Estrella)",
                    "str_fol": "\u00acachieves_goal(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Estrella is skilled with robotics or leads a team, then she can achieve her goal.",
                    "fol": "(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)",
                    "str_fol": "(skilled_with_robotics(Estrella) \u2228 leads_team(Estrella)) \u2192 achieves_goal(Estrella)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Estrella",
                "text": "Estrella is not skilled with robotics.",
                "fol": "\u00acp_8(Estrella)",
                "str_fol": "\u00acskilled_with_robotics(Estrella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Estrella",
                    "text": "Estrella does not know engineering.",
                    "fol": "\u00acp_11(Estrella)",
                    "str_fol": "\u00acknows_engineering(Estrella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Estrella either knows engineering or has experience in space construction.",
                    "fol": "p_11(Estrella) \u2228 p_9(Estrella)",
                    "str_fol": "knows_engineering(Estrella) \u2228 experienced_in_space_construction(Estrella)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Estrella",
                "text": "Estrella is experienced in space construction.",
                "fol": "p_9(Estrella)",
                "str_fol": "experienced_in_space_construction(Estrella)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Estrella",
                    "text": "Estrella is not skilled with robotics.",
                    "fol": "\u00acp_8(Estrella)",
                    "str_fol": "\u00acskilled_with_robotics(Estrella)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Estrella",
                    "text": "Estrella is experienced in space construction.",
                    "fol": "p_9(Estrella)",
                    "str_fol": "experienced_in_space_construction(Estrella)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Estrella is skilled with robotics or experienced in space construction, then she is successful in her mission.",
                    "fol": "(p_8(Estrella) \u2228 p_9(Estrella)) \u2192 p_10(Estrella)",
                    "str_fol": "(skilled_with_robotics(Estrella) \u2228 experienced_in_space_construction(Estrella)) \u2192 successful_in_mission(Estrella)"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Estrella",
                "text": "Estrella is not successful in her mission.",
                "fol": "\u00acp_10(Estrella)",
                "str_fol": "\u00acsuccessful_in_mission(Estrella)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 p_6(Estrella) -> -(p_14(Estrella) <-> p_7(Estrella)).  [assumption].\n4 (all x (p_2(x) -> p_13(x) | p_0(x))).  [assumption].\n6 (all x (p_13(x) & p_11(x) -> p_14(x))).  [assumption].\n8 p_8(Estrella) | p_9(Estrella) -> p_10(Estrella).  [assumption].\n9 --p_10(Estrella).  [goal].\n11 p_6(Estrella).  [assumption].\n12 -p_6(Estrella) | -p_14(Estrella) | -p_7(Estrella).  [clausify(1)].\n13 -p_14(Estrella) | -p_7(Estrella).  [resolve(12,a,11,a)].\n14 p_7(Estrella).  [assumption].\n24 -p_2(x) | p_13(x) | p_0(x).  [clausify(4)].\n25 p_2(Estrella).  [assumption].\n26 p_13(Estrella) | p_0(Estrella).  [resolve(24,a,25,a)].\n27 -p_0(Estrella).  [assumption].\n30 p_13(Estrella).  [resolve(26,b,27,a)].\n31 -p_13(x) | -p_11(x) | p_14(x).  [clausify(6)].\n32 -p_11(Estrella) | p_14(Estrella).  [resolve(30,a,31,a)].\n33 p_11(Estrella) | p_9(Estrella).  [assumption].\n34 p_14(Estrella) | p_9(Estrella).  [resolve(32,a,33,a)].\n35 -p_9(Estrella) | p_10(Estrella).  [clausify(8)].\n36 p_14(Estrella) | p_10(Estrella).  [resolve(34,b,35,a)].\n37 -p_10(Estrella).  [deny(9)].\n38 p_14(Estrella).  [resolve(36,b,37,a)].\n39 -p_14(Estrella).  [resolve(13,b,14,a)].\n42 $F.  [resolve(38,a,39,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\np_2(Estrella) \u2192 \u00acp_10(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella)",
                    "p_7(Estrella)",
                    "-p_4(Estrella)",
                    "-p_5(Estrella)",
                    "-p_3(Estrella)",
                    "p_2(Estrella)",
                    "-p_0(Estrella)",
                    "-p_1(Estrella)",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella)))",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella)",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x))",
                    "all x (p_2(x) -> (p_13(x) | p_0(x)))",
                    "p_12(Estrella) -> p_15(Estrella)",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x))",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella)",
                    "p_11(Estrella) | p_9(Estrella)",
                    "p_2(Estrella) -> -p_10(Estrella)"
                ],
                "formulas(goals)": [
                    "-p_10(Estrella)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_8(Estrella) \u2228 p_9(Estrella)) \u2192 p_10(Estrella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Estrella) \u2192 \u00acp_10(Estrella)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\np_2(Estrella) \u2192 p_10(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella)",
                    "p_7(Estrella)",
                    "-p_4(Estrella)",
                    "-p_5(Estrella)",
                    "-p_3(Estrella)",
                    "p_2(Estrella)",
                    "-p_0(Estrella)",
                    "-p_1(Estrella)",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella)))",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella)",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x))",
                    "all x (p_2(x) -> (p_13(x) | p_0(x)))",
                    "p_12(Estrella) -> p_15(Estrella)",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x))",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella)",
                    "p_11(Estrella) | p_9(Estrella)",
                    "p_2(Estrella) -> p_10(Estrella)"
                ],
                "formulas(goals)": [
                    "p_10(Estrella)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Estrella) \u2192 \u00acp_10(Estrella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Estrella) \u2192 p_10(Estrella)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\np_2(Estrella) \u2192 \u00acp_10(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella)",
                    "p_7(Estrella)",
                    "-p_4(Estrella)",
                    "-p_5(Estrella)",
                    "-p_3(Estrella)",
                    "p_2(Estrella)",
                    "-p_0(Estrella)",
                    "-p_1(Estrella)",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella)))",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella)",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x))",
                    "all x (p_2(x) -> (p_13(x) | p_0(x)))",
                    "p_12(Estrella) -> p_15(Estrella)",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x))",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella)",
                    "p_11(Estrella) | p_9(Estrella)",
                    "p_2(Estrella) -> -p_10(Estrella)"
                ],
                "formulas(goals)": [
                    "-p_10(Estrella)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Estrella) \u2192 p_10(Estrella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Estrella) \u2192 \u00acp_10(Estrella)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\n(p_6(Estrella) \u2194 p_7(Estrella)) \u2192 p_10(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella)",
                    "p_7(Estrella)",
                    "-p_4(Estrella)",
                    "-p_5(Estrella)",
                    "-p_3(Estrella)",
                    "p_2(Estrella)",
                    "-p_0(Estrella)",
                    "-p_1(Estrella)",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella)))",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella)",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x))",
                    "all x (p_2(x) -> (p_13(x) | p_0(x)))",
                    "p_12(Estrella) -> p_15(Estrella)",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x))",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella)",
                    "p_11(Estrella) | p_9(Estrella)",
                    "(p_6(Estrella) <-> p_7(Estrella)) -> p_10(Estrella)"
                ],
                "formulas(goals)": [
                    "-(-p_10(Estrella))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Estrella) \u2192 \u00acp_10(Estrella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00ac(p_6(Estrella) \u2295 p_7(Estrella)) \u2192 p_10(Estrella)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\np_10(Estrella) \u2192 p_5(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella)",
                    "p_7(Estrella)",
                    "-p_4(Estrella)",
                    "-p_5(Estrella)",
                    "-p_3(Estrella)",
                    "p_2(Estrella)",
                    "-p_0(Estrella)",
                    "-p_1(Estrella)",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella)))",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella)",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x))",
                    "all x (p_2(x) -> (p_13(x) | p_0(x)))",
                    "p_12(Estrella) -> p_15(Estrella)",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x))",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella)",
                    "p_11(Estrella) | p_9(Estrella)",
                    "p_10(Estrella) -> p_5(Estrella)"
                ],
                "formulas(goals)": [
                    "-p_10(Estrella)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Estrella) \u2194 p_7(Estrella)) \u2192 p_10(Estrella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Estrella) \u2192 p_5(Estrella)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(p_16(Estrella) \u2295 p_4(Estrella)) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\n\u00acp_11(Estrella) \u2192 p_10(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella)",
                    "p_7(Estrella)",
                    "-p_4(Estrella)",
                    "-p_5(Estrella)",
                    "-p_3(Estrella)",
                    "p_2(Estrella)",
                    "-p_0(Estrella)",
                    "-p_1(Estrella)",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella)))",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella)",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x))",
                    "all x (p_2(x) -> (p_13(x) | p_0(x)))",
                    "p_12(Estrella) -> p_15(Estrella)",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x))",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella)",
                    "p_11(Estrella) | p_9(Estrella)",
                    "-p_11(Estrella) -> p_10(Estrella)"
                ],
                "formulas(goals)": [
                    "p_10(Estrella)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Estrella) \u2192 p_5(Estrella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_11(Estrella) \u2192 p_10(Estrella)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Estrella)\np_7(Estrella)\n\u00acp_4(Estrella)\n\u00acp_5(Estrella)\n\u00acp_3(Estrella)\np_2(Estrella)\n\u00acp_0(Estrella)\n\u00acp_1(Estrella)\np_6(Estrella) \u2192 (p_14(Estrella) \u2295 p_7(Estrella))\n(\u00ac(p_16(Estrella) \u2194 p_4(Estrella))) \u2192 p_5(Estrella)\n\u2200x ((p_3(x) \u2295 p_15(x)) \u2192 p_16(x))\n\u2200x (p_2(x) \u2192 (p_13(x) \u2228 p_0(x)))\np_12(Estrella) \u2192 p_15(Estrella)\n\u2200x ((p_13(x) \u2227 p_11(x)) \u2192 p_14(x))\n(p_8(Estrella) \u2228 p_1(Estrella)) \u2192 p_12(Estrella)\np_11(Estrella) \u2228 p_9(Estrella)\n\u00acp_11(Estrella) \u2192 p_10(Estrella)\n\u00acp_11(Estrella)",
            "Initial Goal": "\u00acp_10(Estrella)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Estrella).",
                    "p_7(Estrella).",
                    "-p_4(Estrella).",
                    "-p_5(Estrella).",
                    "-p_3(Estrella).",
                    "p_2(Estrella).",
                    "-p_0(Estrella).",
                    "-p_1(Estrella).",
                    "p_6(Estrella) -> (-(p_14(Estrella) <-> p_7(Estrella))).",
                    "(-(p_16(Estrella) <-> p_4(Estrella))) -> p_5(Estrella).",
                    "all x ((-(p_3(x) <-> p_15(x))) -> p_16(x)).",
                    "all x (p_2(x) -> (p_13(x) | p_0(x))).",
                    "p_12(Estrella) -> p_15(Estrella).",
                    "all x ((p_13(x) & p_11(x)) -> p_14(x)).",
                    "(p_8(Estrella) | p_1(Estrella)) -> p_12(Estrella).",
                    "p_11(Estrella) | p_9(Estrella).",
                    "-p_11(Estrella) -> p_10(Estrella).",
                    "-p_11(Estrella)."
                ],
                "formulas(goals)": [
                    "-(-p_10(Estrella))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Estrella)"
                ],
                "added_rules": [
                    "(\u00ac(p_16(Estrella) \u2194 p_4(Estrella))) \u2192 p_5(Estrella)"
                ]
            }
        }
    ]
}