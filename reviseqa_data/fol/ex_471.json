{
    "background_story": "Reuben was a romantic poet who often found himself lost in thought, gazing mistily into the distance. His mind would wander to the rolling hills and serene lakes of his childhood, where he would spend hours daydreaming and writing verse. As he grew older, Reuben's love for nature only deepened, and he became known for his dreamy, ethereal poetry that seemed to capture the essence of the misty dawn and the soft, whispery rain. His words were like a gentle fog that enveloped the reader, transporting them to a world of beauty and wonder. Reuben's misty gaze was not just a quirk, but a window into his soul, where the boundaries between reality and fantasy blurred, and the beauty of the world was revealed in all its misty, shimmering glory.",
    "predicates": [
        {
            "id": 0,
            "name": "read_classics"
        },
        {
            "id": 1,
            "name": "is_imaginative"
        },
        {
            "id": 2,
            "name": "compose_music"
        },
        {
            "id": 3,
            "name": "is_creative"
        },
        {
            "id": 4,
            "name": "admire_beauty"
        },
        {
            "id": 5,
            "name": "seek_solace"
        },
        {
            "id": 6,
            "name": "find_inspiration"
        },
        {
            "id": 7,
            "name": "appreciate_nature"
        },
        {
            "id": 8,
            "name": "write_poetry"
        },
        {
            "id": 9,
            "name": "be_romantic"
        },
        {
            "id": 10,
            "name": "paint_landscapes"
        },
        {
            "id": 11,
            "name": "value_sentiment"
        },
        {
            "id": 12,
            "name": "love_dreams"
        },
        {
            "id": 13,
            "name": "feel_emotions"
        },
        {
            "id": 14,
            "name": "express_thoughts"
        },
        {
            "id": 15,
            "name": "enjoy_books"
        },
        {
            "id": 16,
            "name": "daydream"
        },
        {
            "id": 17,
            "name": "capture_essence"
        },
        {
            "id": 18,
            "name": "feel_deeply"
        },
        {
            "id": 19,
            "name": "think_critically"
        },
        {
            "id": 20,
            "name": "see_visions"
        }
    ],
    "subject_name": "Reuben",
    "subject_category": "human",
    "keyword": "mistily",
    "all_facts": [
        {
            "id": 0,
            "subject": "Reuben",
            "text": "Reuben reads classics.",
            "fol": "p_0(Reuben)",
            "str_fol": "read_classics(Reuben)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Reuben",
            "text": "Reuben is imaginative.",
            "fol": "p_1(Reuben)",
            "str_fol": "is_imaginative(Reuben)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Reuben",
            "text": "Reuben does not compose music.",
            "fol": "\u00acp_2(Reuben)",
            "str_fol": "\u00accompose_music(Reuben)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Reuben",
            "text": "Reuben is not creative.",
            "fol": "\u00acp_3(Reuben)",
            "str_fol": "\u00acis_creative(Reuben)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Reuben",
            "text": "Reuben does not admire beauty.",
            "fol": "\u00acp_4(Reuben)",
            "str_fol": "\u00acadmire_beauty(Reuben)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Reuben",
            "text": "Reuben does not seek solace.",
            "fol": "\u00acp_5(Reuben)",
            "str_fol": "\u00acseek_solace(Reuben)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Reuben",
            "text": "Reuben does not find inspiration.",
            "fol": "\u00acp_6(Reuben)",
            "str_fol": "\u00acfind_inspiration(Reuben)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Reuben",
            "text": "Reuben does not love dreams.",
            "fol": "\u00acp_12(Reuben)",
            "str_fol": "\u00aclove_dreams(Reuben)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Reuben",
            "text": "Reuben does not value sentiment.",
            "fol": "\u00acp_11(Reuben)",
            "str_fol": "\u00acvalue_sentiment(Reuben)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Reuben",
            "text": "Reuben does not paint landscapes.",
            "fol": "\u00acp_10(Reuben)",
            "str_fol": "\u00acpaint_landscapes(Reuben)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Reuben",
            "text": "Reuben is not romantic.",
            "fol": "\u00acp_9(Reuben)",
            "str_fol": "\u00acbe_romantic(Reuben)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Reuben",
            "text": "Reuben writes poetry.",
            "fol": "p_8(Reuben)",
            "str_fol": "write_poetry(Reuben)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Reuben",
            "text": "Reuben appreciates nature.",
            "fol": "p_7(Reuben)",
            "str_fol": "appreciate_nature(Reuben)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Reuben",
            "text": "Reuben does not seek solace.",
            "fol": "\u00acp_5(Reuben)",
            "str_fol": "\u00acseek_solace(Reuben)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Reuben",
            "text": "Reuben does not find inspiration.",
            "fol": "\u00acp_6(Reuben)",
            "str_fol": "\u00acfind_inspiration(Reuben)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Reuben",
            "text": "Reuben does not admire beauty.",
            "fol": "\u00acp_4(Reuben)",
            "str_fol": "\u00acadmire_beauty(Reuben)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Reuben",
            "text": "Reuben does not compose music.",
            "fol": "\u00acp_2(Reuben)",
            "str_fol": "\u00accompose_music(Reuben)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Reuben",
            "text": "Reuben is not creative.",
            "fol": "\u00acp_3(Reuben)",
            "str_fol": "\u00acis_creative(Reuben)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Reuben",
            "text": "Reuben reads classics.",
            "fol": "p_0(Reuben)",
            "str_fol": "read_classics(Reuben)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Reuben",
            "text": "Reuben is imaginative.",
            "fol": "p_1(Reuben)",
            "str_fol": "is_imaginative(Reuben)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Everyone who loves dreams either seeks solace or finds inspiration.",
            "fol": "\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (love_dreams(x) \u2192 (seek_solace(x) \u2228 find_inspiration(x)))"
        },
        {
            "id": 4,
            "text": "If Reuben either values sentiment or admires beauty (but not both), then he loves dreams.",
            "fol": "(p_11(Reuben) \u2295 p_4(Reuben)) \u2192 p_12(Reuben)",
            "str_fol": "(value_sentiment(Reuben) \u2295 admire_beauty(Reuben)) \u2192 love_dreams(Reuben)"
        },
        {
            "id": 3,
            "text": "If someone either composes music or paints landscapes (but not both), then they are creative.",
            "fol": "\u2200x ((p_2(x) \u2295 p_10(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((compose_music(x) \u2295 paint_landscapes(x)) \u2192 is_creative(x))"
        },
        {
            "id": 2,
            "text": "If someone is romantic and reads classics, then they value sentiment.",
            "fol": "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((be_romantic(x) \u2227 read_classics(x)) \u2192 value_sentiment(x))"
        },
        {
            "id": 1,
            "text": "If Reuben is imaginative, then he either writes poetry or paints landscapes, but not both.",
            "fol": "p_1(Reuben) \u2192 (p_8(Reuben) \u2295 p_10(Reuben))",
            "str_fol": "is_imaginative(Reuben) \u2192 (write_poetry(Reuben) \u2295 paint_landscapes(Reuben))"
        },
        {
            "id": 0,
            "text": "If Reuben appreciates nature and writes poetry, then he is romantic.",
            "fol": "(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)",
            "str_fol": "(appreciate_nature(Reuben) \u2227 write_poetry(Reuben)) \u2192 be_romantic(Reuben)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Reuben",
            "text": "Reuben does not seek solace.",
            "fol": "\u00acp_5(Reuben)",
            "str_fol": "\u00acseek_solace(Reuben)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Reuben",
            "text": "Reuben does not find inspiration.",
            "fol": "\u00acp_6(Reuben)",
            "str_fol": "\u00acfind_inspiration(Reuben)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Reuben",
            "text": "Reuben does not admire beauty.",
            "fol": "\u00acp_4(Reuben)",
            "str_fol": "\u00acadmire_beauty(Reuben)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Reuben",
            "text": "Reuben does not compose music.",
            "fol": "\u00acp_2(Reuben)",
            "str_fol": "\u00accompose_music(Reuben)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Reuben",
            "text": "Reuben is not creative.",
            "fol": "\u00acp_3(Reuben)",
            "str_fol": "\u00acis_creative(Reuben)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Reuben",
            "text": "Reuben reads classics.",
            "fol": "p_0(Reuben)",
            "str_fol": "read_classics(Reuben)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Reuben",
            "text": "Reuben is imaginative.",
            "fol": "p_1(Reuben)",
            "str_fol": "is_imaginative(Reuben)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Everyone who loves dreams either seeks solace or finds inspiration.",
            "fol": "\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (love_dreams(x) \u2192 (seek_solace(x) \u2228 find_inspiration(x)))"
        },
        {
            "id": 4,
            "text": "If Reuben either values sentiment or admires beauty (but not both), then he loves dreams.",
            "fol": "(p_11(Reuben) \u2295 p_4(Reuben)) \u2192 p_12(Reuben)",
            "str_fol": "(value_sentiment(Reuben) \u2295 admire_beauty(Reuben)) \u2192 love_dreams(Reuben)"
        },
        {
            "id": 3,
            "text": "If someone either composes music or paints landscapes (but not both), then they are creative.",
            "fol": "\u2200x ((p_2(x) \u2295 p_10(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((compose_music(x) \u2295 paint_landscapes(x)) \u2192 is_creative(x))"
        },
        {
            "id": 2,
            "text": "If someone is romantic and reads classics, then they value sentiment.",
            "fol": "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((be_romantic(x) \u2227 read_classics(x)) \u2192 value_sentiment(x))"
        },
        {
            "id": 1,
            "text": "If Reuben is imaginative, then he either writes poetry or paints landscapes, but not both.",
            "fol": "p_1(Reuben) \u2192 (p_8(Reuben) \u2295 p_10(Reuben))",
            "str_fol": "is_imaginative(Reuben) \u2192 (write_poetry(Reuben) \u2295 paint_landscapes(Reuben))"
        },
        {
            "id": 0,
            "text": "If Reuben appreciates nature and writes poetry, then he is romantic.",
            "fol": "(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)",
            "str_fol": "(appreciate_nature(Reuben) \u2227 write_poetry(Reuben)) \u2192 be_romantic(Reuben)"
        }
    ],
    "context_fol": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n(p_11(Reuben) \u2295 p_4(Reuben)) \u2192 p_12(Reuben)\n\u2200x ((p_2(x) \u2295 p_10(x)) \u2192 p_3(x))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_11(x))\np_1(Reuben) \u2192 (p_8(Reuben) \u2295 p_10(Reuben))\n(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)",
    "conclusion": {
        "id": 12,
        "subject": "Reuben",
        "text": "Reuben appreciates nature.",
        "fol": "p_7(Reuben)",
        "str_fol": "appreciate_nature(Reuben)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_7(Reuben)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Reuben",
                    "text": "Reuben does not seek solace.",
                    "fol": "\u00acp_5(Reuben)",
                    "str_fol": "\u00acseek_solace(Reuben)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Reuben",
                    "text": "Reuben does not find inspiration.",
                    "fol": "\u00acp_6(Reuben)",
                    "str_fol": "\u00acfind_inspiration(Reuben)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone who loves dreams either seeks solace or finds inspiration.",
                    "fol": "\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))",
                    "str_fol": "\u2200x (love_dreams(x) \u2192 (seek_solace(x) \u2228 find_inspiration(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Reuben",
                "text": "Reuben does not love dreams.",
                "fol": "\u00acp_12(Reuben)",
                "str_fol": "\u00aclove_dreams(Reuben)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Reuben",
                    "text": "Reuben does not admire beauty.",
                    "fol": "\u00acp_4(Reuben)",
                    "str_fol": "\u00acadmire_beauty(Reuben)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Reuben",
                    "text": "Reuben does not love dreams.",
                    "fol": "\u00acp_12(Reuben)",
                    "str_fol": "\u00aclove_dreams(Reuben)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Reuben either values sentiment or admires beauty (but not both), then he loves dreams.",
                    "fol": "(p_11(Reuben) \u2295 p_4(Reuben)) \u2192 p_12(Reuben)",
                    "str_fol": "(value_sentiment(Reuben) \u2295 admire_beauty(Reuben)) \u2192 love_dreams(Reuben)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Reuben",
                "text": "Reuben does not value sentiment.",
                "fol": "\u00acp_11(Reuben)",
                "str_fol": "\u00acvalue_sentiment(Reuben)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Reuben",
                    "text": "Reuben does not compose music.",
                    "fol": "\u00acp_2(Reuben)",
                    "str_fol": "\u00accompose_music(Reuben)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Reuben",
                    "text": "Reuben is not creative.",
                    "fol": "\u00acp_3(Reuben)",
                    "str_fol": "\u00acis_creative(Reuben)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone either composes music or paints landscapes (but not both), then they are creative.",
                    "fol": "\u2200x ((p_2(x) \u2295 p_10(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((compose_music(x) \u2295 paint_landscapes(x)) \u2192 is_creative(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Reuben",
                "text": "Reuben does not paint landscapes.",
                "fol": "\u00acp_10(Reuben)",
                "str_fol": "\u00acpaint_landscapes(Reuben)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Reuben",
                    "text": "Reuben reads classics.",
                    "fol": "p_0(Reuben)",
                    "str_fol": "read_classics(Reuben)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Reuben",
                    "text": "Reuben does not value sentiment.",
                    "fol": "\u00acp_11(Reuben)",
                    "str_fol": "\u00acvalue_sentiment(Reuben)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone is romantic and reads classics, then they value sentiment.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((be_romantic(x) \u2227 read_classics(x)) \u2192 value_sentiment(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Reuben",
                "text": "Reuben is not romantic.",
                "fol": "\u00acp_9(Reuben)",
                "str_fol": "\u00acbe_romantic(Reuben)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Reuben",
                    "text": "Reuben is imaginative.",
                    "fol": "p_1(Reuben)",
                    "str_fol": "is_imaginative(Reuben)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Reuben",
                    "text": "Reuben does not paint landscapes.",
                    "fol": "\u00acp_10(Reuben)",
                    "str_fol": "\u00acpaint_landscapes(Reuben)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Reuben is imaginative, then he either writes poetry or paints landscapes, but not both.",
                    "fol": "p_1(Reuben) \u2192 (p_8(Reuben) \u2295 p_10(Reuben))",
                    "str_fol": "is_imaginative(Reuben) \u2192 (write_poetry(Reuben) \u2295 paint_landscapes(Reuben))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Reuben",
                "text": "Reuben writes poetry.",
                "fol": "p_8(Reuben)",
                "str_fol": "write_poetry(Reuben)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Reuben",
                    "text": "Reuben writes poetry.",
                    "fol": "p_8(Reuben)",
                    "str_fol": "write_poetry(Reuben)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Reuben",
                    "text": "Reuben is not romantic.",
                    "fol": "\u00acp_9(Reuben)",
                    "str_fol": "\u00acbe_romantic(Reuben)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Reuben appreciates nature and writes poetry, then he is romantic.",
                    "fol": "(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)",
                    "str_fol": "(appreciate_nature(Reuben) \u2227 write_poetry(Reuben)) \u2192 be_romantic(Reuben)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Reuben",
                "text": "Reuben appreciates nature.",
                "fol": "p_7(Reuben)",
                "str_fol": "appreciate_nature(Reuben)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_12(x) -> p_5(x) | p_6(x))).  [assumption].\n2 -(p_11(Reuben) <-> p_4(Reuben)) -> p_12(Reuben).  [assumption].\n3 (all x (-(p_2(x) <-> p_10(x)) -> p_3(x))).  [assumption].\n4 (all x (p_9(x) & p_0(x) -> p_11(x))).  [assumption].\n5 p_1(Reuben) -> -(p_8(Reuben) <-> p_10(Reuben)).  [assumption].\n6 p_7(Reuben) & p_8(Reuben) -> p_9(Reuben).  [assumption].\n7 -p_7(Reuben).  [goal].\n8 -p_12(x) | p_5(x) | p_6(x).  [clausify(1)].\n9 -p_5(Reuben).  [assumption].\n10 -p_12(Reuben) | p_6(Reuben).  [resolve(8,b,9,a)].\n11 -p_6(Reuben).  [assumption].\n12 -p_11(Reuben) | p_4(Reuben) | p_12(Reuben).  [clausify(2)].\n13 -p_4(Reuben).  [assumption].\n15 p_2(x) | -p_10(x) | p_3(x).  [clausify(3)].\n16 -p_2(Reuben).  [assumption].\n18 -p_10(Reuben) | p_3(Reuben).  [resolve(15,a,16,a)].\n19 -p_3(Reuben).  [assumption].\n20 -p_9(x) | -p_0(x) | p_11(x).  [clausify(4)].\n21 p_0(Reuben).  [assumption].\n22 -p_1(Reuben) | p_8(Reuben) | p_10(Reuben).  [clausify(5)].\n23 p_1(Reuben).  [assumption].\n25 p_7(Reuben).  [deny(7)].\n26 -p_7(Reuben) | -p_8(Reuben) | p_9(Reuben).  [clausify(6)].\n27 -p_11(Reuben) | p_12(Reuben).  [resolve(12,b,13,a)].\n28 -p_12(Reuben).  [resolve(10,b,11,a)].\n29 p_8(Reuben) | p_10(Reuben).  [resolve(22,a,23,a)].\n30 -p_10(Reuben).  [resolve(18,b,19,a)].\n31 -p_8(Reuben) | p_9(Reuben).  [resolve(25,a,26,a)].\n32 -p_9(Reuben) | p_11(Reuben).  [resolve(20,b,21,a)].\n33 -p_8(Reuben) | p_11(Reuben).  [resolve(31,b,32,a)].\n34 -p_11(Reuben).  [resolve(27,b,28,a)].\n35 -p_8(Reuben).  [resolve(33,b,34,a)].\n36 p_8(Reuben).  [resolve(29,b,30,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_12(x))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2192 (\u00acp_9(x) \u2228 \u00acp_0(x)))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reuben).",
                    "-p_6(Reuben).",
                    "-p_4(Reuben).",
                    "-p_2(Reuben).",
                    "-p_3(Reuben).",
                    "p_0(Reuben).",
                    "p_1(Reuben).",
                    "all x ((-p_5(x) & -p_6(x)) -> -p_12(x)).",
                    "((p_11(Reuben) | p_4(Reuben)) & -(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben).",
                    "all x (((p_2(x) | p_10(x)) & -(p_2(x) & p_10(x))) -> p_3(x)).",
                    "all x (-p_11(x) -> (-p_9(x) | -p_0(x))).",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & -(p_8(Reuben) & p_10(Reuben))).",
                    "(p_7(Reuben) & p_8(Reuben)) -> p_9(Reuben)."
                ],
                "formulas(goals)": [
                    "-p_7(Reuben)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))",
                    "(p_11(Reuben) \u2295 p_4(Reuben)) \u2192 p_12(Reuben)",
                    "\u2200x ((p_2(x) \u2295 p_10(x)) \u2192 p_3(x))",
                    "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_11(x))",
                    "p_1(Reuben) \u2192 (p_8(Reuben) \u2295 p_10(Reuben))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_12(x))",
                    "((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)",
                    "\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))",
                    "\u2200x (\u00acp_11(x) \u2192 (\u00acp_9(x) \u2228 \u00acp_0(x)))",
                    "p_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2192 (\u00acp_9(x) \u2228 \u00acp_0(x)))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)\n\u00acp_11(Reuben)\n\u00acp_9(Reuben)\n\u00acp_10(Reuben)\np_8(Reuben)",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reuben)",
                    "-p_6(Reuben)",
                    "-p_4(Reuben)",
                    "-p_2(Reuben)",
                    "-p_3(Reuben)",
                    "p_0(Reuben)",
                    "p_1(Reuben)",
                    "all x (p_12(x) -> (p_5(x) | p_6(x)))",
                    "((p_11(Reuben) | p_4(Reuben)) & -(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben)",
                    "all x (((p_2(x) | p_10(x)) & -(p_2(x) & p_10(x))) -> p_3(x))",
                    "all x (-p_11(x) -> (-p_9(x) | -p_0(x)))",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & -(p_8(Reuben) & p_10(Reuben)))",
                    "(p_7(Reuben) & p_8(Reuben)) -> p_9(Reuben)",
                    "-p_11(Reuben)",
                    "-p_9(Reuben)",
                    "-p_10(Reuben)",
                    "p_8(Reuben)"
                ],
                "formulas(goals)": [
                    "-p_7(Reuben)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Reuben)",
                    "\u00acp_9(Reuben)",
                    "\u00acp_10(Reuben)",
                    "p_8(Reuben)"
                ],
                "added_rules": [
                    "\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n\u00acp_11(Reuben)\n\u00acp_9(Reuben)\n\u00acp_10(Reuben)\np_8(Reuben)\np_8(Reuben) \u2192 p_7(Reuben)",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reuben)",
                    "-p_6(Reuben)",
                    "-p_4(Reuben)",
                    "-p_2(Reuben)",
                    "-p_3(Reuben)",
                    "p_0(Reuben)",
                    "p_1(Reuben)",
                    "all x (p_12(x) -> (p_5(x) | p_6(x)))",
                    "((p_11(Reuben) | p_4(Reuben)) & -(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben)",
                    "all x (((p_2(x) | p_10(x)) & -(p_2(x) & p_10(x))) -> p_3(x))",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & -(p_8(Reuben) & p_10(Reuben)))",
                    "-p_11(Reuben)",
                    "-p_9(Reuben)",
                    "-p_10(Reuben)",
                    "p_8(Reuben)",
                    "p_8(Reuben) -> p_7(Reuben)"
                ],
                "formulas(goals)": [
                    "p_7(Reuben)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_11(x) \u2192 (\u00acp_9(x) \u2228 \u00acp_0(x)))",
                    "(p_7(Reuben) \u2227 p_8(Reuben)) \u2192 p_9(Reuben)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Reuben) \u2192 p_7(Reuben)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n\u00acp_11(Reuben)\n\u00acp_9(Reuben)\n\u00acp_10(Reuben)\np_8(Reuben)\np_8(Reuben) \u2192 p_7(Reuben)\np_7(Reuben)\n\u00acp_8(Reuben) \u2228 p_7(Reuben)\n\u2200x (\u00acp_12(x) \u2228 p_5(x) \u2228 p_6(x))",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reuben)",
                    "-p_6(Reuben)",
                    "-p_4(Reuben)",
                    "-p_2(Reuben)",
                    "-p_3(Reuben)",
                    "p_0(Reuben)",
                    "p_1(Reuben)",
                    "all x (p_12(x) -> (p_5(x) | p_6(x)))",
                    "((p_11(Reuben) | p_4(Reuben)) & -(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben)",
                    "all x (((p_2(x) | p_10(x)) & -(p_2(x) & p_10(x))) -> p_3(x))",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & -(p_8(Reuben) & p_10(Reuben)))",
                    "-p_11(Reuben)",
                    "-p_9(Reuben)",
                    "-p_10(Reuben)",
                    "p_8(Reuben)",
                    "p_8(Reuben) -> p_7(Reuben)",
                    "p_7(Reuben)",
                    "-p_8(Reuben) | p_7(Reuben)",
                    "all x (-p_12(x) | p_5(x) | p_6(x))"
                ],
                "formulas(goals)": [
                    "p_7(Reuben)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Reuben)"
                ],
                "added_rules": [
                    "\u00acp_8(Reuben) \u2228 p_7(Reuben)",
                    "\u2200x (\u00acp_12(x) \u2228 p_5(x) \u2228 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n\u00acp_11(Reuben)\n\u00acp_9(Reuben)\n\u00acp_10(Reuben)\np_8(Reuben)\np_8(Reuben) \u2192 p_7(Reuben)\np_7(Reuben)\n\u00acp_8(Reuben) \u2228 p_7(Reuben)\n\u2200x (\u00acp_12(x) \u2228 p_5(x) \u2228 p_6(x))\n\u00acp_7(Reuben) \u2192 \u00acp_8(Reuben)\np_1(Reuben) \u2192 \u00ac(p_8(Reuben) \u2194 p_10(Reuben))\n\u00ac(p_11(Reuben) \u2194 p_4(Reuben)) \u2192 p_12(Reuben)\n\u2200x (\u00ac(p_2(x) \u2194 p_10(x)) \u2192 p_3(x))\n\u2200x (p_3(x) \u2192 p_3(x))",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reuben)",
                    "-p_6(Reuben)",
                    "-p_4(Reuben)",
                    "-p_2(Reuben)",
                    "-p_3(Reuben)",
                    "p_0(Reuben)",
                    "p_1(Reuben)",
                    "all x (p_12(x) -> (p_5(x) | p_6(x)))",
                    "((p_11(Reuben) | p_4(Reuben)) & -(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben)",
                    "all x (((p_2(x) | p_10(x)) & -(p_2(x) & p_10(x))) -> p_3(x))",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & -(p_8(Reuben) & p_10(Reuben)))",
                    "-p_11(Reuben)",
                    "-p_9(Reuben)",
                    "-p_10(Reuben)",
                    "p_8(Reuben)",
                    "p_8(Reuben) -> p_7(Reuben)",
                    "p_7(Reuben)",
                    "-p_8(Reuben) | p_7(Reuben)",
                    "all x (-p_12(x) | p_5(x) | p_6(x))",
                    "-p_7(Reuben) -> -p_8(Reuben)",
                    "p_1(Reuben) -> (-(p_8(Reuben) <-> p_10(Reuben)))",
                    "(-(p_11(Reuben) <-> p_4(Reuben))) -> p_12(Reuben)",
                    "all x (-(p_2(x) <-> p_10(x)) -> p_3(x))",
                    "all x (p_3(x) -> p_3(x))"
                ],
                "formulas(goals)": [
                    "p_7(Reuben)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_5(x) \u2227 \u00acp_6(x) \u2192 \u00acp_12(x))",
                    "\u2200x (p_3(x) \u2192 p_3(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n\u00acp_11(Reuben)\n\u00acp_9(Reuben)\n\u00acp_10(Reuben)\n\u00acp_8(Reuben)\np_8(Reuben) \u2192 p_7(Reuben)\n\u00acp_7(Reuben)\n\u00acp_8(Reuben) \u2228 p_7(Reuben)\n\u2200x (\u00acp_12(x) \u2228 p_5(x) \u2228 p_6(x))\n\u00acp_7(Reuben) \u2192 \u00acp_8(Reuben)\np_1(Reuben) \u2192 \u00ac(p_8(Reuben) \u2194 p_10(Reuben))\n\u00ac(p_11(Reuben) \u2194 p_4(Reuben)) \u2192 p_12(Reuben)\n\u2200x (\u00ac(p_2(x) \u2194 p_10(x)) \u2192 p_3(x))\n\u2200x (p_3(x) \u2192 p_3(x))",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reuben).",
                    "-p_6(Reuben).",
                    "-p_4(Reuben).",
                    "-p_2(Reuben).",
                    "-p_3(Reuben).",
                    "p_0(Reuben).",
                    "p_1(Reuben).",
                    "all x (p_12(x) -> (p_5(x) | p_6(x))).",
                    "((p_11(Reuben) | p_4(Reuben)) & -(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben).",
                    "all x (((p_2(x) | p_10(x)) & -(p_2(x) & p_10(x))) -> p_3(x)).",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & -(p_8(Reuben) & p_10(Reuben))).",
                    "-p_11(Reuben).",
                    "-p_9(Reuben).",
                    "-p_10(Reuben).",
                    "-p_8(Reuben).",
                    "p_8(Reuben) -> p_7(Reuben).",
                    "-p_7(Reuben).",
                    "-p_8(Reuben) | p_7(Reuben).",
                    "all x (-p_12(x) | p_5(x) | p_6(x)).",
                    "-p_7(Reuben) -> -p_8(Reuben).",
                    "p_1(Reuben) -> -(p_8(Reuben) <-> p_10(Reuben)).",
                    "-(p_11(Reuben) <-> p_4(Reuben)) -> p_12(Reuben).",
                    "all x (-(p_2(x) <-> p_10(x)) -> p_3(x)).",
                    "all x (p_3(x) -> p_3(x))."
                ],
                "formulas(goals)": [
                    "-p_7(Reuben)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_8(Reuben)",
                    "p_7(Reuben)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Reuben)",
                    "\u00acp_7(Reuben)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Reuben)\n\u00acp_6(Reuben)\n\u00acp_4(Reuben)\n\u00acp_2(Reuben)\n\u00acp_3(Reuben)\np_0(Reuben)\np_1(Reuben)\n\u2200x (p_12(x) \u2192 (p_5(x) \u2228 p_6(x)))\n((p_11(Reuben) \u2228 p_4(Reuben)) \u2227 \u00ac(p_11(Reuben) \u2227 p_4(Reuben))) \u2192 p_12(Reuben)\n\u2200x (((p_2(x) \u2228 p_10(x)) \u2227 \u00ac(p_2(x) \u2227 p_10(x))) \u2192 p_3(x))\np_1(Reuben) \u2192 ((p_8(Reuben) \u2228 p_10(Reuben)) \u2227 \u00ac(p_8(Reuben) \u2227 p_10(Reuben)))\n\u00acp_11(Reuben)\n\u00acp_9(Reuben)\n\u00acp_10(Reuben)\np_8(Reuben) \u2192 p_7(Reuben)\n\u00acp_8(Reuben) \u2228 p_7(Reuben)\n\u2200x (\u00acp_12(x) \u2228 p_5(x) \u2228 p_6(x))\n\u00acp_7(Reuben) \u2192 \u00acp_8(Reuben)\np_1(Reuben) \u2192 \u00ac(p_8(Reuben) \u2194 p_10(Reuben))\n\u00ac(p_11(Reuben) \u2194 p_4(Reuben)) \u2192 p_12(Reuben)\n\u2200x (\u00ac(p_2(x) \u2194 p_10(x)) \u2192 p_3(x))\n\u2200x (p_3(x) \u2192 p_3(x))\np_8(Reuben)",
            "Initial Goal": "p_7(Reuben)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_5(Reuben)",
                    "\u00acp_6(Reuben)",
                    "\u00acp_4(Reuben)",
                    "\u00acp_2(Reuben)",
                    "\u00acp_3(Reuben)",
                    "p_0(Reuben)",
                    "p_1(Reuben)",
                    "all x (p_12(x) -> (p_5(x) | p_6(x)))",
                    "((p_11(Reuben) | p_4(Reuben)) & \u00ac(p_11(Reuben) & p_4(Reuben))) -> p_12(Reuben)",
                    "all x (((p_2(x) | p_10(x)) & \u00ac(p_2(x) & p_10(x))) -> p_3(x))",
                    "p_1(Reuben) -> ((p_8(Reuben) | p_10(Reuben)) & \u00ac(p_8(Reuben) & p_10(Reuben)))",
                    "\u00acp_11(Reuben)",
                    "\u00acp_9(Reuben)",
                    "\u00acp_10(Reuben)",
                    "p_8(Reuben) -> p_7(Reuben)",
                    "\u00acp_8(Reuben) | p_7(Reuben)",
                    "all x (\u00acp_12(x) | p_5(x) | p_6(x))",
                    "\u00acp_7(Reuben) -> \u00acp_8(Reuben)",
                    "p_1(Reuben) -> \u00ac(p_8(Reuben) <-> p_10(Reuben))",
                    "\u00ac(p_11(Reuben) <-> p_4(Reuben)) -> p_12(Reuben)",
                    "all x (\u00ac(p_2(x) <-> p_10(x)) -> p_3(x))",
                    "all x (p_3(x) -> p_3(x))",
                    "p_8(Reuben)"
                ],
                "formulas(goals)": [
                    "p_7(Reuben)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Reuben)",
                    "\u00acp_8(Reuben)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Reuben)"
                ],
                "added_rules": []
            }
        }
    ]
}