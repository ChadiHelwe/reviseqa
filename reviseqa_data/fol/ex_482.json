{
    "background_story": "Andi grew up in a large, bustling household where it was easy to get lost in the crowd. With multiple siblings and working parents, she often felt like an afterthought. Her parents, though well-intentioned, were frequently too distracted to attend school events or parent-teacher conferences. As a result, Andi's academic and emotional needs were neglected, leaving her feeling isolated and unimportant. She struggled to find her place, often turning to solitary activities like reading and drawing. Despite the neglect, Andi found solace in her art, using it as an outlet to express her feelings and tell her story. With the help of a caring teacher, Andi began to flourish, discovering a talent and passion that would eventually become her escape and her salvation.",
    "predicates": [
        {
            "id": 0,
            "name": "needs_affection"
        },
        {
            "id": 1,
            "name": "reads_often"
        },
        {
            "id": 2,
            "name": "creative"
        },
        {
            "id": 3,
            "name": "is_authentic"
        },
        {
            "id": 4,
            "name": "writes_poetry"
        },
        {
            "id": 5,
            "name": "draws_comics"
        },
        {
            "id": 6,
            "name": "daydreams"
        },
        {
            "id": 7,
            "name": "neglected"
        },
        {
            "id": 8,
            "name": "emotional"
        },
        {
            "id": 9,
            "name": "sensitive_soul"
        },
        {
            "id": 10,
            "name": "is_introspective"
        },
        {
            "id": 11,
            "name": "expresses_deeply"
        },
        {
            "id": 12,
            "name": "is_artistic"
        },
        {
            "id": 13,
            "name": "tell_stories"
        },
        {
            "id": 14,
            "name": "has_imagination"
        },
        {
            "id": 15,
            "name": "solve_problems"
        },
        {
            "id": 16,
            "name": "rebellious"
        },
        {
            "id": 17,
            "name": "lacks_support"
        },
        {
            "id": 18,
            "name": "feels_alone"
        },
        {
            "id": 19,
            "name": "is_vulnerable"
        },
        {
            "id": 20,
            "name": "is_empowered"
        },
        {
            "id": 21,
            "name": "likes_alone"
        },
        {
            "id": 22,
            "name": "thinks_deeply"
        },
        {
            "id": 23,
            "name": "keeps_journal"
        },
        {
            "id": 24,
            "name": "listens_music"
        },
        {
            "id": 25,
            "name": "feels_passion"
        },
        {
            "id": 26,
            "name": "values_individuality"
        },
        {
            "id": 27,
            "name": "speaks_vividly"
        },
        {
            "id": 28,
            "name": "thinks_symbolic"
        },
        {
            "id": 29,
            "name": "thinks_freely"
        },
        {
            "id": 30,
            "name": "dreams_big"
        }
    ],
    "subject_name": "Andi",
    "subject_category": "human",
    "keyword": "neglected",
    "all_facts": [
        {
            "id": 0,
            "subject": "Andi",
            "text": "Andi does not need affection.",
            "fol": "\u00acp_0(Andi)",
            "str_fol": "\u00acneeds_affection(Andi)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Andi",
            "text": "Andi reads often.",
            "fol": "p_1(Andi)",
            "str_fol": "reads_often(Andi)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Andi",
            "text": "Andi is not creative.",
            "fol": "\u00acp_2(Andi)",
            "str_fol": "\u00accreative(Andi)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Andi",
            "text": "Andi is authentic.",
            "fol": "p_3(Andi)",
            "str_fol": "is_authentic(Andi)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Andi",
            "text": "Andi does not write poetry.",
            "fol": "\u00acp_4(Andi)",
            "str_fol": "\u00acwrites_poetry(Andi)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Andi",
            "text": "Andi draws comics.",
            "fol": "p_5(Andi)",
            "str_fol": "draws_comics(Andi)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Andi",
            "text": "Andi does not daydream.",
            "fol": "\u00acp_6(Andi)",
            "str_fol": "\u00acdaydreams(Andi)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Andi",
            "text": "Andi tells stories.",
            "fol": "p_13(Andi)",
            "str_fol": "tell_stories(Andi)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Andi",
            "text": "Andi is artistic.",
            "fol": "p_12(Andi)",
            "str_fol": "is_artistic(Andi)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Andi",
            "text": "Andi does not express herself deeply.",
            "fol": "\u00acp_11(Andi)",
            "str_fol": "\u00acexpresses_deeply(Andi)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Andi",
            "text": "Andi is not introspective.",
            "fol": "\u00acp_10(Andi)",
            "str_fol": "\u00acis_introspective(Andi)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Andi",
            "text": "Andi is a sensitive soul.",
            "fol": "p_9(Andi)",
            "str_fol": "sensitive_soul(Andi)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Andi",
            "text": "Andi is emotional.",
            "fol": "p_8(Andi)",
            "str_fol": "emotional(Andi)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Andi",
            "text": "Andi does not daydream.",
            "fol": "\u00acp_6(Andi)",
            "str_fol": "\u00acdaydreams(Andi)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Andi",
            "text": "Andi does not write poetry.",
            "fol": "\u00acp_4(Andi)",
            "str_fol": "\u00acwrites_poetry(Andi)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Andi",
            "text": "Andi draws comics.",
            "fol": "p_5(Andi)",
            "str_fol": "draws_comics(Andi)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Andi",
            "text": "Andi is authentic.",
            "fol": "p_3(Andi)",
            "str_fol": "is_authentic(Andi)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Andi",
            "text": "Andi reads often.",
            "fol": "p_1(Andi)",
            "str_fol": "reads_often(Andi)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Andi",
            "text": "Andi does not need affection.",
            "fol": "\u00acp_0(Andi)",
            "str_fol": "\u00acneeds_affection(Andi)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Andi",
            "text": "Andi is not creative.",
            "fol": "\u00acp_2(Andi)",
            "str_fol": "\u00accreative(Andi)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Andi daydreams, then she has imagination and can solve problems.",
            "fol": "p_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))",
            "str_fol": "daydreams(Andi) \u2192 (has_imagination(Andi) \u2227 solve_problems(Andi))"
        },
        {
            "id": 6,
            "text": "If someone either writes poetry or draws comics (but not both), then they tell stories.",
            "fol": "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((writes_poetry(x) \u2295 draws_comics(x)) \u2192 tell_stories(x))"
        },
        {
            "id": 5,
            "text": "If someone tells stories, then they are artistic and have imagination.",
            "fol": "\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))",
            "str_fol": "\u2200x (tell_stories(x) \u2192 (is_artistic(x) \u2227 has_imagination(x)))"
        },
        {
            "id": 4,
            "text": "If Andi expresses herself deeply, then she is either artistic or authentic, but not both.",
            "fol": "p_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))",
            "str_fol": "expresses_deeply(Andi) \u2192 (is_artistic(Andi) \u2295 is_authentic(Andi))"
        },
        {
            "id": 3,
            "text": "For all humans, if they read often and are introspective, then they express themselves deeply.",
            "fol": "\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((reads_often(x) \u2227 is_introspective(x)) \u2192 expresses_deeply(x))"
        },
        {
            "id": 2,
            "text": "Andi is either introspective or a sensitive soul, but being one does not necessarily mean she is the other.",
            "fol": "p_10(Andi) \u2295 p_9(Andi)",
            "str_fol": "is_introspective(Andi) \u2295 sensitive_soul(Andi)"
        },
        {
            "id": 1,
            "text": "For all humans, if they are either emotional or a sensitive soul, then they need affection.",
            "fol": "\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((emotional(x) \u2295 sensitive_soul(x)) \u2192 needs_affection(x))"
        },
        {
            "id": 0,
            "text": "If Andi is neglected, then she is emotional.",
            "fol": "p_7(Andi) \u2192 p_8(Andi)",
            "str_fol": "neglected(Andi) \u2192 emotional(Andi)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Andi",
            "text": "Andi does not daydream.",
            "fol": "\u00acp_6(Andi)",
            "str_fol": "\u00acdaydreams(Andi)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Andi",
            "text": "Andi does not write poetry.",
            "fol": "\u00acp_4(Andi)",
            "str_fol": "\u00acwrites_poetry(Andi)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Andi",
            "text": "Andi draws comics.",
            "fol": "p_5(Andi)",
            "str_fol": "draws_comics(Andi)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Andi",
            "text": "Andi is authentic.",
            "fol": "p_3(Andi)",
            "str_fol": "is_authentic(Andi)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Andi",
            "text": "Andi reads often.",
            "fol": "p_1(Andi)",
            "str_fol": "reads_often(Andi)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Andi",
            "text": "Andi does not need affection.",
            "fol": "\u00acp_0(Andi)",
            "str_fol": "\u00acneeds_affection(Andi)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Andi",
            "text": "Andi is not creative.",
            "fol": "\u00acp_2(Andi)",
            "str_fol": "\u00accreative(Andi)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If Andi daydreams, then she has imagination and can solve problems.",
            "fol": "p_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))",
            "str_fol": "daydreams(Andi) \u2192 (has_imagination(Andi) \u2227 solve_problems(Andi))"
        },
        {
            "id": 6,
            "text": "If someone either writes poetry or draws comics (but not both), then they tell stories.",
            "fol": "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((writes_poetry(x) \u2295 draws_comics(x)) \u2192 tell_stories(x))"
        },
        {
            "id": 5,
            "text": "If someone tells stories, then they are artistic and have imagination.",
            "fol": "\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))",
            "str_fol": "\u2200x (tell_stories(x) \u2192 (is_artistic(x) \u2227 has_imagination(x)))"
        },
        {
            "id": 4,
            "text": "If Andi expresses herself deeply, then she is either artistic or authentic, but not both.",
            "fol": "p_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))",
            "str_fol": "expresses_deeply(Andi) \u2192 (is_artistic(Andi) \u2295 is_authentic(Andi))"
        },
        {
            "id": 3,
            "text": "For all humans, if they read often and are introspective, then they express themselves deeply.",
            "fol": "\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((reads_often(x) \u2227 is_introspective(x)) \u2192 expresses_deeply(x))"
        },
        {
            "id": 2,
            "text": "Andi is either introspective or a sensitive soul, but being one does not necessarily mean she is the other.",
            "fol": "p_10(Andi) \u2295 p_9(Andi)",
            "str_fol": "is_introspective(Andi) \u2295 sensitive_soul(Andi)"
        },
        {
            "id": 1,
            "text": "For all humans, if they are either emotional or a sensitive soul, then they need affection.",
            "fol": "\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((emotional(x) \u2295 sensitive_soul(x)) \u2192 needs_affection(x))"
        },
        {
            "id": 0,
            "text": "If Andi is neglected, then she is emotional.",
            "fol": "p_7(Andi) \u2192 p_8(Andi)",
            "str_fol": "neglected(Andi) \u2192 emotional(Andi)"
        }
    ],
    "context_fol": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\n\u00acp_2(Andi)\np_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)",
    "conclusion": {
        "id": 16,
        "text": "If Andi is neglected, then she is either rebellious or creative, but not both.",
        "fol": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
        "str_fol": "neglected(Andi) \u2192 (rebellious(Andi) \u2295 creative(Andi))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Andi",
                    "text": "Andi does not daydream.",
                    "fol": "\u00acp_6(Andi)",
                    "str_fol": "\u00acdaydreams(Andi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Andi daydreams, then she has imagination and can solve problems.",
                    "fol": "p_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))",
                    "str_fol": "daydreams(Andi) \u2192 (has_imagination(Andi) \u2227 solve_problems(Andi))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Andi",
                    "text": "Andi does not write poetry.",
                    "fol": "\u00acp_4(Andi)",
                    "str_fol": "\u00acwrites_poetry(Andi)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Andi",
                    "text": "Andi draws comics.",
                    "fol": "p_5(Andi)",
                    "str_fol": "draws_comics(Andi)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone either writes poetry or draws comics (but not both), then they tell stories.",
                    "fol": "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((writes_poetry(x) \u2295 draws_comics(x)) \u2192 tell_stories(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Andi",
                "text": "Andi tells stories.",
                "fol": "p_13(Andi)",
                "str_fol": "tell_stories(Andi)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Andi",
                    "text": "Andi tells stories.",
                    "fol": "p_13(Andi)",
                    "str_fol": "tell_stories(Andi)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone tells stories, then they are artistic and have imagination.",
                    "fol": "\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))",
                    "str_fol": "\u2200x (tell_stories(x) \u2192 (is_artistic(x) \u2227 has_imagination(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Andi",
                "text": "Andi is artistic.",
                "fol": "p_12(Andi)",
                "str_fol": "is_artistic(Andi)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Andi",
                    "text": "Andi is artistic.",
                    "fol": "p_12(Andi)",
                    "str_fol": "is_artistic(Andi)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Andi",
                    "text": "Andi is authentic.",
                    "fol": "p_3(Andi)",
                    "str_fol": "is_authentic(Andi)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Andi expresses herself deeply, then she is either artistic or authentic, but not both.",
                    "fol": "p_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))",
                    "str_fol": "expresses_deeply(Andi) \u2192 (is_artistic(Andi) \u2295 is_authentic(Andi))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Andi",
                "text": "Andi does not express herself deeply.",
                "fol": "\u00acp_11(Andi)",
                "str_fol": "\u00acexpresses_deeply(Andi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Andi",
                    "text": "Andi reads often.",
                    "fol": "p_1(Andi)",
                    "str_fol": "reads_often(Andi)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Andi",
                    "text": "Andi does not express herself deeply.",
                    "fol": "\u00acp_11(Andi)",
                    "str_fol": "\u00acexpresses_deeply(Andi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "For all humans, if they read often and are introspective, then they express themselves deeply.",
                    "fol": "\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((reads_often(x) \u2227 is_introspective(x)) \u2192 expresses_deeply(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Andi",
                "text": "Andi is not introspective.",
                "fol": "\u00acp_10(Andi)",
                "str_fol": "\u00acis_introspective(Andi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Andi",
                    "text": "Andi is not introspective.",
                    "fol": "\u00acp_10(Andi)",
                    "str_fol": "\u00acis_introspective(Andi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Andi is either introspective or a sensitive soul, but being one does not necessarily mean she is the other.",
                    "fol": "p_10(Andi) \u2295 p_9(Andi)",
                    "str_fol": "is_introspective(Andi) \u2295 sensitive_soul(Andi)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Andi",
                "text": "Andi is a sensitive soul.",
                "fol": "p_9(Andi)",
                "str_fol": "sensitive_soul(Andi)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Andi",
                    "text": "Andi is a sensitive soul.",
                    "fol": "p_9(Andi)",
                    "str_fol": "sensitive_soul(Andi)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Andi",
                    "text": "Andi does not need affection.",
                    "fol": "\u00acp_0(Andi)",
                    "str_fol": "\u00acneeds_affection(Andi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "For all humans, if they are either emotional or a sensitive soul, then they need affection.",
                    "fol": "\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((emotional(x) \u2295 sensitive_soul(x)) \u2192 needs_affection(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Andi",
                "text": "Andi is emotional.",
                "fol": "p_8(Andi)",
                "str_fol": "emotional(Andi)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Andi",
                    "text": "Andi is emotional.",
                    "fol": "p_8(Andi)",
                    "str_fol": "emotional(Andi)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Andi is neglected, then she is emotional.",
                    "fol": "p_7(Andi) \u2192 p_8(Andi)",
                    "str_fol": "neglected(Andi) \u2192 emotional(Andi)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Andi",
                    "text": "Andi is not creative.",
                    "fol": "\u00acp_2(Andi)",
                    "str_fol": "\u00accreative(Andi)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\n\u00acp_2(Andi)\np_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi)",
                    "-p_4(Andi)",
                    "p_5(Andi)",
                    "p_3(Andi)",
                    "p_1(Andi)",
                    "-p_0(Andi)",
                    "-p_2(Andi)",
                    "p_6(Andi) -> (p_14(Andi) & p_15(Andi))",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_13(x))",
                    "all x (p_13(x) -> (p_12(x) & p_14(x)))",
                    "p_11(Andi) -> (-(p_12(Andi) <-> p_3(Andi)))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "-(p_10(Andi) <-> p_9(Andi))",
                    "all x (-(p_8(x) <-> p_9(x)) -> p_0(x))",
                    "p_7(Andi) -> p_8(Andi)",
                    "p_14(Andi) -> p_16(Andi)"
                ],
                "formulas(goals)": [
                    "p_7(Andi) -> (-(p_16(Andi) <-> p_2(Andi)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_14(Andi) \u2192 p_16(Andi)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\n\u00acp_2(Andi)\np_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)\np_7(Andi)\np_16(Andi) \u2192 p_6(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi).",
                    "-p_4(Andi).",
                    "p_5(Andi).",
                    "p_3(Andi).",
                    "p_1(Andi).",
                    "-p_0(Andi).",
                    "-p_2(Andi).",
                    "p_6(Andi) -> (p_14(Andi) & p_15(Andi)).",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_13(x)).",
                    "all x (p_13(x) -> (p_12(x) & p_14(x))).",
                    "p_11(Andi) -> (-(p_12(Andi) <-> p_3(Andi))).",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x)).",
                    "-(p_10(Andi) <-> p_9(Andi)).",
                    "all x (-(p_8(x) <-> p_9(x)) -> p_0(x)).",
                    "p_7(Andi) -> p_8(Andi).",
                    "p_7(Andi).",
                    "p_16(Andi) -> p_6(Andi)."
                ],
                "formulas(goals)": [
                    "p_7(Andi) & (p_16(Andi) <-> p_2(Andi))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Andi)"
                ],
                "added_rules": [
                    "p_16(Andi) \u2192 p_6(Andi)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\np_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)\np_7(Andi)\np_16(Andi) \u2192 p_6(Andi)\np_7(Andi) \u2192 p_2(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi)",
                    "-p_4(Andi)",
                    "p_5(Andi)",
                    "p_3(Andi)",
                    "p_1(Andi)",
                    "-p_0(Andi)",
                    "p_6(Andi) -> (p_14(Andi) & p_15(Andi))",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_13(x))",
                    "all x (p_13(x) -> (p_12(x) & p_14(x)))",
                    "p_11(Andi) -> (-(p_12(Andi) <-> p_3(Andi)))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "-(p_10(Andi) <-> p_9(Andi))",
                    "all x (-(p_8(x) <-> p_9(x)) -> p_0(x))",
                    "p_7(Andi) -> p_8(Andi)",
                    "p_7(Andi)",
                    "p_16(Andi) -> p_6(Andi)",
                    "p_7(Andi) -> p_2(Andi)"
                ],
                "formulas(goals)": [
                    "p_7(Andi) -> (-(p_16(Andi) <-> p_2(Andi)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_2(Andi)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Andi) \u2192 p_2(Andi)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\np_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)\np_7(Andi)\np_16(Andi) \u2192 p_6(Andi)\np_7(Andi) \u2192 p_2(Andi)\np_2(Andi)\n\u00acp_16(Andi)\np_8(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi)",
                    "-p_4(Andi)",
                    "p_5(Andi)",
                    "p_3(Andi)",
                    "p_1(Andi)",
                    "-p_0(Andi)",
                    "p_6(Andi) -> (p_14(Andi) & p_15(Andi))",
                    "(all x (-(p_4(x) <-> p_5(x)) -> p_13(x)))",
                    "(all x (p_13(x) -> (p_12(x) & p_14(x))))",
                    "p_11(Andi) -> (-(p_12(Andi) <-> p_3(Andi)))",
                    "(all x ((p_1(x) & p_10(x)) -> p_11(x)))",
                    "-(p_10(Andi) <-> p_9(Andi))",
                    "(all x (-(p_8(x) <-> p_9(x)) -> p_0(x)))",
                    "p_7(Andi) -> p_8(Andi)",
                    "p_7(Andi)",
                    "p_16(Andi) -> p_6(Andi)",
                    "p_7(Andi) -> p_2(Andi)",
                    "p_2(Andi)",
                    "-p_16(Andi)",
                    "p_8(Andi)"
                ],
                "formulas(goals)": [
                    "p_7(Andi) -> (-(p_16(Andi) <-> p_2(Andi)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_2(Andi)",
                    "\u00acp_16(Andi)",
                    "p_8(Andi)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\np_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)\np_7(Andi)\np_16(Andi) \u2192 p_6(Andi)\np_7(Andi) \u2192 p_2(Andi)\np_2(Andi)\n\u00acp_16(Andi)\np_8(Andi)\n\u00acp_4(Andi) \u2227 p_5(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi)",
                    "-p_4(Andi)",
                    "p_5(Andi)",
                    "p_3(Andi)",
                    "p_1(Andi)",
                    "-p_0(Andi)",
                    "p_6(Andi) -> (p_14(Andi) & p_15(Andi))",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_13(x))",
                    "all x (p_13(x) -> (p_12(x) & p_14(x)))",
                    "p_11(Andi) -> (-(p_12(Andi) <-> p_3(Andi)))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "-(p_10(Andi) <-> p_9(Andi))",
                    "all x (-(p_8(x) <-> p_9(x)) -> p_0(x))",
                    "p_7(Andi) -> p_8(Andi)",
                    "p_7(Andi)",
                    "p_16(Andi) -> p_6(Andi)",
                    "p_7(Andi) -> p_2(Andi)",
                    "p_2(Andi)",
                    "-p_16(Andi)",
                    "p_8(Andi)",
                    "-p_4(Andi) & p_5(Andi)"
                ],
                "formulas(goals)": [
                    "p_7(Andi) -> (-(p_16(Andi) <-> p_2(Andi)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_4(Andi) \u2227 p_5(Andi)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\n(p_6(Andi) \u2192 p_14(Andi)) \u2227 (p_6(Andi) \u2192 p_15(Andi))\n\u2200x (((p_4(x) \u2228 p_5(x)) \u2227 \u00ac(p_4(x) \u2227 p_5(x))) \u2192 p_13(x))\n\u2200x ((p_13(x) \u2192 p_12(x)) \u2227 (p_13(x) \u2192 p_14(x)))\np_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\np_10(Andi) \u2295 p_9(Andi)\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\np_7(Andi) \u2192 p_8(Andi)\np_7(Andi)\np_16(Andi) \u2192 p_6(Andi)\np_7(Andi) \u2192 p_2(Andi)\np_2(Andi)\n\u00acp_16(Andi)\np_8(Andi)\n\u00acp_4(Andi) \u2227 p_5(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi)",
                    "-p_4(Andi)",
                    "p_5(Andi)",
                    "p_3(Andi)",
                    "p_1(Andi)",
                    "-p_0(Andi)",
                    "(p_6(Andi) -> p_14(Andi)) & (p_6(Andi) -> p_15(Andi))",
                    "all x (((p_4(x) | p_5(x)) & -(p_4(x) & p_5(x))) -> p_13(x))",
                    "all x ((p_13(x) -> p_12(x)) & (p_13(x) -> p_14(x)))",
                    "p_11(Andi) -> -(p_12(Andi) <-> p_3(Andi))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "-(p_10(Andi) <-> p_9(Andi))",
                    "all x ((-(p_8(x) <-> p_9(x))) -> p_0(x))",
                    "p_7(Andi) -> p_8(Andi)",
                    "p_7(Andi)",
                    "p_16(Andi) -> p_6(Andi)",
                    "p_7(Andi) -> p_2(Andi)",
                    "p_2(Andi)",
                    "-p_16(Andi)",
                    "p_8(Andi)",
                    "-p_4(Andi) & p_5(Andi)"
                ],
                "formulas(goals)": [
                    "p_7(Andi) -> -(p_16(Andi) <-> p_2(Andi))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Andi) \u2192 (p_14(Andi) \u2227 p_15(Andi))",
                    "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))",
                    "\u2200x (p_13(x) \u2192 (p_12(x) \u2227 p_14(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Andi) \u2192 p_14(Andi)) \u2227 (p_6(Andi) \u2192 p_15(Andi))",
                    "\u2200x (((p_4(x) \u2228 p_5(x)) \u2227 \u00ac(p_4(x) \u2227 p_5(x))) \u2192 p_13(x))",
                    "\u2200x ((p_13(x) \u2192 p_12(x)) \u2227 (p_13(x) \u2192 p_14(x)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Andi)\n\u00acp_4(Andi)\np_5(Andi)\np_3(Andi)\np_1(Andi)\n\u00acp_0(Andi)\n(p_6(Andi) \u2192 p_14(Andi)) \u2227 (p_6(Andi) \u2192 p_15(Andi))\n\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))\n\u2200x ((p_13(x) \u2192 p_12(x)) \u2227 (p_13(x) \u2192 p_14(x)))\np_11(Andi) \u2192 ((p_12(Andi) \u2228 p_3(Andi)) \u2227 \u00ac(p_12(Andi) \u2227 p_3(Andi)))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n(p_10(Andi) \u2228 p_9(Andi)) \u2227 \u00ac(p_10(Andi) \u2227 p_9(Andi))\n\u2200x ((p_8(x) \u2295 p_9(x)) \u2192 p_0(x))\n\u00acp_7(Andi) \u2228 p_8(Andi)\np_7(Andi)\np_16(Andi) \u2192 p_6(Andi)\np_7(Andi) \u2192 p_2(Andi)\np_2(Andi)\n\u00acp_16(Andi)\np_8(Andi)\n\u00acp_4(Andi) \u2227 p_5(Andi)\np_7(Andi) \u2228 \u00acp_7(Andi)\np_2(Andi) \u2228 \u00acp_2(Andi)\np_16(Andi) \u2228 \u00acp_16(Andi)\np_5(Andi) \u2227 p_5(Andi)",
            "Initial Goal": "p_7(Andi) \u2192 (p_16(Andi) \u2295 p_2(Andi))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Andi)",
                    "-p_4(Andi)",
                    "p_5(Andi)",
                    "p_3(Andi)",
                    "p_1(Andi)",
                    "-p_0(Andi)",
                    "(p_6(Andi) -> p_14(Andi)) & (p_6(Andi) -> p_15(Andi))",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_13(x))",
                    "all x ((p_13(x) -> p_12(x)) & (p_13(x) -> p_14(x)))",
                    "p_11(Andi) -> ((p_12(Andi) | p_3(Andi)) & (-(p_12(Andi) & p_3(Andi))))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "(p_10(Andi) | p_9(Andi)) & (-(p_10(Andi) & p_9(Andi)))",
                    "all x (-(p_8(x) <-> p_9(x)) -> p_0(x))",
                    "-p_7(Andi) | p_8(Andi)",
                    "p_7(Andi)",
                    "p_16(Andi) -> p_6(Andi)",
                    "p_7(Andi) -> p_2(Andi)",
                    "p_2(Andi)",
                    "-p_16(Andi)",
                    "p_8(Andi)",
                    "-p_4(Andi) & p_5(Andi)",
                    "p_7(Andi) | -p_7(Andi)",
                    "p_2(Andi) | -p_2(Andi)",
                    "p_16(Andi) | -p_16(Andi)",
                    "p_5(Andi) & p_5(Andi)"
                ],
                "formulas(goals)": [
                    "p_7(Andi) -> (-(p_16(Andi) <-> p_2(Andi)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (((p_4(x) \u2228 p_5(x)) \u2227 \u00ac(p_4(x) \u2227 p_5(x))) \u2192 p_13(x))",
                    "p_11(Andi) \u2192 (p_12(Andi) \u2295 p_3(Andi))",
                    "p_10(Andi) \u2295 p_9(Andi)",
                    "p_7(Andi) \u2192 p_8(Andi)"
                ],
                "added_facts": [
                    "p_7(Andi) \u2228 \u00acp_7(Andi)",
                    "p_2(Andi) \u2228 \u00acp_2(Andi)",
                    "p_16(Andi) \u2228 \u00acp_16(Andi)",
                    "p_5(Andi) \u2227 p_5(Andi)"
                ],
                "added_rules": [
                    "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_13(x))",
                    "p_11(Andi) \u2192 ((p_12(Andi) \u2228 p_3(Andi)) \u2227 \u00ac(p_12(Andi) \u2227 p_3(Andi)))",
                    "(p_10(Andi) \u2228 p_9(Andi)) \u2227 \u00ac(p_10(Andi) \u2227 p_9(Andi))",
                    "\u00acp_7(Andi) \u2228 p_8(Andi)"
                ]
            }
        }
    ]
}