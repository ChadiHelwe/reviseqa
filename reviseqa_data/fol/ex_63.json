{
    "background_story": "In the realm of Azura, where mythical creatures roamed free, Lawson was a young apprentice to the wise wizard, Eriol. Lawson's life took a dramatic turn when he stumbled upon an ancient tome hidden deep within the mystical forest of Fergon. The tome, bound in a strange, glowing material, held the secrets of the long-lost magic of Fergon. As Lawson delved into the book's mysteries, he discovered he had an innate ability to harness the power of Fergon, a magic that allowed him to communicate with the creatures of the forest and manipulate the earth itself. With his newfound powers, Lawson became a hero, using the magic of Fergon to protect Azura from darkness and bring peace to its inhabitants.",
    "predicates": [
        {
            "id": 0,
            "name": "saves_lives"
        },
        {
            "id": 1,
            "name": "magical_powers"
        },
        {
            "id": 2,
            "name": "rides_dragon"
        },
        {
            "id": 3,
            "name": "uses_bow"
        },
        {
            "id": 4,
            "name": "speaks_ancient"
        },
        {
            "id": 5,
            "name": "commands_troops"
        },
        {
            "id": 6,
            "name": "marches_forward"
        },
        {
            "id": 7,
            "name": "brave_heart"
        },
        {
            "id": 8,
            "name": "heroic"
        },
        {
            "id": 9,
            "name": "casts_spells"
        },
        {
            "id": 10,
            "name": "wields_sword"
        },
        {
            "id": 11,
            "name": "has_wisdom"
        },
        {
            "id": 12,
            "name": "leads_army"
        },
        {
            "id": 13,
            "name": "quest_member"
        },
        {
            "id": 14,
            "name": "skilled_archer"
        },
        {
            "id": 15,
            "name": "heals_wounds"
        },
        {
            "id": 16,
            "name": "holds_tome"
        },
        {
            "id": 17,
            "name": "reads_books"
        },
        {
            "id": 18,
            "name": "learns_fast"
        },
        {
            "id": 19,
            "name": "rules_kingdom"
        }
    ],
    "subject_name": "Lawson",
    "subject_category": "fictional character",
    "keyword": "fergon",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lawson",
            "text": "Lawson does not save lives.",
            "fol": "\u00acp_0(Lawson)",
            "str_fol": "\u00acsaves_lives(Lawson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lawson",
            "text": "Lawson does not have magical powers.",
            "fol": "\u00acp_1(Lawson)",
            "str_fol": "\u00acmagical_powers(Lawson)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Lawson",
            "text": "Lawson rides a dragon.",
            "fol": "p_2(Lawson)",
            "str_fol": "rides_dragon(Lawson)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lawson",
            "text": "Lawson does not use a bow.",
            "fol": "\u00acp_3(Lawson)",
            "str_fol": "\u00acuses_bow(Lawson)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lawson",
            "text": "Lawson speaks an ancient language.",
            "fol": "p_4(Lawson)",
            "str_fol": "speaks_ancient(Lawson)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lawson",
            "text": "Lawson commands troops.",
            "fol": "p_5(Lawson)",
            "str_fol": "commands_troops(Lawson)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lawson",
            "text": "Lawson does not march forward.",
            "fol": "\u00acp_6(Lawson)",
            "str_fol": "\u00acmarches_forward(Lawson)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Lawson",
            "text": "Lawson leads an army.",
            "fol": "p_12(Lawson)",
            "str_fol": "leads_army(Lawson)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lawson",
            "text": "Lawson does not have wisdom.",
            "fol": "\u00acp_11(Lawson)",
            "str_fol": "\u00achas_wisdom(Lawson)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Lawson",
            "text": "Lawson wields a sword.",
            "fol": "p_10(Lawson)",
            "str_fol": "wields_sword(Lawson)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Lawson",
            "text": "Lawson casts spells.",
            "fol": "p_9(Lawson)",
            "str_fol": "casts_spells(Lawson)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Lawson",
            "text": "Lawson has a brave heart.",
            "fol": "p_7(Lawson)",
            "str_fol": "brave_heart(Lawson)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Lawson",
            "text": "Lawson is heroic.",
            "fol": "p_8(Lawson)",
            "str_fol": "heroic(Lawson)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Lawson",
            "text": "Lawson commands troops.",
            "fol": "p_5(Lawson)",
            "str_fol": "commands_troops(Lawson)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lawson",
            "text": "Lawson does not march forward.",
            "fol": "\u00acp_6(Lawson)",
            "str_fol": "\u00acmarches_forward(Lawson)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lawson",
            "text": "Lawson speaks an ancient language.",
            "fol": "p_4(Lawson)",
            "str_fol": "speaks_ancient(Lawson)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lawson",
            "text": "Lawson rides a dragon.",
            "fol": "p_2(Lawson)",
            "str_fol": "rides_dragon(Lawson)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lawson",
            "text": "Lawson does not use a bow.",
            "fol": "\u00acp_3(Lawson)",
            "str_fol": "\u00acuses_bow(Lawson)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lawson",
            "text": "Lawson does not save lives.",
            "fol": "\u00acp_0(Lawson)",
            "str_fol": "\u00acsaves_lives(Lawson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lawson",
            "text": "Lawson does not have magical powers.",
            "fol": "\u00acp_1(Lawson)",
            "str_fol": "\u00acmagical_powers(Lawson)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Lawson either commands troops or marches forward (but not both), then he leads an army.",
            "fol": "(p_5(Lawson) \u2295 p_6(Lawson)) \u2192 p_12(Lawson)",
            "str_fol": "(commands_troops(Lawson) \u2295 marches_forward(Lawson)) \u2192 leads_army(Lawson)"
        },
        {
            "id": 4,
            "text": "If Lawson leads an army, then he either has wisdom or speaks an ancient language, but not both.",
            "fol": "p_12(Lawson) \u2192 (p_11(Lawson) \u2295 p_4(Lawson))",
            "str_fol": "leads_army(Lawson) \u2192 (has_wisdom(Lawson) \u2295 speaks_ancient(Lawson))"
        },
        {
            "id": 3,
            "text": "If Lawson rides a dragon, then he either uses a bow or wields a sword, but not both.",
            "fol": "p_2(Lawson) \u2192 (p_3(Lawson) \u2295 p_10(Lawson))",
            "str_fol": "rides_dragon(Lawson) \u2192 (uses_bow(Lawson) \u2295 wields_sword(Lawson))"
        },
        {
            "id": 2,
            "text": "If Lawson wields a sword, then he either has wisdom or casts spells, but not both.",
            "fol": "p_10(Lawson) \u2192 (p_11(Lawson) \u2295 p_9(Lawson))",
            "str_fol": "wields_sword(Lawson) \u2192 (has_wisdom(Lawson) \u2295 casts_spells(Lawson))"
        },
        {
            "id": 1,
            "text": "If Lawson either casts spells or has a brave heart (but not both), then he saves lives.",
            "fol": "(p_9(Lawson) \u2295 p_7(Lawson)) \u2192 p_0(Lawson)",
            "str_fol": "(casts_spells(Lawson) \u2295 brave_heart(Lawson)) \u2192 saves_lives(Lawson)"
        },
        {
            "id": 0,
            "text": "If Lawson has either magical powers or a brave heart (but not both), then he is heroic.",
            "fol": "(p_1(Lawson) \u2295 p_7(Lawson)) \u2192 p_8(Lawson)",
            "str_fol": "(magical_powers(Lawson) \u2295 brave_heart(Lawson)) \u2192 heroic(Lawson)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Lawson",
            "text": "Lawson commands troops.",
            "fol": "p_5(Lawson)",
            "str_fol": "commands_troops(Lawson)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lawson",
            "text": "Lawson does not march forward.",
            "fol": "\u00acp_6(Lawson)",
            "str_fol": "\u00acmarches_forward(Lawson)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lawson",
            "text": "Lawson speaks an ancient language.",
            "fol": "p_4(Lawson)",
            "str_fol": "speaks_ancient(Lawson)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lawson",
            "text": "Lawson rides a dragon.",
            "fol": "p_2(Lawson)",
            "str_fol": "rides_dragon(Lawson)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lawson",
            "text": "Lawson does not use a bow.",
            "fol": "\u00acp_3(Lawson)",
            "str_fol": "\u00acuses_bow(Lawson)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lawson",
            "text": "Lawson does not save lives.",
            "fol": "\u00acp_0(Lawson)",
            "str_fol": "\u00acsaves_lives(Lawson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lawson",
            "text": "Lawson does not have magical powers.",
            "fol": "\u00acp_1(Lawson)",
            "str_fol": "\u00acmagical_powers(Lawson)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Lawson either commands troops or marches forward (but not both), then he leads an army.",
            "fol": "(p_5(Lawson) \u2295 p_6(Lawson)) \u2192 p_12(Lawson)",
            "str_fol": "(commands_troops(Lawson) \u2295 marches_forward(Lawson)) \u2192 leads_army(Lawson)"
        },
        {
            "id": 4,
            "text": "If Lawson leads an army, then he either has wisdom or speaks an ancient language, but not both.",
            "fol": "p_12(Lawson) \u2192 (p_11(Lawson) \u2295 p_4(Lawson))",
            "str_fol": "leads_army(Lawson) \u2192 (has_wisdom(Lawson) \u2295 speaks_ancient(Lawson))"
        },
        {
            "id": 3,
            "text": "If Lawson rides a dragon, then he either uses a bow or wields a sword, but not both.",
            "fol": "p_2(Lawson) \u2192 (p_3(Lawson) \u2295 p_10(Lawson))",
            "str_fol": "rides_dragon(Lawson) \u2192 (uses_bow(Lawson) \u2295 wields_sword(Lawson))"
        },
        {
            "id": 2,
            "text": "If Lawson wields a sword, then he either has wisdom or casts spells, but not both.",
            "fol": "p_10(Lawson) \u2192 (p_11(Lawson) \u2295 p_9(Lawson))",
            "str_fol": "wields_sword(Lawson) \u2192 (has_wisdom(Lawson) \u2295 casts_spells(Lawson))"
        },
        {
            "id": 1,
            "text": "If Lawson either casts spells or has a brave heart (but not both), then he saves lives.",
            "fol": "(p_9(Lawson) \u2295 p_7(Lawson)) \u2192 p_0(Lawson)",
            "str_fol": "(casts_spells(Lawson) \u2295 brave_heart(Lawson)) \u2192 saves_lives(Lawson)"
        },
        {
            "id": 0,
            "text": "If Lawson has either magical powers or a brave heart (but not both), then he is heroic.",
            "fol": "(p_1(Lawson) \u2295 p_7(Lawson)) \u2192 p_8(Lawson)",
            "str_fol": "(magical_powers(Lawson) \u2295 brave_heart(Lawson)) \u2192 heroic(Lawson)"
        }
    ],
    "context_fol": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n(p_5(Lawson) \u2295 p_6(Lawson)) \u2192 p_12(Lawson)\np_12(Lawson) \u2192 (p_11(Lawson) \u2295 p_4(Lawson))\np_2(Lawson) \u2192 (p_3(Lawson) \u2295 p_10(Lawson))\np_10(Lawson) \u2192 (p_11(Lawson) \u2295 p_9(Lawson))\n(p_9(Lawson) \u2295 p_7(Lawson)) \u2192 p_0(Lawson)\n(p_1(Lawson) \u2295 p_7(Lawson)) \u2192 p_8(Lawson)",
    "conclusion": {
        "id": 12,
        "subject": "Lawson",
        "text": "Lawson is heroic.",
        "fol": "p_8(Lawson)",
        "str_fol": "heroic(Lawson)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_8(Lawson)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Lawson",
                    "text": "Lawson commands troops.",
                    "fol": "p_5(Lawson)",
                    "str_fol": "commands_troops(Lawson)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Lawson",
                    "text": "Lawson does not march forward.",
                    "fol": "\u00acp_6(Lawson)",
                    "str_fol": "\u00acmarches_forward(Lawson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Lawson either commands troops or marches forward (but not both), then he leads an army.",
                    "fol": "(p_5(Lawson) \u2295 p_6(Lawson)) \u2192 p_12(Lawson)",
                    "str_fol": "(commands_troops(Lawson) \u2295 marches_forward(Lawson)) \u2192 leads_army(Lawson)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Lawson",
                "text": "Lawson leads an army.",
                "fol": "p_12(Lawson)",
                "str_fol": "leads_army(Lawson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Lawson",
                    "text": "Lawson leads an army.",
                    "fol": "p_12(Lawson)",
                    "str_fol": "leads_army(Lawson)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Lawson",
                    "text": "Lawson speaks an ancient language.",
                    "fol": "p_4(Lawson)",
                    "str_fol": "speaks_ancient(Lawson)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Lawson leads an army, then he either has wisdom or speaks an ancient language, but not both.",
                    "fol": "p_12(Lawson) \u2192 (p_11(Lawson) \u2295 p_4(Lawson))",
                    "str_fol": "leads_army(Lawson) \u2192 (has_wisdom(Lawson) \u2295 speaks_ancient(Lawson))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Lawson",
                "text": "Lawson does not have wisdom.",
                "fol": "\u00acp_11(Lawson)",
                "str_fol": "\u00achas_wisdom(Lawson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Lawson",
                    "text": "Lawson rides a dragon.",
                    "fol": "p_2(Lawson)",
                    "str_fol": "rides_dragon(Lawson)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Lawson",
                    "text": "Lawson does not use a bow.",
                    "fol": "\u00acp_3(Lawson)",
                    "str_fol": "\u00acuses_bow(Lawson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Lawson rides a dragon, then he either uses a bow or wields a sword, but not both.",
                    "fol": "p_2(Lawson) \u2192 (p_3(Lawson) \u2295 p_10(Lawson))",
                    "str_fol": "rides_dragon(Lawson) \u2192 (uses_bow(Lawson) \u2295 wields_sword(Lawson))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lawson",
                "text": "Lawson wields a sword.",
                "fol": "p_10(Lawson)",
                "str_fol": "wields_sword(Lawson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Lawson",
                    "text": "Lawson wields a sword.",
                    "fol": "p_10(Lawson)",
                    "str_fol": "wields_sword(Lawson)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Lawson",
                    "text": "Lawson does not have wisdom.",
                    "fol": "\u00acp_11(Lawson)",
                    "str_fol": "\u00achas_wisdom(Lawson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Lawson wields a sword, then he either has wisdom or casts spells, but not both.",
                    "fol": "p_10(Lawson) \u2192 (p_11(Lawson) \u2295 p_9(Lawson))",
                    "str_fol": "wields_sword(Lawson) \u2192 (has_wisdom(Lawson) \u2295 casts_spells(Lawson))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lawson",
                "text": "Lawson casts spells.",
                "fol": "p_9(Lawson)",
                "str_fol": "casts_spells(Lawson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Lawson",
                    "text": "Lawson casts spells.",
                    "fol": "p_9(Lawson)",
                    "str_fol": "casts_spells(Lawson)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Lawson",
                    "text": "Lawson does not save lives.",
                    "fol": "\u00acp_0(Lawson)",
                    "str_fol": "\u00acsaves_lives(Lawson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Lawson either casts spells or has a brave heart (but not both), then he saves lives.",
                    "fol": "(p_9(Lawson) \u2295 p_7(Lawson)) \u2192 p_0(Lawson)",
                    "str_fol": "(casts_spells(Lawson) \u2295 brave_heart(Lawson)) \u2192 saves_lives(Lawson)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lawson",
                "text": "Lawson has a brave heart.",
                "fol": "p_7(Lawson)",
                "str_fol": "brave_heart(Lawson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Lawson",
                    "text": "Lawson does not have magical powers.",
                    "fol": "\u00acp_1(Lawson)",
                    "str_fol": "\u00acmagical_powers(Lawson)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Lawson",
                    "text": "Lawson has a brave heart.",
                    "fol": "p_7(Lawson)",
                    "str_fol": "brave_heart(Lawson)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Lawson has either magical powers or a brave heart (but not both), then he is heroic.",
                    "fol": "(p_1(Lawson) \u2295 p_7(Lawson)) \u2192 p_8(Lawson)",
                    "str_fol": "(magical_powers(Lawson) \u2295 brave_heart(Lawson)) \u2192 heroic(Lawson)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Lawson",
                "text": "Lawson is heroic.",
                "fol": "p_8(Lawson)",
                "str_fol": "heroic(Lawson)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_5(Lawson) <-> p_6(Lawson)) -> p_12(Lawson).  [assumption].\n2 p_12(Lawson) -> -(p_11(Lawson) <-> p_4(Lawson)).  [assumption].\n3 p_2(Lawson) -> -(p_3(Lawson) <-> p_10(Lawson)).  [assumption].\n4 p_10(Lawson) -> -(p_11(Lawson) <-> p_9(Lawson)).  [assumption].\n5 -(p_9(Lawson) <-> p_7(Lawson)) -> p_0(Lawson).  [assumption].\n6 -(p_1(Lawson) <-> p_7(Lawson)) -> p_8(Lawson).  [assumption].\n7 p_8(Lawson).  [goal].\n8 -p_5(Lawson) | p_6(Lawson) | p_12(Lawson).  [clausify(1)].\n9 p_5(Lawson).  [assumption].\n11 p_6(Lawson) | p_12(Lawson).  [resolve(8,a,9,a)].\n12 -p_6(Lawson).  [assumption].\n13 -p_12(Lawson) | -p_11(Lawson) | -p_4(Lawson).  [clausify(2)].\n14 p_4(Lawson).  [assumption].\n16 -p_2(Lawson) | p_3(Lawson) | p_10(Lawson).  [clausify(3)].\n17 p_2(Lawson).  [assumption].\n19 p_3(Lawson) | p_10(Lawson).  [resolve(16,a,17,a)].\n20 -p_3(Lawson).  [assumption].\n22 -p_9(Lawson) | p_7(Lawson) | p_0(Lawson).  [clausify(5)].\n23 -p_0(Lawson).  [assumption].\n25 p_1(Lawson) | -p_7(Lawson) | p_8(Lawson).  [clausify(6)].\n26 -p_1(Lawson).  [assumption].\n28 p_10(Lawson).  [resolve(19,a,20,a)].\n29 -p_10(Lawson) | p_11(Lawson) | p_9(Lawson).  [clausify(4)].\n31 -p_7(Lawson) | p_8(Lawson).  [resolve(25,a,26,a)].\n32 -p_8(Lawson).  [deny(7)].\n33 -p_12(Lawson) | -p_11(Lawson).  [resolve(13,c,14,a)].\n34 p_12(Lawson).  [resolve(11,a,12,a)].\n36 -p_9(Lawson) | p_7(Lawson).  [resolve(22,c,23,a)].\n37 p_11(Lawson) | p_9(Lawson).  [resolve(28,a,29,a)].\n39 p_11(Lawson) | p_7(Lawson).  [resolve(37,b,36,a)].\n40 -p_7(Lawson).  [resolve(31,b,32,a)].\n41 p_11(Lawson).  [resolve(39,b,40,a)].\n42 -p_11(Lawson).  [resolve(33,a,34,a)].\n43 $F.  [resolve(41,a,42,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n(p_5(Lawson) \u2295 p_6(Lawson)) \u2192 p_12(Lawson)\np_12(Lawson) \u2192 (p_11(Lawson) \u2295 p_4(Lawson))\np_2(Lawson) \u2192 (p_3(Lawson) \u2295 p_10(Lawson))\np_10(Lawson) \u2192 (p_11(Lawson) \u2295 p_9(Lawson))\n(p_9(Lawson) \u2295 p_7(Lawson)) \u2192 p_0(Lawson)\n(p_1(Lawson) \u2295 p_7(Lawson)) \u2192 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)\np_8(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson)",
                    "-p_6(Lawson)",
                    "p_4(Lawson)",
                    "p_2(Lawson)",
                    "-p_3(Lawson)",
                    "-p_0(Lawson)",
                    "-p_1(Lawson)",
                    "(-(p_5(Lawson) <-> p_6(Lawson))) -> p_12(Lawson)",
                    "p_12(Lawson) -> (-(p_11(Lawson) <-> p_4(Lawson)))",
                    "p_2(Lawson) -> (-(p_3(Lawson) <-> p_10(Lawson)))",
                    "p_10(Lawson) -> (-(p_11(Lawson) <-> p_9(Lawson)))",
                    "(-(p_9(Lawson) <-> p_7(Lawson))) -> p_0(Lawson)",
                    "(-(p_1(Lawson) <-> p_7(Lawson))) -> p_8(Lawson)",
                    "p_10(Lawson)",
                    "p_12(Lawson)",
                    "p_8(Lawson)"
                ],
                "formulas(goals)": [
                    "p_8(Lawson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Lawson)",
                    "p_12(Lawson)",
                    "p_8(Lawson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n((p_5(Lawson) \u2228 p_6(Lawson)) \u2227 (\u00acp_5(Lawson) \u2228 \u00acp_6(Lawson))) \u2192 p_12(Lawson)\np_12(Lawson) \u2192 ((p_11(Lawson) \u2228 p_4(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_4(Lawson)))\np_2(Lawson) \u2192 ((p_3(Lawson) \u2228 p_10(Lawson)) \u2227 (\u00acp_3(Lawson) \u2228 \u00acp_10(Lawson)))\np_10(Lawson) \u2192 ((p_11(Lawson) \u2228 p_9(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)))\n((p_9(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_9(Lawson) \u2228 \u00acp_7(Lawson))) \u2192 p_0(Lawson)\n((p_1(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_1(Lawson) \u2228 \u00acp_7(Lawson))) \u2192 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)\np_4(Lawson) \u2192 \u00acp_8(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson).",
                    "-p_6(Lawson).",
                    "p_4(Lawson).",
                    "p_2(Lawson).",
                    "-p_3(Lawson).",
                    "-p_0(Lawson).",
                    "-p_1(Lawson).",
                    "((p_5(Lawson) | p_6(Lawson)) & (-p_5(Lawson) | -p_6(Lawson))) -> p_12(Lawson).",
                    "p_12(Lawson) -> ((p_11(Lawson) | p_4(Lawson)) & (-p_11(Lawson) | -p_4(Lawson))).",
                    "p_2(Lawson) -> ((p_3(Lawson) | p_10(Lawson)) & (-p_3(Lawson) | -p_10(Lawson))).",
                    "p_10(Lawson) -> ((p_11(Lawson) | p_9(Lawson)) & (-p_11(Lawson) | -p_9(Lawson))).",
                    "((p_9(Lawson) | p_7(Lawson)) & (-p_9(Lawson) | -p_7(Lawson))) -> p_0(Lawson).",
                    "((p_1(Lawson) | p_7(Lawson)) & (-p_1(Lawson) | -p_7(Lawson))) -> p_8(Lawson).",
                    "p_10(Lawson).",
                    "p_12(Lawson).",
                    "p_4(Lawson) -> -p_8(Lawson)."
                ],
                "formulas(goals)": [
                    "-p_8(Lawson)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_8(Lawson)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Lawson) \u2192 \u00acp_8(Lawson)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n(\u00ac((p_5(Lawson) \u2228 p_6(Lawson)) \u2227 (\u00acp_5(Lawson) \u2228 \u00acp_6(Lawson)))) \u2228 p_12(Lawson)\n\u00acp_12(Lawson) \u2228 ((p_11(Lawson) \u2228 p_4(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_4(Lawson)))\n\u00acp_2(Lawson) \u2228 ((p_3(Lawson) \u2228 p_10(Lawson)) \u2227 (\u00acp_3(Lawson) \u2228 \u00acp_10(Lawson)))\n\u00acp_10(Lawson) \u2228 ((p_11(Lawson) \u2228 p_9(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)))\n\u00ac((p_9(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_9(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_0(Lawson)\n\u00ac((p_1(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_1(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)\n\u00acp_4(Lawson) \u2228 \u00acp_8(Lawson)\n\u00acp_4(Lawson) \u2228 \u00acp_7(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson).",
                    "-p_6(Lawson).",
                    "p_4(Lawson).",
                    "p_2(Lawson).",
                    "-p_3(Lawson).",
                    "-p_0(Lawson).",
                    "-p_1(Lawson).",
                    "(-((p_5(Lawson) | p_6(Lawson)) & (-p_5(Lawson) | -p_6(Lawson)))) | p_12(Lawson).",
                    "(-p_12(Lawson)) | ((p_11(Lawson) | p_4(Lawson)) & (-p_11(Lawson) | -p_4(Lawson))).",
                    "(-p_2(Lawson)) | ((p_3(Lawson) | p_10(Lawson)) & (-p_3(Lawson) | -p_10(Lawson))).",
                    "(-p_10(Lawson)) | ((p_11(Lawson) | p_9(Lawson)) & (-p_11(Lawson) | -p_9(Lawson))).",
                    "(-((p_9(Lawson) | p_7(Lawson)) & (-p_9(Lawson) | -p_7(Lawson)))) | p_0(Lawson).",
                    "(-((p_1(Lawson) | p_7(Lawson)) & (-p_1(Lawson) | -p_7(Lawson)))) | p_8(Lawson).",
                    "p_10(Lawson).",
                    "p_12(Lawson).",
                    "(-p_4(Lawson)) | -p_8(Lawson).",
                    "(-p_4(Lawson)) | -p_7(Lawson)."
                ],
                "formulas(goals)": [
                    "-p_8(Lawson)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Lawson) \u2192 \u00acp_7(Lawson)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n\u00ac((p_5(Lawson) \u2228 p_6(Lawson)) \u2227 (\u00acp_5(Lawson) \u2228 \u00acp_6(Lawson))) \u2228 p_12(Lawson)\n\u00acp_12(Lawson) \u2228 ((p_11(Lawson) \u2228 p_4(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_4(Lawson)))\n\u00acp_2(Lawson) \u2228 ((p_3(Lawson) \u2228 p_10(Lawson)) \u2227 (\u00acp_3(Lawson) \u2228 \u00acp_10(Lawson)))\n\u00acp_10(Lawson) \u2228 ((p_11(Lawson) \u2228 p_9(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)))\n\u00ac((p_9(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_9(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_0(Lawson)\n\u00ac((p_1(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_1(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson)",
                    "-p_6(Lawson)",
                    "p_4(Lawson)",
                    "p_2(Lawson)",
                    "-p_3(Lawson)",
                    "-p_0(Lawson)",
                    "-p_1(Lawson)",
                    "(-((p_5(Lawson) | p_6(Lawson)) & (-p_5(Lawson) | -p_6(Lawson)))) | p_12(Lawson)",
                    "-p_12(Lawson) | ((p_11(Lawson) | p_4(Lawson)) & (-p_11(Lawson) | -p_4(Lawson)))",
                    "-p_2(Lawson) | ((p_3(Lawson) | p_10(Lawson)) & (-p_3(Lawson) | -p_10(Lawson)))",
                    "-p_10(Lawson) | ((p_11(Lawson) | p_9(Lawson)) & (-p_11(Lawson) | -p_9(Lawson)))",
                    "-((p_9(Lawson) | p_7(Lawson)) & (-p_9(Lawson) | -p_7(Lawson))) | p_0(Lawson)",
                    "-((p_1(Lawson) | p_7(Lawson)) & (-p_1(Lawson) | -p_7(Lawson))) | p_8(Lawson)",
                    "p_10(Lawson)",
                    "p_12(Lawson)"
                ],
                "formulas(goals)": [
                    "p_8(Lawson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_4(Lawson) \u2228 \u00acp_8(Lawson)",
                    "\u00acp_4(Lawson) \u2228 \u00acp_7(Lawson)"
                ],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n\u00ac((p_5(Lawson) \u2228 p_6(Lawson)) \u2227 (\u00acp_5(Lawson) \u2228 \u00acp_6(Lawson))) \u2228 p_12(Lawson)\n\u00acp_12(Lawson) \u2228 ((p_11(Lawson) \u2228 p_4(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_4(Lawson)))\n\u00acp_2(Lawson) \u2228 ((p_3(Lawson) \u2228 p_10(Lawson)) \u2227 (\u00acp_3(Lawson) \u2228 \u00acp_10(Lawson)))\n\u00acp_10(Lawson) \u2228 ((p_11(Lawson) \u2228 p_9(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)))\n\u00ac((p_9(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_9(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_0(Lawson)\n\u00ac((p_1(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_1(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)\np_9(Lawson)\np_7(Lawson)\n\u00acp_11(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson)",
                    "-p_6(Lawson)",
                    "p_4(Lawson)",
                    "p_2(Lawson)",
                    "-p_3(Lawson)",
                    "-p_0(Lawson)",
                    "-p_1(Lawson)",
                    "-((p_5(Lawson) | p_6(Lawson)) & (-p_5(Lawson) | -p_6(Lawson))) | p_12(Lawson)",
                    "-p_12(Lawson) | ((p_11(Lawson) | p_4(Lawson)) & (-p_11(Lawson) | -p_4(Lawson)))",
                    "-p_2(Lawson) | ((p_3(Lawson) | p_10(Lawson)) & (-p_3(Lawson) | -p_10(Lawson)))",
                    "-p_10(Lawson) | ((p_11(Lawson) | p_9(Lawson)) & (-p_11(Lawson) | -p_9(Lawson)))",
                    "-((p_9(Lawson) | p_7(Lawson)) & (-p_9(Lawson) | -p_7(Lawson))) | p_0(Lawson)",
                    "-((p_1(Lawson) | p_7(Lawson)) & (-p_1(Lawson) | -p_7(Lawson))) | p_8(Lawson)",
                    "p_10(Lawson)",
                    "p_12(Lawson)",
                    "p_9(Lawson)",
                    "p_7(Lawson)",
                    "-p_11(Lawson)"
                ],
                "formulas(goals)": [
                    "p_8(Lawson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Lawson)",
                    "p_7(Lawson)",
                    "\u00acp_11(Lawson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n\u00ac((p_5(Lawson) \u2228 p_6(Lawson)) \u2227 (\u00acp_5(Lawson) \u2228 \u00acp_6(Lawson))) \u2228 p_12(Lawson)\n\u00acp_12(Lawson) \u2228 ((p_11(Lawson) \u2228 p_4(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_4(Lawson)))\n\u00acp_2(Lawson) \u2228 ((p_3(Lawson) \u2228 p_10(Lawson)) \u2227 (\u00acp_3(Lawson) \u2228 \u00acp_10(Lawson)))\n\u00acp_10(Lawson) \u2228 ((p_11(Lawson) \u2228 p_9(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)))\n\u00ac((p_9(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_9(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_0(Lawson)\n\u00ac((p_1(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_1(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)\np_9(Lawson)\np_7(Lawson)\n\u00acp_11(Lawson)\np_8(Lawson)\np_10(Lawson) \u2228 p_11(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson)",
                    "-p_6(Lawson)",
                    "p_4(Lawson)",
                    "p_2(Lawson)",
                    "-p_3(Lawson)",
                    "-p_0(Lawson)",
                    "-p_1(Lawson)",
                    "-((p_5(Lawson) | p_6(Lawson)) & (-p_5(Lawson) | -p_6(Lawson))) | p_12(Lawson)",
                    "-p_12(Lawson) | ((p_11(Lawson) | p_4(Lawson)) & (-p_11(Lawson) | -p_4(Lawson)))",
                    "-p_2(Lawson) | ((p_3(Lawson) | p_10(Lawson)) & (-p_3(Lawson) | -p_10(Lawson)))",
                    "-p_10(Lawson) | ((p_11(Lawson) | p_9(Lawson)) & (-p_11(Lawson) | -p_9(Lawson)))",
                    "-((p_9(Lawson) | p_7(Lawson)) & (-p_9(Lawson) | -p_7(Lawson))) | p_0(Lawson)",
                    "-((p_1(Lawson) | p_7(Lawson)) & (-p_1(Lawson) | -p_7(Lawson))) | p_8(Lawson)",
                    "p_10(Lawson)",
                    "p_12(Lawson)",
                    "p_9(Lawson)",
                    "p_7(Lawson)",
                    "-p_11(Lawson)",
                    "p_8(Lawson)",
                    "p_10(Lawson) | p_11(Lawson)"
                ],
                "formulas(goals)": [
                    "p_8(Lawson)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Lawson)",
                    "p_10(Lawson) \u2228 p_11(Lawson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Lawson)\n\u00acp_6(Lawson)\np_4(Lawson)\np_2(Lawson)\n\u00acp_3(Lawson)\n\u00acp_0(Lawson)\n\u00acp_1(Lawson)\n\u00ac((p_5(Lawson) \u2228 p_6(Lawson)) \u2227 (\u00acp_5(Lawson) \u2228 \u00acp_6(Lawson))) \u2228 p_12(Lawson)\n\u00acp_12(Lawson) \u2228 ((p_11(Lawson) \u2228 p_4(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_4(Lawson)))\n\u00acp_2(Lawson) \u2228 ((p_3(Lawson) \u2228 p_10(Lawson)) \u2227 (\u00acp_3(Lawson) \u2228 \u00acp_10(Lawson)))\n\u00acp_10(Lawson) \u2228 ((p_11(Lawson) \u2228 p_9(Lawson)) \u2227 (\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)))\n\u00ac((p_9(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_9(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_0(Lawson)\n\u00ac((p_1(Lawson) \u2228 p_7(Lawson)) \u2227 (\u00acp_1(Lawson) \u2228 \u00acp_7(Lawson))) \u2228 p_8(Lawson)\np_10(Lawson)\np_12(Lawson)\np_9(Lawson)\np_7(Lawson)\n\u00acp_11(Lawson)\np_8(Lawson)\np_10(Lawson) \u2228 p_11(Lawson)\np_11(Lawson) \u2228 p_9(Lawson)\n\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)",
            "Initial Goal": "p_8(Lawson)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Lawson).",
                    "-p_6(Lawson).",
                    "p_4(Lawson).",
                    "p_2(Lawson).",
                    "-p_3(Lawson).",
                    "-p_0(Lawson).",
                    "-p_1(Lawson).",
                    "-((p_5(Lawson) | p_6(Lawson)) & (-p_5(Lawson) | -p_6(Lawson))) | p_12(Lawson).",
                    "-p_12(Lawson) | ((p_11(Lawson) | p_4(Lawson)) & (-p_11(Lawson) | -p_4(Lawson))).",
                    "-p_2(Lawson) | ((p_3(Lawson) | p_10(Lawson)) & (-p_3(Lawson) | -p_10(Lawson))).",
                    "-p_10(Lawson) | ((p_11(Lawson) | p_9(Lawson)) & (-p_11(Lawson) | -p_9(Lawson))).",
                    "-((p_9(Lawson) | p_7(Lawson)) & (-p_9(Lawson) | -p_7(Lawson))) | p_0(Lawson).",
                    "-((p_1(Lawson) | p_7(Lawson)) & (-p_1(Lawson) | -p_7(Lawson))) | p_8(Lawson).",
                    "p_10(Lawson).",
                    "p_12(Lawson).",
                    "p_9(Lawson).",
                    "p_7(Lawson).",
                    "-p_11(Lawson).",
                    "p_8(Lawson).",
                    "p_10(Lawson) | p_11(Lawson).",
                    "p_11(Lawson) | p_9(Lawson).",
                    "-p_11(Lawson) | -p_9(Lawson)."
                ],
                "formulas(goals)": [
                    "p_8(Lawson)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Lawson) \u2228 p_9(Lawson)",
                    "\u00acp_11(Lawson) \u2228 \u00acp_9(Lawson)"
                ],
                "added_rules": []
            }
        }
    ]
}