{
    "background_story": "Imran was a former army officer who had always been passionate about fitness. After his service, he decided to pursue a career in bodybuilding, dedicating himself to building his muscle mass. With a rigorous training regimen and a strict diet, Imran transformed his physique, sculpting his body into a testament to his hard work and discipline. His broad shoulders, chiseled chest, and powerful biceps made him a standout at local bodybuilding competitions. Imran's dedication to fitness inspired many, and he soon became a sought-after personal trainer, helping others achieve their own muscle-building goals. His motto, 'Muscle is made in the kitchen and shaped in the gym,' reflected his holistic approach to fitness, emphasizing both nutrition and exercise as key to building strength and muscle.",
    "predicates": [
        {
            "id": 0,
            "name": "tracks_progress"
        },
        {
            "id": 1,
            "name": "works_hard"
        },
        {
            "id": 2,
            "name": "is_motivated"
        },
        {
            "id": 3,
            "name": "creates_plans"
        },
        {
            "id": 4,
            "name": "eats_healthy"
        },
        {
            "id": 5,
            "name": "exercises_regularly"
        },
        {
            "id": 6,
            "name": "stays_fit"
        },
        {
            "id": 7,
            "name": "has_discipline"
        },
        {
            "id": 8,
            "name": "gets_results"
        },
        {
            "id": 9,
            "name": "sets_goals"
        },
        {
            "id": 10,
            "name": "builds_muscle"
        },
        {
            "id": 11,
            "name": "rests_properly"
        },
        {
            "id": 12,
            "name": "trains_daily"
        },
        {
            "id": 13,
            "name": "builds_strength"
        },
        {
            "id": 14,
            "name": "manages_time"
        },
        {
            "id": 15,
            "name": "prioritizes_tasks"
        },
        {
            "id": 16,
            "name": "has_ambition"
        },
        {
            "id": 17,
            "name": "seeks_improvement"
        }
    ],
    "subject_name": "Imran",
    "subject_category": "human",
    "keyword": "muscle",
    "all_facts": [
        {
            "id": 0,
            "subject": "Imran",
            "text": "Imran tracks progress.",
            "fol": "p_0(Imran)",
            "str_fol": "tracks_progress(Imran)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Imran",
            "text": "Imran does not work hard.",
            "fol": "\u00acp_1(Imran)",
            "str_fol": "\u00acworks_hard(Imran)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Imran",
            "text": "Imran is motivated.",
            "fol": "p_2(Imran)",
            "str_fol": "is_motivated(Imran)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Imran",
            "text": "Imran creates plans.",
            "fol": "p_3(Imran)",
            "str_fol": "creates_plans(Imran)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Imran",
            "text": "Imran sets goals.",
            "fol": "p_9(Imran)",
            "str_fol": "sets_goals(Imran)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Imran",
            "text": "Imran has discipline.",
            "fol": "p_7(Imran)",
            "str_fol": "has_discipline(Imran)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Imran",
            "text": "Imran gets results.",
            "fol": "p_8(Imran)",
            "str_fol": "gets_results(Imran)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Imran",
            "text": "Imran does not stay fit.",
            "fol": "\u00acp_6(Imran)",
            "str_fol": "\u00acstays_fit(Imran)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Imran",
            "text": "Imran does not eat healthy.",
            "fol": "\u00acp_4(Imran)",
            "str_fol": "\u00aceats_healthy(Imran)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Imran",
            "text": "Imran exercises regularly.",
            "fol": "p_5(Imran)",
            "str_fol": "exercises_regularly(Imran)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Imran",
            "text": "Imran is motivated.",
            "fol": "p_2(Imran)",
            "str_fol": "is_motivated(Imran)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Imran",
            "text": "Imran creates plans.",
            "fol": "p_3(Imran)",
            "str_fol": "creates_plans(Imran)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Imran",
            "text": "Imran does not work hard.",
            "fol": "\u00acp_1(Imran)",
            "str_fol": "\u00acworks_hard(Imran)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Imran",
            "text": "Imran tracks progress.",
            "fol": "p_0(Imran)",
            "str_fol": "tracks_progress(Imran)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If someone is motivated, then they create plans and set goals.",
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (is_motivated(x) \u2192 (creates_plans(x) \u2227 sets_goals(x)))"
        },
        {
            "id": 4,
            "text": "Imran either has discipline or works hard.",
            "fol": "p_7(Imran) \u2228 p_1(Imran)",
            "str_fol": "has_discipline(Imran) \u2228 works_hard(Imran)"
        },
        {
            "id": 3,
            "text": "If Imran sets goals and tracks progress, then he gets results.",
            "fol": "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
            "str_fol": "(sets_goals(Imran) \u2227 tracks_progress(Imran)) \u2192 gets_results(Imran)"
        },
        {
            "id": 2,
            "text": "If Imran stays fit, then he either has discipline or gets results, but not both.",
            "fol": "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
            "str_fol": "stays_fit(Imran) \u2192 (has_discipline(Imran) \u2295 gets_results(Imran))"
        },
        {
            "id": 1,
            "text": "If a person eats healthy, then they stay fit.",
            "fol": "\u2200x (p_4(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (eats_healthy(x) \u2192 stays_fit(x))"
        },
        {
            "id": 0,
            "text": "Imran either eats healthy or exercises regularly (or both).",
            "fol": "p_4(Imran) \u2228 p_5(Imran)",
            "str_fol": "eats_healthy(Imran) \u2228 exercises_regularly(Imran)"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Imran",
            "text": "Imran is motivated.",
            "fol": "p_2(Imran)",
            "str_fol": "is_motivated(Imran)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Imran",
            "text": "Imran creates plans.",
            "fol": "p_3(Imran)",
            "str_fol": "creates_plans(Imran)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Imran",
            "text": "Imran does not work hard.",
            "fol": "\u00acp_1(Imran)",
            "str_fol": "\u00acworks_hard(Imran)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Imran",
            "text": "Imran tracks progress.",
            "fol": "p_0(Imran)",
            "str_fol": "tracks_progress(Imran)",
            "negation": false
        },
        {
            "id": 5,
            "text": "If someone is motivated, then they create plans and set goals.",
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (is_motivated(x) \u2192 (creates_plans(x) \u2227 sets_goals(x)))"
        },
        {
            "id": 4,
            "text": "Imran either has discipline or works hard.",
            "fol": "p_7(Imran) \u2228 p_1(Imran)",
            "str_fol": "has_discipline(Imran) \u2228 works_hard(Imran)"
        },
        {
            "id": 3,
            "text": "If Imran sets goals and tracks progress, then he gets results.",
            "fol": "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
            "str_fol": "(sets_goals(Imran) \u2227 tracks_progress(Imran)) \u2192 gets_results(Imran)"
        },
        {
            "id": 2,
            "text": "If Imran stays fit, then he either has discipline or gets results, but not both.",
            "fol": "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
            "str_fol": "stays_fit(Imran) \u2192 (has_discipline(Imran) \u2295 gets_results(Imran))"
        },
        {
            "id": 1,
            "text": "If a person eats healthy, then they stay fit.",
            "fol": "\u2200x (p_4(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (eats_healthy(x) \u2192 stays_fit(x))"
        },
        {
            "id": 0,
            "text": "Imran either eats healthy or exercises regularly (or both).",
            "fol": "p_4(Imran) \u2228 p_5(Imran)",
            "str_fol": "eats_healthy(Imran) \u2228 exercises_regularly(Imran)"
        }
    ],
    "context_fol": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))\np_7(Imran) \u2228 p_1(Imran)\n(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)\np_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)",
    "conclusion": {
        "id": 9,
        "subject": "Imran",
        "text": "Imran exercises regularly.",
        "fol": "p_5(Imran)",
        "str_fol": "exercises_regularly(Imran)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Imran)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Imran",
                    "text": "Imran is motivated.",
                    "fol": "p_2(Imran)",
                    "str_fol": "is_motivated(Imran)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Imran",
                    "text": "Imran creates plans.",
                    "fol": "p_3(Imran)",
                    "str_fol": "creates_plans(Imran)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone is motivated, then they create plans and set goals.",
                    "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))",
                    "str_fol": "\u2200x (is_motivated(x) \u2192 (creates_plans(x) \u2227 sets_goals(x)))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Imran",
                "text": "Imran sets goals.",
                "fol": "p_9(Imran)",
                "str_fol": "sets_goals(Imran)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Imran",
                    "text": "Imran does not work hard.",
                    "fol": "\u00acp_1(Imran)",
                    "str_fol": "\u00acworks_hard(Imran)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Imran either has discipline or works hard.",
                    "fol": "p_7(Imran) \u2228 p_1(Imran)",
                    "str_fol": "has_discipline(Imran) \u2228 works_hard(Imran)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Imran",
                "text": "Imran has discipline.",
                "fol": "p_7(Imran)",
                "str_fol": "has_discipline(Imran)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Imran",
                    "text": "Imran sets goals.",
                    "fol": "p_9(Imran)",
                    "str_fol": "sets_goals(Imran)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Imran",
                    "text": "Imran tracks progress.",
                    "fol": "p_0(Imran)",
                    "str_fol": "tracks_progress(Imran)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Imran sets goals and tracks progress, then he gets results.",
                    "fol": "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
                    "str_fol": "(sets_goals(Imran) \u2227 tracks_progress(Imran)) \u2192 gets_results(Imran)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Imran",
                "text": "Imran gets results.",
                "fol": "p_8(Imran)",
                "str_fol": "gets_results(Imran)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Imran",
                    "text": "Imran has discipline.",
                    "fol": "p_7(Imran)",
                    "str_fol": "has_discipline(Imran)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Imran",
                    "text": "Imran gets results.",
                    "fol": "p_8(Imran)",
                    "str_fol": "gets_results(Imran)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Imran stays fit, then he either has discipline or gets results, but not both.",
                    "fol": "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
                    "str_fol": "stays_fit(Imran) \u2192 (has_discipline(Imran) \u2295 gets_results(Imran))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Imran",
                "text": "Imran does not stay fit.",
                "fol": "\u00acp_6(Imran)",
                "str_fol": "\u00acstays_fit(Imran)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Imran",
                    "text": "Imran does not stay fit.",
                    "fol": "\u00acp_6(Imran)",
                    "str_fol": "\u00acstays_fit(Imran)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If a person eats healthy, then they stay fit.",
                    "fol": "\u2200x (p_4(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (eats_healthy(x) \u2192 stays_fit(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Imran",
                "text": "Imran does not eat healthy.",
                "fol": "\u00acp_4(Imran)",
                "str_fol": "\u00aceats_healthy(Imran)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Imran",
                    "text": "Imran does not eat healthy.",
                    "fol": "\u00acp_4(Imran)",
                    "str_fol": "\u00aceats_healthy(Imran)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Imran either eats healthy or exercises regularly (or both).",
                    "fol": "p_4(Imran) \u2228 p_5(Imran)",
                    "str_fol": "eats_healthy(Imran) \u2228 exercises_regularly(Imran)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Imran",
                "text": "Imran exercises regularly.",
                "fol": "p_5(Imran)",
                "str_fol": "exercises_regularly(Imran)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_2(x) -> p_3(x) & p_9(x))).  [assumption].\n2 p_9(Imran) & p_0(Imran) -> p_8(Imran).  [assumption].\n3 p_6(Imran) -> -(p_7(Imran) <-> p_8(Imran)).  [assumption].\n4 (all x (p_4(x) -> p_6(x))).  [assumption].\n5 p_5(Imran).  [goal].\n7 p_2(Imran).  [assumption].\n8 -p_2(x) | p_9(x).  [clausify(1)].\n9 p_7(Imran) | p_1(Imran).  [assumption].\n10 -p_1(Imran).  [assumption].\n11 -p_9(Imran) | -p_0(Imran) | p_8(Imran).  [clausify(2)].\n12 p_0(Imran).  [assumption].\n13 -p_4(x) | p_6(x).  [clausify(4)].\n15 -p_6(Imran) | -p_7(Imran) | -p_8(Imran).  [clausify(3)].\n16 -p_4(Imran) | -p_7(Imran) | -p_8(Imran).  [resolve(13,b,15,a)].\n17 p_4(Imran) | p_5(Imran).  [assumption].\n18 -p_7(Imran) | -p_8(Imran) | p_5(Imran).  [resolve(16,a,17,a)].\n19 -p_5(Imran).  [deny(5)].\n20 -p_9(Imran) | p_8(Imran).  [resolve(11,b,12,a)].\n21 p_9(Imran).  [resolve(8,a,7,a)].\n22 -p_7(Imran) | -p_8(Imran).  [resolve(18,c,19,a)].\n23 p_7(Imran).  [resolve(9,b,10,a)].\n24 -p_8(Imran).  [resolve(22,a,23,a)].\n25 p_8(Imran).  [resolve(20,a,21,a)].\n26 $F.  [resolve(24,a,25,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\n(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)\np_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u2200x (p_4(x) \u2192 \u00acp_5(x))",
            "Initial Goal": "p_5(Imran)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran)",
                    "p_3(Imran)",
                    "-p_1(Imran)",
                    "p_0(Imran)",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x)))",
                    "p_7(Imran) | p_1(Imran)",
                    "(p_9(Imran) & p_0(Imran)) -> p_8(Imran)",
                    "p_6(Imran) -> (-(p_7(Imran) <-> p_8(Imran)))",
                    "all x (p_4(x) -> p_6(x))",
                    "p_4(Imran) | p_5(Imran)",
                    "p_4(Imran)",
                    "all x (p_4(x) -> -p_5(x))"
                ],
                "formulas(goals)": [
                    "-p_5(Imran)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))"
                ],
                "added_facts": [
                    "p_4(Imran)"
                ],
                "added_rules": [
                    "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
                    "\u2200x (p_4(x) \u2192 \u00acp_5(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\np_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))\np_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u2200x (p_4(x) \u2192 \u00acp_5(x))\n\u00acp_9(Imran)\np_0(Imran) \u2228 \u00acp_0(Imran)\n\u2200x (p_5(x) \u2192 \u00acp_4(x))\np_4(Imran) \u2228 p_9(Imran)",
            "Initial Goal": "p_5(Imran)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran).",
                    "p_3(Imran).",
                    "-p_1(Imran).",
                    "p_0(Imran).",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
                    "p_7(Imran) | p_1(Imran).",
                    "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
                    "p_6(Imran) -> (-(p_7(Imran) <-> p_8(Imran))).",
                    "all x (p_4(x) -> p_6(x)).",
                    "p_4(Imran) | p_5(Imran).",
                    "p_4(Imran).",
                    "all x (p_4(x) -> -p_5(x)).",
                    "-p_9(Imran).",
                    "p_0(Imran) | -p_0(Imran).",
                    "all x (p_5(x) -> -p_4(x)).",
                    "p_4(Imran) | p_9(Imran)."
                ],
                "formulas(goals)": [
                    "-p_5(Imran)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)"
                ],
                "added_facts": [
                    "\u00acp_9(Imran)",
                    "p_0(Imran) \u2228 \u00acp_0(Imran)",
                    "p_4(Imran) \u2228 p_9(Imran)"
                ],
                "added_rules": [
                    "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
                    "\u2200x (p_5(x) \u2192 \u00acp_4(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\np_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))\np_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u2200x (p_4(x) \u2192 \u00acp_5(x))\n\u00acp_9(Imran)\np_0(Imran) \u2228 \u00acp_0(Imran)\n\u2200x (p_5(x) \u2192 \u00acp_4(x))\np_4(Imran) \u2228 p_9(Imran)\np_7(Imran)\np_6(Imran)\n\u00acp_8(Imran)",
            "Initial Goal": "p_5(Imran)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran).",
                    "p_3(Imran).",
                    "-p_1(Imran).",
                    "p_0(Imran).",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
                    "p_7(Imran) | p_1(Imran).",
                    "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
                    "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & (-(p_7(Imran) & p_8(Imran)))).",
                    "all x (p_4(x) -> p_6(x)).",
                    "p_4(Imran) | p_5(Imran).",
                    "p_4(Imran).",
                    "all x (p_4(x) -> -p_5(x)).",
                    "-p_9(Imran).",
                    "p_0(Imran) | -p_0(Imran).",
                    "all x (p_5(x) -> -p_4(x)).",
                    "p_4(Imran) | p_9(Imran).",
                    "p_7(Imran).",
                    "p_6(Imran).",
                    "-p_8(Imran)."
                ],
                "formulas(goals)": [
                    "-p_5(Imran)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Imran)",
                    "p_6(Imran)",
                    "\u00acp_8(Imran)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\np_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))\np_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u00acp_9(Imran)\np_0(Imran) \u2228 \u00acp_0(Imran)\np_4(Imran) \u2228 p_9(Imran)\np_7(Imran)\np_6(Imran)\n\u00acp_8(Imran)\n\u00acp_4(Imran) \u2228 p_5(Imran)",
            "Initial Goal": "p_5(Imran)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran).",
                    "p_3(Imran).",
                    "-p_1(Imran).",
                    "p_0(Imran).",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
                    "p_7(Imran) | p_1(Imran).",
                    "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
                    "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & -(p_7(Imran) & p_8(Imran))).",
                    "all x (p_4(x) -> p_6(x)).",
                    "p_4(Imran) | p_5(Imran).",
                    "p_4(Imran).",
                    "-p_9(Imran).",
                    "p_0(Imran) | -p_0(Imran).",
                    "p_4(Imran) | p_9(Imran).",
                    "p_7(Imran).",
                    "p_6(Imran).",
                    "-p_8(Imran).",
                    "-p_4(Imran) | p_5(Imran)."
                ],
                "formulas(goals)": [
                    "p_5(Imran)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2192 \u00acp_5(x))",
                    "\u2200x (p_5(x) \u2192 \u00acp_4(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Imran) \u2228 p_5(Imran)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\np_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))\np_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u00acp_9(Imran)\np_0(Imran) \u2228 \u00acp_0(Imran)\np_4(Imran) \u2228 p_9(Imran)\np_7(Imran)\np_6(Imran)\n\u00acp_8(Imran)\n\u00acp_4(Imran) \u2228 p_5(Imran)\np_5(Imran)\np_2(Imran) \u2192 p_3(Imran)\np_2(Imran) \u2192 \u00acp_9(Imran)\np_4(Imran) \u2192 p_6(Imran)\np_5(Imran) \u2228 p_9(Imran)",
            "Initial Goal": "p_5(Imran)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran)",
                    "p_3(Imran)",
                    "-p_1(Imran)",
                    "p_0(Imran)",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x)))",
                    "p_7(Imran) | p_1(Imran)",
                    "p_9(Imran) -> (p_0(Imran) -> p_8(Imran))",
                    "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & -(p_7(Imran) & p_8(Imran)))",
                    "all x (p_4(x) -> p_6(x))",
                    "p_4(Imran) | p_5(Imran)",
                    "p_4(Imran)",
                    "-p_9(Imran)",
                    "p_0(Imran) | -p_0(Imran)",
                    "p_4(Imran) | p_9(Imran)",
                    "p_7(Imran)",
                    "p_6(Imran)",
                    "-p_8(Imran)",
                    "-p_4(Imran) | p_5(Imran)",
                    "p_5(Imran)",
                    "p_2(Imran) -> p_3(Imran)",
                    "p_2(Imran) -> -p_9(Imran)",
                    "p_4(Imran) -> p_6(Imran)",
                    "p_5(Imran) | p_9(Imran)"
                ],
                "formulas(goals)": [
                    "p_5(Imran)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Imran)"
                ],
                "added_rules": [
                    "p_2(Imran) \u2192 p_3(Imran)",
                    "p_2(Imran) \u2192 \u00acp_9(Imran)",
                    "p_4(Imran) \u2192 p_6(Imran)",
                    "p_5(Imran) \u2228 p_9(Imran)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\np_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))\np_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u00acp_9(Imran)\np_0(Imran) \u2228 \u00acp_0(Imran)\np_4(Imran) \u2228 p_9(Imran)\np_7(Imran)\np_6(Imran)\n\u00acp_8(Imran)\n\u00acp_4(Imran) \u2228 p_5(Imran)\np_5(Imran)\np_2(Imran) \u2192 p_3(Imran)\np_2(Imran) \u2192 \u00acp_9(Imran)\np_4(Imran) \u2192 p_6(Imran)\np_5(Imran) \u2228 p_9(Imran)\np_6(Imran) \u2228 \u00acp_4(Imran)\n\u00acp_9(Imran) \u2228 \u00acp_0(Imran) \u2228 p_8(Imran)\np_3(Imran) \u2227 \u00acp_9(Imran)\np_3(Imran)",
            "Initial Goal": "p_5(Imran)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran)",
                    "p_3(Imran)",
                    "-p_1(Imran)",
                    "p_0(Imran)",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x)))",
                    "p_7(Imran) | p_1(Imran)",
                    "p_9(Imran) -> (p_0(Imran) -> p_8(Imran))",
                    "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & -(p_7(Imran) & p_8(Imran)))",
                    "all x (p_4(x) -> p_6(x))",
                    "p_4(Imran) | p_5(Imran)",
                    "p_4(Imran)",
                    "-p_9(Imran)",
                    "p_0(Imran) | -p_0(Imran)",
                    "p_4(Imran) | p_9(Imran)",
                    "p_7(Imran)",
                    "p_6(Imran)",
                    "-p_8(Imran)",
                    "-p_4(Imran) | p_5(Imran)",
                    "p_5(Imran)",
                    "p_2(Imran) -> p_3(Imran)",
                    "p_2(Imran) -> -p_9(Imran)",
                    "p_4(Imran) -> p_6(Imran)",
                    "p_5(Imran) | p_9(Imran)",
                    "p_6(Imran) | -p_4(Imran)",
                    "-p_9(Imran) | -p_0(Imran) | p_8(Imran)",
                    "p_3(Imran) & -p_9(Imran)",
                    "p_3(Imran)"
                ],
                "formulas(goals)": [
                    "p_5(Imran)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Imran) \u2228 \u00acp_4(Imran)",
                    "\u00acp_9(Imran) \u2228 \u00acp_0(Imran) \u2228 p_8(Imran)",
                    "p_3(Imran) \u2227 \u00acp_9(Imran)",
                    "p_3(Imran)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_2(Imran)\np_3(Imran)\n\u00acp_1(Imran)\np_0(Imran)\n\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))\np_7(Imran) \u2228 p_1(Imran)\np_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))\np_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))\n\u2200x (p_4(x) \u2192 p_6(x))\np_4(Imran) \u2228 p_5(Imran)\np_4(Imran)\n\u00acp_9(Imran)\np_0(Imran) \u2228 \u00acp_0(Imran)\np_4(Imran) \u2228 p_9(Imran)\np_7(Imran)\np_6(Imran)\n\u00acp_8(Imran)\np_5(Imran) \u2228 p_9(Imran)\np_6(Imran) \u2228 \u00acp_4(Imran)\n\u00acp_9(Imran) \u2228 \u00acp_0(Imran) \u2228 p_8(Imran)\np_3(Imran) \u2227 \u00acp_9(Imran)\np_3(Imran)\np_4(Imran) \u2192 \u00acp_5(Imran)",
            "Initial Goal": "p_5(Imran)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_2(Imran).",
                    "p_3(Imran).",
                    "-p_1(Imran).",
                    "p_0(Imran).",
                    "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
                    "p_7(Imran) | p_1(Imran).",
                    "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
                    "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & (-(p_7(Imran) & p_8(Imran)))).",
                    "all x (p_4(x) -> p_6(x)).",
                    "p_4(Imran) | p_5(Imran).",
                    "p_4(Imran).",
                    "-p_9(Imran).",
                    "p_0(Imran) | -p_0(Imran).",
                    "p_4(Imran) | p_9(Imran).",
                    "p_7(Imran).",
                    "p_6(Imran).",
                    "-p_8(Imran).",
                    "p_5(Imran) | p_9(Imran).",
                    "p_6(Imran) | -p_4(Imran).",
                    "-p_9(Imran) | -p_0(Imran) | p_8(Imran).",
                    "p_3(Imran) & -p_9(Imran).",
                    "p_3(Imran).",
                    "p_4(Imran) -> -p_5(Imran)."
                ],
                "formulas(goals)": [
                    "-p_5(Imran)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Imran)"
                ],
                "removed_rules": [
                    "\u00acp_4(Imran) \u2228 p_5(Imran)",
                    "p_2(Imran) \u2192 p_3(Imran)",
                    "p_2(Imran) \u2192 \u00acp_9(Imran)",
                    "p_4(Imran) \u2192 p_6(Imran)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Imran) \u2192 \u00acp_5(Imran)"
                ]
            }
        }
    ]
}