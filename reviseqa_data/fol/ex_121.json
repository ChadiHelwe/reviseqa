{
    "background_story": "Callen worked as a counterperson at a bustling deli in the city, where the lunch rush was chaotic and the regulars were as colorful as they were demanding. Despite the fast-paced environment, Callen remained calm and composed, juggling multiple orders with ease. His ability to multitask and remember intricate details, such as who took their coffee black and who liked their sandwiches toasted, made him a favorite among the patrons. Callen's friendly demeanor and quick wit also helped to de-escalate conflicts, turning even the grumpiest of customers into loyal fans of the deli. As the years passed, Callen became an institution, a steady presence behind the counter who always had a smile and a kind word ready.",
    "predicates": [
        {
            "id": 0,
            "name": "provide_good_service"
        },
        {
            "id": 1,
            "name": "think_quickly"
        },
        {
            "id": 2,
            "name": "patient"
        },
        {
            "id": 3,
            "name": "succeed"
        },
        {
            "id": 4,
            "name": "friendly"
        },
        {
            "id": 5,
            "name": "competent"
        },
        {
            "id": 6,
            "name": "helpful"
        },
        {
            "id": 7,
            "name": "attentive"
        },
        {
            "id": 8,
            "name": "work_under_pressure"
        },
        {
            "id": 9,
            "name": "stay_calm"
        },
        {
            "id": 10,
            "name": "manage_stress"
        },
        {
            "id": 11,
            "name": "handle_pressure"
        },
        {
            "id": 12,
            "name": "listens_well"
        },
        {
            "id": 13,
            "name": "knows_regulars"
        },
        {
            "id": 14,
            "name": "juggles_orders"
        },
        {
            "id": 15,
            "name": "remembers_details"
        },
        {
            "id": 16,
            "name": "handle_multiple_tasks"
        },
        {
            "id": 17,
            "name": "keep_smiling"
        },
        {
            "id": 18,
            "name": "face_challenges"
        },
        {
            "id": 19,
            "name": "keep_composed"
        },
        {
            "id": 20,
            "name": "work_fast"
        },
        {
            "id": 21,
            "name": "remember_details"
        },
        {
            "id": 22,
            "name": "juggle_tasks"
        },
        {
            "id": 23,
            "name": "maintain_composure"
        }
    ],
    "subject_name": "Callen",
    "subject_category": "human",
    "keyword": "counterperson",
    "all_facts": [
        {
            "id": 0,
            "subject": "Callen",
            "text": "Callen does not provide good service.",
            "fol": "\u00acp_0(Callen)",
            "str_fol": "\u00acprovide_good_service(Callen)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Callen",
            "text": "Callen thinks quickly.",
            "fol": "p_1(Callen)",
            "str_fol": "think_quickly(Callen)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Callen",
            "text": "Callen is patient.",
            "fol": "p_2(Callen)",
            "str_fol": "patient(Callen)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Callen",
            "text": "Callen will succeed.",
            "fol": "p_3(Callen)",
            "str_fol": "succeed(Callen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Callen",
            "text": "Callen does not handle pressure.",
            "fol": "\u00acp_11(Callen)",
            "str_fol": "\u00achandle_pressure(Callen)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Callen",
            "text": "Callen stays calm.",
            "fol": "p_9(Callen)",
            "str_fol": "stay_calm(Callen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Callen",
            "text": "Callen works well under pressure.",
            "fol": "p_8(Callen)",
            "str_fol": "work_under_pressure(Callen)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Callen",
            "text": "Callen is attentive.",
            "fol": "p_7(Callen)",
            "str_fol": "attentive(Callen)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Callen",
            "text": "Callen is not helpful.",
            "fol": "\u00acp_6(Callen)",
            "str_fol": "\u00achelpful(Callen)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Callen",
            "text": "Callen is friendly.",
            "fol": "p_4(Callen)",
            "str_fol": "friendly(Callen)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Callen",
            "text": "Callen is competent.",
            "fol": "p_5(Callen)",
            "str_fol": "competent(Callen)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Callen",
            "text": "Callen will succeed.",
            "fol": "p_3(Callen)",
            "str_fol": "succeed(Callen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Callen",
            "text": "Callen thinks quickly.",
            "fol": "p_1(Callen)",
            "str_fol": "think_quickly(Callen)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Callen",
            "text": "Callen does not provide good service.",
            "fol": "\u00acp_0(Callen)",
            "str_fol": "\u00acprovide_good_service(Callen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Callen",
            "text": "Callen is patient.",
            "fol": "p_2(Callen)",
            "str_fol": "patient(Callen)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Callen manages stress, then he will succeed.",
            "fol": "p_10(Callen) \u2192 p_3(Callen)",
            "str_fol": "manage_stress(Callen) \u2192 succeed(Callen)"
        },
        {
            "id": 6,
            "text": "A person either handles pressure or thinks quickly, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_1(x))",
            "str_fol": "\u2200x (handle_pressure(x) \u2295 think_quickly(x))"
        },
        {
            "id": 5,
            "text": "Callen stays calm or handles pressure.",
            "fol": "p_9(Callen) \u2228 p_11(Callen)",
            "str_fol": "stay_calm(Callen) \u2228 handle_pressure(Callen)"
        },
        {
            "id": 4,
            "text": "If someone stays calm, then they manage stress and work well under pressure.",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (stay_calm(x) \u2192 (manage_stress(x) \u2227 work_under_pressure(x)))"
        },
        {
            "id": 3,
            "text": "Everyone who works well under pressure either provides good service or is attentive (or both).",
            "fol": "\u2200x (p_8(x) \u2192 (p_0(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (work_under_pressure(x) \u2192 (provide_good_service(x) \u2228 attentive(x)))"
        },
        {
            "id": 2,
            "text": "If Callen is helpful, then he is either patient or attentive, but not both.",
            "fol": "p_6(Callen) \u2192 (p_2(Callen) \u2295 p_7(Callen))",
            "str_fol": "helpful(Callen) \u2192 (patient(Callen) \u2295 attentive(Callen))"
        },
        {
            "id": 1,
            "text": "Callen is either friendly or helpful.",
            "fol": "p_4(Callen) \u2228 p_6(Callen)",
            "str_fol": "friendly(Callen) \u2228 helpful(Callen)"
        },
        {
            "id": 0,
            "text": "Callen is either friendly or competent (or both).",
            "fol": "p_4(Callen) \u2228 p_5(Callen)",
            "str_fol": "friendly(Callen) \u2228 competent(Callen)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Callen",
            "text": "Callen will succeed.",
            "fol": "p_3(Callen)",
            "str_fol": "succeed(Callen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Callen",
            "text": "Callen thinks quickly.",
            "fol": "p_1(Callen)",
            "str_fol": "think_quickly(Callen)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Callen",
            "text": "Callen does not provide good service.",
            "fol": "\u00acp_0(Callen)",
            "str_fol": "\u00acprovide_good_service(Callen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Callen",
            "text": "Callen is patient.",
            "fol": "p_2(Callen)",
            "str_fol": "patient(Callen)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Callen manages stress, then he will succeed.",
            "fol": "p_10(Callen) \u2192 p_3(Callen)",
            "str_fol": "manage_stress(Callen) \u2192 succeed(Callen)"
        },
        {
            "id": 6,
            "text": "A person either handles pressure or thinks quickly, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_1(x))",
            "str_fol": "\u2200x (handle_pressure(x) \u2295 think_quickly(x))"
        },
        {
            "id": 5,
            "text": "Callen stays calm or handles pressure.",
            "fol": "p_9(Callen) \u2228 p_11(Callen)",
            "str_fol": "stay_calm(Callen) \u2228 handle_pressure(Callen)"
        },
        {
            "id": 4,
            "text": "If someone stays calm, then they manage stress and work well under pressure.",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (stay_calm(x) \u2192 (manage_stress(x) \u2227 work_under_pressure(x)))"
        },
        {
            "id": 3,
            "text": "Everyone who works well under pressure either provides good service or is attentive (or both).",
            "fol": "\u2200x (p_8(x) \u2192 (p_0(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (work_under_pressure(x) \u2192 (provide_good_service(x) \u2228 attentive(x)))"
        },
        {
            "id": 2,
            "text": "If Callen is helpful, then he is either patient or attentive, but not both.",
            "fol": "p_6(Callen) \u2192 (p_2(Callen) \u2295 p_7(Callen))",
            "str_fol": "helpful(Callen) \u2192 (patient(Callen) \u2295 attentive(Callen))"
        },
        {
            "id": 1,
            "text": "Callen is either friendly or helpful.",
            "fol": "p_4(Callen) \u2228 p_6(Callen)",
            "str_fol": "friendly(Callen) \u2228 helpful(Callen)"
        },
        {
            "id": 0,
            "text": "Callen is either friendly or competent (or both).",
            "fol": "p_4(Callen) \u2228 p_5(Callen)",
            "str_fol": "friendly(Callen) \u2228 competent(Callen)"
        }
    ],
    "context_fol": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\np_10(Callen) \u2192 p_3(Callen)\n\u2200x (p_11(x) \u2295 p_1(x))\np_9(Callen) \u2228 p_11(Callen)\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_8(x)))\n\u2200x (p_8(x) \u2192 (p_0(x) \u2228 p_7(x)))\np_6(Callen) \u2192 (p_2(Callen) \u2295 p_7(Callen))\np_4(Callen) \u2228 p_6(Callen)\np_4(Callen) \u2228 p_5(Callen)",
    "conclusion": {
        "id": 10,
        "subject": "Callen",
        "text": "Callen is competent.",
        "fol": "p_5(Callen)",
        "str_fol": "competent(Callen)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_5(Callen)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Callen",
                    "text": "Callen will succeed.",
                    "fol": "p_3(Callen)",
                    "str_fol": "succeed(Callen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Callen manages stress, then he will succeed.",
                    "fol": "p_10(Callen) \u2192 p_3(Callen)",
                    "str_fol": "manage_stress(Callen) \u2192 succeed(Callen)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Callen",
                    "text": "Callen thinks quickly.",
                    "fol": "p_1(Callen)",
                    "str_fol": "think_quickly(Callen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "A person either handles pressure or thinks quickly, but not necessarily both.",
                    "fol": "\u2200x (p_11(x) \u2295 p_1(x))",
                    "str_fol": "\u2200x (handle_pressure(x) \u2295 think_quickly(x))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Callen",
                "text": "Callen does not handle pressure.",
                "fol": "\u00acp_11(Callen)",
                "str_fol": "\u00achandle_pressure(Callen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Callen",
                    "text": "Callen does not handle pressure.",
                    "fol": "\u00acp_11(Callen)",
                    "str_fol": "\u00achandle_pressure(Callen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Callen stays calm or handles pressure.",
                    "fol": "p_9(Callen) \u2228 p_11(Callen)",
                    "str_fol": "stay_calm(Callen) \u2228 handle_pressure(Callen)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Callen",
                "text": "Callen stays calm.",
                "fol": "p_9(Callen)",
                "str_fol": "stay_calm(Callen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Callen",
                    "text": "Callen stays calm.",
                    "fol": "p_9(Callen)",
                    "str_fol": "stay_calm(Callen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone stays calm, then they manage stress and work well under pressure.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_8(x)))",
                    "str_fol": "\u2200x (stay_calm(x) \u2192 (manage_stress(x) \u2227 work_under_pressure(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Callen",
                "text": "Callen works well under pressure.",
                "fol": "p_8(Callen)",
                "str_fol": "work_under_pressure(Callen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Callen",
                    "text": "Callen works well under pressure.",
                    "fol": "p_8(Callen)",
                    "str_fol": "work_under_pressure(Callen)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Callen",
                    "text": "Callen does not provide good service.",
                    "fol": "\u00acp_0(Callen)",
                    "str_fol": "\u00acprovide_good_service(Callen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Everyone who works well under pressure either provides good service or is attentive (or both).",
                    "fol": "\u2200x (p_8(x) \u2192 (p_0(x) \u2228 p_7(x)))",
                    "str_fol": "\u2200x (work_under_pressure(x) \u2192 (provide_good_service(x) \u2228 attentive(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Callen",
                "text": "Callen is attentive.",
                "fol": "p_7(Callen)",
                "str_fol": "attentive(Callen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Callen",
                    "text": "Callen is patient.",
                    "fol": "p_2(Callen)",
                    "str_fol": "patient(Callen)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Callen",
                    "text": "Callen is attentive.",
                    "fol": "p_7(Callen)",
                    "str_fol": "attentive(Callen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Callen is helpful, then he is either patient or attentive, but not both.",
                    "fol": "p_6(Callen) \u2192 (p_2(Callen) \u2295 p_7(Callen))",
                    "str_fol": "helpful(Callen) \u2192 (patient(Callen) \u2295 attentive(Callen))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Callen",
                "text": "Callen is not helpful.",
                "fol": "\u00acp_6(Callen)",
                "str_fol": "\u00achelpful(Callen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Callen",
                    "text": "Callen is not helpful.",
                    "fol": "\u00acp_6(Callen)",
                    "str_fol": "\u00achelpful(Callen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Callen is either friendly or helpful.",
                    "fol": "p_4(Callen) \u2228 p_6(Callen)",
                    "str_fol": "friendly(Callen) \u2228 helpful(Callen)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Callen",
                "text": "Callen is friendly.",
                "fol": "p_4(Callen)",
                "str_fol": "friendly(Callen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Callen",
                    "text": "Callen is friendly.",
                    "fol": "p_4(Callen)",
                    "str_fol": "friendly(Callen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Callen is either friendly or competent (or both).",
                    "fol": "p_4(Callen) \u2228 p_5(Callen)",
                    "str_fol": "friendly(Callen) \u2228 competent(Callen)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\np_10(Callen) \u2192 p_3(Callen)\n\u2200x (p_11(x) \u2295 p_1(x))\np_9(Callen) \u2228 p_11(Callen)\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_8(x)))\n\u2200x (p_8(x) \u2192 (p_0(x) \u2228 p_7(x)))\np_6(Callen) \u2192 (p_2(Callen) \u2295 p_7(Callen))\np_4(Callen) \u2228 p_6(Callen)\np_4(Callen) \u2228 p_5(Callen)",
            "Initial Goal": "p_5(Callen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Callen)",
                    "p_1(Callen)",
                    "-p_0(Callen)",
                    "p_2(Callen)",
                    "p_10(Callen) -> p_3(Callen)",
                    "all x (-(p_11(x) <-> p_1(x)))",
                    "p_9(Callen) | p_11(Callen)",
                    "all x (p_9(x) -> (p_10(x) & p_8(x)))",
                    "all x (p_8(x) -> (p_0(x) | p_7(x)))",
                    "p_6(Callen) -> -(p_2(Callen) <-> p_7(Callen))",
                    "p_4(Callen) | p_6(Callen)",
                    "p_4(Callen) | p_5(Callen)",
                    "p_4(Callen) -> p_5(Callen)"
                ],
                "formulas(goals)": [
                    "p_5(Callen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Callen) \u2192 p_5(Callen)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\n\u00acp_10(Callen) \u2228 p_3(Callen)\n\u2200x ((p_11(x) \u2228 p_1(x)) \u2227 \u00ac(p_11(x) \u2227 p_1(x)))\np_11(Callen) \u2228 p_9(Callen)\n\u2200x (\u00acp_9(x) \u2228 (p_10(x) \u2227 p_8(x)))\n\u2200x (\u00acp_8(x) \u2228 p_0(x) \u2228 p_7(x))\n\u00acp_6(Callen) \u2228 \u00ac(p_2(Callen) \u2194 p_7(Callen))\np_6(Callen) \u2228 p_4(Callen)\np_5(Callen) \u2228 p_4(Callen)\n\u00acp_11(Callen)\np_9(Callen)\np_10(Callen)\np_8(Callen)\np_7(Callen)\n\u00acp_6(Callen)\np_4(Callen)\n\u00acp_4(Callen) \u2228 p_5(Callen)",
            "Initial Goal": "p_5(Callen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Callen)",
                    "p_1(Callen)",
                    "-p_0(Callen)",
                    "p_2(Callen)",
                    "-p_10(Callen) | p_3(Callen)",
                    "(all x ((p_11(x) | p_1(x)) & (-(p_11(x) & p_1(x)))))",
                    "p_11(Callen) | p_9(Callen)",
                    "(all x (-p_9(x) | (p_10(x) & p_8(x))))",
                    "(all x (-p_8(x) | p_0(x) | p_7(x)))",
                    "-p_6(Callen) | (-(p_2(Callen) <-> p_7(Callen)))",
                    "p_6(Callen) | p_4(Callen)",
                    "p_5(Callen) | p_4(Callen)",
                    "-p_11(Callen)",
                    "p_9(Callen)",
                    "p_10(Callen)",
                    "p_8(Callen)",
                    "p_7(Callen)",
                    "-p_6(Callen)",
                    "p_4(Callen)",
                    "-p_4(Callen) | p_5(Callen)"
                ],
                "formulas(goals)": [
                    "p_5(Callen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Callen)",
                    "p_9(Callen)",
                    "p_10(Callen)",
                    "p_8(Callen)",
                    "p_7(Callen)",
                    "\u00acp_6(Callen)",
                    "p_4(Callen)"
                ],
                "added_rules": [
                    "\u00acp_4(Callen) \u2228 p_5(Callen)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\n\u00acp_10(Callen) \u2228 p_3(Callen)\n\u2200x ((p_11(x) \u2228 p_1(x)) \u2227 (\u00acp_11(x) \u2228 \u00acp_1(x)))\np_9(Callen) \u2228 p_11(Callen)\n\u2200x (\u00acp_9(x) \u2228 (p_10(x) \u2227 p_8(x)))\n\u2200x (\u00acp_8(x) \u2228 p_0(x) \u2228 p_7(x))\n\u00acp_6(Callen) \u2228 \u00ac(p_2(Callen) \u2194 p_7(Callen))\np_6(Callen) \u2228 p_4(Callen)\np_5(Callen) \u2228 p_4(Callen)\n\u00acp_11(Callen)\np_9(Callen)\np_10(Callen)\np_8(Callen)\np_7(Callen)\n\u00acp_6(Callen)\np_4(Callen)\n\u00acp_4(Callen) \u2228 p_5(Callen)\np_5(Callen)",
            "Initial Goal": "p_5(Callen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Callen)",
                    "p_1(Callen)",
                    "-p_0(Callen)",
                    "p_2(Callen)",
                    "(-p_10(Callen)) | p_3(Callen)",
                    "(all x ((p_11(x) | p_1(x)) & (-p_11(x) | -p_1(x))))",
                    "p_9(Callen) | p_11(Callen)",
                    "all x ((-p_9(x)) | (p_10(x) & p_8(x)))",
                    "all x ((-p_8(x)) | p_0(x) | p_7(x))",
                    "(-p_6(Callen)) | (-(p_2(Callen) <-> p_7(Callen)))",
                    "p_6(Callen) | p_4(Callen)",
                    "p_5(Callen) | p_4(Callen)",
                    "-p_11(Callen)",
                    "p_9(Callen)",
                    "p_10(Callen)",
                    "p_8(Callen)",
                    "p_7(Callen)",
                    "-p_6(Callen)",
                    "p_4(Callen)",
                    "(-p_4(Callen)) | p_5(Callen)",
                    "p_5(Callen)"
                ],
                "formulas(goals)": [
                    "p_5(Callen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_11(x) \u2228 p_1(x)) \u2227 \u00ac(p_11(x) \u2227 p_1(x)))",
                    "p_11(Callen) \u2228 p_9(Callen)"
                ],
                "added_facts": [
                    "p_5(Callen)"
                ],
                "added_rules": [
                    "\u2200x ((p_11(x) \u2228 p_1(x)) \u2227 (\u00acp_11(x) \u2228 \u00acp_1(x)))",
                    "p_9(Callen) \u2228 p_11(Callen)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\n\u00acp_10(Callen) \u2228 p_3(Callen)\n\u2200x (p_11(x) \u2194 \u00acp_1(x))\np_9(Callen) \u2228 p_11(Callen)\n\u2200x (\u00acp_9(x) \u2228 p_10(x))\n\u2200x (\u00acp_9(x) \u2228 p_8(x))\n\u2200x (\u00acp_8(x) \u2228 p_0(x) \u2228 p_7(x))\n\u00acp_6(Callen) \u2228 \u00ac(p_2(Callen) \u2194 p_7(Callen))\np_6(Callen) \u2228 p_4(Callen)\np_5(Callen) \u2228 p_4(Callen)\n\u00acp_11(Callen)\np_9(Callen)\np_10(Callen)\np_8(Callen)\np_7(Callen)\n\u00acp_6(Callen)\np_4(Callen)\n\u00acp_4(Callen) \u2228 p_5(Callen)\np_5(Callen)",
            "Initial Goal": "p_5(Callen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Callen)",
                    "p_1(Callen)",
                    "-p_0(Callen)",
                    "p_2(Callen)",
                    "-p_10(Callen) | p_3(Callen)",
                    "all x (p_11(x) <-> -p_1(x))",
                    "p_9(Callen) | p_11(Callen)",
                    "all x (-p_9(x) | p_10(x))",
                    "all x (-p_9(x) | p_8(x))",
                    "all x (-p_8(x) | p_0(x) | p_7(x))",
                    "-p_6(Callen) | -(p_2(Callen) <-> p_7(Callen))",
                    "p_6(Callen) | p_4(Callen)",
                    "p_5(Callen) | p_4(Callen)",
                    "-p_11(Callen)",
                    "p_9(Callen)",
                    "p_10(Callen)",
                    "p_8(Callen)",
                    "p_7(Callen)",
                    "-p_6(Callen)",
                    "p_4(Callen)",
                    "-p_4(Callen) | p_5(Callen)",
                    "p_5(Callen)"
                ],
                "formulas(goals)": [
                    "p_5(Callen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_11(x) \u2228 p_1(x)) \u2227 (\u00acp_11(x) \u2228 \u00acp_1(x)))",
                    "\u2200x (\u00acp_9(x) \u2228 (p_10(x) \u2227 p_8(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_11(x) \u2194 \u00acp_1(x))",
                    "\u2200x (\u00acp_9(x) \u2228 p_10(x))",
                    "\u2200x (\u00acp_9(x) \u2228 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\n\u00acp_10(Callen) \u2228 p_3(Callen)\n\u2200x (p_11(x) \u2194 \u00acp_1(x))\np_9(Callen) \u2228 p_11(Callen)\n\u2200x (\u00acp_9(x) \u2228 p_10(x))\n\u2200x (\u00acp_9(x) \u2228 p_8(x))\n\u2200x (\u00acp_8(x) \u2228 p_0(x) \u2228 p_7(x))\n\u00acp_6(Callen) \u2228 \u00ac(p_2(Callen) \u2194 p_7(Callen))\np_6(Callen) \u2228 p_4(Callen)\np_5(Callen) \u2228 p_4(Callen)\n\u00acp_11(Callen)\np_9(Callen)\np_10(Callen)\np_8(Callen)\np_7(Callen)\n\u00acp_6(Callen)\np_4(Callen)\n\u00acp_4(Callen) \u2228 p_5(Callen)\np_5(Callen)\n\u00acp_6(Callen) \u2228 \u00acp_2(Callen) \u2228 \u00acp_7(Callen)\n\u00acp_6(Callen) \u2228 p_2(Callen) \u2228 p_7(Callen)\n\u00acp_11(Callen) \u2228 \u00acp_1(Callen)\np_11(Callen) \u2228 p_1(Callen)",
            "Initial Goal": "p_5(Callen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Callen)",
                    "p_1(Callen)",
                    "-p_0(Callen)",
                    "p_2(Callen)",
                    "-p_10(Callen) | p_3(Callen)",
                    "all x (p_11(x) <-> -p_1(x))",
                    "p_9(Callen) | p_11(Callen)",
                    "all x (-p_9(x) | p_10(x))",
                    "all x (-p_9(x) | p_8(x))",
                    "all x (-p_8(x) | p_0(x) | p_7(x))",
                    "-p_6(Callen) | -(p_2(Callen) <-> p_7(Callen))",
                    "p_6(Callen) | p_4(Callen)",
                    "p_5(Callen) | p_4(Callen)",
                    "-p_11(Callen)",
                    "p_9(Callen)",
                    "p_10(Callen)",
                    "p_8(Callen)",
                    "p_7(Callen)",
                    "-p_6(Callen)",
                    "p_4(Callen)",
                    "-p_4(Callen) | p_5(Callen)",
                    "p_5(Callen)",
                    "-p_6(Callen) | -p_2(Callen) | -p_7(Callen)",
                    "-p_6(Callen) | p_2(Callen) | p_7(Callen)",
                    "-p_11(Callen) | -p_1(Callen)",
                    "p_11(Callen) | p_1(Callen)"
                ],
                "formulas(goals)": [
                    "p_5(Callen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Callen) \u2228 \u00acp_2(Callen) \u2228 \u00acp_7(Callen)",
                    "\u00acp_6(Callen) \u2228 p_2(Callen) \u2228 p_7(Callen)",
                    "\u00acp_11(Callen) \u2228 \u00acp_1(Callen)",
                    "p_11(Callen) \u2228 p_1(Callen)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Callen)\np_1(Callen)\n\u00acp_0(Callen)\np_2(Callen)\n\u00acp_10(Callen) \u2228 p_3(Callen)\np_9(Callen) \u2228 p_11(Callen)\n\u00acp_9(Callen) \u2228 p_10(Callen)\n\u00acp_9(Callen) \u2228 p_8(Callen)\n\u00acp_8(Callen) \u2228 p_0(Callen) \u2228 p_7(Callen)\n\u00acp_6(Callen) \u2228 \u00ac(p_2(Callen) \u2194 p_7(Callen))\np_6(Callen) \u2228 p_4(Callen)\np_5(Callen) \u2228 p_4(Callen)\n\u00acp_11(Callen)\np_9(Callen)\np_10(Callen)\np_8(Callen)\np_7(Callen)\n\u00acp_6(Callen)\np_4(Callen)\n\u00acp_4(Callen) \u2228 p_5(Callen)\np_5(Callen)\n\u00acp_6(Callen) \u2228 \u00acp_2(Callen) \u2228 \u00acp_7(Callen)\n\u00acp_6(Callen) \u2228 p_2(Callen) \u2228 p_7(Callen)\n\u00acp_11(Callen) \u2228 \u00acp_1(Callen)\np_11(Callen) \u2228 p_1(Callen)\n\u00acp_8(Callen) \u2228 p_7(Callen)\np_2(Callen) \u2228 \u00acp_2(Callen)\np_5(Callen) \u2228 p_11(Callen)",
            "Initial Goal": "p_5(Callen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Callen)",
                    "p_1(Callen)",
                    "-p_0(Callen)",
                    "p_2(Callen)",
                    "-p_10(Callen) | p_3(Callen)",
                    "p_9(Callen) | p_11(Callen)",
                    "-p_9(Callen) | p_10(Callen)",
                    "-p_9(Callen) | p_8(Callen)",
                    "-p_8(Callen) | p_0(Callen) | p_7(Callen)",
                    "-p_6(Callen) | (-(p_2(Callen) <-> p_7(Callen)))",
                    "p_6(Callen) | p_4(Callen)",
                    "p_5(Callen) | p_4(Callen)",
                    "-p_11(Callen)",
                    "p_9(Callen)",
                    "p_10(Callen)",
                    "p_8(Callen)",
                    "p_7(Callen)",
                    "-p_6(Callen)",
                    "p_4(Callen)",
                    "-p_4(Callen) | p_5(Callen)",
                    "p_5(Callen)",
                    "-p_6(Callen) | -p_2(Callen) | -p_7(Callen)",
                    "-p_6(Callen) | p_2(Callen) | p_7(Callen)",
                    "-p_11(Callen) | -p_1(Callen)",
                    "p_11(Callen) | p_1(Callen)",
                    "-p_8(Callen) | p_7(Callen)",
                    "p_2(Callen) | -p_2(Callen)",
                    "p_5(Callen) | p_11(Callen)"
                ],
                "formulas(goals)": [
                    "p_5(Callen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Callen) \u2228 p_7(Callen)",
                    "p_2(Callen) \u2228 \u00acp_2(Callen)",
                    "p_5(Callen) \u2228 p_11(Callen)"
                ],
                "added_rules": [
                    "\u00acp_8(Callen) \u2228 p_7(Callen)",
                    "p_2(Callen) \u2228 \u00acp_2(Callen)",
                    "p_5(Callen) \u2228 p_11(Callen)"
                ]
            }
        }
    ]
}