{
    "background_story": "Sophie was a young artist forced to flee her homeland due to political unrest. Her exilic journey took her across continents, from the familiar streets of her childhood to the unfamiliar alleys of a foreign city. Despite the initial culture shock and loneliness, Sophie found solace in her art, using it as a means to express the emotions and memories of her displacement. Her paintings, a mix of vibrant colors and haunting silhouettes, captured the essence of her experience as a refugee. As she navigated her new life, Sophie's art became a bridge between her past and present, a testament to the resilience of the human spirit in the face of exile and uncertainty.",
    "predicates": [
        {
            "id": 0,
            "name": "build_network"
        },
        {
            "id": 1,
            "name": "stay_positive"
        },
        {
            "id": 2,
            "name": "overcomes_struggle"
        },
        {
            "id": 3,
            "name": "meets_needs"
        },
        {
            "id": 4,
            "name": "creative"
        },
        {
            "id": 5,
            "name": "resilient"
        },
        {
            "id": 6,
            "name": "adaptable"
        },
        {
            "id": 7,
            "name": "express_emotion"
        },
        {
            "id": 8,
            "name": "thrive_abroad"
        },
        {
            "id": 9,
            "name": "finds_solace"
        },
        {
            "id": 10,
            "name": "heals_fast"
        },
        {
            "id": 11,
            "name": "feels_calm"
        },
        {
            "id": 12,
            "name": "has_support"
        },
        {
            "id": 13,
            "name": "makes_art"
        },
        {
            "id": 14,
            "name": "learns_fast"
        },
        {
            "id": 15,
            "name": "faces_challenges"
        },
        {
            "id": 16,
            "name": "seeks_help"
        },
        {
            "id": 17,
            "name": "face_challenge"
        },
        {
            "id": 18,
            "name": "pursue_passion"
        },
        {
            "id": 19,
            "name": "grows_strong"
        },
        {
            "id": 20,
            "name": "meditates"
        },
        {
            "id": 21,
            "name": "receives_guidance"
        }
    ],
    "subject_name": "Sophie",
    "subject_category": "human",
    "keyword": "exilic",
    "all_facts": [
        {
            "id": 0,
            "subject": "Sophie",
            "text": "Sophie does not build a network.",
            "fol": "\u00acp_0(Sophie)",
            "str_fol": "\u00acbuild_network(Sophie)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Sophie",
            "text": "Sophie cannot stay positive.",
            "fol": "\u00acp_1(Sophie)",
            "str_fol": "\u00acstay_positive(Sophie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Sophie",
            "text": "Sophie does not overcome her struggle.",
            "fol": "\u00acp_2(Sophie)",
            "str_fol": "\u00acovercomes_struggle(Sophie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Sophie",
            "text": "Sophie does not meet her needs.",
            "fol": "\u00acp_3(Sophie)",
            "str_fol": "\u00acmeets_needs(Sophie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Sophie",
            "text": "Sophie has support.",
            "fol": "p_12(Sophie)",
            "str_fol": "has_support(Sophie)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Sophie",
            "text": "Sophie does not feel calm.",
            "fol": "\u00acp_11(Sophie)",
            "str_fol": "\u00acfeels_calm(Sophie)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Sophie",
            "text": "Sophie does not heal quickly.",
            "fol": "\u00acp_10(Sophie)",
            "str_fol": "\u00acheals_fast(Sophie)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Sophie",
            "text": "Sophie does not thrive abroad.",
            "fol": "\u00acp_8(Sophie)",
            "str_fol": "\u00acthrive_abroad(Sophie)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Sophie",
            "text": "Sophie finds solace in her art.",
            "fol": "p_9(Sophie)",
            "str_fol": "finds_solace(Sophie)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Sophie",
            "text": "Sophie is not adaptable.",
            "fol": "\u00acp_6(Sophie)",
            "str_fol": "\u00acadaptable(Sophie)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Sophie",
            "text": "Sophie is not creative.",
            "fol": "\u00acp_4(Sophie)",
            "str_fol": "\u00accreative(Sophie)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Sophie",
            "text": "Sophie is resilient.",
            "fol": "p_5(Sophie)",
            "str_fol": "resilient(Sophie)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Sophie",
            "text": "Sophie does not meet her needs.",
            "fol": "\u00acp_3(Sophie)",
            "str_fol": "\u00acmeets_needs(Sophie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Sophie",
            "text": "Sophie does not overcome her struggle.",
            "fol": "\u00acp_2(Sophie)",
            "str_fol": "\u00acovercomes_struggle(Sophie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Sophie",
            "text": "Sophie does not build a network.",
            "fol": "\u00acp_0(Sophie)",
            "str_fol": "\u00acbuild_network(Sophie)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Sophie",
            "text": "Sophie cannot stay positive.",
            "fol": "\u00acp_1(Sophie)",
            "str_fol": "\u00acstay_positive(Sophie)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "Sophie meets her needs or has support.",
            "fol": "p_3(Sophie) \u2228 p_12(Sophie)",
            "str_fol": "meets_needs(Sophie) \u2228 has_support(Sophie)"
        },
        {
            "id": 6,
            "text": "If a person feels calm and has support, then they can overcome struggles.",
            "fol": "\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((feels_calm(x) \u2227 has_support(x)) \u2192 overcomes_struggle(x))"
        },
        {
            "id": 5,
            "text": "If Sophie heals quickly, then she feels calm.",
            "fol": "p_10(Sophie) \u2192 p_11(Sophie)",
            "str_fol": "heals_fast(Sophie) \u2192 feels_calm(Sophie)"
        },
        {
            "id": 4,
            "text": "Anyone who thrives abroad or builds a network can stay positive.",
            "fol": "\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((thrive_abroad(x) \u2228 build_network(x)) \u2192 stay_positive(x))"
        },
        {
            "id": 3,
            "text": "Sophie either heals quickly or finds solace.",
            "fol": "p_10(Sophie) \u2228 p_9(Sophie)",
            "str_fol": "heals_fast(Sophie) \u2228 finds_solace(Sophie)"
        },
        {
            "id": 2,
            "text": "Sophie either finds solace in her art or is adaptable to her new life, but not both.",
            "fol": "p_9(Sophie) \u2295 p_6(Sophie)",
            "str_fol": "finds_solace(Sophie) \u2295 adaptable(Sophie)"
        },
        {
            "id": 1,
            "text": "If Sophie is creative or can express emotion, then she can thrive abroad.",
            "fol": "(p_4(Sophie) \u2228 p_7(Sophie)) \u2192 p_8(Sophie)",
            "str_fol": "(creative(Sophie) \u2228 express_emotion(Sophie)) \u2192 thrive_abroad(Sophie)"
        },
        {
            "id": 0,
            "text": "If Sophie is either creative or resilient (but not both), then she is adaptable.",
            "fol": "(p_4(Sophie) \u2295 p_5(Sophie)) \u2192 p_6(Sophie)",
            "str_fol": "(creative(Sophie) \u2295 resilient(Sophie)) \u2192 adaptable(Sophie)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Sophie",
            "text": "Sophie does not meet her needs.",
            "fol": "\u00acp_3(Sophie)",
            "str_fol": "\u00acmeets_needs(Sophie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Sophie",
            "text": "Sophie does not overcome her struggle.",
            "fol": "\u00acp_2(Sophie)",
            "str_fol": "\u00acovercomes_struggle(Sophie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Sophie",
            "text": "Sophie does not build a network.",
            "fol": "\u00acp_0(Sophie)",
            "str_fol": "\u00acbuild_network(Sophie)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Sophie",
            "text": "Sophie cannot stay positive.",
            "fol": "\u00acp_1(Sophie)",
            "str_fol": "\u00acstay_positive(Sophie)",
            "negation": true
        },
        {
            "id": 7,
            "text": "Sophie meets her needs or has support.",
            "fol": "p_3(Sophie) \u2228 p_12(Sophie)",
            "str_fol": "meets_needs(Sophie) \u2228 has_support(Sophie)"
        },
        {
            "id": 6,
            "text": "If a person feels calm and has support, then they can overcome struggles.",
            "fol": "\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((feels_calm(x) \u2227 has_support(x)) \u2192 overcomes_struggle(x))"
        },
        {
            "id": 5,
            "text": "If Sophie heals quickly, then she feels calm.",
            "fol": "p_10(Sophie) \u2192 p_11(Sophie)",
            "str_fol": "heals_fast(Sophie) \u2192 feels_calm(Sophie)"
        },
        {
            "id": 4,
            "text": "Anyone who thrives abroad or builds a network can stay positive.",
            "fol": "\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((thrive_abroad(x) \u2228 build_network(x)) \u2192 stay_positive(x))"
        },
        {
            "id": 3,
            "text": "Sophie either heals quickly or finds solace.",
            "fol": "p_10(Sophie) \u2228 p_9(Sophie)",
            "str_fol": "heals_fast(Sophie) \u2228 finds_solace(Sophie)"
        },
        {
            "id": 2,
            "text": "Sophie either finds solace in her art or is adaptable to her new life, but not both.",
            "fol": "p_9(Sophie) \u2295 p_6(Sophie)",
            "str_fol": "finds_solace(Sophie) \u2295 adaptable(Sophie)"
        },
        {
            "id": 1,
            "text": "If Sophie is creative or can express emotion, then she can thrive abroad.",
            "fol": "(p_4(Sophie) \u2228 p_7(Sophie)) \u2192 p_8(Sophie)",
            "str_fol": "(creative(Sophie) \u2228 express_emotion(Sophie)) \u2192 thrive_abroad(Sophie)"
        },
        {
            "id": 0,
            "text": "If Sophie is either creative or resilient (but not both), then she is adaptable.",
            "fol": "(p_4(Sophie) \u2295 p_5(Sophie)) \u2192 p_6(Sophie)",
            "str_fol": "(creative(Sophie) \u2295 resilient(Sophie)) \u2192 adaptable(Sophie)"
        }
    ],
    "context_fol": "\u00acp_3(Sophie)\n\u00acp_2(Sophie)\n\u00acp_0(Sophie)\n\u00acp_1(Sophie)\np_3(Sophie) \u2228 p_12(Sophie)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_2(x))\np_10(Sophie) \u2192 p_11(Sophie)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_10(Sophie) \u2228 p_9(Sophie)\np_9(Sophie) \u2295 p_6(Sophie)\n(p_4(Sophie) \u2228 p_7(Sophie)) \u2192 p_8(Sophie)\n(p_4(Sophie) \u2295 p_5(Sophie)) \u2192 p_6(Sophie)",
    "conclusion": {
        "id": 11,
        "subject": "Sophie",
        "text": "Sophie is resilient.",
        "fol": "p_5(Sophie)",
        "str_fol": "resilient(Sophie)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_5(Sophie)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Sophie",
                    "text": "Sophie does not meet her needs.",
                    "fol": "\u00acp_3(Sophie)",
                    "str_fol": "\u00acmeets_needs(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Sophie meets her needs or has support.",
                    "fol": "p_3(Sophie) \u2228 p_12(Sophie)",
                    "str_fol": "meets_needs(Sophie) \u2228 has_support(Sophie)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Sophie",
                "text": "Sophie has support.",
                "fol": "p_12(Sophie)",
                "str_fol": "has_support(Sophie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Sophie",
                    "text": "Sophie has support.",
                    "fol": "p_12(Sophie)",
                    "str_fol": "has_support(Sophie)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Sophie",
                    "text": "Sophie does not overcome her struggle.",
                    "fol": "\u00acp_2(Sophie)",
                    "str_fol": "\u00acovercomes_struggle(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If a person feels calm and has support, then they can overcome struggles.",
                    "fol": "\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((feels_calm(x) \u2227 has_support(x)) \u2192 overcomes_struggle(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Sophie",
                "text": "Sophie does not feel calm.",
                "fol": "\u00acp_11(Sophie)",
                "str_fol": "\u00acfeels_calm(Sophie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Sophie",
                    "text": "Sophie does not feel calm.",
                    "fol": "\u00acp_11(Sophie)",
                    "str_fol": "\u00acfeels_calm(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Sophie heals quickly, then she feels calm.",
                    "fol": "p_10(Sophie) \u2192 p_11(Sophie)",
                    "str_fol": "heals_fast(Sophie) \u2192 feels_calm(Sophie)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Sophie",
                "text": "Sophie does not heal quickly.",
                "fol": "\u00acp_10(Sophie)",
                "str_fol": "\u00acheals_fast(Sophie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Sophie",
                    "text": "Sophie does not build a network.",
                    "fol": "\u00acp_0(Sophie)",
                    "str_fol": "\u00acbuild_network(Sophie)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Sophie",
                    "text": "Sophie cannot stay positive.",
                    "fol": "\u00acp_1(Sophie)",
                    "str_fol": "\u00acstay_positive(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who thrives abroad or builds a network can stay positive.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((thrive_abroad(x) \u2228 build_network(x)) \u2192 stay_positive(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Sophie",
                "text": "Sophie does not thrive abroad.",
                "fol": "\u00acp_8(Sophie)",
                "str_fol": "\u00acthrive_abroad(Sophie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Sophie",
                    "text": "Sophie does not heal quickly.",
                    "fol": "\u00acp_10(Sophie)",
                    "str_fol": "\u00acheals_fast(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Sophie either heals quickly or finds solace.",
                    "fol": "p_10(Sophie) \u2228 p_9(Sophie)",
                    "str_fol": "heals_fast(Sophie) \u2228 finds_solace(Sophie)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Sophie",
                "text": "Sophie finds solace in her art.",
                "fol": "p_9(Sophie)",
                "str_fol": "finds_solace(Sophie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Sophie",
                    "text": "Sophie finds solace in her art.",
                    "fol": "p_9(Sophie)",
                    "str_fol": "finds_solace(Sophie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Sophie either finds solace in her art or is adaptable to her new life, but not both.",
                    "fol": "p_9(Sophie) \u2295 p_6(Sophie)",
                    "str_fol": "finds_solace(Sophie) \u2295 adaptable(Sophie)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Sophie",
                "text": "Sophie is not adaptable.",
                "fol": "\u00acp_6(Sophie)",
                "str_fol": "\u00acadaptable(Sophie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Sophie",
                    "text": "Sophie does not thrive abroad.",
                    "fol": "\u00acp_8(Sophie)",
                    "str_fol": "\u00acthrive_abroad(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Sophie is creative or can express emotion, then she can thrive abroad.",
                    "fol": "(p_4(Sophie) \u2228 p_7(Sophie)) \u2192 p_8(Sophie)",
                    "str_fol": "(creative(Sophie) \u2228 express_emotion(Sophie)) \u2192 thrive_abroad(Sophie)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Sophie",
                "text": "Sophie is not creative.",
                "fol": "\u00acp_4(Sophie)",
                "str_fol": "\u00accreative(Sophie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Sophie",
                    "text": "Sophie is not creative.",
                    "fol": "\u00acp_4(Sophie)",
                    "str_fol": "\u00accreative(Sophie)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Sophie",
                    "text": "Sophie is not adaptable.",
                    "fol": "\u00acp_6(Sophie)",
                    "str_fol": "\u00acadaptable(Sophie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Sophie is either creative or resilient (but not both), then she is adaptable.",
                    "fol": "(p_4(Sophie) \u2295 p_5(Sophie)) \u2192 p_6(Sophie)",
                    "str_fol": "(creative(Sophie) \u2295 resilient(Sophie)) \u2192 adaptable(Sophie)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Sophie",
                "text": "Sophie is resilient.",
                "fol": "p_5(Sophie)",
                "str_fol": "resilient(Sophie)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_11(x) & p_12(x) -> p_2(x))).  [assumption].\n2 p_10(Sophie) -> p_11(Sophie).  [assumption].\n3 (all x (p_8(x) | p_0(x) -> p_1(x))).  [assumption].\n4 -(p_9(Sophie) <-> p_6(Sophie)).  [assumption].\n5 p_4(Sophie) | p_7(Sophie) -> p_8(Sophie).  [assumption].\n6 -(p_4(Sophie) <-> p_5(Sophie)) -> p_6(Sophie).  [assumption].\n7 -p_5(Sophie).  [goal].\n8 p_3(Sophie) | p_12(Sophie).  [assumption].\n9 -p_3(Sophie).  [assumption].\n10 -p_11(x) | -p_12(x) | p_2(x).  [clausify(1)].\n11 -p_2(Sophie).  [assumption].\n12 -p_8(x) | p_1(x).  [clausify(3)].\n13 -p_1(Sophie).  [assumption].\n14 p_10(Sophie) | p_9(Sophie).  [assumption].\n15 -p_10(Sophie) | p_11(Sophie).  [clausify(2)].\n16 -p_9(Sophie) | -p_6(Sophie).  [clausify(4)].\n18 p_9(Sophie) | p_11(Sophie).  [resolve(14,a,15,a)].\n19 p_4(Sophie) | -p_5(Sophie) | p_6(Sophie).  [clausify(6)].\n20 -p_4(Sophie) | p_8(Sophie).  [clausify(5)].\n22 -p_5(Sophie) | p_6(Sophie) | p_8(Sophie).  [resolve(19,a,20,a)].\n23 p_5(Sophie).  [deny(7)].\n24 -p_11(Sophie) | -p_12(Sophie).  [resolve(10,c,11,a)].\n25 p_12(Sophie).  [resolve(8,a,9,a)].\n26 p_6(Sophie) | p_8(Sophie).  [resolve(22,a,23,a)].\n27 -p_8(Sophie).  [resolve(12,b,13,a)].\n28 -p_11(Sophie).  [resolve(24,b,25,a)].\n29 p_11(Sophie) | -p_6(Sophie).  [resolve(18,a,16,a)].\n30 -p_6(Sophie).  [resolve(28,a,29,a)].\n31 p_6(Sophie).  [resolve(26,b,27,a)].\n32 $F.  [resolve(30,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Sophie)\n\u00acp_2(Sophie)\n\u00acp_0(Sophie)\n\u00acp_1(Sophie)\np_3(Sophie) \u2228 p_12(Sophie)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_2(x))\np_10(Sophie) \u2192 p_11(Sophie)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_10(Sophie) \u2228 p_9(Sophie)\np_9(Sophie) \u2295 p_6(Sophie)\n(p_4(Sophie) \u2228 p_7(Sophie)) \u2192 p_8(Sophie)\n(p_4(Sophie) \u2295 p_5(Sophie)) \u2192 p_6(Sophie)\np_4(Sophie) \u2192 p_1(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Sophie).",
                    "-p_2(Sophie).",
                    "-p_0(Sophie).",
                    "-p_1(Sophie).",
                    "p_3(Sophie) | p_12(Sophie).",
                    "all x (-(p_11(x) & p_12(x)) | p_2(x)).",
                    "-p_10(Sophie) | p_11(Sophie).",
                    "all x (-(p_8(x) | p_0(x)) | p_1(x)).",
                    "p_10(Sophie) | p_9(Sophie).",
                    "-(p_9(Sophie) <-> p_6(Sophie)).",
                    "(-(p_4(Sophie) | p_7(Sophie)) | p_8(Sophie)).",
                    "(-(p_4(Sophie) <-> p_5(Sophie)) | p_6(Sophie)).",
                    "-p_4(Sophie) | p_1(Sophie)."
                ],
                "formulas(goals)": [
                    "p_5(Sophie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Sophie) \u2192 p_1(Sophie)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Sophie)\n\u00acp_2(Sophie)\n\u00acp_0(Sophie)\n\u00acp_1(Sophie)\np_3(Sophie) \u2228 p_12(Sophie)\n\u2200x (\u00acp_11(x) \u2228 \u00acp_12(x) \u2228 p_2(x))\n\u00acp_10(Sophie) \u2228 p_11(Sophie)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_0(x)) \u2228 p_1(x))\np_10(Sophie) \u2228 p_9(Sophie)\n(p_9(Sophie) \u2228 p_6(Sophie)) \u2227 (\u00acp_9(Sophie) \u2228 \u00acp_6(Sophie))\n(\u00acp_4(Sophie) \u2227 \u00acp_7(Sophie)) \u2228 p_8(Sophie)\n\u00ac(p_4(Sophie) \u2295 p_5(Sophie)) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 p_1(Sophie)\np_11(Sophie) \u2228 \u00acp_10(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Sophie)",
                    "-p_2(Sophie)",
                    "-p_0(Sophie)",
                    "-p_1(Sophie)",
                    "p_3(Sophie) | p_12(Sophie)",
                    "all x (-p_11(x) | -p_12(x) | p_2(x))",
                    "-p_10(Sophie) | p_11(Sophie)",
                    "all x (-p_8(x) & -p_0(x) | p_1(x))",
                    "p_10(Sophie) | p_9(Sophie)",
                    "(p_9(Sophie) | p_6(Sophie)) & (-p_9(Sophie) | -p_6(Sophie))",
                    "(-p_4(Sophie) & -p_7(Sophie)) | p_8(Sophie)",
                    "(-(p_4(Sophie) <-> p_5(Sophie))) | p_6(Sophie)",
                    "-p_4(Sophie) | p_1(Sophie)",
                    "p_11(Sophie) | -p_10(Sophie)"
                ],
                "formulas(goals)": [
                    "p_5(Sophie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Sophie) \u2228 \u00acp_10(Sophie)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Sophie)\n\u00acp_2(Sophie)\n\u00acp_0(Sophie)\np_3(Sophie) \u2228 p_12(Sophie)\n\u2200x (\u00acp_11(x) \u2228 \u00acp_12(x) \u2228 p_2(x))\n\u00acp_10(Sophie) \u2228 p_11(Sophie)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_0(x)) \u2228 p_1(x))\np_10(Sophie) \u2228 p_9(Sophie)\n(p_9(Sophie) \u2228 p_6(Sophie)) \u2227 (\u00acp_9(Sophie) \u2228 \u00acp_6(Sophie))\n(\u00acp_4(Sophie) \u2227 \u00acp_7(Sophie)) \u2228 p_8(Sophie)\n\u00ac(p_4(Sophie) \u2295 p_5(Sophie)) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 p_1(Sophie)\np_11(Sophie) \u2228 \u00acp_10(Sophie)\n\u00acp_12(Sophie) \u2228 \u00acp_5(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Sophie).",
                    "-p_2(Sophie).",
                    "-p_0(Sophie).",
                    "p_3(Sophie) | p_12(Sophie).",
                    "all x (-p_11(x) | -p_12(x) | p_2(x)).",
                    "-p_10(Sophie) | p_11(Sophie).",
                    "all x (-p_8(x) | p_1(x)).",
                    "all x (-p_0(x) | p_1(x)).",
                    "p_10(Sophie) | p_9(Sophie).",
                    "p_9(Sophie) | p_6(Sophie).",
                    "-p_9(Sophie) | -p_6(Sophie).",
                    "-p_4(Sophie) | p_8(Sophie).",
                    "-p_7(Sophie) | p_8(Sophie).",
                    "-p_4(Sophie) | p_5(Sophie) | p_6(Sophie).",
                    "p_4(Sophie) | -p_5(Sophie) | p_6(Sophie).",
                    "-p_4(Sophie) | p_1(Sophie).",
                    "p_11(Sophie) | -p_10(Sophie).",
                    "-p_12(Sophie) | -p_5(Sophie)."
                ],
                "formulas(goals)": [
                    "-p_5(Sophie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Sophie)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_12(Sophie) \u2228 \u00acp_5(Sophie)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Sophie)\n\u00acp_2(Sophie)\n\u00acp_0(Sophie)\np_3(Sophie) \u2228 p_12(Sophie)\n\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie) \u2228 p_2(Sophie)\n\u00acp_10(Sophie) \u2228 p_11(Sophie)\n(\u00acp_8(Sophie) \u2227 \u00acp_0(Sophie)) \u2228 p_1(Sophie)\np_10(Sophie) \u2228 p_9(Sophie)\n(p_9(Sophie) \u2228 p_6(Sophie)) \u2227 (\u00acp_9(Sophie) \u2228 \u00acp_6(Sophie))\n(\u00acp_4(Sophie) \u2227 \u00acp_7(Sophie)) \u2228 p_8(Sophie)\n\u00ac(p_4(Sophie) \u2295 p_5(Sophie)) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 p_1(Sophie)\np_11(Sophie) \u2228 \u00acp_10(Sophie)\n\u00acp_12(Sophie) \u2228 \u00acp_5(Sophie)\n\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie)\n\u00acp_4(Sophie) \u2228 p_5(Sophie) \u2228 p_6(Sophie)\np_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 p_8(Sophie)\n\u00acp_7(Sophie) \u2228 p_8(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Sophie).",
                    "-p_2(Sophie).",
                    "-p_0(Sophie).",
                    "p_3(Sophie) | p_12(Sophie).",
                    "(-p_11(Sophie) | -p_12(Sophie) | p_2(Sophie)).",
                    "-p_10(Sophie) | p_11(Sophie).",
                    "((-p_8(Sophie) & -p_0(Sophie)) | p_1(Sophie)).",
                    "p_10(Sophie) | p_9(Sophie).",
                    "(p_9(Sophie) | p_6(Sophie)) & (-p_9(Sophie) | -p_6(Sophie)).",
                    "((-p_4(Sophie) & -p_7(Sophie)) | p_8(Sophie)).",
                    "(-(p_4(Sophie) <-> p_5(Sophie))) | p_6(Sophie).",
                    "-p_4(Sophie) | p_1(Sophie).",
                    "p_11(Sophie) | -p_10(Sophie).",
                    "-p_12(Sophie) | -p_5(Sophie).",
                    "-p_11(Sophie) | -p_12(Sophie).",
                    "-p_4(Sophie) | p_5(Sophie) | p_6(Sophie).",
                    "p_4(Sophie) | -p_5(Sophie) | p_6(Sophie).",
                    "-p_4(Sophie) | p_8(Sophie).",
                    "-p_7(Sophie) | p_8(Sophie)."
                ],
                "formulas(goals)": [
                    "-p_5(Sophie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie)",
                    "\u00acp_4(Sophie) \u2228 p_5(Sophie) \u2228 p_6(Sophie)",
                    "p_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)",
                    "\u00acp_4(Sophie) \u2228 p_8(Sophie)",
                    "\u00acp_7(Sophie) \u2228 p_8(Sophie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Sophie)\n\u00acp_2(Sophie)\n\u00acp_0(Sophie)\np_3(Sophie) \u2228 p_12(Sophie)\n\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie) \u2228 p_2(Sophie)\n\u00acp_10(Sophie) \u2228 p_11(Sophie)\n(\u00acp_8(Sophie) \u2227 \u00acp_0(Sophie)) \u2228 p_1(Sophie)\np_10(Sophie) \u2228 p_9(Sophie)\n(p_9(Sophie) \u2228 p_6(Sophie)) \u2227 (\u00acp_9(Sophie) \u2228 \u00acp_6(Sophie))\n(\u00acp_4(Sophie) \u2227 \u00acp_7(Sophie)) \u2228 p_8(Sophie)\n\u00ac(p_4(Sophie) \u2295 p_5(Sophie)) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 p_1(Sophie)\np_11(Sophie) \u2228 \u00acp_10(Sophie)\n\u00acp_12(Sophie) \u2228 \u00acp_5(Sophie)\n\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie)\n\u00acp_4(Sophie) \u2228 p_5(Sophie) \u2228 p_6(Sophie)\np_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 p_8(Sophie)\n\u00acp_7(Sophie) \u2228 p_8(Sophie)\np_12(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Sophie)",
                    "-p_2(Sophie)",
                    "-p_0(Sophie)",
                    "p_3(Sophie) | p_12(Sophie)",
                    "-p_11(Sophie) | -p_12(Sophie) | p_2(Sophie)",
                    "-p_10(Sophie) | p_11(Sophie)",
                    "((-p_8(Sophie) & -p_0(Sophie)) | p_1(Sophie))",
                    "p_10(Sophie) | p_9(Sophie)",
                    "(p_9(Sophie) | p_6(Sophie)) & (-p_9(Sophie) | -p_6(Sophie))",
                    "((-p_4(Sophie) & -p_7(Sophie)) | p_8(Sophie))",
                    "(p_4(Sophie) <-> p_5(Sophie)) | p_6(Sophie)",
                    "-p_4(Sophie) | p_1(Sophie)",
                    "p_11(Sophie) | -p_10(Sophie)",
                    "-p_12(Sophie) | -p_5(Sophie)",
                    "-p_11(Sophie) | -p_12(Sophie)",
                    "-p_4(Sophie) | p_5(Sophie) | p_6(Sophie)",
                    "p_4(Sophie) | -p_5(Sophie) | p_6(Sophie)",
                    "-p_4(Sophie) | p_8(Sophie)",
                    "-p_7(Sophie) | p_8(Sophie)",
                    "p_12(Sophie)"
                ],
                "formulas(goals)": [
                    "-p_5(Sophie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_12(Sophie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "(p_9(Sophie) \u2228 p_6(Sophie)) \u2227 (\u00acp_9(Sophie) \u2228 \u00acp_6(Sophie))\n\u00ac(p_4(Sophie) \u2194 p_5(Sophie)) \u2228 p_6(Sophie)\np_10(Sophie) \u2228 p_9(Sophie)\n\u00acp_10(Sophie) \u2228 p_11(Sophie)\np_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)\np_12(Sophie)\n\u00acp_12(Sophie) \u2228 p_5(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "(p_9(Sophie) | p_6(Sophie)) & (-p_9(Sophie) | -p_6(Sophie))",
                    "-(p_4(Sophie) <-> p_5(Sophie)) | p_6(Sophie)",
                    "p_10(Sophie) | p_9(Sophie)",
                    "-p_10(Sophie) | p_11(Sophie)",
                    "p_4(Sophie) | -p_5(Sophie) | p_6(Sophie)",
                    "p_12(Sophie)",
                    "-p_12(Sophie) | p_5(Sophie)"
                ],
                "formulas(goals)": [
                    "p_5(Sophie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Sophie)",
                    "\u00acp_2(Sophie)",
                    "\u00acp_0(Sophie)",
                    "p_12(Sophie)"
                ],
                "removed_rules": [
                    "p_3(Sophie) \u2228 p_12(Sophie)",
                    "\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie) \u2228 p_2(Sophie)",
                    "\u00acp_10(Sophie) \u2228 p_11(Sophie)",
                    "(\u00acp_8(Sophie) \u2227 \u00acp_0(Sophie)) \u2228 p_1(Sophie)",
                    "p_10(Sophie) \u2228 p_9(Sophie)",
                    "(\u00acp_4(Sophie) \u2227 \u00acp_7(Sophie)) \u2228 p_8(Sophie)",
                    "\u00acp_4(Sophie) \u2228 p_1(Sophie)",
                    "p_11(Sophie) \u2228 \u00acp_10(Sophie)",
                    "\u00acp_12(Sophie) \u2228 \u00acp_5(Sophie)",
                    "\u00acp_11(Sophie) \u2228 \u00acp_12(Sophie)",
                    "\u00acp_4(Sophie) \u2228 p_5(Sophie) \u2228 p_6(Sophie)",
                    "\u00acp_4(Sophie) \u2228 p_8(Sophie)",
                    "\u00acp_7(Sophie) \u2228 p_8(Sophie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_12(Sophie) \u2228 p_5(Sophie)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "(p_9(Sophie) \u2228 p_6(Sophie)) \u2227 (\u00acp_9(Sophie) \u2228 \u00acp_6(Sophie))\n\u00ac(p_4(Sophie) \u2194 p_5(Sophie)) \u2228 p_6(Sophie)\np_10(Sophie) \u2228 p_9(Sophie)\n\u00acp_10(Sophie) \u2228 p_11(Sophie)\np_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)\np_12(Sophie)\n\u00acp_12(Sophie) \u2228 p_5(Sophie)\np_4(Sophie) \u2228 p_5(Sophie) \u2228 p_6(Sophie)\n\u00acp_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)\np_9(Sophie) \u2228 p_11(Sophie)",
            "Initial Goal": "p_5(Sophie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Sophie) | p_6(Sophie)",
                    "-p_9(Sophie) | -p_6(Sophie)",
                    "(-(p_4(Sophie) <-> p_5(Sophie))) | p_6(Sophie)",
                    "p_10(Sophie) | p_9(Sophie)",
                    "-p_10(Sophie) | p_11(Sophie)",
                    "p_4(Sophie) | -p_5(Sophie) | p_6(Sophie)",
                    "p_12(Sophie)",
                    "-p_12(Sophie) | p_5(Sophie)",
                    "p_4(Sophie) | p_5(Sophie) | p_6(Sophie)",
                    "-p_4(Sophie) | -p_5(Sophie) | p_6(Sophie)",
                    "p_9(Sophie) | p_11(Sophie)"
                ],
                "formulas(goals)": [
                    "p_5(Sophie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Sophie) \u2228 p_5(Sophie) \u2228 p_6(Sophie)",
                    "\u00acp_4(Sophie) \u2228 \u00acp_5(Sophie) \u2228 p_6(Sophie)",
                    "p_9(Sophie) \u2228 p_11(Sophie)"
                ],
                "added_rules": []
            }
        }
    ]
}