{
    "background_story": "Zaid was a hopeless romantic with a flair for the dramatic. He had been dating his girlfriend, Sophia, for three years and had been planning the perfect proposal for what felt like an eternity. Zaid took Sophia on a surprise trip to Paris, the city of love, where he had spent weeks setting up an elaborate proposal scheme. He hired a violinist to play Sophia's favorite love song under the Eiffel Tower, got down on one knee, and popped the question with a custom-made ring. Overcome with emotion, Sophia said yes. As the proposer, Zaid had orchestrated every detail to perfection, making the moment truly unforgettable. His thoughtful and creative approach to proposing won over not just Sophia's heart, but also the admiration of their friends and family.",
    "predicates": [
        {
            "id": 0,
            "name": "passionate"
        },
        {
            "id": 1,
            "name": "creative"
        },
        {
            "id": 2,
            "name": "get_results"
        },
        {
            "id": 3,
            "name": "succeeds"
        },
        {
            "id": 4,
            "name": "acts_fast"
        },
        {
            "id": 5,
            "name": "romantic"
        },
        {
            "id": 6,
            "name": "emotional"
        },
        {
            "id": 7,
            "name": "sentimental"
        },
        {
            "id": 8,
            "name": "is_thoughtful"
        },
        {
            "id": 9,
            "name": "planner"
        },
        {
            "id": 10,
            "name": "spontaneous"
        },
        {
            "id": 11,
            "name": "dreamer"
        },
        {
            "id": 12,
            "name": "is_perfectionist"
        },
        {
            "id": 13,
            "name": "pay_attention"
        },
        {
            "id": 14,
            "name": "loves_music"
        },
        {
            "id": 15,
            "name": "values_tradition"
        },
        {
            "id": 16,
            "name": "writes_poetry"
        },
        {
            "id": 17,
            "name": "cares_deeply"
        },
        {
            "id": 18,
            "name": "organizes"
        },
        {
            "id": 19,
            "name": "visionary"
        },
        {
            "id": 20,
            "name": "likes_details"
        },
        {
            "id": 21,
            "name": "values_quality"
        },
        {
            "id": 22,
            "name": "thinks_critically"
        },
        {
            "id": 23,
            "name": "adventurous"
        },
        {
            "id": 24,
            "name": "makes_efforts"
        }
    ],
    "subject_name": "Zaid",
    "subject_category": "human",
    "keyword": "proposer",
    "all_facts": [
        {
            "id": 0,
            "subject": "Zaid",
            "text": "Zaid is not passionate.",
            "fol": "\u00acp_0(Zaid)",
            "str_fol": "\u00acpassionate(Zaid)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Zaid",
            "text": "Zaid is not creative.",
            "fol": "\u00acp_1(Zaid)",
            "str_fol": "\u00accreative(Zaid)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Zaid",
            "text": "Zaid does not get the desired results.",
            "fol": "\u00acp_2(Zaid)",
            "str_fol": "\u00acget_results(Zaid)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Zaid",
            "text": "Zaid does not succeed.",
            "fol": "\u00acp_3(Zaid)",
            "str_fol": "\u00acsucceeds(Zaid)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Zaid",
            "text": "Zaid acts fast.",
            "fol": "p_4(Zaid)",
            "str_fol": "acts_fast(Zaid)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Zaid",
            "text": "Zaid is spontaneous.",
            "fol": "p_10(Zaid)",
            "str_fol": "spontaneous(Zaid)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Zaid",
            "text": "Zaid does not pay attention to details.",
            "fol": "\u00acp_13(Zaid)",
            "str_fol": "\u00acpay_attention(Zaid)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Zaid",
            "text": "Zaid is not a perfectionist.",
            "fol": "\u00acp_12(Zaid)",
            "str_fol": "\u00acis_perfectionist(Zaid)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Zaid",
            "text": "Zaid is a dreamer.",
            "fol": "p_11(Zaid)",
            "str_fol": "dreamer(Zaid)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Zaid",
            "text": "Zaid is a planner.",
            "fol": "p_9(Zaid)",
            "str_fol": "planner(Zaid)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Zaid",
            "text": "Zaid is not thoughtful in his proposal planning.",
            "fol": "\u00acp_8(Zaid)",
            "str_fol": "\u00acis_thoughtful(Zaid)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Zaid",
            "text": "Zaid is sentimental.",
            "fol": "p_7(Zaid)",
            "str_fol": "sentimental(Zaid)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Zaid",
            "text": "Zaid is romantic.",
            "fol": "p_5(Zaid)",
            "str_fol": "romantic(Zaid)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Zaid",
            "text": "Zaid is not emotional.",
            "fol": "\u00acp_6(Zaid)",
            "str_fol": "\u00acemotional(Zaid)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Zaid",
            "text": "Zaid acts fast.",
            "fol": "p_4(Zaid)",
            "str_fol": "acts_fast(Zaid)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Zaid",
            "text": "Zaid does not succeed.",
            "fol": "\u00acp_3(Zaid)",
            "str_fol": "\u00acsucceeds(Zaid)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Zaid",
            "text": "Zaid does not get the desired results.",
            "fol": "\u00acp_2(Zaid)",
            "str_fol": "\u00acget_results(Zaid)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Zaid",
            "text": "Zaid is not creative.",
            "fol": "\u00acp_1(Zaid)",
            "str_fol": "\u00accreative(Zaid)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Zaid",
            "text": "Zaid is not passionate.",
            "fol": "\u00acp_0(Zaid)",
            "str_fol": "\u00acpassionate(Zaid)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Zaid acts fast, then he is spontaneous.",
            "fol": "p_4(Zaid) \u2192 p_10(Zaid)",
            "str_fol": "acts_fast(Zaid) \u2192 spontaneous(Zaid)"
        },
        {
            "id": 7,
            "text": "If Zaid pays attention to details, then he will succeed.",
            "fol": "p_13(Zaid) \u2192 p_3(Zaid)",
            "str_fol": "pay_attention(Zaid) \u2192 succeeds(Zaid)"
        },
        {
            "id": 6,
            "text": "Everyone who is a perfectionist either pays attention to details or gets desired results (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))",
            "str_fol": "\u2200x (is_perfectionist(x) \u2192 (pay_attention(x) \u2228 get_results(x)))"
        },
        {
            "id": 5,
            "text": "Zaid is either a perfectionist or a dreamer, but not necessarily both.",
            "fol": "p_12(Zaid) \u2295 p_11(Zaid)",
            "str_fol": "is_perfectionist(Zaid) \u2295 dreamer(Zaid)"
        },
        {
            "id": 4,
            "text": "For all humans, if someone is either a planner or a dreamer, then they are creative.",
            "fol": "\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((planner(x) \u2295 dreamer(x)) \u2192 creative(x))"
        },
        {
            "id": 3,
            "text": "If Zaid is a planner, then he is either spontaneous or thoughtful, but not both.",
            "fol": "p_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))",
            "str_fol": "planner(Zaid) \u2192 (spontaneous(Zaid) \u2295 is_thoughtful(Zaid))"
        },
        {
            "id": 2,
            "text": "Zaid is either thoughtful in his proposal planning or sentimental in his approach to love, but not both.",
            "fol": "p_8(Zaid) \u2295 p_7(Zaid)",
            "str_fol": "is_thoughtful(Zaid) \u2295 sentimental(Zaid)"
        },
        {
            "id": 1,
            "text": "If Zaid is sentimental, then he is either romantic or passionate, but not both.",
            "fol": "p_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))",
            "str_fol": "sentimental(Zaid) \u2192 (romantic(Zaid) \u2295 passionate(Zaid))"
        },
        {
            "id": 0,
            "text": "Zaid is either romantic or emotional (or both).",
            "fol": "p_5(Zaid) \u2228 p_6(Zaid)",
            "str_fol": "romantic(Zaid) \u2228 emotional(Zaid)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Zaid",
            "text": "Zaid acts fast.",
            "fol": "p_4(Zaid)",
            "str_fol": "acts_fast(Zaid)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Zaid",
            "text": "Zaid does not succeed.",
            "fol": "\u00acp_3(Zaid)",
            "str_fol": "\u00acsucceeds(Zaid)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Zaid",
            "text": "Zaid does not get the desired results.",
            "fol": "\u00acp_2(Zaid)",
            "str_fol": "\u00acget_results(Zaid)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Zaid",
            "text": "Zaid is not creative.",
            "fol": "\u00acp_1(Zaid)",
            "str_fol": "\u00accreative(Zaid)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Zaid",
            "text": "Zaid is not passionate.",
            "fol": "\u00acp_0(Zaid)",
            "str_fol": "\u00acpassionate(Zaid)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Zaid acts fast, then he is spontaneous.",
            "fol": "p_4(Zaid) \u2192 p_10(Zaid)",
            "str_fol": "acts_fast(Zaid) \u2192 spontaneous(Zaid)"
        },
        {
            "id": 7,
            "text": "If Zaid pays attention to details, then he will succeed.",
            "fol": "p_13(Zaid) \u2192 p_3(Zaid)",
            "str_fol": "pay_attention(Zaid) \u2192 succeeds(Zaid)"
        },
        {
            "id": 6,
            "text": "Everyone who is a perfectionist either pays attention to details or gets desired results (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))",
            "str_fol": "\u2200x (is_perfectionist(x) \u2192 (pay_attention(x) \u2228 get_results(x)))"
        },
        {
            "id": 5,
            "text": "Zaid is either a perfectionist or a dreamer, but not necessarily both.",
            "fol": "p_12(Zaid) \u2295 p_11(Zaid)",
            "str_fol": "is_perfectionist(Zaid) \u2295 dreamer(Zaid)"
        },
        {
            "id": 4,
            "text": "For all humans, if someone is either a planner or a dreamer, then they are creative.",
            "fol": "\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((planner(x) \u2295 dreamer(x)) \u2192 creative(x))"
        },
        {
            "id": 3,
            "text": "If Zaid is a planner, then he is either spontaneous or thoughtful, but not both.",
            "fol": "p_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))",
            "str_fol": "planner(Zaid) \u2192 (spontaneous(Zaid) \u2295 is_thoughtful(Zaid))"
        },
        {
            "id": 2,
            "text": "Zaid is either thoughtful in his proposal planning or sentimental in his approach to love, but not both.",
            "fol": "p_8(Zaid) \u2295 p_7(Zaid)",
            "str_fol": "is_thoughtful(Zaid) \u2295 sentimental(Zaid)"
        },
        {
            "id": 1,
            "text": "If Zaid is sentimental, then he is either romantic or passionate, but not both.",
            "fol": "p_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))",
            "str_fol": "sentimental(Zaid) \u2192 (romantic(Zaid) \u2295 passionate(Zaid))"
        },
        {
            "id": 0,
            "text": "Zaid is either romantic or emotional (or both).",
            "fol": "p_5(Zaid) \u2228 p_6(Zaid)",
            "str_fol": "romantic(Zaid) \u2228 emotional(Zaid)"
        }
    ],
    "context_fol": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)",
    "conclusion": {
        "id": 13,
        "subject": "Zaid",
        "text": "Zaid is not emotional.",
        "fol": "\u00acp_6(Zaid)",
        "str_fol": "\u00acemotional(Zaid)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_6(Zaid)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Zaid",
                    "text": "Zaid acts fast.",
                    "fol": "p_4(Zaid)",
                    "str_fol": "acts_fast(Zaid)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Zaid acts fast, then he is spontaneous.",
                    "fol": "p_4(Zaid) \u2192 p_10(Zaid)",
                    "str_fol": "acts_fast(Zaid) \u2192 spontaneous(Zaid)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Zaid",
                "text": "Zaid is spontaneous.",
                "fol": "p_10(Zaid)",
                "str_fol": "spontaneous(Zaid)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Zaid",
                    "text": "Zaid does not succeed.",
                    "fol": "\u00acp_3(Zaid)",
                    "str_fol": "\u00acsucceeds(Zaid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Zaid pays attention to details, then he will succeed.",
                    "fol": "p_13(Zaid) \u2192 p_3(Zaid)",
                    "str_fol": "pay_attention(Zaid) \u2192 succeeds(Zaid)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Zaid",
                "text": "Zaid does not pay attention to details.",
                "fol": "\u00acp_13(Zaid)",
                "str_fol": "\u00acpay_attention(Zaid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Zaid",
                    "text": "Zaid does not pay attention to details.",
                    "fol": "\u00acp_13(Zaid)",
                    "str_fol": "\u00acpay_attention(Zaid)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Zaid",
                    "text": "Zaid does not get the desired results.",
                    "fol": "\u00acp_2(Zaid)",
                    "str_fol": "\u00acget_results(Zaid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Everyone who is a perfectionist either pays attention to details or gets desired results (or both).",
                    "fol": "\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))",
                    "str_fol": "\u2200x (is_perfectionist(x) \u2192 (pay_attention(x) \u2228 get_results(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Zaid",
                "text": "Zaid is not a perfectionist.",
                "fol": "\u00acp_12(Zaid)",
                "str_fol": "\u00acis_perfectionist(Zaid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Zaid",
                    "text": "Zaid is not a perfectionist.",
                    "fol": "\u00acp_12(Zaid)",
                    "str_fol": "\u00acis_perfectionist(Zaid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Zaid is either a perfectionist or a dreamer, but not necessarily both.",
                    "fol": "p_12(Zaid) \u2295 p_11(Zaid)",
                    "str_fol": "is_perfectionist(Zaid) \u2295 dreamer(Zaid)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Zaid",
                "text": "Zaid is a dreamer.",
                "fol": "p_11(Zaid)",
                "str_fol": "dreamer(Zaid)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Zaid",
                    "text": "Zaid is a dreamer.",
                    "fol": "p_11(Zaid)",
                    "str_fol": "dreamer(Zaid)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Zaid",
                    "text": "Zaid is not creative.",
                    "fol": "\u00acp_1(Zaid)",
                    "str_fol": "\u00accreative(Zaid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all humans, if someone is either a planner or a dreamer, then they are creative.",
                    "fol": "\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((planner(x) \u2295 dreamer(x)) \u2192 creative(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Zaid",
                "text": "Zaid is a planner.",
                "fol": "p_9(Zaid)",
                "str_fol": "planner(Zaid)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Zaid",
                    "text": "Zaid is a planner.",
                    "fol": "p_9(Zaid)",
                    "str_fol": "planner(Zaid)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Zaid",
                    "text": "Zaid is spontaneous.",
                    "fol": "p_10(Zaid)",
                    "str_fol": "spontaneous(Zaid)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Zaid is a planner, then he is either spontaneous or thoughtful, but not both.",
                    "fol": "p_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))",
                    "str_fol": "planner(Zaid) \u2192 (spontaneous(Zaid) \u2295 is_thoughtful(Zaid))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Zaid",
                "text": "Zaid is not thoughtful in his proposal planning.",
                "fol": "\u00acp_8(Zaid)",
                "str_fol": "\u00acis_thoughtful(Zaid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Zaid",
                    "text": "Zaid is not thoughtful in his proposal planning.",
                    "fol": "\u00acp_8(Zaid)",
                    "str_fol": "\u00acis_thoughtful(Zaid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Zaid is either thoughtful in his proposal planning or sentimental in his approach to love, but not both.",
                    "fol": "p_8(Zaid) \u2295 p_7(Zaid)",
                    "str_fol": "is_thoughtful(Zaid) \u2295 sentimental(Zaid)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Zaid",
                "text": "Zaid is sentimental.",
                "fol": "p_7(Zaid)",
                "str_fol": "sentimental(Zaid)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Zaid",
                    "text": "Zaid is sentimental.",
                    "fol": "p_7(Zaid)",
                    "str_fol": "sentimental(Zaid)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Zaid",
                    "text": "Zaid is not passionate.",
                    "fol": "\u00acp_0(Zaid)",
                    "str_fol": "\u00acpassionate(Zaid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Zaid is sentimental, then he is either romantic or passionate, but not both.",
                    "fol": "p_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))",
                    "str_fol": "sentimental(Zaid) \u2192 (romantic(Zaid) \u2295 passionate(Zaid))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Zaid",
                "text": "Zaid is romantic.",
                "fol": "p_5(Zaid)",
                "str_fol": "romantic(Zaid)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Zaid",
                    "text": "Zaid is romantic.",
                    "fol": "p_5(Zaid)",
                    "str_fol": "romantic(Zaid)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Zaid is either romantic or emotional (or both).",
                    "fol": "p_5(Zaid) \u2228 p_6(Zaid)",
                    "str_fol": "romantic(Zaid) \u2228 emotional(Zaid)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Zaid)",
                    "-p_3(Zaid)",
                    "-p_2(Zaid)",
                    "-p_1(Zaid)",
                    "-p_0(Zaid)",
                    "p_4(Zaid) -> p_10(Zaid)",
                    "p_13(Zaid) -> p_3(Zaid)",
                    "all x (p_12(x) -> (p_13(x) | p_2(x)))",
                    "p_12(Zaid) | p_11(Zaid)",
                    "-(p_12(Zaid) & p_11(Zaid))",
                    "all x ((p_9(x) | p_11(x)) & (-p_9(x) | -p_11(x)) -> p_1(x))",
                    "p_9(Zaid) -> (p_10(Zaid) | p_8(Zaid)) & (-p_10(Zaid) | -p_8(Zaid))",
                    "p_8(Zaid) | p_7(Zaid)",
                    "-(p_8(Zaid) & p_7(Zaid))",
                    "p_7(Zaid) -> (p_5(Zaid) | p_0(Zaid)) & (-p_5(Zaid) | -p_0(Zaid))",
                    "p_5(Zaid) | p_6(Zaid)",
                    "p_5(Zaid) -> -p_6(Zaid)"
                ],
                "formulas(goals)": [
                    "-p_6(Zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Zaid) \u2192 \u00acp_6(Zaid)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)\np_5(Zaid) \u2192 \u00acp_6(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Zaid)",
                    "-p_3(Zaid)",
                    "-p_2(Zaid)",
                    "-p_1(Zaid)",
                    "-p_0(Zaid)",
                    "p_4(Zaid) -> p_10(Zaid)",
                    "p_13(Zaid) -> p_3(Zaid)",
                    "all x (p_12(x) -> (p_13(x) | p_2(x)))",
                    "-(p_12(Zaid) <-> p_11(Zaid))",
                    "all x (-(p_9(x) <-> p_11(x)) -> p_1(x))",
                    "p_9(Zaid) -> -(p_10(Zaid) <-> p_8(Zaid))",
                    "-(p_8(Zaid) <-> p_7(Zaid))",
                    "p_7(Zaid) -> -(p_5(Zaid) <-> p_0(Zaid))",
                    "p_5(Zaid) | p_6(Zaid)",
                    "p_5(Zaid) -> -p_6(Zaid)"
                ],
                "formulas(goals)": [
                    "-p_6(Zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Zaid) \u2192 \u00acp_6(Zaid)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)\np_5(Zaid) \u2192 \u00acp_6(Zaid)\np_10(Zaid)\n\u00ac(p_12(Zaid) \u2227 p_11(Zaid))\n\u00ac(\u00acp_12(Zaid) \u2227 \u00acp_11(Zaid))\np_5(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Zaid)",
                    "-p_3(Zaid)",
                    "-p_2(Zaid)",
                    "-p_1(Zaid)",
                    "-p_0(Zaid)",
                    "p_4(Zaid) -> p_10(Zaid)",
                    "p_13(Zaid) -> p_3(Zaid)",
                    "all x (p_12(x) -> (p_13(x) | p_2(x)))",
                    "-(p_12(Zaid) <-> p_11(Zaid))",
                    "all x (-(p_9(x) <-> p_11(x)) -> p_1(x))",
                    "p_9(Zaid) -> (-(p_10(Zaid) <-> p_8(Zaid)))",
                    "-(p_8(Zaid) <-> p_7(Zaid))",
                    "p_7(Zaid) -> (-(p_5(Zaid) <-> p_0(Zaid)))",
                    "p_5(Zaid) | p_6(Zaid)",
                    "p_5(Zaid) -> -p_6(Zaid)",
                    "p_10(Zaid)",
                    "-(p_12(Zaid) & p_11(Zaid))",
                    "-(-p_12(Zaid) & -p_11(Zaid))",
                    "p_5(Zaid)"
                ],
                "formulas(goals)": [
                    "-p_6(Zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Zaid)",
                    "\u00ac(p_12(Zaid) \u2227 p_11(Zaid))",
                    "\u00ac(\u00acp_12(Zaid) \u2227 \u00acp_11(Zaid))",
                    "p_5(Zaid)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)\np_10(Zaid)\n\u00ac(p_12(Zaid) \u2227 p_11(Zaid))\n\u00ac(\u00acp_12(Zaid) \u2227 \u00acp_11(Zaid))\np_6(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(zaid)",
                    "-p_3(zaid)",
                    "-p_2(zaid)",
                    "-p_1(zaid)",
                    "-p_0(zaid)",
                    "p_4(zaid) -> p_10(zaid)",
                    "p_13(zaid) -> p_3(zaid)",
                    "all x (p_12(x) -> (p_13(x) | p_2(x)))",
                    "-(p_12(zaid) <-> p_11(zaid))",
                    "all x (-(p_9(x) <-> p_11(x)) -> p_1(x))",
                    "p_9(zaid) -> (-(p_10(zaid) <-> p_8(zaid)))",
                    "-(p_8(zaid) <-> p_7(zaid))",
                    "p_7(zaid) -> (-(p_5(zaid) <-> p_0(zaid)))",
                    "p_5(zaid) | p_6(zaid)",
                    "p_10(zaid)",
                    "-(p_12(zaid) & p_11(zaid))",
                    "-(-p_12(zaid) & -p_11(zaid))",
                    "p_6(zaid)"
                ],
                "formulas(goals)": [
                    "- -p_6(zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Zaid)"
                ],
                "removed_rules": [
                    "p_5(Zaid) \u2192 \u00acp_6(Zaid)"
                ],
                "added_facts": [
                    "p_6(Zaid)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)\np_10(Zaid)\n\u00ac(p_12(Zaid) \u2227 p_11(Zaid))\n\u00ac(\u00acp_12(Zaid) \u2227 \u00acp_11(Zaid))\np_5(Zaid)\np_5(Zaid) \u2192 \u00acp_6(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Zaid)",
                    "-p_3(Zaid)",
                    "-p_2(Zaid)",
                    "-p_1(Zaid)",
                    "-p_0(Zaid)",
                    "p_4(Zaid) -> p_10(Zaid)",
                    "p_13(Zaid) -> p_3(Zaid)",
                    "(all x (p_12(x) -> (p_13(x) | p_2(x))))",
                    "-(p_12(Zaid) <-> p_11(Zaid))",
                    "(all x (-((p_9(x) <-> p_11(x))) -> p_1(x)))",
                    "p_9(Zaid) -> (-(p_10(Zaid) <-> p_8(Zaid)))",
                    "-(p_8(Zaid) <-> p_7(Zaid))",
                    "p_7(Zaid) -> (-(p_5(Zaid) <-> p_0(Zaid)))",
                    "p_5(Zaid) | p_6(Zaid)",
                    "p_10(Zaid)",
                    "-(p_12(Zaid) & p_11(Zaid))",
                    "-(-p_12(Zaid) & -p_11(Zaid))",
                    "p_5(Zaid)",
                    "p_5(Zaid) -> -p_6(Zaid)"
                ],
                "formulas(goals)": [
                    "-p_6(Zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Zaid)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Zaid)"
                ],
                "added_rules": [
                    "p_5(Zaid) \u2192 \u00acp_6(Zaid)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)\np_10(Zaid)\n\u00ac(p_12(Zaid) \u2227 p_11(Zaid))\n\u00ac(\u00acp_12(Zaid) \u2227 \u00acp_11(Zaid))\np_5(Zaid)\np_5(Zaid) \u2192 p_6(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Zaid)",
                    "-p_3(Zaid)",
                    "-p_2(Zaid)",
                    "-p_1(Zaid)",
                    "-p_0(Zaid)",
                    "p_4(Zaid) -> p_10(Zaid)",
                    "p_13(Zaid) -> p_3(Zaid)",
                    "all x (p_12(x) -> (p_13(x) | p_2(x)))",
                    "-(p_12(Zaid) <-> p_11(Zaid))",
                    "all x (-(p_9(x) <-> p_11(x)) -> p_1(x))",
                    "p_9(Zaid) -> (-(p_10(Zaid) <-> p_8(Zaid)))",
                    "-(p_8(Zaid) <-> p_7(Zaid))",
                    "p_7(Zaid) -> (-(p_5(Zaid) <-> p_0(Zaid)))",
                    "p_5(Zaid) | p_6(Zaid)",
                    "p_10(Zaid)",
                    "-(p_12(Zaid) & p_11(Zaid))",
                    "-(-p_12(Zaid) & -p_11(Zaid))",
                    "p_5(Zaid)",
                    "p_5(Zaid) -> p_6(Zaid)"
                ],
                "formulas(goals)": [
                    "p_6(Zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Zaid) \u2192 \u00acp_6(Zaid)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Zaid) \u2192 p_6(Zaid)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Zaid)\n\u00acp_3(Zaid)\n\u00acp_2(Zaid)\n\u00acp_1(Zaid)\n\u00acp_0(Zaid)\np_4(Zaid) \u2192 p_10(Zaid)\np_13(Zaid) \u2192 p_3(Zaid)\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_2(x)))\np_12(Zaid) \u2295 p_11(Zaid)\n\u2200x ((p_9(x) \u2295 p_11(x)) \u2192 p_1(x))\np_9(Zaid) \u2192 (p_10(Zaid) \u2295 p_8(Zaid))\np_8(Zaid) \u2295 p_7(Zaid)\np_7(Zaid) \u2192 (p_5(Zaid) \u2295 p_0(Zaid))\np_5(Zaid) \u2228 p_6(Zaid)\np_10(Zaid)\n\u00ac(p_12(Zaid) \u2227 p_11(Zaid))\n\u00ac(\u00acp_12(Zaid) \u2227 \u00acp_11(Zaid))\np_5(Zaid)\np_5(Zaid) \u2192 \u00acp_6(Zaid)",
            "Initial Goal": "\u00acp_6(Zaid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Zaid)",
                    "-p_3(Zaid)",
                    "-p_2(Zaid)",
                    "-p_1(Zaid)",
                    "-p_0(Zaid)",
                    "p_4(Zaid) -> p_10(Zaid)",
                    "p_13(Zaid) -> p_3(Zaid)",
                    "all x (p_12(x) -> (p_13(x) | p_2(x)))",
                    "-(p_12(Zaid) <-> p_11(Zaid))",
                    "all x (-(p_9(x) <-> p_11(x)) -> p_1(x))",
                    "p_9(Zaid) -> (-(p_10(Zaid) <-> p_8(Zaid)))",
                    "-(p_8(Zaid) <-> p_7(Zaid))",
                    "p_7(Zaid) -> (-(p_5(Zaid) <-> p_0(Zaid)))",
                    "p_5(Zaid) | p_6(Zaid)",
                    "p_10(Zaid)",
                    "-(p_12(Zaid) & p_11(Zaid))",
                    "-(-p_12(Zaid) & -p_11(Zaid))",
                    "p_5(Zaid)",
                    "p_5(Zaid) -> -p_6(Zaid)"
                ],
                "formulas(goals)": [
                    "-p_6(Zaid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Zaid) \u2192 p_6(Zaid)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Zaid) \u2192 \u00acp_6(Zaid)"
                ]
            }
        }
    ]
}