{
    "background_story": "Rudy was a history buff with a passion for 19th-century Italian politics. He spent most of his free time reading about Giuseppe Garibaldi, the legendary general who unified Italy. Inspired by Garibaldi's bravery and vision, Rudy decided to embark on a journey to retrace the general's famous campaigns. He traveled across Italy, visiting the battlefields and towns that played a significant role in Garibaldi's quest for unification. Rudy's fascination with Garibaldi led him to write a book about the general's life, which became a surprise bestseller. Soon, he was invited to give lectures and tours, sharing his knowledge with others. Rudy's love for Garibaldi's legacy had not only deepened his understanding of history but also opened up a new career path, allowing him to inspire others with the story of Italy's heroic general.",
    "predicates": [
        {
            "id": 0,
            "name": "sets_goals"
        },
        {
            "id": 1,
            "name": "learns_fast"
        },
        {
            "id": 2,
            "name": "becomes_expert"
        },
        {
            "id": 3,
            "name": "explores_cities"
        },
        {
            "id": 4,
            "name": "visits_museums"
        },
        {
            "id": 5,
            "name": "meets_people"
        },
        {
            "id": 6,
            "name": "admires_history"
        },
        {
            "id": 7,
            "name": "inspires_others"
        },
        {
            "id": 8,
            "name": "reads_widely"
        },
        {
            "id": 9,
            "name": "shares_knowledge"
        },
        {
            "id": 10,
            "name": "writes_books"
        },
        {
            "id": 11,
            "name": "studies_hard"
        },
        {
            "id": 12,
            "name": "works_diligent"
        },
        {
            "id": 13,
            "name": "travels_extensively"
        },
        {
            "id": 14,
            "name": "gains_experience"
        },
        {
            "id": 15,
            "name": "enjoys_learning"
        },
        {
            "id": 16,
            "name": "is_curious"
        },
        {
            "id": 17,
            "name": "gives_lectures"
        },
        {
            "id": 18,
            "name": "leads_tours"
        },
        {
            "id": 19,
            "name": "conducts_research"
        },
        {
            "id": 20,
            "name": "gathers_info"
        },
        {
            "id": 21,
            "name": "pursues_passion"
        },
        {
            "id": 22,
            "name": "practices_often"
        },
        {
            "id": 23,
            "name": "has_passion"
        },
        {
            "id": 24,
            "name": "achieves_success"
        },
        {
            "id": 25,
            "name": "is_adventurous"
        },
        {
            "id": 26,
            "name": "discovers_new_things"
        },
        {
            "id": 27,
            "name": "joins_club"
        },
        {
            "id": 28,
            "name": "attends_seminar"
        }
    ],
    "subject_name": "Rudy",
    "subject_category": "human",
    "keyword": "garibaldi",
    "all_facts": [
        {
            "id": 0,
            "subject": "Rudy",
            "text": "Rudy sets goals.",
            "fol": "p_0(Rudy)",
            "str_fol": "sets_goals(Rudy)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Rudy",
            "text": "Rudy learns quickly.",
            "fol": "p_1(Rudy)",
            "str_fol": "learns_fast(Rudy)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Rudy",
            "text": "Rudy does not become an expert.",
            "fol": "\u00acp_2(Rudy)",
            "str_fol": "\u00acbecomes_expert(Rudy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Rudy",
            "text": "Rudy does not explore cities.",
            "fol": "\u00acp_3(Rudy)",
            "str_fol": "\u00acexplores_cities(Rudy)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Rudy",
            "text": "Rudy visits museums.",
            "fol": "p_4(Rudy)",
            "str_fol": "visits_museums(Rudy)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Rudy",
            "text": "Rudy meets people.",
            "fol": "p_5(Rudy)",
            "str_fol": "meets_people(Rudy)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Rudy",
            "text": "Rudy does not gain experience.",
            "fol": "\u00acp_14(Rudy)",
            "str_fol": "\u00acgains_experience(Rudy)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Rudy",
            "text": "Rudy does not travel extensively.",
            "fol": "\u00acp_13(Rudy)",
            "str_fol": "\u00actravels_extensively(Rudy)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Rudy",
            "text": "Rudy works diligently.",
            "fol": "p_12(Rudy)",
            "str_fol": "works_diligent(Rudy)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Rudy",
            "text": "Rudy studies hard.",
            "fol": "p_11(Rudy)",
            "str_fol": "studies_hard(Rudy)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Rudy",
            "text": "Rudy does not write books.",
            "fol": "\u00acp_10(Rudy)",
            "str_fol": "\u00acwrites_books(Rudy)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Rudy",
            "text": "Rudy reads widely.",
            "fol": "p_8(Rudy)",
            "str_fol": "reads_widely(Rudy)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Rudy",
            "text": "Rudy inspires others.",
            "fol": "p_7(Rudy)",
            "str_fol": "inspires_others(Rudy)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Rudy",
            "text": "Rudy admires history.",
            "fol": "p_6(Rudy)",
            "str_fol": "admires_history(Rudy)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Rudy",
            "text": "Rudy visits museums.",
            "fol": "p_4(Rudy)",
            "str_fol": "visits_museums(Rudy)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Rudy",
            "text": "Rudy meets people.",
            "fol": "p_5(Rudy)",
            "str_fol": "meets_people(Rudy)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Rudy",
            "text": "Rudy does not explore cities.",
            "fol": "\u00acp_3(Rudy)",
            "str_fol": "\u00acexplores_cities(Rudy)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Rudy",
            "text": "Rudy sets goals.",
            "fol": "p_0(Rudy)",
            "str_fol": "sets_goals(Rudy)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Rudy",
            "text": "Rudy does not become an expert.",
            "fol": "\u00acp_2(Rudy)",
            "str_fol": "\u00acbecomes_expert(Rudy)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Rudy",
            "text": "Rudy learns quickly.",
            "fol": "p_1(Rudy)",
            "str_fol": "learns_fast(Rudy)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Rudy visits museums, then he either gains experience or meets people, but not both.",
            "fol": "p_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))",
            "str_fol": "visits_museums(Rudy) \u2192 (gains_experience(Rudy) \u2295 meets_people(Rudy))"
        },
        {
            "id": 7,
            "text": "If Rudy either explores cities or travels extensively (but not both), then he gains experience.",
            "fol": "(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)",
            "str_fol": "(explores_cities(Rudy) \u2295 travels_extensively(Rudy)) \u2192 gains_experience(Rudy)"
        },
        {
            "id": 6,
            "text": "Rudy either travels extensively or works diligently, but not necessarily both.",
            "fol": "p_13(Rudy) \u2295 p_12(Rudy)",
            "str_fol": "travels_extensively(Rudy) \u2295 works_diligent(Rudy)"
        },
        {
            "id": 5,
            "text": "If Rudy sets goals and works diligently, then he studies hard.",
            "fol": "(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)",
            "str_fol": "(sets_goals(Rudy) \u2227 works_diligent(Rudy)) \u2192 studies_hard(Rudy)"
        },
        {
            "id": 4,
            "text": "If Rudy writes books and studies hard, then he becomes an expert.",
            "fol": "(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)",
            "str_fol": "(writes_books(Rudy) \u2227 studies_hard(Rudy)) \u2192 becomes_expert(Rudy)"
        },
        {
            "id": 3,
            "text": "Rudy learns quickly or shares knowledge.",
            "fol": "p_1(Rudy) \u2228 p_9(Rudy)",
            "str_fol": "learns_fast(Rudy) \u2228 shares_knowledge(Rudy)"
        },
        {
            "id": 2,
            "text": "For Rudy, either he writes books or he reads widely, but not both.",
            "fol": "p_10(Rudy) \u2295 p_8(Rudy)",
            "str_fol": "writes_books(Rudy) \u2295 reads_widely(Rudy)"
        },
        {
            "id": 1,
            "text": "If Rudy reads widely, then he inspires others and shares knowledge.",
            "fol": "p_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))",
            "str_fol": "reads_widely(Rudy) \u2192 (inspires_others(Rudy) \u2227 shares_knowledge(Rudy))"
        },
        {
            "id": 0,
            "text": "Rudy either admires history or inspires others (or both).",
            "fol": "p_6(Rudy) \u2228 p_7(Rudy)",
            "str_fol": "admires_history(Rudy) \u2228 inspires_others(Rudy)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Rudy",
            "text": "Rudy visits museums.",
            "fol": "p_4(Rudy)",
            "str_fol": "visits_museums(Rudy)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Rudy",
            "text": "Rudy meets people.",
            "fol": "p_5(Rudy)",
            "str_fol": "meets_people(Rudy)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Rudy",
            "text": "Rudy does not explore cities.",
            "fol": "\u00acp_3(Rudy)",
            "str_fol": "\u00acexplores_cities(Rudy)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Rudy",
            "text": "Rudy sets goals.",
            "fol": "p_0(Rudy)",
            "str_fol": "sets_goals(Rudy)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Rudy",
            "text": "Rudy does not become an expert.",
            "fol": "\u00acp_2(Rudy)",
            "str_fol": "\u00acbecomes_expert(Rudy)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Rudy",
            "text": "Rudy learns quickly.",
            "fol": "p_1(Rudy)",
            "str_fol": "learns_fast(Rudy)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Rudy visits museums, then he either gains experience or meets people, but not both.",
            "fol": "p_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))",
            "str_fol": "visits_museums(Rudy) \u2192 (gains_experience(Rudy) \u2295 meets_people(Rudy))"
        },
        {
            "id": 7,
            "text": "If Rudy either explores cities or travels extensively (but not both), then he gains experience.",
            "fol": "(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)",
            "str_fol": "(explores_cities(Rudy) \u2295 travels_extensively(Rudy)) \u2192 gains_experience(Rudy)"
        },
        {
            "id": 6,
            "text": "Rudy either travels extensively or works diligently, but not necessarily both.",
            "fol": "p_13(Rudy) \u2295 p_12(Rudy)",
            "str_fol": "travels_extensively(Rudy) \u2295 works_diligent(Rudy)"
        },
        {
            "id": 5,
            "text": "If Rudy sets goals and works diligently, then he studies hard.",
            "fol": "(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)",
            "str_fol": "(sets_goals(Rudy) \u2227 works_diligent(Rudy)) \u2192 studies_hard(Rudy)"
        },
        {
            "id": 4,
            "text": "If Rudy writes books and studies hard, then he becomes an expert.",
            "fol": "(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)",
            "str_fol": "(writes_books(Rudy) \u2227 studies_hard(Rudy)) \u2192 becomes_expert(Rudy)"
        },
        {
            "id": 3,
            "text": "Rudy learns quickly or shares knowledge.",
            "fol": "p_1(Rudy) \u2228 p_9(Rudy)",
            "str_fol": "learns_fast(Rudy) \u2228 shares_knowledge(Rudy)"
        },
        {
            "id": 2,
            "text": "For Rudy, either he writes books or he reads widely, but not both.",
            "fol": "p_10(Rudy) \u2295 p_8(Rudy)",
            "str_fol": "writes_books(Rudy) \u2295 reads_widely(Rudy)"
        },
        {
            "id": 1,
            "text": "If Rudy reads widely, then he inspires others and shares knowledge.",
            "fol": "p_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))",
            "str_fol": "reads_widely(Rudy) \u2192 (inspires_others(Rudy) \u2227 shares_knowledge(Rudy))"
        },
        {
            "id": 0,
            "text": "Rudy either admires history or inspires others (or both).",
            "fol": "p_6(Rudy) \u2228 p_7(Rudy)",
            "str_fol": "admires_history(Rudy) \u2228 inspires_others(Rudy)"
        }
    ],
    "context_fol": "p_4(Rudy)\np_5(Rudy)\n\u00acp_3(Rudy)\np_0(Rudy)\n\u00acp_2(Rudy)\np_1(Rudy)\np_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))\n(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)\np_13(Rudy) \u2295 p_12(Rudy)\n(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)\n(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)\np_1(Rudy) \u2228 p_9(Rudy)\np_10(Rudy) \u2295 p_8(Rudy)\np_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))\np_6(Rudy) \u2228 p_7(Rudy)",
    "conclusion": {
        "id": 13,
        "subject": "Rudy",
        "text": "Rudy admires history.",
        "fol": "p_6(Rudy)",
        "str_fol": "admires_history(Rudy)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Rudy)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Rudy",
                    "text": "Rudy visits museums.",
                    "fol": "p_4(Rudy)",
                    "str_fol": "visits_museums(Rudy)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Rudy",
                    "text": "Rudy meets people.",
                    "fol": "p_5(Rudy)",
                    "str_fol": "meets_people(Rudy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Rudy visits museums, then he either gains experience or meets people, but not both.",
                    "fol": "p_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))",
                    "str_fol": "visits_museums(Rudy) \u2192 (gains_experience(Rudy) \u2295 meets_people(Rudy))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Rudy",
                "text": "Rudy does not gain experience.",
                "fol": "\u00acp_14(Rudy)",
                "str_fol": "\u00acgains_experience(Rudy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Rudy",
                    "text": "Rudy does not explore cities.",
                    "fol": "\u00acp_3(Rudy)",
                    "str_fol": "\u00acexplores_cities(Rudy)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Rudy",
                    "text": "Rudy does not gain experience.",
                    "fol": "\u00acp_14(Rudy)",
                    "str_fol": "\u00acgains_experience(Rudy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Rudy either explores cities or travels extensively (but not both), then he gains experience.",
                    "fol": "(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)",
                    "str_fol": "(explores_cities(Rudy) \u2295 travels_extensively(Rudy)) \u2192 gains_experience(Rudy)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Rudy",
                "text": "Rudy does not travel extensively.",
                "fol": "\u00acp_13(Rudy)",
                "str_fol": "\u00actravels_extensively(Rudy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Rudy",
                    "text": "Rudy does not travel extensively.",
                    "fol": "\u00acp_13(Rudy)",
                    "str_fol": "\u00actravels_extensively(Rudy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Rudy either travels extensively or works diligently, but not necessarily both.",
                    "fol": "p_13(Rudy) \u2295 p_12(Rudy)",
                    "str_fol": "travels_extensively(Rudy) \u2295 works_diligent(Rudy)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Rudy",
                "text": "Rudy works diligently.",
                "fol": "p_12(Rudy)",
                "str_fol": "works_diligent(Rudy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Rudy",
                    "text": "Rudy sets goals.",
                    "fol": "p_0(Rudy)",
                    "str_fol": "sets_goals(Rudy)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Rudy",
                    "text": "Rudy works diligently.",
                    "fol": "p_12(Rudy)",
                    "str_fol": "works_diligent(Rudy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Rudy sets goals and works diligently, then he studies hard.",
                    "fol": "(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)",
                    "str_fol": "(sets_goals(Rudy) \u2227 works_diligent(Rudy)) \u2192 studies_hard(Rudy)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Rudy",
                "text": "Rudy studies hard.",
                "fol": "p_11(Rudy)",
                "str_fol": "studies_hard(Rudy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Rudy",
                    "text": "Rudy studies hard.",
                    "fol": "p_11(Rudy)",
                    "str_fol": "studies_hard(Rudy)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Rudy",
                    "text": "Rudy does not become an expert.",
                    "fol": "\u00acp_2(Rudy)",
                    "str_fol": "\u00acbecomes_expert(Rudy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Rudy writes books and studies hard, then he becomes an expert.",
                    "fol": "(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)",
                    "str_fol": "(writes_books(Rudy) \u2227 studies_hard(Rudy)) \u2192 becomes_expert(Rudy)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Rudy",
                "text": "Rudy does not write books.",
                "fol": "\u00acp_10(Rudy)",
                "str_fol": "\u00acwrites_books(Rudy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Rudy",
                    "text": "Rudy learns quickly.",
                    "fol": "p_1(Rudy)",
                    "str_fol": "learns_fast(Rudy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Rudy learns quickly or shares knowledge.",
                    "fol": "p_1(Rudy) \u2228 p_9(Rudy)",
                    "str_fol": "learns_fast(Rudy) \u2228 shares_knowledge(Rudy)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Rudy",
                    "text": "Rudy does not write books.",
                    "fol": "\u00acp_10(Rudy)",
                    "str_fol": "\u00acwrites_books(Rudy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For Rudy, either he writes books or he reads widely, but not both.",
                    "fol": "p_10(Rudy) \u2295 p_8(Rudy)",
                    "str_fol": "writes_books(Rudy) \u2295 reads_widely(Rudy)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Rudy",
                "text": "Rudy reads widely.",
                "fol": "p_8(Rudy)",
                "str_fol": "reads_widely(Rudy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Rudy",
                    "text": "Rudy reads widely.",
                    "fol": "p_8(Rudy)",
                    "str_fol": "reads_widely(Rudy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Rudy reads widely, then he inspires others and shares knowledge.",
                    "fol": "p_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))",
                    "str_fol": "reads_widely(Rudy) \u2192 (inspires_others(Rudy) \u2227 shares_knowledge(Rudy))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Rudy",
                "text": "Rudy inspires others.",
                "fol": "p_7(Rudy)",
                "str_fol": "inspires_others(Rudy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Rudy",
                    "text": "Rudy inspires others.",
                    "fol": "p_7(Rudy)",
                    "str_fol": "inspires_others(Rudy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Rudy either admires history or inspires others (or both).",
                    "fol": "p_6(Rudy) \u2228 p_7(Rudy)",
                    "str_fol": "admires_history(Rudy) \u2228 inspires_others(Rudy)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Rudy)\np_5(Rudy)\n\u00acp_3(Rudy)\np_0(Rudy)\n\u00acp_2(Rudy)\np_1(Rudy)\np_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))\n(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)\np_13(Rudy) \u2295 p_12(Rudy)\n(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)\n(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)\np_1(Rudy) \u2228 p_9(Rudy)\np_10(Rudy) \u2295 p_8(Rudy)\np_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))\np_6(Rudy) \u2228 p_7(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> (-(p_14(Rudy) <-> p_5(Rudy)))",
                    "(-(p_3(Rudy) <-> p_13(Rudy))) -> p_14(Rudy)",
                    "-(p_13(Rudy) <-> p_12(Rudy))",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "-(p_10(Rudy) <-> p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "p_6(Rudy) | p_7(Rudy)",
                    "p_7(Rudy) -> p_6(Rudy)"
                ],
                "formulas(goals)": [
                    "p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Rudy) \u2192 p_6(Rudy)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Rudy)\np_5(Rudy)\n\u00acp_3(Rudy)\np_0(Rudy)\n\u00acp_2(Rudy)\np_1(Rudy)\np_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))\n(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)\np_13(Rudy) \u2295 p_12(Rudy)\n(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)\n(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)\np_1(Rudy) \u2228 p_9(Rudy)\np_10(Rudy) \u2295 p_8(Rudy)\np_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))\np_7(Rudy) \u2192 \u00acp_6(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> (-(p_14(Rudy) <-> p_5(Rudy)))",
                    "(-(p_3(Rudy) <-> p_13(Rudy))) -> p_14(Rudy)",
                    "-(p_13(Rudy) <-> p_12(Rudy))",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "-(p_10(Rudy) <-> p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "p_7(Rudy) -> -p_6(Rudy)"
                ],
                "formulas(goals)": [
                    "-p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Rudy) \u2228 p_7(Rudy)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Rudy) \u2192 \u00acp_6(Rudy)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Rudy)\np_5(Rudy)\n\u00acp_3(Rudy)\np_0(Rudy)\n\u00acp_2(Rudy)\np_1(Rudy)\np_4(Rudy) \u2192 (p_14(Rudy) \u2295 p_5(Rudy))\n(p_3(Rudy) \u2295 p_13(Rudy)) \u2192 p_14(Rudy)\np_13(Rudy) \u2295 p_12(Rudy)\n(p_0(Rudy) \u2227 p_12(Rudy)) \u2192 p_11(Rudy)\n(p_10(Rudy) \u2227 p_11(Rudy)) \u2192 p_2(Rudy)\np_1(Rudy) \u2228 p_9(Rudy)\np_10(Rudy) \u2295 p_8(Rudy)\np_8(Rudy) \u2192 (p_7(Rudy) \u2227 p_9(Rudy))\n(p_7(Rudy) \u2227 p_9(Rudy)) \u2192 p_6(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> (-(p_14(Rudy) <-> p_5(Rudy)))",
                    "(-(p_3(Rudy) <-> p_13(Rudy))) -> p_14(Rudy)",
                    "-(p_13(Rudy) <-> p_12(Rudy))",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "-(p_10(Rudy) <-> p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "(p_7(Rudy) & p_9(Rudy)) -> p_6(Rudy)"
                ],
                "formulas(goals)": [
                    "p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Rudy) \u2192 \u00acp_6(Rudy)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Rudy) \u2227 p_9(Rudy)) \u2192 p_6(Rudy)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p\u2084(Rudy)\np\u2085(Rudy)\n\u00acp\u2083(Rudy)\np\u2080(Rudy)\n\u00acp\u2082(Rudy)\np\u2081(Rudy)\np\u2084(Rudy) \u2192 (p\u2081\u2084(Rudy) \u2295 p\u2085(Rudy))\n(p\u2083(Rudy) \u2295 p\u2081\u2083(Rudy)) \u2192 p\u2081\u2084(Rudy)\np\u2081\u2083(Rudy) \u2295 p\u2081\u2082(Rudy)\n(p\u2080(Rudy) \u2227 p\u2081\u2082(Rudy)) \u2192 p\u2081\u2081(Rudy)\n(p\u2081\u2080(Rudy) \u2227 p\u2081\u2081(Rudy)) \u2192 p\u2082(Rudy)\np\u2081(Rudy) \u2228 p\u2089(Rudy)\np\u2081\u2080(Rudy) \u2295 p\u2088(Rudy)\np\u2088(Rudy) \u2192 (p\u2087(Rudy) \u2227 p\u2089(Rudy))\np\u2088(Rudy) \u2192 \u00acp\u2086(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> -(p_14(Rudy) <-> p_5(Rudy))",
                    "-(p_3(Rudy) <-> p_13(Rudy)) -> p_14(Rudy)",
                    "-(p_13(Rudy) <-> p_12(Rudy))",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "-(p_10(Rudy) <-> p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "p_8(Rudy) -> -p_6(Rudy)"
                ],
                "formulas(goals)": [
                    "-p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p\u2087(Rudy) \u2227 p\u2089(Rudy)) \u2192 p\u2086(Rudy)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p\u2088(Rudy) \u2192 \u00acp\u2086(Rudy)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p\u2084(Rudy)\np\u2085(Rudy)\n\u00acp\u2083(Rudy)\np\u2080(Rudy)\n\u00acp\u2082(Rudy)\np\u2081(Rudy)\np\u2084(Rudy) \u2192 (p\u2081\u2084(Rudy) \u2295 p\u2085(Rudy))\n(p\u2083(Rudy) \u2295 p\u2081\u2083(Rudy)) \u2192 p\u2081\u2084(Rudy)\np\u2081\u2083(Rudy) \u2194 \u00acp\u2081\u2082(Rudy)\n(p\u2080(Rudy) \u2227 p\u2081\u2082(Rudy)) \u2192 p\u2081\u2081(Rudy)\n(p\u2081\u2080(Rudy) \u2227 p\u2081\u2081(Rudy)) \u2192 p\u2082(Rudy)\np\u2081(Rudy) \u2228 p\u2089(Rudy)\np\u2081\u2080(Rudy) \u2295 p\u2088(Rudy)\np\u2088(Rudy) \u2192 (p\u2087(Rudy) \u2227 p\u2089(Rudy))\np\u2088(Rudy) \u2192 \u00acp\u2086(Rudy)\np\u2081\u2082(Rudy)\n\u00acp\u2081\u2080(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> (-(p_14(Rudy) <-> p_5(Rudy)))",
                    "(-(p_3(Rudy) <-> p_13(Rudy))) -> p_14(Rudy)",
                    "p_13(Rudy) <-> -p_12(Rudy)",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "-(p_10(Rudy) <-> p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "p_8(Rudy) -> -p_6(Rudy)",
                    "p_12(Rudy)",
                    "-p_10(Rudy)"
                ],
                "formulas(goals)": [
                    "-p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p\u2081\u2083(Rudy) \u2295 p\u2081\u2082(Rudy)"
                ],
                "added_facts": [
                    "p\u2081\u2082(Rudy)",
                    "\u00acp\u2081\u2080(Rudy)"
                ],
                "added_rules": [
                    "p\u2081\u2083(Rudy) \u2194 \u00acp\u2081\u2082(Rudy)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p\u2084(Rudy)\np\u2085(Rudy)\n\u00acp\u2083(Rudy)\np\u2080(Rudy)\n\u00acp\u2082(Rudy)\np\u2081(Rudy)\np\u2084(Rudy) \u2192 (p\u2081\u2084(Rudy) \u2295 p\u2085(Rudy))\n(p\u2083(Rudy) \u2295 p\u2081\u2083(Rudy)) \u2192 p\u2081\u2084(Rudy)\n(p\u2081\u2083(Rudy) \u2192 \u00acp\u2081\u2082(Rudy)) \u2227 (\u00acp\u2081\u2082(Rudy) \u2192 p\u2081\u2083(Rudy))\n(p\u2080(Rudy) \u2227 p\u2081\u2082(Rudy)) \u2192 p\u2081\u2081(Rudy)\n(p\u2081\u2080(Rudy) \u2227 p\u2081\u2081(Rudy)) \u2192 p\u2082(Rudy)\np\u2081(Rudy) \u2228 p\u2089(Rudy)\n(p\u2081\u2080(Rudy) \u2228 p\u2088(Rudy)) \u2227 \u00ac(p\u2081\u2080(Rudy) \u2227 p\u2088(Rudy))\np\u2088(Rudy) \u2192 (p\u2087(Rudy) \u2227 p\u2089(Rudy))\np\u2088(Rudy) \u2192 \u00acp\u2086(Rudy)\np\u2081\u2082(Rudy)\n\u00acp\u2081\u2080(Rudy)\np\u2088(Rudy)\n\u00acp\u2086(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> (-(p_14(Rudy) <-> p_5(Rudy)))",
                    "(-(p_3(Rudy) <-> p_13(Rudy))) -> p_14(Rudy)",
                    "(p_13(Rudy) -> -p_12(Rudy)) & (-p_12(Rudy) -> p_13(Rudy))",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "(p_10(Rudy) | p_8(Rudy)) & -(p_10(Rudy) & p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "p_8(Rudy) -> -p_6(Rudy)",
                    "p_12(Rudy)",
                    "-p_10(Rudy)",
                    "p_8(Rudy)",
                    "-p_6(Rudy)"
                ],
                "formulas(goals)": [
                    "-p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p\u2081\u2083(Rudy) \u2194 \u00acp\u2081\u2082(Rudy)",
                    "p\u2081\u2080(Rudy) \u2295 p\u2088(Rudy)"
                ],
                "added_facts": [
                    "p\u2088(Rudy)",
                    "\u00acp\u2086(Rudy)"
                ],
                "added_rules": [
                    "(p\u2081\u2083(Rudy) \u2192 \u00acp\u2081\u2082(Rudy)) \u2227 (\u00acp\u2081\u2082(Rudy) \u2192 p\u2081\u2083(Rudy))",
                    "(p\u2081\u2080(Rudy) \u2228 p\u2088(Rudy)) \u2227 \u00ac(p\u2081\u2080(Rudy) \u2227 p\u2088(Rudy))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p\u2084(Rudy)\np\u2085(Rudy)\n\u00acp\u2083(Rudy)\np\u2080(Rudy)\n\u00acp\u2082(Rudy)\np\u2081(Rudy)\np\u2084(Rudy) \u2192 (p\u2081\u2084(Rudy) \u2295 p\u2085(Rudy))\n(p\u2083(Rudy) \u2295 p\u2081\u2083(Rudy)) \u2192 p\u2081\u2084(Rudy)\n(p\u2081\u2083(Rudy) \u2192 \u00acp\u2081\u2082(Rudy)) \u2227 (\u00acp\u2081\u2082(Rudy) \u2192 p\u2081\u2083(Rudy))\n(p\u2080(Rudy) \u2227 p\u2081\u2082(Rudy)) \u2192 p\u2081\u2081(Rudy)\n(p\u2081\u2080(Rudy) \u2227 p\u2081\u2081(Rudy)) \u2192 p\u2082(Rudy)\np\u2081(Rudy) \u2228 p\u2089(Rudy)\n(p\u2081\u2080(Rudy) \u2228 p\u2088(Rudy)) \u2227 \u00ac(p\u2081\u2080(Rudy) \u2227 p\u2088(Rudy))\np\u2088(Rudy) \u2192 (p\u2087(Rudy) \u2227 p\u2089(Rudy))\np\u2081\u2082(Rudy)\n\u00acp\u2081\u2080(Rudy)\np\u2088(Rudy)\np\u2087(Rudy) \u2192 p\u2086(Rudy)",
            "Initial Goal": "p_6(Rudy)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Rudy)",
                    "p_5(Rudy)",
                    "-p_3(Rudy)",
                    "p_0(Rudy)",
                    "-p_2(Rudy)",
                    "p_1(Rudy)",
                    "p_4(Rudy) -> (-(p_14(Rudy) <-> p_5(Rudy)))",
                    "(-(p_3(Rudy) <-> p_13(Rudy))) -> p_14(Rudy)",
                    "(p_13(Rudy) -> -p_12(Rudy)) & (-p_12(Rudy) -> p_13(Rudy))",
                    "(p_0(Rudy) & p_12(Rudy)) -> p_11(Rudy)",
                    "(p_10(Rudy) & p_11(Rudy)) -> p_2(Rudy)",
                    "p_1(Rudy) | p_9(Rudy)",
                    "(p_10(Rudy) | p_8(Rudy)) & -(p_10(Rudy) & p_8(Rudy))",
                    "p_8(Rudy) -> (p_7(Rudy) & p_9(Rudy))",
                    "p_12(Rudy)",
                    "-p_10(Rudy)",
                    "p_8(Rudy)",
                    "p_7(Rudy) -> p_6(Rudy)"
                ],
                "formulas(goals)": [
                    "p_6(Rudy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp\u2086(Rudy)"
                ],
                "removed_rules": [
                    "p\u2088(Rudy) \u2192 \u00acp\u2086(Rudy)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p\u2087(Rudy) \u2192 p\u2086(Rudy)"
                ]
            }
        }
    ]
}