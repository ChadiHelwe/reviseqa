{
    "background_story": "Dorian was a free-spirited artist who lived in the 1970s. He was known for his eclectic style, which often featured corduroy jackets, bell-bottom jeans, and a wide-brimmed hat. His love for corduroy was more than just a fashion statement; it represented his connection to the earthy, bohemian lifestyle he admired. Dorian spent his days painting vibrant landscapes and his nights playing folk music in local cafes. His corduroy-clad figure became a familiar sight in the town's artistic community, symbolizing creativity and nonconformity. As the years passed, Dorian's art gained recognition, but he never lost his affection for the rugged, textured fabric that had become synonymous with his carefree spirit.",
    "predicates": [
        {
            "id": 0,
            "name": "wear_corduroy"
        },
        {
            "id": 1,
            "name": "find_inspiration"
        },
        {
            "id": 2,
            "name": "pursue_passion"
        },
        {
            "id": 3,
            "name": "take_risks"
        },
        {
            "id": 4,
            "name": "seek_adventure"
        },
        {
            "id": 5,
            "name": "appreciate_arts"
        },
        {
            "id": 6,
            "name": "value_nonconformity"
        },
        {
            "id": 7,
            "name": "play_music"
        },
        {
            "id": 8,
            "name": "is_creative"
        },
        {
            "id": 9,
            "name": "think_freely"
        },
        {
            "id": 10,
            "name": "express_emotion"
        },
        {
            "id": 11,
            "name": "live_spontaneously"
        },
        {
            "id": 12,
            "name": "travel_often"
        },
        {
            "id": 13,
            "name": "enjoy_folk"
        },
        {
            "id": 14,
            "name": "like_poetry"
        },
        {
            "id": 15,
            "name": "makes_art"
        },
        {
            "id": 16,
            "name": "feel_deeply"
        },
        {
            "id": 17,
            "name": "see_beauty"
        },
        {
            "id": 18,
            "name": "paint_vibrantly"
        },
        {
            "id": 19,
            "name": "live_authentically"
        },
        {
            "id": 20,
            "name": "enjoy_nature"
        },
        {
            "id": 21,
            "name": "meet_new_people"
        }
    ],
    "subject_name": "Dorian",
    "subject_category": "human",
    "keyword": "corduroy",
    "all_facts": [
        {
            "id": 0,
            "subject": "Dorian",
            "text": "Dorian wears corduroy.",
            "fol": "p_0(Dorian)",
            "str_fol": "wear_corduroy(Dorian)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dorian",
            "text": "Dorian does not find inspiration.",
            "fol": "\u00acp_1(Dorian)",
            "str_fol": "\u00acfind_inspiration(Dorian)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Dorian",
            "text": "Dorian pursues his passion.",
            "fol": "p_2(Dorian)",
            "str_fol": "pursue_passion(Dorian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Dorian",
            "text": "Dorian takes risks.",
            "fol": "p_3(Dorian)",
            "str_fol": "take_risks(Dorian)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Dorian",
            "text": "Dorian seeks adventure.",
            "fol": "p_4(Dorian)",
            "str_fol": "seek_adventure(Dorian)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Dorian",
            "text": "Dorian travels often.",
            "fol": "p_12(Dorian)",
            "str_fol": "travel_often(Dorian)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Dorian",
            "text": "Dorian does not live spontaneously.",
            "fol": "\u00acp_11(Dorian)",
            "str_fol": "\u00aclive_spontaneously(Dorian)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Dorian",
            "text": "Dorian does not think freely.",
            "fol": "\u00acp_9(Dorian)",
            "str_fol": "\u00acthink_freely(Dorian)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Dorian",
            "text": "Dorian does not express emotion.",
            "fol": "\u00acp_10(Dorian)",
            "str_fol": "\u00acexpress_emotion(Dorian)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Dorian",
            "text": "Dorian is not creative.",
            "fol": "\u00acp_8(Dorian)",
            "str_fol": "\u00acis_creative(Dorian)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Dorian",
            "text": "Dorian does not play music.",
            "fol": "\u00acp_7(Dorian)",
            "str_fol": "\u00acplay_music(Dorian)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Dorian",
            "text": "Dorian appreciates the arts.",
            "fol": "p_5(Dorian)",
            "str_fol": "appreciate_arts(Dorian)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Dorian",
            "text": "Dorian values nonconformity.",
            "fol": "p_6(Dorian)",
            "str_fol": "value_nonconformity(Dorian)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Dorian",
            "text": "Dorian seeks adventure.",
            "fol": "p_4(Dorian)",
            "str_fol": "seek_adventure(Dorian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Dorian",
            "text": "Dorian takes risks.",
            "fol": "p_3(Dorian)",
            "str_fol": "take_risks(Dorian)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dorian",
            "text": "Dorian does not find inspiration.",
            "fol": "\u00acp_1(Dorian)",
            "str_fol": "\u00acfind_inspiration(Dorian)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Dorian",
            "text": "Dorian pursues his passion.",
            "fol": "p_2(Dorian)",
            "str_fol": "pursue_passion(Dorian)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Dorian",
            "text": "Dorian wears corduroy.",
            "fol": "p_0(Dorian)",
            "str_fol": "wear_corduroy(Dorian)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Dorian seeks adventure, then he will travel often.",
            "fol": "p_4(Dorian) \u2192 p_12(Dorian)",
            "str_fol": "seek_adventure(Dorian) \u2192 travel_often(Dorian)"
        },
        {
            "id": 6,
            "text": "If Dorian travels often, then he either lives spontaneously or takes risks, but not both.",
            "fol": "p_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))",
            "str_fol": "travel_often(Dorian) \u2192 (live_spontaneously(Dorian) \u2295 take_risks(Dorian))"
        },
        {
            "id": 5,
            "text": "Anyone who thinks freely or lives spontaneously can find inspiration.",
            "fol": "\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((think_freely(x) \u2228 live_spontaneously(x)) \u2192 find_inspiration(x))"
        },
        {
            "id": 4,
            "text": "For any person, either they pursue their passion or express emotion, but not necessarily both.",
            "fol": "\u2200x (p_2(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (pursue_passion(x) \u2295 express_emotion(x))"
        },
        {
            "id": 3,
            "text": "Anyone who is creative either thinks freely or expresses emotion.",
            "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (is_creative(x) \u2192 (think_freely(x) \u2228 express_emotion(x)))"
        },
        {
            "id": 2,
            "text": "If someone plays music, then they are creative.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (play_music(x) \u2192 is_creative(x))"
        },
        {
            "id": 1,
            "text": "Dorian appreciates arts or plays music.",
            "fol": "p_5(Dorian) \u2228 p_7(Dorian)",
            "str_fol": "appreciate_arts(Dorian) \u2228 play_music(Dorian)"
        },
        {
            "id": 0,
            "text": "If Dorian wears corduroy or appreciates the arts, then he values nonconformity.",
            "fol": "(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 p_6(Dorian)",
            "str_fol": "(wear_corduroy(Dorian) \u2228 appreciate_arts(Dorian)) \u2192 value_nonconformity(Dorian)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Dorian",
            "text": "Dorian seeks adventure.",
            "fol": "p_4(Dorian)",
            "str_fol": "seek_adventure(Dorian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Dorian",
            "text": "Dorian takes risks.",
            "fol": "p_3(Dorian)",
            "str_fol": "take_risks(Dorian)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dorian",
            "text": "Dorian does not find inspiration.",
            "fol": "\u00acp_1(Dorian)",
            "str_fol": "\u00acfind_inspiration(Dorian)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Dorian",
            "text": "Dorian pursues his passion.",
            "fol": "p_2(Dorian)",
            "str_fol": "pursue_passion(Dorian)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Dorian",
            "text": "Dorian wears corduroy.",
            "fol": "p_0(Dorian)",
            "str_fol": "wear_corduroy(Dorian)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Dorian seeks adventure, then he will travel often.",
            "fol": "p_4(Dorian) \u2192 p_12(Dorian)",
            "str_fol": "seek_adventure(Dorian) \u2192 travel_often(Dorian)"
        },
        {
            "id": 6,
            "text": "If Dorian travels often, then he either lives spontaneously or takes risks, but not both.",
            "fol": "p_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))",
            "str_fol": "travel_often(Dorian) \u2192 (live_spontaneously(Dorian) \u2295 take_risks(Dorian))"
        },
        {
            "id": 5,
            "text": "Anyone who thinks freely or lives spontaneously can find inspiration.",
            "fol": "\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((think_freely(x) \u2228 live_spontaneously(x)) \u2192 find_inspiration(x))"
        },
        {
            "id": 4,
            "text": "For any person, either they pursue their passion or express emotion, but not necessarily both.",
            "fol": "\u2200x (p_2(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (pursue_passion(x) \u2295 express_emotion(x))"
        },
        {
            "id": 3,
            "text": "Anyone who is creative either thinks freely or expresses emotion.",
            "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (is_creative(x) \u2192 (think_freely(x) \u2228 express_emotion(x)))"
        },
        {
            "id": 2,
            "text": "If someone plays music, then they are creative.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (play_music(x) \u2192 is_creative(x))"
        },
        {
            "id": 1,
            "text": "Dorian appreciates arts or plays music.",
            "fol": "p_5(Dorian) \u2228 p_7(Dorian)",
            "str_fol": "appreciate_arts(Dorian) \u2228 play_music(Dorian)"
        },
        {
            "id": 0,
            "text": "If Dorian wears corduroy or appreciates the arts, then he values nonconformity.",
            "fol": "(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 p_6(Dorian)",
            "str_fol": "(wear_corduroy(Dorian) \u2228 appreciate_arts(Dorian)) \u2192 value_nonconformity(Dorian)"
        }
    ],
    "context_fol": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2228 p_7(Dorian)\n(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 p_6(Dorian)",
    "conclusion": {
        "id": 12,
        "subject": "Dorian",
        "text": "Dorian values nonconformity.",
        "fol": "p_6(Dorian)",
        "str_fol": "value_nonconformity(Dorian)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_6(Dorian)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Dorian",
                    "text": "Dorian seeks adventure.",
                    "fol": "p_4(Dorian)",
                    "str_fol": "seek_adventure(Dorian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Dorian seeks adventure, then he will travel often.",
                    "fol": "p_4(Dorian) \u2192 p_12(Dorian)",
                    "str_fol": "seek_adventure(Dorian) \u2192 travel_often(Dorian)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Dorian",
                "text": "Dorian travels often.",
                "fol": "p_12(Dorian)",
                "str_fol": "travel_often(Dorian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Dorian",
                    "text": "Dorian travels often.",
                    "fol": "p_12(Dorian)",
                    "str_fol": "travel_often(Dorian)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Dorian",
                    "text": "Dorian takes risks.",
                    "fol": "p_3(Dorian)",
                    "str_fol": "take_risks(Dorian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Dorian travels often, then he either lives spontaneously or takes risks, but not both.",
                    "fol": "p_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))",
                    "str_fol": "travel_often(Dorian) \u2192 (live_spontaneously(Dorian) \u2295 take_risks(Dorian))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Dorian",
                "text": "Dorian does not live spontaneously.",
                "fol": "\u00acp_11(Dorian)",
                "str_fol": "\u00aclive_spontaneously(Dorian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Dorian",
                    "text": "Dorian does not live spontaneously.",
                    "fol": "\u00acp_11(Dorian)",
                    "str_fol": "\u00aclive_spontaneously(Dorian)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Dorian",
                    "text": "Dorian does not find inspiration.",
                    "fol": "\u00acp_1(Dorian)",
                    "str_fol": "\u00acfind_inspiration(Dorian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who thinks freely or lives spontaneously can find inspiration.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((think_freely(x) \u2228 live_spontaneously(x)) \u2192 find_inspiration(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Dorian",
                "text": "Dorian does not think freely.",
                "fol": "\u00acp_9(Dorian)",
                "str_fol": "\u00acthink_freely(Dorian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Dorian",
                    "text": "Dorian pursues his passion.",
                    "fol": "p_2(Dorian)",
                    "str_fol": "pursue_passion(Dorian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For any person, either they pursue their passion or express emotion, but not necessarily both.",
                    "fol": "\u2200x (p_2(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (pursue_passion(x) \u2295 express_emotion(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Dorian",
                "text": "Dorian does not express emotion.",
                "fol": "\u00acp_10(Dorian)",
                "str_fol": "\u00acexpress_emotion(Dorian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Dorian",
                    "text": "Dorian does not think freely.",
                    "fol": "\u00acp_9(Dorian)",
                    "str_fol": "\u00acthink_freely(Dorian)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Dorian",
                    "text": "Dorian does not express emotion.",
                    "fol": "\u00acp_10(Dorian)",
                    "str_fol": "\u00acexpress_emotion(Dorian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who is creative either thinks freely or expresses emotion.",
                    "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (is_creative(x) \u2192 (think_freely(x) \u2228 express_emotion(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Dorian",
                "text": "Dorian is not creative.",
                "fol": "\u00acp_8(Dorian)",
                "str_fol": "\u00acis_creative(Dorian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Dorian",
                    "text": "Dorian is not creative.",
                    "fol": "\u00acp_8(Dorian)",
                    "str_fol": "\u00acis_creative(Dorian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone plays music, then they are creative.",
                    "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
                    "str_fol": "\u2200x (play_music(x) \u2192 is_creative(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Dorian",
                "text": "Dorian does not play music.",
                "fol": "\u00acp_7(Dorian)",
                "str_fol": "\u00acplay_music(Dorian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Dorian",
                    "text": "Dorian does not play music.",
                    "fol": "\u00acp_7(Dorian)",
                    "str_fol": "\u00acplay_music(Dorian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Dorian appreciates arts or plays music.",
                    "fol": "p_5(Dorian) \u2228 p_7(Dorian)",
                    "str_fol": "appreciate_arts(Dorian) \u2228 play_music(Dorian)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Dorian",
                "text": "Dorian appreciates the arts.",
                "fol": "p_5(Dorian)",
                "str_fol": "appreciate_arts(Dorian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Dorian",
                    "text": "Dorian wears corduroy.",
                    "fol": "p_0(Dorian)",
                    "str_fol": "wear_corduroy(Dorian)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Dorian",
                    "text": "Dorian appreciates the arts.",
                    "fol": "p_5(Dorian)",
                    "str_fol": "appreciate_arts(Dorian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Dorian wears corduroy or appreciates the arts, then he values nonconformity.",
                    "fol": "(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 p_6(Dorian)",
                    "str_fol": "(wear_corduroy(Dorian) \u2228 appreciate_arts(Dorian)) \u2192 value_nonconformity(Dorian)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Dorian",
                "text": "Dorian values nonconformity.",
                "fol": "p_6(Dorian)",
                "str_fol": "value_nonconformity(Dorian)",
                "negation": false
            }
        }
    ],
    "proof_trace": "7 p_0(Dorian) | p_5(Dorian) -> p_6(Dorian).  [assumption].\n8 p_6(Dorian).  [goal].\n20 -p_0(Dorian) | p_6(Dorian).  [clausify(7)].\n21 p_0(Dorian).  [assumption].\n26 p_6(Dorian).  [resolve(20,a,21,a)].\n27 -p_6(Dorian).  [deny(8)].\n32 $F.  [resolve(26,a,27,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2228 p_7(Dorian)\n(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 \u00acp_6(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian)",
                    "p_3(Dorian)",
                    "-p_1(Dorian)",
                    "p_2(Dorian)",
                    "p_0(Dorian)",
                    "p_4(Dorian) -> p_12(Dorian)",
                    "(p_12(Dorian) -> (p_11(Dorian) | p_3(Dorian))) & (p_12(Dorian) -> (-p_11(Dorian) | -p_3(Dorian)))",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x))",
                    "all x ((p_2(x) | p_10(x)) & (-p_2(x) | -p_10(x)))",
                    "all x (p_8(x) -> (p_9(x) | p_10(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Dorian) | p_7(Dorian)",
                    "(p_0(Dorian) | p_5(Dorian)) -> -p_6(Dorian)"
                ],
                "formulas(goals)": [
                    "-p_6(Dorian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 p_6(Dorian)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 \u00acp_6(Dorian)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2228 p_7(Dorian)\np_5(Dorian) \u2192 p_6(Dorian)\np_7(Dorian) \u2192 p_6(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian)",
                    "p_3(Dorian)",
                    "-p_1(Dorian)",
                    "p_2(Dorian)",
                    "p_0(Dorian)",
                    "p_4(Dorian) -> p_12(Dorian)",
                    "p_12(Dorian) -> (-(p_11(Dorian) <-> p_3(Dorian)))",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x))",
                    "all x (-(p_2(x) <-> p_10(x)))",
                    "all x (p_8(x) -> (p_9(x) | p_10(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Dorian) | p_7(Dorian)",
                    "p_5(Dorian) -> p_6(Dorian)",
                    "p_7(Dorian) -> p_6(Dorian)"
                ],
                "formulas(goals)": [
                    "p_6(Dorian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Dorian) \u2228 p_5(Dorian)) \u2192 \u00acp_6(Dorian)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Dorian) \u2192 p_6(Dorian)",
                    "p_7(Dorian) \u2192 p_6(Dorian)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2192 p_6(Dorian)\np_7(Dorian) \u2192 p_6(Dorian)\np_4(Dorian) \u2192 \u00acp_6(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian).",
                    "p_3(Dorian).",
                    "-p_1(Dorian).",
                    "p_2(Dorian).",
                    "p_0(Dorian).",
                    "p_4(Dorian) -> p_12(Dorian).",
                    "p_12(Dorian) -> (-(p_11(Dorian) <-> p_3(Dorian))).",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x)).",
                    "all x (-(p_2(x) <-> p_10(x))).",
                    "all x (p_8(x) -> (p_9(x) | p_10(x))).",
                    "all x (p_7(x) -> p_8(x)).",
                    "p_5(Dorian) -> p_6(Dorian).",
                    "p_7(Dorian) -> p_6(Dorian).",
                    "p_4(Dorian) -> -p_6(Dorian)."
                ],
                "formulas(goals)": [
                    "-p_6(Dorian)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Dorian) \u2228 p_7(Dorian)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Dorian) \u2192 \u00acp_6(Dorian)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2192 p_6(Dorian)\np_7(Dorian) \u2192 p_6(Dorian)\np_5(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian)",
                    "p_3(Dorian)",
                    "-p_1(Dorian)",
                    "p_2(Dorian)",
                    "p_0(Dorian)",
                    "p_4(Dorian) -> p_12(Dorian)",
                    "p_12(Dorian) -> (-(p_11(Dorian) <-> p_3(Dorian)))",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x))",
                    "all x (-(p_2(x) <-> p_10(x)))",
                    "all x (p_8(x) -> (p_9(x) | p_10(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Dorian) -> p_6(Dorian)",
                    "p_7(Dorian) -> p_6(Dorian)",
                    "p_5(Dorian)"
                ],
                "formulas(goals)": [
                    "p_6(Dorian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Dorian) \u2192 \u00acp_6(Dorian)"
                ],
                "added_facts": [
                    "p_5(Dorian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2192 p_6(Dorian)\np_7(Dorian) \u2192 p_6(Dorian)\n\u00acp_7(Dorian)\n\u00acp_5(Dorian)\n(\u00acp_5(Dorian) \u2227 \u00acp_7(Dorian)) \u2192 \u00acp_6(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian)",
                    "p_3(Dorian)",
                    "-p_1(Dorian)",
                    "p_2(Dorian)",
                    "p_0(Dorian)",
                    "p_4(Dorian) -> p_12(Dorian)",
                    "p_12(Dorian) -> (-(p_11(Dorian) <-> p_3(Dorian)))",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x))",
                    "all x (-(p_2(x) <-> p_10(x)))",
                    "all x (p_8(x) -> (p_9(x) | p_10(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Dorian) -> p_6(Dorian)",
                    "p_7(Dorian) -> p_6(Dorian)",
                    "-p_7(Dorian)",
                    "-p_5(Dorian)",
                    "(-p_5(Dorian) & -p_7(Dorian)) -> -p_6(Dorian)"
                ],
                "formulas(goals)": [
                    "-p_6(Dorian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Dorian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Dorian)",
                    "\u00acp_5(Dorian)"
                ],
                "added_rules": [
                    "(\u00acp_5(Dorian) \u2227 \u00acp_7(Dorian)) \u2192 \u00acp_6(Dorian)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2192 p_6(Dorian)\np_7(Dorian) \u2192 p_6(Dorian)\n\u00acp_7(Dorian)\n\u00acp_5(Dorian)\n(\u00acp_5(Dorian) \u2227 \u00acp_7(Dorian)) \u2192 \u00acp_6(Dorian)\np_12(Dorian) \u2192 \u00acp_11(Dorian)\np_0(Dorian) \u2228 \u00acp_0(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian)",
                    "p_3(Dorian)",
                    "-p_1(Dorian)",
                    "p_2(Dorian)",
                    "p_0(Dorian)",
                    "p_4(Dorian) -> p_12(Dorian)",
                    "p_12(Dorian) -> (-(p_11(Dorian) <-> p_3(Dorian)))",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x))",
                    "all x (-(p_2(x) <-> p_10(x)))",
                    "all x (p_8(x) -> (p_9(x) | p_10(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Dorian) -> p_6(Dorian)",
                    "p_7(Dorian) -> p_6(Dorian)",
                    "-p_7(Dorian)",
                    "-p_5(Dorian)",
                    "(-p_5(Dorian) & -p_7(Dorian)) -> -p_6(Dorian)",
                    "p_12(Dorian) -> -p_11(Dorian)",
                    "p_0(Dorian) | -p_0(Dorian)"
                ],
                "formulas(goals)": [
                    "-p_6(Dorian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_0(Dorian) \u2228 \u00acp_0(Dorian)"
                ],
                "added_rules": [
                    "p_12(Dorian) \u2192 \u00acp_11(Dorian)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Dorian)\np_3(Dorian)\n\u00acp_1(Dorian)\np_2(Dorian)\np_0(Dorian)\np_4(Dorian) \u2192 p_12(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2295 p_3(Dorian))\n\u2200x ((p_9(x) \u2228 p_11(x)) \u2192 p_1(x))\n\u2200x (p_2(x) \u2295 p_10(x))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_10(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Dorian) \u2192 p_6(Dorian)\np_7(Dorian) \u2192 p_6(Dorian)\n\u00acp_7(Dorian)\n\u00acp_5(Dorian)\n(\u00acp_5(Dorian) \u2227 \u00acp_7(Dorian)) \u2192 \u00acp_6(Dorian)\np_12(Dorian) \u2192 \u00acp_11(Dorian)\np_0(Dorian) \u2228 \u00acp_0(Dorian)\np_6(Dorian) \u2228 \u00acp_6(Dorian)\np_12(Dorian) \u2192 (p_11(Dorian) \u2228 p_3(Dorian))\np_12(Dorian) \u2192 \u00ac(p_11(Dorian) \u2227 p_3(Dorian))\n\u00acp_11(Dorian)\n\u00acp_5(Dorian) \u2192 (\u00acp_7(Dorian) \u2192 \u00acp_6(Dorian))\np_11(Dorian) \u2192 p_1(Dorian)",
            "Initial Goal": "p_6(Dorian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Dorian)",
                    "p_3(Dorian)",
                    "-p_1(Dorian)",
                    "p_2(Dorian)",
                    "p_0(Dorian)",
                    "p_4(Dorian) -> p_12(Dorian)",
                    "p_12(Dorian) -> (-(p_11(Dorian) <-> p_3(Dorian)))",
                    "all x ((p_9(x) | p_11(x)) -> p_1(x))",
                    "all x (-(p_2(x) <-> p_10(x)))",
                    "all x (p_8(x) -> (p_9(x) | p_10(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Dorian) -> p_6(Dorian)",
                    "p_7(Dorian) -> p_6(Dorian)",
                    "-p_7(Dorian)",
                    "-p_5(Dorian)",
                    "(-p_5(Dorian) & -p_7(Dorian)) -> -p_6(Dorian)",
                    "p_12(Dorian) -> -p_11(Dorian)",
                    "p_0(Dorian) | -p_0(Dorian)",
                    "p_6(Dorian) | -p_6(Dorian)",
                    "p_12(Dorian) -> (p_11(Dorian) | p_3(Dorian))",
                    "p_12(Dorian) -> -(p_11(Dorian) & p_3(Dorian))",
                    "-p_11(Dorian)",
                    "-p_5(Dorian) -> (-p_7(Dorian) -> -p_6(Dorian))",
                    "p_11(Dorian) -> p_1(Dorian)"
                ],
                "formulas(goals)": [
                    "-p_6(Dorian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Dorian)",
                    "p_6(Dorian) \u2228 \u00acp_6(Dorian)"
                ],
                "added_rules": [
                    "p_12(Dorian) \u2192 (p_11(Dorian) \u2228 p_3(Dorian))",
                    "p_12(Dorian) \u2192 \u00ac(p_11(Dorian) \u2227 p_3(Dorian))",
                    "\u00acp_5(Dorian) \u2192 (\u00acp_7(Dorian) \u2192 \u00acp_6(Dorian))",
                    "p_11(Dorian) \u2192 p_1(Dorian)"
                ]
            }
        }
    ]
}