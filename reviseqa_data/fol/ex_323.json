{
    "background_story": "Emiliano was a brilliant but slightly eccentric historian. He had spent his entire career studying the ancient civilizations of South America. However, his latest publication, which claimed to have discovered a lost city deep in the jungle, was met with widespread criticism. Despite his confidence, Emiliano's theory was proven incorrect by a team of archaeologists who found discrepancies in his research. The media had a field day, and Emiliano's reputation was tarnished. Though initially defensive, Emiliano eventually acknowledged his mistake, using it as an opportunity to learn and grow. He collaborated with the archaeologists to re-examine the evidence, and together they uncovered a new, more significant discovery. Emiliano's experience taught him the importance of humility and the value of correcting one's mistakes in the pursuit of knowledge.",
    "predicates": [
        {
            "id": 0,
            "name": "face_failure"
        },
        {
            "id": 1,
            "name": "defend_work"
        },
        {
            "id": 2,
            "name": "improve_methods"
        },
        {
            "id": 3,
            "name": "build_reputation"
        },
        {
            "id": 4,
            "name": "shares_findings"
        },
        {
            "id": 5,
            "name": "respects_evidence"
        },
        {
            "id": 6,
            "name": "admit_mistakes"
        },
        {
            "id": 7,
            "name": "learn_from_criticism"
        },
        {
            "id": 8,
            "name": "grow_as_a_researcher"
        },
        {
            "id": 9,
            "name": "seek_feedback"
        },
        {
            "id": 10,
            "name": "gain_recognition"
        },
        {
            "id": 11,
            "name": "pursue_knowledge"
        },
        {
            "id": 12,
            "name": "seek_fame"
        },
        {
            "id": 13,
            "name": "value_truth"
        },
        {
            "id": 14,
            "name": "is_honest"
        },
        {
            "id": 15,
            "name": "receive_criticism"
        },
        {
            "id": 16,
            "name": "revise_theory"
        },
        {
            "id": 17,
            "name": "is_humble"
        },
        {
            "id": 18,
            "name": "open_minded"
        },
        {
            "id": 19,
            "name": "embraces_challenges"
        },
        {
            "id": 20,
            "name": "makes_breakthrough"
        },
        {
            "id": 21,
            "name": "reads_books"
        },
        {
            "id": 22,
            "name": "write_best_seller"
        },
        {
            "id": 23,
            "name": "give_public_lectures"
        },
        {
            "id": 24,
            "name": "reads_widely"
        },
        {
            "id": 25,
            "name": "thinks_critically"
        },
        {
            "id": 26,
            "name": "credits_others"
        },
        {
            "id": 27,
            "name": "discloses_sources"
        }
    ],
    "subject_name": "Emiliano",
    "subject_category": "human",
    "keyword": "incorrect",
    "all_facts": [
        {
            "id": 0,
            "subject": "Emiliano",
            "text": "Emiliano faces failure.",
            "fol": "p_0(Emiliano)",
            "str_fol": "face_failure(Emiliano)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Emiliano",
            "text": "Emiliano defends his work.",
            "fol": "p_1(Emiliano)",
            "str_fol": "defend_work(Emiliano)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Emiliano",
            "text": "Emiliano improves his research methods.",
            "fol": "p_2(Emiliano)",
            "str_fol": "improve_methods(Emiliano)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Emiliano",
            "text": "Emiliano does not build his reputation.",
            "fol": "\u00acp_3(Emiliano)",
            "str_fol": "\u00acbuild_reputation(Emiliano)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Emiliano",
            "text": "Emiliano does not share his findings.",
            "fol": "\u00acp_4(Emiliano)",
            "str_fol": "\u00acshares_findings(Emiliano)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emiliano",
            "text": "Emiliano does not respect evidence.",
            "fol": "\u00acp_5(Emiliano)",
            "str_fol": "\u00acrespects_evidence(Emiliano)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emiliano",
            "text": "Emiliano is not honest.",
            "fol": "\u00acp_14(Emiliano)",
            "str_fol": "\u00acis_honest(Emiliano)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Emiliano",
            "text": "Emiliano does not value the truth.",
            "fol": "\u00acp_13(Emiliano)",
            "str_fol": "\u00acvalue_truth(Emiliano)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Emiliano",
            "text": "Emiliano does not seek fame.",
            "fol": "\u00acp_12(Emiliano)",
            "str_fol": "\u00acseek_fame(Emiliano)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Emiliano",
            "text": "Emiliano pursues knowledge.",
            "fol": "p_11(Emiliano)",
            "str_fol": "pursue_knowledge(Emiliano)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Emiliano",
            "text": "Emiliano does not gain recognition in his field.",
            "fol": "\u00acp_10(Emiliano)",
            "str_fol": "\u00acgain_recognition(Emiliano)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Emiliano",
            "text": "Emiliano does not seek feedback.",
            "fol": "\u00acp_9(Emiliano)",
            "str_fol": "\u00acseek_feedback(Emiliano)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Emiliano",
            "text": "Emiliano admits his mistakes.",
            "fol": "p_6(Emiliano)",
            "str_fol": "admit_mistakes(Emiliano)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Emiliano",
            "text": "Emiliano grows as a researcher.",
            "fol": "p_8(Emiliano)",
            "str_fol": "grow_as_a_researcher(Emiliano)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Emiliano",
            "text": "Emiliano does not share his findings.",
            "fol": "\u00acp_4(Emiliano)",
            "str_fol": "\u00acshares_findings(Emiliano)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emiliano",
            "text": "Emiliano does not respect evidence.",
            "fol": "\u00acp_5(Emiliano)",
            "str_fol": "\u00acrespects_evidence(Emiliano)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emiliano",
            "text": "Emiliano does not build his reputation.",
            "fol": "\u00acp_3(Emiliano)",
            "str_fol": "\u00acbuild_reputation(Emiliano)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emiliano",
            "text": "Emiliano defends his work.",
            "fol": "p_1(Emiliano)",
            "str_fol": "defend_work(Emiliano)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Emiliano",
            "text": "Emiliano improves his research methods.",
            "fol": "p_2(Emiliano)",
            "str_fol": "improve_methods(Emiliano)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Emiliano",
            "text": "Emiliano faces failure.",
            "fol": "p_0(Emiliano)",
            "str_fol": "face_failure(Emiliano)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Emiliano is either honest or shares his findings (but not both), then he respects evidence.",
            "fol": "(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)",
            "str_fol": "(is_honest(Emiliano) \u2295 shares_findings(Emiliano)) \u2192 respects_evidence(Emiliano)"
        },
        {
            "id": 7,
            "text": "Anyone who values the truth is honest.",
            "fol": "\u2200x (p_13(x) \u2192 p_14(x))",
            "str_fol": "\u2200x (value_truth(x) \u2192 is_honest(x))"
        },
        {
            "id": 6,
            "text": "If Emiliano seeks fame, then he either values the truth or builds his reputation.",
            "fol": "p_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))",
            "str_fol": "seek_fame(Emiliano) \u2192 (value_truth(Emiliano) \u2228 build_reputation(Emiliano))"
        },
        {
            "id": 5,
            "text": "Emiliano either seeks fame or pursues knowledge, but not both at the same time.",
            "fol": "p_12(Emiliano) \u2295 p_11(Emiliano)",
            "str_fol": "seek_fame(Emiliano) \u2295 pursue_knowledge(Emiliano)"
        },
        {
            "id": 4,
            "text": "Emiliano either pursues knowledge or gains recognition, but not both at the same time.",
            "fol": "p_11(Emiliano) \u2295 p_10(Emiliano)",
            "str_fol": "pursue_knowledge(Emiliano) \u2295 gain_recognition(Emiliano)"
        },
        {
            "id": 3,
            "text": "Emiliano either seeks feedback or defends his work, but not both.",
            "fol": "p_9(Emiliano) \u2295 p_1(Emiliano)",
            "str_fol": "seek_feedback(Emiliano) \u2295 defend_work(Emiliano)"
        },
        {
            "id": 2,
            "text": "Anyone who learns from criticism either improves their methods or gains recognition.",
            "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (learn_from_criticism(x) \u2192 (improve_methods(x) \u2228 gain_recognition(x)))"
        },
        {
            "id": 1,
            "text": "If Emiliano faces failure, then he either admits mistakes or seeks feedback, but not both.",
            "fol": "p_0(Emiliano) \u2192 (p_6(Emiliano) \u2295 p_9(Emiliano))",
            "str_fol": "face_failure(Emiliano) \u2192 (admit_mistakes(Emiliano) \u2295 seek_feedback(Emiliano))"
        },
        {
            "id": 0,
            "text": "If Emiliano admits mistakes or learns from criticism, then he grows as a researcher.",
            "fol": "(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)",
            "str_fol": "(admit_mistakes(Emiliano) \u2228 learn_from_criticism(Emiliano)) \u2192 grow_as_a_researcher(Emiliano)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Emiliano",
            "text": "Emiliano does not share his findings.",
            "fol": "\u00acp_4(Emiliano)",
            "str_fol": "\u00acshares_findings(Emiliano)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emiliano",
            "text": "Emiliano does not respect evidence.",
            "fol": "\u00acp_5(Emiliano)",
            "str_fol": "\u00acrespects_evidence(Emiliano)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emiliano",
            "text": "Emiliano does not build his reputation.",
            "fol": "\u00acp_3(Emiliano)",
            "str_fol": "\u00acbuild_reputation(Emiliano)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emiliano",
            "text": "Emiliano defends his work.",
            "fol": "p_1(Emiliano)",
            "str_fol": "defend_work(Emiliano)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Emiliano",
            "text": "Emiliano improves his research methods.",
            "fol": "p_2(Emiliano)",
            "str_fol": "improve_methods(Emiliano)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Emiliano",
            "text": "Emiliano faces failure.",
            "fol": "p_0(Emiliano)",
            "str_fol": "face_failure(Emiliano)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Emiliano is either honest or shares his findings (but not both), then he respects evidence.",
            "fol": "(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)",
            "str_fol": "(is_honest(Emiliano) \u2295 shares_findings(Emiliano)) \u2192 respects_evidence(Emiliano)"
        },
        {
            "id": 7,
            "text": "Anyone who values the truth is honest.",
            "fol": "\u2200x (p_13(x) \u2192 p_14(x))",
            "str_fol": "\u2200x (value_truth(x) \u2192 is_honest(x))"
        },
        {
            "id": 6,
            "text": "If Emiliano seeks fame, then he either values the truth or builds his reputation.",
            "fol": "p_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))",
            "str_fol": "seek_fame(Emiliano) \u2192 (value_truth(Emiliano) \u2228 build_reputation(Emiliano))"
        },
        {
            "id": 5,
            "text": "Emiliano either seeks fame or pursues knowledge, but not both at the same time.",
            "fol": "p_12(Emiliano) \u2295 p_11(Emiliano)",
            "str_fol": "seek_fame(Emiliano) \u2295 pursue_knowledge(Emiliano)"
        },
        {
            "id": 4,
            "text": "Emiliano either pursues knowledge or gains recognition, but not both at the same time.",
            "fol": "p_11(Emiliano) \u2295 p_10(Emiliano)",
            "str_fol": "pursue_knowledge(Emiliano) \u2295 gain_recognition(Emiliano)"
        },
        {
            "id": 3,
            "text": "Emiliano either seeks feedback or defends his work, but not both.",
            "fol": "p_9(Emiliano) \u2295 p_1(Emiliano)",
            "str_fol": "seek_feedback(Emiliano) \u2295 defend_work(Emiliano)"
        },
        {
            "id": 2,
            "text": "Anyone who learns from criticism either improves their methods or gains recognition.",
            "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (learn_from_criticism(x) \u2192 (improve_methods(x) \u2228 gain_recognition(x)))"
        },
        {
            "id": 1,
            "text": "If Emiliano faces failure, then he either admits mistakes or seeks feedback, but not both.",
            "fol": "p_0(Emiliano) \u2192 (p_6(Emiliano) \u2295 p_9(Emiliano))",
            "str_fol": "face_failure(Emiliano) \u2192 (admit_mistakes(Emiliano) \u2295 seek_feedback(Emiliano))"
        },
        {
            "id": 0,
            "text": "If Emiliano admits mistakes or learns from criticism, then he grows as a researcher.",
            "fol": "(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)",
            "str_fol": "(admit_mistakes(Emiliano) \u2228 learn_from_criticism(Emiliano)) \u2192 grow_as_a_researcher(Emiliano)"
        }
    ],
    "context_fol": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\np_1(Emiliano)\np_2(Emiliano)\np_0(Emiliano)\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)\n\u2200x (p_13(x) \u2192 p_14(x))\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))\np_12(Emiliano) \u2295 p_11(Emiliano)\np_11(Emiliano) \u2295 p_10(Emiliano)\np_9(Emiliano) \u2295 p_1(Emiliano)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))\np_0(Emiliano) \u2192 (p_6(Emiliano) \u2295 p_9(Emiliano))\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)",
    "conclusion": {
        "id": 13,
        "subject": "Emiliano",
        "text": "Emiliano grows as a researcher.",
        "fol": "p_8(Emiliano)",
        "str_fol": "grow_as_a_researcher(Emiliano)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_8(Emiliano)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Emiliano",
                    "text": "Emiliano does not share his findings.",
                    "fol": "\u00acp_4(Emiliano)",
                    "str_fol": "\u00acshares_findings(Emiliano)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Emiliano",
                    "text": "Emiliano does not respect evidence.",
                    "fol": "\u00acp_5(Emiliano)",
                    "str_fol": "\u00acrespects_evidence(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Emiliano is either honest or shares his findings (but not both), then he respects evidence.",
                    "fol": "(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)",
                    "str_fol": "(is_honest(Emiliano) \u2295 shares_findings(Emiliano)) \u2192 respects_evidence(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Emiliano",
                "text": "Emiliano is not honest.",
                "fol": "\u00acp_14(Emiliano)",
                "str_fol": "\u00acis_honest(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Emiliano",
                    "text": "Emiliano is not honest.",
                    "fol": "\u00acp_14(Emiliano)",
                    "str_fol": "\u00acis_honest(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who values the truth is honest.",
                    "fol": "\u2200x (p_13(x) \u2192 p_14(x))",
                    "str_fol": "\u2200x (value_truth(x) \u2192 is_honest(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Emiliano",
                "text": "Emiliano does not value the truth.",
                "fol": "\u00acp_13(Emiliano)",
                "str_fol": "\u00acvalue_truth(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Emiliano",
                    "text": "Emiliano does not value the truth.",
                    "fol": "\u00acp_13(Emiliano)",
                    "str_fol": "\u00acvalue_truth(Emiliano)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Emiliano",
                    "text": "Emiliano does not build his reputation.",
                    "fol": "\u00acp_3(Emiliano)",
                    "str_fol": "\u00acbuild_reputation(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Emiliano seeks fame, then he either values the truth or builds his reputation.",
                    "fol": "p_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))",
                    "str_fol": "seek_fame(Emiliano) \u2192 (value_truth(Emiliano) \u2228 build_reputation(Emiliano))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Emiliano",
                "text": "Emiliano does not seek fame.",
                "fol": "\u00acp_12(Emiliano)",
                "str_fol": "\u00acseek_fame(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Emiliano",
                    "text": "Emiliano does not seek fame.",
                    "fol": "\u00acp_12(Emiliano)",
                    "str_fol": "\u00acseek_fame(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Emiliano either seeks fame or pursues knowledge, but not both at the same time.",
                    "fol": "p_12(Emiliano) \u2295 p_11(Emiliano)",
                    "str_fol": "seek_fame(Emiliano) \u2295 pursue_knowledge(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Emiliano",
                "text": "Emiliano pursues knowledge.",
                "fol": "p_11(Emiliano)",
                "str_fol": "pursue_knowledge(Emiliano)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Emiliano",
                    "text": "Emiliano pursues knowledge.",
                    "fol": "p_11(Emiliano)",
                    "str_fol": "pursue_knowledge(Emiliano)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Emiliano either pursues knowledge or gains recognition, but not both at the same time.",
                    "fol": "p_11(Emiliano) \u2295 p_10(Emiliano)",
                    "str_fol": "pursue_knowledge(Emiliano) \u2295 gain_recognition(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Emiliano",
                "text": "Emiliano does not gain recognition in his field.",
                "fol": "\u00acp_10(Emiliano)",
                "str_fol": "\u00acgain_recognition(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Emiliano",
                    "text": "Emiliano defends his work.",
                    "fol": "p_1(Emiliano)",
                    "str_fol": "defend_work(Emiliano)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Emiliano either seeks feedback or defends his work, but not both.",
                    "fol": "p_9(Emiliano) \u2295 p_1(Emiliano)",
                    "str_fol": "seek_feedback(Emiliano) \u2295 defend_work(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Emiliano",
                "text": "Emiliano does not seek feedback.",
                "fol": "\u00acp_9(Emiliano)",
                "str_fol": "\u00acseek_feedback(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Emiliano",
                    "text": "Emiliano improves his research methods.",
                    "fol": "p_2(Emiliano)",
                    "str_fol": "improve_methods(Emiliano)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Emiliano",
                    "text": "Emiliano does not gain recognition in his field.",
                    "fol": "\u00acp_10(Emiliano)",
                    "str_fol": "\u00acgain_recognition(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who learns from criticism either improves their methods or gains recognition.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (learn_from_criticism(x) \u2192 (improve_methods(x) \u2228 gain_recognition(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Emiliano",
                    "text": "Emiliano faces failure.",
                    "fol": "p_0(Emiliano)",
                    "str_fol": "face_failure(Emiliano)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Emiliano",
                    "text": "Emiliano does not seek feedback.",
                    "fol": "\u00acp_9(Emiliano)",
                    "str_fol": "\u00acseek_feedback(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Emiliano faces failure, then he either admits mistakes or seeks feedback, but not both.",
                    "fol": "p_0(Emiliano) \u2192 (p_6(Emiliano) \u2295 p_9(Emiliano))",
                    "str_fol": "face_failure(Emiliano) \u2192 (admit_mistakes(Emiliano) \u2295 seek_feedback(Emiliano))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Emiliano",
                "text": "Emiliano admits his mistakes.",
                "fol": "p_6(Emiliano)",
                "str_fol": "admit_mistakes(Emiliano)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Emiliano",
                    "text": "Emiliano admits his mistakes.",
                    "fol": "p_6(Emiliano)",
                    "str_fol": "admit_mistakes(Emiliano)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Emiliano admits mistakes or learns from criticism, then he grows as a researcher.",
                    "fol": "(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)",
                    "str_fol": "(admit_mistakes(Emiliano) \u2228 learn_from_criticism(Emiliano)) \u2192 grow_as_a_researcher(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Emiliano",
                "text": "Emiliano grows as a researcher.",
                "fol": "p_8(Emiliano)",
                "str_fol": "grow_as_a_researcher(Emiliano)",
                "negation": false
            }
        }
    ],
    "proof_trace": "6 -(p_9(Emiliano) <-> p_1(Emiliano)).  [assumption].\n8 p_0(Emiliano) -> -(p_6(Emiliano) <-> p_9(Emiliano)).  [assumption].\n9 p_6(Emiliano) | p_7(Emiliano) -> p_8(Emiliano).  [assumption].\n10 p_8(Emiliano).  [goal].\n18 -p_9(Emiliano) | -p_1(Emiliano).  [clausify(6)].\n19 p_1(Emiliano).  [assumption].\n21 -p_0(Emiliano) | p_6(Emiliano) | p_9(Emiliano).  [clausify(8)].\n22 p_0(Emiliano).  [assumption].\n32 p_6(Emiliano) | p_9(Emiliano).  [resolve(21,a,22,a)].\n33 -p_6(Emiliano) | p_8(Emiliano).  [clausify(9)].\n34 p_9(Emiliano) | p_8(Emiliano).  [resolve(32,a,33,a)].\n35 -p_8(Emiliano).  [deny(10)].\n38 p_9(Emiliano).  [resolve(34,b,35,a)].\n39 -p_9(Emiliano).  [resolve(18,b,19,a)].\n40 $F.  [resolve(38,a,39,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano).\n\u00acp_5(Emiliano).\n\u00acp_3(Emiliano).\np_1(Emiliano).\np_2(Emiliano).\np_0(Emiliano).\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano).\n\u2200x (p_13(x) \u2192 p_14(x)).\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano)).\np_12(Emiliano) \u2295 p_11(Emiliano).\np_11(Emiliano) \u2295 p_10(Emiliano).\np_9(Emiliano) \u2295 p_1(Emiliano).\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x))).\np_0(Emiliano) \u2192 (p_6(Emiliano) \u2295 p_9(Emiliano)).\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano).\np_2(Emiliano) \u2192 \u00acp_1(Emiliano).\np_2(Emiliano) \u2192 \u00acp_7(Emiliano).",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_4(Emiliano).",
                    "- p_5(Emiliano).",
                    "- p_3(Emiliano).",
                    "p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "p_0(Emiliano).",
                    "(-(p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano).",
                    "all x (p_13(x) -> p_14(x)).",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano)).",
                    "-(p_12(Emiliano) <-> p_11(Emiliano)).",
                    "-(p_11(Emiliano) <-> p_10(Emiliano)).",
                    "-(p_9(Emiliano) <-> p_1(Emiliano)).",
                    "all x (p_7(x) -> (p_2(x) | p_10(x))).",
                    "p_0(Emiliano) -> (-(p_6(Emiliano) <-> p_9(Emiliano))).",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano).",
                    "p_2(Emiliano) -> -p_1(Emiliano).",
                    "p_2(Emiliano) -> -p_7(Emiliano)."
                ],
                "formulas(goals)": [
                    "- p_8(Emiliano)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_2(Emiliano) \u2192 \u00acp_1(Emiliano)",
                    "p_2(Emiliano) \u2192 \u00acp_7(Emiliano)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\np_1(Emiliano)\np_2(Emiliano)\np_0(Emiliano)\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)\n\u2200x (p_13(x) \u2192 p_14(x))\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))\np_12(Emiliano) \u2295 p_11(Emiliano)\np_11(Emiliano) \u2295 p_10(Emiliano)\np_9(Emiliano) \u2295 p_1(Emiliano)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))\np_0(Emiliano) \u2192 (p_6(Emiliano) \u2295 p_9(Emiliano))\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)\np_2(Emiliano) \u2192 \u00acp_1(Emiliano)\np_2(Emiliano) \u2192 \u00acp_7(Emiliano)",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano).",
                    "-p_5(Emiliano).",
                    "-p_3(Emiliano).",
                    "p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "p_0(Emiliano).",
                    "(-(p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano).",
                    "all x (p_13(x) -> p_14(x)).",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano)).",
                    "-(p_12(Emiliano) <-> p_11(Emiliano)).",
                    "-(p_11(Emiliano) <-> p_10(Emiliano)).",
                    "-(p_9(Emiliano) <-> p_1(Emiliano)).",
                    "all x (p_7(x) -> (p_2(x) | p_10(x))).",
                    "p_0(Emiliano) -> (-(p_6(Emiliano) <-> p_9(Emiliano))).",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano).",
                    "p_2(Emiliano) -> -p_1(Emiliano).",
                    "p_2(Emiliano) -> -p_7(Emiliano)."
                ],
                "formulas(goals)": [
                    "p_8(Emiliano)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\np_1(Emiliano)\np_2(Emiliano)\np_0(Emiliano)\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)\n\u2200x (p_13(x) \u2192 p_14(x))\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))\np_12(Emiliano) \u2295 p_11(Emiliano)\np_11(Emiliano) \u2295 p_10(Emiliano)\np_9(Emiliano) \u2295 p_1(Emiliano)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))\np_0(Emiliano) \u2192 \u00ac(p_6(Emiliano) \u2295 p_9(Emiliano))\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)\np_2(Emiliano) \u2192 \u00acp_7(Emiliano)\np_2(Emiliano) \u2192 \u00acp_8(Emiliano)",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano).",
                    "-p_5(Emiliano).",
                    "-p_3(Emiliano).",
                    "p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "p_0(Emiliano).",
                    "(-(p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano).",
                    "all x (p_13(x) -> p_14(x)).",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano)).",
                    "-(p_12(Emiliano) <-> p_11(Emiliano)).",
                    "-(p_11(Emiliano) <-> p_10(Emiliano)).",
                    "-(p_9(Emiliano) <-> p_1(Emiliano)).",
                    "all x (p_7(x) -> (p_2(x) | p_10(x))).",
                    "p_0(Emiliano) -> (-(p_6(Emiliano) <-> p_9(Emiliano))).",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano).",
                    "p_2(Emiliano) -> -p_7(Emiliano).",
                    "p_2(Emiliano) -> -p_8(Emiliano)."
                ],
                "formulas(goals)": [
                    "-p_8(Emiliano)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Emiliano) \u2192 \u00acp_1(Emiliano)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_0(Emiliano) \u2192 \u00ac(p_6(Emiliano) \u2295 p_9(Emiliano))",
                    "p_2(Emiliano) \u2192 \u00acp_8(Emiliano)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\np_1(Emiliano)\np_2(Emiliano)\np_0(Emiliano)\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)\n\u2200x (p_13(x) \u2192 p_14(x))\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))\np_12(Emiliano) \u2295 p_11(Emiliano)\np_11(Emiliano) \u2295 p_10(Emiliano)\np_9(Emiliano) \u2295 p_1(Emiliano)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))\np_0(Emiliano) \u2192 \u00ac(p_6(Emiliano) \u2295 p_9(Emiliano))\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)\n\u00ac(p_2(Emiliano) \u2192 \u00acp_7(Emiliano))",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_4(Emiliano)",
                    "- p_5(Emiliano)",
                    "- p_3(Emiliano)",
                    "p_1(Emiliano)",
                    "p_2(Emiliano)",
                    "p_0(Emiliano)",
                    "(- (p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano)",
                    "all x (p_13(x) -> p_14(x))",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano))",
                    "- (p_12(Emiliano) <-> p_11(Emiliano))",
                    "- (p_11(Emiliano) <-> p_10(Emiliano))",
                    "- (p_9(Emiliano) <-> p_1(Emiliano))",
                    "all x (p_7(x) -> (p_2(x) | p_10(x)))",
                    "p_0(Emiliano) -> (p_6(Emiliano) <-> p_9(Emiliano))",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano)",
                    "- (p_2(Emiliano) -> - p_7(Emiliano))"
                ],
                "formulas(goals)": [
                    "p_8(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Emiliano) \u2192 \u00acp_8(Emiliano)",
                    "p_2(Emiliano) \u2192 \u00acp_7(Emiliano)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00ac(p_2(Emiliano) \u2192 \u00acp_7(Emiliano))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano).\n\u00acp_5(Emiliano).\n\u00acp_3(Emiliano).\np_1(Emiliano).\np_2(Emiliano).\np_0(Emiliano).\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano).\n\u2200x (p_13(x) \u2192 p_14(x)).\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano)).\np_12(Emiliano) \u2295 p_11(Emiliano).\np_11(Emiliano) \u2295 p_10(Emiliano).\np_9(Emiliano) \u2295 p_1(Emiliano).\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x))).\np_0(Emiliano) \u2192 \u00ac(p_6(Emiliano) \u2295 p_9(Emiliano)).\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano).\n(p_2(Emiliano) \u2192 \u00acp_7(Emiliano)).\n\u00ac(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 \u00acp_8(Emiliano).",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano).",
                    "-p_5(Emiliano).",
                    "-p_3(Emiliano).",
                    "p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "p_0(Emiliano).",
                    "(-(p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano).",
                    "all x (p_13(x) -> p_14(x)).",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano)).",
                    "-(p_12(Emiliano) <-> p_11(Emiliano)).",
                    "-(p_11(Emiliano) <-> p_10(Emiliano)).",
                    "-(p_9(Emiliano) <-> p_1(Emiliano)).",
                    "all x (p_7(x) -> (p_2(x) | p_10(x))).",
                    "p_0(Emiliano) -> (p_6(Emiliano) <-> p_9(Emiliano)).",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano).",
                    "(p_2(Emiliano) -> -p_7(Emiliano)).",
                    "(-(p_6(Emiliano) | p_7(Emiliano))) -> -p_8(Emiliano)."
                ],
                "formulas(goals)": [
                    "-p_8(Emiliano)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_2(Emiliano) \u2192 \u00acp_7(Emiliano))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_2(Emiliano) \u2192 \u00acp_7(Emiliano))",
                    "\u00ac(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 \u00acp_8(Emiliano)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\np_1(Emiliano)\np_2(Emiliano)\np_0(Emiliano)\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)\n\u2200x (p_13(x) \u2192 p_14(x))\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))\np_12(Emiliano) \u2295 p_11(Emiliano)\np_11(Emiliano) \u2295 p_10(Emiliano)\np_9(Emiliano) \u2295 p_1(Emiliano)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))\np_0(Emiliano) \u2192 \u00ac(p_6(Emiliano) \u2295 p_9(Emiliano))\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)\n\u00ac(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 \u00acp_8(Emiliano)",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano).",
                    "-p_5(Emiliano).",
                    "-p_3(Emiliano).",
                    "p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "p_0(Emiliano).",
                    "(-(p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano).",
                    "all x (p_13(x) -> p_14(x)).",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano)).",
                    "-(p_12(Emiliano) <-> p_11(Emiliano)).",
                    "-(p_11(Emiliano) <-> p_10(Emiliano)).",
                    "-(p_9(Emiliano) <-> p_1(Emiliano)).",
                    "all x (p_7(x) -> (p_2(x) | p_10(x))).",
                    "p_0(Emiliano) -> -(p_6(Emiliano) <-> p_9(Emiliano)).",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano).",
                    "-(p_6(Emiliano) | p_7(Emiliano)) -> -p_8(Emiliano)."
                ],
                "formulas(goals)": [
                    "p_8(Emiliano)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Emiliano) \u2192 \u00acp_7(Emiliano)"
                ],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\np_1(Emiliano)\np_2(Emiliano)\np_0(Emiliano)\n(p_14(Emiliano) \u2295 p_4(Emiliano)) \u2192 p_5(Emiliano)\n\u2200x (p_13(x) \u2192 p_14(x))\np_12(Emiliano) \u2192 (p_13(Emiliano) \u2228 p_3(Emiliano))\np_12(Emiliano) \u2295 p_11(Emiliano)\np_11(Emiliano) \u2295 p_10(Emiliano)\np_9(Emiliano) \u2295 p_1(Emiliano)\n\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_10(x)))\np_0(Emiliano) \u2192 \u00ac(p_6(Emiliano) \u2295 p_9(Emiliano))\n(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 p_8(Emiliano)\n\u00ac(p_6(Emiliano) \u2228 p_7(Emiliano)) \u2192 \u00acp_8(Emiliano)\np_7(Emiliano) \u2192 p_10(Emiliano)",
            "Initial Goal": "p_8(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano)",
                    "-p_5(Emiliano)",
                    "-p_3(Emiliano)",
                    "p_1(Emiliano)",
                    "p_2(Emiliano)",
                    "p_0(Emiliano)",
                    "(-(p_14(Emiliano) <-> p_4(Emiliano))) -> p_5(Emiliano)",
                    "all x (p_13(x) -> p_14(x))",
                    "p_12(Emiliano) -> (p_13(Emiliano) | p_3(Emiliano))",
                    "-(p_12(Emiliano) <-> p_11(Emiliano))",
                    "-(p_11(Emiliano) <-> p_10(Emiliano))",
                    "-(p_9(Emiliano) <-> p_1(Emiliano))",
                    "all x (p_7(x) -> (p_2(x) | p_10(x)))",
                    "p_0(Emiliano) -> (p_6(Emiliano) <-> p_9(Emiliano))",
                    "(p_6(Emiliano) | p_7(Emiliano)) -> p_8(Emiliano)",
                    "(-(p_6(Emiliano) | p_7(Emiliano))) -> -p_8(Emiliano)",
                    "p_7(Emiliano) -> p_10(Emiliano)"
                ],
                "formulas(goals)": [
                    "-p_8(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Emiliano) \u2192 p_10(Emiliano)"
                ]
            }
        }
    ]
}