{
    "background_story": "Lane was a brilliant financial analyst with a keen eye for detail. He spent most of his career studying market trends and predicting stock fluctuations. Lane's specialty was identifying narrow margins of profit in seemingly unprofitable ventures. He would pour over financial reports, searching for that small margin that could make all the difference. His colleagues often joked that Lane could find a profit margin in a haystack. One day, Lane's unique skillset paid off when he discovered a small, overlooked margin in a struggling company's budget. His findings helped the company turn a corner, and soon Lane was in high demand as a consultant. He continued to thrive in his career, always on the lookout for that elusive margin that could change the game.",
    "predicates": [
        {
            "id": 0,
            "name": "thorough"
        },
        {
            "id": 1,
            "name": "sets_goals"
        },
        {
            "id": 2,
            "name": "faces_challenges"
        },
        {
            "id": 3,
            "name": "reads_reports"
        },
        {
            "id": 4,
            "name": "meticulous"
        },
        {
            "id": 5,
            "name": "profitable"
        },
        {
            "id": 6,
            "name": "successful"
        },
        {
            "id": 7,
            "name": "works_hard"
        },
        {
            "id": 8,
            "name": "earns_recognition"
        },
        {
            "id": 9,
            "name": "studies_trends"
        },
        {
            "id": 10,
            "name": "analyzes_data"
        },
        {
            "id": 11,
            "name": "makes_predictions"
        },
        {
            "id": 12,
            "name": "sees_opportunities"
        },
        {
            "id": 13,
            "name": "makes_informed_decisions"
        },
        {
            "id": 14,
            "name": "is_diligent"
        },
        {
            "id": 15,
            "name": "is_disciplined"
        },
        {
            "id": 16,
            "name": "is_innovative"
        }
    ],
    "subject_name": "Lane",
    "subject_category": "human",
    "keyword": "margin",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lane",
            "text": "Lane is not thorough.",
            "fol": "\u00acp_0(Lane)",
            "str_fol": "\u00acthorough(Lane)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lane",
            "text": "Lane sets goals.",
            "fol": "p_1(Lane)",
            "str_fol": "sets_goals(Lane)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lane",
            "text": "Lane faces challenges.",
            "fol": "p_2(Lane)",
            "str_fol": "faces_challenges(Lane)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lane",
            "text": "Lane reads reports.",
            "fol": "p_3(Lane)",
            "str_fol": "reads_reports(Lane)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lane",
            "text": "Lane does not study trends.",
            "fol": "\u00acp_9(Lane)",
            "str_fol": "\u00acstudies_trends(Lane)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lane",
            "text": "Lane does not earn recognition.",
            "fol": "\u00acp_8(Lane)",
            "str_fol": "\u00acearns_recognition(Lane)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lane",
            "text": "Lane works hard.",
            "fol": "p_7(Lane)",
            "str_fol": "works_hard(Lane)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lane",
            "text": "Lane is not successful.",
            "fol": "\u00acp_6(Lane)",
            "str_fol": "\u00acsuccessful(Lane)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Lane",
            "text": "Lane is not meticulous in his work.",
            "fol": "\u00acp_4(Lane)",
            "str_fol": "\u00acmeticulous(Lane)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Lane",
            "text": "Lane is not profitable in his work.",
            "fol": "\u00acp_5(Lane)",
            "str_fol": "\u00acprofitable(Lane)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Lane",
            "text": "Lane reads reports.",
            "fol": "p_3(Lane)",
            "str_fol": "reads_reports(Lane)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lane",
            "text": "Lane faces challenges.",
            "fol": "p_2(Lane)",
            "str_fol": "faces_challenges(Lane)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lane",
            "text": "Lane sets goals.",
            "fol": "p_1(Lane)",
            "str_fol": "sets_goals(Lane)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Lane",
            "text": "Lane is not thorough.",
            "fol": "\u00acp_0(Lane)",
            "str_fol": "\u00acthorough(Lane)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Lane either reads reports or studies trends, but not necessarily both.",
            "fol": "p_3(Lane) \u2295 p_9(Lane)",
            "str_fol": "reads_reports(Lane) \u2295 studies_trends(Lane)"
        },
        {
            "id": 4,
            "text": "Lane either earns recognition or faces challenges, but not necessarily both.",
            "fol": "p_8(Lane) \u2295 p_2(Lane)",
            "str_fol": "earns_recognition(Lane) \u2295 faces_challenges(Lane)"
        },
        {
            "id": 3,
            "text": "Anyone who studies trends or sets goals works hard.",
            "fol": "\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((studies_trends(x) \u2228 sets_goals(x)) \u2192 works_hard(x))"
        },
        {
            "id": 2,
            "text": "If someone is successful and works hard, then they earn recognition.",
            "fol": "\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((successful(x) \u2227 works_hard(x)) \u2192 earns_recognition(x))"
        },
        {
            "id": 1,
            "text": "If Lane is either thorough or meticulous (but not both), then he is successful.",
            "fol": "(p_0(Lane) \u2295 p_4(Lane)) \u2192 p_6(Lane)",
            "str_fol": "(thorough(Lane) \u2295 meticulous(Lane)) \u2192 successful(Lane)"
        },
        {
            "id": 0,
            "text": "Lane is either meticulous or profitable in his work (or both).",
            "fol": "p_4(Lane) \u2228 p_5(Lane)",
            "str_fol": "meticulous(Lane) \u2228 profitable(Lane)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Lane",
            "text": "Lane reads reports.",
            "fol": "p_3(Lane)",
            "str_fol": "reads_reports(Lane)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lane",
            "text": "Lane faces challenges.",
            "fol": "p_2(Lane)",
            "str_fol": "faces_challenges(Lane)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lane",
            "text": "Lane sets goals.",
            "fol": "p_1(Lane)",
            "str_fol": "sets_goals(Lane)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Lane",
            "text": "Lane is not thorough.",
            "fol": "\u00acp_0(Lane)",
            "str_fol": "\u00acthorough(Lane)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Lane either reads reports or studies trends, but not necessarily both.",
            "fol": "p_3(Lane) \u2295 p_9(Lane)",
            "str_fol": "reads_reports(Lane) \u2295 studies_trends(Lane)"
        },
        {
            "id": 4,
            "text": "Lane either earns recognition or faces challenges, but not necessarily both.",
            "fol": "p_8(Lane) \u2295 p_2(Lane)",
            "str_fol": "earns_recognition(Lane) \u2295 faces_challenges(Lane)"
        },
        {
            "id": 3,
            "text": "Anyone who studies trends or sets goals works hard.",
            "fol": "\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((studies_trends(x) \u2228 sets_goals(x)) \u2192 works_hard(x))"
        },
        {
            "id": 2,
            "text": "If someone is successful and works hard, then they earn recognition.",
            "fol": "\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((successful(x) \u2227 works_hard(x)) \u2192 earns_recognition(x))"
        },
        {
            "id": 1,
            "text": "If Lane is either thorough or meticulous (but not both), then he is successful.",
            "fol": "(p_0(Lane) \u2295 p_4(Lane)) \u2192 p_6(Lane)",
            "str_fol": "(thorough(Lane) \u2295 meticulous(Lane)) \u2192 successful(Lane)"
        },
        {
            "id": 0,
            "text": "Lane is either meticulous or profitable in his work (or both).",
            "fol": "p_4(Lane) \u2228 p_5(Lane)",
            "str_fol": "meticulous(Lane) \u2228 profitable(Lane)"
        }
    ],
    "context_fol": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\np_8(Lane) \u2295 p_2(Lane)\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_0(Lane) \u2295 p_4(Lane)) \u2192 p_6(Lane)\np_4(Lane) \u2228 p_5(Lane)",
    "conclusion": {
        "id": 9,
        "subject": "Lane",
        "text": "Lane is not profitable in his work.",
        "fol": "\u00acp_5(Lane)",
        "str_fol": "\u00acprofitable(Lane)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_5(Lane)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Lane",
                    "text": "Lane reads reports.",
                    "fol": "p_3(Lane)",
                    "str_fol": "reads_reports(Lane)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Lane either reads reports or studies trends, but not necessarily both.",
                    "fol": "p_3(Lane) \u2295 p_9(Lane)",
                    "str_fol": "reads_reports(Lane) \u2295 studies_trends(Lane)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Lane",
                "text": "Lane does not study trends.",
                "fol": "\u00acp_9(Lane)",
                "str_fol": "\u00acstudies_trends(Lane)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Lane",
                    "text": "Lane faces challenges.",
                    "fol": "p_2(Lane)",
                    "str_fol": "faces_challenges(Lane)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Lane either earns recognition or faces challenges, but not necessarily both.",
                    "fol": "p_8(Lane) \u2295 p_2(Lane)",
                    "str_fol": "earns_recognition(Lane) \u2295 faces_challenges(Lane)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Lane",
                "text": "Lane does not earn recognition.",
                "fol": "\u00acp_8(Lane)",
                "str_fol": "\u00acearns_recognition(Lane)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Lane",
                    "text": "Lane does not study trends.",
                    "fol": "\u00acp_9(Lane)",
                    "str_fol": "\u00acstudies_trends(Lane)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Lane",
                    "text": "Lane sets goals.",
                    "fol": "p_1(Lane)",
                    "str_fol": "sets_goals(Lane)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who studies trends or sets goals works hard.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((studies_trends(x) \u2228 sets_goals(x)) \u2192 works_hard(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Lane",
                "text": "Lane works hard.",
                "fol": "p_7(Lane)",
                "str_fol": "works_hard(Lane)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lane",
                    "text": "Lane works hard.",
                    "fol": "p_7(Lane)",
                    "str_fol": "works_hard(Lane)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Lane",
                    "text": "Lane does not earn recognition.",
                    "fol": "\u00acp_8(Lane)",
                    "str_fol": "\u00acearns_recognition(Lane)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone is successful and works hard, then they earn recognition.",
                    "fol": "\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((successful(x) \u2227 works_hard(x)) \u2192 earns_recognition(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Lane",
                "text": "Lane is not successful.",
                "fol": "\u00acp_6(Lane)",
                "str_fol": "\u00acsuccessful(Lane)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Lane",
                    "text": "Lane is not thorough.",
                    "fol": "\u00acp_0(Lane)",
                    "str_fol": "\u00acthorough(Lane)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Lane",
                    "text": "Lane is not successful.",
                    "fol": "\u00acp_6(Lane)",
                    "str_fol": "\u00acsuccessful(Lane)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Lane is either thorough or meticulous (but not both), then he is successful.",
                    "fol": "(p_0(Lane) \u2295 p_4(Lane)) \u2192 p_6(Lane)",
                    "str_fol": "(thorough(Lane) \u2295 meticulous(Lane)) \u2192 successful(Lane)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Lane",
                "text": "Lane is not meticulous in his work.",
                "fol": "\u00acp_4(Lane)",
                "str_fol": "\u00acmeticulous(Lane)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Lane",
                    "text": "Lane is not meticulous in his work.",
                    "fol": "\u00acp_4(Lane)",
                    "str_fol": "\u00acmeticulous(Lane)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Lane is either meticulous or profitable in his work (or both).",
                    "fol": "p_4(Lane) \u2228 p_5(Lane)",
                    "str_fol": "meticulous(Lane) \u2228 profitable(Lane)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lane",
                "text": "Lane is not profitable in his work.",
                "fol": "\u00acp_5(Lane)",
                "str_fol": "\u00acprofitable(Lane)",
                "negation": true
            }
        }
    ],
    "proof_trace": "2 -(p_8(Lane) <-> p_2(Lane)).  [assumption].\n3 (all x (p_9(x) | p_1(x) -> p_7(x))).  [assumption].\n4 (all x (p_6(x) & p_7(x) -> p_8(x))).  [assumption].\n5 -(p_0(Lane) <-> p_4(Lane)) -> p_6(Lane).  [assumption].\n6 --p_5(Lane).  [goal].\n10 -p_8(Lane) | -p_2(Lane).  [clausify(2)].\n11 p_2(Lane).  [assumption].\n13 -p_1(x) | p_7(x).  [clausify(3)].\n14 p_1(Lane).  [assumption].\n15 p_0(Lane) | -p_4(Lane) | p_6(Lane).  [clausify(5)].\n16 -p_0(Lane).  [assumption].\n18 -p_4(Lane) | p_6(Lane).  [resolve(15,a,16,a)].\n19 -p_6(x) | -p_7(x) | p_8(x).  [clausify(4)].\n20 -p_4(Lane) | -p_7(Lane) | p_8(Lane).  [resolve(18,b,19,a)].\n21 p_4(Lane) | p_5(Lane).  [assumption].\n22 -p_7(Lane) | p_8(Lane) | p_5(Lane).  [resolve(20,a,21,a)].\n23 -p_5(Lane).  [deny(6)].\n24 -p_7(Lane) | p_8(Lane).  [resolve(22,c,23,a)].\n25 -p_8(Lane).  [resolve(10,b,11,a)].\n26 -p_7(Lane).  [resolve(24,b,25,a)].\n27 p_7(Lane).  [resolve(13,a,14,a)].\n28 $F.  [resolve(26,a,27,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\np_8(Lane) \u2295 p_2(Lane)\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n(p_0(Lane) \u2295 p_4(Lane)) \u2192 p_6(Lane)\n\u00acp_4(Lane) \u2192 p_5(Lane)\np_5(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\np_4(Lane) \u2192 p_6(Lane)",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane)",
                    "p_2(Lane)",
                    "p_1(Lane)",
                    "-p_0(Lane)",
                    "-(p_3(Lane) <-> p_9(Lane))",
                    "-(p_8(Lane) <-> p_2(Lane))",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x))",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "(-(p_0(Lane) <-> p_4(Lane))) -> p_6(Lane)",
                    "-p_4(Lane) -> p_5(Lane)",
                    "p_5(Lane)",
                    "-p_4(Lane)",
                    "-p_9(Lane)",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x)))",
                    "p_4(Lane) -> p_6(Lane)"
                ],
                "formulas(goals)": [
                    "--p_5(Lane)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Lane) \u2228 p_5(Lane)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_4(Lane)",
                    "\u00acp_9(Lane)",
                    "p_5(Lane)"
                ],
                "added_rules": [
                    "\u00acp_4(Lane) \u2192 p_5(Lane)",
                    "\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))",
                    "p_4(Lane) \u2192 p_6(Lane)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\n(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)\np_4(Lane) \u2228 p_5(Lane)\np_5(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\n\u00acp_4(Lane) \u2228 p_6(Lane)\np_5(Lane) \u2228 p_4(Lane)\np_3(Lane) \u2227 p_2(Lane)",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane).",
                    "p_2(Lane).",
                    "p_1(Lane).",
                    "-p_0(Lane).",
                    "-(p_3(Lane) <-> p_9(Lane)).",
                    "(p_8(Lane) | p_2(Lane)) & (-p_8(Lane) | -p_2(Lane)).",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x)).",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x)).",
                    "((p_0(Lane) | p_4(Lane)) & (-p_0(Lane) | -p_4(Lane))) -> p_6(Lane).",
                    "p_4(Lane) | p_5(Lane).",
                    "p_5(Lane).",
                    "-p_4(Lane).",
                    "-p_9(Lane).",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x))).",
                    "-p_4(Lane) | p_6(Lane).",
                    "p_5(Lane) | p_4(Lane).",
                    "p_3(Lane) & p_2(Lane)."
                ],
                "formulas(goals)": [
                    "-(-p_5(Lane))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_4(Lane) \u2192 p_5(Lane)",
                    "p_4(Lane) \u2192 p_6(Lane)",
                    "p_8(Lane) \u2295 p_2(Lane)",
                    "(p_0(Lane) \u2295 p_4(Lane)) \u2192 p_6(Lane)"
                ],
                "added_facts": [
                    "p_5(Lane) \u2228 p_4(Lane)",
                    "p_3(Lane) \u2227 p_2(Lane)"
                ],
                "added_rules": [
                    "(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))",
                    "((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)",
                    "p_4(Lane) \u2228 p_5(Lane)",
                    "\u00acp_4(Lane) \u2228 p_6(Lane)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\n(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)\np_4(Lane) \u2228 p_5(Lane)\np_5(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\n\u00acp_4(Lane) \u2228 p_6(Lane)\np_5(Lane) \u2228 p_4(Lane)\np_3(Lane) \u2227 p_2(Lane)\n\u00ac\u00acp_5(Lane)\np_5(Lane) \u2228 \u00acp_5(Lane)\n(p_9(Lane) \u2228 p_1(Lane)) \u2192 p_7(Lane)\n\u00acp_4(Lane) \u2192 p_5(Lane)\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2228 (\u00acp_3(Lane) \u2227 p_9(Lane))",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane).",
                    "p_2(Lane).",
                    "p_1(Lane).",
                    "-p_0(Lane).",
                    "-(p_3(Lane) <-> p_9(Lane)).",
                    "(p_8(Lane) | p_2(Lane)) & (-p_8(Lane) | -p_2(Lane)).",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x)).",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x)).",
                    "((p_0(Lane) | p_4(Lane)) & (-p_0(Lane) | -p_4(Lane))) -> p_6(Lane).",
                    "p_4(Lane) | p_5(Lane).",
                    "p_5(Lane).",
                    "-p_4(Lane).",
                    "-p_9(Lane).",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x))).",
                    "-p_4(Lane) | p_6(Lane).",
                    "p_5(Lane) | p_4(Lane).",
                    "p_3(Lane) & p_2(Lane).",
                    "--p_5(Lane).",
                    "p_5(Lane) | -p_5(Lane).",
                    "(p_9(Lane) | p_1(Lane)) -> p_7(Lane).",
                    "-p_4(Lane) -> p_5(Lane).",
                    "(p_3(Lane) & -p_9(Lane)) | (-p_3(Lane) & p_9(Lane))."
                ],
                "formulas(goals)": [
                    "--p_5(Lane)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac\u00acp_5(Lane)",
                    "p_5(Lane) \u2228 \u00acp_5(Lane)"
                ],
                "added_rules": [
                    "(p_9(Lane) \u2228 p_1(Lane)) \u2192 p_7(Lane)",
                    "\u00acp_4(Lane) \u2192 p_5(Lane)",
                    "(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2228 (\u00acp_3(Lane) \u2227 p_9(Lane))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\n(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)\np_4(Lane) \u2228 p_5(Lane)\np_5(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\n\u00acp_4(Lane) \u2228 p_6(Lane)\np_5(Lane) \u2228 p_4(Lane)\np_3(Lane) \u2227 p_2(Lane)\n\u00ac\u00acp_5(Lane)\np_5(Lane) \u2228 \u00acp_5(Lane)\n(p_9(Lane) \u2228 p_1(Lane)) \u2192 p_7(Lane)\n\u00acp_4(Lane) \u2192 p_5(Lane)\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2228 (\u00acp_3(Lane) \u2227 p_9(Lane))\np_5(Lane) \u2227 p_5(Lane)\np_3(Lane) \u2228 p_2(Lane)\n\u00acp_4(Lane) \u2228 p_5(Lane)\np_1(Lane) \u2192 p_7(Lane)\n\u00ac(\u00ac(p_8(Lane) \u2228 p_2(Lane)) \u2228 \u00ac(\u00acp_8(Lane) \u2228 \u00acp_2(Lane)))\np_5(Lane) \u2228 p_5(Lane)",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane).",
                    "p_2(Lane).",
                    "p_1(Lane).",
                    "-p_0(Lane).",
                    "-(p_3(Lane) <-> p_9(Lane)).",
                    "(p_8(Lane) | p_2(Lane)) & (-p_8(Lane) | -p_2(Lane)).",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x)).",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x)).",
                    "((p_0(Lane) | p_4(Lane)) & (-p_0(Lane) | -p_4(Lane))) -> p_6(Lane).",
                    "p_4(Lane) | p_5(Lane).",
                    "p_5(Lane).",
                    "-p_4(Lane).",
                    "-p_9(Lane).",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x))).",
                    "-p_4(Lane) | p_6(Lane).",
                    "p_5(Lane) | p_4(Lane).",
                    "p_3(Lane) & p_2(Lane).",
                    "--p_5(Lane).",
                    "p_5(Lane) | -p_5(Lane).",
                    "(p_9(Lane) | p_1(Lane)) -> p_7(Lane).",
                    "-p_4(Lane) -> p_5(Lane).",
                    "(p_3(Lane) & -p_9(Lane)) | (-p_3(Lane) & p_9(Lane)).",
                    "(p_5(Lane) & p_5(Lane)).",
                    "(p_3(Lane) | p_2(Lane)).",
                    "(-p_4(Lane) | p_5(Lane)).",
                    "(p_1(Lane) -> p_7(Lane)).",
                    "-(-(p_8(Lane) | p_2(Lane)) | -(-p_8(Lane) | -p_2(Lane))).",
                    "(p_5(Lane) | p_5(Lane))."
                ],
                "formulas(goals)": [
                    "--p_5(Lane)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Lane) \u2227 p_5(Lane)",
                    "p_3(Lane) \u2228 p_2(Lane)",
                    "\u00acp_4(Lane) \u2228 p_5(Lane)",
                    "p_5(Lane) \u2228 p_5(Lane)"
                ],
                "added_rules": [
                    "p_1(Lane) \u2192 p_7(Lane)",
                    "\u00ac(\u00ac(p_8(Lane) \u2228 p_2(Lane)) \u2228 \u00ac(\u00acp_8(Lane) \u2228 \u00acp_2(Lane)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\n(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\n\u00acp_4(Lane) \u2228 p_6(Lane)\np_3(Lane) \u2227 p_2(Lane)\np_3(Lane) \u2228 p_2(Lane)\np_1(Lane) \u2192 p_7(Lane)\n\u00ac(\u00ac(p_8(Lane) \u2228 p_2(Lane)) \u2228 \u00ac(\u00acp_8(Lane) \u2228 \u00acp_2(Lane)))\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2228 (\u00acp_3(Lane) \u2227 p_9(Lane))\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2192 \u00acp_5(Lane)",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane)",
                    "p_2(Lane)",
                    "p_1(Lane)",
                    "-p_0(Lane)",
                    "-(p_3(Lane) <-> p_9(Lane))",
                    "(p_8(Lane) | p_2(Lane)) & (-p_8(Lane) | -p_2(Lane))",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x))",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "((p_0(Lane) | p_4(Lane)) & (-p_0(Lane) | -p_4(Lane))) -> p_6(Lane)",
                    "-p_4(Lane)",
                    "-p_9(Lane)",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x)))",
                    "-p_4(Lane) | p_6(Lane)",
                    "p_3(Lane) & p_2(Lane)",
                    "p_3(Lane) | p_2(Lane)",
                    "p_1(Lane) -> p_7(Lane)",
                    "-(-(p_8(Lane) | p_2(Lane)) | -(-p_8(Lane) | -p_2(Lane)))",
                    "(p_3(Lane) & -p_9(Lane)) | (-p_3(Lane) & p_9(Lane))",
                    "(p_3(Lane) & -p_9(Lane)) -> -p_5(Lane)"
                ],
                "formulas(goals)": [
                    "-p_5(Lane)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Lane)",
                    "\u00ac\u00acp_5(Lane)",
                    "p_5(Lane) \u2227 p_5(Lane)"
                ],
                "removed_rules": [
                    "p_4(Lane) \u2228 p_5(Lane)",
                    "p_5(Lane) \u2228 p_4(Lane)",
                    "p_5(Lane) \u2228 \u00acp_5(Lane)",
                    "\u00acp_4(Lane) \u2192 p_5(Lane)",
                    "\u00acp_4(Lane) \u2228 p_5(Lane)",
                    "p_5(Lane) \u2228 p_5(Lane)",
                    "(p_9(Lane) \u2228 p_1(Lane)) \u2192 p_7(Lane)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2192 \u00acp_5(Lane)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\n(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\n\u00acp_4(Lane) \u2228 p_6(Lane)\np_3(Lane) \u2227 p_2(Lane)\np_3(Lane) \u2228 p_2(Lane)\np_1(Lane) \u2192 p_7(Lane)\n\u00ac(\u00ac(p_8(Lane) \u2228 p_2(Lane)) \u2228 \u00ac(\u00acp_8(Lane) \u2228 \u00acp_2(Lane)))\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2228 (\u00acp_3(Lane) \u2227 p_9(Lane))\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2192 p_5(Lane)",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane).",
                    "p_2(Lane).",
                    "p_1(Lane).",
                    "-p_0(Lane).",
                    "-(p_3(Lane) <-> p_9(Lane)).",
                    "(p_8(Lane) | p_2(Lane)) & (-p_8(Lane) | -p_2(Lane)).",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x)).",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x)).",
                    "((p_0(Lane) | p_4(Lane)) & (-p_0(Lane) | -p_4(Lane))) -> p_6(Lane).",
                    "-p_4(Lane).",
                    "-p_9(Lane).",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x))).",
                    "-p_4(Lane) | p_6(Lane).",
                    "p_3(Lane) & p_2(Lane).",
                    "p_3(Lane) | p_2(Lane).",
                    "p_1(Lane) -> p_7(Lane).",
                    "-(-(p_8(Lane) | p_2(Lane)) | -(-p_8(Lane) | -p_2(Lane))).",
                    "(p_3(Lane) & -p_9(Lane)) | (-p_3(Lane) & p_9(Lane)).",
                    "(p_3(Lane) & -p_9(Lane)) -> p_5(Lane)."
                ],
                "formulas(goals)": [
                    "p_5(Lane)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2192 \u00acp_5(Lane)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2192 p_5(Lane)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Lane)\np_2(Lane)\np_1(Lane)\n\u00acp_0(Lane)\np_3(Lane) \u2295 p_9(Lane)\n(p_8(Lane) \u2228 p_2(Lane)) \u2227 (\u00acp_8(Lane) \u2228 \u00acp_2(Lane))\n\u2200x ((p_9(x) \u2228 p_1(x)) \u2192 p_7(x))\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\n((p_0(Lane) \u2228 p_4(Lane)) \u2227 (\u00acp_0(Lane) \u2228 \u00acp_4(Lane))) \u2192 p_6(Lane)\n\u00acp_4(Lane)\n\u00acp_9(Lane)\n\u2200x (\u00acp_7(x) \u2192 \u00ac(p_9(x) \u2228 p_1(x)))\n\u00acp_4(Lane) \u2228 p_6(Lane)\np_3(Lane) \u2227 p_2(Lane)\np_3(Lane) \u2228 p_2(Lane)\np_1(Lane) \u2192 p_7(Lane)\n\u00ac(\u00ac(p_8(Lane) \u2228 p_2(Lane)) \u2228 \u00ac(\u00acp_8(Lane) \u2228 \u00acp_2(Lane)))\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2228 (\u00acp_3(Lane) \u2227 p_9(Lane))\n(p_3(Lane) \u2227 \u00acp_9(Lane)) \u2192 p_5(Lane)",
            "Initial Goal": "\u00acp_5(Lane)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Lane)",
                    "p_2(Lane)",
                    "p_1(Lane)",
                    "-p_0(Lane)",
                    "(-(p_3(Lane) <-> p_9(Lane)))",
                    "(p_8(Lane) | p_2(Lane)) & (-p_8(Lane) | -p_2(Lane))",
                    "all x ((p_9(x) | p_1(x)) -> p_7(x))",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "((p_0(Lane) | p_4(Lane)) & (-p_0(Lane) | -p_4(Lane))) -> p_6(Lane)",
                    "-p_4(Lane)",
                    "-p_9(Lane)",
                    "all x (-p_7(x) -> -(p_9(x) | p_1(x)))",
                    "-p_4(Lane) | p_6(Lane)",
                    "p_3(Lane) & p_2(Lane)",
                    "p_3(Lane) | p_2(Lane)",
                    "p_1(Lane) -> p_7(Lane)",
                    "-(-(p_8(Lane) | p_2(Lane)) | -(-p_8(Lane) | -p_2(Lane)))",
                    "(p_3(Lane) & -p_9(Lane)) | (-p_3(Lane) & p_9(Lane))",
                    "(p_3(Lane) & -p_9(Lane)) -> p_5(Lane)"
                ],
                "formulas(goals)": [
                    "--p_5(Lane)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        }
    ]
}