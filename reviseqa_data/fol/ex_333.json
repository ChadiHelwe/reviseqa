{
    "background_story": "Kalel was born into a devout Methodist family in a small town in the Midwest. From a young age, he was active in his local church, participating in youth groups and volunteering for community service projects. As he grew older, Kalel's faith deepened, and he became drawn to the teachings of John Wesley, the founder of Methodism. He attended a Methodist university, where he studied theology and developed a passion for social justice. After college, Kalel became a Methodist minister, dedicating his life to serving others and spreading the message of love and compassion. He worked tirelessly in his community, establishing programs to help the homeless and advocate for human rights. Kalel's commitment to his faith and his community made him a respected leader and a source of inspiration to all who knew him.",
    "predicates": [
        {
            "id": 0,
            "name": "leads_community"
        },
        {
            "id": 1,
            "name": "serves_community"
        },
        {
            "id": 2,
            "name": "supports_needy"
        },
        {
            "id": 3,
            "name": "is_selfless"
        },
        {
            "id": 4,
            "name": "practices_meditation"
        },
        {
            "id": 5,
            "name": "devout"
        },
        {
            "id": 6,
            "name": "compassionate"
        },
        {
            "id": 7,
            "name": "respected"
        },
        {
            "id": 8,
            "name": "helps_others"
        },
        {
            "id": 9,
            "name": "humble"
        },
        {
            "id": 10,
            "name": "faithful"
        },
        {
            "id": 11,
            "name": "seeks_wisdom"
        },
        {
            "id": 12,
            "name": "lives_virtuously"
        },
        {
            "id": 13,
            "name": "is_noble"
        },
        {
            "id": 14,
            "name": "spreads_love"
        },
        {
            "id": 15,
            "name": "reads_scripture"
        },
        {
            "id": 16,
            "name": "is_kind"
        },
        {
            "id": 17,
            "name": "donates_time"
        },
        {
            "id": 18,
            "name": "gives_aid"
        },
        {
            "id": 19,
            "name": "attends_church"
        },
        {
            "id": 20,
            "name": "listens_more"
        },
        {
            "id": 21,
            "name": "speaks_less"
        },
        {
            "id": 22,
            "name": "is_disciplined"
        },
        {
            "id": 23,
            "name": "is_mindful"
        },
        {
            "id": 24,
            "name": "acts_kindly"
        },
        {
            "id": 25,
            "name": "stands_up_rightly"
        },
        {
            "id": 26,
            "name": "cares_people"
        },
        {
            "id": 27,
            "name": "embraces_knowledge"
        },
        {
            "id": 28,
            "name": "cultivates_empathy"
        }
    ],
    "subject_name": "Kalel",
    "subject_category": "person",
    "keyword": "methodist",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kalel",
            "text": "Kalel leads his community.",
            "fol": "p_0(Kalel)",
            "str_fol": "leads_community(Kalel)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kalel",
            "text": "Kalel does not serve the community.",
            "fol": "\u00acp_1(Kalel)",
            "str_fol": "\u00acserves_community(Kalel)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kalel",
            "text": "Kalel does not support the needy.",
            "fol": "\u00acp_2(Kalel)",
            "str_fol": "\u00acsupports_needy(Kalel)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kalel",
            "text": "Kalel is not selfless.",
            "fol": "\u00acp_3(Kalel)",
            "str_fol": "\u00acis_selfless(Kalel)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Kalel",
            "text": "Kalel does not practice meditation.",
            "fol": "\u00acp_4(Kalel)",
            "str_fol": "\u00acpractices_meditation(Kalel)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kalel",
            "text": "Kalel does not seek wisdom.",
            "fol": "\u00acp_11(Kalel)",
            "str_fol": "\u00acseeks_wisdom(Kalel)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Kalel",
            "text": "Kalel does not spread love.",
            "fol": "\u00acp_14(Kalel)",
            "str_fol": "\u00acspreads_love(Kalel)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kalel",
            "text": "Kalel is not noble.",
            "fol": "\u00acp_13(Kalel)",
            "str_fol": "\u00acis_noble(Kalel)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Kalel",
            "text": "Kalel does not live virtuously.",
            "fol": "\u00acp_12(Kalel)",
            "str_fol": "\u00aclives_virtuously(Kalel)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Kalel",
            "text": "Kalel is not humble.",
            "fol": "\u00acp_9(Kalel)",
            "str_fol": "\u00achumble(Kalel)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Kalel",
            "text": "Kalel is not devout.",
            "fol": "\u00acp_5(Kalel)",
            "str_fol": "\u00acdevout(Kalel)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Kalel",
            "text": "Kalel does not help others.",
            "fol": "\u00acp_8(Kalel)",
            "str_fol": "\u00achelps_others(Kalel)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Kalel",
            "text": "Kalel is respected.",
            "fol": "p_7(Kalel)",
            "str_fol": "respected(Kalel)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Kalel",
            "text": "Kalel is compassionate.",
            "fol": "p_6(Kalel)",
            "str_fol": "compassionate(Kalel)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Kalel",
            "text": "Kalel does not practice meditation.",
            "fol": "\u00acp_4(Kalel)",
            "str_fol": "\u00acpractices_meditation(Kalel)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kalel",
            "text": "Kalel does not support the needy.",
            "fol": "\u00acp_2(Kalel)",
            "str_fol": "\u00acsupports_needy(Kalel)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kalel",
            "text": "Kalel is not selfless.",
            "fol": "\u00acp_3(Kalel)",
            "str_fol": "\u00acis_selfless(Kalel)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kalel",
            "text": "Kalel does not serve the community.",
            "fol": "\u00acp_1(Kalel)",
            "str_fol": "\u00acserves_community(Kalel)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kalel",
            "text": "Kalel leads his community.",
            "fol": "p_0(Kalel)",
            "str_fol": "leads_community(Kalel)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Kalel seeks wisdom, then he reads scripture and practices meditation.",
            "fol": "p_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))",
            "str_fol": "seeks_wisdom(Kalel) \u2192 (reads_scripture(Kalel) \u2227 practices_meditation(Kalel))"
        },
        {
            "id": 7,
            "text": "If Kalel either supports the needy or spreads love (but not both), then he is selfless.",
            "fol": "(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)",
            "str_fol": "(supports_needy(Kalel) \u2295 spreads_love(Kalel)) \u2192 is_selfless(Kalel)"
        },
        {
            "id": 6,
            "text": "Anyone who is noble either serves the community or spreads love.",
            "fol": "\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))",
            "str_fol": "\u2200x (is_noble(x) \u2192 (serves_community(x) \u2228 spreads_love(x)))"
        },
        {
            "id": 5,
            "text": "Anyone who lives a virtuous life is noble.",
            "fol": "\u2200x (p_12(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (lives_virtuously(x) \u2192 is_noble(x))"
        },
        {
            "id": 4,
            "text": "If Kalel is either humble or seeks wisdom (but not both), then he lives virtuously.",
            "fol": "(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)",
            "str_fol": "(humble(Kalel) \u2295 seeks_wisdom(Kalel)) \u2192 lives_virtuously(Kalel)"
        },
        {
            "id": 3,
            "text": "If a person is devout, then they are humble and faithful.",
            "fol": "\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (devout(x) \u2192 (humble(x) \u2227 faithful(x)))"
        },
        {
            "id": 2,
            "text": "Kalel either leads his community or helps others, but not necessarily both.",
            "fol": "p_0(Kalel) \u2295 p_8(Kalel)",
            "str_fol": "leads_community(Kalel) \u2295 helps_others(Kalel)"
        },
        {
            "id": 1,
            "text": "Kalel is either respected or helps others.",
            "fol": "p_7(Kalel) \u2228 p_8(Kalel)",
            "str_fol": "respected(Kalel) \u2228 helps_others(Kalel)"
        },
        {
            "id": 0,
            "text": "If Kalel is either devout or compassionate (but not both), then he is respected.",
            "fol": "(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)",
            "str_fol": "(devout(Kalel) \u2295 compassionate(Kalel)) \u2192 respected(Kalel)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Kalel",
            "text": "Kalel does not practice meditation.",
            "fol": "\u00acp_4(Kalel)",
            "str_fol": "\u00acpractices_meditation(Kalel)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kalel",
            "text": "Kalel does not support the needy.",
            "fol": "\u00acp_2(Kalel)",
            "str_fol": "\u00acsupports_needy(Kalel)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kalel",
            "text": "Kalel is not selfless.",
            "fol": "\u00acp_3(Kalel)",
            "str_fol": "\u00acis_selfless(Kalel)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kalel",
            "text": "Kalel does not serve the community.",
            "fol": "\u00acp_1(Kalel)",
            "str_fol": "\u00acserves_community(Kalel)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kalel",
            "text": "Kalel leads his community.",
            "fol": "p_0(Kalel)",
            "str_fol": "leads_community(Kalel)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Kalel seeks wisdom, then he reads scripture and practices meditation.",
            "fol": "p_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))",
            "str_fol": "seeks_wisdom(Kalel) \u2192 (reads_scripture(Kalel) \u2227 practices_meditation(Kalel))"
        },
        {
            "id": 7,
            "text": "If Kalel either supports the needy or spreads love (but not both), then he is selfless.",
            "fol": "(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)",
            "str_fol": "(supports_needy(Kalel) \u2295 spreads_love(Kalel)) \u2192 is_selfless(Kalel)"
        },
        {
            "id": 6,
            "text": "Anyone who is noble either serves the community or spreads love.",
            "fol": "\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))",
            "str_fol": "\u2200x (is_noble(x) \u2192 (serves_community(x) \u2228 spreads_love(x)))"
        },
        {
            "id": 5,
            "text": "Anyone who lives a virtuous life is noble.",
            "fol": "\u2200x (p_12(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (lives_virtuously(x) \u2192 is_noble(x))"
        },
        {
            "id": 4,
            "text": "If Kalel is either humble or seeks wisdom (but not both), then he lives virtuously.",
            "fol": "(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)",
            "str_fol": "(humble(Kalel) \u2295 seeks_wisdom(Kalel)) \u2192 lives_virtuously(Kalel)"
        },
        {
            "id": 3,
            "text": "If a person is devout, then they are humble and faithful.",
            "fol": "\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (devout(x) \u2192 (humble(x) \u2227 faithful(x)))"
        },
        {
            "id": 2,
            "text": "Kalel either leads his community or helps others, but not necessarily both.",
            "fol": "p_0(Kalel) \u2295 p_8(Kalel)",
            "str_fol": "leads_community(Kalel) \u2295 helps_others(Kalel)"
        },
        {
            "id": 1,
            "text": "Kalel is either respected or helps others.",
            "fol": "p_7(Kalel) \u2228 p_8(Kalel)",
            "str_fol": "respected(Kalel) \u2228 helps_others(Kalel)"
        },
        {
            "id": 0,
            "text": "If Kalel is either devout or compassionate (but not both), then he is respected.",
            "fol": "(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)",
            "str_fol": "(devout(Kalel) \u2295 compassionate(Kalel)) \u2192 respected(Kalel)"
        }
    ],
    "context_fol": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_3(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (p_12(x) \u2192 p_13(x))\n(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_0(Kalel) \u2295 p_8(Kalel)\np_7(Kalel) \u2228 p_8(Kalel)\n(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)",
    "conclusion": {
        "id": 13,
        "subject": "Kalel",
        "text": "Kalel is compassionate.",
        "fol": "p_6(Kalel)",
        "str_fol": "compassionate(Kalel)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Kalel)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kalel",
                    "text": "Kalel does not practice meditation.",
                    "fol": "\u00acp_4(Kalel)",
                    "str_fol": "\u00acpractices_meditation(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Kalel seeks wisdom, then he reads scripture and practices meditation.",
                    "fol": "p_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))",
                    "str_fol": "seeks_wisdom(Kalel) \u2192 (reads_scripture(Kalel) \u2227 practices_meditation(Kalel))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kalel",
                "text": "Kalel does not seek wisdom.",
                "fol": "\u00acp_11(Kalel)",
                "str_fol": "\u00acseeks_wisdom(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kalel",
                    "text": "Kalel does not support the needy.",
                    "fol": "\u00acp_2(Kalel)",
                    "str_fol": "\u00acsupports_needy(Kalel)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Kalel",
                    "text": "Kalel is not selfless.",
                    "fol": "\u00acp_3(Kalel)",
                    "str_fol": "\u00acis_selfless(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Kalel either supports the needy or spreads love (but not both), then he is selfless.",
                    "fol": "(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)",
                    "str_fol": "(supports_needy(Kalel) \u2295 spreads_love(Kalel)) \u2192 is_selfless(Kalel)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kalel",
                "text": "Kalel does not spread love.",
                "fol": "\u00acp_14(Kalel)",
                "str_fol": "\u00acspreads_love(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Kalel",
                    "text": "Kalel does not serve the community.",
                    "fol": "\u00acp_1(Kalel)",
                    "str_fol": "\u00acserves_community(Kalel)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Kalel",
                    "text": "Kalel does not spread love.",
                    "fol": "\u00acp_14(Kalel)",
                    "str_fol": "\u00acspreads_love(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who is noble either serves the community or spreads love.",
                    "fol": "\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))",
                    "str_fol": "\u2200x (is_noble(x) \u2192 (serves_community(x) \u2228 spreads_love(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kalel",
                "text": "Kalel is not noble.",
                "fol": "\u00acp_13(Kalel)",
                "str_fol": "\u00acis_noble(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kalel",
                    "text": "Kalel is not noble.",
                    "fol": "\u00acp_13(Kalel)",
                    "str_fol": "\u00acis_noble(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who lives a virtuous life is noble.",
                    "fol": "\u2200x (p_12(x) \u2192 p_13(x))",
                    "str_fol": "\u2200x (lives_virtuously(x) \u2192 is_noble(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kalel",
                "text": "Kalel does not live virtuously.",
                "fol": "\u00acp_12(Kalel)",
                "str_fol": "\u00aclives_virtuously(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Kalel",
                    "text": "Kalel does not seek wisdom.",
                    "fol": "\u00acp_11(Kalel)",
                    "str_fol": "\u00acseeks_wisdom(Kalel)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Kalel",
                    "text": "Kalel does not live virtuously.",
                    "fol": "\u00acp_12(Kalel)",
                    "str_fol": "\u00aclives_virtuously(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Kalel is either humble or seeks wisdom (but not both), then he lives virtuously.",
                    "fol": "(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)",
                    "str_fol": "(humble(Kalel) \u2295 seeks_wisdom(Kalel)) \u2192 lives_virtuously(Kalel)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Kalel",
                "text": "Kalel is not humble.",
                "fol": "\u00acp_9(Kalel)",
                "str_fol": "\u00achumble(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Kalel",
                    "text": "Kalel is not humble.",
                    "fol": "\u00acp_9(Kalel)",
                    "str_fol": "\u00achumble(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If a person is devout, then they are humble and faithful.",
                    "fol": "\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (devout(x) \u2192 (humble(x) \u2227 faithful(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Kalel",
                "text": "Kalel is not devout.",
                "fol": "\u00acp_5(Kalel)",
                "str_fol": "\u00acdevout(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kalel",
                    "text": "Kalel leads his community.",
                    "fol": "p_0(Kalel)",
                    "str_fol": "leads_community(Kalel)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Kalel either leads his community or helps others, but not necessarily both.",
                    "fol": "p_0(Kalel) \u2295 p_8(Kalel)",
                    "str_fol": "leads_community(Kalel) \u2295 helps_others(Kalel)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Kalel",
                "text": "Kalel does not help others.",
                "fol": "\u00acp_8(Kalel)",
                "str_fol": "\u00achelps_others(Kalel)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Kalel",
                    "text": "Kalel does not help others.",
                    "fol": "\u00acp_8(Kalel)",
                    "str_fol": "\u00achelps_others(Kalel)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Kalel is either respected or helps others.",
                    "fol": "p_7(Kalel) \u2228 p_8(Kalel)",
                    "str_fol": "respected(Kalel) \u2228 helps_others(Kalel)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Kalel",
                "text": "Kalel is respected.",
                "fol": "p_7(Kalel)",
                "str_fol": "respected(Kalel)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Kalel",
                    "text": "Kalel is not devout.",
                    "fol": "\u00acp_5(Kalel)",
                    "str_fol": "\u00acdevout(Kalel)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Kalel",
                    "text": "Kalel is respected.",
                    "fol": "p_7(Kalel)",
                    "str_fol": "respected(Kalel)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Kalel is either devout or compassionate (but not both), then he is respected.",
                    "fol": "(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)",
                    "str_fol": "(devout(Kalel) \u2295 compassionate(Kalel)) \u2192 respected(Kalel)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_3(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (p_12(x) \u2192 p_13(x))\n(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_0(Kalel) \u2295 p_8(Kalel)\np_7(Kalel) \u2228 p_8(Kalel)\n(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel)",
                    "-p_2(Kalel)",
                    "-p_3(Kalel)",
                    "-p_1(Kalel)",
                    "p_0(Kalel)",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel))",
                    "(-(p_2(Kalel) <-> p_14(Kalel))) -> p_3(Kalel)",
                    "all x (p_13(x) -> (p_1(x) | p_14(x)))",
                    "all x (p_12(x) -> p_13(x))",
                    "(-(p_9(Kalel) <-> p_11(Kalel))) -> p_12(Kalel)",
                    "all x (p_5(x) -> (p_9(x) & p_10(x)))",
                    "-(p_0(Kalel) <-> p_8(Kalel))",
                    "p_7(Kalel) | p_8(Kalel)",
                    "(-(p_5(Kalel) <-> p_6(Kalel))) -> p_7(Kalel)",
                    "p_0(Kalel) -> p_6(Kalel)"
                ],
                "formulas(goals)": [
                    "p_6(Kalel)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_0(Kalel) \u2192 p_6(Kalel)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (p_12(x) \u2192 p_13(x))\n(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_0(Kalel) \u2295 p_8(Kalel)\np_7(Kalel) \u2228 p_8(Kalel)\n(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)\np_0(Kalel) \u2192 \u00acp_6(Kalel)",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel)",
                    "-p_2(Kalel)",
                    "-p_1(Kalel)",
                    "p_0(Kalel)",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel))",
                    "(-(p_2(Kalel) <-> p_14(Kalel))) -> p_3(Kalel)",
                    "all x (p_13(x) -> (p_1(x) | p_14(x)))",
                    "all x (p_12(x) -> p_13(x))",
                    "(-(p_9(Kalel) <-> p_11(Kalel))) -> p_12(Kalel)",
                    "all x (p_5(x) -> (p_9(x) & p_10(x)))",
                    "-(p_0(Kalel) <-> p_8(Kalel))",
                    "p_7(Kalel) | p_8(Kalel)",
                    "(-(p_5(Kalel) <-> p_6(Kalel))) -> p_7(Kalel)",
                    "p_0(Kalel) -> -p_6(Kalel)"
                ],
                "formulas(goals)": [
                    "-p_6(Kalel)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Kalel)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_0(Kalel) \u2192 \u00acp_6(Kalel)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (p_12(x) \u2192 p_13(x))\n(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_0(Kalel) \u2295 p_8(Kalel)\np_7(Kalel) \u2228 p_8(Kalel)\n(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)\np_7(Kalel) \u2192 p_6(Kalel)",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel)",
                    "-p_2(Kalel)",
                    "-p_1(Kalel)",
                    "p_0(Kalel)",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel))",
                    "(-(p_2(Kalel) <-> p_14(Kalel))) -> p_3(Kalel)",
                    "all x (p_13(x) -> (p_1(x) | p_14(x)))",
                    "all x (p_12(x) -> p_13(x))",
                    "(-(p_9(Kalel) <-> p_11(Kalel))) -> p_12(Kalel)",
                    "all x (p_5(x) -> (p_9(x) & p_10(x)))",
                    "-(p_0(Kalel) <-> p_8(Kalel))",
                    "p_7(Kalel) | p_8(Kalel)",
                    "(-(p_5(Kalel) <-> p_6(Kalel))) -> p_7(Kalel)",
                    "p_7(Kalel) -> p_6(Kalel)"
                ],
                "formulas(goals)": [
                    "p_6(Kalel)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Kalel) \u2192 \u00acp_6(Kalel)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Kalel) \u2192 p_6(Kalel)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n((p_2(Kalel) \u2228 p_14(Kalel)) \u2227 \u00ac(p_2(Kalel) \u2227 p_14(Kalel))) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (\u00acp_13(x) \u2192 \u00acp_12(x))\n((p_9(Kalel) \u2228 p_11(Kalel)) \u2227 \u00ac(p_9(Kalel) \u2227 p_11(Kalel))) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_0(Kalel) \u2295 p_8(Kalel)\np_7(Kalel) \u2228 p_8(Kalel)\n((p_5(Kalel) \u2228 p_6(Kalel)) \u2227 \u00ac(p_5(Kalel) \u2227 p_6(Kalel))) \u2192 p_7(Kalel)\n\u00acp_6(Kalel) \u2192 \u00acp_7(Kalel)\np_7(Kalel)",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel)",
                    "-p_2(Kalel)",
                    "-p_1(Kalel)",
                    "p_0(Kalel)",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel))",
                    "((p_2(Kalel) | p_14(Kalel)) & -(p_2(Kalel) & p_14(Kalel))) -> p_3(Kalel)",
                    "all x (p_13(x) -> (p_1(x) | p_14(x)))",
                    "all x (-p_13(x) -> -p_12(x))",
                    "((p_9(Kalel) | p_11(Kalel)) & -(p_9(Kalel) & p_11(Kalel))) -> p_12(Kalel)",
                    "all x (p_5(x) -> (p_9(x) & p_10(x)))",
                    "-(p_0(Kalel) <-> p_8(Kalel))",
                    "p_7(Kalel) | p_8(Kalel)",
                    "((p_5(Kalel) | p_6(Kalel)) & -(p_5(Kalel) & p_6(Kalel))) -> p_7(Kalel)",
                    "-p_6(Kalel) -> -p_7(Kalel)",
                    "p_7(Kalel)"
                ],
                "formulas(goals)": [
                    "p_6(Kalel)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_2(Kalel) \u2295 p_14(Kalel)) \u2192 p_3(Kalel)",
                    "\u2200x (p_12(x) \u2192 p_13(x))",
                    "(p_9(Kalel) \u2295 p_11(Kalel)) \u2192 p_12(Kalel)",
                    "(p_5(Kalel) \u2295 p_6(Kalel)) \u2192 p_7(Kalel)",
                    "p_7(Kalel) \u2192 p_6(Kalel)"
                ],
                "added_facts": [
                    "p_7(Kalel)"
                ],
                "added_rules": [
                    "((p_2(Kalel) \u2228 p_14(Kalel)) \u2227 \u00ac(p_2(Kalel) \u2227 p_14(Kalel))) \u2192 p_3(Kalel)",
                    "\u2200x (\u00acp_13(x) \u2192 \u00acp_12(x))",
                    "((p_9(Kalel) \u2228 p_11(Kalel)) \u2227 \u00ac(p_9(Kalel) \u2227 p_11(Kalel))) \u2192 p_12(Kalel)",
                    "((p_5(Kalel) \u2228 p_6(Kalel)) \u2227 \u00ac(p_5(Kalel) \u2227 p_6(Kalel))) \u2192 p_7(Kalel)",
                    "\u00acp_6(Kalel) \u2192 \u00acp_7(Kalel)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n((p_2(Kalel) \u2228 p_14(Kalel)) \u2227 \u00ac(p_2(Kalel) \u2227 p_14(Kalel))) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (\u00acp_13(x) \u2192 \u00acp_12(x))\n((p_9(Kalel) \u2228 p_11(Kalel)) \u2227 \u00ac(p_9(Kalel) \u2227 p_11(Kalel))) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\n(p_0(Kalel) \u2228 p_8(Kalel)) \u2227 \u00ac(p_0(Kalel) \u2227 p_8(Kalel))\np_7(Kalel) \u2228 p_8(Kalel)\n((p_5(Kalel) \u2228 p_6(Kalel)) \u2227 \u00ac(p_5(Kalel) \u2227 p_6(Kalel))) \u2192 p_7(Kalel)\n\u00acp_6(Kalel) \u2192 \u00acp_7(Kalel)\np_7(Kalel)\np_7(Kalel) \u2192 p_6(Kalel)\n\u00acp_8(Kalel)",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel).",
                    "-p_2(Kalel).",
                    "-p_1(Kalel).",
                    "p_0(Kalel).",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel)).",
                    "((p_2(Kalel) | p_14(Kalel)) & -(p_2(Kalel) & p_14(Kalel))) -> p_3(Kalel).",
                    "all x (p_13(x) -> (p_1(x) | p_14(x))).",
                    "all x (-p_13(x) -> -p_12(x)).",
                    "((p_9(Kalel) | p_11(Kalel)) & -(p_9(Kalel) & p_11(Kalel))) -> p_12(Kalel).",
                    "all x (p_5(x) -> (p_9(x) & p_10(x))).",
                    "(p_0(Kalel) | p_8(Kalel)) & -(p_0(Kalel) & p_8(Kalel)).",
                    "p_7(Kalel) | p_8(Kalel).",
                    "((p_5(Kalel) | p_6(Kalel)) & -(p_5(Kalel) & p_6(Kalel))) -> p_7(Kalel).",
                    "-p_6(Kalel) -> -p_7(Kalel).",
                    "p_7(Kalel).",
                    "p_7(Kalel) -> p_6(Kalel).",
                    "-p_8(Kalel)."
                ],
                "formulas(goals)": [
                    "p_6(Kalel)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Kalel)"
                ],
                "added_rules": [
                    "p_7(Kalel) \u2192 p_6(Kalel)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n((p_2(Kalel) \u2228 p_14(Kalel)) \u2227 \u00ac(p_2(Kalel) \u2227 p_14(Kalel))) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (\u00acp_13(x) \u2192 \u00acp_12(x))\n((p_9(Kalel) \u2228 p_11(Kalel)) \u2227 \u00ac(p_9(Kalel) \u2227 p_11(Kalel))) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\n(p_0(Kalel) \u2228 p_8(Kalel)) \u2227 \u00ac(p_0(Kalel) \u2227 p_8(Kalel))\np_7(Kalel) \u2228 p_8(Kalel)\n((p_5(Kalel) \u2228 p_6(Kalel)) \u2227 \u00ac(p_5(Kalel) \u2227 p_6(Kalel))) \u2192 p_7(Kalel)\n\u00acp_6(Kalel) \u2192 \u00acp_7(Kalel)\np_7(Kalel)\np_7(Kalel) \u2192 p_6(Kalel)\n\u00acp_8(Kalel)\np_5(Kalel) \u2192 (p_9(Kalel) \u2227 p_10(Kalel))",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel).",
                    "-p_2(Kalel).",
                    "-p_1(Kalel).",
                    "p_0(Kalel).",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel)).",
                    "((p_2(Kalel) | p_14(Kalel)) & -(p_2(Kalel) & p_14(Kalel))) -> p_3(Kalel).",
                    "all x (p_13(x) -> (p_1(x) | p_14(x))).",
                    "all x (-p_13(x) -> -p_12(x)).",
                    "((p_9(Kalel) | p_11(Kalel)) & -(p_9(Kalel) & p_11(Kalel))) -> p_12(Kalel).",
                    "all x (p_5(x) -> (p_9(x) & p_10(x))).",
                    "(p_0(Kalel) | p_8(Kalel)) & -(p_0(Kalel) & p_8(Kalel)).",
                    "p_7(Kalel) | p_8(Kalel).",
                    "((p_5(Kalel) | p_6(Kalel)) & -(p_5(Kalel) & p_6(Kalel))) -> p_7(Kalel).",
                    "-p_6(Kalel) -> -p_7(Kalel).",
                    "p_7(Kalel).",
                    "p_7(Kalel) -> p_6(Kalel).",
                    "-p_8(Kalel).",
                    "p_5(Kalel) -> (p_9(Kalel) & p_10(Kalel))."
                ],
                "formulas(goals)": [
                    "p_6(Kalel)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Kalel) \u2192 (p_9(Kalel) \u2227 p_10(Kalel))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kalel)\n\u00acp_2(Kalel)\n\u00acp_1(Kalel)\np_0(Kalel)\np_11(Kalel) \u2192 (p_15(Kalel) \u2227 p_4(Kalel))\n((p_2(Kalel) \u2228 p_14(Kalel)) \u2227 \u00ac(p_2(Kalel) \u2227 p_14(Kalel))) \u2192 p_3(Kalel)\n\u2200x (p_13(x) \u2192 (p_1(x) \u2228 p_14(x)))\n\u2200x (\u00acp_13(x) \u2192 \u00acp_12(x))\n((p_9(Kalel) \u2228 p_11(Kalel)) \u2227 \u00ac(p_9(Kalel) \u2227 p_11(Kalel))) \u2192 p_12(Kalel)\n\u2200x (p_5(x) \u2192 (p_9(x) \u2227 p_10(x)))\n(p_0(Kalel) \u2228 p_8(Kalel)) \u2227 \u00ac(p_0(Kalel) \u2227 p_8(Kalel))\np_7(Kalel) \u2228 p_8(Kalel)\n((p_5(Kalel) \u2228 p_6(Kalel)) \u2227 \u00ac(p_5(Kalel) \u2227 p_6(Kalel))) \u2192 p_7(Kalel)\np_7(Kalel)\n\u00acp_8(Kalel)\np_5(Kalel) \u2192 (p_9(Kalel) \u2227 p_10(Kalel))\n(p_7(Kalel) \u2227 \u00acp_8(Kalel)) \u2192 \u00acp_6(Kalel)",
            "Initial Goal": "p_6(Kalel)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kalel).",
                    "-p_2(Kalel).",
                    "-p_1(Kalel).",
                    "p_0(Kalel).",
                    "p_11(Kalel) -> (p_15(Kalel) & p_4(Kalel)).",
                    "((p_2(Kalel) | p_14(Kalel)) & -(p_2(Kalel) & p_14(Kalel))) -> p_3(Kalel).",
                    "all x (p_13(x) -> (p_1(x) | p_14(x))).",
                    "all x (-p_13(x) -> -p_12(x)).",
                    "((p_9(Kalel) | p_11(Kalel)) & -(p_9(Kalel) & p_11(Kalel))) -> p_12(Kalel).",
                    "all x (p_5(x) -> (p_9(x) & p_10(x))).",
                    "(p_0(Kalel) | p_8(Kalel)) & -(p_0(Kalel) & p_8(Kalel)).",
                    "p_7(Kalel) | p_8(Kalel).",
                    "((p_5(Kalel) | p_6(Kalel)) & -(p_5(Kalel) & p_6(Kalel))) -> p_7(Kalel).",
                    "p_7(Kalel).",
                    "-p_8(Kalel).",
                    "p_5(Kalel) -> (p_9(Kalel) & p_10(Kalel)).",
                    "(p_7(Kalel) & -p_8(Kalel)) -> -p_6(Kalel)."
                ],
                "formulas(goals)": [
                    "-p_6(Kalel)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_6(Kalel) \u2192 \u00acp_7(Kalel)",
                    "p_7(Kalel) \u2192 p_6(Kalel)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Kalel) \u2227 \u00acp_8(Kalel)) \u2192 \u00acp_6(Kalel)"
                ]
            }
        }
    ]
}