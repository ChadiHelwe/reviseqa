{
    "background_story": "Wrenley was a skilled and fearless falconer who lived in the rugged mountains of Alaska. Among her collection of birds, one stood out - a majestic gyrfalcon named Akira. Wrenley and Akira formed an unbreakable bond, with the bird responding to her every command. Together, they soared through the Arctic skies, hunting and exploring the vast wilderness. Wrenley's deep understanding of the gyrfalcon's nature and her patience had earned Akira's trust, making their partnership a marvel to behold. As news of their exploits spread, people would come from afar to witness the incredible duo in action, mesmerized by the speed and precision of the gyrfalcon and the gentle yet firm command of Wrenley.",
    "predicates": [
        {
            "id": 0,
            "name": "understands_nature"
        },
        {
            "id": 1,
            "name": "leads_confidently"
        },
        {
            "id": 2,
            "name": "is_innovative"
        },
        {
            "id": 3,
            "name": "handles_animals"
        },
        {
            "id": 4,
            "name": "trains_birds"
        },
        {
            "id": 5,
            "name": "motivates_teams"
        },
        {
            "id": 6,
            "name": "is_charismatic"
        },
        {
            "id": 7,
            "name": "is_confident"
        },
        {
            "id": 8,
            "name": "skilled_falconer"
        },
        {
            "id": 9,
            "name": "form_strong_bond"
        },
        {
            "id": 10,
            "name": "attract_admiration"
        },
        {
            "id": 11,
            "name": "gains_respect"
        },
        {
            "id": 12,
            "name": "has_expertise"
        },
        {
            "id": 13,
            "name": "earns_trust"
        },
        {
            "id": 14,
            "name": "is_experienced"
        },
        {
            "id": 15,
            "name": "builds_rapport"
        },
        {
            "id": 16,
            "name": "inspires_others"
        },
        {
            "id": 17,
            "name": "patient_person"
        },
        {
            "id": 18,
            "name": "values_loyalty"
        },
        {
            "id": 19,
            "name": "is_disciplined"
        },
        {
            "id": 20,
            "name": "is_passionate"
        },
        {
            "id": 21,
            "name": "shows_empathy"
        },
        {
            "id": 22,
            "name": "demonstrates_patience"
        },
        {
            "id": 23,
            "name": "masters_hunting"
        },
        {
            "id": 24,
            "name": "tames_wildlife"
        },
        {
            "id": 25,
            "name": "is_honest"
        },
        {
            "id": 26,
            "name": "learns_quickly"
        },
        {
            "id": 27,
            "name": "has_knowledge"
        },
        {
            "id": 28,
            "name": "leads_team"
        },
        {
            "id": 29,
            "name": "is_empathic"
        }
    ],
    "subject_name": "Wrenley",
    "subject_category": "human",
    "keyword": "gyrfalcon",
    "all_facts": [
        {
            "id": 0,
            "subject": "Wrenley",
            "text": "Wrenley understands nature.",
            "fol": "p_0(Wrenley)",
            "str_fol": "understands_nature(Wrenley)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Wrenley",
            "text": "Wrenley does not lead confidently.",
            "fol": "\u00acp_1(Wrenley)",
            "str_fol": "\u00acleads_confidently(Wrenley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Wrenley",
            "text": "Wrenley is innovative.",
            "fol": "p_2(Wrenley)",
            "str_fol": "is_innovative(Wrenley)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Wrenley",
            "text": "Wrenley handles animals.",
            "fol": "p_3(Wrenley)",
            "str_fol": "handles_animals(Wrenley)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Wrenley",
            "text": "Wrenley does not train birds.",
            "fol": "\u00acp_4(Wrenley)",
            "str_fol": "\u00actrains_birds(Wrenley)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Wrenley",
            "text": "Wrenley motivates teams.",
            "fol": "p_5(Wrenley)",
            "str_fol": "motivates_teams(Wrenley)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Wrenley",
            "text": "Wrenley is not charismatic.",
            "fol": "\u00acp_6(Wrenley)",
            "str_fol": "\u00acis_charismatic(Wrenley)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Wrenley",
            "text": "Wrenley is not confident.",
            "fol": "\u00acp_7(Wrenley)",
            "str_fol": "\u00acis_confident(Wrenley)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Wrenley",
            "text": "Wrenley does not build rapport.",
            "fol": "\u00acp_15(Wrenley)",
            "str_fol": "\u00acbuilds_rapport(Wrenley)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Wrenley",
            "text": "Wrenley inspires others.",
            "fol": "p_16(Wrenley)",
            "str_fol": "inspires_others(Wrenley)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Wrenley",
            "text": "Wrenley is experienced.",
            "fol": "p_14(Wrenley)",
            "str_fol": "is_experienced(Wrenley)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Wrenley",
            "text": "Wrenley does not have expertise in falconry.",
            "fol": "\u00acp_12(Wrenley)",
            "str_fol": "\u00achas_expertise(Wrenley)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Wrenley",
            "text": "Wrenley does not gain respect.",
            "fol": "\u00acp_11(Wrenley)",
            "str_fol": "\u00acgains_respect(Wrenley)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Wrenley",
            "text": "Wrenley attracts admiration from others.",
            "fol": "p_10(Wrenley)",
            "str_fol": "attract_admiration(Wrenley)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Wrenley",
            "text": "Wrenley does not form a strong bond with Akira.",
            "fol": "\u00acp_9(Wrenley)",
            "str_fol": "\u00acform_strong_bond(Wrenley)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Wrenley",
            "text": "Wrenley is not a skilled falconer.",
            "fol": "\u00acp_8(Wrenley)",
            "str_fol": "\u00acskilled_falconer(Wrenley)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Wrenley",
            "text": "Wrenley is not confident.",
            "fol": "\u00acp_7(Wrenley)",
            "str_fol": "\u00acis_confident(Wrenley)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Wrenley",
            "text": "Wrenley motivates teams.",
            "fol": "p_5(Wrenley)",
            "str_fol": "motivates_teams(Wrenley)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Wrenley",
            "text": "Wrenley is not charismatic.",
            "fol": "\u00acp_6(Wrenley)",
            "str_fol": "\u00acis_charismatic(Wrenley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Wrenley",
            "text": "Wrenley handles animals.",
            "fol": "p_3(Wrenley)",
            "str_fol": "handles_animals(Wrenley)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Wrenley",
            "text": "Wrenley does not train birds.",
            "fol": "\u00acp_4(Wrenley)",
            "str_fol": "\u00actrains_birds(Wrenley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Wrenley",
            "text": "Wrenley is innovative.",
            "fol": "p_2(Wrenley)",
            "str_fol": "is_innovative(Wrenley)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Wrenley",
            "text": "Wrenley does not lead confidently.",
            "fol": "\u00acp_1(Wrenley)",
            "str_fol": "\u00acleads_confidently(Wrenley)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Wrenley",
            "text": "Wrenley understands nature.",
            "fol": "p_0(Wrenley)",
            "str_fol": "understands_nature(Wrenley)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Wrenley builds rapport, then she is confident.",
            "fol": "p_15(Wrenley) \u2192 p_7(Wrenley)",
            "str_fol": "builds_rapport(Wrenley) \u2192 is_confident(Wrenley)"
        },
        {
            "id": 7,
            "text": "If Wrenley either inspires others or motivates teams (but not both), then she is charismatic.",
            "fol": "(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)",
            "str_fol": "(inspires_others(Wrenley) \u2295 motivates_teams(Wrenley)) \u2192 is_charismatic(Wrenley)"
        },
        {
            "id": 6,
            "text": "If Wrenley either handles animals or is experienced, then she trains birds.",
            "fol": "(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)",
            "str_fol": "(handles_animals(Wrenley) \u2295 is_experienced(Wrenley)) \u2192 trains_birds(Wrenley)"
        },
        {
            "id": 5,
            "text": "Any person who builds rapport or earns trust can inspire others.",
            "fol": "\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))",
            "str_fol": "\u2200x ((builds_rapport(x) \u2228 earns_trust(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 4,
            "text": "If Wrenley is experienced, then she either has expertise or is innovative, but not both.",
            "fol": "p_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))",
            "str_fol": "is_experienced(Wrenley) \u2192 (has_expertise(Wrenley) \u2295 is_innovative(Wrenley))"
        },
        {
            "id": 3,
            "text": "Anyone who gains respect or earns trust can lead confidently.",
            "fol": "\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((gains_respect(x) \u2228 earns_trust(x)) \u2192 leads_confidently(x))"
        },
        {
            "id": 2,
            "text": "Wrenley either has expertise in falconry or attracts admiration from others, but not both.",
            "fol": "p_10(Wrenley) \u2295 p_12(Wrenley)",
            "str_fol": "attract_admiration(Wrenley) \u2295 has_expertise(Wrenley)"
        },
        {
            "id": 1,
            "text": "If a person understands nature and forms a strong bond, then they gain respect.",
            "fol": "\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((understands_nature(x) \u2227 form_strong_bond(x)) \u2192 gains_respect(x))"
        },
        {
            "id": 0,
            "text": "If Wrenley is a skilled falconer, then she can either form a strong bond with Akira or attract admiration from others, but not both.",
            "fol": "p_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))",
            "str_fol": "skilled_falconer(Wrenley) \u2192 (form_strong_bond(Wrenley) \u2295 attract_admiration(Wrenley))"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Wrenley",
            "text": "Wrenley is not confident.",
            "fol": "\u00acp_7(Wrenley)",
            "str_fol": "\u00acis_confident(Wrenley)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Wrenley",
            "text": "Wrenley motivates teams.",
            "fol": "p_5(Wrenley)",
            "str_fol": "motivates_teams(Wrenley)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Wrenley",
            "text": "Wrenley is not charismatic.",
            "fol": "\u00acp_6(Wrenley)",
            "str_fol": "\u00acis_charismatic(Wrenley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Wrenley",
            "text": "Wrenley handles animals.",
            "fol": "p_3(Wrenley)",
            "str_fol": "handles_animals(Wrenley)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Wrenley",
            "text": "Wrenley does not train birds.",
            "fol": "\u00acp_4(Wrenley)",
            "str_fol": "\u00actrains_birds(Wrenley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Wrenley",
            "text": "Wrenley is innovative.",
            "fol": "p_2(Wrenley)",
            "str_fol": "is_innovative(Wrenley)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Wrenley",
            "text": "Wrenley does not lead confidently.",
            "fol": "\u00acp_1(Wrenley)",
            "str_fol": "\u00acleads_confidently(Wrenley)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Wrenley",
            "text": "Wrenley understands nature.",
            "fol": "p_0(Wrenley)",
            "str_fol": "understands_nature(Wrenley)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Wrenley builds rapport, then she is confident.",
            "fol": "p_15(Wrenley) \u2192 p_7(Wrenley)",
            "str_fol": "builds_rapport(Wrenley) \u2192 is_confident(Wrenley)"
        },
        {
            "id": 7,
            "text": "If Wrenley either inspires others or motivates teams (but not both), then she is charismatic.",
            "fol": "(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)",
            "str_fol": "(inspires_others(Wrenley) \u2295 motivates_teams(Wrenley)) \u2192 is_charismatic(Wrenley)"
        },
        {
            "id": 6,
            "text": "If Wrenley either handles animals or is experienced, then she trains birds.",
            "fol": "(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)",
            "str_fol": "(handles_animals(Wrenley) \u2295 is_experienced(Wrenley)) \u2192 trains_birds(Wrenley)"
        },
        {
            "id": 5,
            "text": "Any person who builds rapport or earns trust can inspire others.",
            "fol": "\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))",
            "str_fol": "\u2200x ((builds_rapport(x) \u2228 earns_trust(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 4,
            "text": "If Wrenley is experienced, then she either has expertise or is innovative, but not both.",
            "fol": "p_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))",
            "str_fol": "is_experienced(Wrenley) \u2192 (has_expertise(Wrenley) \u2295 is_innovative(Wrenley))"
        },
        {
            "id": 3,
            "text": "Anyone who gains respect or earns trust can lead confidently.",
            "fol": "\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((gains_respect(x) \u2228 earns_trust(x)) \u2192 leads_confidently(x))"
        },
        {
            "id": 2,
            "text": "Wrenley either has expertise in falconry or attracts admiration from others, but not both.",
            "fol": "p_10(Wrenley) \u2295 p_12(Wrenley)",
            "str_fol": "attract_admiration(Wrenley) \u2295 has_expertise(Wrenley)"
        },
        {
            "id": 1,
            "text": "If a person understands nature and forms a strong bond, then they gain respect.",
            "fol": "\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((understands_nature(x) \u2227 form_strong_bond(x)) \u2192 gains_respect(x))"
        },
        {
            "id": 0,
            "text": "If Wrenley is a skilled falconer, then she can either form a strong bond with Akira or attract admiration from others, but not both.",
            "fol": "p_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))",
            "str_fol": "skilled_falconer(Wrenley) \u2192 (form_strong_bond(Wrenley) \u2295 attract_admiration(Wrenley))"
        }
    ],
    "context_fol": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\n\u00acp_1(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\np_10(Wrenley) \u2295 p_12(Wrenley)\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))",
    "conclusion": {
        "id": 15,
        "subject": "Wrenley",
        "text": "Wrenley is not a skilled falconer.",
        "fol": "\u00acp_8(Wrenley)",
        "str_fol": "\u00acskilled_falconer(Wrenley)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_8(Wrenley)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Wrenley",
                    "text": "Wrenley is not confident.",
                    "fol": "\u00acp_7(Wrenley)",
                    "str_fol": "\u00acis_confident(Wrenley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Wrenley builds rapport, then she is confident.",
                    "fol": "p_15(Wrenley) \u2192 p_7(Wrenley)",
                    "str_fol": "builds_rapport(Wrenley) \u2192 is_confident(Wrenley)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Wrenley",
                "text": "Wrenley does not build rapport.",
                "fol": "\u00acp_15(Wrenley)",
                "str_fol": "\u00acbuilds_rapport(Wrenley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Wrenley",
                    "text": "Wrenley motivates teams.",
                    "fol": "p_5(Wrenley)",
                    "str_fol": "motivates_teams(Wrenley)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Wrenley",
                    "text": "Wrenley is not charismatic.",
                    "fol": "\u00acp_6(Wrenley)",
                    "str_fol": "\u00acis_charismatic(Wrenley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Wrenley either inspires others or motivates teams (but not both), then she is charismatic.",
                    "fol": "(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)",
                    "str_fol": "(inspires_others(Wrenley) \u2295 motivates_teams(Wrenley)) \u2192 is_charismatic(Wrenley)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Wrenley",
                "text": "Wrenley inspires others.",
                "fol": "p_16(Wrenley)",
                "str_fol": "inspires_others(Wrenley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Wrenley",
                    "text": "Wrenley handles animals.",
                    "fol": "p_3(Wrenley)",
                    "str_fol": "handles_animals(Wrenley)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Wrenley",
                    "text": "Wrenley does not train birds.",
                    "fol": "\u00acp_4(Wrenley)",
                    "str_fol": "\u00actrains_birds(Wrenley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Wrenley either handles animals or is experienced, then she trains birds.",
                    "fol": "(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)",
                    "str_fol": "(handles_animals(Wrenley) \u2295 is_experienced(Wrenley)) \u2192 trains_birds(Wrenley)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Wrenley",
                "text": "Wrenley is experienced.",
                "fol": "p_14(Wrenley)",
                "str_fol": "is_experienced(Wrenley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Wrenley",
                    "text": "Wrenley does not build rapport.",
                    "fol": "\u00acp_15(Wrenley)",
                    "str_fol": "\u00acbuilds_rapport(Wrenley)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Wrenley",
                    "text": "Wrenley inspires others.",
                    "fol": "p_16(Wrenley)",
                    "str_fol": "inspires_others(Wrenley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Any person who builds rapport or earns trust can inspire others.",
                    "fol": "\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))",
                    "str_fol": "\u2200x ((builds_rapport(x) \u2228 earns_trust(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Wrenley",
                    "text": "Wrenley is experienced.",
                    "fol": "p_14(Wrenley)",
                    "str_fol": "is_experienced(Wrenley)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Wrenley",
                    "text": "Wrenley is innovative.",
                    "fol": "p_2(Wrenley)",
                    "str_fol": "is_innovative(Wrenley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Wrenley is experienced, then she either has expertise or is innovative, but not both.",
                    "fol": "p_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))",
                    "str_fol": "is_experienced(Wrenley) \u2192 (has_expertise(Wrenley) \u2295 is_innovative(Wrenley))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Wrenley",
                "text": "Wrenley does not have expertise in falconry.",
                "fol": "\u00acp_12(Wrenley)",
                "str_fol": "\u00achas_expertise(Wrenley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Wrenley",
                    "text": "Wrenley does not lead confidently.",
                    "fol": "\u00acp_1(Wrenley)",
                    "str_fol": "\u00acleads_confidently(Wrenley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who gains respect or earns trust can lead confidently.",
                    "fol": "\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((gains_respect(x) \u2228 earns_trust(x)) \u2192 leads_confidently(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Wrenley",
                "text": "Wrenley does not gain respect.",
                "fol": "\u00acp_11(Wrenley)",
                "str_fol": "\u00acgains_respect(Wrenley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Wrenley",
                    "text": "Wrenley does not have expertise in falconry.",
                    "fol": "\u00acp_12(Wrenley)",
                    "str_fol": "\u00achas_expertise(Wrenley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Wrenley either has expertise in falconry or attracts admiration from others, but not both.",
                    "fol": "p_10(Wrenley) \u2295 p_12(Wrenley)",
                    "str_fol": "attract_admiration(Wrenley) \u2295 has_expertise(Wrenley)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Wrenley",
                "text": "Wrenley attracts admiration from others.",
                "fol": "p_10(Wrenley)",
                "str_fol": "attract_admiration(Wrenley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Wrenley",
                    "text": "Wrenley understands nature.",
                    "fol": "p_0(Wrenley)",
                    "str_fol": "understands_nature(Wrenley)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Wrenley",
                    "text": "Wrenley does not gain respect.",
                    "fol": "\u00acp_11(Wrenley)",
                    "str_fol": "\u00acgains_respect(Wrenley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If a person understands nature and forms a strong bond, then they gain respect.",
                    "fol": "\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((understands_nature(x) \u2227 form_strong_bond(x)) \u2192 gains_respect(x))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Wrenley",
                "text": "Wrenley does not form a strong bond with Akira.",
                "fol": "\u00acp_9(Wrenley)",
                "str_fol": "\u00acform_strong_bond(Wrenley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Wrenley",
                    "text": "Wrenley does not form a strong bond with Akira.",
                    "fol": "\u00acp_9(Wrenley)",
                    "str_fol": "\u00acform_strong_bond(Wrenley)",
                    "negation": true
                },
                {
                    "id": 13,
                    "subject": "Wrenley",
                    "text": "Wrenley attracts admiration from others.",
                    "fol": "p_10(Wrenley)",
                    "str_fol": "attract_admiration(Wrenley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Wrenley is a skilled falconer, then she can either form a strong bond with Akira or attract admiration from others, but not both.",
                    "fol": "p_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))",
                    "str_fol": "skilled_falconer(Wrenley) \u2192 (form_strong_bond(Wrenley) \u2295 attract_admiration(Wrenley))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\n\u00acp_1(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\np_10(Wrenley) \u2295 p_12(Wrenley)\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley)",
                    "p_5(Wrenley)",
                    "-p_6(Wrenley)",
                    "p_3(Wrenley)",
                    "-p_4(Wrenley)",
                    "p_2(Wrenley)",
                    "-p_1(Wrenley)",
                    "p_0(Wrenley)",
                    "p_15(Wrenley) -> p_7(Wrenley)",
                    "(-(p_16(Wrenley) <-> p_5(Wrenley))) -> p_6(Wrenley)",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley)",
                    "(all x ((p_15(x) | p_13(x)) -> p_16(x)))",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley)))",
                    "(all x ((p_11(x) | p_13(x)) -> p_1(x)))",
                    "-(p_10(Wrenley) <-> p_12(Wrenley))",
                    "(all x ((p_0(x) & p_9(x)) -> p_11(x)))",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley)))",
                    "p_8(Wrenley) -> p_7(Wrenley)"
                ],
                "formulas(goals)": [
                    "-p_8(Wrenley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Wrenley) \u2192 p_7(Wrenley)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\np_10(Wrenley) \u2295 p_12(Wrenley)\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))\n(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley).",
                    "p_5(Wrenley).",
                    "-p_6(Wrenley).",
                    "p_3(Wrenley).",
                    "-p_4(Wrenley).",
                    "p_2(Wrenley).",
                    "p_0(Wrenley).",
                    "p_15(Wrenley) -> p_7(Wrenley).",
                    "(-(p_16(Wrenley) <-> p_5(Wrenley))) -> p_6(Wrenley).",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley).",
                    "(all x ((p_15(x) | p_13(x)) -> p_16(x))).",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley))).",
                    "(all x ((p_11(x) | p_13(x)) -> p_1(x))).",
                    "-(p_10(Wrenley) <-> p_12(Wrenley)).",
                    "(all x ((p_0(x) & p_9(x)) -> p_11(x))).",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley))).",
                    "((p_5(Wrenley) & p_3(Wrenley)) -> p_8(Wrenley))."
                ],
                "formulas(goals)": [
                    "p_8(Wrenley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Wrenley)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\np_10(Wrenley) \u2295 p_12(Wrenley)\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))\n(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)\np_8(Wrenley)\np_5(Wrenley) \u2192 (p_3(Wrenley) \u2192 p_8(Wrenley))\n\u00acp_6(Wrenley) \u2192 \u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))\np_14(Wrenley)\n\u00acp_12(Wrenley)\np_10(Wrenley)",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley)",
                    "p_5(Wrenley)",
                    "-p_6(Wrenley)",
                    "p_3(Wrenley)",
                    "-p_4(Wrenley)",
                    "p_2(Wrenley)",
                    "p_0(Wrenley)",
                    "p_15(Wrenley) -> p_7(Wrenley)",
                    "(-(p_16(Wrenley) <-> p_5(Wrenley))) -> p_6(Wrenley)",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley)",
                    "all x ((p_15(x) | p_13(x)) -> p_16(x))",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley)))",
                    "all x ((p_11(x) | p_13(x)) -> p_1(x))",
                    "-(p_10(Wrenley) <-> p_12(Wrenley))",
                    "all x ((p_0(x) & p_9(x)) -> p_11(x))",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley)))",
                    "(p_5(Wrenley) & p_3(Wrenley)) -> p_8(Wrenley)",
                    "p_8(Wrenley)",
                    "p_5(Wrenley) -> (p_3(Wrenley) -> p_8(Wrenley))",
                    "-p_6(Wrenley) -> (p_16(Wrenley) <-> p_5(Wrenley))",
                    "p_14(Wrenley)",
                    "-p_12(Wrenley)",
                    "p_10(Wrenley)"
                ],
                "formulas(goals)": [
                    "-(-p_8(Wrenley))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Wrenley)",
                    "p_14(Wrenley)",
                    "\u00acp_12(Wrenley)",
                    "p_10(Wrenley)"
                ],
                "added_rules": [
                    "p_5(Wrenley) \u2192 (p_3(Wrenley) \u2192 p_8(Wrenley))",
                    "\u00acp_6(Wrenley) \u2192 \u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\np_10(Wrenley) \u2295 p_12(Wrenley)\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))\n(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)\np_8(Wrenley)\np_5(Wrenley) \u2192 (p_3(Wrenley) \u2192 p_8(Wrenley))\n\u00acp_6(Wrenley) \u2192 \u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))\np_14(Wrenley)\n\u00acp_12(Wrenley)\np_10(Wrenley)\np_8(Wrenley) \u2228 \u00acp_8(Wrenley)\n(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2192 \u00acp_3(Wrenley)\np_16(Wrenley)",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley)",
                    "p_5(Wrenley)",
                    "-p_6(Wrenley)",
                    "p_3(Wrenley)",
                    "-p_4(Wrenley)",
                    "p_2(Wrenley)",
                    "p_0(Wrenley)",
                    "p_15(Wrenley) -> p_7(Wrenley)",
                    "(-(p_16(Wrenley) <-> p_5(Wrenley))) -> p_6(Wrenley)",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley)",
                    "all x ((p_15(x) | p_13(x)) -> p_16(x))",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley)))",
                    "all x ((p_11(x) | p_13(x)) -> p_1(x))",
                    "-(p_10(Wrenley) <-> p_12(Wrenley))",
                    "all x ((p_0(x) & p_9(x)) -> p_11(x))",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley)))",
                    "(p_5(Wrenley) & p_3(Wrenley)) -> p_8(Wrenley)",
                    "p_8(Wrenley)",
                    "p_5(Wrenley) -> (p_3(Wrenley) -> p_8(Wrenley))",
                    "-p_6(Wrenley) -> -(-(p_16(Wrenley) <-> p_5(Wrenley)))",
                    "p_14(Wrenley)",
                    "-p_12(Wrenley)",
                    "p_10(Wrenley)",
                    "p_8(Wrenley) | -p_8(Wrenley)",
                    "(p_5(Wrenley) & -p_8(Wrenley)) -> -p_3(Wrenley)",
                    "p_16(Wrenley)"
                ],
                "formulas(goals)": [
                    "p_8(Wrenley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_16(Wrenley)"
                ],
                "added_rules": [
                    "p_8(Wrenley) \u2228 \u00acp_8(Wrenley)",
                    "(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2192 \u00acp_3(Wrenley)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\np_10(Wrenley) \u2295 p_12(Wrenley)\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))\n(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)\np_8(Wrenley)\np_5(Wrenley) \u2192 (p_3(Wrenley) \u2192 p_8(Wrenley))\n\u00acp_6(Wrenley) \u2192 \u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))\np_14(Wrenley)\n\u00acp_12(Wrenley)\np_10(Wrenley)\np_8(Wrenley) \u2228 \u00acp_8(Wrenley)\n(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2192 \u00acp_3(Wrenley)\np_16(Wrenley)\np_8(Wrenley) \u2192 p_8(Wrenley)\np_5(Wrenley) \u2227 p_2(Wrenley)\np_14(Wrenley) \u2227 \u00acp_12(Wrenley)\np_10(Wrenley) \u2228 p_12(Wrenley)",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley)",
                    "p_5(Wrenley)",
                    "-p_6(Wrenley)",
                    "p_3(Wrenley)",
                    "-p_4(Wrenley)",
                    "p_2(Wrenley)",
                    "p_0(Wrenley)",
                    "p_15(Wrenley) -> p_7(Wrenley)",
                    "(-(p_16(Wrenley) <-> p_5(Wrenley))) -> p_6(Wrenley)",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley)",
                    "all x ((p_15(x) | p_13(x)) -> p_16(x))",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley)))",
                    "all x ((p_11(x) | p_13(x)) -> p_1(x))",
                    "-(p_10(Wrenley) <-> p_12(Wrenley))",
                    "all x ((p_0(x) & p_9(x)) -> p_11(x))",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley)))",
                    "(p_5(Wrenley) & p_3(Wrenley)) -> p_8(Wrenley)",
                    "p_8(Wrenley)",
                    "p_5(Wrenley) -> (p_3(Wrenley) -> p_8(Wrenley))",
                    "-p_6(Wrenley) -> -(-(p_16(Wrenley) <-> p_5(Wrenley)))",
                    "p_14(Wrenley)",
                    "-p_12(Wrenley)",
                    "p_10(Wrenley)",
                    "p_8(Wrenley) | -p_8(Wrenley)",
                    "(p_5(Wrenley) & -p_8(Wrenley)) -> -p_3(Wrenley)",
                    "p_16(Wrenley)",
                    "p_8(Wrenley) -> p_8(Wrenley)",
                    "p_5(Wrenley) & p_2(Wrenley)",
                    "p_14(Wrenley) & -p_12(Wrenley)",
                    "p_10(Wrenley) | p_12(Wrenley)"
                ],
                "formulas(goals)": [
                    "-(-p_8(Wrenley))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Wrenley) \u2227 p_2(Wrenley)",
                    "p_14(Wrenley) \u2227 \u00acp_12(Wrenley)",
                    "p_10(Wrenley) \u2228 p_12(Wrenley)"
                ],
                "added_rules": [
                    "p_8(Wrenley) \u2192 p_8(Wrenley)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Wrenley)\np_5(Wrenley)\n\u00acp_6(Wrenley)\np_3(Wrenley)\n\u00acp_4(Wrenley)\np_2(Wrenley)\np_0(Wrenley)\np_15(Wrenley) \u2192 p_7(Wrenley)\n((p_16(Wrenley) \u2228 p_5(Wrenley)) \u2227 \u00ac(p_16(Wrenley) \u2227 p_5(Wrenley))) \u2192 p_6(Wrenley)\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley)\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x))\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley))\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x))\n(p_10(Wrenley) \u2228 p_12(Wrenley)) \u2227 \u00ac(p_10(Wrenley) \u2227 p_12(Wrenley))\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x))\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley))\n(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)\np_8(Wrenley)\np_5(Wrenley) \u2192 (p_3(Wrenley) \u2192 p_8(Wrenley))\n\u00acp_6(Wrenley) \u2192 \u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))\np_14(Wrenley)\n\u00acp_12(Wrenley)\np_10(Wrenley)\np_8(Wrenley) \u2228 \u00acp_8(Wrenley)\n(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2192 \u00acp_3(Wrenley)\np_16(Wrenley)\np_8(Wrenley) \u2192 p_8(Wrenley)\np_5(Wrenley) \u2227 p_2(Wrenley)\np_14(Wrenley) \u2227 \u00acp_12(Wrenley)\np_10(Wrenley) \u2228 p_12(Wrenley)\n\u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))\np_12(Wrenley) \u2295 p_2(Wrenley)\n\u00ac(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2228 \u00acp_3(Wrenley)\np_9(Wrenley) \u2295 p_10(Wrenley)",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley)",
                    "p_5(Wrenley)",
                    "-p_6(Wrenley)",
                    "p_3(Wrenley)",
                    "-p_4(Wrenley)",
                    "p_2(Wrenley)",
                    "p_0(Wrenley)",
                    "p_15(Wrenley) -> p_7(Wrenley)",
                    "((p_16(Wrenley) | p_5(Wrenley)) & -(p_16(Wrenley) & p_5(Wrenley))) -> p_6(Wrenley)",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley)",
                    "all x ((p_15(x) | p_13(x)) -> p_16(x))",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley)))",
                    "all x ((p_11(x) | p_13(x)) -> p_1(x))",
                    "(p_10(Wrenley) | p_12(Wrenley)) & -(p_10(Wrenley) & p_12(Wrenley))",
                    "all x ((p_0(x) & p_9(x)) -> p_11(x))",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley)))",
                    "(p_5(Wrenley) & p_3(Wrenley)) -> p_8(Wrenley)",
                    "p_8(Wrenley)",
                    "p_5(Wrenley) -> (p_3(Wrenley) -> p_8(Wrenley))",
                    "-p_6(Wrenley) -> -(-(p_16(Wrenley) <-> p_5(Wrenley)))",
                    "p_14(Wrenley)",
                    "-p_12(Wrenley)",
                    "p_10(Wrenley)",
                    "p_8(Wrenley) | -p_8(Wrenley)",
                    "(p_5(Wrenley) & -p_8(Wrenley)) -> -p_3(Wrenley)",
                    "p_16(Wrenley)",
                    "p_8(Wrenley) -> p_8(Wrenley)",
                    "p_5(Wrenley) & p_2(Wrenley)",
                    "p_14(Wrenley) & -p_12(Wrenley)",
                    "p_10(Wrenley) | p_12(Wrenley)",
                    "-(-(p_16(Wrenley) <-> p_5(Wrenley)))",
                    "-(p_12(Wrenley) <-> p_2(Wrenley))",
                    "-(p_5(Wrenley) & -p_8(Wrenley)) | -p_3(Wrenley)",
                    "-(p_9(Wrenley) <-> p_10(Wrenley))"
                ],
                "formulas(goals)": [
                    "p_8(Wrenley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_10(Wrenley) \u2295 p_12(Wrenley)"
                ],
                "removed_rules": [
                    "(p_16(Wrenley) \u2295 p_5(Wrenley)) \u2192 p_6(Wrenley)"
                ],
                "added_facts": [
                    "(p_10(Wrenley) \u2228 p_12(Wrenley)) \u2227 \u00ac(p_10(Wrenley) \u2227 p_12(Wrenley))",
                    "\u00ac(p_16(Wrenley) \u2295 p_5(Wrenley))",
                    "p_12(Wrenley) \u2295 p_2(Wrenley)",
                    "\u00ac(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2228 \u00acp_3(Wrenley)",
                    "p_9(Wrenley) \u2295 p_10(Wrenley)"
                ],
                "added_rules": [
                    "((p_16(Wrenley) \u2228 p_5(Wrenley)) \u2227 \u00ac(p_16(Wrenley) \u2227 p_5(Wrenley))) \u2192 p_6(Wrenley)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Wrenley).\np_5(Wrenley).\n\u00acp_6(Wrenley).\np_3(Wrenley).\n\u00acp_4(Wrenley).\np_2(Wrenley).\np_0(Wrenley).\np_15(Wrenley) \u2192 p_7(Wrenley).\n((p_16(Wrenley) \u2228 p_5(Wrenley)) \u2227 \u00ac(p_16(Wrenley) \u2227 p_5(Wrenley))) \u2192 p_6(Wrenley).\n(p_3(Wrenley) \u2295 p_14(Wrenley)) \u2192 p_4(Wrenley).\n\u2200x ((p_15(x) \u2228 p_13(x)) \u2192 p_16(x)).\np_14(Wrenley) \u2192 (p_12(Wrenley) \u2295 p_2(Wrenley)).\n\u2200x ((p_11(x) \u2228 p_13(x)) \u2192 p_1(x)).\n(p_10(Wrenley) \u2228 p_12(Wrenley)) \u2227 \u00ac(p_10(Wrenley) \u2227 p_12(Wrenley)).\n\u2200x ((p_0(x) \u2227 p_9(x)) \u2192 p_11(x)).\np_8(Wrenley) \u2192 (p_9(Wrenley) \u2295 p_10(Wrenley)).\n\u00acp_6(Wrenley) \u2192 \u00ac(p_16(Wrenley) \u2295 p_5(Wrenley)).\np_14(Wrenley).\n\u00acp_12(Wrenley).\np_10(Wrenley).\np_8(Wrenley) \u2228 \u00acp_8(Wrenley).\n(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2192 \u00acp_3(Wrenley).\np_16(Wrenley).\np_8(Wrenley) \u2192 p_8(Wrenley).\np_5(Wrenley) \u2227 p_2(Wrenley).\np_14(Wrenley) \u2227 \u00acp_12(Wrenley).\np_10(Wrenley) \u2228 p_12(Wrenley).\n\u00ac(p_16(Wrenley) \u2295 p_5(Wrenley)).\np_12(Wrenley) \u2295 p_2(Wrenley).\n\u00ac(p_5(Wrenley) \u2227 \u00acp_8(Wrenley)) \u2228 \u00acp_3(Wrenley).\np_9(Wrenley) \u2295 p_10(Wrenley).\np_10(Wrenley) \u2192 \u00acp_8(Wrenley).",
            "Initial Goal": "\u00acp_8(Wrenley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Wrenley).",
                    "p_5(Wrenley).",
                    "-p_6(Wrenley).",
                    "p_3(Wrenley).",
                    "-p_4(Wrenley).",
                    "p_2(Wrenley).",
                    "p_0(Wrenley).",
                    "p_15(Wrenley) -> p_7(Wrenley).",
                    "((p_16(Wrenley) | p_5(Wrenley)) & -(p_16(Wrenley) & p_5(Wrenley))) -> p_6(Wrenley).",
                    "(-(p_3(Wrenley) <-> p_14(Wrenley))) -> p_4(Wrenley).",
                    "(all x ((p_15(x) | p_13(x)) -> p_16(x))).",
                    "p_14(Wrenley) -> (-(p_12(Wrenley) <-> p_2(Wrenley))).",
                    "(all x ((p_11(x) | p_13(x)) -> p_1(x))).",
                    "(p_10(Wrenley) | p_12(Wrenley)) & (-(p_10(Wrenley) & p_12(Wrenley))).",
                    "(all x ((p_0(x) & p_9(x)) -> p_11(x))).",
                    "p_8(Wrenley) -> (-(p_9(Wrenley) <-> p_10(Wrenley))).",
                    "-p_6(Wrenley) -> (-(p_16(Wrenley) <-> p_5(Wrenley))).",
                    "p_14(Wrenley).",
                    "-p_12(Wrenley).",
                    "p_10(Wrenley).",
                    "p_8(Wrenley) | -p_8(Wrenley).",
                    "(p_5(Wrenley) & -p_8(Wrenley)) -> -p_3(Wrenley).",
                    "p_16(Wrenley).",
                    "p_8(Wrenley) -> p_8(Wrenley).",
                    "p_5(Wrenley) & p_2(Wrenley).",
                    "p_14(Wrenley) & -p_12(Wrenley).",
                    "p_10(Wrenley) | p_12(Wrenley).",
                    "(-(p_16(Wrenley) <-> p_5(Wrenley))).",
                    "(-(p_12(Wrenley) <-> p_2(Wrenley))).",
                    "(-(p_5(Wrenley) & -p_8(Wrenley))) | -p_3(Wrenley).",
                    "(-(p_9(Wrenley) <-> p_10(Wrenley))).",
                    "p_10(Wrenley) -> -p_8(Wrenley)."
                ],
                "formulas(goals)": [
                    "-p_8(Wrenley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_8(Wrenley)"
                ],
                "removed_rules": [
                    "(p_5(Wrenley) \u2227 p_3(Wrenley)) \u2192 p_8(Wrenley)",
                    "p_5(Wrenley) \u2192 (p_3(Wrenley) \u2192 p_8(Wrenley))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Wrenley) \u2192 \u00acp_8(Wrenley)"
                ]
            }
        }
    ]
}