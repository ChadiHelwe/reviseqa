{
    "background_story": "Koen, a vibrant and energetic young boy, had always been full of life. However, his world was turned upside down when he was diagnosed with bronchopneumonia, a severe inflammation of the lungs. The illness left him weak and struggling to breathe, forcing him to spend weeks in the hospital. Despite the challenges, Koen's spirit remained unbroken. With the support of his loving family and the dedicated care of his medical team, he slowly began to recover. The road to full health was long and arduous, but Koen's determination and the love surrounding him helped him overcome the disease. His experience with bronchopneumonia taught Koen the value of resilience and the importance of appreciating every moment of good health.",
    "predicates": [
        {
            "id": 0,
            "name": "healthy"
        },
        {
            "id": 1,
            "name": "takes_medicine"
        },
        {
            "id": 2,
            "name": "feels_better"
        },
        {
            "id": 3,
            "name": "has_fever"
        },
        {
            "id": 4,
            "name": "needs_care"
        },
        {
            "id": 5,
            "name": "stay_positive"
        },
        {
            "id": 6,
            "name": "meets_obstacles"
        },
        {
            "id": 7,
            "name": "experiences_hardship"
        },
        {
            "id": 8,
            "name": "resilient"
        },
        {
            "id": 9,
            "name": "gets_support"
        },
        {
            "id": 10,
            "name": "recovers_fast"
        },
        {
            "id": 11,
            "name": "fights_disease"
        },
        {
            "id": 12,
            "name": "is_ill"
        },
        {
            "id": 13,
            "name": "has_remission"
        },
        {
            "id": 14,
            "name": "receives_treatment"
        },
        {
            "id": 15,
            "name": "overcome_challenges"
        },
        {
            "id": 16,
            "name": "faces_setbacks"
        },
        {
            "id": 17,
            "name": "faces_adversity"
        },
        {
            "id": 18,
            "name": "bounces_back"
        },
        {
            "id": 19,
            "name": "heals_quickly"
        },
        {
            "id": 20,
            "name": "battles_sickness"
        },
        {
            "id": 21,
            "name": "rests_well"
        },
        {
            "id": 22,
            "name": "eats_nutritious"
        },
        {
            "id": 23,
            "name": "has_infection"
        },
        {
            "id": 24,
            "name": "feels_weak"
        },
        {
            "id": 25,
            "name": "is_hospitalized"
        },
        {
            "id": 26,
            "name": "has_family"
        },
        {
            "id": 27,
            "name": "is_determined"
        },
        {
            "id": 28,
            "name": "has_passion"
        },
        {
            "id": 29,
            "name": "finds_strength"
        }
    ],
    "subject_name": "Koen",
    "subject_category": "human",
    "keyword": "bronchopneumonia",
    "all_facts": [
        {
            "id": 0,
            "subject": "Koen",
            "text": "Koen is healthy.",
            "fol": "p_0(Koen)",
            "str_fol": "healthy(Koen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Koen",
            "text": "Koen does not take medicine.",
            "fol": "\u00acp_1(Koen)",
            "str_fol": "\u00actakes_medicine(Koen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Koen",
            "text": "Koen does not feel better.",
            "fol": "\u00acp_2(Koen)",
            "str_fol": "\u00acfeels_better(Koen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Koen",
            "text": "Koen has a fever.",
            "fol": "p_3(Koen)",
            "str_fol": "has_fever(Koen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Koen",
            "text": "Koen does not need care.",
            "fol": "\u00acp_4(Koen)",
            "str_fol": "\u00acneeds_care(Koen)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Koen",
            "text": "Koen does not stay positive.",
            "fol": "\u00acp_5(Koen)",
            "str_fol": "\u00acstay_positive(Koen)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Koen",
            "text": "Koen does not meet obstacles.",
            "fol": "\u00acp_6(Koen)",
            "str_fol": "\u00acmeets_obstacles(Koen)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Koen",
            "text": "Koen experiences hardship.",
            "fol": "p_7(Koen)",
            "str_fol": "experiences_hardship(Koen)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Koen",
            "text": "Koen faces setbacks.",
            "fol": "p_16(Koen)",
            "str_fol": "faces_setbacks(Koen)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Koen",
            "text": "Koen does not overcome challenges.",
            "fol": "\u00acp_15(Koen)",
            "str_fol": "\u00acovercome_challenges(Koen)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Koen",
            "text": "Koen does not get support.",
            "fol": "\u00acp_9(Koen)",
            "str_fol": "\u00acgets_support(Koen)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Koen",
            "text": "Koen receives treatment.",
            "fol": "p_14(Koen)",
            "str_fol": "receives_treatment(Koen)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Koen",
            "text": "Koen is ill.",
            "fol": "p_12(Koen)",
            "str_fol": "is_ill(Koen)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Koen",
            "text": "Koen does not have remission.",
            "fol": "\u00acp_13(Koen)",
            "str_fol": "\u00achas_remission(Koen)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Koen",
            "text": "Koen fights disease.",
            "fol": "p_11(Koen)",
            "str_fol": "fights_disease(Koen)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Koen",
            "text": "Koen does not recover quickly.",
            "fol": "\u00acp_10(Koen)",
            "str_fol": "\u00acrecovers_fast(Koen)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Koen",
            "text": "Koen is not resilient.",
            "fol": "\u00acp_8(Koen)",
            "str_fol": "\u00acresilient(Koen)",
            "negation": true
        },
        {
            "id": 17,
            "subject": "Koen",
            "text": "Koen is either healthy or resilient (or both).",
            "fol": "p_0(Koen) \u2228 resilient(Koen)",
            "str_fol": "healthy(Koen) \u2228 resilient(Koen)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Koen",
            "text": "Koen does not meet obstacles.",
            "fol": "\u00acp_6(Koen)",
            "str_fol": "\u00acmeets_obstacles(Koen)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Koen",
            "text": "Koen experiences hardship.",
            "fol": "p_7(Koen)",
            "str_fol": "experiences_hardship(Koen)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Koen",
            "text": "Koen does not stay positive.",
            "fol": "\u00acp_5(Koen)",
            "str_fol": "\u00acstay_positive(Koen)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Koen",
            "text": "Koen does not take medicine.",
            "fol": "\u00acp_1(Koen)",
            "str_fol": "\u00actakes_medicine(Koen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Koen",
            "text": "Koen has a fever.",
            "fol": "p_3(Koen)",
            "str_fol": "has_fever(Koen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Koen",
            "text": "Koen does not need care.",
            "fol": "\u00acp_4(Koen)",
            "str_fol": "\u00acneeds_care(Koen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Koen",
            "text": "Koen does not feel better.",
            "fol": "\u00acp_2(Koen)",
            "str_fol": "\u00acfeels_better(Koen)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Koen",
            "text": "Koen is healthy.",
            "fol": "p_0(Koen)",
            "str_fol": "healthy(Koen)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If someone either meets obstacles or experiences hardship (but not both), then they face setbacks.",
            "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))",
            "str_fol": "\u2200x ((meets_obstacles(x) \u2295 experiences_hardship(x)) \u2192 faces_setbacks(x))"
        },
        {
            "id": 7,
            "text": "For Koen, either he faces setbacks or he overcomes challenges, but not both at the same time.",
            "fol": "p_16(Koen) \u2295 p_15(Koen)",
            "str_fol": "faces_setbacks(Koen) \u2295 overcome_challenges(Koen)"
        },
        {
            "id": 6,
            "text": "Anyone who gets support or stays positive can overcome challenges.",
            "fol": "\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))",
            "str_fol": "\u2200x ((gets_support(x) \u2228 stay_positive(x)) \u2192 overcome_challenges(x))"
        },
        {
            "id": 5,
            "text": "Koen either receives treatment or takes medicine, but not both simultaneously.",
            "fol": "p_14(Koen) \u2295 p_1(Koen)",
            "str_fol": "receives_treatment(Koen) \u2295 takes_medicine(Koen)"
        },
        {
            "id": 4,
            "text": "For all humans, if they either have a fever or are ill, then they need care.",
            "fol": "\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_fever(x) \u2295 is_ill(x)) \u2192 needs_care(x))"
        },
        {
            "id": 3,
            "text": "For all humans, if they receive treatment and have remission, then they feel better.",
            "fol": "\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((receives_treatment(x) \u2227 has_remission(x)) \u2192 feels_better(x))"
        },
        {
            "id": 2,
            "text": "If Koen is ill, then he either fights disease or has remission, but not both.",
            "fol": "p_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))",
            "str_fol": "is_ill(Koen) \u2192 (fights_disease(Koen) \u2295 has_remission(Koen))"
        },
        {
            "id": 1,
            "text": "Koen either fights disease or recovers quickly, but not both.",
            "fol": "p_11(Koen) \u2295 p_10(Koen)",
            "str_fol": "fights_disease(Koen) \u2295 recovers_fast(Koen)"
        },
        {
            "id": 0,
            "text": "Anyone who is resilient or gets support can recover quickly.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((resilient(x) \u2228 gets_support(x)) \u2192 recovers_fast(x))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Koen",
            "text": "Koen does not meet obstacles.",
            "fol": "\u00acp_6(Koen)",
            "str_fol": "\u00acmeets_obstacles(Koen)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Koen",
            "text": "Koen experiences hardship.",
            "fol": "p_7(Koen)",
            "str_fol": "experiences_hardship(Koen)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Koen",
            "text": "Koen does not stay positive.",
            "fol": "\u00acp_5(Koen)",
            "str_fol": "\u00acstay_positive(Koen)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Koen",
            "text": "Koen does not take medicine.",
            "fol": "\u00acp_1(Koen)",
            "str_fol": "\u00actakes_medicine(Koen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Koen",
            "text": "Koen has a fever.",
            "fol": "p_3(Koen)",
            "str_fol": "has_fever(Koen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Koen",
            "text": "Koen does not need care.",
            "fol": "\u00acp_4(Koen)",
            "str_fol": "\u00acneeds_care(Koen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Koen",
            "text": "Koen does not feel better.",
            "fol": "\u00acp_2(Koen)",
            "str_fol": "\u00acfeels_better(Koen)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Koen",
            "text": "Koen is healthy.",
            "fol": "p_0(Koen)",
            "str_fol": "healthy(Koen)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If someone either meets obstacles or experiences hardship (but not both), then they face setbacks.",
            "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))",
            "str_fol": "\u2200x ((meets_obstacles(x) \u2295 experiences_hardship(x)) \u2192 faces_setbacks(x))"
        },
        {
            "id": 7,
            "text": "For Koen, either he faces setbacks or he overcomes challenges, but not both at the same time.",
            "fol": "p_16(Koen) \u2295 p_15(Koen)",
            "str_fol": "faces_setbacks(Koen) \u2295 overcome_challenges(Koen)"
        },
        {
            "id": 6,
            "text": "Anyone who gets support or stays positive can overcome challenges.",
            "fol": "\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))",
            "str_fol": "\u2200x ((gets_support(x) \u2228 stay_positive(x)) \u2192 overcome_challenges(x))"
        },
        {
            "id": 5,
            "text": "Koen either receives treatment or takes medicine, but not both simultaneously.",
            "fol": "p_14(Koen) \u2295 p_1(Koen)",
            "str_fol": "receives_treatment(Koen) \u2295 takes_medicine(Koen)"
        },
        {
            "id": 4,
            "text": "For all humans, if they either have a fever or are ill, then they need care.",
            "fol": "\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_fever(x) \u2295 is_ill(x)) \u2192 needs_care(x))"
        },
        {
            "id": 3,
            "text": "For all humans, if they receive treatment and have remission, then they feel better.",
            "fol": "\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((receives_treatment(x) \u2227 has_remission(x)) \u2192 feels_better(x))"
        },
        {
            "id": 2,
            "text": "If Koen is ill, then he either fights disease or has remission, but not both.",
            "fol": "p_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))",
            "str_fol": "is_ill(Koen) \u2192 (fights_disease(Koen) \u2295 has_remission(Koen))"
        },
        {
            "id": 1,
            "text": "Koen either fights disease or recovers quickly, but not both.",
            "fol": "p_11(Koen) \u2295 p_10(Koen)",
            "str_fol": "fights_disease(Koen) \u2295 recovers_fast(Koen)"
        },
        {
            "id": 0,
            "text": "Anyone who is resilient or gets support can recover quickly.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((resilient(x) \u2228 gets_support(x)) \u2192 recovers_fast(x))"
        }
    ],
    "context_fol": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\np_0(Koen)\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))\np_16(Koen) \u2295 p_15(Koen)\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\np_14(Koen) \u2295 p_1(Koen)\n\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))\np_11(Koen) \u2295 p_10(Koen)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
    "conclusion": {
        "id": 18,
        "text": "Koen is either healthy or resilient (or both).",
        "fol": "p_0(Koen) \u2228 p_8(Koen)",
        "str_fol": "healthy(Koen) \u2228 resilient(Koen)"
    },
    "initial_answer": "True",
    "initial_goal": "p_0(Koen) \u2228 p_8(Koen)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Koen",
                    "text": "Koen does not meet obstacles.",
                    "fol": "\u00acp_6(Koen)",
                    "str_fol": "\u00acmeets_obstacles(Koen)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Koen",
                    "text": "Koen experiences hardship.",
                    "fol": "p_7(Koen)",
                    "str_fol": "experiences_hardship(Koen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If someone either meets obstacles or experiences hardship (but not both), then they face setbacks.",
                    "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))",
                    "str_fol": "\u2200x ((meets_obstacles(x) \u2295 experiences_hardship(x)) \u2192 faces_setbacks(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Koen",
                "text": "Koen faces setbacks.",
                "fol": "p_16(Koen)",
                "str_fol": "faces_setbacks(Koen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Koen",
                    "text": "Koen faces setbacks.",
                    "fol": "p_16(Koen)",
                    "str_fol": "faces_setbacks(Koen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "For Koen, either he faces setbacks or he overcomes challenges, but not both at the same time.",
                    "fol": "p_16(Koen) \u2295 p_15(Koen)",
                    "str_fol": "faces_setbacks(Koen) \u2295 overcome_challenges(Koen)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Koen",
                "text": "Koen does not overcome challenges.",
                "fol": "\u00acp_15(Koen)",
                "str_fol": "\u00acovercome_challenges(Koen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Koen",
                    "text": "Koen does not stay positive.",
                    "fol": "\u00acp_5(Koen)",
                    "str_fol": "\u00acstay_positive(Koen)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Koen",
                    "text": "Koen does not overcome challenges.",
                    "fol": "\u00acp_15(Koen)",
                    "str_fol": "\u00acovercome_challenges(Koen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who gets support or stays positive can overcome challenges.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))",
                    "str_fol": "\u2200x ((gets_support(x) \u2228 stay_positive(x)) \u2192 overcome_challenges(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Koen",
                "text": "Koen does not get support.",
                "fol": "\u00acp_9(Koen)",
                "str_fol": "\u00acgets_support(Koen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Koen",
                    "text": "Koen does not take medicine.",
                    "fol": "\u00acp_1(Koen)",
                    "str_fol": "\u00actakes_medicine(Koen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Koen either receives treatment or takes medicine, but not both simultaneously.",
                    "fol": "p_14(Koen) \u2295 p_1(Koen)",
                    "str_fol": "receives_treatment(Koen) \u2295 takes_medicine(Koen)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Koen",
                "text": "Koen receives treatment.",
                "fol": "p_14(Koen)",
                "str_fol": "receives_treatment(Koen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Koen",
                    "text": "Koen has a fever.",
                    "fol": "p_3(Koen)",
                    "str_fol": "has_fever(Koen)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Koen",
                    "text": "Koen does not need care.",
                    "fol": "\u00acp_4(Koen)",
                    "str_fol": "\u00acneeds_care(Koen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all humans, if they either have a fever or are ill, then they need care.",
                    "fol": "\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))",
                    "str_fol": "\u2200x ((has_fever(x) \u2295 is_ill(x)) \u2192 needs_care(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Koen",
                "text": "Koen is ill.",
                "fol": "p_12(Koen)",
                "str_fol": "is_ill(Koen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Koen",
                    "text": "Koen receives treatment.",
                    "fol": "p_14(Koen)",
                    "str_fol": "receives_treatment(Koen)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Koen",
                    "text": "Koen does not feel better.",
                    "fol": "\u00acp_2(Koen)",
                    "str_fol": "\u00acfeels_better(Koen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "For all humans, if they receive treatment and have remission, then they feel better.",
                    "fol": "\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((receives_treatment(x) \u2227 has_remission(x)) \u2192 feels_better(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Koen",
                "text": "Koen does not have remission.",
                "fol": "\u00acp_13(Koen)",
                "str_fol": "\u00achas_remission(Koen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Koen",
                    "text": "Koen is ill.",
                    "fol": "p_12(Koen)",
                    "str_fol": "is_ill(Koen)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Koen",
                    "text": "Koen does not have remission.",
                    "fol": "\u00acp_13(Koen)",
                    "str_fol": "\u00achas_remission(Koen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Koen is ill, then he either fights disease or has remission, but not both.",
                    "fol": "p_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))",
                    "str_fol": "is_ill(Koen) \u2192 (fights_disease(Koen) \u2295 has_remission(Koen))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Koen",
                "text": "Koen fights disease.",
                "fol": "p_11(Koen)",
                "str_fol": "fights_disease(Koen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Koen",
                    "text": "Koen fights disease.",
                    "fol": "p_11(Koen)",
                    "str_fol": "fights_disease(Koen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Koen either fights disease or recovers quickly, but not both.",
                    "fol": "p_11(Koen) \u2295 p_10(Koen)",
                    "str_fol": "fights_disease(Koen) \u2295 recovers_fast(Koen)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Koen",
                "text": "Koen does not recover quickly.",
                "fol": "\u00acp_10(Koen)",
                "str_fol": "\u00acrecovers_fast(Koen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Koen",
                    "text": "Koen does not get support.",
                    "fol": "\u00acp_9(Koen)",
                    "str_fol": "\u00acgets_support(Koen)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Koen",
                    "text": "Koen does not recover quickly.",
                    "fol": "\u00acp_10(Koen)",
                    "str_fol": "\u00acrecovers_fast(Koen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Anyone who is resilient or gets support can recover quickly.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((resilient(x) \u2228 gets_support(x)) \u2192 recovers_fast(x))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Koen",
                "text": "Koen is not resilient.",
                "fol": "\u00acp_8(Koen)",
                "str_fol": "\u00acresilient(Koen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Koen",
                    "text": "Koen is healthy.",
                    "fol": "p_0(Koen)",
                    "str_fol": "healthy(Koen)",
                    "negation": false
                },
                {
                    "id": 16,
                    "subject": "Koen",
                    "text": "Koen is not resilient.",
                    "fol": "\u00acp_8(Koen)",
                    "str_fol": "\u00acresilient(Koen)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 18,
                "text": "Koen is either healthy or resilient (or both).",
                "fol": "p_0(Koen) \u2228 p_8(Koen)",
                "str_fol": "healthy(Koen) \u2228 resilient(Koen)"
            }
        }
    ],
    "proof_trace": "10 p_0(Koen) | p_8(Koen).  [goal].\n26 -p_0(Koen).  [deny(10)].\n27 p_0(Koen).  [assumption].\n38 $F.  [resolve(26,a,27,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))\np_16(Koen) \u2295 p_15(Koen)\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\np_14(Koen) \u2295 p_1(Koen)\n\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))\np_11(Koen) \u2295 p_10(Koen)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u00acp_0(Koen)\np_7(Koen) \u2192 \u00acp_8(Koen)",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen)",
                    "p_7(Koen)",
                    "-p_5(Koen)",
                    "-p_1(Koen)",
                    "p_3(Koen)",
                    "-p_4(Koen)",
                    "-p_2(Koen)",
                    "all x ((-(p_6(x) <-> p_7(x))) -> p_16(x))",
                    "-(p_16(Koen) <-> p_15(Koen))",
                    "all x ((p_9(x) | p_5(x)) -> p_15(x))",
                    "-(p_14(Koen) <-> p_1(Koen))",
                    "all x ((-(p_3(x) <-> p_12(x))) -> p_4(x))",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x))",
                    "p_12(Koen) -> (-(p_11(Koen) <-> p_13(Koen)))",
                    "-(p_11(Koen) <-> p_10(Koen))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "-p_0(Koen)",
                    "p_7(Koen) -> -p_8(Koen)"
                ],
                "formulas(goals)": [
                    "- (p_0(Koen) | p_8(Koen))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Koen)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_0(Koen)"
                ],
                "added_rules": [
                    "p_7(Koen) \u2192 \u00acp_8(Koen)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))\np_16(Koen) \u2295 p_15(Koen)\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\np_14(Koen) \u2295 p_1(Koen)\n\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))\np_11(Koen) \u2295 p_10(Koen)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_7(Koen) \u2192 \u00acp_8(Koen)\n\u00acp_4(Koen) \u2192 p_0(Koen)",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen).",
                    "p_7(Koen).",
                    "-p_5(Koen).",
                    "-p_1(Koen).",
                    "p_3(Koen).",
                    "-p_4(Koen).",
                    "-p_2(Koen).",
                    "all x ((-(p_6(x) <-> p_7(x))) -> p_16(x)).",
                    "-(p_16(Koen) <-> p_15(Koen)).",
                    "all x ((p_9(x) | p_5(x)) -> p_15(x)).",
                    "-(p_14(Koen) <-> p_1(Koen)).",
                    "all x ((-(p_3(x) <-> p_12(x))) -> p_4(x)).",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x)).",
                    "p_12(Koen) -> (-(p_11(Koen) <-> p_13(Koen))).",
                    "-(p_11(Koen) <-> p_10(Koen)).",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x)).",
                    "p_7(Koen) -> -p_8(Koen).",
                    "-p_4(Koen) -> p_0(Koen)."
                ],
                "formulas(goals)": [
                    "p_0(Koen) | p_8(Koen)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_0(Koen)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Koen) \u2192 p_0(Koen)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))\np_16(Koen) \u2295 p_15(Koen)\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\np_14(Koen) \u2295 p_1(Koen)\n\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))\np_11(Koen) \u2295 p_10(Koen)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_7(Koen) \u2192 \u00acp_8(Koen)\n\u00acp_4(Koen) \u2227 \u00acp_5(Koen) \u2192 \u00acp_0(Koen)",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen).",
                    "p_7(Koen).",
                    "-p_5(Koen).",
                    "-p_1(Koen).",
                    "p_3(Koen).",
                    "-p_4(Koen).",
                    "-p_2(Koen).",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_16(x)).",
                    "-(p_16(Koen) <-> p_15(Koen)).",
                    "all x ((p_9(x) | p_5(x)) -> p_15(x)).",
                    "-(p_14(Koen) <-> p_1(Koen)).",
                    "all x (-(p_3(x) <-> p_12(x)) -> p_4(x)).",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x)).",
                    "p_12(Koen) -> -(p_11(Koen) <-> p_13(Koen)).",
                    "-(p_11(Koen) <-> p_10(Koen)).",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x)).",
                    "p_7(Koen) -> -p_8(Koen).",
                    "(-p_4(Koen) & -p_5(Koen)) -> -p_0(Koen)."
                ],
                "formulas(goals)": [
                    "-(p_0(Koen) | p_8(Koen))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_4(Koen) \u2192 p_0(Koen)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Koen) \u2227 \u00acp_5(Koen) \u2192 \u00acp_0(Koen)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))\np_16(Koen) \u2295 p_15(Koen)\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\np_14(Koen) \u2295 p_1(Koen)\n\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))\np_11(Koen) \u2295 p_10(Koen)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_7(Koen) \u2192 \u00acp_8(Koen)\np_3(Koen) \u2192 p_0(Koen)",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen)",
                    "p_7(Koen)",
                    "-p_5(Koen)",
                    "-p_1(Koen)",
                    "p_3(Koen)",
                    "-p_4(Koen)",
                    "-p_2(Koen)",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_16(x))",
                    "-(p_16(Koen) <-> p_15(Koen))",
                    "all x ((p_9(x) | p_5(x)) -> p_15(x))",
                    "-(p_14(Koen) <-> p_1(Koen))",
                    "all x (-(p_3(x) <-> p_12(x)) -> p_4(x))",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x))",
                    "p_12(Koen) -> -(p_11(Koen) <-> p_13(Koen))",
                    "-(p_11(Koen) <-> p_10(Koen))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "p_7(Koen) -> -p_8(Koen)",
                    "p_3(Koen) -> p_0(Koen)"
                ],
                "formulas(goals)": [
                    "p_0(Koen) | p_8(Koen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_4(Koen) \u2227 \u00acp_5(Koen) \u2192 \u00acp_0(Koen)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Koen) \u2192 p_0(Koen)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_16(x))\np_16(Koen) \u2295 p_15(Koen)\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\np_14(Koen) \u2295 p_1(Koen)\n\u2200x ((p_3(x) \u2295 p_12(x)) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (p_11(Koen) \u2295 p_13(Koen))\np_11(Koen) \u2295 p_10(Koen)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_7(Koen) \u2192 \u00acp_8(Koen)\np_3(Koen) \u2192 p_0(Koen)\n\u2200x (\u00acp_4(x) \u2192 \u00ac(p_3(x) \u2295 p_12(x)))\n\u00acp_7(Koen) \u2228 \u00acp_8(Koen)\np_7(Koen) \u2228 p_8(Koen)\np_3(Koen) \u2192 (p_0(Koen) \u2228 p_8(Koen))\n\u00acp_8(Koen)\n\u2200x (p_5(x) \u2192 p_15(x))\np_0(Koen)\n\u2200x (\u00acp_14(x) \u2228 \u00acp_13(x) \u2228 p_2(x))",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen).",
                    "p_7(Koen).",
                    "-p_5(Koen).",
                    "-p_1(Koen).",
                    "p_3(Koen).",
                    "-p_4(Koen).",
                    "-p_2(Koen).",
                    "all x ((-(p_6(x) <-> p_7(x))) -> p_16(x)).",
                    "-(p_16(Koen) <-> p_15(Koen)).",
                    "all x ((p_9(x) | p_5(x)) -> p_15(x)).",
                    "-(p_14(Koen) <-> p_1(Koen)).",
                    "all x ((-(p_3(x) <-> p_12(x))) -> p_4(x)).",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x)).",
                    "p_12(Koen) -> (-(p_11(Koen) <-> p_13(Koen))).",
                    "-(p_11(Koen) <-> p_10(Koen)).",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x)).",
                    "p_7(Koen) -> -p_8(Koen).",
                    "p_3(Koen) -> p_0(Koen).",
                    "all x (-p_4(x) -> (p_3(x) <-> p_12(x))).",
                    "-p_7(Koen) | -p_8(Koen).",
                    "p_7(Koen) | p_8(Koen).",
                    "p_3(Koen) -> (p_0(Koen) | p_8(Koen)).",
                    "-p_8(Koen).",
                    "all x (p_5(x) -> p_15(x)).",
                    "p_0(Koen).",
                    "all x (-p_14(x) | -p_13(x) | p_2(x))."
                ],
                "formulas(goals)": [
                    "p_0(Koen) | p_8(Koen)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Koen)",
                    "p_0(Koen)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_4(x) \u2192 \u00ac(p_3(x) \u2295 p_12(x)))",
                    "\u00acp_7(Koen) \u2228 \u00acp_8(Koen)",
                    "p_7(Koen) \u2228 p_8(Koen)",
                    "p_3(Koen) \u2192 (p_0(Koen) \u2228 p_8(Koen))",
                    "\u2200x (p_5(x) \u2192 p_15(x))",
                    "\u2200x (\u00acp_14(x) \u2228 \u00acp_13(x) \u2228 p_2(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((\u00ac(p_6(x) \u2194 p_7(x))) \u2192 p_16(x))\n\u00ac(p_16(Koen) \u2194 p_15(Koen))\n\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))\n\u00ac(p_14(Koen) \u2194 p_1(Koen))\n\u2200x ((\u00ac(p_3(x) \u2194 p_12(x))) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (\u00ac(p_11(Koen) \u2194 p_13(Koen)))\n\u00ac(p_11(Koen) \u2194 p_10(Koen))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_7(Koen) \u2192 \u00acp_8(Koen)\n\u2200x (\u00acp_4(x) \u2192 \u00ac(\u00ac(p_3(x) \u2194 p_12(x))))\n\u00acp_7(Koen) \u2228 \u00acp_8(Koen)\np_7(Koen) \u2228 p_8(Koen)\n\u00acp_8(Koen)\n\u2200x (p_5(x) \u2192 p_15(x))\n\u2200x (\u00acp_14(x) \u2228 \u00acp_13(x) \u2228 p_2(x))\np_3(Koen) \u2192 \u00acp_0(Koen)",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen)",
                    "p_7(Koen)",
                    "-p_5(Koen)",
                    "-p_1(Koen)",
                    "p_3(Koen)",
                    "-p_4(Koen)",
                    "-p_2(Koen)",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_16(x))",
                    "-(p_16(Koen) <-> p_15(Koen))",
                    "all x ((p_9(x) | p_5(x)) -> p_15(x))",
                    "-(p_14(Koen) <-> p_1(Koen))",
                    "all x (-(p_3(x) <-> p_12(x)) -> p_4(x))",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x))",
                    "p_12(Koen) -> (-(p_11(Koen) <-> p_13(Koen)))",
                    "-(p_11(Koen) <-> p_10(Koen))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "p_7(Koen) -> -p_8(Koen)",
                    "all x (-p_4(x) -> -(-(p_3(x) <-> p_12(x))))",
                    "(-p_7(Koen)) | (-p_8(Koen))",
                    "p_7(Koen) | p_8(Koen)",
                    "-p_8(Koen)",
                    "all x (p_5(x) -> p_15(x))",
                    "all x ((-p_14(x)) | (-p_13(x)) | p_2(x))",
                    "p_3(Koen) -> (-p_0(Koen))"
                ],
                "formulas(goals)": [
                    "(-p_0(Koen)) & (-p_8(Koen))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Koen)"
                ],
                "removed_rules": [
                    "p_3(Koen) \u2192 (p_0(Koen) \u2228 p_8(Koen))",
                    "p_3(Koen) \u2192 p_0(Koen)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Koen) \u2192 \u00acp_0(Koen)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Koen)\np_7(Koen)\n\u00acp_5(Koen)\n\u00acp_1(Koen)\np_3(Koen)\n\u00acp_4(Koen)\n\u00acp_2(Koen)\n\u2200x ((\u00ac(p_6(x) \u2194 p_7(x))) \u2192 p_16(x))\n\u00ac(p_16(Koen) \u2194 p_15(Koen))\n\u00ac(p_14(Koen) \u2194 p_1(Koen))\n\u2200x ((\u00ac(p_3(x) \u2194 p_12(x))) \u2192 p_4(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_2(x))\np_12(Koen) \u2192 (\u00ac(p_11(Koen) \u2194 p_13(Koen)))\n\u00ac(p_11(Koen) \u2194 p_10(Koen))\np_7(Koen) \u2192 \u00acp_8(Koen)\n\u2200x (\u00acp_4(x) \u2192 \u00ac(\u00ac(p_3(x) \u2194 p_12(x))))\n\u00acp_7(Koen) \u2228 \u00acp_8(Koen)\np_7(Koen) \u2228 p_8(Koen)\n\u00acp_8(Koen)\n\u2200x (p_5(x) \u2192 p_15(x))\n\u2200x (\u00acp_14(x) \u2228 \u00acp_13(x) \u2228 p_2(x))\np_3(Koen) \u2192 \u00acp_0(Koen)\n\u00acp_0(Koen)\n\u2200x (p_9(x) \u2192 p_15(x))\n\u2200x (p_8(x) \u2192 p_10(x))\n\u2200x (p_9(x) \u2192 p_10(x))",
            "Initial Goal": "p_0(Koen) \u2228 p_8(Koen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Koen)",
                    "p_7(Koen)",
                    "-p_5(Koen)",
                    "-p_1(Koen)",
                    "p_3(Koen)",
                    "-p_4(Koen)",
                    "-p_2(Koen)",
                    "all x ((-(p_6(x) <-> p_7(x))) -> p_16(x))",
                    "-(p_16(Koen) <-> p_15(Koen))",
                    "-(p_14(Koen) <-> p_1(Koen))",
                    "all x ((-(p_3(x) <-> p_12(x))) -> p_4(x))",
                    "all x ((p_14(x) & p_13(x)) -> p_2(x))",
                    "p_12(Koen) -> (-(p_11(Koen) <-> p_13(Koen)))",
                    "-(p_11(Koen) <-> p_10(Koen))",
                    "p_7(Koen) -> -p_8(Koen)",
                    "all x (-p_4(x) -> -(-(p_3(x) <-> p_12(x))))",
                    "-p_7(Koen) | -p_8(Koen)",
                    "p_7(Koen) | p_8(Koen)",
                    "-p_8(Koen)",
                    "all x (p_5(x) -> p_15(x))",
                    "all x (-p_14(x) | -p_13(x) | p_2(x))",
                    "p_3(Koen) -> -p_0(Koen)",
                    "-p_0(Koen)",
                    "all x (p_9(x) -> p_15(x))",
                    "all x (p_8(x) -> p_10(x))",
                    "all x (p_9(x) -> p_10(x))"
                ],
                "formulas(goals)": [
                    "-(p_0(Koen) | p_8(Koen))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_9(x) \u2228 p_5(x)) \u2192 p_15(x))",
                    "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))"
                ],
                "added_facts": [
                    "\u00acp_0(Koen)"
                ],
                "added_rules": [
                    "\u2200x (p_9(x) \u2192 p_15(x))",
                    "\u2200x (p_8(x) \u2192 p_10(x))",
                    "\u2200x (p_9(x) \u2192 p_10(x))"
                ]
            }
        }
    ]
}