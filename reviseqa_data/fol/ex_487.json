{
    "background_story": "Adley was a rising star in the culinary world, known for his innovative take on traditional Southern cuisine. His signature dish, a blackened redfish, had gained a cult following in the city's food scene. Adley's technique involved a special blend of spices and a precise timing that resulted in a crispy, blackened crust giving way to tender, flaky fish. However, his obsession with perfecting the blackening process often led him to experiment with new ingredients and methods, sometimes at the cost of his kitchen's spotlessness. Despite the chaos he created, Adley's passion and creativity earned him a reputation as one of the most exciting young chefs in the business, with food critics and patrons alike flocking to taste his latest blackened creations.",
    "predicates": [
        {
            "id": 0,
            "name": "renowned"
        },
        {
            "id": 1,
            "name": "organizes_pantry"
        },
        {
            "id": 2,
            "name": "stays_organized"
        },
        {
            "id": 3,
            "name": "cooks_well"
        },
        {
            "id": 4,
            "name": "experiments_frequently"
        },
        {
            "id": 5,
            "name": "takes_risks"
        },
        {
            "id": 6,
            "name": "innovative"
        },
        {
            "id": 7,
            "name": "passionate"
        },
        {
            "id": 8,
            "name": "successful"
        },
        {
            "id": 9,
            "name": "is_disciplined"
        },
        {
            "id": 10,
            "name": "creative"
        },
        {
            "id": 11,
            "name": "skilled"
        },
        {
            "id": 12,
            "name": "meticulous"
        },
        {
            "id": 13,
            "name": "experienced"
        },
        {
            "id": 14,
            "name": "cleans_kitchen"
        },
        {
            "id": 15,
            "name": "tries_new"
        },
        {
            "id": 16,
            "name": "thinks_outside"
        },
        {
            "id": 17,
            "name": "talented"
        },
        {
            "id": 18,
            "name": "perfectionist"
        },
        {
            "id": 19,
            "name": "prepares_fast"
        },
        {
            "id": 20,
            "name": "presents_well"
        },
        {
            "id": 21,
            "name": "plans_meals"
        },
        {
            "id": 22,
            "name": "tracks_ingredients"
        },
        {
            "id": 23,
            "name": "runs_restaurant"
        },
        {
            "id": 24,
            "name": "delegates_tasks"
        },
        {
            "id": 25,
            "name": "confident"
        },
        {
            "id": 26,
            "name": "learns_quickly"
        },
        {
            "id": 27,
            "name": "uses_recipe"
        }
    ],
    "subject_name": "Adley",
    "subject_category": "chef",
    "keyword": "blackening",
    "all_facts": [
        {
            "id": 0,
            "subject": "Adley",
            "text": "Adley is not renowned.",
            "fol": "\u00acp_0(Adley)",
            "str_fol": "\u00acrenowned(Adley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Adley",
            "text": "Adley does not organize the pantry.",
            "fol": "\u00acp_1(Adley)",
            "str_fol": "\u00acorganizes_pantry(Adley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adley",
            "text": "Adley does not stay organized.",
            "fol": "\u00acp_2(Adley)",
            "str_fol": "\u00acstays_organized(Adley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adley",
            "text": "Adley does not cook well.",
            "fol": "\u00acp_3(Adley)",
            "str_fol": "\u00accooks_well(Adley)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Adley",
            "text": "Adley experiments frequently.",
            "fol": "p_4(Adley)",
            "str_fol": "experiments_frequently(Adley)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Adley",
            "text": "Adley does not take risks in his cooking.",
            "fol": "\u00acp_5(Adley)",
            "str_fol": "\u00actakes_risks(Adley)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Adley",
            "text": "Adley is disciplined in his kitchen management.",
            "fol": "p_9(Adley)",
            "str_fol": "is_disciplined(Adley)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Adley",
            "text": "Adley is not experienced.",
            "fol": "\u00acp_13(Adley)",
            "str_fol": "\u00acexperienced(Adley)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Adley",
            "text": "Adley does not clean the kitchen.",
            "fol": "\u00acp_14(Adley)",
            "str_fol": "\u00accleans_kitchen(Adley)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Adley",
            "text": "Adley is meticulous.",
            "fol": "p_12(Adley)",
            "str_fol": "meticulous(Adley)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Adley",
            "text": "Adley is skilled.",
            "fol": "p_11(Adley)",
            "str_fol": "skilled(Adley)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Adley",
            "text": "Adley is not creative.",
            "fol": "\u00acp_10(Adley)",
            "str_fol": "\u00accreative(Adley)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Adley",
            "text": "Adley is not passionate.",
            "fol": "\u00acp_7(Adley)",
            "str_fol": "\u00acpassionate(Adley)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Adley",
            "text": "Adley is not innovative.",
            "fol": "\u00acp_6(Adley)",
            "str_fol": "\u00acinnovative(Adley)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Adley",
            "text": "Adley is not successful.",
            "fol": "\u00acp_8(Adley)",
            "str_fol": "\u00acsuccessful(Adley)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Adley",
            "text": "Adley experiments frequently.",
            "fol": "p_4(Adley)",
            "str_fol": "experiments_frequently(Adley)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Adley",
            "text": "Adley does not take risks in his cooking.",
            "fol": "\u00acp_5(Adley)",
            "str_fol": "\u00actakes_risks(Adley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adley",
            "text": "Adley does not cook well.",
            "fol": "\u00acp_3(Adley)",
            "str_fol": "\u00accooks_well(Adley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Adley",
            "text": "Adley does not organize the pantry.",
            "fol": "\u00acp_1(Adley)",
            "str_fol": "\u00acorganizes_pantry(Adley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adley",
            "text": "Adley does not stay organized.",
            "fol": "\u00acp_2(Adley)",
            "str_fol": "\u00acstays_organized(Adley)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Adley",
            "text": "Adley is not renowned.",
            "fol": "\u00acp_0(Adley)",
            "str_fol": "\u00acrenowned(Adley)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Every chef who experiments frequently either takes risks in their cooking or is disciplined in their kitchen management.",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (experiments_frequently(x) \u2192 (takes_risks(x) \u2228 is_disciplined(x)))"
        },
        {
            "id": 7,
            "text": "Every experienced chef cooks well.",
            "fol": "\u2200x (p_13(x) \u2192 p_3(x))",
            "str_fol": "\u2200x (experienced(x) \u2192 cooks_well(x))"
        },
        {
            "id": 6,
            "text": "If Adley either cleans the kitchen or organizes the pantry (but not both), then he stays organized.",
            "fol": "(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)",
            "str_fol": "(cleans_kitchen(Adley) \u2295 organizes_pantry(Adley)) \u2192 stays_organized(Adley)"
        },
        {
            "id": 5,
            "text": "Adley is either meticulous or cleans the kitchen.",
            "fol": "p_12(Adley) \u2228 p_14(Adley)",
            "str_fol": "meticulous(Adley) \u2228 cleans_kitchen(Adley)"
        },
        {
            "id": 4,
            "text": "Adley is either skilled or experienced.",
            "fol": "p_11(Adley) \u2228 p_13(Adley)",
            "str_fol": "skilled(Adley) \u2228 experienced(Adley)"
        },
        {
            "id": 3,
            "text": "If Adley is a skilled chef, then he is either creative or meticulous, but not both.",
            "fol": "p_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))",
            "str_fol": "skilled(Adley) \u2192 (creative(Adley) \u2295 meticulous(Adley))"
        },
        {
            "id": 2,
            "text": "If Adley is either creative or passionate (but not both), then he is renowned.",
            "fol": "(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)",
            "str_fol": "(creative(Adley) \u2295 passionate(Adley)) \u2192 renowned(Adley)"
        },
        {
            "id": 1,
            "text": "Adley is either innovative in his cooking techniques or disciplined in his kitchen management, but not both.",
            "fol": "p_6(Adley) \u2295 p_9(Adley)",
            "str_fol": "innovative(Adley) \u2295 is_disciplined(Adley)"
        },
        {
            "id": 0,
            "text": "If Adley is innovative or passionate, then he is successful.",
            "fol": "(p_6(Adley) \u2228 p_7(Adley)) \u2192 p_8(Adley)",
            "str_fol": "(innovative(Adley) \u2228 passionate(Adley)) \u2192 successful(Adley)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Adley",
            "text": "Adley experiments frequently.",
            "fol": "p_4(Adley)",
            "str_fol": "experiments_frequently(Adley)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Adley",
            "text": "Adley does not take risks in his cooking.",
            "fol": "\u00acp_5(Adley)",
            "str_fol": "\u00actakes_risks(Adley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adley",
            "text": "Adley does not cook well.",
            "fol": "\u00acp_3(Adley)",
            "str_fol": "\u00accooks_well(Adley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Adley",
            "text": "Adley does not organize the pantry.",
            "fol": "\u00acp_1(Adley)",
            "str_fol": "\u00acorganizes_pantry(Adley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adley",
            "text": "Adley does not stay organized.",
            "fol": "\u00acp_2(Adley)",
            "str_fol": "\u00acstays_organized(Adley)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Adley",
            "text": "Adley is not renowned.",
            "fol": "\u00acp_0(Adley)",
            "str_fol": "\u00acrenowned(Adley)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Every chef who experiments frequently either takes risks in their cooking or is disciplined in their kitchen management.",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (experiments_frequently(x) \u2192 (takes_risks(x) \u2228 is_disciplined(x)))"
        },
        {
            "id": 7,
            "text": "Every experienced chef cooks well.",
            "fol": "\u2200x (p_13(x) \u2192 p_3(x))",
            "str_fol": "\u2200x (experienced(x) \u2192 cooks_well(x))"
        },
        {
            "id": 6,
            "text": "If Adley either cleans the kitchen or organizes the pantry (but not both), then he stays organized.",
            "fol": "(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)",
            "str_fol": "(cleans_kitchen(Adley) \u2295 organizes_pantry(Adley)) \u2192 stays_organized(Adley)"
        },
        {
            "id": 5,
            "text": "Adley is either meticulous or cleans the kitchen.",
            "fol": "p_12(Adley) \u2228 p_14(Adley)",
            "str_fol": "meticulous(Adley) \u2228 cleans_kitchen(Adley)"
        },
        {
            "id": 4,
            "text": "Adley is either skilled or experienced.",
            "fol": "p_11(Adley) \u2228 p_13(Adley)",
            "str_fol": "skilled(Adley) \u2228 experienced(Adley)"
        },
        {
            "id": 3,
            "text": "If Adley is a skilled chef, then he is either creative or meticulous, but not both.",
            "fol": "p_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))",
            "str_fol": "skilled(Adley) \u2192 (creative(Adley) \u2295 meticulous(Adley))"
        },
        {
            "id": 2,
            "text": "If Adley is either creative or passionate (but not both), then he is renowned.",
            "fol": "(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)",
            "str_fol": "(creative(Adley) \u2295 passionate(Adley)) \u2192 renowned(Adley)"
        },
        {
            "id": 1,
            "text": "Adley is either innovative in his cooking techniques or disciplined in his kitchen management, but not both.",
            "fol": "p_6(Adley) \u2295 p_9(Adley)",
            "str_fol": "innovative(Adley) \u2295 is_disciplined(Adley)"
        },
        {
            "id": 0,
            "text": "If Adley is innovative or passionate, then he is successful.",
            "fol": "(p_6(Adley) \u2228 p_7(Adley)) \u2192 p_8(Adley)",
            "str_fol": "(innovative(Adley) \u2228 passionate(Adley)) \u2192 successful(Adley)"
        }
    ],
    "context_fol": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\n(p_6(Adley) \u2228 p_7(Adley)) \u2192 p_8(Adley)",
    "conclusion": {
        "id": 14,
        "subject": "Adley",
        "text": "Adley is not successful.",
        "fol": "\u00acp_8(Adley)",
        "str_fol": "\u00acsuccessful(Adley)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_8(Adley)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Adley",
                    "text": "Adley experiments frequently.",
                    "fol": "p_4(Adley)",
                    "str_fol": "experiments_frequently(Adley)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Adley",
                    "text": "Adley does not take risks in his cooking.",
                    "fol": "\u00acp_5(Adley)",
                    "str_fol": "\u00actakes_risks(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Every chef who experiments frequently either takes risks in their cooking or is disciplined in their kitchen management.",
                    "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (experiments_frequently(x) \u2192 (takes_risks(x) \u2228 is_disciplined(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Adley",
                "text": "Adley is disciplined in his kitchen management.",
                "fol": "p_9(Adley)",
                "str_fol": "is_disciplined(Adley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Adley",
                    "text": "Adley does not cook well.",
                    "fol": "\u00acp_3(Adley)",
                    "str_fol": "\u00accooks_well(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Every experienced chef cooks well.",
                    "fol": "\u2200x (p_13(x) \u2192 p_3(x))",
                    "str_fol": "\u2200x (experienced(x) \u2192 cooks_well(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Adley",
                "text": "Adley is not experienced.",
                "fol": "\u00acp_13(Adley)",
                "str_fol": "\u00acexperienced(Adley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Adley",
                    "text": "Adley does not organize the pantry.",
                    "fol": "\u00acp_1(Adley)",
                    "str_fol": "\u00acorganizes_pantry(Adley)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Adley",
                    "text": "Adley does not stay organized.",
                    "fol": "\u00acp_2(Adley)",
                    "str_fol": "\u00acstays_organized(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Adley either cleans the kitchen or organizes the pantry (but not both), then he stays organized.",
                    "fol": "(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)",
                    "str_fol": "(cleans_kitchen(Adley) \u2295 organizes_pantry(Adley)) \u2192 stays_organized(Adley)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Adley",
                "text": "Adley does not clean the kitchen.",
                "fol": "\u00acp_14(Adley)",
                "str_fol": "\u00accleans_kitchen(Adley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Adley",
                    "text": "Adley does not clean the kitchen.",
                    "fol": "\u00acp_14(Adley)",
                    "str_fol": "\u00accleans_kitchen(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Adley is either meticulous or cleans the kitchen.",
                    "fol": "p_12(Adley) \u2228 p_14(Adley)",
                    "str_fol": "meticulous(Adley) \u2228 cleans_kitchen(Adley)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Adley",
                "text": "Adley is meticulous.",
                "fol": "p_12(Adley)",
                "str_fol": "meticulous(Adley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Adley",
                    "text": "Adley is not experienced.",
                    "fol": "\u00acp_13(Adley)",
                    "str_fol": "\u00acexperienced(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Adley is either skilled or experienced.",
                    "fol": "p_11(Adley) \u2228 p_13(Adley)",
                    "str_fol": "skilled(Adley) \u2228 experienced(Adley)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Adley",
                "text": "Adley is skilled.",
                "fol": "p_11(Adley)",
                "str_fol": "skilled(Adley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Adley",
                    "text": "Adley is skilled.",
                    "fol": "p_11(Adley)",
                    "str_fol": "skilled(Adley)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Adley",
                    "text": "Adley is meticulous.",
                    "fol": "p_12(Adley)",
                    "str_fol": "meticulous(Adley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Adley is a skilled chef, then he is either creative or meticulous, but not both.",
                    "fol": "p_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))",
                    "str_fol": "skilled(Adley) \u2192 (creative(Adley) \u2295 meticulous(Adley))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Adley",
                "text": "Adley is not creative.",
                "fol": "\u00acp_10(Adley)",
                "str_fol": "\u00accreative(Adley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Adley",
                    "text": "Adley is not creative.",
                    "fol": "\u00acp_10(Adley)",
                    "str_fol": "\u00accreative(Adley)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Adley",
                    "text": "Adley is not renowned.",
                    "fol": "\u00acp_0(Adley)",
                    "str_fol": "\u00acrenowned(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Adley is either creative or passionate (but not both), then he is renowned.",
                    "fol": "(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)",
                    "str_fol": "(creative(Adley) \u2295 passionate(Adley)) \u2192 renowned(Adley)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Adley",
                "text": "Adley is not passionate.",
                "fol": "\u00acp_7(Adley)",
                "str_fol": "\u00acpassionate(Adley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Adley",
                    "text": "Adley is disciplined in his kitchen management.",
                    "fol": "p_9(Adley)",
                    "str_fol": "is_disciplined(Adley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Adley is either innovative in his cooking techniques or disciplined in his kitchen management, but not both.",
                    "fol": "p_6(Adley) \u2295 p_9(Adley)",
                    "str_fol": "innovative(Adley) \u2295 is_disciplined(Adley)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Adley",
                "text": "Adley is not innovative.",
                "fol": "\u00acp_6(Adley)",
                "str_fol": "\u00acinnovative(Adley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Adley",
                    "text": "Adley is not innovative.",
                    "fol": "\u00acp_6(Adley)",
                    "str_fol": "\u00acinnovative(Adley)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Adley",
                    "text": "Adley is not passionate.",
                    "fol": "\u00acp_7(Adley)",
                    "str_fol": "\u00acpassionate(Adley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Adley is innovative or passionate, then he is successful.",
                    "fol": "(p_6(Adley) \u2228 p_7(Adley)) \u2192 p_8(Adley)",
                    "str_fol": "(innovative(Adley) \u2228 passionate(Adley)) \u2192 successful(Adley)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\n(p_6(Adley) \u2228 p_7(Adley)) \u2192 p_8(Adley)",
            "Initial Goal": "\u00acp_8(Adley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Adley)",
                    "-p_5(Adley)",
                    "-p_3(Adley)",
                    "-p_1(Adley)",
                    "-p_2(Adley)",
                    "-p_0(Adley)",
                    "all x (p_4(x) -> (p_5(x) | p_9(x)))",
                    "all x (p_13(x) -> p_3(x))",
                    "(-(p_14(Adley) <-> p_1(Adley))) -> p_2(Adley)",
                    "p_12(Adley) | p_14(Adley)",
                    "p_11(Adley) | p_13(Adley)",
                    "p_11(Adley) -> (-(p_10(Adley) <-> p_12(Adley)))",
                    "(-(p_10(Adley) <-> p_7(Adley))) -> p_0(Adley)",
                    "-(p_6(Adley) <-> p_9(Adley))",
                    "(p_6(Adley) | p_7(Adley)) -> p_8(Adley)",
                    "p_8(Adley) -> (p_6(Adley) | p_7(Adley))"
                ],
                "formulas(goals)": [
                    "-p_8(Adley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Adley) \u2192 (p_6(Adley) \u2228 p_7(Adley))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\n\u00acp_6(Adley) \u2192 p_8(Adley)",
            "Initial Goal": "\u00acp_8(Adley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Adley)",
                    "-p_5(Adley)",
                    "-p_3(Adley)",
                    "-p_1(Adley)",
                    "-p_2(Adley)",
                    "-p_0(Adley)",
                    "all x (p_4(x) -> (p_5(x) | p_9(x)))",
                    "all x (p_13(x) -> p_3(x))",
                    "(-(p_14(Adley) <-> p_1(Adley))) -> p_2(Adley)",
                    "p_12(Adley) | p_14(Adley)",
                    "p_11(Adley) | p_13(Adley)",
                    "p_11(Adley) -> (-(p_10(Adley) <-> p_12(Adley)))",
                    "(-(p_10(Adley) <-> p_7(Adley))) -> p_0(Adley)",
                    "-(p_6(Adley) <-> p_9(Adley))",
                    "(-p_6(Adley) -> p_8(Adley))"
                ],
                "formulas(goals)": [
                    "-(-p_8(Adley))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Adley) \u2228 p_7(Adley)) \u2192 p_8(Adley)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Adley) \u2192 p_8(Adley)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_9(x))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\np_6(Adley) \u2228 p_8(Adley)\np_9(Adley)\n\u00acp_6(Adley)\np_5(Adley) \u2228 p_9(Adley)\n\u00acp_4(Adley) \u2228 p_5(Adley) \u2228 p_9(Adley)",
            "Initial Goal": "\u00acp_8(Adley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Adley)",
                    "-p_5(Adley)",
                    "-p_3(Adley)",
                    "-p_1(Adley)",
                    "-p_2(Adley)",
                    "-p_0(Adley)",
                    "all x (-p_4(x) | p_5(x) | p_9(x))",
                    "all x (p_13(x) -> p_3(x))",
                    "(-(p_14(Adley) <-> p_1(Adley)) -> p_2(Adley))",
                    "p_12(Adley) | p_14(Adley)",
                    "p_11(Adley) | p_13(Adley)",
                    "p_11(Adley) -> -(p_10(Adley) <-> p_12(Adley))",
                    "(-(p_10(Adley) <-> p_7(Adley)) -> p_0(Adley))",
                    "-(p_6(Adley) <-> p_9(Adley))",
                    "p_6(Adley) | p_8(Adley)",
                    "p_9(Adley)",
                    "-p_6(Adley)",
                    "p_5(Adley) | p_9(Adley)",
                    "-p_4(Adley) | p_5(Adley) | p_9(Adley)"
                ],
                "formulas(goals)": [
                    "--p_8(Adley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_9(x)))",
                    "\u00acp_6(Adley) \u2192 p_8(Adley)"
                ],
                "added_facts": [
                    "p_9(Adley)",
                    "\u00acp_6(Adley)",
                    "p_5(Adley) \u2228 p_9(Adley)",
                    "\u00acp_4(Adley) \u2228 p_5(Adley) \u2228 p_9(Adley)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_9(x))",
                    "p_6(Adley) \u2228 p_8(Adley)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_9(x))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\np_6(Adley) \u2228 p_8(Adley)\np_9(Adley)\n\u00acp_6(Adley)\np_5(Adley) \u2228 p_9(Adley)\n\u00acp_4(Adley) \u2228 p_5(Adley) \u2228 p_9(Adley)\n\u00acp_10(Adley) \u2228 p_7(Adley)\np_10(Adley) \u2228 \u00acp_7(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2228 p_12(Adley))\np_11(Adley) \u2192 (\u00acp_10(Adley) \u2228 \u00acp_12(Adley))",
            "Initial Goal": "\u00acp_8(Adley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Adley)",
                    "-p_5(Adley)",
                    "-p_3(Adley)",
                    "-p_1(Adley)",
                    "-p_2(Adley)",
                    "-p_0(Adley)",
                    "all x (-p_4(x) | p_5(x) | p_9(x))",
                    "all x (p_13(x) -> p_3(x))",
                    "(-(p_14(Adley) <-> p_1(Adley))) -> p_2(Adley)",
                    "p_12(Adley) | p_14(Adley)",
                    "p_11(Adley) | p_13(Adley)",
                    "p_11(Adley) -> (-(p_10(Adley) <-> p_12(Adley)))",
                    "(-(p_10(Adley) <-> p_7(Adley))) -> p_0(Adley)",
                    "-(p_6(Adley) <-> p_9(Adley))",
                    "p_6(Adley) | p_8(Adley)",
                    "p_9(Adley)",
                    "-p_6(Adley)",
                    "p_5(Adley) | p_9(Adley)",
                    "-p_4(Adley) | p_5(Adley) | p_9(Adley)",
                    "(-p_10(Adley) | p_7(Adley))",
                    "(p_10(Adley) | -p_7(Adley))",
                    "p_11(Adley) -> (p_10(Adley) | p_12(Adley))",
                    "p_11(Adley) -> (-p_10(Adley) | -p_12(Adley))"
                ],
                "formulas(goals)": [
                    "-(-p_8(Adley))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_10(Adley) \u2228 p_7(Adley)",
                    "p_10(Adley) \u2228 \u00acp_7(Adley)",
                    "p_11(Adley) \u2192 (p_10(Adley) \u2228 p_12(Adley))",
                    "p_11(Adley) \u2192 (\u00acp_10(Adley) \u2228 \u00acp_12(Adley))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_9(x))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\np_9(Adley)\n\u00acp_6(Adley)\np_5(Adley) \u2228 p_9(Adley)\n\u00acp_4(Adley) \u2228 p_5(Adley) \u2228 p_9(Adley)\n\u00acp_10(Adley) \u2228 p_7(Adley)\np_10(Adley) \u2228 \u00acp_7(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2228 p_12(Adley))\np_11(Adley) \u2192 (\u00acp_10(Adley) \u2228 \u00acp_12(Adley))\np_9(Adley) \u2192 \u00acp_8(Adley)",
            "Initial Goal": "\u00acp_8(Adley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Adley).",
                    "-p_5(Adley).",
                    "-p_3(Adley).",
                    "-p_1(Adley).",
                    "-p_2(Adley).",
                    "-p_0(Adley).",
                    "all x (-p_4(x) | p_5(x) | p_9(x)).",
                    "all x (p_13(x) -> p_3(x)).",
                    "(-(p_14(Adley) <-> p_1(Adley))) -> p_2(Adley).",
                    "p_12(Adley) | p_14(Adley).",
                    "p_11(Adley) | p_13(Adley).",
                    "p_11(Adley) -> (-(p_10(Adley) <-> p_12(Adley))).",
                    "(-(p_10(Adley) <-> p_7(Adley))) -> p_0(Adley).",
                    "-(p_6(Adley) <-> p_9(Adley)).",
                    "p_9(Adley).",
                    "-p_6(Adley).",
                    "p_5(Adley) | p_9(Adley).",
                    "-p_4(Adley) | p_5(Adley) | p_9(Adley).",
                    "-p_10(Adley) | p_7(Adley).",
                    "p_10(Adley) | -p_7(Adley).",
                    "p_11(Adley) -> (p_10(Adley) | p_12(Adley)).",
                    "p_11(Adley) -> (-p_10(Adley) | -p_12(Adley)).",
                    "p_9(Adley) -> -p_8(Adley)."
                ],
                "formulas(goals)": [
                    "-p_8(Adley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Adley) \u2228 p_8(Adley)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Adley) \u2192 \u00acp_8(Adley)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Adley)\n\u00acp_5(Adley)\n\u00acp_3(Adley)\n\u00acp_1(Adley)\n\u00acp_2(Adley)\n\u00acp_0(Adley)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_9(x))\n\u2200x (p_13(x) \u2192 p_3(x))\n(p_14(Adley) \u2295 p_1(Adley)) \u2192 p_2(Adley)\np_12(Adley) \u2228 p_14(Adley)\np_11(Adley) \u2228 p_13(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2295 p_12(Adley))\n(p_10(Adley) \u2295 p_7(Adley)) \u2192 p_0(Adley)\np_6(Adley) \u2295 p_9(Adley)\np_9(Adley)\n\u00acp_6(Adley)\np_5(Adley) \u2228 p_9(Adley)\n\u00acp_4(Adley) \u2228 p_5(Adley) \u2228 p_9(Adley)\n\u00acp_10(Adley) \u2228 p_7(Adley)\np_10(Adley) \u2228 \u00acp_7(Adley)\np_11(Adley) \u2192 (p_10(Adley) \u2228 p_12(Adley))\np_11(Adley) \u2192 (\u00acp_10(Adley) \u2228 \u00acp_12(Adley))\np_9(Adley) \u2192 p_8(Adley)",
            "Initial Goal": "\u00acp_8(Adley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Adley)",
                    "-p_5(Adley)",
                    "-p_3(Adley)",
                    "-p_1(Adley)",
                    "-p_2(Adley)",
                    "-p_0(Adley)",
                    "all x (-p_4(x) | p_5(x) | p_9(x))",
                    "all x (p_13(x) -> p_3(x))",
                    "(-(p_14(Adley) <-> p_1(Adley))) -> p_2(Adley)",
                    "p_12(Adley) | p_14(Adley)",
                    "p_11(Adley) | p_13(Adley)",
                    "p_11(Adley) -> (-(p_10(Adley) <-> p_12(Adley)))",
                    "(-(p_10(Adley) <-> p_7(Adley))) -> p_0(Adley)",
                    "-(p_6(Adley) <-> p_9(Adley))",
                    "p_9(Adley)",
                    "-p_6(Adley)",
                    "p_5(Adley) | p_9(Adley)",
                    "-p_4(Adley) | p_5(Adley) | p_9(Adley)",
                    "-p_10(Adley) | p_7(Adley)",
                    "p_10(Adley) | -p_7(Adley)",
                    "p_11(Adley) -> (p_10(Adley) | p_12(Adley))",
                    "p_11(Adley) -> (-p_10(Adley) | -p_12(Adley))",
                    "p_9(Adley) -> p_8(Adley)"
                ],
                "formulas(goals)": [
                    "-(-p_8(Adley))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Adley) \u2192 \u00acp_8(Adley)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Adley) \u2192 p_8(Adley)"
                ]
            }
        }
    ]
}