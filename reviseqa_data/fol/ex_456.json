{
    "background_story": "Dummy was a small, spherical robot designed for surveillance and reconnaissance. Equipped with advanced sensors and a stealthy design, Dummy could snoop around without being detected. Its creator, a brilliant but reclusive scientist, programmed Dummy to gather intel and report back without raising suspicion. Dummy's missions often took it into the heart of enemy territory, where it would snoop out secrets and transmit vital information back to its creator. Despite its name, Dummy was incredibly intelligent and resourceful, often finding creative ways to evade detection and complete its objectives. As its reputation grew, Dummy became the go-to spy bot for high-stakes missions, earning a reputation for being able to snoop out even the most closely guarded secrets.",
    "predicates": [
        {
            "id": 0,
            "name": "sophisticated"
        },
        {
            "id": 1,
            "name": "gather_intel"
        },
        {
            "id": 2,
            "name": "evade_detection"
        },
        {
            "id": 3,
            "name": "is_portable"
        },
        {
            "id": 4,
            "name": "is_mobile"
        },
        {
            "id": 5,
            "name": "transmit_data"
        },
        {
            "id": 6,
            "name": "stealthy"
        },
        {
            "id": 7,
            "name": "spy_bot"
        },
        {
            "id": 8,
            "name": "small_size"
        },
        {
            "id": 9,
            "name": "advanced_sensors"
        },
        {
            "id": 10,
            "name": "has_cameras"
        },
        {
            "id": 11,
            "name": "can_navigate"
        },
        {
            "id": 12,
            "name": "resourceful"
        },
        {
            "id": 13,
            "name": "moves_quietly"
        },
        {
            "id": 14,
            "name": "has_wifi"
        },
        {
            "id": 15,
            "name": "is_connected"
        },
        {
            "id": 16,
            "name": "has_radar"
        },
        {
            "id": 17,
            "name": "is_silent"
        },
        {
            "id": 18,
            "name": "is_compact"
        },
        {
            "id": 19,
            "name": "is_light"
        },
        {
            "id": 20,
            "name": "has_lenses"
        },
        {
            "id": 21,
            "name": "conducts_missions"
        },
        {
            "id": 22,
            "name": "reports_back"
        },
        {
            "id": 23,
            "name": "is_autonomous"
        },
        {
            "id": 24,
            "name": "has_propulsion"
        }
    ],
    "subject_name": "Dummy",
    "subject_category": "robot",
    "keyword": "snoop",
    "all_facts": [
        {
            "id": 0,
            "subject": "Dummy",
            "text": "Dummy is not sophisticated.",
            "fol": "\u00acp_0(Dummy)",
            "str_fol": "\u00acsophisticated(Dummy)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Dummy",
            "text": "Dummy gathers intel.",
            "fol": "p_1(Dummy)",
            "str_fol": "gather_intel(Dummy)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Dummy",
            "text": "Dummy does not evade detection.",
            "fol": "\u00acp_2(Dummy)",
            "str_fol": "\u00acevade_detection(Dummy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Dummy",
            "text": "Dummy is portable.",
            "fol": "p_3(Dummy)",
            "str_fol": "is_portable(Dummy)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Dummy",
            "text": "Dummy is not mobile.",
            "fol": "\u00acp_4(Dummy)",
            "str_fol": "\u00acis_mobile(Dummy)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Dummy",
            "text": "Dummy cannot navigate.",
            "fol": "\u00acp_11(Dummy)",
            "str_fol": "\u00accan_navigate(Dummy)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Dummy",
            "text": "Dummy has advanced sensors.",
            "fol": "p_9(Dummy)",
            "str_fol": "advanced_sensors(Dummy)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Dummy",
            "text": "Dummy does not have cameras.",
            "fol": "\u00acp_10(Dummy)",
            "str_fol": "\u00achas_cameras(Dummy)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Dummy",
            "text": "Dummy has a small size.",
            "fol": "p_8(Dummy)",
            "str_fol": "small_size(Dummy)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Dummy",
            "text": "Dummy transmits data.",
            "fol": "p_5(Dummy)",
            "str_fol": "transmit_data(Dummy)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Dummy",
            "text": "Dummy is not mobile.",
            "fol": "\u00acp_4(Dummy)",
            "str_fol": "\u00acis_mobile(Dummy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Dummy",
            "text": "Dummy is portable.",
            "fol": "p_3(Dummy)",
            "str_fol": "is_portable(Dummy)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dummy",
            "text": "Dummy gathers intel.",
            "fol": "p_1(Dummy)",
            "str_fol": "gather_intel(Dummy)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Dummy",
            "text": "Dummy does not evade detection.",
            "fol": "\u00acp_2(Dummy)",
            "str_fol": "\u00acevade_detection(Dummy)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Dummy",
            "text": "Dummy is not sophisticated.",
            "fol": "\u00acp_0(Dummy)",
            "str_fol": "\u00acsophisticated(Dummy)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Any robot that can navigate is mobile.",
            "fol": "\u2200x (p_11(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (can_navigate(x) \u2192 is_mobile(x))"
        },
        {
            "id": 5,
            "text": "A robot either has the ability to navigate or is equipped with advanced sensors, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_9(x))",
            "str_fol": "\u2200x (can_navigate(x) \u2295 advanced_sensors(x))"
        },
        {
            "id": 4,
            "text": "A robot is either portable or has cameras, but not necessarily both.",
            "fol": "\u2200x (p_3(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (is_portable(x) \u2295 has_cameras(x))"
        },
        {
            "id": 3,
            "text": "Dummy is either small or has cameras.",
            "fol": "p_8(Dummy) \u2228 p_10(Dummy)",
            "str_fol": "small_size(Dummy) \u2228 has_cameras(Dummy)"
        },
        {
            "id": 2,
            "text": "All spy bots have a small size and advanced sensors.",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (spy_bot(x) \u2192 (small_size(x) \u2227 advanced_sensors(x)))"
        },
        {
            "id": 1,
            "text": "Any robot that gathers intel either evades detection or transmits data.",
            "fol": "\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))",
            "str_fol": "\u2200x (gather_intel(x) \u2192 (evade_detection(x) \u2228 transmit_data(x)))"
        },
        {
            "id": 0,
            "text": "If Dummy is sophisticated, then it transmits data and is stealthy.",
            "fol": "p_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))",
            "str_fol": "sophisticated(Dummy) \u2192 (transmit_data(Dummy) \u2227 stealthy(Dummy))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Dummy",
            "text": "Dummy is not mobile.",
            "fol": "\u00acp_4(Dummy)",
            "str_fol": "\u00acis_mobile(Dummy)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Dummy",
            "text": "Dummy is portable.",
            "fol": "p_3(Dummy)",
            "str_fol": "is_portable(Dummy)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Dummy",
            "text": "Dummy gathers intel.",
            "fol": "p_1(Dummy)",
            "str_fol": "gather_intel(Dummy)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Dummy",
            "text": "Dummy does not evade detection.",
            "fol": "\u00acp_2(Dummy)",
            "str_fol": "\u00acevade_detection(Dummy)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Dummy",
            "text": "Dummy is not sophisticated.",
            "fol": "\u00acp_0(Dummy)",
            "str_fol": "\u00acsophisticated(Dummy)",
            "negation": true
        },
        {
            "id": 6,
            "text": "Any robot that can navigate is mobile.",
            "fol": "\u2200x (p_11(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (can_navigate(x) \u2192 is_mobile(x))"
        },
        {
            "id": 5,
            "text": "A robot either has the ability to navigate or is equipped with advanced sensors, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_9(x))",
            "str_fol": "\u2200x (can_navigate(x) \u2295 advanced_sensors(x))"
        },
        {
            "id": 4,
            "text": "A robot is either portable or has cameras, but not necessarily both.",
            "fol": "\u2200x (p_3(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (is_portable(x) \u2295 has_cameras(x))"
        },
        {
            "id": 3,
            "text": "Dummy is either small or has cameras.",
            "fol": "p_8(Dummy) \u2228 p_10(Dummy)",
            "str_fol": "small_size(Dummy) \u2228 has_cameras(Dummy)"
        },
        {
            "id": 2,
            "text": "All spy bots have a small size and advanced sensors.",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (spy_bot(x) \u2192 (small_size(x) \u2227 advanced_sensors(x)))"
        },
        {
            "id": 1,
            "text": "Any robot that gathers intel either evades detection or transmits data.",
            "fol": "\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))",
            "str_fol": "\u2200x (gather_intel(x) \u2192 (evade_detection(x) \u2228 transmit_data(x)))"
        },
        {
            "id": 0,
            "text": "If Dummy is sophisticated, then it transmits data and is stealthy.",
            "fol": "p_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))",
            "str_fol": "sophisticated(Dummy) \u2192 (transmit_data(Dummy) \u2227 stealthy(Dummy))"
        }
    ],
    "context_fol": "\u00acp_4(Dummy)\np_3(Dummy)\np_1(Dummy)\n\u00acp_2(Dummy)\n\u00acp_0(Dummy)\n\u2200x (p_11(x) \u2192 p_4(x))\n\u2200x (p_11(x) \u2295 p_9(x))\n\u2200x (p_3(x) \u2295 p_10(x))\np_8(Dummy) \u2228 p_10(Dummy)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))\np_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))",
    "conclusion": {
        "id": 14,
        "text": "If Dummy is a spy bot, then it is either stealthy or resourceful (or both).",
        "fol": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
        "str_fol": "spy_bot(Dummy) \u2192 (stealthy(Dummy) \u2228 resourceful(Dummy))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Dummy",
                    "text": "Dummy is not mobile.",
                    "fol": "\u00acp_4(Dummy)",
                    "str_fol": "\u00acis_mobile(Dummy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Any robot that can navigate is mobile.",
                    "fol": "\u2200x (p_11(x) \u2192 p_4(x))",
                    "str_fol": "\u2200x (can_navigate(x) \u2192 is_mobile(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Dummy",
                "text": "Dummy cannot navigate.",
                "fol": "\u00acp_11(Dummy)",
                "str_fol": "\u00accan_navigate(Dummy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Dummy",
                    "text": "Dummy cannot navigate.",
                    "fol": "\u00acp_11(Dummy)",
                    "str_fol": "\u00accan_navigate(Dummy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "A robot either has the ability to navigate or is equipped with advanced sensors, but not necessarily both.",
                    "fol": "\u2200x (p_11(x) \u2295 p_9(x))",
                    "str_fol": "\u2200x (can_navigate(x) \u2295 advanced_sensors(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Dummy",
                "text": "Dummy has advanced sensors.",
                "fol": "p_9(Dummy)",
                "str_fol": "advanced_sensors(Dummy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Dummy",
                    "text": "Dummy is portable.",
                    "fol": "p_3(Dummy)",
                    "str_fol": "is_portable(Dummy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "A robot is either portable or has cameras, but not necessarily both.",
                    "fol": "\u2200x (p_3(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (is_portable(x) \u2295 has_cameras(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Dummy",
                "text": "Dummy does not have cameras.",
                "fol": "\u00acp_10(Dummy)",
                "str_fol": "\u00achas_cameras(Dummy)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Dummy",
                    "text": "Dummy does not have cameras.",
                    "fol": "\u00acp_10(Dummy)",
                    "str_fol": "\u00achas_cameras(Dummy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Dummy is either small or has cameras.",
                    "fol": "p_8(Dummy) \u2228 p_10(Dummy)",
                    "str_fol": "small_size(Dummy) \u2228 has_cameras(Dummy)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Dummy",
                "text": "Dummy has a small size.",
                "fol": "p_8(Dummy)",
                "str_fol": "small_size(Dummy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Dummy",
                    "text": "Dummy has a small size.",
                    "fol": "p_8(Dummy)",
                    "str_fol": "small_size(Dummy)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Dummy",
                    "text": "Dummy has advanced sensors.",
                    "fol": "p_9(Dummy)",
                    "str_fol": "advanced_sensors(Dummy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "All spy bots have a small size and advanced sensors.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
                    "str_fol": "\u2200x (spy_bot(x) \u2192 (small_size(x) \u2227 advanced_sensors(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Dummy",
                    "text": "Dummy gathers intel.",
                    "fol": "p_1(Dummy)",
                    "str_fol": "gather_intel(Dummy)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Dummy",
                    "text": "Dummy does not evade detection.",
                    "fol": "\u00acp_2(Dummy)",
                    "str_fol": "\u00acevade_detection(Dummy)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Any robot that gathers intel either evades detection or transmits data.",
                    "fol": "\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))",
                    "str_fol": "\u2200x (gather_intel(x) \u2192 (evade_detection(x) \u2228 transmit_data(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Dummy",
                "text": "Dummy transmits data.",
                "fol": "p_5(Dummy)",
                "str_fol": "transmit_data(Dummy)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Dummy",
                    "text": "Dummy is not sophisticated.",
                    "fol": "\u00acp_0(Dummy)",
                    "str_fol": "\u00acsophisticated(Dummy)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Dummy",
                    "text": "Dummy transmits data.",
                    "fol": "p_5(Dummy)",
                    "str_fol": "transmit_data(Dummy)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Dummy is sophisticated, then it transmits data and is stealthy.",
                    "fol": "p_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))",
                    "str_fol": "sophisticated(Dummy) \u2192 (transmit_data(Dummy) \u2227 stealthy(Dummy))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Dummy)\np_3(Dummy)\np_1(Dummy)\n\u00acp_2(Dummy)\n\u00acp_0(Dummy)\n\u2200x (p_11(x) \u2192 p_4(x))\n\u2200x (p_11(x) \u2295 p_9(x))\n\u2200x (p_3(x) \u2295 p_10(x))\np_8(Dummy) \u2228 p_10(Dummy)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))\np_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))",
            "Initial Goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Dummy)",
                    "p_3(Dummy)",
                    "p_1(Dummy)",
                    "-p_2(Dummy)",
                    "-p_0(Dummy)",
                    "all x (p_11(x) -> p_4(x))",
                    "all x (-(p_11(x) <-> p_9(x)))",
                    "all x (-(p_3(x) <-> p_10(x)))",
                    "p_8(Dummy) | p_10(Dummy)",
                    "all x (p_7(x) -> (p_8(x) & p_9(x)))",
                    "all x (p_1(x) -> (p_2(x) | p_5(x)))",
                    "p_0(Dummy) -> (p_5(Dummy) & p_6(Dummy))",
                    "p_5(Dummy) -> p_6(Dummy)"
                ],
                "formulas(goals)": [
                    "p_7(Dummy) -> (p_6(Dummy) | p_12(Dummy))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Dummy) \u2192 p_6(Dummy)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Dummy)\np_3(Dummy)\np_1(Dummy)\n\u00acp_2(Dummy)\n\u00acp_0(Dummy)\n\u2200x (p_11(x) \u2192 p_4(x))\n\u2200x (p_11(x) \u2295 p_9(x))\n\u2200x (p_3(x) \u2295 p_10(x))\np_8(Dummy) \u2228 p_10(Dummy)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))\np_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))\np_3(Dummy) \u2192 p_7(Dummy)\np_9(Dummy) \u2192 \u00acp_6(Dummy)\n\u2200x (p_3(x) \u2192 \u00acp_12(x))",
            "Initial Goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Dummy)",
                    "p_3(Dummy)",
                    "p_1(Dummy)",
                    "-p_2(Dummy)",
                    "-p_0(Dummy)",
                    "all x (p_11(x) -> p_4(x))",
                    "all x (-(p_11(x) <-> p_9(x)))",
                    "all x (-(p_3(x) <-> p_10(x)))",
                    "p_8(Dummy) | p_10(Dummy)",
                    "all x (p_7(x) -> (p_8(x) & p_9(x)))",
                    "all x (p_1(x) -> (p_2(x) | p_5(x)))",
                    "p_0(Dummy) -> (p_5(Dummy) & p_6(Dummy))",
                    "p_3(Dummy) -> p_7(Dummy)",
                    "p_9(Dummy) -> -p_6(Dummy)",
                    "all x (p_3(x) -> -p_12(x))"
                ],
                "formulas(goals)": [
                    "-(p_7(Dummy) -> (p_6(Dummy) | p_12(Dummy)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Dummy) \u2192 p_7(Dummy)",
                    "p_9(Dummy) \u2192 \u00acp_6(Dummy)",
                    "\u2200x (p_3(x) \u2192 \u00acp_12(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Dummy).\np_3(Dummy).\np_1(Dummy).\n\u00acp_2(Dummy).\n\u00acp_0(Dummy).\n\u2200x (p_11(x) \u2192 p_4(x)).\n\u2200x (p_11(x) \u2194 \u00acp_9(x)).\n\u2200x (p_3(x) \u2194 \u00acp_10(x)).\np_8(Dummy) \u2228 p_10(Dummy).\n\u2200x (p_7(x) \u2192 p_8(x)).\n\u2200x (p_7(x) \u2192 p_9(x)).\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x))).\np_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy)).\np_3(Dummy) \u2192 p_7(Dummy).\np_9(Dummy) \u2192 \u00acp_6(Dummy).\n\u2200x (p_3(x) \u2192 \u00acp_12(x)).\np_9(Dummy).\n\u00acp_10(Dummy).\np_8(Dummy).",
            "Initial Goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Dummy).",
                    "p_3(Dummy).",
                    "p_1(Dummy).",
                    "-p_2(Dummy).",
                    "-p_0(Dummy).",
                    "all x (p_11(x) -> p_4(x)).",
                    "all x (p_11(x) <-> -p_9(x)).",
                    "all x (p_3(x) <-> -p_10(x)).",
                    "p_8(Dummy) | p_10(Dummy).",
                    "all x (p_7(x) -> p_8(x)).",
                    "all x (p_7(x) -> p_9(x)).",
                    "all x (p_1(x) -> (p_2(x) | p_5(x))).",
                    "p_0(Dummy) -> (p_5(Dummy) & p_6(Dummy)).",
                    "p_3(Dummy) -> p_7(Dummy).",
                    "p_9(Dummy) -> -p_6(Dummy).",
                    "all x (p_3(x) -> -p_12(x)).",
                    "p_9(Dummy).",
                    "-p_10(Dummy).",
                    "p_8(Dummy)."
                ],
                "formulas(goals)": [
                    "- (p_7(Dummy) -> (p_6(Dummy) | p_12(Dummy)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))"
                ],
                "added_facts": [
                    "p_9(Dummy)",
                    "\u00acp_10(Dummy)",
                    "p_8(Dummy)"
                ],
                "added_rules": [
                    "\u2200x (p_7(x) \u2192 p_8(x))",
                    "\u2200x (p_7(x) \u2192 p_9(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Dummy)\np_3(Dummy)\np_1(Dummy)\n\u00acp_2(Dummy)\n\u00acp_0(Dummy)\n\u2200x (p_11(x) \u2192 p_4(x))\n\u2200x (p_11(x) \u2194 \u00acp_9(x))\n\u2200x (p_3(x) \u2194 \u00acp_10(x))\np_8(Dummy) \u2228 p_10(Dummy)\n\u2200x (p_7(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))\np_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))\np_3(Dummy) \u2192 p_7(Dummy)\np_9(Dummy) \u2192 \u00acp_6(Dummy)\n\u2200x (p_3(x) \u2192 \u00acp_12(x))\np_9(Dummy)\n\u00acp_10(Dummy)\np_8(Dummy)\n\u2200x (p_9(x) \u2192 \u00acp_11(x))\n\u2200x (p_3(x) \u2192 (p_7(x) \u2227 \u00acp_12(x)))\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "Initial Goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Dummy)",
                    "p_3(Dummy)",
                    "p_1(Dummy)",
                    "-p_2(Dummy)",
                    "-p_0(Dummy)",
                    "all x (p_11(x) -> p_4(x))",
                    "all x (p_11(x) <-> -p_9(x))",
                    "all x (p_3(x) <-> -p_10(x))",
                    "p_8(Dummy) | p_10(Dummy)",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (p_7(x) -> p_9(x))",
                    "all x (p_1(x) -> (p_2(x) | p_5(x)))",
                    "p_0(Dummy) -> (p_5(Dummy) & p_6(Dummy))",
                    "p_3(Dummy) -> p_7(Dummy)",
                    "p_9(Dummy) -> -p_6(Dummy)",
                    "all x (p_3(x) -> -p_12(x))",
                    "p_9(Dummy)",
                    "-p_10(Dummy)",
                    "p_8(Dummy)",
                    "all x (p_9(x) -> -p_11(x))",
                    "all x (p_3(x) -> (p_7(x) & -p_12(x)))",
                    "all x (p_7(x) -> (p_8(x) & p_9(x)))"
                ],
                "formulas(goals)": [
                    "p_7(Dummy) & -p_6(Dummy) & -p_12(Dummy)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_9(x) \u2192 \u00acp_11(x))",
                    "\u2200x (p_3(x) \u2192 (p_7(x) \u2227 \u00acp_12(x)))",
                    "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Dummy)\np_3(Dummy)\np_1(Dummy)\n\u00acp_2(Dummy)\n\u00acp_0(Dummy)\n\u2200x (p_11(x) \u2192 p_4(x))\n(\u2200x (p_11(x) \u2192 \u00acp_9(x))) \u2227 (\u2200x (\u00acp_9(x) \u2192 p_11(x)))\n(\u2200x (p_3(x) \u2192 \u00acp_10(x))) \u2227 (\u2200x (\u00acp_10(x) \u2192 p_3(x)))\np_8(Dummy) \u2228 p_10(Dummy)\n\u2200x (p_7(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))\n(p_0(Dummy) \u2192 p_5(Dummy)) \u2227 (p_0(Dummy) \u2192 p_6(Dummy))\np_3(Dummy) \u2192 p_7(Dummy)\np_9(Dummy) \u2192 \u00acp_6(Dummy)\n\u2200x (p_3(x) \u2192 \u00acp_12(x))\np_9(Dummy)\n\u00acp_10(Dummy)\np_8(Dummy)\n\u2200x (p_9(x) \u2192 \u00acp_11(x))\n\u2200x (p_3(x) \u2192 (p_7(x) \u2227 \u00acp_12(x)))\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\n\u00acp_12(Dummy)\n\u00acp_6(Dummy)\np_7(Dummy)\n\u00acp_11(Dummy)",
            "Initial Goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Dummy)",
                    "p_3(Dummy)",
                    "p_1(Dummy)",
                    "-p_2(Dummy)",
                    "-p_0(Dummy)",
                    "all x (p_11(x) -> p_4(x))",
                    "(all x (p_11(x) -> -p_9(x))) & (all x (-p_9(x) -> p_11(x)))",
                    "(all x (p_3(x) -> -p_10(x))) & (all x (-p_10(x) -> p_3(x)))",
                    "p_8(Dummy) | p_10(Dummy)",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (p_7(x) -> p_9(x))",
                    "all x (p_1(x) -> (p_2(x) | p_5(x)))",
                    "(p_0(Dummy) -> p_5(Dummy)) & (p_0(Dummy) -> p_6(Dummy))",
                    "p_3(Dummy) -> p_7(Dummy)",
                    "p_9(Dummy) -> -p_6(Dummy)",
                    "all x (p_3(x) -> -p_12(x))",
                    "p_9(Dummy)",
                    "-p_10(Dummy)",
                    "p_8(Dummy)",
                    "all x (p_9(x) -> -p_11(x))",
                    "all x (p_3(x) -> (p_7(x) & -p_12(x)))",
                    "all x (p_7(x) -> (p_8(x) & p_9(x)))",
                    "-p_12(Dummy)",
                    "-p_6(Dummy)",
                    "p_7(Dummy)",
                    "-p_11(Dummy)"
                ],
                "formulas(goals)": [
                    "-(p_7(Dummy) -> (p_6(Dummy) | p_12(Dummy)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_11(x) \u2194 \u00acp_9(x))",
                    "\u2200x (p_3(x) \u2194 \u00acp_10(x))",
                    "p_0(Dummy) \u2192 (p_5(Dummy) \u2227 p_6(Dummy))"
                ],
                "added_facts": [
                    "\u00acp_12(Dummy)",
                    "\u00acp_6(Dummy)",
                    "p_7(Dummy)",
                    "\u00acp_11(Dummy)"
                ],
                "added_rules": [
                    "(\u2200x (p_11(x) \u2192 \u00acp_9(x))) \u2227 (\u2200x (\u00acp_9(x) \u2192 p_11(x)))",
                    "(\u2200x (p_3(x) \u2192 \u00acp_10(x))) \u2227 (\u2200x (\u00acp_10(x) \u2192 p_3(x)))",
                    "(p_0(Dummy) \u2192 p_5(Dummy)) \u2227 (p_0(Dummy) \u2192 p_6(Dummy))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Dummy)\np_3(Dummy)\np_1(Dummy)\n\u00acp_2(Dummy)\n\u00acp_0(Dummy)\n\u2200x (p_11(x) \u2192 p_4(x))\n(\u2200x (p_11(x) \u2192 \u00acp_9(x))) \u2227 (\u2200x (\u00acp_9(x) \u2192 p_11(x)))\n(\u2200x (p_3(x) \u2192 \u00acp_10(x))) \u2227 (\u2200x (\u00acp_10(x) \u2192 p_3(x)))\np_8(Dummy) \u2228 p_10(Dummy)\n\u2200x (p_7(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_5(x)))\n(p_0(Dummy) \u2192 p_5(Dummy)) \u2227 (p_0(Dummy) \u2192 p_6(Dummy))\np_3(Dummy) \u2192 p_7(Dummy)\np_9(Dummy) \u2192 \u00acp_6(Dummy)\n\u2200x (p_3(x) \u2192 \u00acp_12(x))\np_9(Dummy)\n\u00acp_10(Dummy)\np_8(Dummy)\n\u2200x (p_9(x) \u2192 \u00acp_11(x))\n\u2200x (p_3(x) \u2192 (p_7(x) \u2227 \u00acp_12(x)))\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\n\u00acp_12(Dummy)\np_7(Dummy)\n\u00acp_11(Dummy)\np_7(Dummy) \u2192 p_6(Dummy)",
            "Initial Goal": "p_7(Dummy) \u2192 (p_6(Dummy) \u2228 p_12(Dummy))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_4(Dummy).",
                    "p_3(Dummy).",
                    "p_1(Dummy).",
                    "- p_2(Dummy).",
                    "- p_0(Dummy).",
                    "all x (p_11(x) -> p_4(x)).",
                    "(all x (p_11(x) -> - p_9(x))) & (all x (- p_9(x) -> p_11(x))).",
                    "(all x (p_3(x) -> - p_10(x))) & (all x (- p_10(x) -> p_3(x))).",
                    "p_8(Dummy) | p_10(Dummy).",
                    "all x (p_7(x) -> p_8(x)).",
                    "all x (p_7(x) -> p_9(x)).",
                    "all x (p_1(x) -> (p_2(x) | p_5(x))).",
                    "(p_0(Dummy) -> p_5(Dummy)) & (p_0(Dummy) -> p_6(Dummy)).",
                    "p_3(Dummy) -> p_7(Dummy).",
                    "p_9(Dummy) -> - p_6(Dummy).",
                    "all x (p_3(x) -> - p_12(x)).",
                    "p_9(Dummy).",
                    "- p_10(Dummy).",
                    "p_8(Dummy).",
                    "all x (p_9(x) -> - p_11(x)).",
                    "all x (p_3(x) -> (p_7(x) & - p_12(x))).",
                    "all x (p_7(x) -> (p_8(x) & p_9(x))).",
                    "- p_12(Dummy).",
                    "p_7(Dummy).",
                    "- p_11(Dummy).",
                    "p_7(Dummy) -> p_6(Dummy)."
                ],
                "formulas(goals)": [
                    "p_7(Dummy) -> (p_6(Dummy) | p_12(Dummy))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Dummy)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Dummy) \u2192 p_6(Dummy)"
                ]
            }
        }
    ]
}