{
    "background_story": "Hailey was a dedicated and compassionate obstetrician who had spent her career bringing new life into the world. Her expertise in parturiency, the process of childbirth, had earned her a reputation as one of the most skilled and caring doctors in her field. With a gentle touch and a reassuring smile, Hailey guided countless women through the miracle of birth, making each experience as safe and joyful as possible. Her passion for her work was evident in every delivery, as she worked tirelessly to ensure that every mother and baby received the best care possible. Hailey's devotion to her patients and her craft had made her a beloved figure in the hospital, and her work had brought joy and new life to countless families.",
    "predicates": [
        {
            "id": 0,
            "name": "lose_patients"
        },
        {
            "id": 1,
            "name": "lose_trust"
        },
        {
            "id": 2,
            "name": "create_fear"
        },
        {
            "id": 3,
            "name": "be_nurturing"
        },
        {
            "id": 4,
            "name": "caring"
        },
        {
            "id": 5,
            "name": "uncaring"
        },
        {
            "id": 6,
            "name": "hurt_others"
        },
        {
            "id": 7,
            "name": "cause_pain"
        },
        {
            "id": 8,
            "name": "lack_empathy"
        },
        {
            "id": 9,
            "name": "be_insensitive"
        },
        {
            "id": 10,
            "name": "show_empathy"
        },
        {
            "id": 11,
            "name": "give_support"
        },
        {
            "id": 12,
            "name": "is_doctor"
        },
        {
            "id": 13,
            "name": "is_compassionate"
        },
        {
            "id": 14,
            "name": "is_angry"
        },
        {
            "id": 15,
            "name": "acts_rashly"
        },
        {
            "id": 16,
            "name": "is_cruel"
        },
        {
            "id": 17,
            "name": "heals_people"
        },
        {
            "id": 18,
            "name": "ignore_feelings"
        },
        {
            "id": 19,
            "name": "dismiss_concerns"
        },
        {
            "id": 20,
            "name": "listen_actively"
        },
        {
            "id": 21,
            "name": "validate_feelings"
        }
    ],
    "subject_name": "Hailey",
    "subject_category": "human",
    "keyword": "parturiency",
    "all_facts": [
        {
            "id": 0,
            "subject": "Hailey",
            "text": "Hailey does not lose patients.",
            "fol": "\u00acp_0(Hailey)",
            "str_fol": "\u00aclose_patients(Hailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hailey",
            "text": "Hailey does not lose the trust of her patients.",
            "fol": "\u00acp_1(Hailey)",
            "str_fol": "\u00aclose_trust(Hailey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Hailey",
            "text": "Hailey does not create fear.",
            "fol": "\u00acp_2(Hailey)",
            "str_fol": "\u00accreate_fear(Hailey)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Hailey",
            "text": "Hailey is nurturing.",
            "fol": "p_3(Hailey)",
            "str_fol": "be_nurturing(Hailey)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Hailey",
            "text": "Hailey shows empathy.",
            "fol": "p_10(Hailey)",
            "str_fol": "show_empathy(Hailey)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Hailey",
            "text": "Hailey is not insensitive.",
            "fol": "\u00acp_9(Hailey)",
            "str_fol": "\u00acbe_insensitive(Hailey)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Hailey",
            "text": "Hailey does not lack empathy.",
            "fol": "\u00acp_8(Hailey)",
            "str_fol": "\u00aclack_empathy(Hailey)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Hailey",
            "text": "Hailey does not cause pain.",
            "fol": "\u00acp_7(Hailey)",
            "str_fol": "\u00accause_pain(Hailey)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Hailey",
            "text": "Hailey does not hurt others.",
            "fol": "\u00acp_6(Hailey)",
            "str_fol": "\u00achurt_others(Hailey)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Hailey",
            "text": "Hailey is not uncaring.",
            "fol": "\u00acunp_4(Hailey)",
            "str_fol": "\u00acuncaring(Hailey)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Hailey",
            "text": "Hailey is caring.",
            "fol": "p_4(Hailey)",
            "str_fol": "caring(Hailey)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Hailey",
            "text": "Hailey is nurturing.",
            "fol": "p_3(Hailey)",
            "str_fol": "be_nurturing(Hailey)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Hailey",
            "text": "Hailey does not lose patients.",
            "fol": "\u00acp_0(Hailey)",
            "str_fol": "\u00aclose_patients(Hailey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Hailey",
            "text": "Hailey does not create fear.",
            "fol": "\u00acp_2(Hailey)",
            "str_fol": "\u00accreate_fear(Hailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hailey",
            "text": "Hailey does not lose the trust of her patients.",
            "fol": "\u00acp_1(Hailey)",
            "str_fol": "\u00aclose_trust(Hailey)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "All nurturing humans give support and show empathy.",
            "fol": "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (be_nurturing(x) \u2192 (give_support(x) \u2227 show_empathy(x)))"
        },
        {
            "id": 5,
            "text": "Hailey is either insensitive or shows empathy, but not both.",
            "fol": "p_9(Hailey) \u2295 p_10(Hailey)",
            "str_fol": "be_insensitive(Hailey) \u2295 show_empathy(Hailey)"
        },
        {
            "id": 4,
            "text": "Any person who lacks empathy or is insensitive will lose patients.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((lack_empathy(x) \u2228 be_insensitive(x)) \u2192 lose_patients(x))"
        },
        {
            "id": 3,
            "text": "Anyone who causes pain or creates fear will lose the trust of others.",
            "fol": "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((cause_pain(x) \u2228 create_fear(x)) \u2192 lose_trust(x))"
        },
        {
            "id": 2,
            "text": "If someone either hurts others or causes pain, then they lack empathy.",
            "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((hurt_others(x) \u2295 cause_pain(x)) \u2192 lack_empathy(x))"
        },
        {
            "id": 1,
            "text": "Anyone who is uncaring will hurt others.",
            "fol": "\u2200x (unp_4(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (uncaring(x) \u2192 hurt_others(x))"
        },
        {
            "id": 0,
            "text": "Hailey is either caring or uncaring, but not both.",
            "fol": "p_4(Hailey) \u2295 unp_4(Hailey)",
            "str_fol": "caring(Hailey) \u2295 uncaring(Hailey)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Hailey",
            "text": "Hailey is nurturing.",
            "fol": "p_3(Hailey)",
            "str_fol": "be_nurturing(Hailey)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Hailey",
            "text": "Hailey does not lose patients.",
            "fol": "\u00acp_0(Hailey)",
            "str_fol": "\u00aclose_patients(Hailey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Hailey",
            "text": "Hailey does not create fear.",
            "fol": "\u00acp_2(Hailey)",
            "str_fol": "\u00accreate_fear(Hailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hailey",
            "text": "Hailey does not lose the trust of her patients.",
            "fol": "\u00acp_1(Hailey)",
            "str_fol": "\u00aclose_trust(Hailey)",
            "negation": true
        },
        {
            "id": 6,
            "text": "All nurturing humans give support and show empathy.",
            "fol": "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (be_nurturing(x) \u2192 (give_support(x) \u2227 show_empathy(x)))"
        },
        {
            "id": 5,
            "text": "Hailey is either insensitive or shows empathy, but not both.",
            "fol": "p_9(Hailey) \u2295 p_10(Hailey)",
            "str_fol": "be_insensitive(Hailey) \u2295 show_empathy(Hailey)"
        },
        {
            "id": 4,
            "text": "Any person who lacks empathy or is insensitive will lose patients.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((lack_empathy(x) \u2228 be_insensitive(x)) \u2192 lose_patients(x))"
        },
        {
            "id": 3,
            "text": "Anyone who causes pain or creates fear will lose the trust of others.",
            "fol": "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((cause_pain(x) \u2228 create_fear(x)) \u2192 lose_trust(x))"
        },
        {
            "id": 2,
            "text": "If someone either hurts others or causes pain, then they lack empathy.",
            "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((hurt_others(x) \u2295 cause_pain(x)) \u2192 lack_empathy(x))"
        },
        {
            "id": 1,
            "text": "Anyone who is uncaring will hurt others.",
            "fol": "\u2200x (unp_4(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (uncaring(x) \u2192 hurt_others(x))"
        },
        {
            "id": 0,
            "text": "Hailey is either caring or uncaring, but not both.",
            "fol": "p_4(Hailey) \u2295 unp_4(Hailey)",
            "str_fol": "caring(Hailey) \u2295 uncaring(Hailey)"
        }
    ],
    "context_fol": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))\np_9(Hailey) \u2295 p_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))\n\u2200x (unp_4(x) \u2192 p_6(x))\np_4(Hailey) \u2295 unp_4(Hailey)",
    "conclusion": {
        "id": 10,
        "subject": "Hailey",
        "text": "Hailey is caring.",
        "fol": "p_4(Hailey)",
        "str_fol": "caring(Hailey)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_4(Hailey)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Hailey",
                    "text": "Hailey is nurturing.",
                    "fol": "p_3(Hailey)",
                    "str_fol": "be_nurturing(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "All nurturing humans give support and show empathy.",
                    "fol": "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (be_nurturing(x) \u2192 (give_support(x) \u2227 show_empathy(x)))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Hailey",
                "text": "Hailey shows empathy.",
                "fol": "p_10(Hailey)",
                "str_fol": "show_empathy(Hailey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Hailey",
                    "text": "Hailey shows empathy.",
                    "fol": "p_10(Hailey)",
                    "str_fol": "show_empathy(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Hailey is either insensitive or shows empathy, but not both.",
                    "fol": "p_9(Hailey) \u2295 p_10(Hailey)",
                    "str_fol": "be_insensitive(Hailey) \u2295 show_empathy(Hailey)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Hailey",
                "text": "Hailey is not insensitive.",
                "fol": "\u00acp_9(Hailey)",
                "str_fol": "\u00acbe_insensitive(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Hailey",
                    "text": "Hailey is not insensitive.",
                    "fol": "\u00acp_9(Hailey)",
                    "str_fol": "\u00acbe_insensitive(Hailey)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Hailey",
                    "text": "Hailey does not lose patients.",
                    "fol": "\u00acp_0(Hailey)",
                    "str_fol": "\u00aclose_patients(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any person who lacks empathy or is insensitive will lose patients.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((lack_empathy(x) \u2228 be_insensitive(x)) \u2192 lose_patients(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Hailey",
                "text": "Hailey does not lack empathy.",
                "fol": "\u00acp_8(Hailey)",
                "str_fol": "\u00aclack_empathy(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Hailey",
                    "text": "Hailey does not create fear.",
                    "fol": "\u00acp_2(Hailey)",
                    "str_fol": "\u00accreate_fear(Hailey)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Hailey",
                    "text": "Hailey does not lose the trust of her patients.",
                    "fol": "\u00acp_1(Hailey)",
                    "str_fol": "\u00aclose_trust(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who causes pain or creates fear will lose the trust of others.",
                    "fol": "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((cause_pain(x) \u2228 create_fear(x)) \u2192 lose_trust(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Hailey",
                "text": "Hailey does not cause pain.",
                "fol": "\u00acp_7(Hailey)",
                "str_fol": "\u00accause_pain(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Hailey",
                    "text": "Hailey does not cause pain.",
                    "fol": "\u00acp_7(Hailey)",
                    "str_fol": "\u00accause_pain(Hailey)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Hailey",
                    "text": "Hailey does not lack empathy.",
                    "fol": "\u00acp_8(Hailey)",
                    "str_fol": "\u00aclack_empathy(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone either hurts others or causes pain, then they lack empathy.",
                    "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((hurt_others(x) \u2295 cause_pain(x)) \u2192 lack_empathy(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Hailey",
                "text": "Hailey does not hurt others.",
                "fol": "\u00acp_6(Hailey)",
                "str_fol": "\u00achurt_others(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Hailey",
                    "text": "Hailey does not hurt others.",
                    "fol": "\u00acp_6(Hailey)",
                    "str_fol": "\u00achurt_others(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who is uncaring will hurt others.",
                    "fol": "\u2200x (unp_4(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (uncaring(x) \u2192 hurt_others(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Hailey",
                "text": "Hailey is not uncaring.",
                "fol": "\u00acunp_4(Hailey)",
                "str_fol": "\u00acuncaring(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Hailey",
                    "text": "Hailey is not uncaring.",
                    "fol": "\u00acunp_4(Hailey)",
                    "str_fol": "\u00acuncaring(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Hailey is either caring or uncaring, but not both.",
                    "fol": "p_4(Hailey) \u2295 unp_4(Hailey)",
                    "str_fol": "caring(Hailey) \u2295 uncaring(Hailey)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Hailey",
                "text": "Hailey is caring.",
                "fol": "p_4(Hailey)",
                "str_fol": "caring(Hailey)",
                "negation": false
            }
        }
    ],
    "proof_trace": "3 (all x (p_8(x) | p_9(x) -> p_0(x))).  [assumption].\n4 (all x (p_7(x) | p_2(x) -> p_1(x))).  [assumption].\n5 (all x (-(p_6(x) <-> p_7(x)) -> p_8(x))).  [assumption].\n6 (all x (unp_4(x) -> p_6(x))).  [assumption].\n7 -(p_4(Hailey) <-> unp_4(Hailey)).  [assumption].\n8 p_4(Hailey).  [goal].\n12 -p_8(x) | p_0(x).  [clausify(3)].\n13 -p_0(Hailey).  [assumption].\n15 -p_7(x) | p_1(x).  [clausify(4)].\n16 -p_1(Hailey).  [assumption].\n21 -p_6(x) | p_7(x) | p_8(x).  [clausify(5)].\n22 -unp_4(x) | p_6(x).  [clausify(6)].\n24 p_4(Hailey) | unp_4(Hailey).  [clausify(7)].\n25 -p_4(Hailey).  [deny(8)].\n26 -unp_4(x) | p_7(x) | p_8(x).  [resolve(22,b,21,a)].\n27 -p_8(Hailey).  [resolve(12,b,13,a)].\n28 -unp_4(Hailey) | p_7(Hailey).  [resolve(26,c,27,a)].\n29 -p_7(Hailey).  [resolve(15,b,16,a)].\n30 -unp_4(Hailey).  [resolve(28,b,29,a)].\n31 unp_4(Hailey).  [resolve(25,a,24,a)].\n32 $F.  [resolve(30,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))\np_9(Hailey) \u2295 p_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))\n\u2200x (unp_4(x) \u2192 p_6(x))\np_4(Hailey) \u2295 unp_4(Hailey)\n\u00acp_6(Hailey)\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> (p_11(x) & p_10(x)))",
                    "-(p_9(Hailey) <-> p_10(Hailey))",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_8(x))",
                    "all x (unp_4(x) -> p_6(x))",
                    "-(p_4(Hailey) <-> unp_4(Hailey))",
                    "-p_6(Hailey)",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Hailey)",
                    "\u00acp_7(Hailey)",
                    "\u00acp_8(Hailey)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))\np_9(Hailey) \u2295 p_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))\np_4(Hailey) \u2295 unp_4(Hailey)\n\u00acp_6(Hailey)\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)\n\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> (p_11(x) & p_10(x)))",
                    "-(p_9(Hailey) <-> p_10(Hailey))",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_8(x))",
                    "-(p_4(Hailey) <-> unp_4(Hailey))",
                    "-p_6(Hailey)",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))"
                ],
                "formulas(goals)": [
                    "-p_4(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (unp_4(x) \u2192 p_6(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_6(x) \u2192 unp_4(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))\np_9(Hailey) \u2228 p_10(Hailey)\n\u00ac(p_9(Hailey) \u2227 p_10(Hailey))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n\u00ac(p_6(x) \u2227 p_7(x))\np_4(Hailey) \u2228 unp_4(Hailey)\n\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)\n\u2200x (\u00acp_6(x) \u2192 unp_4(x))\n\u2200x (p_3(x) \u2192 p_6(x))\n\u2200x (p_6(x) \u2192 p_4(x))",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey).",
                    "-p_0(Hailey).",
                    "-p_2(Hailey).",
                    "-p_1(Hailey).",
                    "all x (p_3(x) -> (p_11(x) & p_10(x))).",
                    "p_9(Hailey) | p_10(Hailey).",
                    "-(p_9(Hailey) & p_10(Hailey)).",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x)).",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x)).",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x)).",
                    "-(p_6(x) & p_7(x)).",
                    "p_4(Hailey) | unp_4(Hailey).",
                    "-(p_4(Hailey) & unp_4(Hailey)).",
                    "-p_7(Hailey).",
                    "-p_8(Hailey).",
                    "all x (-p_6(x) -> unp_4(x)).",
                    "all x (p_3(x) -> p_6(x)).",
                    "all x (p_6(x) -> p_4(x))."
                ],
                "formulas(goals)": [
                    "p_4(Hailey)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Hailey)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_3(x) \u2192 p_6(x))",
                    "\u2200x (p_6(x) \u2192 p_4(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 p_11(x))\n\u2200x (p_3(x) \u2192 p_10(x))\np_9(Hailey) \u2228 p_10(Hailey)\n\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n\u00ac(p_6(x) \u2227 p_7(x))\np_4(Hailey) \u2228 unp_4(Hailey)\n\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)\n\u2200x (\u00acp_6(x) \u2192 unp_4(x))\n\u2200x (p_3(x) \u2192 p_6(x))\n\u2200x (p_6(x) \u2192 p_4(x))\np_6(Hailey)\np_10(Hailey)\np_11(Hailey)\n\u00acp_9(Hailey)\nunp_4(Hailey) \u2192 \u00acp_4(Hailey)\np_4(Hailey) \u2192 \u00acunp_4(Hailey)",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey).",
                    "-p_0(Hailey).",
                    "-p_2(Hailey).",
                    "-p_1(Hailey).",
                    "all x (p_3(x) -> p_11(x)).",
                    "all x (p_3(x) -> p_10(x)).",
                    "p_9(Hailey) | p_10(Hailey).",
                    "-p_9(Hailey) | -p_10(Hailey).",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x)).",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x)).",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x)).",
                    "-(p_6(x) & p_7(x)).",
                    "p_4(Hailey) | unp_4(Hailey).",
                    "-(p_4(Hailey) & unp_4(Hailey)).",
                    "-p_7(Hailey).",
                    "-p_8(Hailey).",
                    "all x (-p_6(x) -> unp_4(x)).",
                    "all x (p_3(x) -> p_6(x)).",
                    "all x (p_6(x) -> p_4(x)).",
                    "p_6(Hailey).",
                    "p_10(Hailey).",
                    "p_11(Hailey).",
                    "-p_9(Hailey).",
                    "unp_4(Hailey) -> -p_4(Hailey).",
                    "p_4(Hailey) -> -unp_4(Hailey)."
                ],
                "formulas(goals)": [
                    "p_4(Hailey)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "\u00acp_9(Hailey)"
                ],
                "added_rules": [
                    "\u2200x (p_3(x) \u2192 p_11(x))",
                    "\u2200x (p_3(x) \u2192 p_10(x))",
                    "\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)",
                    "unp_4(Hailey) \u2192 \u00acp_4(Hailey)",
                    "p_4(Hailey) \u2192 \u00acunp_4(Hailey)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 p_11(x))\n\u2200x (p_3(x) \u2192 p_10(x))\np_9(Hailey) \u2228 p_10(Hailey)\n\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00ac(p_6(x) \u2227 p_7(x))\np_4(Hailey) \u2228 unp_4(Hailey)\n\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)\n\u2200x (\u00acp_6(x) \u2192 unp_4(x))\n\u2200x (p_3(x) \u2192 p_6(x))\n\u2200x (p_6(x) \u2192 p_4(x))\np_6(Hailey)\np_10(Hailey)\np_11(Hailey)\n\u00acp_9(Hailey)\nunp_4(Hailey) \u2192 \u00acp_4(Hailey)\np_4(Hailey) \u2192 \u00acunp_4(Hailey)",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> p_11(x))",
                    "all x (p_3(x) -> p_10(x))",
                    "p_9(Hailey) | p_10(Hailey)",
                    "-p_9(Hailey) | -p_10(Hailey)",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-(p_6(x) & p_7(x))",
                    "p_4(Hailey) | unp_4(Hailey)",
                    "-(p_4(Hailey) & unp_4(Hailey))",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))",
                    "all x (p_3(x) -> p_6(x))",
                    "all x (p_6(x) -> p_4(x))",
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "-p_9(Hailey)",
                    "unp_4(Hailey) -> -p_4(Hailey)",
                    "p_4(Hailey) -> -unp_4(Hailey)"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_7(x) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (p_3(x) \u2192 p_11(x))\n\u2200x (p_3(x) \u2192 p_10(x))\np_9(Hailey) \u2228 p_10(Hailey)\n\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u2200x (\u00acp_6(x) \u2228 \u00acp_7(x))\np_4(Hailey) \u2228 unp_4(Hailey)\n\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)\n\u2200x (\u00acp_6(x) \u2192 unp_4(x))\n\u2200x (p_3(x) \u2192 p_6(x))\n\u2200x (p_6(x) \u2192 p_4(x))\np_6(Hailey)\np_10(Hailey)\np_11(Hailey)\n\u00acp_9(Hailey)\nunp_4(Hailey) \u2192 \u00acp_4(Hailey)\np_4(Hailey) \u2192 \u00acunp_4(Hailey)\np_4(Hailey)\np_6(Hailey) \u2192 p_4(Hailey)\n\u2200x (\u00acp_6(x) \u2192 \u00acp_3(x))\n\u2200x (\u00acp_4(x) \u2192 \u00acp_6(x))",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> p_11(x))",
                    "all x (p_3(x) -> p_10(x))",
                    "p_9(Hailey) | p_10(Hailey)",
                    "-p_9(Hailey) | -p_10(Hailey)",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (-p_6(x) | -p_7(x))",
                    "p_4(Hailey) | unp_4(Hailey)",
                    "-(p_4(Hailey) & unp_4(Hailey))",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))",
                    "all x (p_3(x) -> p_6(x))",
                    "all x (p_6(x) -> p_4(x))",
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "-p_9(Hailey)",
                    "unp_4(Hailey) -> -p_4(Hailey)",
                    "p_4(Hailey) -> -unp_4(Hailey)",
                    "p_4(Hailey)",
                    "p_6(Hailey) -> p_4(Hailey)",
                    "all x (-p_6(x) -> -p_3(x))",
                    "all x (-p_4(x) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Hailey)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_6(x) \u2228 \u00acp_7(x))",
                    "p_6(Hailey) \u2192 p_4(Hailey)",
                    "\u2200x (\u00acp_6(x) \u2192 \u00acp_3(x))",
                    "\u2200x (\u00acp_4(x) \u2192 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Hailey)\n\u00acp_0(Hailey)\n\u00acp_2(Hailey)\n\u00acp_1(Hailey)\n\u2200x (\u00acp_3(x) \u2228 p_11(x))\n\u2200x (\u00acp_3(x) \u2228 p_10(x))\np_9(Hailey) \u2228 p_10(Hailey)\n\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))\n\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u2200x (\u00acp_6(x) \u2228 \u00acp_7(x))\np_4(Hailey) \u2228 unp_4(Hailey)\n\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))\n\u00acp_7(Hailey)\n\u00acp_8(Hailey)\n\u2200x (\u00acp_6(x) \u2192 unp_4(x))\n\u2200x (p_3(x) \u2192 p_6(x))\n\u2200x (p_6(x) \u2192 p_4(x))\np_6(Hailey)\np_10(Hailey)\np_11(Hailey)\n\u00acp_9(Hailey)\nunp_4(Hailey) \u2192 \u00acp_4(Hailey)\np_4(Hailey) \u2192 \u00acunp_4(Hailey)\np_4(Hailey)\n\u00acp_6(Hailey) \u2228 p_4(Hailey)\n\u2200x (\u00acp_6(x) \u2192 \u00acp_3(x))\n\u2200x (\u00acp_4(x) \u2192 \u00acp_6(x))\np_4(Hailey) \u2228 \u00acp_4(Hailey)\n\u00acunp_4(Hailey)",
            "Initial Goal": "p_4(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (-p_3(x) | p_11(x))",
                    "all x (-p_3(x) | p_10(x))",
                    "p_9(Hailey) | p_10(Hailey)",
                    "-p_9(Hailey) | -p_10(Hailey)",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (-p_6(x) | -p_7(x))",
                    "p_4(Hailey) | unp_4(Hailey)",
                    "-(p_4(Hailey) & unp_4(Hailey))",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))",
                    "all x (p_3(x) -> p_6(x))",
                    "all x (p_6(x) -> p_4(x))",
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "-p_9(Hailey)",
                    "unp_4(Hailey) -> -p_4(Hailey)",
                    "p_4(Hailey) -> -unp_4(Hailey)",
                    "p_4(Hailey)",
                    "-p_6(Hailey) | p_4(Hailey)",
                    "all x (-p_6(x) -> -p_3(x))",
                    "all x (-p_4(x) -> -p_6(x))",
                    "p_4(Hailey) | -p_4(Hailey)",
                    "-unp_4(Hailey)"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Hailey) \u2228 \u00acp_4(Hailey)",
                    "\u00acunp_4(Hailey)"
                ],
                "added_rules": []
            }
        }
    ]
}