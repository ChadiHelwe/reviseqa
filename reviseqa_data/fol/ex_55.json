{
    "background_story": "Milan, a geologist, had always been fascinated by the power of geological wonders. His life's work was studying geysers around the world, from the famous Old Faithful in Yellowstone to the lesser-known ones in Iceland. During an expedition to a remote area of New Zealand, Milan discovered a previously unknown geyser, which he named 'Aurora' due to its breathtaking display of colorful eruptions at dawn. Milan's findings about Aurora's unique properties and eruption patterns made him a leading expert in his field. His work not only contributed significantly to the understanding of geothermal activity but also helped in the conservation of these natural wonders. Milan's passion for geysers had taken him on a journey of discovery, unlocking secrets of the Earth's interior and inspiring a new generation of geologists.",
    "predicates": [
        {
            "id": 0,
            "name": "learn_science"
        },
        {
            "id": 1,
            "name": "identifies_patterns"
        },
        {
            "id": 2,
            "name": "maps_terrain"
        },
        {
            "id": 3,
            "name": "loves_nature"
        },
        {
            "id": 4,
            "name": "study_geology"
        },
        {
            "id": 5,
            "name": "make_new_discoveries"
        },
        {
            "id": 6,
            "name": "contribute_to_conservation"
        },
        {
            "id": 7,
            "name": "explore_wilderness"
        },
        {
            "id": 8,
            "name": "analyze_rocks"
        },
        {
            "id": 9,
            "name": "understand_earth"
        },
        {
            "id": 10,
            "name": "examines_land"
        },
        {
            "id": 11,
            "name": "investigate_craters"
        },
        {
            "id": 12,
            "name": "research_volcanoes"
        },
        {
            "id": 13,
            "name": "curious_mind"
        },
        {
            "id": 14,
            "name": "travel_frequently"
        },
        {
            "id": 15,
            "name": "collect_samples"
        },
        {
            "id": 16,
            "name": "examine_fossils"
        },
        {
            "id": 17,
            "name": "collect_data"
        },
        {
            "id": 18,
            "name": "model_systems"
        },
        {
            "id": 19,
            "name": "travels_extensively"
        },
        {
            "id": 20,
            "name": "documents_findings"
        },
        {
            "id": 21,
            "name": "is_adventurous"
        },
        {
            "id": 22,
            "name": "enjoys_hiking"
        }
    ],
    "subject_name": "Milan",
    "subject_category": "human",
    "keyword": "geyser",
    "all_facts": [
        {
            "id": 0,
            "subject": "Milan",
            "text": "Milan does not learn science.",
            "fol": "\u00acp_0(Milan)",
            "str_fol": "\u00aclearn_science(Milan)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Milan",
            "text": "Milan identifies patterns.",
            "fol": "p_1(Milan)",
            "str_fol": "identifies_patterns(Milan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Milan",
            "text": "Milan maps terrain.",
            "fol": "p_2(Milan)",
            "str_fol": "maps_terrain(Milan)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Milan",
            "text": "Milan loves nature.",
            "fol": "p_3(Milan)",
            "str_fol": "loves_nature(Milan)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Milan",
            "text": "Milan explores the wilderness.",
            "fol": "p_7(Milan)",
            "str_fol": "explore_wilderness(Milan)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Milan",
            "text": "Milan examines land.",
            "fol": "p_10(Milan)",
            "str_fol": "examines_land(Milan)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Milan",
            "text": "Milan understands the earth.",
            "fol": "p_9(Milan)",
            "str_fol": "understand_earth(Milan)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Milan",
            "text": "Milan does not analyze rocks.",
            "fol": "\u00acp_8(Milan)",
            "str_fol": "\u00acanalyze_rocks(Milan)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Milan",
            "text": "Milan does not study geology.",
            "fol": "\u00acp_4(Milan)",
            "str_fol": "\u00acstudy_geology(Milan)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Milan",
            "text": "Milan does not contribute to conservation.",
            "fol": "\u00acp_6(Milan)",
            "str_fol": "\u00accontribute_to_conservation(Milan)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Milan",
            "text": "Milan loves nature.",
            "fol": "p_3(Milan)",
            "str_fol": "loves_nature(Milan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Milan",
            "text": "Milan maps terrain.",
            "fol": "p_2(Milan)",
            "str_fol": "maps_terrain(Milan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Milan",
            "text": "Milan identifies patterns.",
            "fol": "p_1(Milan)",
            "str_fol": "identifies_patterns(Milan)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Milan",
            "text": "Milan does not learn science.",
            "fol": "\u00acp_0(Milan)",
            "str_fol": "\u00aclearn_science(Milan)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Milan loves nature, then he will explore the wilderness.",
            "fol": "p_3(Milan) \u2192 p_7(Milan)",
            "str_fol": "loves_nature(Milan) \u2192 explore_wilderness(Milan)"
        },
        {
            "id": 5,
            "text": "Anyone who maps terrain examines land.",
            "fol": "\u2200x (p_2(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (maps_terrain(x) \u2192 examines_land(x))"
        },
        {
            "id": 4,
            "text": "If someone examines land and identifies patterns, then they can understand the earth.",
            "fol": "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((examines_land(x) \u2227 identifies_patterns(x)) \u2192 understand_earth(x))"
        },
        {
            "id": 3,
            "text": "If someone analyzes rocks, then they learn science.",
            "fol": "\u2200x (p_8(x) \u2192 p_0(x))",
            "str_fol": "\u2200x (analyze_rocks(x) \u2192 learn_science(x))"
        },
        {
            "id": 2,
            "text": "If Milan either analyzes rocks or makes new discoveries (but not both), then he understands the earth.",
            "fol": "(p_8(Milan) \u2295 p_5(Milan)) \u2192 p_9(Milan)",
            "str_fol": "(analyze_rocks(Milan) \u2295 make_new_discoveries(Milan)) \u2192 understand_earth(Milan)"
        },
        {
            "id": 1,
            "text": "Either Milan studies geology or he explores wilderness, but he does not do both.",
            "fol": "p_4(Milan) \u2295 p_7(Milan)",
            "str_fol": "study_geology(Milan) \u2295 explore_wilderness(Milan)"
        },
        {
            "id": 0,
            "text": "If Milan studies geology, then he can either make new discoveries or contribute to conservation, but not both.",
            "fol": "p_4(Milan) \u2192 (p_5(Milan) \u2295 p_6(Milan))",
            "str_fol": "study_geology(Milan) \u2192 (make_new_discoveries(Milan) \u2295 contribute_to_conservation(Milan))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Milan",
            "text": "Milan loves nature.",
            "fol": "p_3(Milan)",
            "str_fol": "loves_nature(Milan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Milan",
            "text": "Milan maps terrain.",
            "fol": "p_2(Milan)",
            "str_fol": "maps_terrain(Milan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Milan",
            "text": "Milan identifies patterns.",
            "fol": "p_1(Milan)",
            "str_fol": "identifies_patterns(Milan)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Milan",
            "text": "Milan does not learn science.",
            "fol": "\u00acp_0(Milan)",
            "str_fol": "\u00aclearn_science(Milan)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Milan loves nature, then he will explore the wilderness.",
            "fol": "p_3(Milan) \u2192 p_7(Milan)",
            "str_fol": "loves_nature(Milan) \u2192 explore_wilderness(Milan)"
        },
        {
            "id": 5,
            "text": "Anyone who maps terrain examines land.",
            "fol": "\u2200x (p_2(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (maps_terrain(x) \u2192 examines_land(x))"
        },
        {
            "id": 4,
            "text": "If someone examines land and identifies patterns, then they can understand the earth.",
            "fol": "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((examines_land(x) \u2227 identifies_patterns(x)) \u2192 understand_earth(x))"
        },
        {
            "id": 3,
            "text": "If someone analyzes rocks, then they learn science.",
            "fol": "\u2200x (p_8(x) \u2192 p_0(x))",
            "str_fol": "\u2200x (analyze_rocks(x) \u2192 learn_science(x))"
        },
        {
            "id": 2,
            "text": "If Milan either analyzes rocks or makes new discoveries (but not both), then he understands the earth.",
            "fol": "(p_8(Milan) \u2295 p_5(Milan)) \u2192 p_9(Milan)",
            "str_fol": "(analyze_rocks(Milan) \u2295 make_new_discoveries(Milan)) \u2192 understand_earth(Milan)"
        },
        {
            "id": 1,
            "text": "Either Milan studies geology or he explores wilderness, but he does not do both.",
            "fol": "p_4(Milan) \u2295 p_7(Milan)",
            "str_fol": "study_geology(Milan) \u2295 explore_wilderness(Milan)"
        },
        {
            "id": 0,
            "text": "If Milan studies geology, then he can either make new discoveries or contribute to conservation, but not both.",
            "fol": "p_4(Milan) \u2192 (p_5(Milan) \u2295 p_6(Milan))",
            "str_fol": "study_geology(Milan) \u2192 (make_new_discoveries(Milan) \u2295 contribute_to_conservation(Milan))"
        }
    ],
    "context_fol": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\n(p_8(Milan) \u2295 p_5(Milan)) \u2192 p_9(Milan)\np_4(Milan) \u2295 p_7(Milan)\np_4(Milan) \u2192 (p_5(Milan) \u2295 p_6(Milan))",
    "conclusion": {
        "id": 9,
        "subject": "Milan",
        "text": "Milan does not contribute to conservation.",
        "fol": "\u00acp_6(Milan)",
        "str_fol": "\u00accontribute_to_conservation(Milan)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_6(Milan)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Milan",
                    "text": "Milan loves nature.",
                    "fol": "p_3(Milan)",
                    "str_fol": "loves_nature(Milan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Milan loves nature, then he will explore the wilderness.",
                    "fol": "p_3(Milan) \u2192 p_7(Milan)",
                    "str_fol": "loves_nature(Milan) \u2192 explore_wilderness(Milan)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Milan",
                "text": "Milan explores the wilderness.",
                "fol": "p_7(Milan)",
                "str_fol": "explore_wilderness(Milan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Milan",
                    "text": "Milan maps terrain.",
                    "fol": "p_2(Milan)",
                    "str_fol": "maps_terrain(Milan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who maps terrain examines land.",
                    "fol": "\u2200x (p_2(x) \u2192 p_10(x))",
                    "str_fol": "\u2200x (maps_terrain(x) \u2192 examines_land(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Milan",
                "text": "Milan examines land.",
                "fol": "p_10(Milan)",
                "str_fol": "examines_land(Milan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Milan",
                    "text": "Milan examines land.",
                    "fol": "p_10(Milan)",
                    "str_fol": "examines_land(Milan)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Milan",
                    "text": "Milan identifies patterns.",
                    "fol": "p_1(Milan)",
                    "str_fol": "identifies_patterns(Milan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone examines land and identifies patterns, then they can understand the earth.",
                    "fol": "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((examines_land(x) \u2227 identifies_patterns(x)) \u2192 understand_earth(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Milan",
                "text": "Milan understands the earth.",
                "fol": "p_9(Milan)",
                "str_fol": "understand_earth(Milan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Milan",
                    "text": "Milan does not learn science.",
                    "fol": "\u00acp_0(Milan)",
                    "str_fol": "\u00aclearn_science(Milan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone analyzes rocks, then they learn science.",
                    "fol": "\u2200x (p_8(x) \u2192 p_0(x))",
                    "str_fol": "\u2200x (analyze_rocks(x) \u2192 learn_science(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Milan",
                "text": "Milan does not analyze rocks.",
                "fol": "\u00acp_8(Milan)",
                "str_fol": "\u00acanalyze_rocks(Milan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Milan",
                    "text": "Milan does not analyze rocks.",
                    "fol": "\u00acp_8(Milan)",
                    "str_fol": "\u00acanalyze_rocks(Milan)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Milan",
                    "text": "Milan understands the earth.",
                    "fol": "p_9(Milan)",
                    "str_fol": "understand_earth(Milan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Milan either analyzes rocks or makes new discoveries (but not both), then he understands the earth.",
                    "fol": "(p_8(Milan) \u2295 p_5(Milan)) \u2192 p_9(Milan)",
                    "str_fol": "(analyze_rocks(Milan) \u2295 make_new_discoveries(Milan)) \u2192 understand_earth(Milan)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Milan",
                    "text": "Milan explores the wilderness.",
                    "fol": "p_7(Milan)",
                    "str_fol": "explore_wilderness(Milan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Either Milan studies geology or he explores wilderness, but he does not do both.",
                    "fol": "p_4(Milan) \u2295 p_7(Milan)",
                    "str_fol": "study_geology(Milan) \u2295 explore_wilderness(Milan)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Milan",
                "text": "Milan does not study geology.",
                "fol": "\u00acp_4(Milan)",
                "str_fol": "\u00acstudy_geology(Milan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Milan",
                    "text": "Milan does not study geology.",
                    "fol": "\u00acp_4(Milan)",
                    "str_fol": "\u00acstudy_geology(Milan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Milan studies geology, then he can either make new discoveries or contribute to conservation, but not both.",
                    "fol": "p_4(Milan) \u2192 (p_5(Milan) \u2295 p_6(Milan))",
                    "str_fol": "study_geology(Milan) \u2192 (make_new_discoveries(Milan) \u2295 contribute_to_conservation(Milan))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\n(p_8(Milan) \u2295 p_5(Milan)) \u2192 p_9(Milan)\np_4(Milan) \u2295 p_7(Milan)\np_4(Milan) \u2192 (p_5(Milan) \u2295 p_6(Milan))",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan).",
                    "p_2(Milan).",
                    "p_1(Milan).",
                    "-p_0(Milan).",
                    "p_3(Milan) -> p_7(Milan).",
                    "all x (p_2(x) -> p_10(x)).",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x)).",
                    "all x (p_8(x) -> p_0(x)).",
                    "(-(p_8(Milan) <-> p_5(Milan))) -> p_9(Milan).",
                    "-(p_4(Milan) <-> p_7(Milan)).",
                    "p_4(Milan) -> (-(p_5(Milan) <-> p_6(Milan))).",
                    "p_7(Milan) -> -p_6(Milan)."
                ],
                "formulas(goals)": [
                    "-p_6(Milan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Milan) \u2192 \u00acp_6(Milan)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\np_9(Milan) \u2192 (p_8(Milan) \u2295 p_5(Milan))\np_4(Milan) \u2295 \u00acp_7(Milan)\np_4(Milan) \u2192 (\u00acp_5(Milan) \u2295 p_6(Milan))",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan)",
                    "p_2(Milan)",
                    "p_1(Milan)",
                    "-p_0(Milan)",
                    "p_3(Milan) -> p_7(Milan)",
                    "all x (p_2(x) -> p_10(x))",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x))",
                    "all x (p_8(x) -> p_0(x))",
                    "p_9(Milan) -> (-(p_8(Milan) <-> p_5(Milan)))",
                    "-(p_4(Milan) <-> -p_7(Milan))",
                    "p_4(Milan) -> (-(-p_5(Milan) <-> p_6(Milan)))"
                ],
                "formulas(goals)": [
                    "-(-p_6(Milan))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_8(Milan) \u2295 p_5(Milan)) \u2192 p_9(Milan)",
                    "p_4(Milan) \u2295 p_7(Milan)",
                    "p_4(Milan) \u2192 (p_5(Milan) \u2295 p_6(Milan))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Milan) \u2192 (p_8(Milan) \u2295 p_5(Milan))",
                    "p_4(Milan) \u2295 \u00acp_7(Milan)",
                    "p_4(Milan) \u2192 (\u00acp_5(Milan) \u2295 p_6(Milan))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\np_9(Milan) \u2192 (p_8(Milan) \u2295 p_5(Milan))\np_4(Milan) \u2295 \u00acp_7(Milan)\np_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 p_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 p_6(Milan)))\n\u00acp_8(Milan)",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan)",
                    "p_2(Milan)",
                    "p_1(Milan)",
                    "-p_0(Milan)",
                    "p_3(Milan) -> p_7(Milan)",
                    "all x (p_2(x) -> p_10(x))",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x))",
                    "all x (p_8(x) -> p_0(x))",
                    "p_9(Milan) -> (-(p_8(Milan) <-> p_5(Milan)))",
                    "-(p_4(Milan) <-> -p_7(Milan))",
                    "p_4(Milan) -> ((-p_5(Milan) | p_6(Milan)) & -(-p_5(Milan) & p_6(Milan)))",
                    "-p_8(Milan)"
                ],
                "formulas(goals)": [
                    "-(-p_6(Milan))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Milan)"
                ],
                "added_rules": [
                    "p_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 p_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 p_6(Milan)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\np_9(Milan) \u2192 (p_8(Milan) \u2295 p_5(Milan))\np_4(Milan) \u2295 \u00acp_7(Milan)\np_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 p_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 p_6(Milan)))\np_6(Milan) \u2192 p_8(Milan)",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan).",
                    "p_2(Milan).",
                    "p_1(Milan).",
                    "-p_0(Milan).",
                    "p_3(Milan) -> p_7(Milan).",
                    "all x (p_2(x) -> p_10(x)).",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x)).",
                    "all x (p_8(x) -> p_0(x)).",
                    "p_9(Milan) -> (-(p_8(Milan) <-> p_5(Milan))).",
                    "-(p_4(Milan) <-> -p_7(Milan)).",
                    "p_4(Milan) -> ((-p_5(Milan) | p_6(Milan)) & -(-p_5(Milan) & p_6(Milan))).",
                    "p_6(Milan) -> p_8(Milan)."
                ],
                "formulas(goals)": [
                    "-p_6(Milan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Milan)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Milan) \u2192 p_8(Milan)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\np_9(Milan) \u2192 \u00ac(p_8(Milan) \u2194 p_5(Milan))\n\u00ac(p_4(Milan) \u2194 \u00acp_7(Milan))\np_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 p_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 p_6(Milan)))\np_6(Milan) \u2192 p_8(Milan)\np_7(Milan)\n\u00acp_8(Milan)",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan).",
                    "p_2(Milan).",
                    "p_1(Milan).",
                    "-p_0(Milan).",
                    "p_3(Milan) -> p_7(Milan).",
                    "all x (p_2(x) -> p_10(x)).",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x)).",
                    "all x (p_8(x) -> p_0(x)).",
                    "p_9(Milan) -> (-(p_8(Milan) <-> p_5(Milan))).",
                    "-(p_4(Milan) <-> -p_7(Milan)).",
                    "p_4(Milan) -> ((-p_5(Milan) | p_6(Milan)) & -(-p_5(Milan) & p_6(Milan))).",
                    "p_6(Milan) -> p_8(Milan).",
                    "p_7(Milan).",
                    "-p_8(Milan)."
                ],
                "formulas(goals)": [
                    "-p_6(Milan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Milan)",
                    "\u00acp_8(Milan)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\np_9(Milan) \u2192 \u00ac(p_8(Milan) \u2194 p_5(Milan))\n\u00ac(p_4(Milan) \u2194 \u00acp_7(Milan))\np_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 p_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 p_6(Milan)))\np_7(Milan)\n\u00acp_8(Milan)",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan)",
                    "p_2(Milan)",
                    "p_1(Milan)",
                    "-p_0(Milan)",
                    "p_3(Milan) -> p_7(Milan)",
                    "all x (p_2(x) -> p_10(x))",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x))",
                    "all x (p_8(x) -> p_0(x))",
                    "p_9(Milan) -> -(p_8(Milan) <-> p_5(Milan))",
                    "-(p_4(Milan) <-> (-p_7(Milan)))",
                    "p_4(Milan) -> ((-p_5(Milan) | p_6(Milan)) & -(-p_5(Milan) & p_6(Milan)))",
                    "p_7(Milan)",
                    "-p_8(Milan)"
                ],
                "formulas(goals)": [
                    "p_6(Milan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Milan)\np_2(Milan)\np_1(Milan)\n\u00acp_0(Milan)\np_3(Milan) \u2192 p_7(Milan)\n\u2200x (p_2(x) \u2192 p_10(x))\n\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_0(x))\np_9(Milan) \u2192 \u00ac(p_8(Milan) \u2194 p_5(Milan))\np_4(Milan) \u2194 \u00acp_7(Milan)\np_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 \u00acp_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 \u00acp_6(Milan)))\np_7(Milan)\n\u00acp_8(Milan)\np_7(Milan) \u2192 \u00acp_6(Milan)",
            "Initial Goal": "\u00acp_6(Milan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Milan).",
                    "p_2(Milan).",
                    "p_1(Milan).",
                    "-p_0(Milan).",
                    "p_3(Milan) -> p_7(Milan).",
                    "all x (p_2(x) -> p_10(x)).",
                    "all x ((p_10(x) & p_1(x)) -> p_9(x)).",
                    "all x (p_8(x) -> p_0(x)).",
                    "p_9(Milan) -> (-(p_8(Milan) <-> p_5(Milan))).",
                    "p_4(Milan) <-> -p_7(Milan).",
                    "p_4(Milan) -> ((-p_5(Milan) | -p_6(Milan)) & -(-p_5(Milan) & -p_6(Milan))).",
                    "p_7(Milan).",
                    "-p_8(Milan).",
                    "p_7(Milan) -> -p_6(Milan)."
                ],
                "formulas(goals)": [
                    "-p_6(Milan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_4(Milan) \u2194 \u00acp_7(Milan))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Milan) \u2194 \u00acp_7(Milan)",
                    "p_4(Milan) \u2192 ((\u00acp_5(Milan) \u2228 \u00acp_6(Milan)) \u2227 \u00ac(\u00acp_5(Milan) \u2227 \u00acp_6(Milan)))",
                    "p_7(Milan) \u2192 \u00acp_6(Milan)"
                ]
            }
        }
    ]
}