{
    "background_story": "Aila grew up in a small village surrounded by lush green fields and orchards. Her mother, a skilled gardener, taught her the art of cultivating nutritious food from the earth. Aila learned to nurture the soil, plant seeds, and harvest crops with love and care. As she grew older, she became passionate about sharing the bounty of their land with her community. Aila started a community garden, where she and her neighbors would work together to grow fresh produce. She also began a cooking program, teaching children and adults alike how to prepare wholesome meals. Through her efforts, Aila ensured that everyone in the village was nourished, not just with healthy food, but also with a sense of community and connection to the natural world.",
    "predicates": [
        {
            "id": 0,
            "name": "get_enough_sleep"
        },
        {
            "id": 1,
            "name": "be_active"
        },
        {
            "id": 2,
            "name": "work_outdoors"
        },
        {
            "id": 3,
            "name": "smile_often"
        },
        {
            "id": 4,
            "name": "share_knowledge"
        },
        {
            "id": 5,
            "name": "care_others"
        },
        {
            "id": 6,
            "name": "eat_nutritious_food"
        },
        {
            "id": 7,
            "name": "stay_healthy"
        },
        {
            "id": 8,
            "name": "exercise_regularly"
        },
        {
            "id": 9,
            "name": "feel_energized"
        },
        {
            "id": 10,
            "name": "live_happily"
        },
        {
            "id": 11,
            "name": "eat_balanced"
        },
        {
            "id": 12,
            "name": "have_fun"
        },
        {
            "id": 13,
            "name": "relax_daily"
        },
        {
            "id": 14,
            "name": "cultivate_garden"
        },
        {
            "id": 15,
            "name": "cook_meals"
        },
        {
            "id": 16,
            "name": "takes_breaks"
        },
        {
            "id": 17,
            "name": "teach_cooking"
        },
        {
            "id": 18,
            "name": "enjoys_fruits"
        },
        {
            "id": 19,
            "name": "cooks_meals"
        },
        {
            "id": 20,
            "name": "enjoy_nature"
        },
        {
            "id": 21,
            "name": "learn_new_skills"
        },
        {
            "id": 22,
            "name": "love_nature"
        },
        {
            "id": 23,
            "name": "play_games"
        },
        {
            "id": 24,
            "name": "read_books"
        }
    ],
    "subject_name": "Aila",
    "subject_category": "human",
    "keyword": "nourished",
    "all_facts": [
        {
            "id": 0,
            "subject": "Aila",
            "text": "Aila does not get enough sleep.",
            "fol": "\u00acp_0(Aila)",
            "str_fol": "\u00acget_enough_sleep(Aila)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Aila",
            "text": "Aila is not active.",
            "fol": "\u00acp_1(Aila)",
            "str_fol": "\u00acbe_active(Aila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aila",
            "text": "Aila works outdoors.",
            "fol": "p_2(Aila)",
            "str_fol": "work_outdoors(Aila)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aila",
            "text": "Aila does not smile often.",
            "fol": "\u00acp_3(Aila)",
            "str_fol": "\u00acsmile_often(Aila)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Aila",
            "text": "Aila shares knowledge.",
            "fol": "p_4(Aila)",
            "str_fol": "share_knowledge(Aila)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Aila",
            "text": "Aila cares for others.",
            "fol": "p_5(Aila)",
            "str_fol": "care_others(Aila)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aila",
            "text": "Aila has fun.",
            "fol": "p_12(Aila)",
            "str_fol": "have_fun(Aila)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Aila",
            "text": "Aila does not live happily.",
            "fol": "\u00acp_10(Aila)",
            "str_fol": "\u00aclive_happily(Aila)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Aila",
            "text": "Aila does not relax daily.",
            "fol": "\u00acp_13(Aila)",
            "str_fol": "\u00acrelax_daily(Aila)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Aila",
            "text": "Aila does not exercise regularly.",
            "fol": "\u00acp_8(Aila)",
            "str_fol": "\u00acexercise_regularly(Aila)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Aila",
            "text": "Aila does not feel energized.",
            "fol": "\u00acp_9(Aila)",
            "str_fol": "\u00acfeel_energized(Aila)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Aila",
            "text": "Aila does not eat nutritious food.",
            "fol": "\u00acp_6(Aila)",
            "str_fol": "\u00aceat_nutritious_food(Aila)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Aila",
            "text": "Aila does not stay healthy.",
            "fol": "\u00acp_7(Aila)",
            "str_fol": "\u00acstay_healthy(Aila)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Aila",
            "text": "Aila shares knowledge.",
            "fol": "p_4(Aila)",
            "str_fol": "share_knowledge(Aila)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Aila",
            "text": "Aila cares for others.",
            "fol": "p_5(Aila)",
            "str_fol": "care_others(Aila)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aila",
            "text": "Aila does not smile often.",
            "fol": "\u00acp_3(Aila)",
            "str_fol": "\u00acsmile_often(Aila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aila",
            "text": "Aila works outdoors.",
            "fol": "p_2(Aila)",
            "str_fol": "work_outdoors(Aila)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aila",
            "text": "Aila is not active.",
            "fol": "\u00acp_1(Aila)",
            "str_fol": "\u00acbe_active(Aila)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Aila",
            "text": "Aila does not get enough sleep.",
            "fol": "\u00acp_0(Aila)",
            "str_fol": "\u00acget_enough_sleep(Aila)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Aila shares knowledge, then she has fun and cares for others.",
            "fol": "p_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))",
            "str_fol": "share_knowledge(Aila) \u2192 (have_fun(Aila) \u2227 care_others(Aila))"
        },
        {
            "id": 6,
            "text": "If someone lives happily, then they smile often.",
            "fol": "\u2200x (p_10(x) \u2192 p_3(x))",
            "str_fol": "\u2200x (live_happily(x) \u2192 smile_often(x))"
        },
        {
            "id": 5,
            "text": "For Aila, either she relaxes daily or she works outdoors, but not both.",
            "fol": "p_13(Aila) \u2295 p_2(Aila)",
            "str_fol": "relax_daily(Aila) \u2295 work_outdoors(Aila)"
        },
        {
            "id": 4,
            "text": "If Aila eats a balanced diet, then she either has fun or relaxes daily, but not both.",
            "fol": "p_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))",
            "str_fol": "eat_balanced(Aila) \u2192 (have_fun(Aila) \u2295 relax_daily(Aila))"
        },
        {
            "id": 3,
            "text": "Anyone who exercises regularly or eats a balanced diet will be active.",
            "fol": "\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((exercise_regularly(x) \u2228 eat_balanced(x)) \u2192 be_active(x))"
        },
        {
            "id": 2,
            "text": "If Aila either gets enough sleep or feels energized (but not both), then she will live happily.",
            "fol": "(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)",
            "str_fol": "(get_enough_sleep(Aila) \u2295 feel_energized(Aila)) \u2192 live_happily(Aila)"
        },
        {
            "id": 1,
            "text": "Anyone who eats nutritious food or exercises regularly will feel energized.",
            "fol": "\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((eat_nutritious_food(x) \u2228 exercise_regularly(x)) \u2192 feel_energized(x))"
        },
        {
            "id": 0,
            "text": "If Aila eats nutritious food, then she stays healthy.",
            "fol": "p_6(Aila) \u2192 p_7(Aila)",
            "str_fol": "eat_nutritious_food(Aila) \u2192 stay_healthy(Aila)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Aila",
            "text": "Aila shares knowledge.",
            "fol": "p_4(Aila)",
            "str_fol": "share_knowledge(Aila)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Aila",
            "text": "Aila cares for others.",
            "fol": "p_5(Aila)",
            "str_fol": "care_others(Aila)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aila",
            "text": "Aila does not smile often.",
            "fol": "\u00acp_3(Aila)",
            "str_fol": "\u00acsmile_often(Aila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aila",
            "text": "Aila works outdoors.",
            "fol": "p_2(Aila)",
            "str_fol": "work_outdoors(Aila)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aila",
            "text": "Aila is not active.",
            "fol": "\u00acp_1(Aila)",
            "str_fol": "\u00acbe_active(Aila)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Aila",
            "text": "Aila does not get enough sleep.",
            "fol": "\u00acp_0(Aila)",
            "str_fol": "\u00acget_enough_sleep(Aila)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If Aila shares knowledge, then she has fun and cares for others.",
            "fol": "p_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))",
            "str_fol": "share_knowledge(Aila) \u2192 (have_fun(Aila) \u2227 care_others(Aila))"
        },
        {
            "id": 6,
            "text": "If someone lives happily, then they smile often.",
            "fol": "\u2200x (p_10(x) \u2192 p_3(x))",
            "str_fol": "\u2200x (live_happily(x) \u2192 smile_often(x))"
        },
        {
            "id": 5,
            "text": "For Aila, either she relaxes daily or she works outdoors, but not both.",
            "fol": "p_13(Aila) \u2295 p_2(Aila)",
            "str_fol": "relax_daily(Aila) \u2295 work_outdoors(Aila)"
        },
        {
            "id": 4,
            "text": "If Aila eats a balanced diet, then she either has fun or relaxes daily, but not both.",
            "fol": "p_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))",
            "str_fol": "eat_balanced(Aila) \u2192 (have_fun(Aila) \u2295 relax_daily(Aila))"
        },
        {
            "id": 3,
            "text": "Anyone who exercises regularly or eats a balanced diet will be active.",
            "fol": "\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((exercise_regularly(x) \u2228 eat_balanced(x)) \u2192 be_active(x))"
        },
        {
            "id": 2,
            "text": "If Aila either gets enough sleep or feels energized (but not both), then she will live happily.",
            "fol": "(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)",
            "str_fol": "(get_enough_sleep(Aila) \u2295 feel_energized(Aila)) \u2192 live_happily(Aila)"
        },
        {
            "id": 1,
            "text": "Anyone who eats nutritious food or exercises regularly will feel energized.",
            "fol": "\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((eat_nutritious_food(x) \u2228 exercise_regularly(x)) \u2192 feel_energized(x))"
        },
        {
            "id": 0,
            "text": "If Aila eats nutritious food, then she stays healthy.",
            "fol": "p_6(Aila) \u2192 p_7(Aila)",
            "str_fol": "eat_nutritious_food(Aila) \u2192 stay_healthy(Aila)"
        }
    ],
    "context_fol": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\np_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_6(Aila) \u2192 p_7(Aila)",
    "conclusion": {
        "id": 12,
        "subject": "Aila",
        "text": "Aila does not stay healthy.",
        "fol": "\u00acp_7(Aila)",
        "str_fol": "\u00acstay_healthy(Aila)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Aila)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Aila",
                    "text": "Aila shares knowledge.",
                    "fol": "p_4(Aila)",
                    "str_fol": "share_knowledge(Aila)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Aila",
                    "text": "Aila cares for others.",
                    "fol": "p_5(Aila)",
                    "str_fol": "care_others(Aila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Aila shares knowledge, then she has fun and cares for others.",
                    "fol": "p_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))",
                    "str_fol": "share_knowledge(Aila) \u2192 (have_fun(Aila) \u2227 care_others(Aila))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Aila",
                "text": "Aila has fun.",
                "fol": "p_12(Aila)",
                "str_fol": "have_fun(Aila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Aila",
                    "text": "Aila does not smile often.",
                    "fol": "\u00acp_3(Aila)",
                    "str_fol": "\u00acsmile_often(Aila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone lives happily, then they smile often.",
                    "fol": "\u2200x (p_10(x) \u2192 p_3(x))",
                    "str_fol": "\u2200x (live_happily(x) \u2192 smile_often(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Aila",
                "text": "Aila does not live happily.",
                "fol": "\u00acp_10(Aila)",
                "str_fol": "\u00aclive_happily(Aila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Aila",
                    "text": "Aila works outdoors.",
                    "fol": "p_2(Aila)",
                    "str_fol": "work_outdoors(Aila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "For Aila, either she relaxes daily or she works outdoors, but not both.",
                    "fol": "p_13(Aila) \u2295 p_2(Aila)",
                    "str_fol": "relax_daily(Aila) \u2295 work_outdoors(Aila)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Aila",
                "text": "Aila does not relax daily.",
                "fol": "\u00acp_13(Aila)",
                "str_fol": "\u00acrelax_daily(Aila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Aila",
                    "text": "Aila has fun.",
                    "fol": "p_12(Aila)",
                    "str_fol": "have_fun(Aila)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Aila",
                    "text": "Aila does not relax daily.",
                    "fol": "\u00acp_13(Aila)",
                    "str_fol": "\u00acrelax_daily(Aila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Aila eats a balanced diet, then she either has fun or relaxes daily, but not both.",
                    "fol": "p_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))",
                    "str_fol": "eat_balanced(Aila) \u2192 (have_fun(Aila) \u2295 relax_daily(Aila))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Aila",
                    "text": "Aila is not active.",
                    "fol": "\u00acp_1(Aila)",
                    "str_fol": "\u00acbe_active(Aila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who exercises regularly or eats a balanced diet will be active.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((exercise_regularly(x) \u2228 eat_balanced(x)) \u2192 be_active(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Aila",
                "text": "Aila does not exercise regularly.",
                "fol": "\u00acp_8(Aila)",
                "str_fol": "\u00acexercise_regularly(Aila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Aila",
                    "text": "Aila does not get enough sleep.",
                    "fol": "\u00acp_0(Aila)",
                    "str_fol": "\u00acget_enough_sleep(Aila)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Aila",
                    "text": "Aila does not live happily.",
                    "fol": "\u00acp_10(Aila)",
                    "str_fol": "\u00aclive_happily(Aila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Aila either gets enough sleep or feels energized (but not both), then she will live happily.",
                    "fol": "(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)",
                    "str_fol": "(get_enough_sleep(Aila) \u2295 feel_energized(Aila)) \u2192 live_happily(Aila)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Aila",
                "text": "Aila does not feel energized.",
                "fol": "\u00acp_9(Aila)",
                "str_fol": "\u00acfeel_energized(Aila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Aila",
                    "text": "Aila does not exercise regularly.",
                    "fol": "\u00acp_8(Aila)",
                    "str_fol": "\u00acexercise_regularly(Aila)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Aila",
                    "text": "Aila does not feel energized.",
                    "fol": "\u00acp_9(Aila)",
                    "str_fol": "\u00acfeel_energized(Aila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who eats nutritious food or exercises regularly will feel energized.",
                    "fol": "\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((eat_nutritious_food(x) \u2228 exercise_regularly(x)) \u2192 feel_energized(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Aila",
                "text": "Aila does not eat nutritious food.",
                "fol": "\u00acp_6(Aila)",
                "str_fol": "\u00aceat_nutritious_food(Aila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Aila",
                    "text": "Aila does not eat nutritious food.",
                    "fol": "\u00acp_6(Aila)",
                    "str_fol": "\u00aceat_nutritious_food(Aila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Aila eats nutritious food, then she stays healthy.",
                    "fol": "p_6(Aila) \u2192 p_7(Aila)",
                    "str_fol": "eat_nutritious_food(Aila) \u2192 stay_healthy(Aila)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\np_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_6(Aila) \u2192 p_7(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila).",
                    "p_5(Aila).",
                    "-p_3(Aila).",
                    "p_2(Aila).",
                    "-p_1(Aila).",
                    "-p_0(Aila).",
                    "p_4(Aila) -> (p_12(Aila) & p_5(Aila)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "-(p_13(Aila) <-> p_2(Aila)).",
                    "p_11(Aila) -> (-(p_12(Aila) <-> p_13(Aila))).",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x)).",
                    "(-(p_0(Aila) <-> p_9(Aila))) -> p_10(Aila).",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x)).",
                    "p_6(Aila) -> p_7(Aila).",
                    "p_7(Aila) -> p_6(Aila)."
                ],
                "formulas(goals)": [
                    "-p_7(Aila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Aila) \u2192 p_6(Aila)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\np_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u00acp_6(Aila) \u2192 p_7(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila)",
                    "p_5(Aila)",
                    "-p_3(Aila)",
                    "p_2(Aila)",
                    "-p_1(Aila)",
                    "-p_0(Aila)",
                    "p_4(Aila) -> (p_12(Aila) & p_5(Aila))",
                    "all x (p_10(x) -> p_3(x))",
                    "-(p_13(Aila) <-> p_2(Aila))",
                    "p_11(Aila) -> (-(p_12(Aila) <-> p_13(Aila)))",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x))",
                    "(-(p_0(Aila) <-> p_9(Aila))) -> p_10(Aila)",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x))",
                    "-p_6(Aila) -> p_7(Aila)"
                ],
                "formulas(goals)": [
                    "p_7(Aila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Aila) \u2192 p_7(Aila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Aila) \u2192 p_7(Aila)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\np_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_6(Aila) \u2228 p_7(Aila)\np_12(Aila)\n\u00acp_13(Aila)\np_2(Aila) \u2228 p_13(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila)",
                    "p_5(Aila)",
                    "-p_3(Aila)",
                    "p_2(Aila)",
                    "-p_1(Aila)",
                    "-p_0(Aila)",
                    "p_4(Aila) -> (p_12(Aila) & p_5(Aila))",
                    "all x (p_10(x) -> p_3(x))",
                    "-(p_13(Aila) <-> p_2(Aila))",
                    "p_11(Aila) -> (-(p_12(Aila) <-> p_13(Aila)))",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x))",
                    "(-(p_0(Aila) <-> p_9(Aila))) -> p_10(Aila)",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x))",
                    "p_6(Aila) | p_7(Aila)",
                    "p_12(Aila)",
                    "-p_13(Aila)",
                    "p_2(Aila) | p_13(Aila)"
                ],
                "formulas(goals)": [
                    "-(-p_7(Aila))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_6(Aila) \u2192 p_7(Aila)"
                ],
                "added_facts": [
                    "p_12(Aila)",
                    "\u00acp_13(Aila)",
                    "p_2(Aila) \u2228 p_13(Aila)"
                ],
                "added_rules": [
                    "p_6(Aila) \u2228 p_7(Aila)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\np_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_12(Aila)\n\u00acp_13(Aila)\np_2(Aila) \u2228 p_13(Aila)\np_7(Aila) \u2192 \u00acp_7(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila)",
                    "p_5(Aila)",
                    "-p_3(Aila)",
                    "p_2(Aila)",
                    "-p_1(Aila)",
                    "-p_0(Aila)",
                    "p_4(Aila) -> (p_12(Aila) & p_5(Aila))",
                    "all x (p_10(x) -> p_3(x))",
                    "p_13(Aila) | p_2(Aila)",
                    "-p_13(Aila) | -p_2(Aila)",
                    "p_11(Aila) -> (p_12(Aila) | p_13(Aila))",
                    "p_11(Aila) -> (-p_12(Aila) | -p_13(Aila))",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x))",
                    "(-p_0(Aila) | -p_9(Aila)) & (p_0(Aila) | p_9(Aila)) -> p_10(Aila)",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x))",
                    "p_12(Aila)",
                    "-p_13(Aila)",
                    "p_2(Aila) | p_13(Aila)",
                    "p_7(Aila) -> -p_7(Aila)"
                ],
                "formulas(goals)": [
                    "-p_7(Aila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Aila) \u2228 p_7(Aila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Aila) \u2192 \u00acp_7(Aila)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\np_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_12(Aila)\n\u00acp_13(Aila)\np_2(Aila) \u2228 p_13(Aila)\np_2(Aila) \u2192 p_7(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila)",
                    "p_5(Aila)",
                    "-p_3(Aila)",
                    "p_2(Aila)",
                    "-p_1(Aila)",
                    "-p_0(Aila)",
                    "p_4(Aila) -> (p_12(Aila) & p_5(Aila))",
                    "all x (p_10(x) -> p_3(x))",
                    "-(p_13(Aila) <-> p_2(Aila))",
                    "p_11(Aila) -> -(p_12(Aila) <-> p_13(Aila))",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x))",
                    "(-(p_0(Aila) <-> p_9(Aila))) -> p_10(Aila)",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x))",
                    "p_12(Aila)",
                    "-p_13(Aila)",
                    "p_2(Aila) | p_13(Aila)",
                    "p_2(Aila) -> p_7(Aila)"
                ],
                "formulas(goals)": [
                    "p_7(Aila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Aila) \u2192 \u00acp_7(Aila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Aila) \u2192 p_7(Aila)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\n(p_4(Aila) \u2192 p_12(Aila)) \u2227 (p_4(Aila) \u2192 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_12(Aila)\n\u00acp_13(Aila)\np_2(Aila) \u2228 p_13(Aila)\np_2(Aila) \u2192 p_7(Aila)\n\u00acp_10(Aila)\n\u00acp_9(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila)",
                    "p_5(Aila)",
                    "-p_3(Aila)",
                    "p_2(Aila)",
                    "-p_1(Aila)",
                    "-p_0(Aila)",
                    "(p_4(Aila) -> p_12(Aila)) & (p_4(Aila) -> p_5(Aila))",
                    "all x (p_10(x) -> p_3(x))",
                    "-(p_13(Aila) <-> p_2(Aila))",
                    "p_11(Aila) -> (-(p_12(Aila) <-> p_13(Aila)))",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x))",
                    "(-(p_0(Aila) <-> p_9(Aila))) -> p_10(Aila)",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x))",
                    "p_12(Aila)",
                    "-p_13(Aila)",
                    "p_2(Aila) | p_13(Aila)",
                    "p_2(Aila) -> p_7(Aila)",
                    "-p_10(Aila)",
                    "-p_9(Aila)"
                ],
                "formulas(goals)": [
                    "--p_7(Aila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Aila) \u2192 (p_12(Aila) \u2227 p_5(Aila))"
                ],
                "added_facts": [
                    "\u00acp_10(Aila)",
                    "\u00acp_9(Aila)"
                ],
                "added_rules": [
                    "(p_4(Aila) \u2192 p_12(Aila)) \u2227 (p_4(Aila) \u2192 p_5(Aila))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Aila)\np_5(Aila)\n\u00acp_3(Aila)\np_2(Aila)\n\u00acp_1(Aila)\n\u00acp_0(Aila)\n(p_4(Aila) \u2192 p_12(Aila)) \u2227 (p_4(Aila) \u2192 p_5(Aila))\n\u2200x (p_10(x) \u2192 p_3(x))\np_13(Aila) \u2295 p_2(Aila)\np_11(Aila) \u2192 (p_12(Aila) \u2295 p_13(Aila))\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_1(x))\n(p_0(Aila) \u2295 p_9(Aila)) \u2192 p_10(Aila)\n\u2200x ((p_6(x) \u2228 p_8(x)) \u2192 p_9(x))\np_12(Aila)\n\u00acp_13(Aila)\np_2(Aila) \u2228 p_13(Aila)\np_2(Aila) \u2192 \u00acp_7(Aila)\n\u00acp_10(Aila)\n\u00acp_9(Aila)",
            "Initial Goal": "\u00acp_7(Aila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Aila)",
                    "p_5(Aila)",
                    "-p_3(Aila)",
                    "p_2(Aila)",
                    "-p_1(Aila)",
                    "-p_0(Aila)",
                    "(p_4(Aila) -> p_12(Aila)) & (p_4(Aila) -> p_5(Aila))",
                    "all x (p_10(x) -> p_3(x))",
                    "-(p_13(Aila) <-> p_2(Aila))",
                    "p_11(Aila) -> (-(p_12(Aila) <-> p_13(Aila)))",
                    "all x ((p_8(x) | p_11(x)) -> p_1(x))",
                    "(-(p_0(Aila) <-> p_9(Aila))) -> p_10(Aila)",
                    "all x ((p_6(x) | p_8(x)) -> p_9(x))",
                    "p_12(Aila)",
                    "-p_13(Aila)",
                    "p_2(Aila) | p_13(Aila)",
                    "p_2(Aila) -> -p_7(Aila)",
                    "-p_10(Aila)",
                    "-p_9(Aila)"
                ],
                "formulas(goals)": [
                    "-p_7(Aila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Aila) \u2192 p_7(Aila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Aila) \u2192 \u00acp_7(Aila)"
                ]
            }
        }
    ]
}