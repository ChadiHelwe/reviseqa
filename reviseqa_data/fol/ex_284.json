{
    "background_story": "Emmalyn was a reclusive novelist known for her brilliant, yet haunting works of fiction. Her writing was deeply personal, reflecting the turmoil and intensity of her own inner world. Despite her literary success, Emmalyn remained an enigma, rarely attending public events or giving interviews. Her unapproachable demeanor was both captivating and intimidating, leaving fans and critics alike to speculate about her mysterious persona. Few had seen her outside of her secluded mansion, where she spent most of her days pouring her thoughts onto paper. Those who attempted to get close to her were often met with silence or polite dismissal, adding to the mystique surrounding this elusive and private individual.",
    "predicates": [
        {
            "id": 0,
            "name": "has_depth"
        },
        {
            "id": 1,
            "name": "thinks_deeply"
        },
        {
            "id": 2,
            "name": "produces_art"
        },
        {
            "id": 3,
            "name": "is_introspective"
        },
        {
            "id": 4,
            "name": "explores_ideas"
        },
        {
            "id": 5,
            "name": "is_reclusive"
        },
        {
            "id": 6,
            "name": "values_privacy"
        },
        {
            "id": 7,
            "name": "avoids_publicity"
        },
        {
            "id": 8,
            "name": "writes_novels"
        },
        {
            "id": 9,
            "name": "reads_widely"
        },
        {
            "id": 10,
            "name": "is_creative"
        },
        {
            "id": 11,
            "name": "guards_secrets"
        },
        {
            "id": 12,
            "name": "likes_solitude"
        },
        {
            "id": 13,
            "name": "expresses_emotions"
        },
        {
            "id": 14,
            "name": "expresses_emotion"
        },
        {
            "id": 15,
            "name": "plays_music"
        },
        {
            "id": 16,
            "name": "is_curious"
        },
        {
            "id": 17,
            "name": "learns_quickly"
        }
    ],
    "subject_name": "Emmalyn",
    "subject_category": "human",
    "keyword": "unapproachable",
    "all_facts": [
        {
            "id": 0,
            "subject": "Emmalyn",
            "text": "Emmalyn does not have depth.",
            "fol": "\u00acp_0(Emmalyn)",
            "str_fol": "\u00achas_depth(Emmalyn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emmalyn",
            "text": "Emmalyn does not think deeply.",
            "fol": "\u00acp_1(Emmalyn)",
            "str_fol": "\u00acthinks_deeply(Emmalyn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emmalyn",
            "text": "Emmalyn does not produce art.",
            "fol": "\u00acp_2(Emmalyn)",
            "str_fol": "\u00acproduces_art(Emmalyn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emmalyn",
            "text": "Emmalyn is not introspective.",
            "fol": "\u00acp_3(Emmalyn)",
            "str_fol": "\u00acis_introspective(Emmalyn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Emmalyn",
            "text": "Emmalyn does not explore new ideas.",
            "fol": "\u00acp_4(Emmalyn)",
            "str_fol": "\u00acexplores_ideas(Emmalyn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emmalyn",
            "text": "Emmalyn does not read widely.",
            "fol": "\u00acp_9(Emmalyn)",
            "str_fol": "\u00acreads_widely(Emmalyn)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emmalyn",
            "text": "Emmalyn is not creative.",
            "fol": "\u00acp_10(Emmalyn)",
            "str_fol": "\u00acis_creative(Emmalyn)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Emmalyn",
            "text": "Emmalyn does not write novels.",
            "fol": "\u00acp_8(Emmalyn)",
            "str_fol": "\u00acwrites_novels(Emmalyn)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Emmalyn",
            "text": "Emmalyn does not avoid publicity.",
            "fol": "\u00acp_7(Emmalyn)",
            "str_fol": "\u00acavoids_publicity(Emmalyn)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Emmalyn",
            "text": "Emmalyn does not value her privacy.",
            "fol": "\u00acp_6(Emmalyn)",
            "str_fol": "\u00acvalues_privacy(Emmalyn)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Emmalyn",
            "text": "Emmalyn is not reclusive.",
            "fol": "\u00acp_5(Emmalyn)",
            "str_fol": "\u00acis_reclusive(Emmalyn)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Emmalyn",
            "text": "Emmalyn does not explore new ideas.",
            "fol": "\u00acp_4(Emmalyn)",
            "str_fol": "\u00acexplores_ideas(Emmalyn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emmalyn",
            "text": "Emmalyn does not think deeply.",
            "fol": "\u00acp_1(Emmalyn)",
            "str_fol": "\u00acthinks_deeply(Emmalyn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emmalyn",
            "text": "Emmalyn does not produce art.",
            "fol": "\u00acp_2(Emmalyn)",
            "str_fol": "\u00acproduces_art(Emmalyn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Emmalyn",
            "text": "Emmalyn does not have depth.",
            "fol": "\u00acp_0(Emmalyn)",
            "str_fol": "\u00achas_depth(Emmalyn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emmalyn",
            "text": "Emmalyn is not introspective.",
            "fol": "\u00acp_3(Emmalyn)",
            "str_fol": "\u00acis_introspective(Emmalyn)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Anyone who reads widely will explore new ideas.",
            "fol": "\u2200x (p_9(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (reads_widely(x) \u2192 explores_ideas(x))"
        },
        {
            "id": 4,
            "text": "If Emmalyn thinks deeply or is creative, then she can produce art.",
            "fol": "(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)",
            "str_fol": "(thinks_deeply(Emmalyn) \u2228 is_creative(Emmalyn)) \u2192 produces_art(Emmalyn)"
        },
        {
            "id": 3,
            "text": "Anyone who writes novels or reads widely is creative.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((writes_novels(x) \u2228 reads_widely(x)) \u2192 is_creative(x))"
        },
        {
            "id": 2,
            "text": "If Emmalyn either writes novels or avoids publicity (but not both), then she has depth.",
            "fol": "(p_8(Emmalyn) \u2295 p_7(Emmalyn)) \u2192 p_0(Emmalyn)",
            "str_fol": "(writes_novels(Emmalyn) \u2295 avoids_publicity(Emmalyn)) \u2192 has_depth(Emmalyn)"
        },
        {
            "id": 1,
            "text": "If Emmalyn either avoids publicity or values her privacy (but not both), then she is introspective.",
            "fol": "(p_7(Emmalyn) \u2295 p_6(Emmalyn)) \u2192 p_3(Emmalyn)",
            "str_fol": "(avoids_publicity(Emmalyn) \u2295 values_privacy(Emmalyn)) \u2192 is_introspective(Emmalyn)"
        },
        {
            "id": 0,
            "text": "For all humans, if they are reclusive, then they value their privacy.",
            "fol": "\u2200x (p_5(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (is_reclusive(x) \u2192 values_privacy(x))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Emmalyn",
            "text": "Emmalyn does not explore new ideas.",
            "fol": "\u00acp_4(Emmalyn)",
            "str_fol": "\u00acexplores_ideas(Emmalyn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emmalyn",
            "text": "Emmalyn does not think deeply.",
            "fol": "\u00acp_1(Emmalyn)",
            "str_fol": "\u00acthinks_deeply(Emmalyn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emmalyn",
            "text": "Emmalyn does not produce art.",
            "fol": "\u00acp_2(Emmalyn)",
            "str_fol": "\u00acproduces_art(Emmalyn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Emmalyn",
            "text": "Emmalyn does not have depth.",
            "fol": "\u00acp_0(Emmalyn)",
            "str_fol": "\u00achas_depth(Emmalyn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emmalyn",
            "text": "Emmalyn is not introspective.",
            "fol": "\u00acp_3(Emmalyn)",
            "str_fol": "\u00acis_introspective(Emmalyn)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Anyone who reads widely will explore new ideas.",
            "fol": "\u2200x (p_9(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (reads_widely(x) \u2192 explores_ideas(x))"
        },
        {
            "id": 4,
            "text": "If Emmalyn thinks deeply or is creative, then she can produce art.",
            "fol": "(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)",
            "str_fol": "(thinks_deeply(Emmalyn) \u2228 is_creative(Emmalyn)) \u2192 produces_art(Emmalyn)"
        },
        {
            "id": 3,
            "text": "Anyone who writes novels or reads widely is creative.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((writes_novels(x) \u2228 reads_widely(x)) \u2192 is_creative(x))"
        },
        {
            "id": 2,
            "text": "If Emmalyn either writes novels or avoids publicity (but not both), then she has depth.",
            "fol": "(p_8(Emmalyn) \u2295 p_7(Emmalyn)) \u2192 p_0(Emmalyn)",
            "str_fol": "(writes_novels(Emmalyn) \u2295 avoids_publicity(Emmalyn)) \u2192 has_depth(Emmalyn)"
        },
        {
            "id": 1,
            "text": "If Emmalyn either avoids publicity or values her privacy (but not both), then she is introspective.",
            "fol": "(p_7(Emmalyn) \u2295 p_6(Emmalyn)) \u2192 p_3(Emmalyn)",
            "str_fol": "(avoids_publicity(Emmalyn) \u2295 values_privacy(Emmalyn)) \u2192 is_introspective(Emmalyn)"
        },
        {
            "id": 0,
            "text": "For all humans, if they are reclusive, then they value their privacy.",
            "fol": "\u2200x (p_5(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (is_reclusive(x) \u2192 values_privacy(x))"
        }
    ],
    "context_fol": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n(p_8(Emmalyn) \u2295 p_7(Emmalyn)) \u2192 p_0(Emmalyn)\n(p_7(Emmalyn) \u2295 p_6(Emmalyn)) \u2192 p_3(Emmalyn)\n\u2200x (p_5(x) \u2192 p_6(x))",
    "conclusion": {
        "id": 10,
        "subject": "Emmalyn",
        "text": "Emmalyn is not reclusive.",
        "fol": "\u00acp_5(Emmalyn)",
        "str_fol": "\u00acis_reclusive(Emmalyn)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_5(Emmalyn)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not explore new ideas.",
                    "fol": "\u00acp_4(Emmalyn)",
                    "str_fol": "\u00acexplores_ideas(Emmalyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who reads widely will explore new ideas.",
                    "fol": "\u2200x (p_9(x) \u2192 p_4(x))",
                    "str_fol": "\u2200x (reads_widely(x) \u2192 explores_ideas(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Emmalyn",
                "text": "Emmalyn does not read widely.",
                "fol": "\u00acp_9(Emmalyn)",
                "str_fol": "\u00acreads_widely(Emmalyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not think deeply.",
                    "fol": "\u00acp_1(Emmalyn)",
                    "str_fol": "\u00acthinks_deeply(Emmalyn)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not produce art.",
                    "fol": "\u00acp_2(Emmalyn)",
                    "str_fol": "\u00acproduces_art(Emmalyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Emmalyn thinks deeply or is creative, then she can produce art.",
                    "fol": "(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)",
                    "str_fol": "(thinks_deeply(Emmalyn) \u2228 is_creative(Emmalyn)) \u2192 produces_art(Emmalyn)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Emmalyn",
                "text": "Emmalyn is not creative.",
                "fol": "\u00acp_10(Emmalyn)",
                "str_fol": "\u00acis_creative(Emmalyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not read widely.",
                    "fol": "\u00acp_9(Emmalyn)",
                    "str_fol": "\u00acreads_widely(Emmalyn)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Emmalyn",
                    "text": "Emmalyn is not creative.",
                    "fol": "\u00acp_10(Emmalyn)",
                    "str_fol": "\u00acis_creative(Emmalyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who writes novels or reads widely is creative.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((writes_novels(x) \u2228 reads_widely(x)) \u2192 is_creative(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Emmalyn",
                "text": "Emmalyn does not write novels.",
                "fol": "\u00acp_8(Emmalyn)",
                "str_fol": "\u00acwrites_novels(Emmalyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not write novels.",
                    "fol": "\u00acp_8(Emmalyn)",
                    "str_fol": "\u00acwrites_novels(Emmalyn)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not have depth.",
                    "fol": "\u00acp_0(Emmalyn)",
                    "str_fol": "\u00achas_depth(Emmalyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Emmalyn either writes novels or avoids publicity (but not both), then she has depth.",
                    "fol": "(p_8(Emmalyn) \u2295 p_7(Emmalyn)) \u2192 p_0(Emmalyn)",
                    "str_fol": "(writes_novels(Emmalyn) \u2295 avoids_publicity(Emmalyn)) \u2192 has_depth(Emmalyn)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Emmalyn",
                "text": "Emmalyn does not avoid publicity.",
                "fol": "\u00acp_7(Emmalyn)",
                "str_fol": "\u00acavoids_publicity(Emmalyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not avoid publicity.",
                    "fol": "\u00acp_7(Emmalyn)",
                    "str_fol": "\u00acavoids_publicity(Emmalyn)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Emmalyn",
                    "text": "Emmalyn is not introspective.",
                    "fol": "\u00acp_3(Emmalyn)",
                    "str_fol": "\u00acis_introspective(Emmalyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Emmalyn either avoids publicity or values her privacy (but not both), then she is introspective.",
                    "fol": "(p_7(Emmalyn) \u2295 p_6(Emmalyn)) \u2192 p_3(Emmalyn)",
                    "str_fol": "(avoids_publicity(Emmalyn) \u2295 values_privacy(Emmalyn)) \u2192 is_introspective(Emmalyn)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Emmalyn",
                "text": "Emmalyn does not value her privacy.",
                "fol": "\u00acp_6(Emmalyn)",
                "str_fol": "\u00acvalues_privacy(Emmalyn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Emmalyn",
                    "text": "Emmalyn does not value her privacy.",
                    "fol": "\u00acp_6(Emmalyn)",
                    "str_fol": "\u00acvalues_privacy(Emmalyn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they are reclusive, then they value their privacy.",
                    "fol": "\u2200x (p_5(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (is_reclusive(x) \u2192 values_privacy(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Emmalyn",
                "text": "Emmalyn is not reclusive.",
                "fol": "\u00acp_5(Emmalyn)",
                "str_fol": "\u00acis_reclusive(Emmalyn)",
                "negation": true
            }
        }
    ],
    "proof_trace": "2 p_1(Emmalyn) | p_10(Emmalyn) -> p_2(Emmalyn).  [assumption].\n3 (all x (p_8(x) | p_9(x) -> p_10(x))).  [assumption].\n4 -(p_8(Emmalyn) <-> p_7(Emmalyn)) -> p_0(Emmalyn).  [assumption].\n5 -(p_7(Emmalyn) <-> p_6(Emmalyn)) -> p_3(Emmalyn).  [assumption].\n6 (all x (p_5(x) -> p_6(x))).  [assumption].\n7 -p_5(Emmalyn).  [goal].\n10 -p_10(Emmalyn) | p_2(Emmalyn).  [clausify(2)].\n11 -p_2(Emmalyn).  [assumption].\n13 -p_0(Emmalyn).  [assumption].\n14 p_8(Emmalyn) | -p_7(Emmalyn) | p_0(Emmalyn).  [clausify(4)].\n16 -p_3(Emmalyn).  [assumption].\n17 p_7(Emmalyn) | -p_6(Emmalyn) | p_3(Emmalyn).  [clausify(5)].\n18 p_8(Emmalyn) | -p_7(Emmalyn).  [resolve(14,c,13,a)].\n19 -p_8(x) | p_10(x).  [clausify(3)].\n21 p_5(Emmalyn).  [deny(7)].\n22 -p_5(x) | p_6(x).  [clausify(6)].\n23 -p_7(Emmalyn) | p_10(Emmalyn).  [resolve(18,a,19,a)].\n24 -p_10(Emmalyn).  [resolve(10,b,11,a)].\n25 p_7(Emmalyn) | -p_6(Emmalyn).  [resolve(17,c,16,a)].\n27 -p_7(Emmalyn).  [resolve(23,b,24,a)].\n28 -p_6(Emmalyn).  [resolve(27,a,25,a)].\n29 p_6(Emmalyn).  [resolve(21,a,22,a)].\n30 $F.  [resolve(28,a,29,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n(p_8(Emmalyn) \u2295 p_7(Emmalyn)) \u2192 p_0(Emmalyn)\n(p_7(Emmalyn) \u2295 p_6(Emmalyn)) \u2192 p_3(Emmalyn)\n\u2200x (p_5(x) \u2192 p_6(x))\n\u2200x (p_5(x) \u2192 p_5(x))",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_4(Emmalyn).",
                    "- p_1(Emmalyn).",
                    "- p_2(Emmalyn).",
                    "- p_0(Emmalyn).",
                    "- p_3(Emmalyn).",
                    "all x (p_9(x) -> p_4(x)).",
                    "(p_1(Emmalyn) | p_10(Emmalyn)) -> p_2(Emmalyn).",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x)).",
                    "(-(p_8(Emmalyn) <-> p_7(Emmalyn))) -> p_0(Emmalyn).",
                    "(-(p_7(Emmalyn) <-> p_6(Emmalyn))) -> p_3(Emmalyn).",
                    "all x (p_5(x) -> p_6(x)).",
                    "all x (p_5(x) -> p_5(x))."
                ],
                "formulas(goals)": [
                    "- p_5(Emmalyn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_5(x) \u2192 p_5(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n(\u00ac(p_8(Emmalyn) \u2194 p_7(Emmalyn))) \u2192 p_0(Emmalyn)\n(\u00ac(p_7(Emmalyn) \u2194 p_6(Emmalyn))) \u2192 p_3(Emmalyn)\np_5(Emmalyn)",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emmalyn)",
                    "-p_1(Emmalyn)",
                    "-p_2(Emmalyn)",
                    "-p_0(Emmalyn)",
                    "-p_3(Emmalyn)",
                    "all x (p_9(x) -> p_4(x))",
                    "(p_1(Emmalyn) | p_10(Emmalyn)) -> p_2(Emmalyn)",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "-(p_8(Emmalyn) <-> p_7(Emmalyn)) -> p_0(Emmalyn)",
                    "-(p_7(Emmalyn) <-> p_6(Emmalyn)) -> p_3(Emmalyn)",
                    "p_5(Emmalyn)"
                ],
                "formulas(goals)": [
                    "- -p_5(Emmalyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2192 p_6(x))",
                    "\u2200x (p_5(x) \u2192 p_5(x))"
                ],
                "added_facts": [
                    "p_5(Emmalyn)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(\u00acp_2(Emmalyn)) \u2192 (\u00acp_1(Emmalyn) \u2227 \u00acp_10(Emmalyn))\n\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))\n(\u00ac(p_8(Emmalyn) \u2194 p_7(Emmalyn))) \u2192 p_0(Emmalyn)\n(\u00ac(p_7(Emmalyn) \u2194 p_6(Emmalyn))) \u2192 p_3(Emmalyn)\np_5(Emmalyn)\np_5(Emmalyn) \u2228 \u00acp_5(Emmalyn)",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emmalyn)",
                    "-p_1(Emmalyn)",
                    "-p_2(Emmalyn)",
                    "-p_0(Emmalyn)",
                    "-p_3(Emmalyn)",
                    "all x (p_9(x) -> p_4(x))",
                    "(-p_2(Emmalyn) -> (-p_1(Emmalyn) & -p_10(Emmalyn)))",
                    "all x (-p_10(x) -> (-p_8(x) & -p_9(x)))",
                    "(-(p_8(Emmalyn) <-> p_7(Emmalyn)) -> p_0(Emmalyn))",
                    "(-(p_7(Emmalyn) <-> p_6(Emmalyn)) -> p_3(Emmalyn))",
                    "p_5(Emmalyn)",
                    "(p_5(Emmalyn) | -p_5(Emmalyn))"
                ],
                "formulas(goals)": [
                    "--p_5(Emmalyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_1(Emmalyn) \u2228 p_10(Emmalyn)) \u2192 p_2(Emmalyn)",
                    "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))"
                ],
                "added_facts": [
                    "p_5(Emmalyn) \u2228 \u00acp_5(Emmalyn)"
                ],
                "added_rules": [
                    "(\u00acp_2(Emmalyn)) \u2192 (\u00acp_1(Emmalyn) \u2227 \u00acp_10(Emmalyn))",
                    "\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(\u00acp_2(Emmalyn)) \u2192 (\u00acp_1(Emmalyn) \u2227 \u00acp_10(Emmalyn))\n\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))\n(\u00ac(p_8(Emmalyn) \u2194 p_7(Emmalyn))) \u2192 p_0(Emmalyn)\n(\u00ac(p_7(Emmalyn) \u2194 p_6(Emmalyn))) \u2192 p_3(Emmalyn)\np_5(Emmalyn) \u2228 \u00acp_5(Emmalyn)\n\u00acp_9(Emmalyn) \u2192 \u00acp_5(Emmalyn)",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emmalyn)",
                    "-p_1(Emmalyn)",
                    "-p_2(Emmalyn)",
                    "-p_0(Emmalyn)",
                    "-p_3(Emmalyn)",
                    "all x (p_9(x) -> p_4(x))",
                    "(-p_2(Emmalyn)) -> (-p_1(Emmalyn) & -p_10(Emmalyn))",
                    "all x (-p_10(x) -> (-p_8(x) & -p_9(x)))",
                    "(-(p_8(Emmalyn) <-> p_7(Emmalyn))) -> p_0(Emmalyn)",
                    "(-(p_7(Emmalyn) <-> p_6(Emmalyn))) -> p_3(Emmalyn)",
                    "p_5(Emmalyn) | -p_5(Emmalyn)",
                    "-p_9(Emmalyn) -> -p_5(Emmalyn)"
                ],
                "formulas(goals)": [
                    "-p_5(Emmalyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Emmalyn)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_9(Emmalyn) \u2192 \u00acp_5(Emmalyn)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(\u00acp_2(Emmalyn) \u2192 \u00acp_1(Emmalyn)) \u2227 (\u00acp_2(Emmalyn) \u2192 \u00acp_10(Emmalyn))\n\u2200x ((\u00acp_10(x) \u2192 \u00acp_8(x)) \u2227 (\u00acp_10(x) \u2192 \u00acp_9(x)))\n(\u00ac(p_8(Emmalyn) \u2194 p_7(Emmalyn))) \u2192 p_0(Emmalyn)\n(\u00ac(p_7(Emmalyn) \u2194 p_6(Emmalyn))) \u2192 p_3(Emmalyn)\np_5(Emmalyn) \u2228 \u00acp_5(Emmalyn)\np_5(Emmalyn) \u2192 p_9(Emmalyn)\n\u00acp_10(Emmalyn)\n\u00acp_9(Emmalyn)",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emmalyn)",
                    "-p_1(Emmalyn)",
                    "-p_2(Emmalyn)",
                    "-p_0(Emmalyn)",
                    "-p_3(Emmalyn)",
                    "all x (p_9(x) -> p_4(x))",
                    "(-p_2(Emmalyn) -> -p_1(Emmalyn)) & (-p_2(Emmalyn) -> -p_10(Emmalyn))",
                    "all x ((-p_10(x) -> -p_8(x)) & (-p_10(x) -> -p_9(x)))",
                    "(-(p_8(Emmalyn) <-> p_7(Emmalyn))) -> p_0(Emmalyn)",
                    "(-(p_7(Emmalyn) <-> p_6(Emmalyn))) -> p_3(Emmalyn)",
                    "p_5(Emmalyn) | -p_5(Emmalyn)",
                    "p_5(Emmalyn) -> p_9(Emmalyn)",
                    "-p_10(Emmalyn)",
                    "-p_9(Emmalyn)"
                ],
                "formulas(goals)": [
                    "-p_5(Emmalyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(\u00acp_2(Emmalyn)) \u2192 (\u00acp_1(Emmalyn) \u2227 \u00acp_10(Emmalyn))",
                    "\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))",
                    "\u00acp_9(Emmalyn) \u2192 \u00acp_5(Emmalyn)"
                ],
                "added_facts": [
                    "\u00acp_10(Emmalyn)",
                    "\u00acp_9(Emmalyn)"
                ],
                "added_rules": [
                    "(\u00acp_2(Emmalyn) \u2192 \u00acp_1(Emmalyn)) \u2227 (\u00acp_2(Emmalyn) \u2192 \u00acp_10(Emmalyn))",
                    "\u2200x ((\u00acp_10(x) \u2192 \u00acp_8(x)) \u2227 (\u00acp_10(x) \u2192 \u00acp_9(x)))",
                    "p_5(Emmalyn) \u2192 p_9(Emmalyn)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(\u00acp_2(Emmalyn) \u2192 \u00acp_1(Emmalyn)) \u2227 (\u00acp_2(Emmalyn) \u2192 \u00acp_10(Emmalyn))\n\u2200x ((\u00acp_10(x) \u2192 \u00acp_8(x)) \u2227 (\u00acp_10(x) \u2192 \u00acp_9(x)))\n(\u00ac(p_8(Emmalyn) \u2194 p_7(Emmalyn))) \u2192 p_0(Emmalyn)\n(\u00ac(p_7(Emmalyn) \u2194 p_6(Emmalyn))) \u2192 p_3(Emmalyn)\n\u00acp_10(Emmalyn)\n\u00acp_9(Emmalyn)\n(\u00acp_8(Emmalyn) \u2192 p_5(Emmalyn))",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emmalyn)",
                    "-p_1(Emmalyn)",
                    "-p_2(Emmalyn)",
                    "-p_0(Emmalyn)",
                    "-p_3(Emmalyn)",
                    "all x (p_9(x) -> p_4(x))",
                    "(-p_2(Emmalyn) -> -p_1(Emmalyn)) & (-p_2(Emmalyn) -> -p_10(Emmalyn))",
                    "all x ((-p_10(x) -> -p_8(x)) & (-p_10(x) -> -p_9(x)))",
                    "(-(p_8(Emmalyn) <-> p_7(Emmalyn))) -> p_0(Emmalyn)",
                    "(-(p_7(Emmalyn) <-> p_6(Emmalyn))) -> p_3(Emmalyn)",
                    "-p_10(Emmalyn)",
                    "-p_9(Emmalyn)",
                    "(-p_8(Emmalyn) -> p_5(Emmalyn))"
                ],
                "formulas(goals)": [
                    "p_5(Emmalyn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Emmalyn) \u2192 p_9(Emmalyn)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_8(Emmalyn) \u2192 p_5(Emmalyn)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emmalyn)\n\u00acp_1(Emmalyn)\n\u00acp_2(Emmalyn)\n\u00acp_0(Emmalyn)\n\u00acp_3(Emmalyn)\n\u2200x (p_9(x) \u2192 p_4(x))\n(\u00acp_2(Emmalyn) \u2192 \u00acp_1(Emmalyn)) \u2227 (\u00acp_2(Emmalyn) \u2192 \u00acp_10(Emmalyn))\n\u2200x ((\u00acp_10(x) \u2192 \u00acp_8(x)) \u2227 (\u00acp_10(x) \u2192 \u00acp_9(x)))\n(\u00ac(p_8(Emmalyn) \u2194 p_7(Emmalyn))) \u2192 p_0(Emmalyn)\n(\u00ac(p_7(Emmalyn) \u2194 p_6(Emmalyn))) \u2192 p_3(Emmalyn)\n\u00acp_10(Emmalyn)\n\u00acp_9(Emmalyn)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_5(x))",
            "Initial Goal": "\u00acp_5(Emmalyn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emmalyn).",
                    "-p_1(Emmalyn).",
                    "-p_2(Emmalyn).",
                    "-p_0(Emmalyn).",
                    "-p_3(Emmalyn).",
                    "all x (p_9(x) -> p_4(x)).",
                    "(-p_2(Emmalyn) -> -p_1(Emmalyn)) & (-p_2(Emmalyn) -> -p_10(Emmalyn)).",
                    "all x ((-p_10(x) -> -p_8(x)) & (-p_10(x) -> -p_9(x))).",
                    "(-(p_8(Emmalyn) <-> p_7(Emmalyn))) -> p_0(Emmalyn).",
                    "(-(p_7(Emmalyn) <-> p_6(Emmalyn))) -> p_3(Emmalyn).",
                    "-p_10(Emmalyn).",
                    "-p_9(Emmalyn).",
                    "all x ((-p_8(x) & -p_9(x)) -> -p_5(x))."
                ],
                "formulas(goals)": [
                    "-p_5(Emmalyn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(\u00acp_8(Emmalyn) \u2192 p_5(Emmalyn))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_5(x))"
                ]
            }
        }
    ]
}