{
    "background_story": "Aspen, a talented but struggling artist, felt stuck in her small hometown. She yearned to showcase her paintings in the city's galleries, but every door she tried seemed to be locked. Despite her passion, she found herself working multiple part-time jobs just to make ends meet, leaving her little time for her art. Feeling trapped and uninspired, Aspen's creativity began to wither away. One day, while exploring the outskirts of town, she stumbled upon an old, abandoned studio. Seeing potential, Aspen decided to renovate the space and turn it into her own gallery. With newfound determination, she poured her heart into the project, and soon, her art and the studio became a sensation, attracting visitors from all over. Aspen finally felt unstuck, her dreams and creativity flowing freely once more.",
    "predicates": [
        {
            "id": 0,
            "name": "has_talent"
        },
        {
            "id": 1,
            "name": "gets_lucky"
        },
        {
            "id": 2,
            "name": "stays_motivated"
        },
        {
            "id": 3,
            "name": "seeks_opportunity"
        },
        {
            "id": 4,
            "name": "meets_new_people"
        },
        {
            "id": 5,
            "name": "overcomes_obstacles"
        },
        {
            "id": 6,
            "name": "grows_personally"
        },
        {
            "id": 7,
            "name": "determined"
        },
        {
            "id": 8,
            "name": "successful"
        },
        {
            "id": 9,
            "name": "inspired"
        },
        {
            "id": 10,
            "name": "is_focused"
        },
        {
            "id": 11,
            "name": "works_hard"
        },
        {
            "id": 12,
            "name": "is_adventurous"
        },
        {
            "id": 13,
            "name": "takes_risks"
        },
        {
            "id": 14,
            "name": "explores_new"
        },
        {
            "id": 15,
            "name": "achieves_goals"
        },
        {
            "id": 16,
            "name": "faces_challenges"
        },
        {
            "id": 17,
            "name": "pursues_passion"
        },
        {
            "id": 18,
            "name": "finds_fulfillment"
        },
        {
            "id": 19,
            "name": "creative"
        },
        {
            "id": 20,
            "name": "confident"
        },
        {
            "id": 21,
            "name": "sets_goals"
        },
        {
            "id": 22,
            "name": "is_disciplined"
        },
        {
            "id": 23,
            "name": "learns_fast"
        },
        {
            "id": 24,
            "name": "sets_priorities"
        },
        {
            "id": 25,
            "name": "finds_mentor"
        },
        {
            "id": 26,
            "name": "tries_things"
        },
        {
            "id": 27,
            "name": "sees_opens"
        },
        {
            "id": 28,
            "name": "pursues_dreams"
        }
    ],
    "subject_name": "Aspen",
    "subject_category": "human",
    "keyword": "stuck",
    "all_facts": [
        {
            "id": 0,
            "subject": "Aspen",
            "text": "Aspen has talent.",
            "fol": "p_0(Aspen)",
            "str_fol": "has_talent(Aspen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aspen",
            "text": "Aspen gets lucky.",
            "fol": "p_1(Aspen)",
            "str_fol": "gets_lucky(Aspen)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Aspen",
            "text": "Aspen stays motivated.",
            "fol": "p_2(Aspen)",
            "str_fol": "stays_motivated(Aspen)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aspen",
            "text": "Aspen seeks opportunity.",
            "fol": "p_3(Aspen)",
            "str_fol": "seeks_opportunity(Aspen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Aspen",
            "text": "Aspen does not meet new people.",
            "fol": "\u00acp_4(Aspen)",
            "str_fol": "\u00acmeets_new_people(Aspen)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Aspen",
            "text": "Aspen overcomes obstacles.",
            "fol": "p_5(Aspen)",
            "str_fol": "overcomes_obstacles(Aspen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aspen",
            "text": "Aspen does not grow personally.",
            "fol": "\u00acp_6(Aspen)",
            "str_fol": "\u00acgrows_personally(Aspen)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Aspen",
            "text": "Aspen faces challenges.",
            "fol": "p_16(Aspen)",
            "str_fol": "faces_challenges(Aspen)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Aspen",
            "text": "Aspen explores new things.",
            "fol": "p_14(Aspen)",
            "str_fol": "explores_new(Aspen)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Aspen",
            "text": "Aspen does not achieve her goals.",
            "fol": "\u00acp_15(Aspen)",
            "str_fol": "\u00acachieves_goals(Aspen)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Aspen",
            "text": "Aspen works hard.",
            "fol": "p_11(Aspen)",
            "str_fol": "works_hard(Aspen)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Aspen",
            "text": "Aspen is adventurous.",
            "fol": "p_12(Aspen)",
            "str_fol": "is_adventurous(Aspen)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Aspen",
            "text": "Aspen is not focused.",
            "fol": "\u00acp_10(Aspen)",
            "str_fol": "\u00acis_focused(Aspen)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Aspen",
            "text": "Aspen is not successful.",
            "fol": "\u00acp_8(Aspen)",
            "str_fol": "\u00acsuccessful(Aspen)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Aspen",
            "text": "Aspen is determined.",
            "fol": "p_7(Aspen)",
            "str_fol": "determined(Aspen)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Aspen",
            "text": "Aspen is inspired.",
            "fol": "p_9(Aspen)",
            "str_fol": "inspired(Aspen)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Aspen",
            "text": "Aspen overcomes obstacles.",
            "fol": "p_5(Aspen)",
            "str_fol": "overcomes_obstacles(Aspen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aspen",
            "text": "Aspen does not grow personally.",
            "fol": "\u00acp_6(Aspen)",
            "str_fol": "\u00acgrows_personally(Aspen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Aspen",
            "text": "Aspen seeks opportunity.",
            "fol": "p_3(Aspen)",
            "str_fol": "seeks_opportunity(Aspen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Aspen",
            "text": "Aspen does not meet new people.",
            "fol": "\u00acp_4(Aspen)",
            "str_fol": "\u00acmeets_new_people(Aspen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aspen",
            "text": "Aspen stays motivated.",
            "fol": "p_2(Aspen)",
            "str_fol": "stays_motivated(Aspen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aspen",
            "text": "Aspen gets lucky.",
            "fol": "p_1(Aspen)",
            "str_fol": "gets_lucky(Aspen)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Aspen",
            "text": "Aspen has talent.",
            "fol": "p_0(Aspen)",
            "str_fol": "has_talent(Aspen)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "For all humans, if they either face challenges or overcome obstacles, then they grow personally.",
            "fol": "\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((faces_challenges(x) \u2295 overcomes_obstacles(x)) \u2192 grows_personally(x))"
        },
        {
            "id": 7,
            "text": "If Aspen seeks opportunity, then she either explores new things or meets new people, but not both.",
            "fol": "p_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))",
            "str_fol": "seeks_opportunity(Aspen) \u2192 (explores_new(Aspen) \u2295 meets_new_people(Aspen))"
        },
        {
            "id": 6,
            "text": "If Aspen faces challenges, then she either achieves her goals or stays motivated, but not both.",
            "fol": "p_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))",
            "str_fol": "faces_challenges(Aspen) \u2192 (achieves_goals(Aspen) \u2295 stays_motivated(Aspen))"
        },
        {
            "id": 5,
            "text": "If Aspen either works hard or gets lucky (but not both), then she achieves her goals.",
            "fol": "(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)",
            "str_fol": "(works_hard(Aspen) \u2295 gets_lucky(Aspen)) \u2192 achieves_goals(Aspen)"
        },
        {
            "id": 4,
            "text": "Anyone who takes risks or explores new things is adventurous.",
            "fol": "\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((takes_risks(x) \u2228 explores_new(x)) \u2192 is_adventurous(x))"
        },
        {
            "id": 3,
            "text": "Aspen is either adventurous or focused, but she cannot be both simultaneously.",
            "fol": "p_12(Aspen) \u2295 p_10(Aspen)",
            "str_fol": "is_adventurous(Aspen) \u2295 is_focused(Aspen)"
        },
        {
            "id": 2,
            "text": "If Aspen is successful, then she either has talent or works hard, but not both.",
            "fol": "p_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))",
            "str_fol": "successful(Aspen) \u2192 (has_talent(Aspen) \u2295 works_hard(Aspen))"
        },
        {
            "id": 1,
            "text": "Aspen is either focused or determined, but she cannot be both simultaneously.",
            "fol": "p_10(Aspen) \u2295 p_7(Aspen)",
            "str_fol": "is_focused(Aspen) \u2295 determined(Aspen)"
        },
        {
            "id": 0,
            "text": "If Aspen is determined, then she is either successful or inspired, but not both.",
            "fol": "p_7(Aspen) \u2192 (p_8(Aspen) \u2295 p_9(Aspen))",
            "str_fol": "determined(Aspen) \u2192 (successful(Aspen) \u2295 inspired(Aspen))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Aspen",
            "text": "Aspen overcomes obstacles.",
            "fol": "p_5(Aspen)",
            "str_fol": "overcomes_obstacles(Aspen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aspen",
            "text": "Aspen does not grow personally.",
            "fol": "\u00acp_6(Aspen)",
            "str_fol": "\u00acgrows_personally(Aspen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Aspen",
            "text": "Aspen seeks opportunity.",
            "fol": "p_3(Aspen)",
            "str_fol": "seeks_opportunity(Aspen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Aspen",
            "text": "Aspen does not meet new people.",
            "fol": "\u00acp_4(Aspen)",
            "str_fol": "\u00acmeets_new_people(Aspen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aspen",
            "text": "Aspen stays motivated.",
            "fol": "p_2(Aspen)",
            "str_fol": "stays_motivated(Aspen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aspen",
            "text": "Aspen gets lucky.",
            "fol": "p_1(Aspen)",
            "str_fol": "gets_lucky(Aspen)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Aspen",
            "text": "Aspen has talent.",
            "fol": "p_0(Aspen)",
            "str_fol": "has_talent(Aspen)",
            "negation": false
        },
        {
            "id": 8,
            "text": "For all humans, if they either face challenges or overcome obstacles, then they grow personally.",
            "fol": "\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((faces_challenges(x) \u2295 overcomes_obstacles(x)) \u2192 grows_personally(x))"
        },
        {
            "id": 7,
            "text": "If Aspen seeks opportunity, then she either explores new things or meets new people, but not both.",
            "fol": "p_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))",
            "str_fol": "seeks_opportunity(Aspen) \u2192 (explores_new(Aspen) \u2295 meets_new_people(Aspen))"
        },
        {
            "id": 6,
            "text": "If Aspen faces challenges, then she either achieves her goals or stays motivated, but not both.",
            "fol": "p_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))",
            "str_fol": "faces_challenges(Aspen) \u2192 (achieves_goals(Aspen) \u2295 stays_motivated(Aspen))"
        },
        {
            "id": 5,
            "text": "If Aspen either works hard or gets lucky (but not both), then she achieves her goals.",
            "fol": "(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)",
            "str_fol": "(works_hard(Aspen) \u2295 gets_lucky(Aspen)) \u2192 achieves_goals(Aspen)"
        },
        {
            "id": 4,
            "text": "Anyone who takes risks or explores new things is adventurous.",
            "fol": "\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((takes_risks(x) \u2228 explores_new(x)) \u2192 is_adventurous(x))"
        },
        {
            "id": 3,
            "text": "Aspen is either adventurous or focused, but she cannot be both simultaneously.",
            "fol": "p_12(Aspen) \u2295 p_10(Aspen)",
            "str_fol": "is_adventurous(Aspen) \u2295 is_focused(Aspen)"
        },
        {
            "id": 2,
            "text": "If Aspen is successful, then she either has talent or works hard, but not both.",
            "fol": "p_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))",
            "str_fol": "successful(Aspen) \u2192 (has_talent(Aspen) \u2295 works_hard(Aspen))"
        },
        {
            "id": 1,
            "text": "Aspen is either focused or determined, but she cannot be both simultaneously.",
            "fol": "p_10(Aspen) \u2295 p_7(Aspen)",
            "str_fol": "is_focused(Aspen) \u2295 determined(Aspen)"
        },
        {
            "id": 0,
            "text": "If Aspen is determined, then she is either successful or inspired, but not both.",
            "fol": "p_7(Aspen) \u2192 (p_8(Aspen) \u2295 p_9(Aspen))",
            "str_fol": "determined(Aspen) \u2192 (successful(Aspen) \u2295 inspired(Aspen))"
        }
    ],
    "context_fol": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_7(Aspen) \u2192 (p_8(Aspen) \u2295 p_9(Aspen))",
    "conclusion": {
        "id": 15,
        "subject": "Aspen",
        "text": "Aspen is inspired.",
        "fol": "p_9(Aspen)",
        "str_fol": "inspired(Aspen)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_9(Aspen)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Aspen",
                    "text": "Aspen overcomes obstacles.",
                    "fol": "p_5(Aspen)",
                    "str_fol": "overcomes_obstacles(Aspen)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Aspen",
                    "text": "Aspen does not grow personally.",
                    "fol": "\u00acp_6(Aspen)",
                    "str_fol": "\u00acgrows_personally(Aspen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "For all humans, if they either face challenges or overcome obstacles, then they grow personally.",
                    "fol": "\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((faces_challenges(x) \u2295 overcomes_obstacles(x)) \u2192 grows_personally(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Aspen",
                "text": "Aspen faces challenges.",
                "fol": "p_16(Aspen)",
                "str_fol": "faces_challenges(Aspen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Aspen",
                    "text": "Aspen seeks opportunity.",
                    "fol": "p_3(Aspen)",
                    "str_fol": "seeks_opportunity(Aspen)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Aspen",
                    "text": "Aspen does not meet new people.",
                    "fol": "\u00acp_4(Aspen)",
                    "str_fol": "\u00acmeets_new_people(Aspen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Aspen seeks opportunity, then she either explores new things or meets new people, but not both.",
                    "fol": "p_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))",
                    "str_fol": "seeks_opportunity(Aspen) \u2192 (explores_new(Aspen) \u2295 meets_new_people(Aspen))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Aspen",
                "text": "Aspen explores new things.",
                "fol": "p_14(Aspen)",
                "str_fol": "explores_new(Aspen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Aspen",
                    "text": "Aspen faces challenges.",
                    "fol": "p_16(Aspen)",
                    "str_fol": "faces_challenges(Aspen)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Aspen",
                    "text": "Aspen stays motivated.",
                    "fol": "p_2(Aspen)",
                    "str_fol": "stays_motivated(Aspen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Aspen faces challenges, then she either achieves her goals or stays motivated, but not both.",
                    "fol": "p_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))",
                    "str_fol": "faces_challenges(Aspen) \u2192 (achieves_goals(Aspen) \u2295 stays_motivated(Aspen))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Aspen",
                "text": "Aspen does not achieve her goals.",
                "fol": "\u00acp_15(Aspen)",
                "str_fol": "\u00acachieves_goals(Aspen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Aspen",
                    "text": "Aspen gets lucky.",
                    "fol": "p_1(Aspen)",
                    "str_fol": "gets_lucky(Aspen)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Aspen",
                    "text": "Aspen does not achieve her goals.",
                    "fol": "\u00acp_15(Aspen)",
                    "str_fol": "\u00acachieves_goals(Aspen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Aspen either works hard or gets lucky (but not both), then she achieves her goals.",
                    "fol": "(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)",
                    "str_fol": "(works_hard(Aspen) \u2295 gets_lucky(Aspen)) \u2192 achieves_goals(Aspen)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Aspen",
                "text": "Aspen works hard.",
                "fol": "p_11(Aspen)",
                "str_fol": "works_hard(Aspen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Aspen",
                    "text": "Aspen explores new things.",
                    "fol": "p_14(Aspen)",
                    "str_fol": "explores_new(Aspen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who takes risks or explores new things is adventurous.",
                    "fol": "\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))",
                    "str_fol": "\u2200x ((takes_risks(x) \u2228 explores_new(x)) \u2192 is_adventurous(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Aspen",
                "text": "Aspen is adventurous.",
                "fol": "p_12(Aspen)",
                "str_fol": "is_adventurous(Aspen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Aspen",
                    "text": "Aspen is adventurous.",
                    "fol": "p_12(Aspen)",
                    "str_fol": "is_adventurous(Aspen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Aspen is either adventurous or focused, but she cannot be both simultaneously.",
                    "fol": "p_12(Aspen) \u2295 p_10(Aspen)",
                    "str_fol": "is_adventurous(Aspen) \u2295 is_focused(Aspen)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Aspen",
                "text": "Aspen is not focused.",
                "fol": "\u00acp_10(Aspen)",
                "str_fol": "\u00acis_focused(Aspen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Aspen",
                    "text": "Aspen has talent.",
                    "fol": "p_0(Aspen)",
                    "str_fol": "has_talent(Aspen)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Aspen",
                    "text": "Aspen works hard.",
                    "fol": "p_11(Aspen)",
                    "str_fol": "works_hard(Aspen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Aspen is successful, then she either has talent or works hard, but not both.",
                    "fol": "p_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))",
                    "str_fol": "successful(Aspen) \u2192 (has_talent(Aspen) \u2295 works_hard(Aspen))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Aspen",
                "text": "Aspen is not successful.",
                "fol": "\u00acp_8(Aspen)",
                "str_fol": "\u00acsuccessful(Aspen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Aspen",
                    "text": "Aspen is not focused.",
                    "fol": "\u00acp_10(Aspen)",
                    "str_fol": "\u00acis_focused(Aspen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Aspen is either focused or determined, but she cannot be both simultaneously.",
                    "fol": "p_10(Aspen) \u2295 p_7(Aspen)",
                    "str_fol": "is_focused(Aspen) \u2295 determined(Aspen)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Aspen",
                "text": "Aspen is determined.",
                "fol": "p_7(Aspen)",
                "str_fol": "determined(Aspen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Aspen",
                    "text": "Aspen is determined.",
                    "fol": "p_7(Aspen)",
                    "str_fol": "determined(Aspen)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Aspen",
                    "text": "Aspen is not successful.",
                    "fol": "\u00acp_8(Aspen)",
                    "str_fol": "\u00acsuccessful(Aspen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Aspen is determined, then she is either successful or inspired, but not both.",
                    "fol": "p_7(Aspen) \u2192 (p_8(Aspen) \u2295 p_9(Aspen))",
                    "str_fol": "determined(Aspen) \u2192 (successful(Aspen) \u2295 inspired(Aspen))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Aspen",
                "text": "Aspen is inspired.",
                "fol": "p_9(Aspen)",
                "str_fol": "inspired(Aspen)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (-(p_16(x) <-> p_5(x)) -> p_6(x))).  [assumption].\n2 p_3(Aspen) -> -(p_14(Aspen) <-> p_4(Aspen)).  [assumption].\n3 p_16(Aspen) -> -(p_15(Aspen) <-> p_2(Aspen)).  [assumption].\n4 -(p_11(Aspen) <-> p_1(Aspen)) -> p_15(Aspen).  [assumption].\n5 (all x (p_13(x) | p_14(x) -> p_12(x))).  [assumption].\n6 -(p_12(Aspen) <-> p_10(Aspen)).  [assumption].\n7 p_8(Aspen) -> -(p_0(Aspen) <-> p_11(Aspen)).  [assumption].\n8 -(p_10(Aspen) <-> p_7(Aspen)).  [assumption].\n9 p_7(Aspen) -> -(p_8(Aspen) <-> p_9(Aspen)).  [assumption].\n10 p_9(Aspen).  [goal].\n11 p_16(x) | -p_5(x) | p_6(x).  [clausify(1)].\n12 p_5(Aspen).  [assumption].\n14 p_16(Aspen) | p_6(Aspen).  [resolve(11,b,12,a)].\n15 -p_6(Aspen).  [assumption].\n16 -p_3(Aspen) | p_14(Aspen) | p_4(Aspen).  [clausify(2)].\n17 p_3(Aspen).  [assumption].\n19 p_14(Aspen) | p_4(Aspen).  [resolve(16,a,17,a)].\n20 -p_4(Aspen).  [assumption].\n22 -p_16(Aspen) | -p_15(Aspen) | -p_2(Aspen).  [clausify(3)].\n23 p_2(Aspen).  [assumption].\n25 p_11(Aspen) | -p_1(Aspen) | p_15(Aspen).  [clausify(4)].\n26 p_1(Aspen).  [assumption].\n28 -p_8(Aspen) | -p_0(Aspen) | -p_11(Aspen).  [clausify(7)].\n29 p_0(Aspen).  [assumption].\n31 p_14(Aspen).  [resolve(19,b,20,a)].\n32 -p_14(x) | p_12(x).  [clausify(5)].\n33 -p_12(Aspen) | -p_10(Aspen).  [clausify(6)].\n35 p_12(Aspen).  [resolve(31,a,32,a)].\n37 p_10(Aspen) | p_7(Aspen).  [clausify(8)].\n38 -p_10(Aspen).  [resolve(35,a,33,a)].\n39 p_7(Aspen).  [resolve(38,a,37,a)].\n40 -p_7(Aspen) | p_8(Aspen) | p_9(Aspen).  [clausify(9)].\n42 p_8(Aspen) | p_9(Aspen).  [resolve(39,a,40,a)].\n43 -p_9(Aspen).  [deny(10)].\n45 -p_16(Aspen) | -p_15(Aspen).  [resolve(22,c,23,a)].\n46 p_16(Aspen).  [resolve(14,b,15,a)].\n47 -p_8(Aspen) | -p_11(Aspen).  [resolve(28,b,29,a)].\n48 p_11(Aspen) | p_15(Aspen).  [resolve(25,b,26,a)].\n49 -p_8(Aspen) | p_15(Aspen).  [resolve(47,b,48,a)].\n50 p_8(Aspen).  [resolve(42,b,43,a)].\n51 p_15(Aspen).  [resolve(49,a,50,a)].\n52 -p_15(Aspen).  [resolve(45,a,46,a)].\n53 $F.  [resolve(51,a,52,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_7(Aspen) \u2192 (p_8(Aspen) \u2295 p_9(Aspen))\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\n\u00acp_8(Aspen)\np_7(Aspen)",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen)",
                    "-p_6(Aspen)",
                    "p_3(Aspen)",
                    "-p_4(Aspen)",
                    "p_2(Aspen)",
                    "p_1(Aspen)",
                    "p_0(Aspen)",
                    "all x (-(p_16(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Aspen) -> (-(p_14(Aspen) <-> p_4(Aspen)))",
                    "p_16(Aspen) -> (-(p_15(Aspen) <-> p_2(Aspen)))",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen)",
                    "all x ((p_13(x) | p_14(x)) -> p_12(x))",
                    "-(p_12(Aspen) <-> p_10(Aspen))",
                    "p_8(Aspen) -> (-(p_0(Aspen) <-> p_11(Aspen)))",
                    "-(p_10(Aspen) <-> p_7(Aspen))",
                    "p_7(Aspen) -> (-(p_8(Aspen) <-> p_9(Aspen)))",
                    "p_16(Aspen)",
                    "-p_15(Aspen)",
                    "p_11(Aspen)",
                    "-p_8(Aspen)",
                    "p_7(Aspen)"
                ],
                "formulas(goals)": [
                    "p_9(Aspen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_16(Aspen)",
                    "\u00acp_15(Aspen)",
                    "p_11(Aspen)",
                    "\u00acp_8(Aspen)",
                    "p_7(Aspen)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x (((p_16(x) \u2295 p_5(x)) \u2192 p_6(x)))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\np_7(Aspen)\np_7(Aspen) \u2192 \u00acp_9(Aspen)",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen)",
                    "-p_6(Aspen)",
                    "p_3(Aspen)",
                    "-p_4(Aspen)",
                    "p_2(Aspen)",
                    "p_1(Aspen)",
                    "p_0(Aspen)",
                    "all x ((-(p_16(x) <-> p_5(x))) -> p_6(x))",
                    "p_3(Aspen) -> (-(p_14(Aspen) <-> p_4(Aspen)))",
                    "p_16(Aspen) -> (-(p_15(Aspen) <-> p_2(Aspen)))",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen)",
                    "all x ((p_13(x) | p_14(x)) -> p_12(x))",
                    "-(p_12(Aspen) <-> p_10(Aspen))",
                    "p_8(Aspen) -> (-(p_0(Aspen) <-> p_11(Aspen)))",
                    "-(p_10(Aspen) <-> p_7(Aspen))",
                    "p_16(Aspen)",
                    "-p_15(Aspen)",
                    "p_11(Aspen)",
                    "p_7(Aspen)",
                    "p_7(Aspen) -> -p_9(Aspen)"
                ],
                "formulas(goals)": [
                    "-p_9(Aspen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Aspen)"
                ],
                "removed_rules": [
                    "p_7(Aspen) \u2192 (p_8(Aspen) \u2295 p_9(Aspen))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Aspen) \u2192 \u00acp_9(Aspen)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x (((p_16(x) \u2295 p_5(x)) \u2192 p_6(x)))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\np_7(Aspen)\np_7(Aspen) \u2192 \u00acp_9(Aspen)\np_14(Aspen)\np_12(Aspen)\n\u00acp_10(Aspen)\n(p_13(Aspen) \u2228 p_14(Aspen)) \u2192 p_12(Aspen)",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen).",
                    "-p_6(Aspen).",
                    "p_3(Aspen).",
                    "-p_4(Aspen).",
                    "p_2(Aspen).",
                    "p_1(Aspen).",
                    "p_0(Aspen).",
                    "(all x ((-(p_16(x) <-> p_5(x))) -> p_6(x))).",
                    "(p_3(Aspen) -> (-(p_14(Aspen) <-> p_4(Aspen)))).",
                    "(p_16(Aspen) -> (-(p_15(Aspen) <-> p_2(Aspen)))).",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen).",
                    "(all x ((p_13(x) | p_14(x)) -> p_12(x))).",
                    "(-(p_12(Aspen) <-> p_10(Aspen))).",
                    "(p_8(Aspen) -> (-(p_0(Aspen) <-> p_11(Aspen)))).",
                    "(-(p_10(Aspen) <-> p_7(Aspen))).",
                    "p_16(Aspen).",
                    "-p_15(Aspen).",
                    "p_11(Aspen).",
                    "p_7(Aspen).",
                    "(p_7(Aspen) -> -p_9(Aspen)).",
                    "p_14(Aspen).",
                    "p_12(Aspen).",
                    "-p_10(Aspen).",
                    "((p_13(Aspen) | p_14(Aspen)) -> p_12(Aspen))."
                ],
                "formulas(goals)": [
                    "-p_9(Aspen)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Aspen)",
                    "p_12(Aspen)",
                    "\u00acp_10(Aspen)"
                ],
                "added_rules": [
                    "(p_13(Aspen) \u2228 p_14(Aspen)) \u2192 p_12(Aspen)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x (((p_16(x) \u2295 p_5(x)) \u2192 p_6(x)))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\np_7(Aspen)\np_7(Aspen) \u2192 \u00acp_9(Aspen)\np_14(Aspen)\np_12(Aspen)\n\u00acp_10(Aspen)\n(p_13(Aspen) \u2228 p_14(Aspen)) \u2192 p_12(Aspen)\n\u00ac(p_16(Aspen) \u2295 p_5(Aspen))\n\u00ac(p_11(Aspen) \u2295 p_1(Aspen))",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen).",
                    "-p_6(Aspen).",
                    "p_3(Aspen).",
                    "-p_4(Aspen).",
                    "p_2(Aspen).",
                    "p_1(Aspen).",
                    "p_0(Aspen).",
                    "all x (-(p_16(x) <-> p_5(x)) -> p_6(x)).",
                    "p_3(Aspen) -> (-(p_14(Aspen) <-> p_4(Aspen))).",
                    "p_16(Aspen) -> (-(p_15(Aspen) <-> p_2(Aspen))).",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen).",
                    "all x ((p_13(x) | p_14(x)) -> p_12(x)).",
                    "-(p_12(Aspen) <-> p_10(Aspen)).",
                    "p_8(Aspen) -> (-(p_0(Aspen) <-> p_11(Aspen))).",
                    "-(p_10(Aspen) <-> p_7(Aspen)).",
                    "p_16(Aspen).",
                    "-p_15(Aspen).",
                    "p_11(Aspen).",
                    "p_7(Aspen).",
                    "p_7(Aspen) -> -p_9(Aspen).",
                    "p_14(Aspen).",
                    "p_12(Aspen).",
                    "-p_10(Aspen).",
                    "(p_13(Aspen) | p_14(Aspen)) -> p_12(Aspen).",
                    "-(-(p_16(Aspen) <-> p_5(Aspen))).",
                    "-(-(p_11(Aspen) <-> p_1(Aspen)))."
                ],
                "formulas(goals)": [
                    "-p_9(Aspen)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_16(Aspen) \u2295 p_5(Aspen))",
                    "\u00ac(p_11(Aspen) \u2295 p_1(Aspen))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\np_7(Aspen)\np_7(Aspen) \u2192 \u00acp_9(Aspen)\np_14(Aspen)\np_12(Aspen)\n\u00acp_10(Aspen)\n(p_13(Aspen) \u2228 p_14(Aspen)) \u2192 p_12(Aspen)\n\u00ac(p_16(Aspen) \u2295 p_5(Aspen))\n\u00ac(p_11(Aspen) \u2295 p_1(Aspen))\np_14(Aspen) \u2192 p_12(Aspen)\n\u00acp_6(Aspen) \u2192 (p_6(Aspen) \u2192 p_15(Aspen))",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen)",
                    "-p_6(Aspen)",
                    "p_3(Aspen)",
                    "-p_4(Aspen)",
                    "p_2(Aspen)",
                    "p_1(Aspen)",
                    "p_0(Aspen)",
                    "all x (-(p_16(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Aspen) -> (-(p_14(Aspen) <-> p_4(Aspen)))",
                    "p_16(Aspen) -> (-(p_15(Aspen) <-> p_2(Aspen)))",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen)",
                    "all x ((p_13(x) | p_14(x)) -> p_12(x))",
                    "-(p_12(Aspen) <-> p_10(Aspen))",
                    "p_8(Aspen) -> (-(p_0(Aspen) <-> p_11(Aspen)))",
                    "-(p_10(Aspen) <-> p_7(Aspen))",
                    "p_16(Aspen)",
                    "-p_15(Aspen)",
                    "p_11(Aspen)",
                    "p_7(Aspen)",
                    "p_7(Aspen) -> -p_9(Aspen)",
                    "p_14(Aspen)",
                    "p_12(Aspen)",
                    "-p_10(Aspen)",
                    "(p_13(Aspen) | p_14(Aspen)) -> p_12(Aspen)",
                    "-(-(p_16(Aspen) <-> p_5(Aspen)))",
                    "-(-(p_11(Aspen) <-> p_1(Aspen)))",
                    "p_14(Aspen) -> p_12(Aspen)",
                    "-p_6(Aspen) -> (p_6(Aspen) -> p_15(Aspen))"
                ],
                "formulas(goals)": [
                    "-p_9(Aspen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_14(Aspen) \u2192 p_12(Aspen)",
                    "\u00acp_6(Aspen) \u2192 (p_6(Aspen) \u2192 p_15(Aspen))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\np_7(Aspen)\n\u00acp_7(Aspen) \u2228 \u00acp_9(Aspen)\np_14(Aspen)\np_12(Aspen)\n\u00acp_10(Aspen)\n(p_13(Aspen) \u2228 p_14(Aspen)) \u2192 p_12(Aspen)\n\u00ac(p_16(Aspen) \u2295 p_5(Aspen))\n\u00ac(p_11(Aspen) \u2295 p_1(Aspen))\np_14(Aspen) \u2192 p_12(Aspen)\n\u00acp_6(Aspen) \u2192 (p_6(Aspen) \u2192 p_15(Aspen))\n\u00acp_9(Aspen)\np_16(Aspen) \u2227 p_5(Aspen)\np_11(Aspen) \u2227 p_1(Aspen)",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen)",
                    "-p_6(Aspen)",
                    "p_3(Aspen)",
                    "-p_4(Aspen)",
                    "p_2(Aspen)",
                    "p_1(Aspen)",
                    "p_0(Aspen)",
                    "all x (-(p_16(x) <-> p_5(x)) -> p_6(x))",
                    "p_3(Aspen) -> (-(p_14(Aspen) <-> p_4(Aspen)))",
                    "p_16(Aspen) -> (-(p_15(Aspen) <-> p_2(Aspen)))",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen)",
                    "all x ((p_13(x) | p_14(x)) -> p_12(x))",
                    "-(p_12(Aspen) <-> p_10(Aspen))",
                    "p_8(Aspen) -> (-(p_0(Aspen) <-> p_11(Aspen)))",
                    "-(p_10(Aspen) <-> p_7(Aspen))",
                    "p_16(Aspen)",
                    "-p_15(Aspen)",
                    "p_11(Aspen)",
                    "p_7(Aspen)",
                    "(-p_7(Aspen) | -p_9(Aspen))",
                    "p_14(Aspen)",
                    "p_12(Aspen)",
                    "-p_10(Aspen)",
                    "(p_13(Aspen) | p_14(Aspen)) -> p_12(Aspen)",
                    "-(-(p_16(Aspen) <-> p_5(Aspen)))",
                    "-(-(p_11(Aspen) <-> p_1(Aspen)))",
                    "p_14(Aspen) -> p_12(Aspen)",
                    "-p_6(Aspen) -> (p_6(Aspen) -> p_15(Aspen))",
                    "-p_9(Aspen)",
                    "(p_16(Aspen) & p_5(Aspen))",
                    "(p_11(Aspen) & p_1(Aspen))"
                ],
                "formulas(goals)": [
                    "-p_9(Aspen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_9(Aspen)",
                    "p_16(Aspen) \u2227 p_5(Aspen)",
                    "p_11(Aspen) \u2227 p_1(Aspen)"
                ],
                "added_rules": [
                    "\u00acp_7(Aspen) \u2228 \u00acp_9(Aspen)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aspen)\n\u00acp_6(Aspen)\np_3(Aspen)\n\u00acp_4(Aspen)\np_2(Aspen)\np_1(Aspen)\np_0(Aspen)\n\u2200x ((p_16(x) \u2295 p_5(x)) \u2192 p_6(x))\np_3(Aspen) \u2192 (p_14(Aspen) \u2295 p_4(Aspen))\np_16(Aspen) \u2192 (p_15(Aspen) \u2295 p_2(Aspen))\n(p_11(Aspen) \u2295 p_1(Aspen)) \u2192 p_15(Aspen)\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_12(x))\np_12(Aspen) \u2295 p_10(Aspen)\np_8(Aspen) \u2192 (p_0(Aspen) \u2295 p_11(Aspen))\np_10(Aspen) \u2295 p_7(Aspen)\np_16(Aspen)\n\u00acp_15(Aspen)\np_11(Aspen)\np_7(Aspen)\n\u00acp_7(Aspen) \u2228 \u00acp_9(Aspen)\np_14(Aspen)\np_12(Aspen)\n\u00acp_10(Aspen)\n(p_13(Aspen) \u2228 p_14(Aspen)) \u2192 p_12(Aspen)\n\u00ac(p_16(Aspen) \u2295 p_5(Aspen))\n\u00ac(p_11(Aspen) \u2295 p_1(Aspen))\np_14(Aspen) \u2192 p_12(Aspen)\n\u00acp_6(Aspen) \u2192 (p_6(Aspen) \u2192 p_15(Aspen))\n\u00acp_9(Aspen)\np_16(Aspen) \u2227 p_5(Aspen)\np_11(Aspen) \u2227 p_1(Aspen)\n\u00ac(\u00acp_16(Aspen) \u2228 \u00acp_5(Aspen))\n\u00ac(\u00acp_11(Aspen) \u2228 \u00acp_1(Aspen))\np_7(Aspen) \u2227 \u00acp_9(Aspen)\np_14(Aspen) \u2227 p_12(Aspen)\np_16(Aspen) \u2228 \u00acp_16(Aspen)",
            "Initial Goal": "p_9(Aspen)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aspen)",
                    "-p_6(Aspen)",
                    "p_3(Aspen)",
                    "-p_4(Aspen)",
                    "p_2(Aspen)",
                    "p_1(Aspen)",
                    "p_0(Aspen)",
                    "all x ((-(p_16(x) <-> p_5(x))) -> p_6(x))",
                    "(p_3(Aspen)) -> (-(p_14(Aspen) <-> p_4(Aspen)))",
                    "(p_16(Aspen)) -> (-(p_15(Aspen) <-> p_2(Aspen)))",
                    "(-(p_11(Aspen) <-> p_1(Aspen))) -> p_15(Aspen)",
                    "all x ((p_13(x) | p_14(x)) -> p_12(x))",
                    "-(p_12(Aspen) <-> p_10(Aspen))",
                    "(p_8(Aspen)) -> (-(p_0(Aspen) <-> p_11(Aspen)))",
                    "-(p_10(Aspen) <-> p_7(Aspen))",
                    "p_16(Aspen)",
                    "-p_15(Aspen)",
                    "p_11(Aspen)",
                    "p_7(Aspen)",
                    "-p_7(Aspen) | -p_9(Aspen)",
                    "p_14(Aspen)",
                    "p_12(Aspen)",
                    "-p_10(Aspen)",
                    "(p_13(Aspen) | p_14(Aspen)) -> p_12(Aspen)",
                    "-(-(p_16(Aspen) <-> p_5(Aspen)))",
                    "-(-(p_11(Aspen) <-> p_1(Aspen)))",
                    "(p_14(Aspen)) -> p_12(Aspen)",
                    "(-p_6(Aspen)) -> ((p_6(Aspen)) -> p_15(Aspen))",
                    "-p_9(Aspen)",
                    "(p_16(Aspen)) & (p_5(Aspen))",
                    "(p_11(Aspen)) & (p_1(Aspen))",
                    "-(-p_16(Aspen) | -p_5(Aspen))",
                    "-(-p_11(Aspen) | -p_1(Aspen))",
                    "(p_7(Aspen)) & (-p_9(Aspen))",
                    "(p_14(Aspen)) & (p_12(Aspen))",
                    "(p_16(Aspen)) | (-p_16(Aspen))"
                ],
                "formulas(goals)": [
                    "-p_9(Aspen)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(\u00acp_16(Aspen) \u2228 \u00acp_5(Aspen))",
                    "\u00ac(\u00acp_11(Aspen) \u2228 \u00acp_1(Aspen))",
                    "p_7(Aspen) \u2227 \u00acp_9(Aspen)",
                    "p_14(Aspen) \u2227 p_12(Aspen)",
                    "p_16(Aspen) \u2228 \u00acp_16(Aspen)"
                ],
                "added_rules": []
            }
        }
    ]
}