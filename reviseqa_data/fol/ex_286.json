{
    "background_story": "Bo, a charismatic community leader, was the catalyst for change in the once-neglected neighborhood of Oakdale. With a passion for social justice, he organized rallies, workshops, and clean-up initiatives that brought the community together. His infectious energy and vision inspired residents to take pride in their homes and streets. Bo's efforts sparked a wave of volunteerism, leading to the establishment of a community garden, a youth center, and a cooperative marketplace. As Oakdale began to flourish, Bo continued to push for more, advocating for policy changes and securing funding for local projects. His role as a catalyst transformed Oakdale into a vibrant, thriving hub of activity, earning Bo recognition as a champion of community development and a symbol of what collective action can achieve.",
    "predicates": [
        {
            "id": 0,
            "name": "is_charismatic"
        },
        {
            "id": 1,
            "name": "has_vision"
        },
        {
            "id": 2,
            "name": "makes_difference"
        },
        {
            "id": 3,
            "name": "develops_leaders"
        },
        {
            "id": 4,
            "name": "builds_trust"
        },
        {
            "id": 5,
            "name": "cares_deeply"
        },
        {
            "id": 6,
            "name": "organize_events"
        },
        {
            "id": 7,
            "name": "donate_time"
        },
        {
            "id": 8,
            "name": "contribute_to_community"
        },
        {
            "id": 9,
            "name": "create_positive_change"
        },
        {
            "id": 10,
            "name": "leads_initiatives"
        },
        {
            "id": 11,
            "name": "inspires_others"
        },
        {
            "id": 12,
            "name": "empowers_people"
        },
        {
            "id": 13,
            "name": "fosters_collaboration"
        },
        {
            "id": 14,
            "name": "mentors_youth"
        },
        {
            "id": 15,
            "name": "supports_families"
        },
        {
            "id": 16,
            "name": "helps_neighbors"
        },
        {
            "id": 17,
            "name": "volunteers_time"
        },
        {
            "id": 18,
            "name": "takes_action"
        },
        {
            "id": 19,
            "name": "unites_neighbors"
        },
        {
            "id": 20,
            "name": "listens_actively"
        },
        {
            "id": 21,
            "name": "shares_ideas"
        },
        {
            "id": 22,
            "name": "serves_community"
        },
        {
            "id": 23,
            "name": "teaches_skills"
        },
        {
            "id": 24,
            "name": "aids_seniors"
        },
        {
            "id": 25,
            "name": "shares_knowledge"
        }
    ],
    "subject_name": "Bo",
    "subject_category": "human",
    "keyword": "catalyst",
    "all_facts": [
        {
            "id": 0,
            "subject": "Bo",
            "text": "Bo is charismatic.",
            "fol": "p_0(Bo)",
            "str_fol": "is_charismatic(Bo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Bo",
            "text": "Bo has a vision.",
            "fol": "p_1(Bo)",
            "str_fol": "has_vision(Bo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Bo",
            "text": "Bo does not make a difference.",
            "fol": "\u00acp_2(Bo)",
            "str_fol": "\u00acmakes_difference(Bo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Bo",
            "text": "Bo does not develop leaders.",
            "fol": "\u00acp_3(Bo)",
            "str_fol": "\u00acdevelops_leaders(Bo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Bo",
            "text": "Bo does not build trust.",
            "fol": "\u00acp_4(Bo)",
            "str_fol": "\u00acbuilds_trust(Bo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Bo",
            "text": "Bo does not care deeply.",
            "fol": "\u00acp_5(Bo)",
            "str_fol": "\u00accares_deeply(Bo)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Bo",
            "text": "Bo organizes events.",
            "fol": "p_6(Bo)",
            "str_fol": "organize_events(Bo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Bo",
            "text": "Bo donates his time.",
            "fol": "p_7(Bo)",
            "str_fol": "donate_time(Bo)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Bo",
            "text": "Bo does not support families.",
            "fol": "\u00acp_15(Bo)",
            "str_fol": "\u00acsupports_families(Bo)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Bo",
            "text": "Bo does not mentor youth.",
            "fol": "\u00acp_14(Bo)",
            "str_fol": "\u00acmentors_youth(Bo)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Bo",
            "text": "Bo does not inspire others.",
            "fol": "\u00acp_11(Bo)",
            "str_fol": "\u00acinspires_others(Bo)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Bo",
            "text": "Bo fosters collaboration.",
            "fol": "p_13(Bo)",
            "str_fol": "fosters_collaboration(Bo)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Bo",
            "text": "Bo does not empower people.",
            "fol": "\u00acp_12(Bo)",
            "str_fol": "\u00acempowers_people(Bo)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Bo",
            "text": "Bo leads initiatives.",
            "fol": "p_10(Bo)",
            "str_fol": "leads_initiatives(Bo)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Bo",
            "text": "Bo does not contribute to his community.",
            "fol": "\u00acp_8(Bo)",
            "str_fol": "\u00accontribute_to_community(Bo)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Bo",
            "text": "Bo creates positive change.",
            "fol": "p_9(Bo)",
            "str_fol": "create_positive_change(Bo)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Bo",
            "text": "Bo organizes events.",
            "fol": "p_6(Bo)",
            "str_fol": "organize_events(Bo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Bo",
            "text": "Bo donates his time.",
            "fol": "p_7(Bo)",
            "str_fol": "donate_time(Bo)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bo",
            "text": "Bo does not care deeply.",
            "fol": "\u00acp_5(Bo)",
            "str_fol": "\u00accares_deeply(Bo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Bo",
            "text": "Bo does not develop leaders.",
            "fol": "\u00acp_3(Bo)",
            "str_fol": "\u00acdevelops_leaders(Bo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bo",
            "text": "Bo does not make a difference.",
            "fol": "\u00acp_2(Bo)",
            "str_fol": "\u00acmakes_difference(Bo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Bo",
            "text": "Bo does not build trust.",
            "fol": "\u00acp_4(Bo)",
            "str_fol": "\u00acbuilds_trust(Bo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Bo",
            "text": "Bo is charismatic.",
            "fol": "p_0(Bo)",
            "str_fol": "is_charismatic(Bo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Bo",
            "text": "Bo has a vision.",
            "fol": "p_1(Bo)",
            "str_fol": "has_vision(Bo)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Bo organizes events, then he either donates his time or helps his neighbors.",
            "fol": "p_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))",
            "str_fol": "organize_events(Bo) \u2192 (donate_time(Bo) \u2228 helps_neighbors(Bo))"
        },
        {
            "id": 7,
            "text": "If someone supports families, then they care deeply and help neighbors.",
            "fol": "\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))",
            "str_fol": "\u2200x (supports_families(x) \u2192 (cares_deeply(x) \u2227 helps_neighbors(x)))"
        },
        {
            "id": 6,
            "text": "Anyone who mentors youth either supports families or develops leaders.",
            "fol": "\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))",
            "str_fol": "\u2200x (mentors_youth(x) \u2192 (supports_families(x) \u2228 develops_leaders(x)))"
        },
        {
            "id": 5,
            "text": "If Bo either mentors youth or inspires others (but not both), then he makes a difference.",
            "fol": "(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)",
            "str_fol": "(mentors_youth(Bo) \u2295 inspires_others(Bo)) \u2192 makes_difference(Bo)"
        },
        {
            "id": 4,
            "text": "Bo either builds trust or fosters collaboration.",
            "fol": "p_4(Bo) \u2228 p_13(Bo)",
            "str_fol": "builds_trust(Bo) \u2228 fosters_collaboration(Bo)"
        },
        {
            "id": 3,
            "text": "If Bo is charismatic, then he either fosters collaboration or empowers people, but not both.",
            "fol": "p_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))",
            "str_fol": "is_charismatic(Bo) \u2192 (fosters_collaboration(Bo) \u2295 empowers_people(Bo))"
        },
        {
            "id": 2,
            "text": "If Bo has a vision, then he either empowers people or leads initiatives, but not both.",
            "fol": "p_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))",
            "str_fol": "has_vision(Bo) \u2192 (empowers_people(Bo) \u2295 leads_initiatives(Bo))"
        },
        {
            "id": 1,
            "text": "If someone contributes to their community and leads initiatives, then they inspire others.",
            "fol": "\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((contribute_to_community(x) \u2227 leads_initiatives(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 0,
            "text": "For all humans, if they contribute to their community, then they create positive change.",
            "fol": "\u2200x (p_8(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (contribute_to_community(x) \u2192 create_positive_change(x))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Bo",
            "text": "Bo organizes events.",
            "fol": "p_6(Bo)",
            "str_fol": "organize_events(Bo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Bo",
            "text": "Bo donates his time.",
            "fol": "p_7(Bo)",
            "str_fol": "donate_time(Bo)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bo",
            "text": "Bo does not care deeply.",
            "fol": "\u00acp_5(Bo)",
            "str_fol": "\u00accares_deeply(Bo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Bo",
            "text": "Bo does not develop leaders.",
            "fol": "\u00acp_3(Bo)",
            "str_fol": "\u00acdevelops_leaders(Bo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bo",
            "text": "Bo does not make a difference.",
            "fol": "\u00acp_2(Bo)",
            "str_fol": "\u00acmakes_difference(Bo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Bo",
            "text": "Bo does not build trust.",
            "fol": "\u00acp_4(Bo)",
            "str_fol": "\u00acbuilds_trust(Bo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Bo",
            "text": "Bo is charismatic.",
            "fol": "p_0(Bo)",
            "str_fol": "is_charismatic(Bo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Bo",
            "text": "Bo has a vision.",
            "fol": "p_1(Bo)",
            "str_fol": "has_vision(Bo)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Bo organizes events, then he either donates his time or helps his neighbors.",
            "fol": "p_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))",
            "str_fol": "organize_events(Bo) \u2192 (donate_time(Bo) \u2228 helps_neighbors(Bo))"
        },
        {
            "id": 7,
            "text": "If someone supports families, then they care deeply and help neighbors.",
            "fol": "\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))",
            "str_fol": "\u2200x (supports_families(x) \u2192 (cares_deeply(x) \u2227 helps_neighbors(x)))"
        },
        {
            "id": 6,
            "text": "Anyone who mentors youth either supports families or develops leaders.",
            "fol": "\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))",
            "str_fol": "\u2200x (mentors_youth(x) \u2192 (supports_families(x) \u2228 develops_leaders(x)))"
        },
        {
            "id": 5,
            "text": "If Bo either mentors youth or inspires others (but not both), then he makes a difference.",
            "fol": "(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)",
            "str_fol": "(mentors_youth(Bo) \u2295 inspires_others(Bo)) \u2192 makes_difference(Bo)"
        },
        {
            "id": 4,
            "text": "Bo either builds trust or fosters collaboration.",
            "fol": "p_4(Bo) \u2228 p_13(Bo)",
            "str_fol": "builds_trust(Bo) \u2228 fosters_collaboration(Bo)"
        },
        {
            "id": 3,
            "text": "If Bo is charismatic, then he either fosters collaboration or empowers people, but not both.",
            "fol": "p_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))",
            "str_fol": "is_charismatic(Bo) \u2192 (fosters_collaboration(Bo) \u2295 empowers_people(Bo))"
        },
        {
            "id": 2,
            "text": "If Bo has a vision, then he either empowers people or leads initiatives, but not both.",
            "fol": "p_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))",
            "str_fol": "has_vision(Bo) \u2192 (empowers_people(Bo) \u2295 leads_initiatives(Bo))"
        },
        {
            "id": 1,
            "text": "If someone contributes to their community and leads initiatives, then they inspire others.",
            "fol": "\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((contribute_to_community(x) \u2227 leads_initiatives(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 0,
            "text": "For all humans, if they contribute to their community, then they create positive change.",
            "fol": "\u2200x (p_8(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (contribute_to_community(x) \u2192 create_positive_change(x))"
        }
    ],
    "context_fol": "p_6(Bo)\np_7(Bo)\n\u00acp_5(Bo)\n\u00acp_3(Bo)\n\u00acp_2(Bo)\n\u00acp_4(Bo)\np_0(Bo)\np_1(Bo)\np_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))\n\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))\n(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)\np_4(Bo) \u2228 p_13(Bo)\np_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))\np_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))\n\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))",
    "conclusion": {
        "id": 15,
        "subject": "Bo",
        "text": "Bo creates positive change.",
        "fol": "p_9(Bo)",
        "str_fol": "create_positive_change(Bo)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_9(Bo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Bo",
                    "text": "Bo organizes events.",
                    "fol": "p_6(Bo)",
                    "str_fol": "organize_events(Bo)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Bo",
                    "text": "Bo donates his time.",
                    "fol": "p_7(Bo)",
                    "str_fol": "donate_time(Bo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Bo organizes events, then he either donates his time or helps his neighbors.",
                    "fol": "p_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))",
                    "str_fol": "organize_events(Bo) \u2192 (donate_time(Bo) \u2228 helps_neighbors(Bo))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Bo",
                    "text": "Bo does not care deeply.",
                    "fol": "\u00acp_5(Bo)",
                    "str_fol": "\u00accares_deeply(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If someone supports families, then they care deeply and help neighbors.",
                    "fol": "\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))",
                    "str_fol": "\u2200x (supports_families(x) \u2192 (cares_deeply(x) \u2227 helps_neighbors(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Bo",
                "text": "Bo does not support families.",
                "fol": "\u00acp_15(Bo)",
                "str_fol": "\u00acsupports_families(Bo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Bo",
                    "text": "Bo does not support families.",
                    "fol": "\u00acp_15(Bo)",
                    "str_fol": "\u00acsupports_families(Bo)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Bo",
                    "text": "Bo does not develop leaders.",
                    "fol": "\u00acp_3(Bo)",
                    "str_fol": "\u00acdevelops_leaders(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who mentors youth either supports families or develops leaders.",
                    "fol": "\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))",
                    "str_fol": "\u2200x (mentors_youth(x) \u2192 (supports_families(x) \u2228 develops_leaders(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Bo",
                "text": "Bo does not mentor youth.",
                "fol": "\u00acp_14(Bo)",
                "str_fol": "\u00acmentors_youth(Bo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Bo",
                    "text": "Bo does not mentor youth.",
                    "fol": "\u00acp_14(Bo)",
                    "str_fol": "\u00acmentors_youth(Bo)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Bo",
                    "text": "Bo does not make a difference.",
                    "fol": "\u00acp_2(Bo)",
                    "str_fol": "\u00acmakes_difference(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Bo either mentors youth or inspires others (but not both), then he makes a difference.",
                    "fol": "(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)",
                    "str_fol": "(mentors_youth(Bo) \u2295 inspires_others(Bo)) \u2192 makes_difference(Bo)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Bo",
                "text": "Bo does not inspire others.",
                "fol": "\u00acp_11(Bo)",
                "str_fol": "\u00acinspires_others(Bo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Bo",
                    "text": "Bo does not build trust.",
                    "fol": "\u00acp_4(Bo)",
                    "str_fol": "\u00acbuilds_trust(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Bo either builds trust or fosters collaboration.",
                    "fol": "p_4(Bo) \u2228 p_13(Bo)",
                    "str_fol": "builds_trust(Bo) \u2228 fosters_collaboration(Bo)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Bo",
                "text": "Bo fosters collaboration.",
                "fol": "p_13(Bo)",
                "str_fol": "fosters_collaboration(Bo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Bo",
                    "text": "Bo is charismatic.",
                    "fol": "p_0(Bo)",
                    "str_fol": "is_charismatic(Bo)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Bo",
                    "text": "Bo fosters collaboration.",
                    "fol": "p_13(Bo)",
                    "str_fol": "fosters_collaboration(Bo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Bo is charismatic, then he either fosters collaboration or empowers people, but not both.",
                    "fol": "p_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))",
                    "str_fol": "is_charismatic(Bo) \u2192 (fosters_collaboration(Bo) \u2295 empowers_people(Bo))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Bo",
                "text": "Bo does not empower people.",
                "fol": "\u00acp_12(Bo)",
                "str_fol": "\u00acempowers_people(Bo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Bo",
                    "text": "Bo has a vision.",
                    "fol": "p_1(Bo)",
                    "str_fol": "has_vision(Bo)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Bo",
                    "text": "Bo does not empower people.",
                    "fol": "\u00acp_12(Bo)",
                    "str_fol": "\u00acempowers_people(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Bo has a vision, then he either empowers people or leads initiatives, but not both.",
                    "fol": "p_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))",
                    "str_fol": "has_vision(Bo) \u2192 (empowers_people(Bo) \u2295 leads_initiatives(Bo))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Bo",
                "text": "Bo leads initiatives.",
                "fol": "p_10(Bo)",
                "str_fol": "leads_initiatives(Bo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Bo",
                    "text": "Bo leads initiatives.",
                    "fol": "p_10(Bo)",
                    "str_fol": "leads_initiatives(Bo)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Bo",
                    "text": "Bo does not inspire others.",
                    "fol": "\u00acp_11(Bo)",
                    "str_fol": "\u00acinspires_others(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone contributes to their community and leads initiatives, then they inspire others.",
                    "fol": "\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((contribute_to_community(x) \u2227 leads_initiatives(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Bo",
                "text": "Bo does not contribute to his community.",
                "fol": "\u00acp_8(Bo)",
                "str_fol": "\u00accontribute_to_community(Bo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Bo",
                    "text": "Bo does not contribute to his community.",
                    "fol": "\u00acp_8(Bo)",
                    "str_fol": "\u00accontribute_to_community(Bo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they contribute to their community, then they create positive change.",
                    "fol": "\u2200x (p_8(x) \u2192 p_9(x))",
                    "str_fol": "\u2200x (contribute_to_community(x) \u2192 create_positive_change(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_6(Bo)\np_7(Bo)\n\u00acp_5(Bo)\n\u00acp_3(Bo)\n\u00acp_2(Bo)\n\u00acp_4(Bo)\np_0(Bo)\np_1(Bo)\np_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))\n\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))\n(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)\np_4(Bo) \u2228 p_13(Bo)\np_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))\np_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))\n\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))",
            "Initial Goal": "p_9(Bo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Bo)",
                    "p_7(Bo)",
                    "-p_5(Bo)",
                    "-p_3(Bo)",
                    "-p_2(Bo)",
                    "-p_4(Bo)",
                    "p_0(Bo)",
                    "p_1(Bo)",
                    "p_6(Bo) -> (p_7(Bo) | p_16(Bo))",
                    "all x (p_15(x) -> (p_5(x) & p_16(x)))",
                    "all x (p_14(x) -> (p_15(x) | p_3(x)))",
                    "(-(p_14(Bo) <-> p_11(Bo))) -> p_2(Bo)",
                    "p_4(Bo) | p_13(Bo)",
                    "p_0(Bo) -> (-(p_13(Bo) <-> p_12(Bo)))",
                    "p_1(Bo) -> (-(p_12(Bo) <-> p_10(Bo)))",
                    "all x ((p_8(x) & p_10(x) & p_14(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "p_6(Bo) & p_7(Bo) -> p_8(Bo)"
                ],
                "formulas(goals)": [
                    "p_9(Bo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_8(x) \u2227 p_10(x) \u2227 p_14(x)) \u2192 p_11(x))",
                    "p_6(Bo) \u2227 p_7(Bo) \u2192 p_8(Bo)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Bo)\np_7(Bo)\n\u00acp_5(Bo)\n\u00acp_3(Bo)\n\u00acp_2(Bo)\n\u00acp_4(Bo)\np_0(Bo)\np_1(Bo)\np_8(Bo)\np_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))\n\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))\n(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)\np_4(Bo) \u2228 p_13(Bo)\np_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))\np_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))\n\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_9(x) \u2192 p_8(x))",
            "Initial Goal": "p_9(Bo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Bo).",
                    "p_7(Bo).",
                    "-p_5(Bo).",
                    "-p_3(Bo).",
                    "-p_2(Bo).",
                    "-p_4(Bo).",
                    "p_0(Bo).",
                    "p_1(Bo).",
                    "p_8(Bo).",
                    "p_6(Bo) -> (p_7(Bo) | p_16(Bo)).",
                    "all x (p_15(x) -> (p_5(x) & p_16(x))).",
                    "all x (p_14(x) -> (p_15(x) | p_3(x))).",
                    "(-(p_14(Bo) <-> p_11(Bo))) -> p_2(Bo).",
                    "p_4(Bo) | p_13(Bo).",
                    "p_0(Bo) -> (-(p_13(Bo) <-> p_12(Bo))).",
                    "p_1(Bo) -> (-(p_12(Bo) <-> p_10(Bo))).",
                    "all x ((p_8(x) & p_10(x)) -> p_11(x)).",
                    "all x (p_8(x) -> p_9(x)).",
                    "all x (p_9(x) -> p_8(x))."
                ],
                "formulas(goals)": [
                    "p_9(Bo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Bo)"
                ],
                "added_rules": [
                    "\u2200x (p_9(x) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Bo)\np_7(Bo)\n\u00acp_5(Bo)\n\u00acp_3(Bo)\n\u00acp_2(Bo)\n\u00acp_4(Bo)\np_0(Bo)\np_1(Bo)\np_8(Bo)\np_6(Bo) \u2192 (p_7(Bo) \u2228 p_16(Bo))\n\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x) \u2228 p_9(x)))\n(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)\np_4(Bo) \u2228 p_13(Bo)\np_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))\np_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))\n\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_9(x) \u2192 p_8(x))",
            "Initial Goal": "p_9(Bo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Bo)",
                    "p_7(Bo)",
                    "-p_5(Bo)",
                    "-p_3(Bo)",
                    "-p_2(Bo)",
                    "-p_4(Bo)",
                    "p_0(Bo)",
                    "p_1(Bo)",
                    "p_8(Bo)",
                    "p_6(Bo) -> (p_7(Bo) | p_16(Bo))",
                    "all x (p_15(x) -> (p_5(x) & p_16(x)))",
                    "all x (p_14(x) -> (p_15(x) | p_3(x) | p_9(x)))",
                    "(-(p_14(Bo) <-> p_11(Bo))) -> p_2(Bo)",
                    "p_4(Bo) | p_13(Bo)",
                    "p_0(Bo) -> (-(p_13(Bo) <-> p_12(Bo)))",
                    "p_1(Bo) -> (-(p_12(Bo) <-> p_10(Bo)))",
                    "all x ((p_8(x) & p_10(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "all x (p_9(x) -> p_8(x))"
                ],
                "formulas(goals)": [
                    "p_9(Bo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x) \u2228 p_9(x)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Bo)\np_7(Bo)\n\u00acp_5(Bo)\n\u00acp_3(Bo)\n\u00acp_2(Bo)\n\u00acp_4(Bo)\np_0(Bo)\np_1(Bo)\np_8(Bo)\np_9(Bo) \u2228 \u00acp_9(Bo)\n\u00acp_6(Bo) \u2228 p_7(Bo) \u2228 p_16(Bo)\n\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x) \u2228 p_9(x)))\n(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)\np_4(Bo) \u2228 p_13(Bo)\np_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))\np_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))\n\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_9(x) \u2192 p_8(x))\n\u2200x (\u00acp_9(x) \u2192 \u00acp_8(x))",
            "Initial Goal": "p_9(Bo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Bo).",
                    "p_7(Bo).",
                    "-p_5(Bo).",
                    "-p_3(Bo).",
                    "-p_2(Bo).",
                    "-p_4(Bo).",
                    "p_0(Bo).",
                    "p_1(Bo).",
                    "p_8(Bo).",
                    "p_9(Bo) | -p_9(Bo).",
                    "-p_6(Bo) | p_7(Bo) | p_16(Bo).",
                    "all x (p_15(x) -> (p_5(x) & p_16(x))).",
                    "all x (p_14(x) -> (p_15(x) | p_3(x) | p_9(x))).",
                    "(-(p_14(Bo) <-> p_11(Bo))) -> p_2(Bo).",
                    "p_4(Bo) | p_13(Bo).",
                    "p_0(Bo) -> (-(p_13(Bo) <-> p_12(Bo))).",
                    "p_1(Bo) -> (-(p_12(Bo) <-> p_10(Bo))).",
                    "all x ((p_8(x) & p_10(x)) -> p_11(x)).",
                    "all x (p_8(x) -> p_9(x)).",
                    "all x (p_9(x) -> p_8(x)).",
                    "all x (-p_9(x) -> -p_8(x))."
                ],
                "formulas(goals)": [
                    "p_9(Bo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Bo) \u2228 \u00acp_9(Bo)"
                ],
                "added_rules": [
                    "\u00acp_6(Bo) \u2228 p_7(Bo) \u2228 p_16(Bo)",
                    "\u2200x (\u00acp_9(x) \u2192 \u00acp_8(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Bo)\np_8(Bo)\np_6(Bo) \u2192 \u00acp_9(Bo)",
            "Initial Goal": "p_9(Bo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Bo)",
                    "p_8(Bo)",
                    "-p_6(Bo) | -p_9(Bo)"
                ],
                "formulas(goals)": [
                    "-p_9(Bo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_7(Bo)",
                    "p_9(Bo) \u2228 \u00acp_9(Bo)"
                ],
                "removed_rules": [
                    "\u2200x (p_8(x) \u2192 p_9(x))",
                    "\u2200x (p_9(x) \u2192 p_8(x))",
                    "\u2200x (\u00acp_9(x) \u2192 \u00acp_8(x))",
                    "\u00acp_6(Bo) \u2228 p_7(Bo) \u2228 p_16(Bo)",
                    "\u2200x (p_15(x) \u2192 (p_5(x) \u2227 p_16(x)))",
                    "\u2200x (p_14(x) \u2192 (p_15(x) \u2228 p_3(x) \u2228 p_9(x)))",
                    "(p_14(Bo) \u2295 p_11(Bo)) \u2192 p_2(Bo)",
                    "p_4(Bo) \u2228 p_13(Bo)",
                    "p_0(Bo) \u2192 (p_13(Bo) \u2295 p_12(Bo))",
                    "p_1(Bo) \u2192 (p_12(Bo) \u2295 p_10(Bo))",
                    "\u2200x ((p_8(x) \u2227 p_10(x)) \u2192 p_11(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Bo) \u2192 \u00acp_9(Bo)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Bo)\np_8(Bo)\np_6(Bo) \u2192 \u00acp_9(Bo)\np_9(Bo) \u2192 \u00acp_6(Bo)",
            "Initial Goal": "p_9(Bo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Bo)",
                    "p_8(Bo)",
                    "p_6(Bo) -> -p_9(Bo)",
                    "p_9(Bo) -> -p_6(Bo)"
                ],
                "formulas(goals)": [
                    "-p_9(Bo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_9(Bo) \u2192 \u00acp_6(Bo)"
                ]
            }
        }
    ]
}