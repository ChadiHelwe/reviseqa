{
    "background_story": "Billie, a savvy businesswoman, had a knack for creating duplicable systems that could be scaled and replicated with ease. She started her first online course, teaching others how to manage their time effectively, and quickly realized that the key to her success lay in creating a model that could be duplicated by her students. Billie's course became a massive hit, with thousands of entrepreneurs duplicating her strategies to achieve similar results. She then expanded her business, creating a franchise model that allowed others to open their own time-management consulting firms using her proven methods. Billie's duplicable business model made her a millionaire before the age of 30, and she continues to inspire others to create scalable and sustainable businesses.",
    "predicates": [
        {
            "id": 0,
            "name": "innovative"
        },
        {
            "id": 1,
            "name": "profitable"
        },
        {
            "id": 2,
            "name": "grows_slowly"
        },
        {
            "id": 3,
            "name": "is_meticulous"
        },
        {
            "id": 4,
            "name": "seeks_feedback"
        },
        {
            "id": 5,
            "name": "scalable"
        },
        {
            "id": 6,
            "name": "sustainable"
        },
        {
            "id": 7,
            "name": "successful"
        },
        {
            "id": 8,
            "name": "adapts_quickly"
        },
        {
            "id": 9,
            "name": "thrives_fast"
        },
        {
            "id": 10,
            "name": "takes_risks"
        },
        {
            "id": 11,
            "name": "manages_time"
        },
        {
            "id": 12,
            "name": "hires_staff"
        },
        {
            "id": 13,
            "name": "expands_services"
        },
        {
            "id": 14,
            "name": "works_smart"
        },
        {
            "id": 15,
            "name": "hires_well"
        },
        {
            "id": 16,
            "name": "creates_systems"
        },
        {
            "id": 17,
            "name": "builds_teams"
        },
        {
            "id": 18,
            "name": "is_ambitious"
        },
        {
            "id": 19,
            "name": "plans_carefully"
        }
    ],
    "subject_name": "Billie",
    "subject_category": "entrepreneur",
    "keyword": "duplicable",
    "all_facts": [
        {
            "id": 0,
            "subject": "Billie",
            "text": "Billie is innovative.",
            "fol": "p_0(Billie)",
            "str_fol": "innovative(Billie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Billie",
            "text": "Billie is not profitable.",
            "fol": "\u00acp_1(Billie)",
            "str_fol": "\u00acprofitable(Billie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Billie",
            "text": "Billie does not grow slowly.",
            "fol": "\u00acp_2(Billie)",
            "str_fol": "\u00acgrows_slowly(Billie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Billie",
            "text": "Billie is not meticulous.",
            "fol": "\u00acp_3(Billie)",
            "str_fol": "\u00acis_meticulous(Billie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Billie",
            "text": "Billie does not seek feedback.",
            "fol": "\u00acp_4(Billie)",
            "str_fol": "\u00acseeks_feedback(Billie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Billie",
            "text": "Billie takes risks.",
            "fol": "p_10(Billie)",
            "str_fol": "takes_risks(Billie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Billie",
            "text": "Billie's business does not adapt quickly.",
            "fol": "\u00acp_8(Billie)",
            "str_fol": "\u00acadapts_quickly(Billie)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Billie",
            "text": "Billie's business does not thrive fast.",
            "fol": "\u00acp_9(Billie)",
            "str_fol": "\u00acthrives_fast(Billie)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Billie",
            "text": "Billie's business is not scalable.",
            "fol": "\u00acp_5(Billie)",
            "str_fol": "\u00acscalable(Billie)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Billie",
            "text": "Billie's business is not sustainable.",
            "fol": "\u00acp_6(Billie)",
            "str_fol": "\u00acsustainable(Billie)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Billie",
            "text": "Billie's business is not successful.",
            "fol": "\u00acp_7(Billie)",
            "str_fol": "\u00acsuccessful(Billie)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Billie",
            "text": "Billie does not seek feedback.",
            "fol": "\u00acp_4(Billie)",
            "str_fol": "\u00acseeks_feedback(Billie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Billie",
            "text": "Billie does not grow slowly.",
            "fol": "\u00acp_2(Billie)",
            "str_fol": "\u00acgrows_slowly(Billie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Billie",
            "text": "Billie is not meticulous.",
            "fol": "\u00acp_3(Billie)",
            "str_fol": "\u00acis_meticulous(Billie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Billie",
            "text": "Billie is innovative.",
            "fol": "p_0(Billie)",
            "str_fol": "innovative(Billie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Billie",
            "text": "Billie is not profitable.",
            "fol": "\u00acp_1(Billie)",
            "str_fol": "\u00acprofitable(Billie)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Billie either takes risks or seeks feedback, but not both.",
            "fol": "p_10(Billie) \u2295 p_4(Billie)",
            "str_fol": "takes_risks(Billie) \u2295 seeks_feedback(Billie)"
        },
        {
            "id": 4,
            "text": "Billie either takes risks or adapts quickly, but not both.",
            "fol": "p_10(Billie) \u2295 p_8(Billie)",
            "str_fol": "takes_risks(Billie) \u2295 adapts_quickly(Billie)"
        },
        {
            "id": 3,
            "text": "If Billie either grows rapidly or grows slowly, then she is meticulous.",
            "fol": "(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)",
            "str_fol": "(thrives_fast(Billie) \u2295 grows_slowly(Billie)) \u2192 is_meticulous(Billie)"
        },
        {
            "id": 2,
            "text": "If Billie's business is either adaptable or scalable, then it grows rapidly.",
            "fol": "(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)",
            "str_fol": "(adapts_quickly(Billie) \u2295 scalable(Billie)) \u2192 thrives_fast(Billie)"
        },
        {
            "id": 1,
            "text": "If Billie has a sustainable business and is innovative, then she is profitable.",
            "fol": "(p_6(Billie) \u2227 p_0(Billie)) \u2192 p_1(Billie)",
            "str_fol": "(sustainable(Billie) \u2227 innovative(Billie)) \u2192 profitable(Billie)"
        },
        {
            "id": 0,
            "text": "If Billie's business is either scalable or sustainable (but not both), then it is successful.",
            "fol": "(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)",
            "str_fol": "(scalable(Billie) \u2295 sustainable(Billie)) \u2192 successful(Billie)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Billie",
            "text": "Billie does not seek feedback.",
            "fol": "\u00acp_4(Billie)",
            "str_fol": "\u00acseeks_feedback(Billie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Billie",
            "text": "Billie does not grow slowly.",
            "fol": "\u00acp_2(Billie)",
            "str_fol": "\u00acgrows_slowly(Billie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Billie",
            "text": "Billie is not meticulous.",
            "fol": "\u00acp_3(Billie)",
            "str_fol": "\u00acis_meticulous(Billie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Billie",
            "text": "Billie is innovative.",
            "fol": "p_0(Billie)",
            "str_fol": "innovative(Billie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Billie",
            "text": "Billie is not profitable.",
            "fol": "\u00acp_1(Billie)",
            "str_fol": "\u00acprofitable(Billie)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Billie either takes risks or seeks feedback, but not both.",
            "fol": "p_10(Billie) \u2295 p_4(Billie)",
            "str_fol": "takes_risks(Billie) \u2295 seeks_feedback(Billie)"
        },
        {
            "id": 4,
            "text": "Billie either takes risks or adapts quickly, but not both.",
            "fol": "p_10(Billie) \u2295 p_8(Billie)",
            "str_fol": "takes_risks(Billie) \u2295 adapts_quickly(Billie)"
        },
        {
            "id": 3,
            "text": "If Billie either grows rapidly or grows slowly, then she is meticulous.",
            "fol": "(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)",
            "str_fol": "(thrives_fast(Billie) \u2295 grows_slowly(Billie)) \u2192 is_meticulous(Billie)"
        },
        {
            "id": 2,
            "text": "If Billie's business is either adaptable or scalable, then it grows rapidly.",
            "fol": "(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)",
            "str_fol": "(adapts_quickly(Billie) \u2295 scalable(Billie)) \u2192 thrives_fast(Billie)"
        },
        {
            "id": 1,
            "text": "If Billie has a sustainable business and is innovative, then she is profitable.",
            "fol": "(p_6(Billie) \u2227 p_0(Billie)) \u2192 p_1(Billie)",
            "str_fol": "(sustainable(Billie) \u2227 innovative(Billie)) \u2192 profitable(Billie)"
        },
        {
            "id": 0,
            "text": "If Billie's business is either scalable or sustainable (but not both), then it is successful.",
            "fol": "(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)",
            "str_fol": "(scalable(Billie) \u2295 sustainable(Billie)) \u2192 successful(Billie)"
        }
    ],
    "context_fol": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\n(p_6(Billie) \u2227 p_0(Billie)) \u2192 p_1(Billie)\n(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)",
    "conclusion": {
        "id": 10,
        "subject": "Billie",
        "text": "Billie's business is not successful.",
        "fol": "\u00acp_7(Billie)",
        "str_fol": "\u00acsuccessful(Billie)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Billie)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Billie",
                    "text": "Billie does not seek feedback.",
                    "fol": "\u00acp_4(Billie)",
                    "str_fol": "\u00acseeks_feedback(Billie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Billie either takes risks or seeks feedback, but not both.",
                    "fol": "p_10(Billie) \u2295 p_4(Billie)",
                    "str_fol": "takes_risks(Billie) \u2295 seeks_feedback(Billie)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Billie",
                "text": "Billie takes risks.",
                "fol": "p_10(Billie)",
                "str_fol": "takes_risks(Billie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Billie",
                    "text": "Billie takes risks.",
                    "fol": "p_10(Billie)",
                    "str_fol": "takes_risks(Billie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Billie either takes risks or adapts quickly, but not both.",
                    "fol": "p_10(Billie) \u2295 p_8(Billie)",
                    "str_fol": "takes_risks(Billie) \u2295 adapts_quickly(Billie)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Billie",
                "text": "Billie's business does not adapt quickly.",
                "fol": "\u00acp_8(Billie)",
                "str_fol": "\u00acadapts_quickly(Billie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Billie",
                    "text": "Billie does not grow slowly.",
                    "fol": "\u00acp_2(Billie)",
                    "str_fol": "\u00acgrows_slowly(Billie)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Billie",
                    "text": "Billie is not meticulous.",
                    "fol": "\u00acp_3(Billie)",
                    "str_fol": "\u00acis_meticulous(Billie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Billie either grows rapidly or grows slowly, then she is meticulous.",
                    "fol": "(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)",
                    "str_fol": "(thrives_fast(Billie) \u2295 grows_slowly(Billie)) \u2192 is_meticulous(Billie)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Billie",
                "text": "Billie's business does not thrive fast.",
                "fol": "\u00acp_9(Billie)",
                "str_fol": "\u00acthrives_fast(Billie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Billie",
                    "text": "Billie's business does not adapt quickly.",
                    "fol": "\u00acp_8(Billie)",
                    "str_fol": "\u00acadapts_quickly(Billie)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Billie",
                    "text": "Billie's business does not thrive fast.",
                    "fol": "\u00acp_9(Billie)",
                    "str_fol": "\u00acthrives_fast(Billie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Billie's business is either adaptable or scalable, then it grows rapidly.",
                    "fol": "(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)",
                    "str_fol": "(adapts_quickly(Billie) \u2295 scalable(Billie)) \u2192 thrives_fast(Billie)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Billie",
                "text": "Billie's business is not scalable.",
                "fol": "\u00acp_5(Billie)",
                "str_fol": "\u00acscalable(Billie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Billie",
                    "text": "Billie is innovative.",
                    "fol": "p_0(Billie)",
                    "str_fol": "innovative(Billie)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Billie",
                    "text": "Billie is not profitable.",
                    "fol": "\u00acp_1(Billie)",
                    "str_fol": "\u00acprofitable(Billie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Billie has a sustainable business and is innovative, then she is profitable.",
                    "fol": "(p_6(Billie) \u2227 p_0(Billie)) \u2192 p_1(Billie)",
                    "str_fol": "(sustainable(Billie) \u2227 innovative(Billie)) \u2192 profitable(Billie)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Billie",
                "text": "Billie's business is not sustainable.",
                "fol": "\u00acp_6(Billie)",
                "str_fol": "\u00acsustainable(Billie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Billie",
                    "text": "Billie's business is not scalable.",
                    "fol": "\u00acp_5(Billie)",
                    "str_fol": "\u00acscalable(Billie)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Billie",
                    "text": "Billie's business is not sustainable.",
                    "fol": "\u00acp_6(Billie)",
                    "str_fol": "\u00acsustainable(Billie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Billie's business is either scalable or sustainable (but not both), then it is successful.",
                    "fol": "(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)",
                    "str_fol": "(scalable(Billie) \u2295 sustainable(Billie)) \u2192 successful(Billie)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\n(p_6(Billie) \u2227 p_0(Billie)) \u2192 p_1(Billie)\n(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie)",
                    "-p_2(Billie)",
                    "-p_3(Billie)",
                    "p_0(Billie)",
                    "-p_1(Billie)",
                    "-(p_10(Billie) <-> p_4(Billie))",
                    "-(p_10(Billie) <-> p_8(Billie))",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie)",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie)",
                    "(p_6(Billie) & p_0(Billie)) -> p_1(Billie)",
                    "(-(p_5(Billie) <-> p_6(Billie))) -> p_7(Billie)",
                    "-p_5(Billie)",
                    "-p_6(Billie)",
                    "(-p_5(Billie) & -p_6(Billie)) -> -p_7(Billie)"
                ],
                "formulas(goals)": [
                    "-p_7(Billie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_5(Billie)",
                    "\u00acp_6(Billie)"
                ],
                "added_rules": [
                    "(\u00acp_5(Billie) \u2227 \u00acp_6(Billie)) \u2192 \u00acp_7(Billie)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\np_6(Billie)\n(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie).",
                    "-p_2(Billie).",
                    "-p_3(Billie).",
                    "p_0(Billie).",
                    "-p_1(Billie).",
                    "-(p_10(Billie) <-> p_4(Billie)).",
                    "-(p_10(Billie) <-> p_8(Billie)).",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie).",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie).",
                    "p_6(Billie).",
                    "(-(p_5(Billie) <-> p_6(Billie))) -> p_7(Billie)."
                ],
                "formulas(goals)": [
                    "p_7(Billie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Billie) \u2227 p_0(Billie)) \u2192 p_1(Billie)"
                ],
                "added_facts": [
                    "p_6(Billie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\np_6(Billie)\n(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)\n\u00acp_5(Billie)\np_10(Billie)\n\u00acp_8(Billie)\n\u00acp_9(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie)",
                    "-p_2(Billie)",
                    "-p_3(Billie)",
                    "p_0(Billie)",
                    "-p_1(Billie)",
                    "-(p_10(Billie) <-> p_4(Billie))",
                    "-(p_10(Billie) <-> p_8(Billie))",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie)",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie)",
                    "p_6(Billie)",
                    "(-(p_5(Billie) <-> p_6(Billie))) -> p_7(Billie)",
                    "-p_5(Billie)",
                    "p_10(Billie)",
                    "-p_8(Billie)",
                    "-p_9(Billie)"
                ],
                "formulas(goals)": [
                    "p_7(Billie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_5(Billie)",
                    "p_10(Billie)",
                    "\u00acp_8(Billie)",
                    "\u00acp_9(Billie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\np_6(Billie)\n((p_5(Billie) \u2228 p_6(Billie)) \u2227 \u00ac(p_5(Billie) \u2227 p_6(Billie))) \u2192 p_7(Billie)\n\u00acp_5(Billie)\np_10(Billie)\n\u00acp_8(Billie)\n\u00acp_9(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie).",
                    "-p_2(Billie).",
                    "-p_3(Billie).",
                    "p_0(Billie).",
                    "-p_1(Billie).",
                    "-(p_10(Billie) <-> p_4(Billie)).",
                    "-(p_10(Billie) <-> p_8(Billie)).",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie).",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie).",
                    "p_6(Billie).",
                    "((p_5(Billie) | p_6(Billie)) & -(p_5(Billie) & p_6(Billie))) -> p_7(Billie).",
                    "-p_5(Billie).",
                    "p_10(Billie).",
                    "-p_8(Billie).",
                    "-p_9(Billie)."
                ],
                "formulas(goals)": [
                    "-(-p_7(Billie))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_5(Billie) \u2295 p_6(Billie)) \u2192 p_7(Billie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "((p_5(Billie) \u2228 p_6(Billie)) \u2227 \u00ac(p_5(Billie) \u2227 p_6(Billie))) \u2192 p_7(Billie)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\np_6(Billie)\n\u00acp_5(Billie)\np_10(Billie)\n\u00acp_8(Billie)\n\u00acp_9(Billie)\np_6(Billie) \u2192 \u00acp_7(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie)",
                    "-p_2(Billie)",
                    "-p_3(Billie)",
                    "p_0(Billie)",
                    "-p_1(Billie)",
                    "-(p_10(Billie) <-> p_4(Billie))",
                    "-(p_10(Billie) <-> p_8(Billie))",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie)",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie)",
                    "p_6(Billie)",
                    "-p_5(Billie)",
                    "p_10(Billie)",
                    "-p_8(Billie)",
                    "-p_9(Billie)",
                    "p_6(Billie) -> -p_7(Billie)"
                ],
                "formulas(goals)": [
                    "-p_7(Billie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "((p_5(Billie) \u2228 p_6(Billie)) \u2227 \u00ac(p_5(Billie) \u2227 p_6(Billie))) \u2192 p_7(Billie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Billie) \u2192 \u00acp_7(Billie)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\np_6(Billie)\n\u00acp_5(Billie)\np_10(Billie)\n\u00acp_8(Billie)\n\u00acp_9(Billie)\np_6(Billie) \u2192 p_7(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie)",
                    "-p_2(Billie)",
                    "-p_3(Billie)",
                    "p_0(Billie)",
                    "-p_1(Billie)",
                    "-(p_10(Billie) <-> p_4(Billie))",
                    "-(p_10(Billie) <-> p_8(Billie))",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie)",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie)",
                    "p_6(Billie)",
                    "-p_5(Billie)",
                    "p_10(Billie)",
                    "-p_8(Billie)",
                    "-p_9(Billie)",
                    "p_6(Billie) -> p_7(Billie)"
                ],
                "formulas(goals)": [
                    "p_7(Billie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Billie) \u2192 \u00acp_7(Billie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Billie) \u2192 p_7(Billie)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Billie)\n\u00acp_2(Billie)\n\u00acp_3(Billie)\np_0(Billie)\n\u00acp_1(Billie)\np_10(Billie) \u2295 p_4(Billie)\np_10(Billie) \u2295 p_8(Billie)\n(p_9(Billie) \u2295 p_2(Billie)) \u2192 p_3(Billie)\n(p_8(Billie) \u2295 p_5(Billie)) \u2192 p_9(Billie)\np_6(Billie)\n\u00acp_5(Billie)\np_10(Billie)\n\u00acp_8(Billie)\n\u00acp_9(Billie)\n(p_6(Billie) \u2227 \u00acp_5(Billie) \u2227 \u00acp_8(Billie)) \u2192 \u00acp_7(Billie)",
            "Initial Goal": "\u00acp_7(Billie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Billie)",
                    "-p_2(Billie)",
                    "-p_3(Billie)",
                    "p_0(Billie)",
                    "-p_1(Billie)",
                    "-(p_10(Billie) <-> p_4(Billie))",
                    "-(p_10(Billie) <-> p_8(Billie))",
                    "(-(p_9(Billie) <-> p_2(Billie))) -> p_3(Billie)",
                    "(-(p_8(Billie) <-> p_5(Billie))) -> p_9(Billie)",
                    "p_6(Billie)",
                    "-p_5(Billie)",
                    "p_10(Billie)",
                    "-p_8(Billie)",
                    "-p_9(Billie)",
                    "(p_6(Billie) & -p_5(Billie) & -p_8(Billie)) -> -p_7(Billie)"
                ],
                "formulas(goals)": [
                    "-p_7(Billie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Billie) \u2192 p_7(Billie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Billie) \u2227 \u00acp_5(Billie) \u2227 \u00acp_8(Billie)) \u2192 \u00acp_7(Billie)"
                ]
            }
        }
    ]
}