{
    "background_story": "Brady was a young professional living in a bustling metropolis, where the cost of living was skyrocketing. Determined to save money and live below his means, he adopted a frugally mindful lifestyle. He started by cooking his meals from scratch, using ingredients from a community garden he tended to in his free time. Brady also became adept at repairing and repurposing old items, reducing his waste to nearly zero. His small studio apartment was a testament to his minimalist approach, with each item carefully selected for its functionality and durability. By living frugally, Brady was able to save enough to pursue his passion for photography, eventually turning it into a successful business. His friends admired his discipline and creativity, and he became known as the go-to expert for living a fulfilling life on a budget.",
    "predicates": [
        {
            "id": 0,
            "name": "pursues_passion"
        },
        {
            "id": 1,
            "name": "invests_wisely"
        },
        {
            "id": 2,
            "name": "lives_sustainably"
        },
        {
            "id": 3,
            "name": "manages_finances"
        },
        {
            "id": 4,
            "name": "sets_goals"
        },
        {
            "id": 5,
            "name": "works_hard"
        },
        {
            "id": 6,
            "name": "reuses_items"
        },
        {
            "id": 7,
            "name": "buys_secondhand"
        },
        {
            "id": 8,
            "name": "shares_frei"
        },
        {
            "id": 9,
            "name": "tracks_expenses"
        },
        {
            "id": 10,
            "name": "achieves_stability"
        },
        {
            "id": 11,
            "name": "is_disciplined"
        },
        {
            "id": 12,
            "name": "lives_frugally"
        },
        {
            "id": 13,
            "name": "is_resourceful"
        },
        {
            "id": 14,
            "name": "saves_money"
        },
        {
            "id": 15,
            "name": "is_responsible"
        },
        {
            "id": 16,
            "name": "repairs_things"
        },
        {
            "id": 17,
            "name": "finds_deals"
        },
        {
            "id": 18,
            "name": "donates_gently"
        },
        {
            "id": 19,
            "name": "plans_ahead"
        },
        {
            "id": 20,
            "name": "cooks_from_scratch"
        },
        {
            "id": 21,
            "name": "has_simple_tastes"
        },
        {
            "id": 22,
            "name": "eats_well"
        },
        {
            "id": 23,
            "name": "exercises_regularly"
        },
        {
            "id": 24,
            "name": "cooks_meals"
        },
        {
            "id": 25,
            "name": "has_hobbies"
        },
        {
            "id": 26,
            "name": "creative"
        },
        {
            "id": 27,
            "name": "thinks_critically"
        },
        {
            "id": 28,
            "name": "makes_things"
        },
        {
            "id": 29,
            "name": "avoids_debt"
        },
        {
            "id": 30,
            "name": "fixes_bikes"
        },
        {
            "id": 31,
            "name": "makes_furniture"
        },
        {
            "id": 32,
            "name": "buys_intentionally"
        },
        {
            "id": 33,
            "name": "supports_local"
        },
        {
            "id": 34,
            "name": "grows_food"
        }
    ],
    "subject_name": "Brady",
    "subject_category": "human",
    "keyword": "fugally",
    "all_facts": [
        {
            "id": 0,
            "subject": "Brady",
            "text": "Brady pursues his passion.",
            "fol": "p_0(Brady)",
            "str_fol": "pursues_passion(Brady)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Brady",
            "text": "Brady invests wisely.",
            "fol": "p_1(Brady)",
            "str_fol": "invests_wisely(Brady)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Brady",
            "text": "Brady does not live sustainably.",
            "fol": "\u00acp_2(Brady)",
            "str_fol": "\u00aclives_sustainably(Brady)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Brady",
            "text": "Brady manages his finances.",
            "fol": "p_3(Brady)",
            "str_fol": "manages_finances(Brady)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Brady",
            "text": "Brady does not set goals.",
            "fol": "\u00acp_4(Brady)",
            "str_fol": "\u00acsets_goals(Brady)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Brady",
            "text": "Brady works hard.",
            "fol": "p_5(Brady)",
            "str_fol": "works_hard(Brady)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Brady",
            "text": "Brady does not reuse items.",
            "fol": "\u00acp_6(Brady)",
            "str_fol": "\u00acreuses_items(Brady)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Brady",
            "text": "Brady buys secondhand.",
            "fol": "p_7(Brady)",
            "str_fol": "buys_secondhand(Brady)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Brady",
            "text": "Brady shares freely.",
            "fol": "p_8(Brady)",
            "str_fol": "shares_frei(Brady)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Brady",
            "text": "Brady tracks his expenses.",
            "fol": "p_9(Brady)",
            "str_fol": "tracks_expenses(Brady)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Brady",
            "text": "Brady does not achieve stability.",
            "fol": "\u00acp_10(Brady)",
            "str_fol": "\u00acachieves_stability(Brady)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Brady",
            "text": "Brady plans ahead.",
            "fol": "p_19(Brady)",
            "str_fol": "plans_ahead(Brady)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Brady",
            "text": "Brady does not donate gently.",
            "fol": "\u00acp_18(Brady)",
            "str_fol": "\u00acdonates_gently(Brady)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Brady",
            "text": "Brady does not repair things.",
            "fol": "\u00acp_16(Brady)",
            "str_fol": "\u00acrepairs_things(Brady)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Brady",
            "text": "Brady is not responsible.",
            "fol": "\u00acp_15(Brady)",
            "str_fol": "\u00acis_responsible(Brady)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Brady",
            "text": "Brady finds deals.",
            "fol": "p_17(Brady)",
            "str_fol": "finds_deals(Brady)",
            "negation": false
        },
        {
            "id": 16,
            "subject": "Brady",
            "text": "Brady is resourceful.",
            "fol": "p_13(Brady)",
            "str_fol": "is_resourceful(Brady)",
            "negation": false
        },
        {
            "id": 17,
            "subject": "Brady",
            "text": "Brady saves money.",
            "fol": "p_14(Brady)",
            "str_fol": "saves_money(Brady)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 9,
            "subject": "Brady",
            "text": "Brady tracks his expenses.",
            "fol": "p_9(Brady)",
            "str_fol": "tracks_expenses(Brady)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Brady",
            "text": "Brady does not achieve stability.",
            "fol": "\u00acp_10(Brady)",
            "str_fol": "\u00acachieves_stability(Brady)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Brady",
            "text": "Brady buys secondhand.",
            "fol": "p_7(Brady)",
            "str_fol": "buys_secondhand(Brady)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Brady",
            "text": "Brady shares freely.",
            "fol": "p_8(Brady)",
            "str_fol": "shares_frei(Brady)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Brady",
            "text": "Brady does not reuse items.",
            "fol": "\u00acp_6(Brady)",
            "str_fol": "\u00acreuses_items(Brady)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Brady",
            "text": "Brady does not live sustainably.",
            "fol": "\u00acp_2(Brady)",
            "str_fol": "\u00aclives_sustainably(Brady)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Brady",
            "text": "Brady manages his finances.",
            "fol": "p_3(Brady)",
            "str_fol": "manages_finances(Brady)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Brady",
            "text": "Brady invests wisely.",
            "fol": "p_1(Brady)",
            "str_fol": "invests_wisely(Brady)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Brady",
            "text": "Brady does not set goals.",
            "fol": "\u00acp_4(Brady)",
            "str_fol": "\u00acsets_goals(Brady)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Brady",
            "text": "Brady works hard.",
            "fol": "p_5(Brady)",
            "str_fol": "works_hard(Brady)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Brady",
            "text": "Brady pursues his passion.",
            "fol": "p_0(Brady)",
            "str_fol": "pursues_passion(Brady)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If a person either tracks their expenses or plans ahead, then they achieve stability.",
            "fol": "\u2200x ((p_9(x) \u2295 p_19(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((tracks_expenses(x) \u2295 plans_ahead(x)) \u2192 achieves_stability(x))"
        },
        {
            "id": 7,
            "text": "If Brady buys secondhand, then he either donates gently or shares freely, but not both.",
            "fol": "p_7(Brady) \u2192 (p_18(Brady) \u2295 p_8(Brady))",
            "str_fol": "buys_secondhand(Brady) \u2192 (donates_gently(Brady) \u2295 shares_frei(Brady))"
        },
        {
            "id": 6,
            "text": "Any person who reuses items or repairs things can live sustainably.",
            "fol": "\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((reuses_items(x) \u2228 repairs_things(x)) \u2192 lives_sustainably(x))"
        },
        {
            "id": 5,
            "text": "If Brady manages his finances, then he either is responsible or plans ahead, but not both.",
            "fol": "p_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))",
            "str_fol": "manages_finances(Brady) \u2192 (is_responsible(Brady) \u2295 plans_ahead(Brady))"
        },
        {
            "id": 4,
            "text": "Brady either finds deals or donates gently, but not both, in his daily life.",
            "fol": "p_17(Brady) \u2295 p_18(Brady)",
            "str_fol": "finds_deals(Brady) \u2295 donates_gently(Brady)"
        },
        {
            "id": 3,
            "text": "If Brady either repairs things or finds deals (but not both), then he is resourceful.",
            "fol": "(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)",
            "str_fol": "(repairs_things(Brady) \u2295 finds_deals(Brady)) \u2192 is_resourceful(Brady)"
        },
        {
            "id": 2,
            "text": "If Brady either saves money or invests wisely (but not both), then he is responsible.",
            "fol": "(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)",
            "str_fol": "(saves_money(Brady) \u2295 invests_wisely(Brady)) \u2192 is_responsible(Brady)"
        },
        {
            "id": 1,
            "text": "If Brady sets goals, then he works hard and is disciplined.",
            "fol": "p_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))",
            "str_fol": "sets_goals(Brady) \u2192 (works_hard(Brady) \u2227 is_disciplined(Brady))"
        },
        {
            "id": 0,
            "text": "Anyone who is disciplined either lives frugally or is resourceful.",
            "fol": "\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))",
            "str_fol": "\u2200x (is_disciplined(x) \u2192 (lives_frugally(x) \u2228 is_resourceful(x)))"
        }
    ],
    "context": [
        {
            "id": 9,
            "subject": "Brady",
            "text": "Brady tracks his expenses.",
            "fol": "p_9(Brady)",
            "str_fol": "tracks_expenses(Brady)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Brady",
            "text": "Brady does not achieve stability.",
            "fol": "\u00acp_10(Brady)",
            "str_fol": "\u00acachieves_stability(Brady)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Brady",
            "text": "Brady buys secondhand.",
            "fol": "p_7(Brady)",
            "str_fol": "buys_secondhand(Brady)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Brady",
            "text": "Brady shares freely.",
            "fol": "p_8(Brady)",
            "str_fol": "shares_frei(Brady)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Brady",
            "text": "Brady does not reuse items.",
            "fol": "\u00acp_6(Brady)",
            "str_fol": "\u00acreuses_items(Brady)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Brady",
            "text": "Brady does not live sustainably.",
            "fol": "\u00acp_2(Brady)",
            "str_fol": "\u00aclives_sustainably(Brady)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Brady",
            "text": "Brady manages his finances.",
            "fol": "p_3(Brady)",
            "str_fol": "manages_finances(Brady)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Brady",
            "text": "Brady invests wisely.",
            "fol": "p_1(Brady)",
            "str_fol": "invests_wisely(Brady)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Brady",
            "text": "Brady does not set goals.",
            "fol": "\u00acp_4(Brady)",
            "str_fol": "\u00acsets_goals(Brady)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Brady",
            "text": "Brady works hard.",
            "fol": "p_5(Brady)",
            "str_fol": "works_hard(Brady)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Brady",
            "text": "Brady pursues his passion.",
            "fol": "p_0(Brady)",
            "str_fol": "pursues_passion(Brady)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If a person either tracks their expenses or plans ahead, then they achieve stability.",
            "fol": "\u2200x ((p_9(x) \u2295 p_19(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((tracks_expenses(x) \u2295 plans_ahead(x)) \u2192 achieves_stability(x))"
        },
        {
            "id": 7,
            "text": "If Brady buys secondhand, then he either donates gently or shares freely, but not both.",
            "fol": "p_7(Brady) \u2192 (p_18(Brady) \u2295 p_8(Brady))",
            "str_fol": "buys_secondhand(Brady) \u2192 (donates_gently(Brady) \u2295 shares_frei(Brady))"
        },
        {
            "id": 6,
            "text": "Any person who reuses items or repairs things can live sustainably.",
            "fol": "\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((reuses_items(x) \u2228 repairs_things(x)) \u2192 lives_sustainably(x))"
        },
        {
            "id": 5,
            "text": "If Brady manages his finances, then he either is responsible or plans ahead, but not both.",
            "fol": "p_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))",
            "str_fol": "manages_finances(Brady) \u2192 (is_responsible(Brady) \u2295 plans_ahead(Brady))"
        },
        {
            "id": 4,
            "text": "Brady either finds deals or donates gently, but not both, in his daily life.",
            "fol": "p_17(Brady) \u2295 p_18(Brady)",
            "str_fol": "finds_deals(Brady) \u2295 donates_gently(Brady)"
        },
        {
            "id": 3,
            "text": "If Brady either repairs things or finds deals (but not both), then he is resourceful.",
            "fol": "(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)",
            "str_fol": "(repairs_things(Brady) \u2295 finds_deals(Brady)) \u2192 is_resourceful(Brady)"
        },
        {
            "id": 2,
            "text": "If Brady either saves money or invests wisely (but not both), then he is responsible.",
            "fol": "(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)",
            "str_fol": "(saves_money(Brady) \u2295 invests_wisely(Brady)) \u2192 is_responsible(Brady)"
        },
        {
            "id": 1,
            "text": "If Brady sets goals, then he works hard and is disciplined.",
            "fol": "p_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))",
            "str_fol": "sets_goals(Brady) \u2192 (works_hard(Brady) \u2227 is_disciplined(Brady))"
        },
        {
            "id": 0,
            "text": "Anyone who is disciplined either lives frugally or is resourceful.",
            "fol": "\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))",
            "str_fol": "\u2200x (is_disciplined(x) \u2192 (lives_frugally(x) \u2228 is_resourceful(x)))"
        }
    ],
    "context_fol": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_0(Brady)\n\u2200x ((p_9(x) \u2295 p_19(x)) \u2192 p_10(x))\np_7(Brady) \u2192 (p_18(Brady) \u2295 p_8(Brady))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))",
    "conclusion": {
        "id": 18,
        "text": "If Brady lives frugally, then he can either save money or pursue his passion, but in his case, he is able to do both, however the rule generally applies as an 'or' condition for most people.",
        "fol": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
        "str_fol": "lives_frugally(Brady) \u2192 (saves_money(Brady) \u2295 pursues_passion(Brady))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Brady",
                    "text": "Brady tracks his expenses.",
                    "fol": "p_9(Brady)",
                    "str_fol": "tracks_expenses(Brady)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Brady",
                    "text": "Brady does not achieve stability.",
                    "fol": "\u00acp_10(Brady)",
                    "str_fol": "\u00acachieves_stability(Brady)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If a person either tracks their expenses or plans ahead, then they achieve stability.",
                    "fol": "\u2200x ((p_9(x) \u2295 p_19(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((tracks_expenses(x) \u2295 plans_ahead(x)) \u2192 achieves_stability(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Brady",
                "text": "Brady plans ahead.",
                "fol": "p_19(Brady)",
                "str_fol": "plans_ahead(Brady)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Brady",
                    "text": "Brady buys secondhand.",
                    "fol": "p_7(Brady)",
                    "str_fol": "buys_secondhand(Brady)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Brady",
                    "text": "Brady shares freely.",
                    "fol": "p_8(Brady)",
                    "str_fol": "shares_frei(Brady)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Brady buys secondhand, then he either donates gently or shares freely, but not both.",
                    "fol": "p_7(Brady) \u2192 (p_18(Brady) \u2295 p_8(Brady))",
                    "str_fol": "buys_secondhand(Brady) \u2192 (donates_gently(Brady) \u2295 shares_frei(Brady))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Brady",
                "text": "Brady does not donate gently.",
                "fol": "\u00acp_18(Brady)",
                "str_fol": "\u00acdonates_gently(Brady)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Brady",
                    "text": "Brady does not reuse items.",
                    "fol": "\u00acp_6(Brady)",
                    "str_fol": "\u00acreuses_items(Brady)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Brady",
                    "text": "Brady does not live sustainably.",
                    "fol": "\u00acp_2(Brady)",
                    "str_fol": "\u00aclives_sustainably(Brady)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Any person who reuses items or repairs things can live sustainably.",
                    "fol": "\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((reuses_items(x) \u2228 repairs_things(x)) \u2192 lives_sustainably(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Brady",
                "text": "Brady does not repair things.",
                "fol": "\u00acp_16(Brady)",
                "str_fol": "\u00acrepairs_things(Brady)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Brady",
                    "text": "Brady manages his finances.",
                    "fol": "p_3(Brady)",
                    "str_fol": "manages_finances(Brady)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Brady",
                    "text": "Brady plans ahead.",
                    "fol": "p_19(Brady)",
                    "str_fol": "plans_ahead(Brady)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Brady manages his finances, then he either is responsible or plans ahead, but not both.",
                    "fol": "p_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))",
                    "str_fol": "manages_finances(Brady) \u2192 (is_responsible(Brady) \u2295 plans_ahead(Brady))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Brady",
                "text": "Brady is not responsible.",
                "fol": "\u00acp_15(Brady)",
                "str_fol": "\u00acis_responsible(Brady)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Brady",
                    "text": "Brady does not donate gently.",
                    "fol": "\u00acp_18(Brady)",
                    "str_fol": "\u00acdonates_gently(Brady)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Brady either finds deals or donates gently, but not both, in his daily life.",
                    "fol": "p_17(Brady) \u2295 p_18(Brady)",
                    "str_fol": "finds_deals(Brady) \u2295 donates_gently(Brady)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Brady",
                "text": "Brady finds deals.",
                "fol": "p_17(Brady)",
                "str_fol": "finds_deals(Brady)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Brady",
                    "text": "Brady does not repair things.",
                    "fol": "\u00acp_16(Brady)",
                    "str_fol": "\u00acrepairs_things(Brady)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Brady",
                    "text": "Brady finds deals.",
                    "fol": "p_17(Brady)",
                    "str_fol": "finds_deals(Brady)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Brady either repairs things or finds deals (but not both), then he is resourceful.",
                    "fol": "(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)",
                    "str_fol": "(repairs_things(Brady) \u2295 finds_deals(Brady)) \u2192 is_resourceful(Brady)"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Brady",
                "text": "Brady is resourceful.",
                "fol": "p_13(Brady)",
                "str_fol": "is_resourceful(Brady)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Brady",
                    "text": "Brady invests wisely.",
                    "fol": "p_1(Brady)",
                    "str_fol": "invests_wisely(Brady)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Brady",
                    "text": "Brady is not responsible.",
                    "fol": "\u00acp_15(Brady)",
                    "str_fol": "\u00acis_responsible(Brady)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Brady either saves money or invests wisely (but not both), then he is responsible.",
                    "fol": "(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)",
                    "str_fol": "(saves_money(Brady) \u2295 invests_wisely(Brady)) \u2192 is_responsible(Brady)"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Brady",
                "text": "Brady saves money.",
                "fol": "p_14(Brady)",
                "str_fol": "saves_money(Brady)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Brady",
                    "text": "Brady does not set goals.",
                    "fol": "\u00acp_4(Brady)",
                    "str_fol": "\u00acsets_goals(Brady)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Brady",
                    "text": "Brady works hard.",
                    "fol": "p_5(Brady)",
                    "str_fol": "works_hard(Brady)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Brady sets goals, then he works hard and is disciplined.",
                    "fol": "p_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))",
                    "str_fol": "sets_goals(Brady) \u2192 (works_hard(Brady) \u2227 is_disciplined(Brady))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 16,
                    "subject": "Brady",
                    "text": "Brady is resourceful.",
                    "fol": "p_13(Brady)",
                    "str_fol": "is_resourceful(Brady)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Anyone who is disciplined either lives frugally or is resourceful.",
                    "fol": "\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))",
                    "str_fol": "\u2200x (is_disciplined(x) \u2192 (lives_frugally(x) \u2228 is_resourceful(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 17,
                    "subject": "Brady",
                    "text": "Brady saves money.",
                    "fol": "p_14(Brady)",
                    "str_fol": "saves_money(Brady)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Brady",
                    "text": "Brady pursues his passion.",
                    "fol": "p_0(Brady)",
                    "str_fol": "pursues_passion(Brady)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_0(Brady)\n\u2200x ((p_9(x) \u2295 p_19(x)) \u2192 p_10(x))\np_7(Brady) \u2192 (p_18(Brady) \u2295 p_8(Brady))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady)",
                    "-p_10(Brady)",
                    "p_7(Brady)",
                    "p_8(Brady)",
                    "-p_6(Brady)",
                    "-p_2(Brady)",
                    "p_3(Brady)",
                    "p_1(Brady)",
                    "-p_4(Brady)",
                    "p_5(Brady)",
                    "p_0(Brady)",
                    "all x (-(p_9(x) <-> p_19(x)) -> p_10(x))",
                    "p_7(Brady) -> (-(p_18(Brady) <-> p_8(Brady)))",
                    "all x ((p_6(x) | p_16(x)) -> p_2(x))",
                    "p_3(Brady) -> (-(p_15(Brady) <-> p_19(Brady)))",
                    "-(p_17(Brady) <-> p_18(Brady))",
                    "(-(p_16(Brady) <-> p_17(Brady))) -> p_13(Brady)",
                    "(-(p_14(Brady) <-> p_1(Brady))) -> p_15(Brady)",
                    "p_4(Brady) -> (p_5(Brady) & p_11(Brady))",
                    "all x (p_11(x) -> (p_12(x) | p_13(x)))",
                    "p_12(Brady) -> p_15(Brady)"
                ],
                "formulas(goals)": [
                    "p_12(Brady) -> (-(p_14(Brady) <-> p_0(Brady)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_12(Brady) \u2192 p_15(Brady)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_0(Brady)\n\u2200x ((p_9(x) \u2295 p_19(x)) \u2192 p_10(x))\np_7(Brady) \u2192 (p_18(Brady) \u2295 p_8(Brady))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))\np_5(Brady) \u2192 p_12(Brady)\np_5(Brady) \u2192 p_14(Brady)",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady)",
                    "-p_10(Brady)",
                    "p_7(Brady)",
                    "p_8(Brady)",
                    "-p_6(Brady)",
                    "-p_2(Brady)",
                    "p_3(Brady)",
                    "p_1(Brady)",
                    "-p_4(Brady)",
                    "p_5(Brady)",
                    "p_0(Brady)",
                    "all x (-((-p_9(x) & -p_19(x)) | (p_9(x) & p_19(x))) | p_10(x))",
                    "p_7(Brady) -> (-(-p_18(Brady) & -p_8(Brady)) & -(p_18(Brady) & p_8(Brady)))",
                    "all x ((-p_6(x) & -p_16(x)) | p_2(x))",
                    "p_3(Brady) -> (-(-p_15(Brady) & -p_19(Brady)) & -(p_15(Brady) & p_19(Brady)))",
                    "(-(-p_17(Brady) & -p_18(Brady)) & -(p_17(Brady) & p_18(Brady)))",
                    "(-(-( -p_16(Brady) & -p_17(Brady)) & -(p_16(Brady) & p_17(Brady))) | p_13(Brady))",
                    "(-(-( -p_14(Brady) & -p_1(Brady)) & -(p_14(Brady) & p_1(Brady))) | p_15(Brady))",
                    "(-p_4(Brady) | (p_5(Brady) & p_11(Brady)))",
                    "all x (-p_11(x) | p_12(x) | p_13(x))",
                    "p_5(Brady) -> p_12(Brady)",
                    "p_5(Brady) -> p_14(Brady)"
                ],
                "formulas(goals)": [
                    "-(-p_12(Brady) | -(p_14(Brady) <-> p_0(Brady)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Brady) \u2192 p_12(Brady)",
                    "p_5(Brady) \u2192 p_14(Brady)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_0(Brady)\np_12(Brady)\np_14(Brady)\n\u2200x (((p_9(x) \u2228 p_19(x)) \u2227 \u00ac(p_9(x) \u2227 p_19(x))) \u2192 p_10(x))\np_7(Brady) \u2192 ((p_18(Brady) \u2228 p_8(Brady)) \u2227 \u00ac(p_18(Brady) \u2227 p_8(Brady)))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))\np_5(Brady) \u2192 p_12(Brady)\np_5(Brady) \u2192 p_14(Brady)\np_5(Brady) \u2192 (p_12(Brady) \u2227 p_14(Brady))",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady).",
                    "-p_10(Brady).",
                    "p_7(Brady).",
                    "p_8(Brady).",
                    "-p_6(Brady).",
                    "-p_2(Brady).",
                    "p_3(Brady).",
                    "p_1(Brady).",
                    "-p_4(Brady).",
                    "p_5(Brady).",
                    "p_0(Brady).",
                    "p_12(Brady).",
                    "p_14(Brady).",
                    "all x (((p_9(x) | p_19(x)) & -(p_9(x) & p_19(x))) -> p_10(x)).",
                    "p_7(Brady) -> ((p_18(Brady) | p_8(Brady)) & -(p_18(Brady) & p_8(Brady))).",
                    "all x ((p_6(x) | p_16(x)) -> p_2(x)).",
                    "p_3(Brady) -> (-(p_15(Brady) <-> p_19(Brady))).",
                    "-(p_17(Brady) <-> p_18(Brady)).",
                    "(-(p_16(Brady) <-> p_17(Brady))) -> p_13(Brady).",
                    "(-(p_14(Brady) <-> p_1(Brady))) -> p_15(Brady).",
                    "p_4(Brady) -> (p_5(Brady) & p_11(Brady)).",
                    "all x (p_11(x) -> (p_12(x) | p_13(x))).",
                    "p_5(Brady) -> p_12(Brady).",
                    "p_5(Brady) -> p_14(Brady).",
                    "p_5(Brady) -> (p_12(Brady) & p_14(Brady))."
                ],
                "formulas(goals)": [
                    "-((p_12(Brady) -> (-(p_14(Brady) <-> p_0(Brady)))))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_12(Brady)",
                    "p_14(Brady)"
                ],
                "added_rules": [
                    "\u2200x (((p_9(x) \u2228 p_19(x)) \u2227 \u00ac(p_9(x) \u2227 p_19(x))) \u2192 p_10(x))",
                    "p_7(Brady) \u2192 ((p_18(Brady) \u2228 p_8(Brady)) \u2227 \u00ac(p_18(Brady) \u2227 p_8(Brady)))",
                    "p_5(Brady) \u2192 (p_12(Brady) \u2227 p_14(Brady))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_12(Brady)\np_14(Brady)\n\u2200x (((p_9(x) \u2228 p_19(x)) \u2227 \u00ac(p_9(x) \u2227 p_19(x))) \u2192 p_10(x))\np_7(Brady) \u2192 ((p_18(Brady) \u2228 p_8(Brady)) \u2227 \u00ac(p_18(Brady) \u2227 p_8(Brady)))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))\np_5(Brady) \u2192 p_12(Brady)\np_5(Brady) \u2192 p_14(Brady)\np_5(Brady) \u2192 (p_12(Brady) \u2227 p_14(Brady))\np_5(Brady) \u2192 \u00acp_0(Brady)",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady)",
                    "-p_10(Brady)",
                    "p_7(Brady)",
                    "p_8(Brady)",
                    "-p_6(Brady)",
                    "-p_2(Brady)",
                    "p_3(Brady)",
                    "p_1(Brady)",
                    "-p_4(Brady)",
                    "p_5(Brady)",
                    "p_12(Brady)",
                    "p_14(Brady)",
                    "all x (((p_9(x) | p_19(x)) & -(p_9(x) & p_19(x))) -> p_10(x))",
                    "p_7(Brady) -> ((p_18(Brady) | p_8(Brady)) & -(p_18(Brady) & p_8(Brady)))",
                    "all x ((p_6(x) | p_16(x)) -> p_2(x))",
                    "p_3(Brady) -> (-(p_15(Brady) <-> p_19(Brady)))",
                    "-(p_17(Brady) <-> p_18(Brady))",
                    "(-(p_16(Brady) <-> p_17(Brady))) -> p_13(Brady)",
                    "(-(p_14(Brady) <-> p_1(Brady))) -> p_15(Brady)",
                    "p_4(Brady) -> (p_5(Brady) & p_11(Brady))",
                    "all x (p_11(x) -> (p_12(x) | p_13(x)))",
                    "p_5(Brady) -> p_12(Brady)",
                    "p_5(Brady) -> p_14(Brady)",
                    "p_5(Brady) -> (p_12(Brady) & p_14(Brady))",
                    "p_5(Brady) -> -p_0(Brady)"
                ],
                "formulas(goals)": [
                    "p_12(Brady) -> (-(p_14(Brady) <-> p_0(Brady)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Brady)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Brady) \u2192 \u00acp_0(Brady)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_12(Brady)\np_14(Brady)\n\u2200x (((p_9(x) \u2228 p_19(x)) \u2227 \u00ac(p_9(x) \u2227 p_19(x))) \u2192 p_10(x))\np_7(Brady) \u2192 ((p_18(Brady) \u2228 p_8(Brady)) \u2227 \u00ac(p_18(Brady) \u2227 p_8(Brady)))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))\np_5(Brady) \u2192 p_12(Brady)\np_5(Brady) \u2192 p_14(Brady)\np_5(Brady) \u2192 (p_12(Brady) \u2227 p_14(Brady))\np_5(Brady) \u2192 p_0(Brady)",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady)",
                    "-p_10(Brady)",
                    "p_7(Brady)",
                    "p_8(Brady)",
                    "-p_6(Brady)",
                    "-p_2(Brady)",
                    "p_3(Brady)",
                    "p_1(Brady)",
                    "-p_4(Brady)",
                    "p_5(Brady)",
                    "p_12(Brady)",
                    "p_14(Brady)",
                    "all x (((p_9(x) | p_19(x)) & -(p_9(x) & p_19(x))) -> p_10(x))",
                    "p_7(Brady) -> ((p_18(Brady) | p_8(Brady)) & -(p_18(Brady) & p_8(Brady)))",
                    "all x ((p_6(x) | p_16(x)) -> p_2(x))",
                    "p_3(Brady) -> (- (p_15(Brady) <-> p_19(Brady)))",
                    "(- (p_17(Brady) <-> p_18(Brady)))",
                    "(- (p_16(Brady) <-> p_17(Brady))) -> p_13(Brady)",
                    "(- (p_14(Brady) <-> p_1(Brady))) -> p_15(Brady)",
                    "p_4(Brady) -> (p_5(Brady) & p_11(Brady))",
                    "all x (p_11(x) -> (p_12(x) | p_13(x)))",
                    "p_5(Brady) -> p_12(Brady)",
                    "p_5(Brady) -> p_14(Brady)",
                    "p_5(Brady) -> (p_12(Brady) & p_14(Brady))",
                    "p_5(Brady) -> p_0(Brady)"
                ],
                "formulas(goals)": [
                    "- (p_12(Brady) -> (- (p_14(Brady) <-> p_0(Brady))))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Brady) \u2192 \u00acp_0(Brady)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Brady) \u2192 p_0(Brady)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_12(Brady)\np_14(Brady)\n\u2200x (((p_9(x) \u2228 p_19(x)) \u2227 \u00ac(p_9(x) \u2227 p_19(x))) \u2192 p_10(x))\np_7(Brady) \u2192 ((p_18(Brady) \u2228 p_8(Brady)) \u2227 \u00ac(p_18(Brady) \u2227 p_8(Brady)))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))\np_5(Brady) \u2192 p_12(Brady)\np_5(Brady) \u2192 p_14(Brady)\np_5(Brady) \u2192 (p_12(Brady) \u2227 p_14(Brady))\np_5(Brady) \u2192 \u00acp_0(Brady)",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady)",
                    "-p_10(Brady)",
                    "p_7(Brady)",
                    "p_8(Brady)",
                    "-p_6(Brady)",
                    "-p_2(Brady)",
                    "p_3(Brady)",
                    "p_1(Brady)",
                    "-p_4(Brady)",
                    "p_5(Brady)",
                    "p_12(Brady)",
                    "p_14(Brady)",
                    "all x (((p_9(x) | p_19(x)) & -(p_9(x) & p_19(x))) -> p_10(x))",
                    "p_7(Brady) -> ((p_18(Brady) | p_8(Brady)) & -(p_18(Brady) & p_8(Brady)))",
                    "all x ((p_6(x) | p_16(x)) -> p_2(x))",
                    "p_3(Brady) -> (-(p_15(Brady) <-> p_19(Brady)))",
                    "-(p_17(Brady) <-> p_18(Brady))",
                    "(-(p_16(Brady) <-> p_17(Brady))) -> p_13(Brady)",
                    "(-(p_14(Brady) <-> p_1(Brady))) -> p_15(Brady)",
                    "p_4(Brady) -> (p_5(Brady) & p_11(Brady))",
                    "all x (p_11(x) -> (p_12(x) | p_13(x)))",
                    "p_5(Brady) -> p_12(Brady)",
                    "p_5(Brady) -> p_14(Brady)",
                    "p_5(Brady) -> (p_12(Brady) & p_14(Brady))",
                    "p_5(Brady) -> -p_0(Brady)"
                ],
                "formulas(goals)": [
                    "p_12(Brady) -> (-(p_14(Brady) <-> p_0(Brady)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Brady) \u2192 p_0(Brady)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Brady) \u2192 \u00acp_0(Brady)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_9(Brady)\n\u00acp_10(Brady)\np_7(Brady)\np_8(Brady)\n\u00acp_6(Brady)\n\u00acp_2(Brady)\np_3(Brady)\np_1(Brady)\n\u00acp_4(Brady)\np_5(Brady)\np_12(Brady)\np_14(Brady)\n\u2200x (((p_9(x) \u2228 p_19(x)) \u2227 \u00ac(p_9(x) \u2227 p_19(x))) \u2192 p_10(x))\np_7(Brady) \u2192 ((p_18(Brady) \u2228 p_8(Brady)) \u2227 \u00ac(p_18(Brady) \u2227 p_8(Brady)))\n\u2200x ((p_6(x) \u2228 p_16(x)) \u2192 p_2(x))\np_3(Brady) \u2192 (p_15(Brady) \u2295 p_19(Brady))\np_17(Brady) \u2295 p_18(Brady)\n(p_16(Brady) \u2295 p_17(Brady)) \u2192 p_13(Brady)\n(p_14(Brady) \u2295 p_1(Brady)) \u2192 p_15(Brady)\np_4(Brady) \u2192 (p_5(Brady) \u2227 p_11(Brady))\n\u2200x (p_11(x) \u2192 (p_12(x) \u2228 p_13(x)))\np_5(Brady) \u2192 p_12(Brady)\np_5(Brady) \u2192 p_14(Brady)\np_5(Brady) \u2192 (p_12(Brady) \u2227 p_14(Brady))\np_5(Brady) \u2192 p_0(Brady)",
            "Initial Goal": "p_12(Brady) \u2192 (p_14(Brady) \u2295 p_0(Brady))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_9(Brady)",
                    "-p_10(Brady)",
                    "p_7(Brady)",
                    "p_8(Brady)",
                    "-p_6(Brady)",
                    "-p_2(Brady)",
                    "p_3(Brady)",
                    "p_1(Brady)",
                    "-p_4(Brady)",
                    "p_5(Brady)",
                    "p_12(Brady)",
                    "p_14(Brady)",
                    "all x (((p_9(x) | p_19(x)) & (-p_9(x) | -p_19(x))) -> p_10(x))",
                    "p_7(Brady) -> ((p_18(Brady) | p_8(Brady)) & (-p_18(Brady) | -p_8(Brady)))",
                    "all x ((p_6(x) | p_16(x)) -> p_2(x))",
                    "p_3(Brady) -> (-p_15(Brady) & -p_19(Brady) | p_15(Brady) & p_19(Brady))",
                    "(-p_17(Brady) & -p_18(Brady)) | (p_17(Brady) & p_18(Brady))",
                    "(-p_16(Brady) & -p_17(Brady)) | (p_16(Brady) & p_17(Brady)) -> p_13(Brady)",
                    "(-p_14(Brady) & -p_1(Brady)) | (p_14(Brady) & p_1(Brady)) -> p_15(Brady)",
                    "p_4(Brady) -> (p_5(Brady) & p_11(Brady))",
                    "all x (p_11(x) -> (p_12(x) | p_13(x)))",
                    "p_5(Brady) -> p_12(Brady)",
                    "p_5(Brady) -> p_14(Brady)",
                    "p_5(Brady) -> (p_12(Brady) & p_14(Brady))",
                    "p_5(Brady) -> p_0(Brady)"
                ],
                "formulas(goals)": [
                    "-(-p_12(Brady) | (-(p_14(Brady) <-> p_0(Brady))))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Brady) \u2192 \u00acp_0(Brady)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Brady) \u2192 p_0(Brady)"
                ]
            }
        }
    ]
}