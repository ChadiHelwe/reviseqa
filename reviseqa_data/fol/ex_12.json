{
    "background_story": "Karter was an enormous blue whale, measuring over 100 feet in length and weighing hundreds of tons. He roamed the vast oceans, his massive body undulating through the waves with incredible grace. Despite his enormous size, Karter was a gentle giant, feeding on tiny krill and small fish. His enormous voice could be heard for miles, a low rumble that resonated through the water. Karter's enormity also brought him great strength, allowing him to breach the surface with incredible force, creating massive splashes that could be seen from miles away. As he swam through the ocean, his enormous presence commanded respect from all the other sea creatures, who looked up to him as a symbol of power and majesty.",
    "predicates": [
        {
            "id": 0,
            "name": "commands_respect"
        },
        {
            "id": 1,
            "name": "is_fast"
        },
        {
            "id": 2,
            "name": "eats_krill"
        },
        {
            "id": 3,
            "name": "has_sonar"
        },
        {
            "id": 4,
            "name": "is_mammal"
        },
        {
            "id": 5,
            "name": "lives_deep"
        },
        {
            "id": 6,
            "name": "large"
        },
        {
            "id": 7,
            "name": "gentle"
        },
        {
            "id": 8,
            "name": "powerful"
        },
        {
            "id": 9,
            "name": "swims_deep"
        },
        {
            "id": 10,
            "name": "has_fins"
        },
        {
            "id": 11,
            "name": "dives_long"
        },
        {
            "id": 12,
            "name": "has_tail"
        },
        {
            "id": 13,
            "name": "has_blubber"
        },
        {
            "id": 14,
            "name": "matures_slowly"
        },
        {
            "id": 15,
            "name": "lives_long"
        },
        {
            "id": 16,
            "name": "sings_loud"
        },
        {
            "id": 17,
            "name": "migrates_far"
        },
        {
            "id": 18,
            "name": "has_lung"
        },
        {
            "id": 19,
            "name": "conserves_oxygen"
        },
        {
            "id": 20,
            "name": "lives_ocean"
        },
        {
            "id": 21,
            "name": "has_scales"
        },
        {
            "id": 22,
            "name": "has_dorsal"
        },
        {
            "id": 23,
            "name": "keeps_warm"
        }
    ],
    "subject_name": "Karter",
    "subject_category": "whale",
    "keyword": "enormous",
    "all_facts": [
        {
            "id": 0,
            "subject": "Karter",
            "text": "Karter does not command respect.",
            "fol": "\u00acp_0(Karter)",
            "str_fol": "\u00accommands_respect(Karter)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Karter",
            "text": "Karter is fast.",
            "fol": "p_1(Karter)",
            "str_fol": "is_fast(Karter)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Karter",
            "text": "Karter does not eat krill.",
            "fol": "\u00acp_2(Karter)",
            "str_fol": "\u00aceats_krill(Karter)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Karter",
            "text": "Karter has sonar.",
            "fol": "p_3(Karter)",
            "str_fol": "has_sonar(Karter)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Karter",
            "text": "Karter is not a mammal.",
            "fol": "\u00acp_4(Karter)",
            "str_fol": "\u00acis_mammal(Karter)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Karter",
            "text": "Karter lives in deep water.",
            "fol": "p_5(Karter)",
            "str_fol": "lives_deep(Karter)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Karter",
            "text": "Karter does not have blubber.",
            "fol": "\u00acp_13(Karter)",
            "str_fol": "\u00achas_blubber(Karter)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Karter",
            "text": "Karter does not have a tail.",
            "fol": "\u00acp_12(Karter)",
            "str_fol": "\u00achas_tail(Karter)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Karter",
            "text": "Karter has fins.",
            "fol": "p_10(Karter)",
            "str_fol": "has_fins(Karter)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Karter",
            "text": "Karter swims deep.",
            "fol": "p_9(Karter)",
            "str_fol": "swims_deep(Karter)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Karter",
            "text": "Karter is not gentle.",
            "fol": "\u00acp_7(Karter)",
            "str_fol": "\u00acgentle(Karter)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Karter",
            "text": "Karter is large.",
            "fol": "p_6(Karter)",
            "str_fol": "large(Karter)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Karter",
            "text": "Karter is powerful.",
            "fol": "p_8(Karter)",
            "str_fol": "powerful(Karter)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Karter",
            "text": "Karter lives in deep water.",
            "fol": "p_5(Karter)",
            "str_fol": "lives_deep(Karter)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Karter",
            "text": "Karter is not a mammal.",
            "fol": "\u00acp_4(Karter)",
            "str_fol": "\u00acis_mammal(Karter)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Karter",
            "text": "Karter has sonar.",
            "fol": "p_3(Karter)",
            "str_fol": "has_sonar(Karter)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Karter",
            "text": "Karter does not eat krill.",
            "fol": "\u00acp_2(Karter)",
            "str_fol": "\u00aceats_krill(Karter)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Karter",
            "text": "Karter is fast.",
            "fol": "p_1(Karter)",
            "str_fol": "is_fast(Karter)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Karter",
            "text": "Karter does not command respect.",
            "fol": "\u00acp_0(Karter)",
            "str_fol": "\u00accommands_respect(Karter)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "Karter either lives in deep water or has blubber, but not both.",
            "fol": "p_5(Karter) \u2295 p_13(Karter)",
            "str_fol": "lives_deep(Karter) \u2295 has_blubber(Karter)"
        },
        {
            "id": 6,
            "text": "If Karter either has blubber or has a tail (but not both), then he is a mammal.",
            "fol": "(p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter)",
            "str_fol": "(has_blubber(Karter) \u2295 has_tail(Karter)) \u2192 is_mammal(Karter)"
        },
        {
            "id": 5,
            "text": "Every whale has a tail or has fins.",
            "fol": "\u2200x (p_12(x) \u2228 p_10(x))",
            "str_fol": "\u2200x (has_tail(x) \u2228 has_fins(x))"
        },
        {
            "id": 4,
            "text": "If Karter dives for a long time, then he either has sonar or eats krill, but not both.",
            "fol": "p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter))",
            "str_fol": "dives_long(Karter) \u2192 (has_sonar(Karter) \u2295 eats_krill(Karter))"
        },
        {
            "id": 3,
            "text": "Any whale that has fins or dives for a long time can swim deep.",
            "fol": "\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((has_fins(x) \u2228 dives_long(x)) \u2192 swims_deep(x))"
        },
        {
            "id": 2,
            "text": "Karter is either gentle or fast, but not both.",
            "fol": "p_7(Karter) \u2295 p_1(Karter)",
            "str_fol": "gentle(Karter) \u2295 is_fast(Karter)"
        },
        {
            "id": 1,
            "text": "If Karter either swims deep or is large (but not both), then he commands respect.",
            "fol": "(p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter)",
            "str_fol": "(swims_deep(Karter) \u2295 large(Karter)) \u2192 commands_respect(Karter)"
        },
        {
            "id": 0,
            "text": "For all whales, if a whale is large, then it is either gentle or powerful (or both).",
            "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (large(x) \u2192 (gentle(x) \u2228 powerful(x)))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Karter",
            "text": "Karter lives in deep water.",
            "fol": "p_5(Karter)",
            "str_fol": "lives_deep(Karter)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Karter",
            "text": "Karter is not a mammal.",
            "fol": "\u00acp_4(Karter)",
            "str_fol": "\u00acis_mammal(Karter)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Karter",
            "text": "Karter has sonar.",
            "fol": "p_3(Karter)",
            "str_fol": "has_sonar(Karter)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Karter",
            "text": "Karter does not eat krill.",
            "fol": "\u00acp_2(Karter)",
            "str_fol": "\u00aceats_krill(Karter)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Karter",
            "text": "Karter is fast.",
            "fol": "p_1(Karter)",
            "str_fol": "is_fast(Karter)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Karter",
            "text": "Karter does not command respect.",
            "fol": "\u00acp_0(Karter)",
            "str_fol": "\u00accommands_respect(Karter)",
            "negation": true
        },
        {
            "id": 7,
            "text": "Karter either lives in deep water or has blubber, but not both.",
            "fol": "p_5(Karter) \u2295 p_13(Karter)",
            "str_fol": "lives_deep(Karter) \u2295 has_blubber(Karter)"
        },
        {
            "id": 6,
            "text": "If Karter either has blubber or has a tail (but not both), then he is a mammal.",
            "fol": "(p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter)",
            "str_fol": "(has_blubber(Karter) \u2295 has_tail(Karter)) \u2192 is_mammal(Karter)"
        },
        {
            "id": 5,
            "text": "Every whale has a tail or has fins.",
            "fol": "\u2200x (p_12(x) \u2228 p_10(x))",
            "str_fol": "\u2200x (has_tail(x) \u2228 has_fins(x))"
        },
        {
            "id": 4,
            "text": "If Karter dives for a long time, then he either has sonar or eats krill, but not both.",
            "fol": "p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter))",
            "str_fol": "dives_long(Karter) \u2192 (has_sonar(Karter) \u2295 eats_krill(Karter))"
        },
        {
            "id": 3,
            "text": "Any whale that has fins or dives for a long time can swim deep.",
            "fol": "\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((has_fins(x) \u2228 dives_long(x)) \u2192 swims_deep(x))"
        },
        {
            "id": 2,
            "text": "Karter is either gentle or fast, but not both.",
            "fol": "p_7(Karter) \u2295 p_1(Karter)",
            "str_fol": "gentle(Karter) \u2295 is_fast(Karter)"
        },
        {
            "id": 1,
            "text": "If Karter either swims deep or is large (but not both), then he commands respect.",
            "fol": "(p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter)",
            "str_fol": "(swims_deep(Karter) \u2295 large(Karter)) \u2192 commands_respect(Karter)"
        },
        {
            "id": 0,
            "text": "For all whales, if a whale is large, then it is either gentle or powerful (or both).",
            "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (large(x) \u2192 (gentle(x) \u2228 powerful(x)))"
        }
    ],
    "context_fol": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\np_5(Karter) \u2295 p_13(Karter)\n(p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter)\n\u2200x (p_12(x) \u2228 p_10(x))\np_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\np_7(Karter) \u2295 p_1(Karter)\n(p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))",
    "conclusion": {
        "id": 12,
        "subject": "Karter",
        "text": "Karter is powerful.",
        "fol": "p_8(Karter)",
        "str_fol": "powerful(Karter)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_8(Karter)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Karter",
                    "text": "Karter lives in deep water.",
                    "fol": "p_5(Karter)",
                    "str_fol": "lives_deep(Karter)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Karter either lives in deep water or has blubber, but not both.",
                    "fol": "p_5(Karter) \u2295 p_13(Karter)",
                    "str_fol": "lives_deep(Karter) \u2295 has_blubber(Karter)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Karter",
                "text": "Karter does not have blubber.",
                "fol": "\u00acp_13(Karter)",
                "str_fol": "\u00achas_blubber(Karter)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Karter",
                    "text": "Karter does not have blubber.",
                    "fol": "\u00acp_13(Karter)",
                    "str_fol": "\u00achas_blubber(Karter)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Karter",
                    "text": "Karter is not a mammal.",
                    "fol": "\u00acp_4(Karter)",
                    "str_fol": "\u00acis_mammal(Karter)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Karter either has blubber or has a tail (but not both), then he is a mammal.",
                    "fol": "(p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter)",
                    "str_fol": "(has_blubber(Karter) \u2295 has_tail(Karter)) \u2192 is_mammal(Karter)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Karter",
                "text": "Karter does not have a tail.",
                "fol": "\u00acp_12(Karter)",
                "str_fol": "\u00achas_tail(Karter)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Karter",
                    "text": "Karter does not have a tail.",
                    "fol": "\u00acp_12(Karter)",
                    "str_fol": "\u00achas_tail(Karter)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Every whale has a tail or has fins.",
                    "fol": "\u2200x (p_12(x) \u2228 p_10(x))",
                    "str_fol": "\u2200x (has_tail(x) \u2228 has_fins(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Karter",
                "text": "Karter has fins.",
                "fol": "p_10(Karter)",
                "str_fol": "has_fins(Karter)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Karter",
                    "text": "Karter has sonar.",
                    "fol": "p_3(Karter)",
                    "str_fol": "has_sonar(Karter)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Karter",
                    "text": "Karter does not eat krill.",
                    "fol": "\u00acp_2(Karter)",
                    "str_fol": "\u00aceats_krill(Karter)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Karter dives for a long time, then he either has sonar or eats krill, but not both.",
                    "fol": "p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter))",
                    "str_fol": "dives_long(Karter) \u2192 (has_sonar(Karter) \u2295 eats_krill(Karter))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Karter",
                    "text": "Karter has fins.",
                    "fol": "p_10(Karter)",
                    "str_fol": "has_fins(Karter)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Any whale that has fins or dives for a long time can swim deep.",
                    "fol": "\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((has_fins(x) \u2228 dives_long(x)) \u2192 swims_deep(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Karter",
                "text": "Karter swims deep.",
                "fol": "p_9(Karter)",
                "str_fol": "swims_deep(Karter)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Karter",
                    "text": "Karter is fast.",
                    "fol": "p_1(Karter)",
                    "str_fol": "is_fast(Karter)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Karter is either gentle or fast, but not both.",
                    "fol": "p_7(Karter) \u2295 p_1(Karter)",
                    "str_fol": "gentle(Karter) \u2295 is_fast(Karter)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Karter",
                "text": "Karter is not gentle.",
                "fol": "\u00acp_7(Karter)",
                "str_fol": "\u00acgentle(Karter)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Karter",
                    "text": "Karter swims deep.",
                    "fol": "p_9(Karter)",
                    "str_fol": "swims_deep(Karter)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Karter",
                    "text": "Karter does not command respect.",
                    "fol": "\u00acp_0(Karter)",
                    "str_fol": "\u00accommands_respect(Karter)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Karter either swims deep or is large (but not both), then he commands respect.",
                    "fol": "(p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter)",
                    "str_fol": "(swims_deep(Karter) \u2295 large(Karter)) \u2192 commands_respect(Karter)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Karter",
                "text": "Karter is large.",
                "fol": "p_6(Karter)",
                "str_fol": "large(Karter)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Karter",
                    "text": "Karter is large.",
                    "fol": "p_6(Karter)",
                    "str_fol": "large(Karter)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Karter",
                    "text": "Karter is not gentle.",
                    "fol": "\u00acp_7(Karter)",
                    "str_fol": "\u00acgentle(Karter)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all whales, if a whale is large, then it is either gentle or powerful (or both).",
                    "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))",
                    "str_fol": "\u2200x (large(x) \u2192 (gentle(x) \u2228 powerful(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Karter",
                "text": "Karter is powerful.",
                "fol": "p_8(Karter)",
                "str_fol": "powerful(Karter)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_5(Karter) <-> p_13(Karter)).  [assumption].\n2 -(p_13(Karter) <-> p_12(Karter)) -> p_4(Karter).  [assumption].\n3 (all x (p_12(x) | p_10(x))).  [assumption].\n5 (all x (p_10(x) | p_11(x) -> p_9(x))).  [assumption].\n6 -(p_7(Karter) <-> p_1(Karter)).  [assumption].\n7 -(p_9(Karter) <-> p_6(Karter)) -> p_0(Karter).  [assumption].\n8 (all x (p_6(x) -> p_7(x) | p_8(x))).  [assumption].\n9 p_8(Karter).  [goal].\n10 -p_5(Karter) | -p_13(Karter).  [clausify(1)].\n11 p_5(Karter).  [assumption].\n14 -p_4(Karter).  [assumption].\n15 p_13(Karter) | -p_12(Karter) | p_4(Karter).  [clausify(2)].\n19 -p_7(Karter) | -p_1(Karter).  [clausify(6)].\n20 p_1(Karter).  [assumption].\n22 -p_9(Karter) | p_6(Karter) | p_0(Karter).  [clausify(7)].\n23 -p_0(Karter).  [assumption].\n25 p_13(Karter) | -p_12(Karter).  [resolve(15,c,14,a)].\n26 p_12(x) | p_10(x).  [clausify(3)].\n27 p_13(Karter) | p_10(Karter).  [resolve(25,b,26,a)].\n28 -p_10(x) | p_9(x).  [clausify(5)].\n29 -p_9(Karter) | p_6(Karter).  [resolve(22,c,23,a)].\n30 -p_6(x) | p_7(x) | p_8(x).  [clausify(8)].\n32 -p_9(Karter) | p_7(Karter) | p_8(Karter).  [resolve(29,b,30,a)].\n33 -p_8(Karter).  [deny(9)].\n34 p_13(Karter) | p_9(Karter).  [resolve(27,b,28,a)].\n35 -p_13(Karter).  [resolve(10,a,11,a)].\n36 -p_9(Karter) | p_7(Karter).  [resolve(32,c,33,a)].\n37 -p_7(Karter).  [resolve(19,b,20,a)].\n38 -p_9(Karter).  [resolve(36,b,37,a)].\n39 p_9(Karter).  [resolve(34,a,35,a)].\n40 $F.  [resolve(38,a,39,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_5(Karter) \u2194 p_13(Karter))\n(p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter)\n\u2200x (p_12(x) \u2228 p_10(x))\np_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\np_7(Karter) \u2295 p_1(Karter)\n(p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_13(Karter) \u2192 \u00acp_9(Karter)\np_13(Karter) \u2192 \u00acp_8(Karter)",
            "Initial Goal": "p_8(Karter)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter)",
                    "-p_4(Karter)",
                    "p_3(Karter)",
                    "-p_2(Karter)",
                    "p_1(Karter)",
                    "-p_0(Karter)",
                    "(p_5(Karter) <-> p_13(Karter))",
                    "(-(p_13(Karter) <-> p_12(Karter))) -> p_4(Karter)",
                    "all x (p_12(x) | p_10(x))",
                    "p_11(Karter) -> (-(p_3(Karter) <-> p_2(Karter)))",
                    "all x ((p_10(x) | p_11(x)) -> p_9(x))",
                    "-(p_7(Karter) <-> p_1(Karter))",
                    "(-(p_9(Karter) <-> p_6(Karter))) -> p_0(Karter)",
                    "all x (p_6(x) -> (p_7(x) | p_8(x)))",
                    "p_13(Karter) -> -p_9(Karter)",
                    "p_13(Karter) -> -p_8(Karter)"
                ],
                "formulas(goals)": [
                    "-p_8(Karter)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00ac(p_5(Karter) \u2295 p_13(Karter))",
                    "p_13(Karter) \u2192 \u00acp_9(Karter)",
                    "p_13(Karter) \u2192 \u00acp_8(Karter)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_5(Karter) \u2194 p_13(Karter))\n((p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter))\n\u2200x (p_12(x) \u2228 p_10(x))\n(p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter)))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\n(p_7(Karter) \u2295 p_1(Karter))\n((p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\n(p_13(Karter) \u2192 \u00acp_9(Karter))\n(p_13(Karter) \u2192 p_8(Karter))",
            "Initial Goal": "p_8(Karter)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter)",
                    "-p_4(Karter)",
                    "p_3(Karter)",
                    "-p_2(Karter)",
                    "p_1(Karter)",
                    "-p_0(Karter)",
                    "(p_5(Karter) <-> p_13(Karter))",
                    "(-(p_13(Karter) <-> p_12(Karter))) -> p_4(Karter)",
                    "(all x (p_12(x) | p_10(x)))",
                    "p_11(Karter) -> (-(p_3(Karter) <-> p_2(Karter)))",
                    "(all x ((p_10(x) | p_11(x)) -> p_9(x)))",
                    "(-(p_7(Karter) <-> p_1(Karter)))",
                    "(-(p_9(Karter) <-> p_6(Karter))) -> p_0(Karter)",
                    "(all x (p_6(x) -> (p_7(x) | p_8(x))))",
                    "p_13(Karter) -> -p_9(Karter)",
                    "p_13(Karter) -> p_8(Karter)"
                ],
                "formulas(goals)": [
                    "p_8(Karter)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_13(Karter) \u2192 \u00acp_8(Karter))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_13(Karter) \u2192 p_8(Karter))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_5(Karter) \u2194 p_13(Karter))\n((p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter))\n\u2200x (p_12(x) \u2228 p_10(x))\n(p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter)))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\n(p_7(Karter) \u2295 p_1(Karter))\n((p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\n(p_13(Karter) \u2192 \u00acp_9(Karter))\n(p_13(Karter) \u2192 p_8(Karter))\n(\u00acp_13(Karter) \u2228 p_8(Karter))\n(p_9(Karter) \u2192 \u00acp_13(Karter))",
            "Initial Goal": "p_8(Karter)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter)",
                    "-p_4(Karter)",
                    "p_3(Karter)",
                    "-p_2(Karter)",
                    "p_1(Karter)",
                    "-p_0(Karter)",
                    "(p_5(Karter) <-> p_13(Karter))",
                    "(-(p_13(Karter) <-> p_12(Karter)) -> p_4(Karter))",
                    "all x (p_12(x) | p_10(x))",
                    "(p_11(Karter) -> -(p_3(Karter) <-> p_2(Karter)))",
                    "all x ((p_10(x) | p_11(x)) -> p_9(x))",
                    "-(p_7(Karter) <-> p_1(Karter))",
                    "(-(p_9(Karter) <-> p_6(Karter)) -> p_0(Karter))",
                    "all x (p_6(x) -> (p_7(x) | p_8(x)))",
                    "(p_13(Karter) -> -p_9(Karter))",
                    "(p_13(Karter) -> p_8(Karter))",
                    "(-p_13(Karter) | p_8(Karter))",
                    "(p_9(Karter) -> -p_13(Karter))"
                ],
                "formulas(goals)": [
                    "p_8(Karter)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(\u00acp_13(Karter) \u2228 p_8(Karter))",
                    "(p_9(Karter) \u2192 \u00acp_13(Karter))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_5(Karter) \u2194 p_13(Karter))\n((p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter))\n\u2200x (p_12(x) \u2228 p_10(x))\n(p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter)))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\n(p_7(Karter) \u2295 p_1(Karter))\n((p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\n(p_13(Karter) \u2192 \u00acp_9(Karter))\n(p_13(Karter) \u2192 \u00acp_8(Karter))\n(\u00acp_13(Karter) \u2228 \u00acp_8(Karter))\n(p_9(Karter) \u2192 \u00acp_13(Karter))",
            "Initial Goal": "p_8(Karter)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter)",
                    "-p_4(Karter)",
                    "p_3(Karter)",
                    "-p_2(Karter)",
                    "p_1(Karter)",
                    "-p_0(Karter)",
                    "p_5(Karter) <-> p_13(Karter)",
                    "(-(p_13(Karter) <-> p_12(Karter))) -> p_4(Karter)",
                    "all x (p_12(x) | p_10(x))",
                    "p_11(Karter) -> (-(p_3(Karter) <-> p_2(Karter)))",
                    "all x ((p_10(x) | p_11(x)) -> p_9(x))",
                    "-(p_7(Karter) <-> p_1(Karter))",
                    "(-(p_9(Karter) <-> p_6(Karter))) -> p_0(Karter)",
                    "all x (p_6(x) -> (p_7(x) | p_8(x)))",
                    "p_13(Karter) -> -p_9(Karter)",
                    "p_13(Karter) -> -p_8(Karter)",
                    "(-p_13(Karter) | -p_8(Karter))",
                    "p_9(Karter) -> -p_13(Karter)"
                ],
                "formulas(goals)": [
                    "-p_8(Karter)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_13(Karter) \u2192 \u00acp_8(Karter))",
                    "(\u00acp_13(Karter) \u2228 \u00acp_8(Karter))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_13(Karter) \u2295 p_9(Karter))\n(p_13(Karter) \u2295 p_8(Karter))\n(\u00acp_13(Karter) \u2228 \u00acp_8(Karter))\n(p_9(Karter) \u2295 p_13(Karter))\n((p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter))\n\u2200x (p_12(x) \u2228 p_10(x))\n(p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter)))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\n(p_7(Karter) \u2295 p_1(Karter))\n((p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\n(p_5(Karter) \u2192 p_8(Karter))",
            "Initial Goal": "p_8(Karter)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter)",
                    "-p_4(Karter)",
                    "p_3(Karter)",
                    "-p_2(Karter)",
                    "p_1(Karter)",
                    "-p_0(Karter)",
                    "-(p_13(Karter) <-> p_9(Karter))",
                    "-(p_13(Karter) <-> p_8(Karter))",
                    "(-p_13(Karter) | -p_8(Karter))",
                    "-(p_9(Karter) <-> p_13(Karter))",
                    "(-(p_13(Karter) <-> p_12(Karter)) -> p_4(Karter))",
                    "all x (p_12(x) | p_10(x))",
                    "(p_11(Karter) -> -(p_3(Karter) <-> p_2(Karter)))",
                    "all x ((p_10(x) | p_11(x)) -> p_9(x))",
                    "-(p_7(Karter) <-> p_1(Karter))",
                    "(-(p_9(Karter) <-> p_6(Karter)) -> p_0(Karter))",
                    "all x (p_6(x) -> (p_7(x) | p_8(x)))",
                    "(p_5(Karter) -> p_8(Karter))"
                ],
                "formulas(goals)": [
                    "p_8(Karter)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_5(Karter) \u2194 p_13(Karter))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Karter) \u2192 p_8(Karter))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_13(Karter) \u2295 p_9(Karter))\n(p_13(Karter) \u2295 p_8(Karter))\n(\u00acp_13(Karter) \u2228 \u00acp_8(Karter))\n(p_9(Karter) \u2295 p_13(Karter))\n((p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter))\n\u2200x (p_12(x) \u2228 p_10(x))\n(p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter)))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\n(p_7(Karter) \u2295 p_1(Karter))\n((p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\n(p_5(Karter) \u2192 p_8(Karter))\np_8(Karter)\n(\u00acp_5(Karter) \u2228 p_8(Karter))\n(p_13(Karter) \u2228 p_8(Karter))\n\u00acp_13(Karter)",
            "Initial Goal": "p_8(Karter)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter).",
                    "-p_4(Karter).",
                    "p_3(Karter).",
                    "-p_2(Karter).",
                    "p_1(Karter).",
                    "-p_0(Karter).",
                    "-(p_13(Karter) <-> p_9(Karter)).",
                    "-(p_13(Karter) <-> p_8(Karter)).",
                    "(-p_13(Karter) | -p_8(Karter)).",
                    "-(p_9(Karter) <-> p_13(Karter)).",
                    "(-(p_13(Karter) <-> p_12(Karter)) -> p_4(Karter)).",
                    "all x (p_12(x) | p_10(x)).",
                    "(p_11(Karter) -> -(p_3(Karter) <-> p_2(Karter))).",
                    "all x ((p_10(x) | p_11(x)) -> p_9(x)).",
                    "-(p_7(Karter) <-> p_1(Karter)).",
                    "(-(p_9(Karter) <-> p_6(Karter)) -> p_0(Karter)).",
                    "all x (p_6(x) -> (p_7(x) | p_8(x))).",
                    "(p_5(Karter) -> p_8(Karter)).",
                    "p_8(Karter).",
                    "(-p_5(Karter) | p_8(Karter)).",
                    "(p_13(Karter) | p_8(Karter)).",
                    "-p_13(Karter)."
                ],
                "formulas(goals)": [
                    "p_8(Karter)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Karter)",
                    "\u00acp_13(Karter)"
                ],
                "added_rules": [
                    "(\u00acp_5(Karter) \u2228 p_8(Karter))",
                    "(p_13(Karter) \u2228 p_8(Karter))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Karter)\n\u00acp_4(Karter)\np_3(Karter)\n\u00acp_2(Karter)\np_1(Karter)\n\u00acp_0(Karter)\n(p_13(Karter) \u2295 p_8(Karter))\n(\u00acp_13(Karter) \u2228 \u00acp_8(Karter))\n(p_9(Karter) \u2295 p_13(Karter))\n((p_13(Karter) \u2295 p_12(Karter)) \u2192 p_4(Karter))\n\u2200x (p_12(x) \u2228 p_10(x))\n(p_11(Karter) \u2192 (p_3(Karter) \u2295 p_2(Karter)))\n\u2200x ((p_10(x) \u2228 p_11(x)) \u2192 p_9(x))\n(p_7(Karter) \u2295 p_1(Karter))\n((p_9(Karter) \u2295 p_6(Karter)) \u2192 p_0(Karter))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2228 p_8(x)))\n(p_13(Karter) \u2228 p_8(Karter))\np_13(Karter)",
            "Initial Goal": "p_8(Karter)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Karter).",
                    "-p_4(Karter).",
                    "p_3(Karter).",
                    "-p_2(Karter).",
                    "p_1(Karter).",
                    "-p_0(Karter).",
                    "-(p_13(Karter) <-> p_8(Karter)).",
                    "(-p_13(Karter) | -p_8(Karter)).",
                    "-(p_9(Karter) <-> p_13(Karter)).",
                    "(-(p_13(Karter) <-> p_12(Karter)) -> p_4(Karter)).",
                    "all x (p_12(x) | p_10(x)).",
                    "(p_11(Karter) -> -(p_3(Karter) <-> p_2(Karter))).",
                    "all x ((p_10(x) | p_11(x)) -> p_9(x)).",
                    "-(p_7(Karter) <-> p_1(Karter)).",
                    "(-(p_9(Karter) <-> p_6(Karter)) -> p_0(Karter)).",
                    "all x (p_6(x) -> (p_7(x) | p_8(x))).",
                    "(p_13(Karter) | p_8(Karter)).",
                    "p_13(Karter)."
                ],
                "formulas(goals)": [
                    "-p_8(Karter)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_8(Karter)",
                    "\u00acp_13(Karter)"
                ],
                "removed_rules": [
                    "(\u00acp_5(Karter) \u2228 p_8(Karter))"
                ],
                "added_facts": [
                    "p_13(Karter)"
                ],
                "added_rules": []
            }
        }
    ]
}