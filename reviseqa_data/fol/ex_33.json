{
    "background_story": "Peach was a vibrant and lively artist in her youth, known for her breathtaking landscapes and portraits. However, as she aged, she began to struggle with rheumatism, a condition that slowly stiffened her fingers and joints. Despite the pain and stiffness, Peach refused to let her condition define her. She adapted her painting style, using larger brushes and experimenting with new techniques that didn't require fine detail. Her art took on a new, expressive quality, with bold strokes and vivid colors. Peach's journey with rheumatism was not easy, but it inspired a new era of creativity and resilience in her life. She continued to paint, teaching others that even in limitations, there can be newfound beauty and purpose.",
    "predicates": [
        {
            "id": 0,
            "name": "makes_music"
        },
        {
            "id": 1,
            "name": "paint_beautifully"
        },
        {
            "id": 2,
            "name": "fearless"
        },
        {
            "id": 3,
            "name": "dances_freely"
        },
        {
            "id": 4,
            "name": "able_bodied"
        },
        {
            "id": 5,
            "name": "physically_challenged"
        },
        {
            "id": 6,
            "name": "resilient"
        },
        {
            "id": 7,
            "name": "creative"
        },
        {
            "id": 8,
            "name": "writes_stories"
        },
        {
            "id": 9,
            "name": "express_emotions"
        },
        {
            "id": 10,
            "name": "healthy"
        },
        {
            "id": 11,
            "name": "sees_beauty"
        },
        {
            "id": 12,
            "name": "inspired"
        },
        {
            "id": 13,
            "name": "teach_others"
        },
        {
            "id": 14,
            "name": "faces_adversity"
        },
        {
            "id": 15,
            "name": "overcomes_obstacles"
        }
    ],
    "subject_name": "Peach",
    "subject_category": "human",
    "keyword": "rheumatism",
    "all_facts": [
        {
            "id": 0,
            "subject": "Peach",
            "text": "Peach does not make music.",
            "fol": "\u00acp_0(Peach)",
            "str_fol": "\u00acmakes_music(Peach)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Peach",
            "text": "Peach paints beautifully.",
            "fol": "p_1(Peach)",
            "str_fol": "paint_beautifully(Peach)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Peach",
            "text": "Peach is not fearless in her pursuit of art.",
            "fol": "\u00acp_2(Peach)",
            "str_fol": "\u00acfearless(Peach)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Peach",
            "text": "Peach does not dance freely.",
            "fol": "\u00acp_3(Peach)",
            "str_fol": "\u00acdances_freely(Peach)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Peach",
            "text": "Peach expresses emotions.",
            "fol": "p_9(Peach)",
            "str_fol": "express_emotions(Peach)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Peach",
            "text": "Peach is resilient.",
            "fol": "p_6(Peach)",
            "str_fol": "resilient(Peach)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Peach",
            "text": "Peach writes stories.",
            "fol": "p_8(Peach)",
            "str_fol": "writes_stories(Peach)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Peach",
            "text": "Peach is creative.",
            "fol": "p_7(Peach)",
            "str_fol": "creative(Peach)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Peach",
            "text": "Peach is physically challenged.",
            "fol": "p_5(Peach)",
            "str_fol": "physically_challenged(Peach)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Peach",
            "text": "Peach is able-bodied.",
            "fol": "p_4(Peach)",
            "str_fol": "able_bodied(Peach)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Peach",
            "text": "Peach does not dance freely.",
            "fol": "\u00acp_3(Peach)",
            "str_fol": "\u00acdances_freely(Peach)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Peach",
            "text": "Peach is not fearless in her pursuit of art.",
            "fol": "\u00acp_2(Peach)",
            "str_fol": "\u00acfearless(Peach)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Peach",
            "text": "Peach paints beautifully.",
            "fol": "p_1(Peach)",
            "str_fol": "paint_beautifully(Peach)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Peach",
            "text": "Peach does not make music.",
            "fol": "\u00acp_0(Peach)",
            "str_fol": "\u00acmakes_music(Peach)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Peach expresses emotions or dances freely.",
            "fol": "p_9(Peach) \u2228 p_3(Peach)",
            "str_fol": "express_emotions(Peach) \u2228 dances_freely(Peach)"
        },
        {
            "id": 4,
            "text": "A person is either resilient or fearless, but not necessarily both.",
            "fol": "\u2200x (p_6(x) \u2295 p_2(x))",
            "str_fol": "\u2200x (resilient(x) \u2295 fearless(x))"
        },
        {
            "id": 3,
            "text": "If Peach expresses emotions, then she writes stories and paints beautifully.",
            "fol": "p_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))",
            "str_fol": "express_emotions(Peach) \u2192 (writes_stories(Peach) \u2227 paint_beautifully(Peach))"
        },
        {
            "id": 2,
            "text": "If Peach either makes music or writes stories (but not both), then she is creative.",
            "fol": "(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)",
            "str_fol": "(makes_music(Peach) \u2295 writes_stories(Peach)) \u2192 creative(Peach)"
        },
        {
            "id": 1,
            "text": "If Peach is resilient, then she is both creative and physically challenged.",
            "fol": "p_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))",
            "str_fol": "resilient(Peach) \u2192 (creative(Peach) \u2227 physically_challenged(Peach))"
        },
        {
            "id": 0,
            "text": "For every human, they are either able-bodied or physically challenged, but not both.",
            "fol": "\u2200x (p_4(x) \u2295 p_5(x))",
            "str_fol": "\u2200x (able_bodied(x) \u2295 physically_challenged(x))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Peach",
            "text": "Peach does not dance freely.",
            "fol": "\u00acp_3(Peach)",
            "str_fol": "\u00acdances_freely(Peach)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Peach",
            "text": "Peach is not fearless in her pursuit of art.",
            "fol": "\u00acp_2(Peach)",
            "str_fol": "\u00acfearless(Peach)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Peach",
            "text": "Peach paints beautifully.",
            "fol": "p_1(Peach)",
            "str_fol": "paint_beautifully(Peach)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Peach",
            "text": "Peach does not make music.",
            "fol": "\u00acp_0(Peach)",
            "str_fol": "\u00acmakes_music(Peach)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Peach expresses emotions or dances freely.",
            "fol": "p_9(Peach) \u2228 p_3(Peach)",
            "str_fol": "express_emotions(Peach) \u2228 dances_freely(Peach)"
        },
        {
            "id": 4,
            "text": "A person is either resilient or fearless, but not necessarily both.",
            "fol": "\u2200x (p_6(x) \u2295 p_2(x))",
            "str_fol": "\u2200x (resilient(x) \u2295 fearless(x))"
        },
        {
            "id": 3,
            "text": "If Peach expresses emotions, then she writes stories and paints beautifully.",
            "fol": "p_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))",
            "str_fol": "express_emotions(Peach) \u2192 (writes_stories(Peach) \u2227 paint_beautifully(Peach))"
        },
        {
            "id": 2,
            "text": "If Peach either makes music or writes stories (but not both), then she is creative.",
            "fol": "(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)",
            "str_fol": "(makes_music(Peach) \u2295 writes_stories(Peach)) \u2192 creative(Peach)"
        },
        {
            "id": 1,
            "text": "If Peach is resilient, then she is both creative and physically challenged.",
            "fol": "p_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))",
            "str_fol": "resilient(Peach) \u2192 (creative(Peach) \u2227 physically_challenged(Peach))"
        },
        {
            "id": 0,
            "text": "For every human, they are either able-bodied or physically challenged, but not both.",
            "fol": "\u2200x (p_4(x) \u2295 p_5(x))",
            "str_fol": "\u2200x (able_bodied(x) \u2295 physically_challenged(x))"
        }
    ],
    "context_fol": "\u00acp_3(Peach)\n\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\n\u2200x (p_4(x) \u2295 p_5(x))",
    "conclusion": {
        "id": 9,
        "subject": "Peach",
        "text": "Peach is able-bodied.",
        "fol": "p_4(Peach)",
        "str_fol": "able_bodied(Peach)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_4(Peach)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Peach",
                    "text": "Peach does not dance freely.",
                    "fol": "\u00acp_3(Peach)",
                    "str_fol": "\u00acdances_freely(Peach)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Peach expresses emotions or dances freely.",
                    "fol": "p_9(Peach) \u2228 p_3(Peach)",
                    "str_fol": "express_emotions(Peach) \u2228 dances_freely(Peach)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Peach",
                "text": "Peach expresses emotions.",
                "fol": "p_9(Peach)",
                "str_fol": "express_emotions(Peach)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Peach",
                    "text": "Peach is not fearless in her pursuit of art.",
                    "fol": "\u00acp_2(Peach)",
                    "str_fol": "\u00acfearless(Peach)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "A person is either resilient or fearless, but not necessarily both.",
                    "fol": "\u2200x (p_6(x) \u2295 p_2(x))",
                    "str_fol": "\u2200x (resilient(x) \u2295 fearless(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Peach",
                "text": "Peach is resilient.",
                "fol": "p_6(Peach)",
                "str_fol": "resilient(Peach)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Peach",
                    "text": "Peach expresses emotions.",
                    "fol": "p_9(Peach)",
                    "str_fol": "express_emotions(Peach)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Peach",
                    "text": "Peach paints beautifully.",
                    "fol": "p_1(Peach)",
                    "str_fol": "paint_beautifully(Peach)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Peach expresses emotions, then she writes stories and paints beautifully.",
                    "fol": "p_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))",
                    "str_fol": "express_emotions(Peach) \u2192 (writes_stories(Peach) \u2227 paint_beautifully(Peach))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Peach",
                "text": "Peach writes stories.",
                "fol": "p_8(Peach)",
                "str_fol": "writes_stories(Peach)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Peach",
                    "text": "Peach does not make music.",
                    "fol": "\u00acp_0(Peach)",
                    "str_fol": "\u00acmakes_music(Peach)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Peach",
                    "text": "Peach writes stories.",
                    "fol": "p_8(Peach)",
                    "str_fol": "writes_stories(Peach)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Peach either makes music or writes stories (but not both), then she is creative.",
                    "fol": "(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)",
                    "str_fol": "(makes_music(Peach) \u2295 writes_stories(Peach)) \u2192 creative(Peach)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Peach",
                "text": "Peach is creative.",
                "fol": "p_7(Peach)",
                "str_fol": "creative(Peach)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Peach",
                    "text": "Peach is resilient.",
                    "fol": "p_6(Peach)",
                    "str_fol": "resilient(Peach)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Peach",
                    "text": "Peach is creative.",
                    "fol": "p_7(Peach)",
                    "str_fol": "creative(Peach)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Peach is resilient, then she is both creative and physically challenged.",
                    "fol": "p_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))",
                    "str_fol": "resilient(Peach) \u2192 (creative(Peach) \u2227 physically_challenged(Peach))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Peach",
                "text": "Peach is physically challenged.",
                "fol": "p_5(Peach)",
                "str_fol": "physically_challenged(Peach)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Peach",
                    "text": "Peach is physically challenged.",
                    "fol": "p_5(Peach)",
                    "str_fol": "physically_challenged(Peach)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For every human, they are either able-bodied or physically challenged, but not both.",
                    "fol": "\u2200x (p_4(x) \u2295 p_5(x))",
                    "str_fol": "\u2200x (able_bodied(x) \u2295 physically_challenged(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Peach",
                "text": "Peach is able-bodied.",
                "fol": "p_4(Peach)",
                "str_fol": "able_bodied(Peach)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x -(p_6(x) <-> p_2(x))).  [assumption].\n4 p_6(Peach) -> p_7(Peach) & p_5(Peach).  [assumption].\n5 (all x -(p_4(x) <-> p_5(x))).  [assumption].\n6 -p_4(Peach).  [goal].\n9 p_6(x) | p_2(x).  [clausify(1)].\n10 -p_2(Peach).  [assumption].\n17 p_6(Peach).  [resolve(9,b,10,a)].\n19 -p_6(Peach) | p_5(Peach).  [clausify(4)].\n20 -p_4(x) | -p_5(x).  [clausify(5)].\n22 p_4(Peach).  [deny(6)].\n25 -p_5(Peach).  [resolve(22,a,20,a)].\n26 p_5(Peach).  [resolve(17,a,19,a)].\n27 $F.  [resolve(25,a,26,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Peach)\n\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_9(Peach) \u2192 p_4(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Peach)",
                    "-p_2(Peach)",
                    "p_1(Peach)",
                    "-p_0(Peach)",
                    "p_9(Peach) | p_3(Peach)",
                    "all x (-(p_6(x) <-> p_2(x)))",
                    "p_9(Peach) -> (p_8(Peach) & p_1(Peach))",
                    "(-(p_0(Peach) <-> p_8(Peach))) -> p_7(Peach)",
                    "p_6(Peach) -> (p_7(Peach) & p_5(Peach))",
                    "p_9(Peach) -> p_4(Peach)"
                ],
                "formulas(goals)": [
                    "p_4(Peach)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2295 p_5(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Peach) \u2192 p_4(Peach)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_9(Peach) \u2192 p_4(Peach)\np_3(Peach)\np_3(Peach) \u2192 \u00acp_4(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_2(Peach)",
                    "p_1(Peach)",
                    "\u00acp_0(Peach)",
                    "p_9(Peach) | p_3(Peach)",
                    "all x (-(p_6(x) <-> p_2(x)))",
                    "p_9(Peach) -> (p_8(Peach) & p_1(Peach))",
                    "(-(p_0(Peach) <-> p_8(Peach))) -> p_7(Peach)",
                    "p_6(Peach) -> (p_7(Peach) & p_5(Peach))",
                    "p_9(Peach) -> p_4(Peach)",
                    "p_3(Peach)",
                    "p_3(Peach) -> \u00acp_4(Peach)"
                ],
                "formulas(goals)": [
                    "\u00acp_4(Peach)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Peach)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_3(Peach)"
                ],
                "added_rules": [
                    "p_3(Peach) \u2192 \u00acp_4(Peach)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_9(Peach) \u2192 p_4(Peach)\np_3(Peach)\np_3(Peach) \u2192 p_9(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Peach)",
                    "p_1(Peach)",
                    "-p_0(Peach)",
                    "p_9(Peach) | p_3(Peach)",
                    "all x (-(p_6(x) <-> p_2(x)))",
                    "p_9(Peach) -> (p_8(Peach) & p_1(Peach))",
                    "(-(p_0(Peach) <-> p_8(Peach))) -> p_7(Peach)",
                    "p_6(Peach) -> (p_7(Peach) & p_5(Peach))",
                    "p_9(Peach) -> p_4(Peach)",
                    "p_3(Peach)",
                    "p_3(Peach) -> p_9(Peach)"
                ],
                "formulas(goals)": [
                    "p_4(Peach)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Peach) \u2192 \u00acp_4(Peach)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Peach) \u2192 p_9(Peach)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_9(Peach) \u2192 p_4(Peach)\np_3(Peach)\np_3(Peach) \u2192 p_9(Peach)\np_3(Peach) \u2192 p_4(Peach)\np_9(Peach)\np_6(Peach)\np_8(Peach)\np_7(Peach)\np_5(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Peach).",
                    "p_1(Peach).",
                    "-p_0(Peach).",
                    "p_9(Peach) | p_3(Peach).",
                    "all x (-(p_6(x) <-> p_2(x))).",
                    "p_9(Peach) -> (p_8(Peach) & p_1(Peach)).",
                    "(-(p_0(Peach) <-> p_8(Peach))) -> p_7(Peach).",
                    "p_6(Peach) -> (p_7(Peach) & p_5(Peach)).",
                    "p_9(Peach) -> p_4(Peach).",
                    "p_3(Peach).",
                    "p_3(Peach) -> p_9(Peach).",
                    "p_3(Peach) -> p_4(Peach).",
                    "p_9(Peach).",
                    "p_6(Peach).",
                    "p_8(Peach).",
                    "p_7(Peach).",
                    "p_5(Peach)."
                ],
                "formulas(goals)": [
                    "p_4(Peach)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Peach)",
                    "p_6(Peach)",
                    "p_8(Peach)",
                    "p_7(Peach)"
                ],
                "added_rules": [
                    "p_3(Peach) \u2192 p_4(Peach)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_9(Peach) \u2192 p_4(Peach)\np_3(Peach)\np_3(Peach) \u2192 p_9(Peach)\np_3(Peach) \u2192 p_4(Peach)\np_9(Peach)\np_6(Peach)\np_8(Peach)\np_7(Peach)\np_5(Peach)\np_9(Peach) \u2228 p_4(Peach)\np_3(Peach) \u2228 p_4(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Peach)",
                    "p_1(Peach)",
                    "-p_0(Peach)",
                    "p_9(Peach) | p_3(Peach)",
                    "all x (-(p_6(x) <-> p_2(x)))",
                    "p_9(Peach) -> (p_8(Peach) & p_1(Peach))",
                    "(-p_0(Peach) <-> p_8(Peach)) -> p_7(Peach)",
                    "p_6(Peach) -> (p_7(Peach) & p_5(Peach))",
                    "p_9(Peach) -> p_4(Peach)",
                    "p_3(Peach)",
                    "p_3(Peach) -> p_9(Peach)",
                    "p_3(Peach) -> p_4(Peach)",
                    "p_9(Peach)",
                    "p_6(Peach)",
                    "p_8(Peach)",
                    "p_7(Peach)",
                    "p_5(Peach)",
                    "p_9(Peach) | p_4(Peach)",
                    "p_3(Peach) | p_4(Peach)"
                ],
                "formulas(goals)": [
                    "p_4(Peach)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Peach) \u2228 p_4(Peach)",
                    "p_3(Peach) \u2228 p_4(Peach)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_3(Peach) \u2192 p_4(Peach)\np_6(Peach)\np_8(Peach)\np_7(Peach)\np_5(Peach)\np_9(Peach) \u2228 p_4(Peach)\np_3(Peach) \u2228 p_4(Peach)\n\u00acp_3(Peach)\np_9(Peach) \u2192 \u00acp_4(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Peach).",
                    "p_1(Peach).",
                    "-p_0(Peach).",
                    "p_9(Peach) | p_3(Peach).",
                    "all x (-(p_6(x) <-> p_2(x))).",
                    "p_9(Peach) -> (p_8(Peach) & p_1(Peach)).",
                    "(-(p_0(Peach) <-> p_8(Peach))) -> p_7(Peach).",
                    "p_6(Peach) -> (p_7(Peach) & p_5(Peach)).",
                    "p_3(Peach) -> p_4(Peach).",
                    "p_6(Peach).",
                    "p_8(Peach).",
                    "p_7(Peach).",
                    "p_5(Peach).",
                    "p_9(Peach) | p_4(Peach).",
                    "p_3(Peach) | p_4(Peach).",
                    "-p_3(Peach).",
                    "p_9(Peach) -> -p_4(Peach)."
                ],
                "formulas(goals)": [
                    "-p_4(Peach)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_3(Peach)",
                    "p_9(Peach)"
                ],
                "removed_rules": [
                    "p_3(Peach) \u2192 p_9(Peach)",
                    "p_9(Peach) \u2192 p_4(Peach)"
                ],
                "added_facts": [
                    "\u00acp_3(Peach)"
                ],
                "added_rules": [
                    "p_9(Peach) \u2192 \u00acp_4(Peach)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Peach)\np_1(Peach)\n\u00acp_0(Peach)\np_9(Peach) \u2228 p_3(Peach)\n\u2200x (p_6(x) \u2295 p_2(x))\np_9(Peach) \u2192 (p_8(Peach) \u2227 p_1(Peach))\n(p_0(Peach) \u2295 p_8(Peach)) \u2192 p_7(Peach)\np_6(Peach) \u2192 (p_7(Peach) \u2227 p_5(Peach))\np_3(Peach) \u2192 p_4(Peach)\np_6(Peach)\np_8(Peach)\np_7(Peach)\np_5(Peach)\np_9(Peach) \u2228 p_4(Peach)\n\u00acp_3(Peach)\np_9(Peach) \u2192 \u00acp_4(Peach)",
            "Initial Goal": "p_4(Peach)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Peach)",
                    "p_1(Peach)",
                    "-p_0(Peach)",
                    "p_9(Peach) | p_3(Peach)",
                    "all x (-(p_6(x) <-> p_2(x)))",
                    "-p_9(Peach) | (p_8(Peach) & p_1(Peach))",
                    "(-(p_0(Peach) <-> p_8(Peach))) | p_7(Peach)",
                    "-p_6(Peach) | (p_7(Peach) & p_5(Peach))",
                    "-p_3(Peach) | p_4(Peach)",
                    "p_6(Peach)",
                    "p_8(Peach)",
                    "p_7(Peach)",
                    "p_5(Peach)",
                    "p_9(Peach) | p_4(Peach)",
                    "-p_3(Peach)",
                    "-p_9(Peach) | -p_4(Peach)"
                ],
                "formulas(goals)": [
                    "-p_4(Peach)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Peach) \u2228 p_4(Peach)"
                ],
                "added_facts": [],
                "added_rules": []
            }
        }
    ]
}