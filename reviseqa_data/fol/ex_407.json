{
    "background_story": "Gabriella was a rising star in the world of professional tennis. Known for her powerful serves and strategic gameplay, she had made it to the finals of the prestigious Golden Racket tournament. The match was intense, with Gabriella facing off against her long-time rival, Victoria. The score was tied at 5-5 in the final set, with the crowd on the edge of their seats. That's when Gabriella landed a perfectly placed ace, which proved to be the clincher. The crowd erupted as she took the match, securing her first major championship title. This winning shot not only sealed her victory but also marked a turning point in her career, establishing Gabriella as a force to be reckoned with in the tennis world.",
    "predicates": [
        {
            "id": 0,
            "name": "achieve_success"
        },
        {
            "id": 1,
            "name": "hit_accurate"
        },
        {
            "id": 2,
            "name": "stay_focused"
        },
        {
            "id": 3,
            "name": "set_goals"
        },
        {
            "id": 4,
            "name": "be_disciplined"
        },
        {
            "id": 5,
            "name": "manage_stress"
        },
        {
            "id": 6,
            "name": "track_progress"
        },
        {
            "id": 7,
            "name": "move_quickly"
        },
        {
            "id": 8,
            "name": "have_strong_serve"
        },
        {
            "id": 9,
            "name": "excel_competitively"
        },
        {
            "id": 10,
            "name": "train_diligently"
        },
        {
            "id": 11,
            "name": "perform_well"
        },
        {
            "id": 12,
            "name": "reach_potential"
        },
        {
            "id": 13,
            "name": "be_motivated"
        },
        {
            "id": 14,
            "name": "set_priorities"
        },
        {
            "id": 15,
            "name": "plan_ahead"
        },
        {
            "id": 16,
            "name": "win_championship"
        },
        {
            "id": 17,
            "name": "play_strategic"
        },
        {
            "id": 18,
            "name": "is_athletic"
        },
        {
            "id": 19,
            "name": "be_agile"
        },
        {
            "id": 20,
            "name": "practice_regularly"
        },
        {
            "id": 21,
            "name": "analyze_performance"
        },
        {
            "id": 22,
            "name": "stay_balanced"
        },
        {
            "id": 23,
            "name": "set_high_expectations"
        },
        {
            "id": 24,
            "name": "work_efficiently"
        },
        {
            "id": 25,
            "name": "work_hard"
        },
        {
            "id": 26,
            "name": "sets_goals"
        },
        {
            "id": 27,
            "name": "stay_composed"
        },
        {
            "id": 28,
            "name": "think_clearly"
        }
    ],
    "subject_name": "Gabriella",
    "subject_category": "human",
    "keyword": "clincher",
    "all_facts": [
        {
            "id": 0,
            "subject": "Gabriella",
            "text": "Gabriella does not achieve success.",
            "fol": "\u00acp_0(Gabriella)",
            "str_fol": "\u00acachieve_success(Gabriella)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Gabriella",
            "text": "Gabriella does not hit accurately.",
            "fol": "\u00acp_1(Gabriella)",
            "str_fol": "\u00achit_accurate(Gabriella)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Gabriella",
            "text": "Gabriella stays focused.",
            "fol": "p_2(Gabriella)",
            "str_fol": "stay_focused(Gabriella)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Gabriella",
            "text": "Gabriella does not set goals.",
            "fol": "\u00acp_3(Gabriella)",
            "str_fol": "\u00acset_goals(Gabriella)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Gabriella",
            "text": "Gabriella is disciplined.",
            "fol": "p_4(Gabriella)",
            "str_fol": "be_disciplined(Gabriella)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Gabriella",
            "text": "Gabriella manages stress.",
            "fol": "p_5(Gabriella)",
            "str_fol": "manage_stress(Gabriella)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Gabriella",
            "text": "Gabriella tracks progress.",
            "fol": "p_6(Gabriella)",
            "str_fol": "track_progress(Gabriella)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Gabriella",
            "text": "Gabriella sets priorities.",
            "fol": "p_14(Gabriella)",
            "str_fol": "set_priorities(Gabriella)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Gabriella",
            "text": "Gabriella is motivated.",
            "fol": "p_13(Gabriella)",
            "str_fol": "be_motivated(Gabriella)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Gabriella",
            "text": "Gabriella does not reach her potential.",
            "fol": "\u00acp_12(Gabriella)",
            "str_fol": "\u00acreach_potential(Gabriella)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Gabriella",
            "text": "Gabriella does not train diligently.",
            "fol": "\u00acp_10(Gabriella)",
            "str_fol": "\u00actrain_diligently(Gabriella)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Gabriella",
            "text": "Gabriella does not perform well.",
            "fol": "\u00acp_11(Gabriella)",
            "str_fol": "\u00acperform_well(Gabriella)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Gabriella",
            "text": "Gabriella does not move quickly.",
            "fol": "\u00acp_7(Gabriella)",
            "str_fol": "\u00acmove_quickly(Gabriella)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Gabriella",
            "text": "Gabriella does not excel competitively.",
            "fol": "\u00acp_9(Gabriella)",
            "str_fol": "\u00acexcel_competitively(Gabriella)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Gabriella",
            "text": "Gabriella does not have a strong serve.",
            "fol": "\u00acp_8(Gabriella)",
            "str_fol": "\u00achave_strong_serve(Gabriella)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Gabriella",
            "text": "Gabriella tracks progress.",
            "fol": "p_6(Gabriella)",
            "str_fol": "track_progress(Gabriella)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Gabriella",
            "text": "Gabriella manages stress.",
            "fol": "p_5(Gabriella)",
            "str_fol": "manage_stress(Gabriella)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Gabriella",
            "text": "Gabriella is disciplined.",
            "fol": "p_4(Gabriella)",
            "str_fol": "be_disciplined(Gabriella)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Gabriella",
            "text": "Gabriella does not set goals.",
            "fol": "\u00acp_3(Gabriella)",
            "str_fol": "\u00acset_goals(Gabriella)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Gabriella",
            "text": "Gabriella stays focused.",
            "fol": "p_2(Gabriella)",
            "str_fol": "stay_focused(Gabriella)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Gabriella",
            "text": "Gabriella does not hit accurately.",
            "fol": "\u00acp_1(Gabriella)",
            "str_fol": "\u00achit_accurate(Gabriella)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Gabriella",
            "text": "Gabriella does not achieve success.",
            "fol": "\u00acp_0(Gabriella)",
            "str_fol": "\u00acachieve_success(Gabriella)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "Anyone who plans ahead or tracks progress sets priorities.",
            "fol": "\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((plan_ahead(x) \u2228 track_progress(x)) \u2192 set_priorities(x))"
        },
        {
            "id": 6,
            "text": "If someone sets priorities, then they are motivated and manage stress.",
            "fol": "\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))",
            "str_fol": "\u2200x (set_priorities(x) \u2192 (be_motivated(x) \u2227 manage_stress(x)))"
        },
        {
            "id": 5,
            "text": "If Gabriella reaches her potential, then she is either motivated or disciplined, but not both.",
            "fol": "p_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))",
            "str_fol": "reach_potential(Gabriella) \u2192 (be_motivated(Gabriella) \u2295 be_disciplined(Gabriella))"
        },
        {
            "id": 4,
            "text": "If Gabriella sets goals or trains diligently, then she can reach her potential.",
            "fol": "(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)",
            "str_fol": "(set_goals(Gabriella) \u2228 train_diligently(Gabriella)) \u2192 reach_potential(Gabriella)"
        },
        {
            "id": 3,
            "text": "For Gabriella, performing well and staying focused are mutually exclusive, meaning that if she performs well, she may not necessarily stay focused, and vice versa.",
            "fol": "p_11(Gabriella) \u2295 p_2(Gabriella)",
            "str_fol": "perform_well(Gabriella) \u2295 stay_focused(Gabriella)"
        },
        {
            "id": 2,
            "text": "If Gabriella either moves quickly or hits accurate (but not both), then she performs well.",
            "fol": "(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)",
            "str_fol": "(move_quickly(Gabriella) \u2295 hit_accurate(Gabriella)) \u2192 perform_well(Gabriella)"
        },
        {
            "id": 1,
            "text": "If Gabriella either trains diligently or excels competitively (but not both), then she achieves success.",
            "fol": "(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)",
            "str_fol": "(train_diligently(Gabriella) \u2295 excel_competitively(Gabriella)) \u2192 achieve_success(Gabriella)"
        },
        {
            "id": 0,
            "text": "If Gabriella either moves quickly or has a strong serve (but not both), then she excels competitively.",
            "fol": "(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)",
            "str_fol": "(move_quickly(Gabriella) \u2295 have_strong_serve(Gabriella)) \u2192 excel_competitively(Gabriella)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Gabriella",
            "text": "Gabriella tracks progress.",
            "fol": "p_6(Gabriella)",
            "str_fol": "track_progress(Gabriella)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Gabriella",
            "text": "Gabriella manages stress.",
            "fol": "p_5(Gabriella)",
            "str_fol": "manage_stress(Gabriella)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Gabriella",
            "text": "Gabriella is disciplined.",
            "fol": "p_4(Gabriella)",
            "str_fol": "be_disciplined(Gabriella)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Gabriella",
            "text": "Gabriella does not set goals.",
            "fol": "\u00acp_3(Gabriella)",
            "str_fol": "\u00acset_goals(Gabriella)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Gabriella",
            "text": "Gabriella stays focused.",
            "fol": "p_2(Gabriella)",
            "str_fol": "stay_focused(Gabriella)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Gabriella",
            "text": "Gabriella does not hit accurately.",
            "fol": "\u00acp_1(Gabriella)",
            "str_fol": "\u00achit_accurate(Gabriella)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Gabriella",
            "text": "Gabriella does not achieve success.",
            "fol": "\u00acp_0(Gabriella)",
            "str_fol": "\u00acachieve_success(Gabriella)",
            "negation": true
        },
        {
            "id": 7,
            "text": "Anyone who plans ahead or tracks progress sets priorities.",
            "fol": "\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((plan_ahead(x) \u2228 track_progress(x)) \u2192 set_priorities(x))"
        },
        {
            "id": 6,
            "text": "If someone sets priorities, then they are motivated and manage stress.",
            "fol": "\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))",
            "str_fol": "\u2200x (set_priorities(x) \u2192 (be_motivated(x) \u2227 manage_stress(x)))"
        },
        {
            "id": 5,
            "text": "If Gabriella reaches her potential, then she is either motivated or disciplined, but not both.",
            "fol": "p_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))",
            "str_fol": "reach_potential(Gabriella) \u2192 (be_motivated(Gabriella) \u2295 be_disciplined(Gabriella))"
        },
        {
            "id": 4,
            "text": "If Gabriella sets goals or trains diligently, then she can reach her potential.",
            "fol": "(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)",
            "str_fol": "(set_goals(Gabriella) \u2228 train_diligently(Gabriella)) \u2192 reach_potential(Gabriella)"
        },
        {
            "id": 3,
            "text": "For Gabriella, performing well and staying focused are mutually exclusive, meaning that if she performs well, she may not necessarily stay focused, and vice versa.",
            "fol": "p_11(Gabriella) \u2295 p_2(Gabriella)",
            "str_fol": "perform_well(Gabriella) \u2295 stay_focused(Gabriella)"
        },
        {
            "id": 2,
            "text": "If Gabriella either moves quickly or hits accurate (but not both), then she performs well.",
            "fol": "(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)",
            "str_fol": "(move_quickly(Gabriella) \u2295 hit_accurate(Gabriella)) \u2192 perform_well(Gabriella)"
        },
        {
            "id": 1,
            "text": "If Gabriella either trains diligently or excels competitively (but not both), then she achieves success.",
            "fol": "(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)",
            "str_fol": "(train_diligently(Gabriella) \u2295 excel_competitively(Gabriella)) \u2192 achieve_success(Gabriella)"
        },
        {
            "id": 0,
            "text": "If Gabriella either moves quickly or has a strong serve (but not both), then she excels competitively.",
            "fol": "(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)",
            "str_fol": "(move_quickly(Gabriella) \u2295 have_strong_serve(Gabriella)) \u2192 excel_competitively(Gabriella)"
        }
    ],
    "context_fol": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)",
    "conclusion": {
        "id": 16,
        "text": "If Gabriella wins a championship, then she either has a strong serve or plays strategically (or both).",
        "fol": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
        "str_fol": "win_championship(Gabriella) \u2192 (have_strong_serve(Gabriella) \u2228 play_strategic(Gabriella))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Gabriella",
                    "text": "Gabriella tracks progress.",
                    "fol": "p_6(Gabriella)",
                    "str_fol": "track_progress(Gabriella)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who plans ahead or tracks progress sets priorities.",
                    "fol": "\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((plan_ahead(x) \u2228 track_progress(x)) \u2192 set_priorities(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Gabriella",
                "text": "Gabriella sets priorities.",
                "fol": "p_14(Gabriella)",
                "str_fol": "set_priorities(Gabriella)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Gabriella",
                    "text": "Gabriella sets priorities.",
                    "fol": "p_14(Gabriella)",
                    "str_fol": "set_priorities(Gabriella)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Gabriella",
                    "text": "Gabriella manages stress.",
                    "fol": "p_5(Gabriella)",
                    "str_fol": "manage_stress(Gabriella)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone sets priorities, then they are motivated and manage stress.",
                    "fol": "\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))",
                    "str_fol": "\u2200x (set_priorities(x) \u2192 (be_motivated(x) \u2227 manage_stress(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Gabriella",
                "text": "Gabriella is motivated.",
                "fol": "p_13(Gabriella)",
                "str_fol": "be_motivated(Gabriella)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Gabriella",
                    "text": "Gabriella is motivated.",
                    "fol": "p_13(Gabriella)",
                    "str_fol": "be_motivated(Gabriella)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Gabriella",
                    "text": "Gabriella is disciplined.",
                    "fol": "p_4(Gabriella)",
                    "str_fol": "be_disciplined(Gabriella)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Gabriella reaches her potential, then she is either motivated or disciplined, but not both.",
                    "fol": "p_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))",
                    "str_fol": "reach_potential(Gabriella) \u2192 (be_motivated(Gabriella) \u2295 be_disciplined(Gabriella))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Gabriella",
                "text": "Gabriella does not reach her potential.",
                "fol": "\u00acp_12(Gabriella)",
                "str_fol": "\u00acreach_potential(Gabriella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Gabriella",
                    "text": "Gabriella does not set goals.",
                    "fol": "\u00acp_3(Gabriella)",
                    "str_fol": "\u00acset_goals(Gabriella)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Gabriella",
                    "text": "Gabriella does not reach her potential.",
                    "fol": "\u00acp_12(Gabriella)",
                    "str_fol": "\u00acreach_potential(Gabriella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Gabriella sets goals or trains diligently, then she can reach her potential.",
                    "fol": "(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)",
                    "str_fol": "(set_goals(Gabriella) \u2228 train_diligently(Gabriella)) \u2192 reach_potential(Gabriella)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Gabriella",
                "text": "Gabriella does not train diligently.",
                "fol": "\u00acp_10(Gabriella)",
                "str_fol": "\u00actrain_diligently(Gabriella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Gabriella",
                    "text": "Gabriella stays focused.",
                    "fol": "p_2(Gabriella)",
                    "str_fol": "stay_focused(Gabriella)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "For Gabriella, performing well and staying focused are mutually exclusive, meaning that if she performs well, she may not necessarily stay focused, and vice versa.",
                    "fol": "p_11(Gabriella) \u2295 p_2(Gabriella)",
                    "str_fol": "perform_well(Gabriella) \u2295 stay_focused(Gabriella)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Gabriella",
                "text": "Gabriella does not perform well.",
                "fol": "\u00acp_11(Gabriella)",
                "str_fol": "\u00acperform_well(Gabriella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Gabriella",
                    "text": "Gabriella does not hit accurately.",
                    "fol": "\u00acp_1(Gabriella)",
                    "str_fol": "\u00achit_accurate(Gabriella)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Gabriella",
                    "text": "Gabriella does not perform well.",
                    "fol": "\u00acp_11(Gabriella)",
                    "str_fol": "\u00acperform_well(Gabriella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Gabriella either moves quickly or hits accurate (but not both), then she performs well.",
                    "fol": "(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)",
                    "str_fol": "(move_quickly(Gabriella) \u2295 hit_accurate(Gabriella)) \u2192 perform_well(Gabriella)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Gabriella",
                "text": "Gabriella does not move quickly.",
                "fol": "\u00acp_7(Gabriella)",
                "str_fol": "\u00acmove_quickly(Gabriella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Gabriella",
                    "text": "Gabriella does not train diligently.",
                    "fol": "\u00acp_10(Gabriella)",
                    "str_fol": "\u00actrain_diligently(Gabriella)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Gabriella",
                    "text": "Gabriella does not achieve success.",
                    "fol": "\u00acp_0(Gabriella)",
                    "str_fol": "\u00acachieve_success(Gabriella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Gabriella either trains diligently or excels competitively (but not both), then she achieves success.",
                    "fol": "(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)",
                    "str_fol": "(train_diligently(Gabriella) \u2295 excel_competitively(Gabriella)) \u2192 achieve_success(Gabriella)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Gabriella",
                "text": "Gabriella does not excel competitively.",
                "fol": "\u00acp_9(Gabriella)",
                "str_fol": "\u00acexcel_competitively(Gabriella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Gabriella",
                    "text": "Gabriella does not move quickly.",
                    "fol": "\u00acp_7(Gabriella)",
                    "str_fol": "\u00acmove_quickly(Gabriella)",
                    "negation": true
                },
                {
                    "id": 13,
                    "subject": "Gabriella",
                    "text": "Gabriella does not excel competitively.",
                    "fol": "\u00acp_9(Gabriella)",
                    "str_fol": "\u00acexcel_competitively(Gabriella)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Gabriella either moves quickly or has a strong serve (but not both), then she excels competitively.",
                    "fol": "(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)",
                    "str_fol": "(move_quickly(Gabriella) \u2295 have_strong_serve(Gabriella)) \u2192 excel_competitively(Gabriella)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Gabriella",
                "text": "Gabriella does not have a strong serve.",
                "fol": "\u00acp_8(Gabriella)",
                "str_fol": "\u00achave_strong_serve(Gabriella)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Gabriella",
                    "text": "Gabriella does not have a strong serve.",
                    "fol": "\u00acp_8(Gabriella)",
                    "str_fol": "\u00achave_strong_serve(Gabriella)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "(-(p_7(Gabriella) <-> p_8(Gabriella))) -> p_9(Gabriella)",
                    "p_16(Gabriella) -> p_8(Gabriella)"
                ],
                "formulas(goals)": [
                    "p_16(Gabriella) -> (p_8(Gabriella) | p_17(Gabriella))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_16(Gabriella) \u2192 p_8(Gabriella)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)\np_6(Gabriella) \u2192 p_16(Gabriella)\np_2(Gabriella) \u2192 \u00acp_8(Gabriella)\n\u00acp_3(Gabriella) \u2192 \u00acp_17(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "(-(p_7(Gabriella) <-> p_8(Gabriella))) -> p_9(Gabriella)",
                    "p_6(Gabriella) -> p_16(Gabriella)",
                    "p_2(Gabriella) -> -p_8(Gabriella)",
                    "-p_3(Gabriella) -> -p_17(Gabriella)"
                ],
                "formulas(goals)": [
                    "-(p_16(Gabriella) -> (p_8(Gabriella) | p_17(Gabriella)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Gabriella) \u2192 p_16(Gabriella)",
                    "p_2(Gabriella) \u2192 \u00acp_8(Gabriella)",
                    "\u00acp_3(Gabriella) \u2192 \u00acp_17(Gabriella)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)\np_6(Gabriella) \u2192 p_16(Gabriella)\np_2(Gabriella) \u2192 \u00acp_8(Gabriella)\n\u00acp_3(Gabriella) \u2192 p_17(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "(-(p_7(Gabriella) <-> p_8(Gabriella))) -> p_9(Gabriella)",
                    "p_6(Gabriella) -> p_16(Gabriella)",
                    "p_2(Gabriella) -> -p_8(Gabriella)",
                    "-p_3(Gabriella) -> p_17(Gabriella)"
                ],
                "formulas(goals)": [
                    "p_16(Gabriella) -> (p_8(Gabriella) | p_17(Gabriella))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_3(Gabriella) \u2192 \u00acp_17(Gabriella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_3(Gabriella) \u2192 p_17(Gabriella)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)\n\u00acp_6(Gabriella) \u2228 p_16(Gabriella)\np_2(Gabriella) \u2192 \u00acp_8(Gabriella)\np_3(Gabriella) \u2228 p_17(Gabriella)\np_17(Gabriella)\n\u00acp_8(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "(-(p_7(Gabriella) <-> p_8(Gabriella))) -> p_9(Gabriella)",
                    "-p_6(Gabriella) | p_16(Gabriella)",
                    "p_2(Gabriella) -> -p_8(Gabriella)",
                    "p_3(Gabriella) | p_17(Gabriella)",
                    "p_17(Gabriella)",
                    "-p_8(Gabriella)"
                ],
                "formulas(goals)": [
                    "p_16(Gabriella) -> (p_8(Gabriella) | p_17(Gabriella))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Gabriella) \u2192 p_16(Gabriella)",
                    "\u00acp_3(Gabriella) \u2192 p_17(Gabriella)"
                ],
                "added_facts": [
                    "p_17(Gabriella)",
                    "\u00acp_8(Gabriella)"
                ],
                "added_rules": [
                    "\u00acp_6(Gabriella) \u2228 p_16(Gabriella)",
                    "p_3(Gabriella) \u2228 p_17(Gabriella)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)\n\u00acp_6(Gabriella) \u2228 p_16(Gabriella)\np_2(Gabriella) \u2192 \u00acp_8(Gabriella)\np_17(Gabriella) \u2192 p_3(Gabriella)\n\u00acp_8(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "(-(p_7(Gabriella) <-> p_8(Gabriella))) -> p_9(Gabriella)",
                    "-p_6(Gabriella) | p_16(Gabriella)",
                    "p_2(Gabriella) -> -p_8(Gabriella)",
                    "p_17(Gabriella) -> p_3(Gabriella)",
                    "-p_8(Gabriella)"
                ],
                "formulas(goals)": [
                    "p_16(Gabriella) & -p_8(Gabriella) & -p_17(Gabriella)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_17(Gabriella)"
                ],
                "removed_rules": [
                    "p_3(Gabriella) \u2228 p_17(Gabriella)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_17(Gabriella) \u2192 p_3(Gabriella)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n(p_7(Gabriella) \u2295 p_8(Gabriella)) \u2192 p_9(Gabriella)\np_6(Gabriella) \u2192 p_16(Gabriella)\np_2(Gabriella) \u2192 \u00acp_8(Gabriella)\np_17(Gabriella) \u2192 p_3(Gabriella)\n\u00acp_8(Gabriella)\np_16(Gabriella) \u2228 p_8(Gabriella)\n\u00acp_17(Gabriella) \u2228 p_3(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "(-(p_7(Gabriella) <-> p_8(Gabriella))) -> p_9(Gabriella)",
                    "p_6(Gabriella) -> p_16(Gabriella)",
                    "p_2(Gabriella) -> -p_8(Gabriella)",
                    "p_17(Gabriella) -> p_3(Gabriella)",
                    "-p_8(Gabriella)",
                    "p_16(Gabriella) | p_8(Gabriella)",
                    "-p_17(Gabriella) | p_3(Gabriella)"
                ],
                "formulas(goals)": [
                    "-(p_16(Gabriella) -> (p_8(Gabriella) | p_17(Gabriella)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Gabriella) \u2228 p_16(Gabriella)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_16(Gabriella) \u2228 p_8(Gabriella)",
                    "\u00acp_17(Gabriella) \u2228 p_3(Gabriella)"
                ],
                "added_rules": [
                    "p_6(Gabriella) \u2192 p_16(Gabriella)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Gabriella)\np_5(Gabriella)\np_4(Gabriella)\n\u00acp_3(Gabriella)\np_2(Gabriella)\n\u00acp_1(Gabriella)\n\u00acp_0(Gabriella)\n\u2200x ((p_15(x) \u2228 p_6(x)) \u2192 p_14(x))\n\u2200x (p_14(x) \u2192 (p_13(x) \u2227 p_5(x)))\np_12(Gabriella) \u2192 (p_13(Gabriella) \u2295 p_4(Gabriella))\n(p_3(Gabriella) \u2228 p_10(Gabriella)) \u2192 p_12(Gabriella)\np_11(Gabriella) \u2295 p_2(Gabriella)\n(p_7(Gabriella) \u2295 p_1(Gabriella)) \u2192 p_11(Gabriella)\n(p_10(Gabriella) \u2295 p_9(Gabriella)) \u2192 p_0(Gabriella)\n((p_7(Gabriella) \u2228 p_8(Gabriella)) \u2227 (\u00acp_7(Gabriella) \u2228 \u00acp_8(Gabriella))) \u2192 p_9(Gabriella)\np_6(Gabriella) \u2192 p_16(Gabriella)\np_2(Gabriella) \u2192 \u00acp_8(Gabriella)\n\u00acp_3(Gabriella) \u2192 \u00acp_17(Gabriella)\n\u00acp_8(Gabriella)\np_16(Gabriella) \u2228 p_8(Gabriella)\n\u00acp_17(Gabriella) \u2228 p_3(Gabriella)\np_16(Gabriella)\n\u00acp_17(Gabriella)",
            "Initial Goal": "p_16(Gabriella) \u2192 (p_8(Gabriella) \u2228 p_17(Gabriella))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Gabriella)",
                    "p_5(Gabriella)",
                    "p_4(Gabriella)",
                    "-p_3(Gabriella)",
                    "p_2(Gabriella)",
                    "-p_1(Gabriella)",
                    "-p_0(Gabriella)",
                    "all x ((p_15(x) | p_6(x)) -> p_14(x))",
                    "all x (p_14(x) -> (p_13(x) & p_5(x)))",
                    "p_12(Gabriella) -> (-(p_13(Gabriella) <-> p_4(Gabriella)))",
                    "(p_3(Gabriella) | p_10(Gabriella)) -> p_12(Gabriella)",
                    "-(p_11(Gabriella) <-> p_2(Gabriella))",
                    "(-(p_7(Gabriella) <-> p_1(Gabriella))) -> p_11(Gabriella)",
                    "(-(p_10(Gabriella) <-> p_9(Gabriella))) -> p_0(Gabriella)",
                    "((p_7(Gabriella) | p_8(Gabriella)) & (-p_7(Gabriella) | -p_8(Gabriella))) -> p_9(Gabriella)",
                    "p_6(Gabriella) -> p_16(Gabriella)",
                    "p_2(Gabriella) -> -p_8(Gabriella)",
                    "-p_3(Gabriella) -> -p_17(Gabriella)",
                    "-p_8(Gabriella)",
                    "p_16(Gabriella) | p_8(Gabriella)",
                    "-p_17(Gabriella) | p_3(Gabriella)",
                    "p_16(Gabriella)",
                    "-p_17(Gabriella)"
                ],
                "formulas(goals)": [
                    "- (p_16(Gabriella) -> (p_8(Gabriella) | p_17(Gabriella)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_17(Gabriella) \u2192 p_3(Gabriella)"
                ],
                "added_facts": [
                    "p_16(Gabriella)",
                    "\u00acp_17(Gabriella)"
                ],
                "added_rules": [
                    "\u00acp_3(Gabriella) \u2192 \u00acp_17(Gabriella)",
                    "((p_7(Gabriella) \u2228 p_8(Gabriella)) \u2227 (\u00acp_7(Gabriella) \u2228 \u00acp_8(Gabriella))) \u2192 p_9(Gabriella)"
                ]
            }
        }
    ]
}