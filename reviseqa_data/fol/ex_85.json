{
    "background_story": "Punk, the potto, was a peculiar creature with a penchant for the night. His species, Perodicticus potto, was known for its unique, endearing appearance. Punk lived in the lush forests of central Africa, where he spent his evenings foraging for fruits and insects. With his large, round eyes and robust body, Punk navigated the dark with ease, rarely seen by humans. Despite his shy nature, Punk had a soft spot for the forest's melodic sounds, often pausing to listen to the chirping crickets and hooting owls. His nocturnal adventures were filled with mystery and wonder, as he explored the forest's hidden corners, always returning to his cozy nest before dawn. Punk's life was a testament to the fascinating world of nocturnal creatures, like the potto, that thrive under the cover of darkness.",
    "predicates": [
        {
            "id": 0,
            "name": "find_food"
        },
        {
            "id": 1,
            "name": "nocturnal"
        },
        {
            "id": 2,
            "name": "is_nocturnal"
        },
        {
            "id": 3,
            "name": "is_secretive"
        },
        {
            "id": 4,
            "name": "likes_water"
        },
        {
            "id": 5,
            "name": "has_claws"
        },
        {
            "id": 6,
            "name": "hunt_preys"
        },
        {
            "id": 7,
            "name": "eat_meat"
        },
        {
            "id": 8,
            "name": "run_fast"
        },
        {
            "id": 9,
            "name": "escape_predators"
        },
        {
            "id": 10,
            "name": "have_excellent_hearing"
        },
        {
            "id": 11,
            "name": "live_at_night"
        },
        {
            "id": 12,
            "name": "navigate_dark"
        },
        {
            "id": 13,
            "name": "climb_trees"
        },
        {
            "id": 14,
            "name": "lives_in_forest"
        },
        {
            "id": 15,
            "name": "have_large_eyes"
        },
        {
            "id": 16,
            "name": "likes_shade"
        },
        {
            "id": 17,
            "name": "has_fur"
        },
        {
            "id": 18,
            "name": "is_carnivore"
        },
        {
            "id": 19,
            "name": "active_at_dusk"
        },
        {
            "id": 20,
            "name": "have_keen_sense"
        },
        {
            "id": 21,
            "name": "is_sensitive"
        },
        {
            "id": 22,
            "name": "roam_freely"
        },
        {
            "id": 23,
            "name": "see_well"
        },
        {
            "id": 24,
            "name": "adapt_night"
        },
        {
            "id": 25,
            "name": "likes_dark"
        },
        {
            "id": 26,
            "name": "is_mammal"
        },
        {
            "id": 27,
            "name": "prefers_grass"
        },
        {
            "id": 28,
            "name": "grooms_self"
        },
        {
            "id": 29,
            "name": "likes_nests"
        },
        {
            "id": 30,
            "name": "eats_fruits"
        },
        {
            "id": 31,
            "name": "jump_high"
        }
    ],
    "subject_name": "Punk",
    "subject_category": "animal",
    "keyword": "perodicticus",
    "all_facts": [
        {
            "id": 0,
            "subject": "Punk",
            "text": "Punk cannot find food.",
            "fol": "\u00acp_0(Punk)",
            "str_fol": "\u00acfind_food(Punk)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Punk",
            "text": "Punk is nocturnal.",
            "fol": "p_1(Punk)",
            "str_fol": "nocturnal(Punk)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Punk",
            "text": "Punk is not active at night.",
            "fol": "\u00acis_p_1(Punk)",
            "str_fol": "\u00acis_nocturnal(Punk)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Punk",
            "text": "Punk is not secretive.",
            "fol": "\u00acp_3(Punk)",
            "str_fol": "\u00acis_secretive(Punk)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Punk",
            "text": "Punk likes water.",
            "fol": "p_4(Punk)",
            "str_fol": "likes_water(Punk)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Punk",
            "text": "Punk has claws.",
            "fol": "p_5(Punk)",
            "str_fol": "has_claws(Punk)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Punk",
            "text": "Punk hunts preys.",
            "fol": "p_6(Punk)",
            "str_fol": "hunt_preys(Punk)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Punk",
            "text": "Punk does not eat meat.",
            "fol": "\u00acp_7(Punk)",
            "str_fol": "\u00aceat_meat(Punk)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Punk",
            "text": "Punk runs fast.",
            "fol": "p_8(Punk)",
            "str_fol": "run_fast(Punk)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Punk",
            "text": "Punk can escape predators.",
            "fol": "p_9(Punk)",
            "str_fol": "escape_predators(Punk)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Punk",
            "text": "Punk is not a carnivore.",
            "fol": "\u00acp_18(Punk)",
            "str_fol": "\u00acis_carnivore(Punk)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Punk",
            "text": "Punk has fur.",
            "fol": "p_17(Punk)",
            "str_fol": "has_fur(Punk)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Punk",
            "text": "Punk does not like shade.",
            "fol": "\u00acp_16(Punk)",
            "str_fol": "\u00aclikes_shade(Punk)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Punk",
            "text": "Punk lives in a forest.",
            "fol": "p_14(Punk)",
            "str_fol": "lives_in_forest(Punk)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Punk",
            "text": "Punk does not have large eyes.",
            "fol": "\u00acp_15(Punk)",
            "str_fol": "\u00achave_large_eyes(Punk)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Punk",
            "text": "Punk does not navigate in the dark.",
            "fol": "\u00acp_12(Punk)",
            "str_fol": "\u00acnavigate_dark(Punk)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Punk",
            "text": "Punk does not live at night.",
            "fol": "\u00acp_11(Punk)",
            "str_fol": "\u00aclive_at_night(Punk)",
            "negation": true
        },
        {
            "id": 17,
            "subject": "Punk",
            "text": "Punk does not have excellent hearing.",
            "fol": "\u00acp_10(Punk)",
            "str_fol": "\u00achave_excellent_hearing(Punk)",
            "negation": true
        },
        {
            "id": 18,
            "subject": "Punk",
            "text": "If Punk is nocturnal, then he either has large eyes or has excellent hearing, but not both.",
            "fol": "p_1(Punk) \u2192 (have_large_eyes(Punk) \u2295 have_excellent_hearing(Punk))",
            "str_fol": "nocturnal(Punk) \u2192 (have_large_eyes(Punk) \u2295 have_excellent_hearing(Punk))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 8,
            "subject": "Punk",
            "text": "Punk runs fast.",
            "fol": "p_8(Punk)",
            "str_fol": "run_fast(Punk)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Punk",
            "text": "Punk can escape predators.",
            "fol": "p_9(Punk)",
            "str_fol": "escape_predators(Punk)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Punk",
            "text": "Punk hunts preys.",
            "fol": "p_6(Punk)",
            "str_fol": "hunt_preys(Punk)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Punk",
            "text": "Punk does not eat meat.",
            "fol": "\u00acp_7(Punk)",
            "str_fol": "\u00aceat_meat(Punk)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Punk",
            "text": "Punk has claws.",
            "fol": "p_5(Punk)",
            "str_fol": "has_claws(Punk)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Punk",
            "text": "Punk likes water.",
            "fol": "p_4(Punk)",
            "str_fol": "likes_water(Punk)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Punk",
            "text": "Punk is not active at night.",
            "fol": "\u00acis_p_1(Punk)",
            "str_fol": "\u00acis_nocturnal(Punk)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Punk",
            "text": "Punk cannot find food.",
            "fol": "\u00acp_0(Punk)",
            "str_fol": "\u00acfind_food(Punk)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Punk",
            "text": "Punk is not secretive.",
            "fol": "\u00acp_3(Punk)",
            "str_fol": "\u00acis_secretive(Punk)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Punk",
            "text": "Punk is nocturnal.",
            "fol": "p_1(Punk)",
            "str_fol": "nocturnal(Punk)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Punk climbs trees or runs fast, then he can escape predators.",
            "fol": "(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)",
            "str_fol": "(climb_trees(Punk) \u2228 run_fast(Punk)) \u2192 escape_predators(Punk)"
        },
        {
            "id": 7,
            "text": "All carnivorous animals hunt preys and eat meat.",
            "fol": "\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))",
            "str_fol": "\u2200x (is_carnivore(x) \u2192 (hunt_preys(x) \u2227 eat_meat(x)))"
        },
        {
            "id": 6,
            "text": "If Punk either has claws or has fur (but not both), then he is a carnivore.",
            "fol": "(p_5(Punk) \u2295 p_17(Punk)) \u2192 p_18(Punk)",
            "str_fol": "(has_claws(Punk) \u2295 has_fur(Punk)) \u2192 is_carnivore(Punk)"
        },
        {
            "id": 5,
            "text": "If an animal has fur, then it either likes shade or likes water, but not both.",
            "fol": "p_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))",
            "str_fol": "has_fur(Punk) \u2192 (likes_shade(Punk) \u2295 likes_water(Punk))"
        },
        {
            "id": 4,
            "text": "Punk either lives in a forest or likes shade.",
            "fol": "p_14(Punk) \u2228 p_16(Punk)",
            "str_fol": "lives_in_forest(Punk) \u2228 likes_shade(Punk)"
        },
        {
            "id": 3,
            "text": "If Punk lives in a forest and has large eyes, then he is active at night.",
            "fol": "(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)",
            "str_fol": "(lives_in_forest(Punk) \u2227 have_large_eyes(Punk)) \u2192 is_nocturnal(Punk)"
        },
        {
            "id": 2,
            "text": "If Punk navigates in the dark or climbs trees, then he can find food.",
            "fol": "(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)",
            "str_fol": "(navigate_dark(Punk) \u2228 climb_trees(Punk)) \u2192 find_food(Punk)"
        },
        {
            "id": 1,
            "text": "If Punk lives at night, then he is secretive.",
            "fol": "p_11(Punk) \u2192 p_3(Punk)",
            "str_fol": "live_at_night(Punk) \u2192 is_secretive(Punk)"
        },
        {
            "id": 0,
            "text": "If Punk has excellent hearing, then he either lives at night or navigates in the dark.",
            "fol": "p_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))",
            "str_fol": "have_excellent_hearing(Punk) \u2192 (live_at_night(Punk) \u2228 navigate_dark(Punk))"
        }
    ],
    "context": [
        {
            "id": 8,
            "subject": "Punk",
            "text": "Punk runs fast.",
            "fol": "p_8(Punk)",
            "str_fol": "run_fast(Punk)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Punk",
            "text": "Punk can escape predators.",
            "fol": "p_9(Punk)",
            "str_fol": "escape_predators(Punk)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Punk",
            "text": "Punk hunts preys.",
            "fol": "p_6(Punk)",
            "str_fol": "hunt_preys(Punk)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Punk",
            "text": "Punk does not eat meat.",
            "fol": "\u00acp_7(Punk)",
            "str_fol": "\u00aceat_meat(Punk)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Punk",
            "text": "Punk has claws.",
            "fol": "p_5(Punk)",
            "str_fol": "has_claws(Punk)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Punk",
            "text": "Punk likes water.",
            "fol": "p_4(Punk)",
            "str_fol": "likes_water(Punk)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Punk",
            "text": "Punk is not active at night.",
            "fol": "\u00acis_p_1(Punk)",
            "str_fol": "\u00acis_nocturnal(Punk)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Punk",
            "text": "Punk cannot find food.",
            "fol": "\u00acp_0(Punk)",
            "str_fol": "\u00acfind_food(Punk)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Punk",
            "text": "Punk is not secretive.",
            "fol": "\u00acp_3(Punk)",
            "str_fol": "\u00acis_secretive(Punk)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Punk",
            "text": "Punk is nocturnal.",
            "fol": "p_1(Punk)",
            "str_fol": "nocturnal(Punk)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Punk climbs trees or runs fast, then he can escape predators.",
            "fol": "(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)",
            "str_fol": "(climb_trees(Punk) \u2228 run_fast(Punk)) \u2192 escape_predators(Punk)"
        },
        {
            "id": 7,
            "text": "All carnivorous animals hunt preys and eat meat.",
            "fol": "\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))",
            "str_fol": "\u2200x (is_carnivore(x) \u2192 (hunt_preys(x) \u2227 eat_meat(x)))"
        },
        {
            "id": 6,
            "text": "If Punk either has claws or has fur (but not both), then he is a carnivore.",
            "fol": "(p_5(Punk) \u2295 p_17(Punk)) \u2192 p_18(Punk)",
            "str_fol": "(has_claws(Punk) \u2295 has_fur(Punk)) \u2192 is_carnivore(Punk)"
        },
        {
            "id": 5,
            "text": "If an animal has fur, then it either likes shade or likes water, but not both.",
            "fol": "p_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))",
            "str_fol": "has_fur(Punk) \u2192 (likes_shade(Punk) \u2295 likes_water(Punk))"
        },
        {
            "id": 4,
            "text": "Punk either lives in a forest or likes shade.",
            "fol": "p_14(Punk) \u2228 p_16(Punk)",
            "str_fol": "lives_in_forest(Punk) \u2228 likes_shade(Punk)"
        },
        {
            "id": 3,
            "text": "If Punk lives in a forest and has large eyes, then he is active at night.",
            "fol": "(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)",
            "str_fol": "(lives_in_forest(Punk) \u2227 have_large_eyes(Punk)) \u2192 is_nocturnal(Punk)"
        },
        {
            "id": 2,
            "text": "If Punk navigates in the dark or climbs trees, then he can find food.",
            "fol": "(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)",
            "str_fol": "(navigate_dark(Punk) \u2228 climb_trees(Punk)) \u2192 find_food(Punk)"
        },
        {
            "id": 1,
            "text": "If Punk lives at night, then he is secretive.",
            "fol": "p_11(Punk) \u2192 p_3(Punk)",
            "str_fol": "live_at_night(Punk) \u2192 is_secretive(Punk)"
        },
        {
            "id": 0,
            "text": "If Punk has excellent hearing, then he either lives at night or navigates in the dark.",
            "fol": "p_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))",
            "str_fol": "have_excellent_hearing(Punk) \u2192 (live_at_night(Punk) \u2228 navigate_dark(Punk))"
        }
    ],
    "context_fol": "p_8(Punk)\np_9(Punk)\np_6(Punk)\n\u00acp_7(Punk)\np_5(Punk)\np_4(Punk)\n\u00acis_p_1(Punk)\n\u00acp_0(Punk)\n\u00acp_3(Punk)\np_1(Punk)\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))\n(p_5(Punk) \u2295 p_17(Punk)) \u2192 p_18(Punk)\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))\np_14(Punk) \u2228 p_16(Punk)\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)\np_11(Punk) \u2192 p_3(Punk)\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))",
    "conclusion": {
        "id": 18,
        "text": "If Punk is nocturnal, then he either has large eyes or has excellent hearing, but not both.",
        "fol": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
        "str_fol": "nocturnal(Punk) \u2192 (have_large_eyes(Punk) \u2295 have_excellent_hearing(Punk))"
    },
    "initial_answer": "False",
    "initial_goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Punk",
                    "text": "Punk runs fast.",
                    "fol": "p_8(Punk)",
                    "str_fol": "run_fast(Punk)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Punk",
                    "text": "Punk can escape predators.",
                    "fol": "p_9(Punk)",
                    "str_fol": "escape_predators(Punk)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Punk climbs trees or runs fast, then he can escape predators.",
                    "fol": "(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)",
                    "str_fol": "(climb_trees(Punk) \u2228 run_fast(Punk)) \u2192 escape_predators(Punk)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Punk",
                    "text": "Punk hunts preys.",
                    "fol": "p_6(Punk)",
                    "str_fol": "hunt_preys(Punk)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Punk",
                    "text": "Punk does not eat meat.",
                    "fol": "\u00acp_7(Punk)",
                    "str_fol": "\u00aceat_meat(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "All carnivorous animals hunt preys and eat meat.",
                    "fol": "\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))",
                    "str_fol": "\u2200x (is_carnivore(x) \u2192 (hunt_preys(x) \u2227 eat_meat(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Punk",
                "text": "Punk is not a carnivore.",
                "fol": "\u00acp_18(Punk)",
                "str_fol": "\u00acis_carnivore(Punk)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Punk",
                    "text": "Punk has claws.",
                    "fol": "p_5(Punk)",
                    "str_fol": "has_claws(Punk)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Punk",
                    "text": "Punk is not a carnivore.",
                    "fol": "\u00acp_18(Punk)",
                    "str_fol": "\u00acis_carnivore(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Punk either has claws or has fur (but not both), then he is a carnivore.",
                    "fol": "(p_5(Punk) \u2295 p_17(Punk)) \u2192 p_18(Punk)",
                    "str_fol": "(has_claws(Punk) \u2295 has_fur(Punk)) \u2192 is_carnivore(Punk)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Punk",
                "text": "Punk has fur.",
                "fol": "p_17(Punk)",
                "str_fol": "has_fur(Punk)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Punk",
                    "text": "Punk has fur.",
                    "fol": "p_17(Punk)",
                    "str_fol": "has_fur(Punk)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Punk",
                    "text": "Punk likes water.",
                    "fol": "p_4(Punk)",
                    "str_fol": "likes_water(Punk)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If an animal has fur, then it either likes shade or likes water, but not both.",
                    "fol": "p_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))",
                    "str_fol": "has_fur(Punk) \u2192 (likes_shade(Punk) \u2295 likes_water(Punk))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Punk",
                "text": "Punk does not like shade.",
                "fol": "\u00acp_16(Punk)",
                "str_fol": "\u00aclikes_shade(Punk)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Punk",
                    "text": "Punk does not like shade.",
                    "fol": "\u00acp_16(Punk)",
                    "str_fol": "\u00aclikes_shade(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Punk either lives in a forest or likes shade.",
                    "fol": "p_14(Punk) \u2228 p_16(Punk)",
                    "str_fol": "lives_in_forest(Punk) \u2228 likes_shade(Punk)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Punk",
                "text": "Punk lives in a forest.",
                "fol": "p_14(Punk)",
                "str_fol": "lives_in_forest(Punk)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Punk",
                    "text": "Punk lives in a forest.",
                    "fol": "p_14(Punk)",
                    "str_fol": "lives_in_forest(Punk)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Punk",
                    "text": "Punk is not active at night.",
                    "fol": "\u00acis_p_1(Punk)",
                    "str_fol": "\u00acis_nocturnal(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Punk lives in a forest and has large eyes, then he is active at night.",
                    "fol": "(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)",
                    "str_fol": "(lives_in_forest(Punk) \u2227 have_large_eyes(Punk)) \u2192 is_nocturnal(Punk)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Punk",
                "text": "Punk does not have large eyes.",
                "fol": "\u00acp_15(Punk)",
                "str_fol": "\u00achave_large_eyes(Punk)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Punk",
                    "text": "Punk cannot find food.",
                    "fol": "\u00acp_0(Punk)",
                    "str_fol": "\u00acfind_food(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Punk navigates in the dark or climbs trees, then he can find food.",
                    "fol": "(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)",
                    "str_fol": "(navigate_dark(Punk) \u2228 climb_trees(Punk)) \u2192 find_food(Punk)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Punk",
                "text": "Punk does not navigate in the dark.",
                "fol": "\u00acp_12(Punk)",
                "str_fol": "\u00acnavigate_dark(Punk)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Punk",
                    "text": "Punk is not secretive.",
                    "fol": "\u00acp_3(Punk)",
                    "str_fol": "\u00acis_secretive(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Punk lives at night, then he is secretive.",
                    "fol": "p_11(Punk) \u2192 p_3(Punk)",
                    "str_fol": "live_at_night(Punk) \u2192 is_secretive(Punk)"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Punk",
                "text": "Punk does not live at night.",
                "fol": "\u00acp_11(Punk)",
                "str_fol": "\u00aclive_at_night(Punk)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 16,
                    "subject": "Punk",
                    "text": "Punk does not live at night.",
                    "fol": "\u00acp_11(Punk)",
                    "str_fol": "\u00aclive_at_night(Punk)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Punk",
                    "text": "Punk does not navigate in the dark.",
                    "fol": "\u00acp_12(Punk)",
                    "str_fol": "\u00acnavigate_dark(Punk)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Punk has excellent hearing, then he either lives at night or navigates in the dark.",
                    "fol": "p_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))",
                    "str_fol": "have_excellent_hearing(Punk) \u2192 (live_at_night(Punk) \u2228 navigate_dark(Punk))"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Punk",
                "text": "Punk does not have excellent hearing.",
                "fol": "\u00acp_10(Punk)",
                "str_fol": "\u00achave_excellent_hearing(Punk)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Punk",
                    "text": "Punk is nocturnal.",
                    "fol": "p_1(Punk)",
                    "str_fol": "nocturnal(Punk)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Punk",
                    "text": "Punk does not have large eyes.",
                    "fol": "\u00acp_15(Punk)",
                    "str_fol": "\u00achave_large_eyes(Punk)",
                    "negation": true
                },
                {
                    "id": 17,
                    "subject": "Punk",
                    "text": "Punk does not have excellent hearing.",
                    "fol": "\u00acp_10(Punk)",
                    "str_fol": "\u00achave_excellent_hearing(Punk)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 18,
                "text": "If Punk is nocturnal, then he either has large eyes or has excellent hearing, but not both.",
                "fol": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
                "str_fol": "nocturnal(Punk) \u2192 (have_large_eyes(Punk) \u2295 have_excellent_hearing(Punk))"
            }
        }
    ],
    "proof_trace": "2 (all x (p_18(x) -> p_6(x) & p_7(x))).  [assumption].\n3 -(p_5(Punk) <-> p_17(Punk)) -> p_18(Punk).  [assumption].\n4 p_17(Punk) -> -(p_16(Punk) <-> p_4(Punk)).  [assumption].\n5 p_14(Punk) & p_15(Punk) -> is_p_1(Punk).  [assumption].\n6 p_12(Punk) | p_13(Punk) -> p_0(Punk).  [assumption].\n7 p_11(Punk) -> p_3(Punk).  [assumption].\n8 p_10(Punk) -> p_11(Punk) | p_12(Punk).  [assumption].\n9 -(p_1(Punk) -> -(p_15(Punk) <-> p_10(Punk))).  [goal].\n12 -p_18(x) | p_7(x).  [clausify(2)].\n13 -p_7(Punk).  [assumption].\n14 -p_5(Punk) | p_17(Punk) | p_18(Punk).  [clausify(3)].\n15 p_5(Punk).  [assumption].\n17 -p_17(Punk) | -p_16(Punk) | -p_4(Punk).  [clausify(4)].\n18 p_4(Punk).  [assumption].\n20 -p_14(Punk) | -p_15(Punk) | is_p_1(Punk).  [clausify(5)].\n21 -is_p_1(Punk).  [assumption].\n22 -p_12(Punk) | p_0(Punk).  [clausify(6)].\n23 -p_0(Punk).  [assumption].\n25 -p_11(Punk) | p_3(Punk).  [clausify(7)].\n26 -p_3(Punk).  [assumption].\n27 -p_1(Punk) | p_15(Punk) | p_10(Punk).  [deny(9)].\n28 p_1(Punk).  [assumption].\n30 -p_14(Punk) | -p_15(Punk).  [resolve(20,c,21,a)].\n31 p_14(Punk) | p_16(Punk).  [assumption].\n32 p_15(Punk) | p_10(Punk).  [resolve(27,a,28,a)].\n33 -p_10(Punk) | p_11(Punk) | p_12(Punk).  [clausify(8)].\n35 p_17(Punk) | p_18(Punk).  [resolve(14,a,15,a)].\n36 -p_18(Punk).  [resolve(12,b,13,a)].\n37 p_17(Punk).  [resolve(35,b,36,a)].\n38 -p_17(Punk) | -p_16(Punk).  [resolve(17,c,18,a)].\n39 p_15(Punk) | p_11(Punk) | p_12(Punk).  [resolve(32,b,33,a)].\n40 -p_12(Punk).  [resolve(22,b,23,a)].\n41 p_15(Punk) | p_11(Punk).  [resolve(39,c,40,a)].\n42 -p_11(Punk).  [resolve(25,b,26,a)].\n43 p_15(Punk).  [resolve(41,b,42,a)].\n44 -p_15(Punk) | p_16(Punk).  [resolve(30,a,31,a)].\n45 p_16(Punk).  [resolve(43,a,44,a)].\n46 -p_16(Punk).  [resolve(37,a,38,a)].\n47 $F.  [resolve(45,a,46,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Punk)\np_9(Punk)\np_6(Punk)\n\u00acp_7(Punk)\np_5(Punk)\np_4(Punk)\n\u00acis_p_1(Punk)\n\u00acp_0(Punk)\n\u00acp_3(Punk)\np_1(Punk)\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))\n(p_5(Punk) \u2295 p_17(Punk)) \u2192 p_18(Punk)\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))\np_14(Punk) \u2228 p_16(Punk)\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)\np_11(Punk) \u2192 p_3(Punk)\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))\n\u00acp_10(Punk)\n\u00acp_15(Punk)",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk).",
                    "p_9(Punk).",
                    "p_6(Punk).",
                    "-p_7(Punk).",
                    "p_5(Punk).",
                    "p_4(Punk).",
                    "-is_p_1(Punk).",
                    "-p_0(Punk).",
                    "-p_3(Punk).",
                    "p_1(Punk).",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk).",
                    "all x (p_18(x) -> (p_6(x) & p_7(x))).",
                    "(-(p_5(Punk) <-> p_17(Punk))) -> p_18(Punk).",
                    "p_17(Punk) -> (-(p_16(Punk) <-> p_4(Punk))).",
                    "p_14(Punk) | p_16(Punk).",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk).",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk).",
                    "p_11(Punk) -> p_3(Punk).",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk)).",
                    "-p_10(Punk).",
                    "-p_15(Punk)."
                ],
                "formulas(goals)": [
                    "- (p_1(Punk) -> (- (p_15(Punk) <-> p_10(Punk))))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Punk)",
                    "\u00acp_15(Punk)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Punk)\np_9(Punk)\np_6(Punk)\n\u00acp_7(Punk)\np_5(Punk)\np_4(Punk)\n\u00acis_p_1(Punk)\n\u00acp_0(Punk)\n\u00acp_3(Punk)\np_1(Punk)\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))\np_14(Punk) \u2228 p_16(Punk)\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)\np_11(Punk) \u2192 p_3(Punk)\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))\n\u00acp_10(Punk)\np_16(Punk)\np_16(Punk) \u2192 p_15(Punk)",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk)",
                    "p_9(Punk)",
                    "p_6(Punk)",
                    "-p_7(Punk)",
                    "p_5(Punk)",
                    "p_4(Punk)",
                    "-is_p_1(Punk)",
                    "-p_0(Punk)",
                    "-p_3(Punk)",
                    "p_1(Punk)",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk)",
                    "all x (p_18(x) -> (p_6(x) & p_7(x)))",
                    "p_17(Punk) -> (-(p_16(Punk) <-> p_4(Punk)))",
                    "p_14(Punk) | p_16(Punk)",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk)",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk)",
                    "p_11(Punk) -> p_3(Punk)",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk))",
                    "-p_10(Punk)",
                    "p_16(Punk)",
                    "p_16(Punk) -> p_15(Punk)"
                ],
                "formulas(goals)": [
                    "p_1(Punk) -> (-(p_15(Punk) <-> p_10(Punk)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_15(Punk)"
                ],
                "removed_rules": [
                    "(p_5(Punk) \u2295 p_17(Punk)) \u2192 p_18(Punk)"
                ],
                "added_facts": [
                    "p_16(Punk)"
                ],
                "added_rules": [
                    "p_16(Punk) \u2192 p_15(Punk)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Punk)\np_9(Punk)\np_6(Punk)\n\u00acp_7(Punk)\np_5(Punk)\np_4(Punk)\n\u00acis_p_1(Punk)\n\u00acp_0(Punk)\n\u00acp_3(Punk)\np_1(Punk)\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))\np_14(Punk) \u2228 p_16(Punk)\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)\np_11(Punk) \u2192 p_3(Punk)\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))\n\u00acp_10(Punk)\np_16(Punk)\np_16(Punk) \u2192 p_15(Punk)\np_13(Punk) \u2192 p_9(Punk)\np_8(Punk) \u2192 p_9(Punk)",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk)",
                    "p_9(Punk)",
                    "p_6(Punk)",
                    "-p_7(Punk)",
                    "p_5(Punk)",
                    "p_4(Punk)",
                    "-is_p_1(Punk)",
                    "-p_0(Punk)",
                    "-p_3(Punk)",
                    "p_1(Punk)",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk)",
                    "all x (p_18(x) -> (p_6(x) & p_7(x)))",
                    "p_17(Punk) -> -(p_16(Punk) <-> p_4(Punk))",
                    "p_14(Punk) | p_16(Punk)",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk)",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk)",
                    "p_11(Punk) -> p_3(Punk)",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk))",
                    "-p_10(Punk)",
                    "p_16(Punk)",
                    "p_16(Punk) -> p_15(Punk)",
                    "p_13(Punk) -> p_9(Punk)",
                    "p_8(Punk) -> p_9(Punk)"
                ],
                "formulas(goals)": [
                    "p_1(Punk) -> -(p_15(Punk) <-> p_10(Punk))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_13(Punk) \u2192 p_9(Punk)",
                    "p_8(Punk) \u2192 p_9(Punk)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Punk)\np_9(Punk)\np_6(Punk)\n\u00acp_7(Punk)\np_5(Punk)\np_4(Punk)\n\u00acis_p_1(Punk)\n\u00acp_0(Punk)\n\u00acp_3(Punk)\np_1(Punk)\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))\np_14(Punk) \u2228 p_16(Punk)\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)\np_11(Punk) \u2192 p_3(Punk)\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))\n\u00acp_10(Punk)\np_16(Punk)\np_16(Punk) \u2192 p_15(Punk)\np_13(Punk) \u2192 p_9(Punk)\np_8(Punk) \u2192 p_9(Punk)\np_15(Punk)\n\u00acp_15(Punk) \u2192 \u00acp_16(Punk)\n\u00acp_9(Punk) \u2192 (\u00acp_13(Punk) \u2227 \u00acp_8(Punk))\n\u00acp_17(Punk)\n(\u00acp_11(Punk) \u2227 \u00acp_12(Punk)) \u2192 \u00acp_10(Punk)\n\u00acp_18(Punk)",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk)",
                    "p_9(Punk)",
                    "p_6(Punk)",
                    "-p_7(Punk)",
                    "p_5(Punk)",
                    "p_4(Punk)",
                    "-is_p_1(Punk)",
                    "-p_0(Punk)",
                    "-p_3(Punk)",
                    "p_1(Punk)",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk)",
                    "all x (p_18(x) -> (p_6(x) & p_7(x)))",
                    "p_17(Punk) -> (-(p_16(Punk) <-> p_4(Punk)))",
                    "p_14(Punk) | p_16(Punk)",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk)",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk)",
                    "p_11(Punk) -> p_3(Punk)",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk))",
                    "-p_10(Punk)",
                    "p_16(Punk)",
                    "p_16(Punk) -> p_15(Punk)",
                    "p_13(Punk) -> p_9(Punk)",
                    "p_8(Punk) -> p_9(Punk)",
                    "p_15(Punk)",
                    "-p_15(Punk) -> -p_16(Punk)",
                    "-p_9(Punk) -> (-p_13(Punk) & -p_8(Punk))",
                    "-p_17(Punk)",
                    "(-p_11(Punk) & -p_12(Punk)) -> -p_10(Punk)",
                    "-p_18(Punk)"
                ],
                "formulas(goals)": [
                    "p_1(Punk) -> (-(p_15(Punk) <-> p_10(Punk)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_15(Punk)",
                    "\u00acp_17(Punk)",
                    "\u00acp_18(Punk)"
                ],
                "added_rules": [
                    "\u00acp_15(Punk) \u2192 \u00acp_16(Punk)",
                    "\u00acp_9(Punk) \u2192 (\u00acp_13(Punk) \u2227 \u00acp_8(Punk))",
                    "(\u00acp_11(Punk) \u2227 \u00acp_12(Punk)) \u2192 \u00acp_10(Punk)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Punk).\np_9(Punk).\np_6(Punk).\n\u00acp_7(Punk).\np_5(Punk).\np_4(Punk).\n\u00acis_p_1(Punk).\n\u00acp_0(Punk).\n\u00acp_3(Punk).\np_1(Punk).\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk).\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x))).\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk)).\np_14(Punk) \u2228 p_16(Punk).\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk).\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk).\np_11(Punk) \u2192 p_3(Punk).\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk)).\n\u00acp_10(Punk).\np_16(Punk).\np_13(Punk) \u2192 p_9(Punk).\np_8(Punk) \u2192 p_9(Punk).\n\u00acp_15(Punk) \u2192 \u00acp_16(Punk).\n\u00acp_9(Punk) \u2192 (\u00acp_13(Punk) \u2227 \u00acp_8(Punk)).\n\u00acp_17(Punk).\n(\u00acp_11(Punk) \u2227 \u00acp_12(Punk)) \u2192 \u00acp_10(Punk).\n\u00acp_18(Punk).\n\u00acp_15(Punk).",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk).",
                    "p_9(Punk).",
                    "p_6(Punk).",
                    "-p_7(Punk).",
                    "p_5(Punk).",
                    "p_4(Punk).",
                    "-is_p_1(Punk).",
                    "-p_0(Punk).",
                    "-p_3(Punk).",
                    "p_1(Punk).",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk).",
                    "all x (p_18(x) -> (p_6(x) & p_7(x))).",
                    "p_17(Punk) -> (-(p_16(Punk) <-> p_4(Punk))).",
                    "p_14(Punk) | p_16(Punk).",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk).",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk).",
                    "p_11(Punk) -> p_3(Punk).",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk)).",
                    "-p_10(Punk).",
                    "p_16(Punk).",
                    "p_13(Punk) -> p_9(Punk).",
                    "p_8(Punk) -> p_9(Punk).",
                    "(-p_15(Punk)) -> (-p_16(Punk)).",
                    "(-p_9(Punk)) -> ((-p_13(Punk)) & (-p_8(Punk))).",
                    "-p_17(Punk).",
                    "((-p_11(Punk)) & (-p_12(Punk))) -> (-p_10(Punk)).",
                    "-p_18(Punk).",
                    "-p_15(Punk)."
                ],
                "formulas(goals)": [
                    "-(-p_1(Punk) | (-(p_15(Punk) <-> p_10(Punk))))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_15(Punk)"
                ],
                "removed_rules": [
                    "p_16(Punk) \u2192 p_15(Punk)"
                ],
                "added_facts": [
                    "\u00acp_15(Punk)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Punk).\np_9(Punk).\np_6(Punk).\n\u00acp_7(Punk).\np_5(Punk).\np_4(Punk).\n\u00acis_p_1(Punk).\n\u00acp_0(Punk).\n\u00acp_3(Punk).\np_1(Punk).\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk).\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x))).\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk)).\np_14(Punk) \u2228 p_16(Punk).\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk).\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk).\np_11(Punk) \u2192 p_3(Punk).\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk)).\n\u00acp_10(Punk).\np_16(Punk).\np_13(Punk) \u2192 p_9(Punk).\np_8(Punk) \u2192 p_9(Punk).\n\u00acp_15(Punk) \u2192 \u00acp_16(Punk).\n\u00acp_9(Punk) \u2192 (\u00acp_13(Punk) \u2227 \u00acp_8(Punk)).\n\u00acp_17(Punk).\n(\u00acp_11(Punk) \u2227 \u00acp_12(Punk)) \u2192 \u00acp_10(Punk).\n\u00acp_18(Punk).\np_16(Punk) \u2192 p_15(Punk).",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk).",
                    "p_9(Punk).",
                    "p_6(Punk).",
                    "-p_7(Punk).",
                    "p_5(Punk).",
                    "p_4(Punk).",
                    "-is_p_1(Punk).",
                    "-p_0(Punk).",
                    "-p_3(Punk).",
                    "p_1(Punk).",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk).",
                    "all x (p_18(x) -> (p_6(x) & p_7(x))).",
                    "p_17(Punk) -> (-(p_16(Punk) <-> p_4(Punk))).",
                    "p_14(Punk) | p_16(Punk).",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk).",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk).",
                    "p_11(Punk) -> p_3(Punk).",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk)).",
                    "-p_10(Punk).",
                    "p_16(Punk).",
                    "p_13(Punk) -> p_9(Punk).",
                    "p_8(Punk) -> p_9(Punk).",
                    "-p_15(Punk) -> -p_16(Punk).",
                    "-p_9(Punk) -> (-p_13(Punk) & -p_8(Punk)).",
                    "-p_17(Punk).",
                    "(-p_11(Punk) & -p_12(Punk)) -> -p_10(Punk).",
                    "-p_18(Punk).",
                    "p_16(Punk) -> p_15(Punk)."
                ],
                "formulas(goals)": [
                    "p_1(Punk) -> (-(p_15(Punk) <-> p_10(Punk)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_15(Punk)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_16(Punk) \u2192 p_15(Punk)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Punk)\np_9(Punk)\np_6(Punk)\n\u00acp_7(Punk)\np_5(Punk)\np_4(Punk)\n\u00acis_p_1(Punk)\n\u00acp_0(Punk)\n\u00acp_3(Punk)\np_1(Punk)\n(p_13(Punk) \u2228 p_8(Punk)) \u2192 p_9(Punk)\n\u2200x (p_18(x) \u2192 (p_6(x) \u2227 p_7(x)))\np_17(Punk) \u2192 (p_16(Punk) \u2295 p_4(Punk))\np_14(Punk) \u2228 p_16(Punk)\n(p_14(Punk) \u2227 p_15(Punk)) \u2192 is_p_1(Punk)\n(p_12(Punk) \u2228 p_13(Punk)) \u2192 p_0(Punk)\np_11(Punk) \u2192 p_3(Punk)\np_10(Punk) \u2192 (p_11(Punk) \u2228 p_12(Punk))\n\u00acp_10(Punk)\np_16(Punk)\np_13(Punk) \u2192 p_9(Punk)\np_8(Punk) \u2192 p_9(Punk)\n\u00acp_15(Punk) \u2192 \u00acp_16(Punk)\n\u00acp_9(Punk) \u2192 (\u00acp_13(Punk) \u2227 \u00acp_8(Punk))\n\u00acp_17(Punk)\n(\u00acp_11(Punk) \u2227 \u00acp_12(Punk)) \u2192 \u00acp_10(Punk)\n\u00acp_18(Punk)\np_16(Punk) \u2192 \u00acp_15(Punk)",
            "Initial Goal": "p_1(Punk) \u2192 (p_15(Punk) \u2295 p_10(Punk))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Punk).",
                    "p_9(Punk).",
                    "p_6(Punk).",
                    "-p_7(Punk).",
                    "p_5(Punk).",
                    "p_4(Punk).",
                    "-is_p_1(Punk).",
                    "-p_0(Punk).",
                    "-p_3(Punk).",
                    "p_1(Punk).",
                    "(p_13(Punk) | p_8(Punk)) -> p_9(Punk).",
                    "all x (p_18(x) -> (p_6(x) & p_7(x))).",
                    "p_17(Punk) -> (-(p_16(Punk) <-> p_4(Punk))).",
                    "p_14(Punk) | p_16(Punk).",
                    "(p_14(Punk) & p_15(Punk)) -> is_p_1(Punk).",
                    "(p_12(Punk) | p_13(Punk)) -> p_0(Punk).",
                    "p_11(Punk) -> p_3(Punk).",
                    "p_10(Punk) -> (p_11(Punk) | p_12(Punk)).",
                    "-p_10(Punk).",
                    "p_16(Punk).",
                    "p_13(Punk) -> p_9(Punk).",
                    "p_8(Punk) -> p_9(Punk).",
                    "-p_15(Punk) -> -p_16(Punk).",
                    "-p_9(Punk) -> (-p_13(Punk) & -p_8(Punk)).",
                    "-p_17(Punk).",
                    "(-p_11(Punk) & -p_12(Punk)) -> -p_10(Punk).",
                    "-p_18(Punk).",
                    "p_16(Punk) -> -p_15(Punk)."
                ],
                "formulas(goals)": [
                    "- ( p_1(Punk) -> (-(p_15(Punk) <-> p_10(Punk))) )."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_16(Punk) \u2192 p_15(Punk)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_16(Punk) \u2192 \u00acp_15(Punk)"
                ]
            }
        }
    ]
}