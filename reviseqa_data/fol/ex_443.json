{
    "background_story": "Bria's life was a testament to the power of providence. Growing up in a low-income household, she often wondered if she was destined for more. One day, while volunteering at a local library, she met a stranger who would change her life. The woman, a successful business owner, took Bria under her wing and became her mentor. Through this chance encounter, Bria discovered her passion for entrepreneurship and received guidance to pursue her dreams. She went on to create a thriving non-profit organization that provided educational resources to underprivileged children. Bria believed that her meeting with the stranger was more than coincidence, but rather providence guiding her towards her purpose. Her story inspired countless others to trust in the unfolding of their own paths and to recognize the role of providence in their lives.",
    "predicates": [
        {
            "id": 0,
            "name": "dedicated"
        },
        {
            "id": 1,
            "name": "feels_fulfilled"
        },
        {
            "id": 2,
            "name": "trusts_providence"
        },
        {
            "id": 3,
            "name": "makes_impact"
        },
        {
            "id": 4,
            "name": "caring"
        },
        {
            "id": 5,
            "name": "successful"
        },
        {
            "id": 6,
            "name": "hardworking"
        },
        {
            "id": 7,
            "name": "lucky"
        },
        {
            "id": 8,
            "name": "resilient"
        },
        {
            "id": 9,
            "name": "optimistic"
        },
        {
            "id": 10,
            "name": "achieves_goals"
        },
        {
            "id": 11,
            "name": "helps_others"
        },
        {
            "id": 12,
            "name": "finds_purpose"
        },
        {
            "id": 13,
            "name": "takes_risks"
        },
        {
            "id": 14,
            "name": "meets_mentor"
        },
        {
            "id": 15,
            "name": "talented"
        },
        {
            "id": 16,
            "name": "sets_plans"
        },
        {
            "id": 17,
            "name": "seeks_guidance"
        },
        {
            "id": 18,
            "name": "faces_challenges"
        },
        {
            "id": 19,
            "name": "bounces_back"
        },
        {
            "id": 20,
            "name": "open_minded"
        },
        {
            "id": 21,
            "name": "seeks_knowledge"
        },
        {
            "id": 22,
            "name": "has_passion"
        },
        {
            "id": 23,
            "name": "inspires_others"
        }
    ],
    "subject_name": "Bria",
    "subject_category": "human",
    "keyword": "providence",
    "all_facts": [
        {
            "id": 0,
            "subject": "Bria",
            "text": "Bria is dedicated.",
            "fol": "p_0(Bria)",
            "str_fol": "dedicated(Bria)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Bria",
            "text": "Bria does not feel fulfilled.",
            "fol": "\u00acp_1(Bria)",
            "str_fol": "\u00acfeels_fulfilled(Bria)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bria",
            "text": "Bria does not trust in providence.",
            "fol": "\u00acp_2(Bria)",
            "str_fol": "\u00actrusts_providence(Bria)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Bria",
            "text": "Bria does not make a positive impact.",
            "fol": "\u00acp_3(Bria)",
            "str_fol": "\u00acmakes_impact(Bria)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Bria",
            "text": "Bria is caring.",
            "fol": "p_4(Bria)",
            "str_fol": "caring(Bria)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bria",
            "text": "Bria helps others.",
            "fol": "p_11(Bria)",
            "str_fol": "helps_others(Bria)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Bria",
            "text": "Bria does not find her purpose.",
            "fol": "\u00acp_12(Bria)",
            "str_fol": "\u00acfinds_purpose(Bria)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Bria",
            "text": "Bria is not resilient.",
            "fol": "\u00acp_8(Bria)",
            "str_fol": "\u00acresilient(Bria)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Bria",
            "text": "Bria does not achieve her goals.",
            "fol": "\u00acp_10(Bria)",
            "str_fol": "\u00acachieves_goals(Bria)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Bria",
            "text": "Bria is not hardworking.",
            "fol": "\u00acp_6(Bria)",
            "str_fol": "\u00achardworking(Bria)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Bria",
            "text": "Bria is not lucky.",
            "fol": "\u00acp_7(Bria)",
            "str_fol": "\u00aclucky(Bria)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Bria",
            "text": "Bria is successful.",
            "fol": "p_5(Bria)",
            "str_fol": "successful(Bria)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Bria",
            "text": "Bria is caring.",
            "fol": "p_4(Bria)",
            "str_fol": "caring(Bria)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Bria",
            "text": "Bria does not make a positive impact.",
            "fol": "\u00acp_3(Bria)",
            "str_fol": "\u00acmakes_impact(Bria)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bria",
            "text": "Bria does not feel fulfilled.",
            "fol": "\u00acp_1(Bria)",
            "str_fol": "\u00acfeels_fulfilled(Bria)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bria",
            "text": "Bria does not trust in providence.",
            "fol": "\u00acp_2(Bria)",
            "str_fol": "\u00actrusts_providence(Bria)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Bria",
            "text": "Bria is dedicated.",
            "fol": "p_0(Bria)",
            "str_fol": "dedicated(Bria)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If someone is caring, then they help other people.",
            "fol": "\u2200x (p_4(x) \u2192 p_11(x))",
            "str_fol": "\u2200x (caring(x) \u2192 helps_others(x))"
        },
        {
            "id": 5,
            "text": "Everyone who finds their purpose either makes a positive impact or feels fulfilled (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (finds_purpose(x) \u2192 (makes_impact(x) \u2228 feels_fulfilled(x)))"
        },
        {
            "id": 4,
            "text": "If Bria is resilient, then she either finds her purpose or trusts in providence.",
            "fol": "p_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))",
            "str_fol": "resilient(Bria) \u2192 (finds_purpose(Bria) \u2228 trusts_providence(Bria))"
        },
        {
            "id": 3,
            "text": "If Bria is dedicated, then she either achieves her goals or helps others, but not both.",
            "fol": "p_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))",
            "str_fol": "dedicated(Bria) \u2192 (achieves_goals(Bria) \u2295 helps_others(Bria))"
        },
        {
            "id": 2,
            "text": "If Bria is hardworking, then she achieves her goals.",
            "fol": "p_6(Bria) \u2192 p_10(Bria)",
            "str_fol": "hardworking(Bria) \u2192 achieves_goals(Bria)"
        },
        {
            "id": 1,
            "text": "If Bria is lucky, then she is resilient and optimistic.",
            "fol": "p_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))",
            "str_fol": "lucky(Bria) \u2192 (resilient(Bria) \u2227 optimistic(Bria))"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is successful, then they are either hardworking or lucky (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (successful(x) \u2192 (hardworking(x) \u2228 lucky(x)))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Bria",
            "text": "Bria is caring.",
            "fol": "p_4(Bria)",
            "str_fol": "caring(Bria)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Bria",
            "text": "Bria does not make a positive impact.",
            "fol": "\u00acp_3(Bria)",
            "str_fol": "\u00acmakes_impact(Bria)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bria",
            "text": "Bria does not feel fulfilled.",
            "fol": "\u00acp_1(Bria)",
            "str_fol": "\u00acfeels_fulfilled(Bria)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bria",
            "text": "Bria does not trust in providence.",
            "fol": "\u00acp_2(Bria)",
            "str_fol": "\u00actrusts_providence(Bria)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Bria",
            "text": "Bria is dedicated.",
            "fol": "p_0(Bria)",
            "str_fol": "dedicated(Bria)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If someone is caring, then they help other people.",
            "fol": "\u2200x (p_4(x) \u2192 p_11(x))",
            "str_fol": "\u2200x (caring(x) \u2192 helps_others(x))"
        },
        {
            "id": 5,
            "text": "Everyone who finds their purpose either makes a positive impact or feels fulfilled (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (finds_purpose(x) \u2192 (makes_impact(x) \u2228 feels_fulfilled(x)))"
        },
        {
            "id": 4,
            "text": "If Bria is resilient, then she either finds her purpose or trusts in providence.",
            "fol": "p_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))",
            "str_fol": "resilient(Bria) \u2192 (finds_purpose(Bria) \u2228 trusts_providence(Bria))"
        },
        {
            "id": 3,
            "text": "If Bria is dedicated, then she either achieves her goals or helps others, but not both.",
            "fol": "p_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))",
            "str_fol": "dedicated(Bria) \u2192 (achieves_goals(Bria) \u2295 helps_others(Bria))"
        },
        {
            "id": 2,
            "text": "If Bria is hardworking, then she achieves her goals.",
            "fol": "p_6(Bria) \u2192 p_10(Bria)",
            "str_fol": "hardworking(Bria) \u2192 achieves_goals(Bria)"
        },
        {
            "id": 1,
            "text": "If Bria is lucky, then she is resilient and optimistic.",
            "fol": "p_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))",
            "str_fol": "lucky(Bria) \u2192 (resilient(Bria) \u2227 optimistic(Bria))"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is successful, then they are either hardworking or lucky (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (successful(x) \u2192 (hardworking(x) \u2228 lucky(x)))"
        }
    ],
    "context_fol": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (p_4(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))\np_6(Bria) \u2192 p_10(Bria)\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
    "conclusion": {
        "id": 11,
        "subject": "Bria",
        "text": "Bria is successful.",
        "fol": "p_5(Bria)",
        "str_fol": "successful(Bria)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_5(Bria)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Bria",
                    "text": "Bria is caring.",
                    "fol": "p_4(Bria)",
                    "str_fol": "caring(Bria)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone is caring, then they help other people.",
                    "fol": "\u2200x (p_4(x) \u2192 p_11(x))",
                    "str_fol": "\u2200x (caring(x) \u2192 helps_others(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Bria",
                "text": "Bria helps others.",
                "fol": "p_11(Bria)",
                "str_fol": "helps_others(Bria)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Bria",
                    "text": "Bria does not make a positive impact.",
                    "fol": "\u00acp_3(Bria)",
                    "str_fol": "\u00acmakes_impact(Bria)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Bria",
                    "text": "Bria does not feel fulfilled.",
                    "fol": "\u00acp_1(Bria)",
                    "str_fol": "\u00acfeels_fulfilled(Bria)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone who finds their purpose either makes a positive impact or feels fulfilled (or both).",
                    "fol": "\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))",
                    "str_fol": "\u2200x (finds_purpose(x) \u2192 (makes_impact(x) \u2228 feels_fulfilled(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Bria",
                "text": "Bria does not find her purpose.",
                "fol": "\u00acp_12(Bria)",
                "str_fol": "\u00acfinds_purpose(Bria)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Bria",
                    "text": "Bria does not find her purpose.",
                    "fol": "\u00acp_12(Bria)",
                    "str_fol": "\u00acfinds_purpose(Bria)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Bria",
                    "text": "Bria does not trust in providence.",
                    "fol": "\u00acp_2(Bria)",
                    "str_fol": "\u00actrusts_providence(Bria)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Bria is resilient, then she either finds her purpose or trusts in providence.",
                    "fol": "p_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))",
                    "str_fol": "resilient(Bria) \u2192 (finds_purpose(Bria) \u2228 trusts_providence(Bria))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Bria",
                "text": "Bria is not resilient.",
                "fol": "\u00acp_8(Bria)",
                "str_fol": "\u00acresilient(Bria)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Bria",
                    "text": "Bria is dedicated.",
                    "fol": "p_0(Bria)",
                    "str_fol": "dedicated(Bria)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Bria",
                    "text": "Bria helps others.",
                    "fol": "p_11(Bria)",
                    "str_fol": "helps_others(Bria)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Bria is dedicated, then she either achieves her goals or helps others, but not both.",
                    "fol": "p_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))",
                    "str_fol": "dedicated(Bria) \u2192 (achieves_goals(Bria) \u2295 helps_others(Bria))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Bria",
                "text": "Bria does not achieve her goals.",
                "fol": "\u00acp_10(Bria)",
                "str_fol": "\u00acachieves_goals(Bria)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Bria",
                    "text": "Bria does not achieve her goals.",
                    "fol": "\u00acp_10(Bria)",
                    "str_fol": "\u00acachieves_goals(Bria)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Bria is hardworking, then she achieves her goals.",
                    "fol": "p_6(Bria) \u2192 p_10(Bria)",
                    "str_fol": "hardworking(Bria) \u2192 achieves_goals(Bria)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Bria",
                "text": "Bria is not hardworking.",
                "fol": "\u00acp_6(Bria)",
                "str_fol": "\u00achardworking(Bria)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Bria",
                    "text": "Bria is not resilient.",
                    "fol": "\u00acp_8(Bria)",
                    "str_fol": "\u00acresilient(Bria)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Bria is lucky, then she is resilient and optimistic.",
                    "fol": "p_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))",
                    "str_fol": "lucky(Bria) \u2192 (resilient(Bria) \u2227 optimistic(Bria))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Bria",
                "text": "Bria is not lucky.",
                "fol": "\u00acp_7(Bria)",
                "str_fol": "\u00aclucky(Bria)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Bria",
                    "text": "Bria is not hardworking.",
                    "fol": "\u00acp_6(Bria)",
                    "str_fol": "\u00achardworking(Bria)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Bria",
                    "text": "Bria is not lucky.",
                    "fol": "\u00acp_7(Bria)",
                    "str_fol": "\u00aclucky(Bria)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if someone is successful, then they are either hardworking or lucky (or both).",
                    "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
                    "str_fol": "\u2200x (successful(x) \u2192 (hardworking(x) \u2228 lucky(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Bria",
                "text": "Bria is successful.",
                "fol": "p_5(Bria)",
                "str_fol": "successful(Bria)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_4(x) -> p_11(x))).  [assumption].\n2 (all x (p_12(x) -> p_3(x) | p_1(x))).  [assumption].\n3 p_8(Bria) -> p_12(Bria) | p_2(Bria).  [assumption].\n4 p_0(Bria) -> -(p_10(Bria) <-> p_11(Bria)).  [assumption].\n5 p_6(Bria) -> p_10(Bria).  [assumption].\n6 p_7(Bria) -> p_8(Bria) & p_9(Bria).  [assumption].\n7 (all x (p_5(x) -> p_6(x) | p_7(x))).  [assumption].\n8 -p_5(Bria).  [goal].\n9 -p_4(x) | p_11(x).  [clausify(1)].\n10 p_4(Bria).  [assumption].\n11 -p_12(x) | p_3(x) | p_1(x).  [clausify(2)].\n12 -p_3(Bria).  [assumption].\n13 -p_12(Bria) | p_1(Bria).  [resolve(11,b,12,a)].\n14 -p_1(Bria).  [assumption].\n15 -p_8(Bria) | p_12(Bria) | p_2(Bria).  [clausify(3)].\n16 -p_2(Bria).  [assumption].\n18 p_0(Bria).  [assumption].\n19 -p_0(Bria) | -p_10(Bria) | -p_11(Bria).  [clausify(4)].\n20 -p_5(x) | p_6(x) | p_7(x).  [clausify(7)].\n21 -p_6(Bria) | p_10(Bria).  [clausify(5)].\n22 -p_5(Bria) | p_7(Bria) | p_10(Bria).  [resolve(20,b,21,a)].\n23 -p_7(Bria) | p_8(Bria).  [clausify(6)].\n25 -p_5(Bria) | p_10(Bria) | p_8(Bria).  [resolve(22,b,23,a)].\n26 p_5(Bria).  [deny(8)].\n28 -p_10(Bria) | -p_11(Bria).  [resolve(19,a,18,a)].\n29 p_11(Bria).  [resolve(9,a,10,a)].\n30 -p_8(Bria) | p_12(Bria).  [resolve(15,c,16,a)].\n31 -p_12(Bria).  [resolve(13,b,14,a)].\n32 -p_10(Bria).  [resolve(28,b,29,a)].\n33 p_10(Bria) | p_8(Bria).  [resolve(25,a,26,a)].\n35 p_8(Bria).  [resolve(32,a,33,a)].\n36 -p_8(Bria).  [resolve(30,b,31,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (p_4(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))\np_6(Bria) \u2192 p_10(Bria)\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 \u00ac(p_10(Bria) \u2227 p_11(Bria))",
            "Initial Goal": "p_5(Bria)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria)",
                    "-p_3(Bria)",
                    "-p_1(Bria)",
                    "-p_2(Bria)",
                    "p_0(Bria)",
                    "all x (p_4(x) -> p_11(x))",
                    "all x (p_12(x) -> (p_3(x) | p_1(x)))",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) <-> p_11(Bria)))",
                    "p_6(Bria) -> p_10(Bria)",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_11(Bria)",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) & p_11(Bria)))"
                ],
                "formulas(goals)": [
                    "-p_5(Bria)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Bria)"
                ],
                "added_rules": [
                    "p_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))",
                    "p_0(Bria) \u2192 \u00ac(p_10(Bria) \u2227 p_11(Bria))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (p_4(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))\np_6(Bria) \u2192 p_10(Bria)\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 \u00ac(p_10(Bria) \u2227 p_11(Bria))\n\u00acp_10(Bria)\n(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)\n\u00acp_12(Bria)\n\u00acp_8(Bria)\n\u00acp_7(Bria)",
            "Initial Goal": "p_5(Bria)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria)",
                    "-p_3(Bria)",
                    "-p_1(Bria)",
                    "-p_2(Bria)",
                    "p_0(Bria)",
                    "all x (p_4(x) -> p_11(x))",
                    "all x (p_12(x) -> (p_3(x) | p_1(x)))",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) <-> p_11(Bria)))",
                    "p_6(Bria) -> p_10(Bria)",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_11(Bria)",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) & p_11(Bria)))",
                    "-p_10(Bria)",
                    "(-p_3(Bria) & -p_1(Bria)) -> -p_12(Bria)",
                    "-p_12(Bria)",
                    "-p_8(Bria)",
                    "-p_7(Bria)"
                ],
                "formulas(goals)": [
                    "-p_5(Bria)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Bria)",
                    "\u00acp_12(Bria)",
                    "\u00acp_8(Bria)",
                    "\u00acp_7(Bria)"
                ],
                "added_rules": [
                    "(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (p_4(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 \u00ac(p_10(Bria) \u2227 p_11(Bria))\n\u00acp_10(Bria)\n(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)\n\u00acp_12(Bria)\n\u00acp_8(Bria)\n\u00acp_7(Bria)\n(p_0(Bria) \u2227 \u00acp_10(Bria)) \u2192 p_5(Bria)",
            "Initial Goal": "p_5(Bria)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria)",
                    "-p_3(Bria)",
                    "-p_1(Bria)",
                    "-p_2(Bria)",
                    "p_0(Bria)",
                    "all x (p_4(x) -> p_11(x))",
                    "all x (p_12(x) -> (p_3(x) | p_1(x)))",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) <-> p_11(Bria)))",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_11(Bria)",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) & p_11(Bria)))",
                    "-p_10(Bria)",
                    "(-p_3(Bria) & -p_1(Bria)) -> -p_12(Bria)",
                    "-p_12(Bria)",
                    "-p_8(Bria)",
                    "-p_7(Bria)",
                    "(p_0(Bria) & -p_10(Bria)) -> p_5(Bria)"
                ],
                "formulas(goals)": [
                    "p_5(Bria)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Bria) \u2192 p_10(Bria)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Bria) \u2227 \u00acp_10(Bria)) \u2192 p_5(Bria)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (\u00acp_11(x) \u2192 \u00acp_4(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x ((\u00acp_6(x) \u2227 \u00acp_7(x)) \u2192 \u00acp_5(x))\np_11(Bria)\np_11(Bria) \u2228 p_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 \u00ac(p_10(Bria) \u2227 p_11(Bria))\n\u00acp_10(Bria)\n(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)\n\u00acp_12(Bria)\n(\u00acp_12(Bria) \u2227 \u00acp_2(Bria)) \u2192 \u00acp_8(Bria)\n\u00acp_8(Bria)\n(\u00acp_8(Bria) \u2228 \u00acp_9(Bria)) \u2192 \u00acp_7(Bria)\n\u00acp_7(Bria)\n(p_0(Bria) \u2227 \u00acp_10(Bria)) \u2192 p_5(Bria)",
            "Initial Goal": "p_5(Bria)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria)",
                    "-p_3(Bria)",
                    "-p_1(Bria)",
                    "-p_2(Bria)",
                    "p_0(Bria)",
                    "all x (-p_11(x) -> -p_4(x))",
                    "all x (p_12(x) -> (p_3(x) | p_1(x)))",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria))",
                    "p_0(Bria) -> (-(p_10(Bria) <-> p_11(Bria)))",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria))",
                    "all x ((-p_6(x) & -p_7(x)) -> -p_5(x))",
                    "p_11(Bria)",
                    "p_11(Bria) | p_11(Bria)",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria))",
                    "p_0(Bria) -> -(p_10(Bria) & p_11(Bria))",
                    "-p_10(Bria)",
                    "(-p_3(Bria) & -p_1(Bria)) -> -p_12(Bria)",
                    "-p_12(Bria)",
                    "(-p_12(Bria) & -p_2(Bria)) -> -p_8(Bria)",
                    "-p_8(Bria)",
                    "(-p_8(Bria) | -p_9(Bria)) -> -p_7(Bria)",
                    "-p_7(Bria)",
                    "(p_0(Bria) & -p_10(Bria)) -> p_5(Bria)"
                ],
                "formulas(goals)": [
                    "p_5(Bria)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2192 p_11(x))",
                    "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))"
                ],
                "added_facts": [
                    "p_11(Bria) \u2228 p_11(Bria)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_11(x) \u2192 \u00acp_4(x))",
                    "(\u00acp_12(Bria) \u2227 \u00acp_2(Bria)) \u2192 \u00acp_8(Bria)",
                    "(\u00acp_8(Bria) \u2228 \u00acp_9(Bria)) \u2192 \u00acp_7(Bria)",
                    "\u2200x ((\u00acp_6(x) \u2227 \u00acp_7(x)) \u2192 \u00acp_5(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (\u00acp_11(x) \u2192 \u00acp_4(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 (p_10(Bria) \u2295 p_11(Bria))\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x ((\u00acp_6(x) \u2227 \u00acp_7(x)) \u2192 \u00acp_5(x))\np_11(Bria)\np_11(Bria) \u2228 p_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 \u00ac(p_10(Bria) \u2227 p_11(Bria))\n\u00acp_10(Bria)\n(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)\n\u00acp_12(Bria)\n(\u00acp_12(Bria) \u2227 \u00acp_2(Bria)) \u2192 \u00acp_8(Bria)\n\u00acp_8(Bria)\n(\u00acp_8(Bria) \u2228 \u00acp_9(Bria)) \u2192 \u00acp_7(Bria)\n\u00acp_7(Bria)\n(p_0(Bria) \u2227 \u00acp_10(Bria)) \u2192 p_5(Bria)\np_11(Bria) \u2228 \u00acp_11(Bria)\np_4(Bria) \u2192 p_11(Bria)\np_7(Bria) \u2192 p_8(Bria)\np_7(Bria) \u2192 p_9(Bria)\np_11(Bria) \u2228 p_10(Bria)\np_5(Bria) \u2228 \u00acp_5(Bria)",
            "Initial Goal": "p_5(Bria)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria)",
                    "-p_3(Bria)",
                    "-p_1(Bria)",
                    "-p_2(Bria)",
                    "p_0(Bria)",
                    "all x (-p_11(x) -> -p_4(x))",
                    "all x (p_12(x) -> (p_3(x) | p_1(x)))",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria))",
                    "p_0(Bria) -> -(p_10(Bria) <-> p_11(Bria))",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria))",
                    "all x ((-p_6(x) & -p_7(x)) -> -p_5(x))",
                    "p_11(Bria)",
                    "p_11(Bria) | p_11(Bria)",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria))",
                    "p_0(Bria) -> -(p_10(Bria) & p_11(Bria))",
                    "-p_10(Bria)",
                    "(-p_3(Bria) & -p_1(Bria)) -> -p_12(Bria)",
                    "-p_12(Bria)",
                    "(-p_12(Bria) & -p_2(Bria)) -> -p_8(Bria)",
                    "-p_8(Bria)",
                    "(-p_8(Bria) | -p_9(Bria)) -> -p_7(Bria)",
                    "-p_7(Bria)",
                    "(p_0(Bria) & -p_10(Bria)) -> p_5(Bria)",
                    "p_11(Bria) | -p_11(Bria)",
                    "p_4(Bria) -> p_11(Bria)",
                    "p_7(Bria) -> p_8(Bria)",
                    "p_7(Bria) -> p_9(Bria)",
                    "p_11(Bria) | p_10(Bria)",
                    "p_5(Bria) | -p_5(Bria)"
                ],
                "formulas(goals)": [
                    "p_5(Bria)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Bria) \u2228 \u00acp_11(Bria)",
                    "p_11(Bria) \u2228 p_10(Bria)",
                    "p_5(Bria) \u2228 \u00acp_5(Bria)"
                ],
                "added_rules": [
                    "p_4(Bria) \u2192 p_11(Bria)",
                    "p_7(Bria) \u2192 p_8(Bria)",
                    "p_7(Bria) \u2192 p_9(Bria)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (\u00acp_11(x) \u2192 \u00acp_4(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 ((p_10(Bria) \u2228 p_11(Bria)) \u2227 (\u00acp_10(Bria) \u2228 \u00acp_11(Bria)))\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x ((\u00acp_6(x) \u2227 \u00acp_7(x)) \u2192 \u00acp_5(x))\np_11(Bria)\np_11(Bria) \u2228 p_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 (\u00acp_10(Bria) \u2228 \u00acp_11(Bria))\n\u00acp_10(Bria)\n(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)\n\u00acp_12(Bria)\n(\u00acp_12(Bria) \u2227 \u00acp_2(Bria)) \u2192 \u00acp_8(Bria)\n\u00acp_8(Bria)\n(\u00acp_8(Bria) \u2228 \u00acp_9(Bria)) \u2192 \u00acp_7(Bria)\n\u00acp_7(Bria)\np_11(Bria) \u2228 \u00acp_11(Bria)\np_4(Bria) \u2192 p_11(Bria)\np_7(Bria) \u2192 p_8(Bria)\np_7(Bria) \u2192 p_9(Bria)\np_11(Bria) \u2228 p_10(Bria)\np_5(Bria) \u2228 \u00acp_5(Bria)\np_0(Bria) \u2192 \u00acp_6(Bria)",
            "Initial Goal": "p_5(Bria)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria).",
                    "-p_3(Bria).",
                    "-p_1(Bria).",
                    "-p_2(Bria).",
                    "p_0(Bria).",
                    "all x (-p_11(x) -> -p_4(x)).",
                    "all x (p_12(x) -> (p_3(x) | p_1(x))).",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria)).",
                    "p_0(Bria) -> ((p_10(Bria) | p_11(Bria)) & (-p_10(Bria) | -p_11(Bria))).",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria)).",
                    "all x ((-p_6(x) & -p_7(x)) -> -p_5(x)).",
                    "p_11(Bria).",
                    "p_11(Bria) | p_11(Bria).",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria)).",
                    "p_0(Bria) -> (-p_10(Bria) | -p_11(Bria)).",
                    "-p_10(Bria).",
                    "(-p_3(Bria) & -p_1(Bria)) -> -p_12(Bria).",
                    "-p_12(Bria).",
                    "(-p_12(Bria) & -p_2(Bria)) -> -p_8(Bria).",
                    "-p_8(Bria).",
                    "(-p_8(Bria) | -p_9(Bria)) -> -p_7(Bria).",
                    "-p_7(Bria).",
                    "p_11(Bria) | -p_11(Bria).",
                    "p_4(Bria) -> p_11(Bria).",
                    "p_7(Bria) -> p_8(Bria).",
                    "p_7(Bria) -> p_9(Bria).",
                    "p_11(Bria) | p_10(Bria).",
                    "p_5(Bria) | -p_5(Bria).",
                    "p_0(Bria) -> -p_6(Bria)."
                ],
                "formulas(goals)": [
                    "-p_5(Bria)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Bria) \u2227 \u00acp_10(Bria)) \u2192 p_5(Bria)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_0(Bria) \u2192 \u00acp_6(Bria)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Bria)\n\u00acp_3(Bria)\n\u00acp_1(Bria)\n\u00acp_2(Bria)\np_0(Bria)\n\u2200x (\u00acp_11(x) \u2192 \u00acp_4(x))\n\u2200x (p_12(x) \u2192 (p_3(x) \u2228 p_1(x)))\np_8(Bria) \u2192 (p_12(Bria) \u2228 p_2(Bria))\np_0(Bria) \u2192 ((p_10(Bria) \u2228 p_11(Bria)) \u2227 (\u00acp_10(Bria) \u2228 \u00acp_11(Bria)))\np_7(Bria) \u2192 (p_8(Bria) \u2227 p_9(Bria))\n\u2200x ((\u00acp_6(x) \u2227 \u00acp_7(x)) \u2192 \u00acp_5(x))\np_11(Bria)\np_11(Bria) \u2228 p_11(Bria)\np_0(Bria) \u2192 (p_10(Bria) \u2228 p_11(Bria))\np_0(Bria) \u2192 (\u00acp_10(Bria) \u2228 \u00acp_11(Bria))\n\u00acp_10(Bria)\n(\u00acp_3(Bria) \u2227 \u00acp_1(Bria)) \u2192 \u00acp_12(Bria)\n\u00acp_12(Bria)\n(\u00acp_12(Bria) \u2227 \u00acp_2(Bria)) \u2192 \u00acp_8(Bria)\n\u00acp_8(Bria)\n(\u00acp_8(Bria) \u2228 \u00acp_9(Bria)) \u2192 \u00acp_7(Bria)\n\u00acp_7(Bria)\np_11(Bria) \u2228 \u00acp_11(Bria)\np_4(Bria) \u2192 p_11(Bria)\np_7(Bria) \u2192 p_8(Bria)\np_7(Bria) \u2192 p_9(Bria)\np_11(Bria) \u2228 p_10(Bria)\np_5(Bria) \u2228 \u00acp_5(Bria)\np_0(Bria) \u2192 \u00acp_6(Bria)\np_5(Bria) \u2192 (p_6(Bria) \u2228 p_7(Bria))",
            "Initial Goal": "p_5(Bria)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bria)",
                    "-p_3(Bria)",
                    "-p_1(Bria)",
                    "-p_2(Bria)",
                    "p_0(Bria)",
                    "all x (-p_11(x) -> -p_4(x))",
                    "all x (p_12(x) -> (p_3(x) | p_1(x)))",
                    "p_8(Bria) -> (p_12(Bria) | p_2(Bria))",
                    "p_0(Bria) -> ((p_10(Bria) | p_11(Bria)) & (-p_10(Bria) | -p_11(Bria)))",
                    "p_7(Bria) -> (p_8(Bria) & p_9(Bria))",
                    "all x ((-p_6(x) & -p_7(x)) -> -p_5(x))",
                    "p_11(Bria)",
                    "p_11(Bria) | p_11(Bria)",
                    "p_0(Bria) -> (p_10(Bria) | p_11(Bria))",
                    "p_0(Bria) -> (-p_10(Bria) | -p_11(Bria))",
                    "-p_10(Bria)",
                    "(-p_3(Bria) & -p_1(Bria)) -> -p_12(Bria)",
                    "-p_12(Bria)",
                    "(-p_12(Bria) & -p_2(Bria)) -> -p_8(Bria)",
                    "-p_8(Bria)",
                    "(-p_8(Bria) | -p_9(Bria)) -> -p_7(Bria)",
                    "-p_7(Bria)",
                    "p_11(Bria) | -p_11(Bria)",
                    "p_4(Bria) -> p_11(Bria)",
                    "p_7(Bria) -> p_8(Bria)",
                    "p_7(Bria) -> p_9(Bria)",
                    "p_11(Bria) | p_10(Bria)",
                    "p_5(Bria) | -p_5(Bria)",
                    "p_0(Bria) -> -p_6(Bria)",
                    "p_5(Bria) -> (p_6(Bria) | p_7(Bria))"
                ],
                "formulas(goals)": [
                    "-p_5(Bria)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Bria) \u2192 (p_6(Bria) \u2228 p_7(Bria))"
                ]
            }
        }
    ]
}