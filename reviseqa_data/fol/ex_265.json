{
    "background_story": "Eileen was a charismatic and outspoken individual known for being a bit of a spouter. She had a tendency to dominate conversations, sharing her opinions and stories with unrelenting enthusiasm. Whether it was politics, literature, or the latest gossip, Eileen had a strong viewpoint and wasn't afraid to express it. Her friends and family often joked that she could talk the ears off a cornfield, but they secretly admired her confidence and passion. As a local radio host, Eileen's spouting abilities were put to good use, entertaining and informing her listeners with her lively commentary and debates. Love her or hate her, Eileen was always good for a lively discussion, and her spouting nature made her a beloved fixture in the community.",
    "predicates": [
        {
            "id": 0,
            "name": "listens_actively"
        },
        {
            "id": 1,
            "name": "outspoken"
        },
        {
            "id": 2,
            "name": "tell_stories"
        },
        {
            "id": 3,
            "name": "debates_issues"
        },
        {
            "id": 4,
            "name": "writes_articles"
        },
        {
            "id": 5,
            "name": "has_knowledge"
        },
        {
            "id": 6,
            "name": "educates_people"
        },
        {
            "id": 7,
            "name": "confident"
        },
        {
            "id": 8,
            "name": "speak_frees"
        },
        {
            "id": 9,
            "name": "share_opinions"
        },
        {
            "id": 10,
            "name": "informs_others"
        },
        {
            "id": 11,
            "name": "is_passionate"
        },
        {
            "id": 12,
            "name": "express_themselves"
        },
        {
            "id": 13,
            "name": "engage_others"
        },
        {
            "id": 14,
            "name": "speaks_frankly"
        },
        {
            "id": 15,
            "name": "has_conviction"
        },
        {
            "id": 16,
            "name": "is_articulate"
        },
        {
            "id": 17,
            "name": "is_reserved"
        },
        {
            "id": 18,
            "name": "voiced_thoughts"
        },
        {
            "id": 19,
            "name": "air_views"
        },
        {
            "id": 20,
            "name": "speak_clearly"
        },
        {
            "id": 21,
            "name": "convey_thoughts"
        },
        {
            "id": 22,
            "name": "has_views"
        },
        {
            "id": 23,
            "name": "lively"
        },
        {
            "id": 24,
            "name": "respects_views"
        }
    ],
    "subject_name": "Eileen",
    "subject_category": "human",
    "keyword": "spouter",
    "all_facts": [
        {
            "id": 0,
            "subject": "Eileen",
            "text": "Eileen listens actively.",
            "fol": "p_0(Eileen)",
            "str_fol": "listens_actively(Eileen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eileen",
            "text": "Eileen is outspoken.",
            "fol": "p_1(Eileen)",
            "str_fol": "outspoken(Eileen)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Eileen",
            "text": "Eileen does not tell stories.",
            "fol": "\u00acp_2(Eileen)",
            "str_fol": "\u00actell_stories(Eileen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Eileen",
            "text": "Eileen debates issues.",
            "fol": "p_3(Eileen)",
            "str_fol": "debates_issues(Eileen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Eileen",
            "text": "Eileen does not write articles.",
            "fol": "\u00acp_4(Eileen)",
            "str_fol": "\u00acwrites_articles(Eileen)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Eileen",
            "text": "Eileen has knowledge.",
            "fol": "p_5(Eileen)",
            "str_fol": "has_knowledge(Eileen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Eileen",
            "text": "Eileen does not educate people.",
            "fol": "\u00acp_6(Eileen)",
            "str_fol": "\u00aceducates_people(Eileen)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Eileen",
            "text": "Eileen does not inform others.",
            "fol": "\u00acp_10(Eileen)",
            "str_fol": "\u00acinforms_others(Eileen)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Eileen",
            "text": "Eileen is passionate.",
            "fol": "p_11(Eileen)",
            "str_fol": "is_passionate(Eileen)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Eileen",
            "text": "Eileen can express herself.",
            "fol": "p_12(Eileen)",
            "str_fol": "express_themselves(Eileen)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Eileen",
            "text": "Eileen does not share her opinions.",
            "fol": "\u00acp_9(Eileen)",
            "str_fol": "\u00acshare_opinions(Eileen)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Eileen",
            "text": "Eileen speaks her mind freely.",
            "fol": "p_8(Eileen)",
            "str_fol": "speak_frees(Eileen)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Eileen",
            "text": "Eileen has knowledge.",
            "fol": "p_5(Eileen)",
            "str_fol": "has_knowledge(Eileen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Eileen",
            "text": "Eileen does not educate people.",
            "fol": "\u00acp_6(Eileen)",
            "str_fol": "\u00aceducates_people(Eileen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Eileen",
            "text": "Eileen debates issues.",
            "fol": "p_3(Eileen)",
            "str_fol": "debates_issues(Eileen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Eileen",
            "text": "Eileen does not write articles.",
            "fol": "\u00acp_4(Eileen)",
            "str_fol": "\u00acwrites_articles(Eileen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Eileen",
            "text": "Eileen does not tell stories.",
            "fol": "\u00acp_2(Eileen)",
            "str_fol": "\u00actell_stories(Eileen)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Eileen",
            "text": "Eileen listens actively.",
            "fol": "p_0(Eileen)",
            "str_fol": "listens_actively(Eileen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eileen",
            "text": "Eileen is outspoken.",
            "fol": "p_1(Eileen)",
            "str_fol": "outspoken(Eileen)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If someone has knowledge and informs others, then they educate people.",
            "fol": "\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((has_knowledge(x) \u2227 informs_others(x)) \u2192 educates_people(x))"
        },
        {
            "id": 4,
            "text": "If Eileen either debates issues or writes articles (but not both), then she is passionate.",
            "fol": "(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)",
            "str_fol": "(debates_issues(Eileen) \u2295 writes_articles(Eileen)) \u2192 is_passionate(Eileen)"
        },
        {
            "id": 3,
            "text": "If Eileen is passionate, then she either tells stories or expresses herself, but not both.",
            "fol": "p_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))",
            "str_fol": "is_passionate(Eileen) \u2192 (tell_stories(Eileen) \u2295 express_themselves(Eileen))"
        },
        {
            "id": 2,
            "text": "For all humans, if they share opinions and listen actively, then they inform others.",
            "fol": "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((share_opinions(x) \u2227 listens_actively(x)) \u2192 informs_others(x))"
        },
        {
            "id": 1,
            "text": "Anyone who is outspoken either speaks their mind or shares their opinions (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (outspoken(x) \u2192 (speak_frees(x) \u2228 share_opinions(x)))"
        },
        {
            "id": 0,
            "text": "If someone is confident, then they speak freely.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (confident(x) \u2192 speak_frees(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Eileen",
            "text": "Eileen has knowledge.",
            "fol": "p_5(Eileen)",
            "str_fol": "has_knowledge(Eileen)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Eileen",
            "text": "Eileen does not educate people.",
            "fol": "\u00acp_6(Eileen)",
            "str_fol": "\u00aceducates_people(Eileen)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Eileen",
            "text": "Eileen debates issues.",
            "fol": "p_3(Eileen)",
            "str_fol": "debates_issues(Eileen)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Eileen",
            "text": "Eileen does not write articles.",
            "fol": "\u00acp_4(Eileen)",
            "str_fol": "\u00acwrites_articles(Eileen)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Eileen",
            "text": "Eileen does not tell stories.",
            "fol": "\u00acp_2(Eileen)",
            "str_fol": "\u00actell_stories(Eileen)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Eileen",
            "text": "Eileen listens actively.",
            "fol": "p_0(Eileen)",
            "str_fol": "listens_actively(Eileen)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eileen",
            "text": "Eileen is outspoken.",
            "fol": "p_1(Eileen)",
            "str_fol": "outspoken(Eileen)",
            "negation": false
        },
        {
            "id": 5,
            "text": "If someone has knowledge and informs others, then they educate people.",
            "fol": "\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((has_knowledge(x) \u2227 informs_others(x)) \u2192 educates_people(x))"
        },
        {
            "id": 4,
            "text": "If Eileen either debates issues or writes articles (but not both), then she is passionate.",
            "fol": "(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)",
            "str_fol": "(debates_issues(Eileen) \u2295 writes_articles(Eileen)) \u2192 is_passionate(Eileen)"
        },
        {
            "id": 3,
            "text": "If Eileen is passionate, then she either tells stories or expresses herself, but not both.",
            "fol": "p_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))",
            "str_fol": "is_passionate(Eileen) \u2192 (tell_stories(Eileen) \u2295 express_themselves(Eileen))"
        },
        {
            "id": 2,
            "text": "For all humans, if they share opinions and listen actively, then they inform others.",
            "fol": "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((share_opinions(x) \u2227 listens_actively(x)) \u2192 informs_others(x))"
        },
        {
            "id": 1,
            "text": "Anyone who is outspoken either speaks their mind or shares their opinions (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (outspoken(x) \u2192 (speak_frees(x) \u2228 share_opinions(x)))"
        },
        {
            "id": 0,
            "text": "If someone is confident, then they speak freely.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (confident(x) \u2192 speak_frees(x))"
        }
    ],
    "context_fol": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_7(x) \u2192 p_8(x))",
    "conclusion": {
        "id": 12,
        "text": "Eileen is confident, can express herself and engage others in conversation.",
        "fol": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
        "str_fol": "confident(Eileen) \u2227 (express_themselves(Eileen) \u2227 engage_others(Eileen))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Eileen",
                    "text": "Eileen has knowledge.",
                    "fol": "p_5(Eileen)",
                    "str_fol": "has_knowledge(Eileen)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Eileen",
                    "text": "Eileen does not educate people.",
                    "fol": "\u00acp_6(Eileen)",
                    "str_fol": "\u00aceducates_people(Eileen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone has knowledge and informs others, then they educate people.",
                    "fol": "\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((has_knowledge(x) \u2227 informs_others(x)) \u2192 educates_people(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Eileen",
                "text": "Eileen does not inform others.",
                "fol": "\u00acp_10(Eileen)",
                "str_fol": "\u00acinforms_others(Eileen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Eileen",
                    "text": "Eileen debates issues.",
                    "fol": "p_3(Eileen)",
                    "str_fol": "debates_issues(Eileen)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Eileen",
                    "text": "Eileen does not write articles.",
                    "fol": "\u00acp_4(Eileen)",
                    "str_fol": "\u00acwrites_articles(Eileen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Eileen either debates issues or writes articles (but not both), then she is passionate.",
                    "fol": "(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)",
                    "str_fol": "(debates_issues(Eileen) \u2295 writes_articles(Eileen)) \u2192 is_passionate(Eileen)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Eileen",
                "text": "Eileen is passionate.",
                "fol": "p_11(Eileen)",
                "str_fol": "is_passionate(Eileen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Eileen",
                    "text": "Eileen is passionate.",
                    "fol": "p_11(Eileen)",
                    "str_fol": "is_passionate(Eileen)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Eileen",
                    "text": "Eileen does not tell stories.",
                    "fol": "\u00acp_2(Eileen)",
                    "str_fol": "\u00actell_stories(Eileen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Eileen is passionate, then she either tells stories or expresses herself, but not both.",
                    "fol": "p_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))",
                    "str_fol": "is_passionate(Eileen) \u2192 (tell_stories(Eileen) \u2295 express_themselves(Eileen))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Eileen",
                "text": "Eileen can express herself.",
                "fol": "p_12(Eileen)",
                "str_fol": "express_themselves(Eileen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Eileen",
                    "text": "Eileen listens actively.",
                    "fol": "p_0(Eileen)",
                    "str_fol": "listens_actively(Eileen)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Eileen",
                    "text": "Eileen does not inform others.",
                    "fol": "\u00acp_10(Eileen)",
                    "str_fol": "\u00acinforms_others(Eileen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For all humans, if they share opinions and listen actively, then they inform others.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((share_opinions(x) \u2227 listens_actively(x)) \u2192 informs_others(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Eileen",
                "text": "Eileen does not share her opinions.",
                "fol": "\u00acp_9(Eileen)",
                "str_fol": "\u00acshare_opinions(Eileen)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Eileen",
                    "text": "Eileen is outspoken.",
                    "fol": "p_1(Eileen)",
                    "str_fol": "outspoken(Eileen)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Eileen",
                    "text": "Eileen does not share her opinions.",
                    "fol": "\u00acp_9(Eileen)",
                    "str_fol": "\u00acshare_opinions(Eileen)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who is outspoken either speaks their mind or shares their opinions (or both).",
                    "fol": "\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (outspoken(x) \u2192 (speak_frees(x) \u2228 share_opinions(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Eileen",
                "text": "Eileen speaks her mind freely.",
                "fol": "p_8(Eileen)",
                "str_fol": "speak_frees(Eileen)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Eileen",
                    "text": "Eileen speaks her mind freely.",
                    "fol": "p_8(Eileen)",
                    "str_fol": "speak_frees(Eileen)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If someone is confident, then they speak freely.",
                    "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
                    "str_fol": "\u2200x (confident(x) \u2192 speak_frees(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Eileen",
                    "text": "Eileen can express herself.",
                    "fol": "p_12(Eileen)",
                    "str_fol": "express_themselves(Eileen)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_7(x) \u2192 p_8(x))",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen)",
                    "-p_6(Eileen)",
                    "p_3(Eileen)",
                    "-p_4(Eileen)",
                    "-p_2(Eileen)",
                    "p_0(Eileen)",
                    "p_1(Eileen)",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x))",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> p_11(Eileen)",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen)))",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x))",
                    "all x (p_1(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (p_1(x) -> p_7(x))",
                    "all x (p_5(x) -> p_13(x))"
                ],
                "formulas(goals)": [
                    "p_7(Eileen) & (p_12(Eileen) & p_13(Eileen))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_1(x) \u2192 p_7(x))",
                    "\u2200x (p_5(x) \u2192 p_13(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Eileen) \u2192 \u00acp_7(Eileen)",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen)",
                    "-p_6(Eileen)",
                    "p_3(Eileen)",
                    "-p_4(Eileen)",
                    "-p_2(Eileen)",
                    "p_0(Eileen)",
                    "p_1(Eileen)",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x))",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> p_11(Eileen)",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen)))",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x))",
                    "all x (p_1(x) -> (p_8(x) | p_9(x)))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_5(Eileen) -> -p_7(Eileen)"
                ],
                "formulas(goals)": [
                    "-(p_7(Eileen) & (p_12(Eileen) & p_13(Eileen)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Eileen) \u2192 \u00acp_7(Eileen)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n\u2200x (\u00acp_6(x) \u2192 \u00ac(p_5(x) \u2227 p_10(x)))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\np_5(Eileen) \u2192 \u00acp_7(Eileen)\n\u00acp_7(Eileen)\n\u00acp_10(Eileen)",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen).",
                    "-p_6(Eileen).",
                    "p_3(Eileen).",
                    "-p_4(Eileen).",
                    "-p_2(Eileen).",
                    "p_0(Eileen).",
                    "p_1(Eileen).",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x)).",
                    "all x (-p_6(x) -> (-p_5(x) | -p_10(x))).",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> p_11(Eileen).",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen))).",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x)).",
                    "all x (p_1(x) -> (p_8(x) | p_9(x))).",
                    "all x ((-p_8(x) & -p_9(x)) -> -p_1(x)).",
                    "all x (p_7(x) -> p_8(x)).",
                    "p_5(Eileen) -> -p_7(Eileen).",
                    "-p_7(Eileen).",
                    "-p_10(Eileen)."
                ],
                "formulas(goals)": [
                    "-(p_7(Eileen) & (p_12(Eileen) & p_13(Eileen)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Eileen)",
                    "\u00acp_10(Eileen)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_6(x) \u2192 \u00ac(p_5(x) \u2227 p_10(x)))",
                    "\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_1(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n\u2200x (\u00acp_6(x) \u2192 \u00ac(p_5(x) \u2227 p_10(x)))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Eileen)\n\u00acp_6(Eileen) \u2192 p_7(Eileen)\np_13(Eileen)",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen)",
                    "-p_6(Eileen)",
                    "p_3(Eileen)",
                    "-p_4(Eileen)",
                    "-p_2(Eileen)",
                    "p_0(Eileen)",
                    "p_1(Eileen)",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x))",
                    "all x (-p_6(x) -> -(p_5(x) & p_10(x)))",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> p_11(Eileen)",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen)))",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x))",
                    "all x (p_1(x) -> (p_8(x) | p_9(x)))",
                    "all x ((-p_8(x) & -p_9(x)) -> -p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-p_10(Eileen)",
                    "(-p_6(Eileen)) -> p_7(Eileen)",
                    "p_13(Eileen)"
                ],
                "formulas(goals)": [
                    "p_7(Eileen) & (p_12(Eileen) & p_13(Eileen))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Eileen)"
                ],
                "removed_rules": [
                    "p_5(Eileen) \u2192 \u00acp_7(Eileen)"
                ],
                "added_facts": [
                    "p_13(Eileen)"
                ],
                "added_rules": [
                    "\u00acp_6(Eileen) \u2192 p_7(Eileen)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n\u2200x (\u00acp_6(x) \u2192 \u00ac(p_5(x) \u2227 p_10(x)))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Eileen)\n\u00acp_6(Eileen) \u2192 p_7(Eileen)\np_13(Eileen)\np_13(Eileen) \u2192 \u00acp_12(Eileen)",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen).",
                    "-p_6(Eileen).",
                    "p_3(Eileen).",
                    "-p_4(Eileen).",
                    "-p_2(Eileen).",
                    "p_0(Eileen).",
                    "p_1(Eileen).",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x)).",
                    "all x (-p_6(x) -> (-p_5(x) | -p_10(x))).",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> p_11(Eileen).",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen))).",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x)).",
                    "all x (p_1(x) -> (p_8(x) | p_9(x))).",
                    "all x ((-p_8(x) & -p_9(x)) -> -p_1(x)).",
                    "all x (p_7(x) -> p_8(x)).",
                    "-p_10(Eileen).",
                    "-p_6(Eileen) -> p_7(Eileen).",
                    "p_13(Eileen).",
                    "p_13(Eileen) -> -p_12(Eileen)."
                ],
                "formulas(goals)": [
                    "-(p_7(Eileen) & (p_12(Eileen) & p_13(Eileen)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_13(Eileen) \u2192 \u00acp_12(Eileen)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n\u2200x (\u00acp_6(x) \u2192 \u00ac(p_5(x) \u2227 p_10(x)))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Eileen)\n\u00acp_6(Eileen) \u2192 p_7(Eileen)\np_13(Eileen)\np_13(Eileen) \u2192 \u00acp_12(Eileen)\np_7(Eileen)\n\u00acp_12(Eileen)",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen).",
                    "-p_6(Eileen).",
                    "p_3(Eileen).",
                    "-p_4(Eileen).",
                    "-p_2(Eileen).",
                    "p_0(Eileen).",
                    "p_1(Eileen).",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x)).",
                    "all x (-p_6(x) -> -(p_5(x) & p_10(x))).",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> p_11(Eileen).",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen))).",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x)).",
                    "all x (p_1(x) -> (p_8(x) | p_9(x))).",
                    "all x ((-p_8(x) & -p_9(x)) -> -p_1(x)).",
                    "all x (p_7(x) -> p_8(x)).",
                    "-p_10(Eileen).",
                    "-p_6(Eileen) -> p_7(Eileen).",
                    "p_13(Eileen).",
                    "p_13(Eileen) -> -p_12(Eileen).",
                    "p_7(Eileen).",
                    "-p_12(Eileen)."
                ],
                "formulas(goals)": [
                    "-(p_7(Eileen) & (p_12(Eileen) & p_13(Eileen)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Eileen)",
                    "\u00acp_12(Eileen)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Eileen)\n\u00acp_6(Eileen)\np_3(Eileen)\n\u00acp_4(Eileen)\n\u00acp_2(Eileen)\np_0(Eileen)\np_1(Eileen)\n\u2200x ((p_5(x) \u2227 p_10(x)) \u2192 p_6(x))\n\u2200x (\u00acp_6(x) \u2192 \u00ac(p_5(x) \u2227 p_10(x)))\n(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 \u00acp_11(Eileen)\np_11(Eileen) \u2192 (p_2(Eileen) \u2295 p_12(Eileen))\n\u2200x ((p_9(x) \u2227 p_0(x)) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_9(x)) \u2192 \u00acp_1(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Eileen)\n\u00acp_6(Eileen) \u2192 p_7(Eileen)\np_13(Eileen)\np_13(Eileen) \u2192 \u00acp_12(Eileen)\np_7(Eileen)\n\u00acp_12(Eileen)",
            "Initial Goal": "p_7(Eileen) \u2227 (p_12(Eileen) \u2227 p_13(Eileen))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Eileen)",
                    "-p_6(Eileen)",
                    "p_3(Eileen)",
                    "-p_4(Eileen)",
                    "-p_2(Eileen)",
                    "p_0(Eileen)",
                    "p_1(Eileen)",
                    "all x ((p_5(x) & p_10(x)) -> p_6(x))",
                    "all x (-p_6(x) -> -(p_5(x) & p_10(x)))",
                    "(-(p_3(Eileen) <-> p_4(Eileen))) -> -p_11(Eileen)",
                    "p_11(Eileen) -> (-(p_2(Eileen) <-> p_12(Eileen)))",
                    "all x ((p_9(x) & p_0(x)) -> p_10(x))",
                    "all x (p_1(x) -> (p_8(x) | p_9(x)))",
                    "all x ((-p_8(x) & -p_9(x)) -> -p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-p_10(Eileen)",
                    "-p_6(Eileen) -> p_7(Eileen)",
                    "p_13(Eileen)",
                    "p_13(Eileen) -> -p_12(Eileen)",
                    "p_7(Eileen)",
                    "-p_12(Eileen)"
                ],
                "formulas(goals)": [
                    "-(p_7(Eileen) & (p_12(Eileen) & p_13(Eileen)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 p_11(Eileen)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_3(Eileen) \u2295 p_4(Eileen)) \u2192 \u00acp_11(Eileen)"
                ]
            }
        }
    ]
}