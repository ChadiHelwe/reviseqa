{
    "background_story": "Keaton was known for his quick wit and sarcasm, often leaving those around him questioning what was serious and what was just his facetiousness. With a raised eyebrow and a smirk, he could turn any mundane conversation into a hilarious exchange. His friends and family had learned to decipher his tone, but newcomers often found themselves bewildered by his jokes and teasing remarks. Keaton's humor was a defense mechanism, a way to deflect from serious topics or awkward situations. However, beneath his jests, he had a kind heart and a deep empathy for those around him. His facetiousness was a unique charm that made him a beloved companion, as long as you were prepared for a healthy dose of sarcasm and playful ridicule.",
    "predicates": [
        {
            "id": 0,
            "name": "forms_connections"
        },
        {
            "id": 1,
            "name": "is_witty"
        },
        {
            "id": 2,
            "name": "has_empathy"
        },
        {
            "id": 3,
            "name": "is_humorous"
        },
        {
            "id": 4,
            "name": "has_quick_wit"
        },
        {
            "id": 5,
            "name": "can_be_entertaining"
        },
        {
            "id": 6,
            "name": "is_charming"
        },
        {
            "id": 7,
            "name": "makes_smile"
        },
        {
            "id": 8,
            "name": "tells_jokes"
        },
        {
            "id": 9,
            "name": "is_affable"
        },
        {
            "id": 10,
            "name": "thinks_fast"
        },
        {
            "id": 11,
            "name": "speaks_cleverly"
        },
        {
            "id": 12,
            "name": "lively"
        },
        {
            "id": 13,
            "name": "uses_sarcasm"
        },
        {
            "id": 14,
            "name": "gives_tease"
        },
        {
            "id": 15,
            "name": "is_lighthearted"
        },
        {
            "id": 16,
            "name": "gives_compliments"
        },
        {
            "id": 17,
            "name": "shares_laughter"
        }
    ],
    "subject_name": "Keaton",
    "subject_category": "human",
    "keyword": "facetiousness",
    "all_facts": [
        {
            "id": 0,
            "subject": "Keaton",
            "text": "Keaton does not form strong relationships.",
            "fol": "\u00acp_0(Keaton)",
            "str_fol": "\u00acforms_connections(Keaton)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Keaton",
            "text": "Keaton is not witty.",
            "fol": "\u00acp_1(Keaton)",
            "str_fol": "\u00acis_witty(Keaton)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Keaton",
            "text": "Keaton has empathy.",
            "fol": "p_2(Keaton)",
            "str_fol": "has_empathy(Keaton)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Keaton",
            "text": "Keaton is not humorous.",
            "fol": "\u00acp_3(Keaton)",
            "str_fol": "\u00acis_humorous(Keaton)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Keaton",
            "text": "Keaton tells jokes.",
            "fol": "p_8(Keaton)",
            "str_fol": "tells_jokes(Keaton)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Keaton",
            "text": "Keaton is not affable.",
            "fol": "\u00acp_9(Keaton)",
            "str_fol": "\u00acis_affable(Keaton)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Keaton",
            "text": "Keaton makes others smile.",
            "fol": "p_7(Keaton)",
            "str_fol": "makes_smile(Keaton)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Keaton",
            "text": "Keaton is charming.",
            "fol": "p_6(Keaton)",
            "str_fol": "is_charming(Keaton)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Keaton",
            "text": "Keaton has quick wit.",
            "fol": "p_4(Keaton)",
            "str_fol": "has_quick_wit(Keaton)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Keaton",
            "text": "Keaton cannot be entertaining.",
            "fol": "\u00acp_5(Keaton)",
            "str_fol": "\u00accan_be_entertaining(Keaton)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Keaton",
            "text": "Keaton is not humorous.",
            "fol": "\u00acp_3(Keaton)",
            "str_fol": "\u00acis_humorous(Keaton)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Keaton",
            "text": "Keaton has empathy.",
            "fol": "p_2(Keaton)",
            "str_fol": "has_empathy(Keaton)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Keaton",
            "text": "Keaton does not form strong relationships.",
            "fol": "\u00acp_0(Keaton)",
            "str_fol": "\u00acforms_connections(Keaton)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Keaton",
            "text": "Keaton is not witty.",
            "fol": "\u00acp_1(Keaton)",
            "str_fol": "\u00acis_witty(Keaton)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Keaton is humorous or tells jokes.",
            "fol": "p_3(Keaton) \u2228 p_8(Keaton)",
            "str_fol": "is_humorous(Keaton) \u2228 tells_jokes(Keaton)"
        },
        {
            "id": 4,
            "text": "If someone is empathetic and has a pleasant personality, then they can form strong relationships.",
            "fol": "\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((has_empathy(x) \u2227 is_affable(x)) \u2192 forms_connections(x))"
        },
        {
            "id": 3,
            "text": "If Keaton either tells jokes or makes others smile (but not both), then he is affable.",
            "fol": "(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)",
            "str_fol": "(tells_jokes(Keaton) \u2295 makes_smile(Keaton)) \u2192 is_affable(Keaton)"
        },
        {
            "id": 2,
            "text": "Anyone who can make others smile is charming.",
            "fol": "\u2200x (p_7(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (makes_smile(x) \u2192 is_charming(x))"
        },
        {
            "id": 1,
            "text": "If Keaton is charming, then he either has quick wit or is witty, but not both.",
            "fol": "p_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))",
            "str_fol": "is_charming(Keaton) \u2192 (has_quick_wit(Keaton) \u2295 is_witty(Keaton))"
        },
        {
            "id": 0,
            "text": "For all humans, if they have quick wit, then they can be entertaining.",
            "fol": "\u2200x (p_4(x) \u2192 p_5(x))",
            "str_fol": "\u2200x (has_quick_wit(x) \u2192 can_be_entertaining(x))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Keaton",
            "text": "Keaton is not humorous.",
            "fol": "\u00acp_3(Keaton)",
            "str_fol": "\u00acis_humorous(Keaton)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Keaton",
            "text": "Keaton has empathy.",
            "fol": "p_2(Keaton)",
            "str_fol": "has_empathy(Keaton)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Keaton",
            "text": "Keaton does not form strong relationships.",
            "fol": "\u00acp_0(Keaton)",
            "str_fol": "\u00acforms_connections(Keaton)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Keaton",
            "text": "Keaton is not witty.",
            "fol": "\u00acp_1(Keaton)",
            "str_fol": "\u00acis_witty(Keaton)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Keaton is humorous or tells jokes.",
            "fol": "p_3(Keaton) \u2228 p_8(Keaton)",
            "str_fol": "is_humorous(Keaton) \u2228 tells_jokes(Keaton)"
        },
        {
            "id": 4,
            "text": "If someone is empathetic and has a pleasant personality, then they can form strong relationships.",
            "fol": "\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((has_empathy(x) \u2227 is_affable(x)) \u2192 forms_connections(x))"
        },
        {
            "id": 3,
            "text": "If Keaton either tells jokes or makes others smile (but not both), then he is affable.",
            "fol": "(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)",
            "str_fol": "(tells_jokes(Keaton) \u2295 makes_smile(Keaton)) \u2192 is_affable(Keaton)"
        },
        {
            "id": 2,
            "text": "Anyone who can make others smile is charming.",
            "fol": "\u2200x (p_7(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (makes_smile(x) \u2192 is_charming(x))"
        },
        {
            "id": 1,
            "text": "If Keaton is charming, then he either has quick wit or is witty, but not both.",
            "fol": "p_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))",
            "str_fol": "is_charming(Keaton) \u2192 (has_quick_wit(Keaton) \u2295 is_witty(Keaton))"
        },
        {
            "id": 0,
            "text": "For all humans, if they have quick wit, then they can be entertaining.",
            "fol": "\u2200x (p_4(x) \u2192 p_5(x))",
            "str_fol": "\u2200x (has_quick_wit(x) \u2192 can_be_entertaining(x))"
        }
    ],
    "context_fol": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\n\u00acp_1(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (p_7(x) \u2192 p_6(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))",
    "conclusion": {
        "id": 9,
        "subject": "Keaton",
        "text": "Keaton cannot be entertaining.",
        "fol": "\u00acp_5(Keaton)",
        "str_fol": "\u00accan_be_entertaining(Keaton)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_5(Keaton)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Keaton",
                    "text": "Keaton is not humorous.",
                    "fol": "\u00acp_3(Keaton)",
                    "str_fol": "\u00acis_humorous(Keaton)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Keaton is humorous or tells jokes.",
                    "fol": "p_3(Keaton) \u2228 p_8(Keaton)",
                    "str_fol": "is_humorous(Keaton) \u2228 tells_jokes(Keaton)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Keaton",
                "text": "Keaton tells jokes.",
                "fol": "p_8(Keaton)",
                "str_fol": "tells_jokes(Keaton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Keaton",
                    "text": "Keaton has empathy.",
                    "fol": "p_2(Keaton)",
                    "str_fol": "has_empathy(Keaton)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Keaton",
                    "text": "Keaton does not form strong relationships.",
                    "fol": "\u00acp_0(Keaton)",
                    "str_fol": "\u00acforms_connections(Keaton)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone is empathetic and has a pleasant personality, then they can form strong relationships.",
                    "fol": "\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((has_empathy(x) \u2227 is_affable(x)) \u2192 forms_connections(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Keaton",
                "text": "Keaton is not affable.",
                "fol": "\u00acp_9(Keaton)",
                "str_fol": "\u00acis_affable(Keaton)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Keaton",
                    "text": "Keaton tells jokes.",
                    "fol": "p_8(Keaton)",
                    "str_fol": "tells_jokes(Keaton)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Keaton",
                    "text": "Keaton is not affable.",
                    "fol": "\u00acp_9(Keaton)",
                    "str_fol": "\u00acis_affable(Keaton)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Keaton either tells jokes or makes others smile (but not both), then he is affable.",
                    "fol": "(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)",
                    "str_fol": "(tells_jokes(Keaton) \u2295 makes_smile(Keaton)) \u2192 is_affable(Keaton)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Keaton",
                "text": "Keaton makes others smile.",
                "fol": "p_7(Keaton)",
                "str_fol": "makes_smile(Keaton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Keaton",
                    "text": "Keaton makes others smile.",
                    "fol": "p_7(Keaton)",
                    "str_fol": "makes_smile(Keaton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who can make others smile is charming.",
                    "fol": "\u2200x (p_7(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (makes_smile(x) \u2192 is_charming(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Keaton",
                "text": "Keaton is charming.",
                "fol": "p_6(Keaton)",
                "str_fol": "is_charming(Keaton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Keaton",
                    "text": "Keaton is charming.",
                    "fol": "p_6(Keaton)",
                    "str_fol": "is_charming(Keaton)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Keaton",
                    "text": "Keaton is not witty.",
                    "fol": "\u00acp_1(Keaton)",
                    "str_fol": "\u00acis_witty(Keaton)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Keaton is charming, then he either has quick wit or is witty, but not both.",
                    "fol": "p_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))",
                    "str_fol": "is_charming(Keaton) \u2192 (has_quick_wit(Keaton) \u2295 is_witty(Keaton))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Keaton",
                "text": "Keaton has quick wit.",
                "fol": "p_4(Keaton)",
                "str_fol": "has_quick_wit(Keaton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Keaton",
                    "text": "Keaton has quick wit.",
                    "fol": "p_4(Keaton)",
                    "str_fol": "has_quick_wit(Keaton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they have quick wit, then they can be entertaining.",
                    "fol": "\u2200x (p_4(x) \u2192 p_5(x))",
                    "str_fol": "\u2200x (has_quick_wit(x) \u2192 can_be_entertaining(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Keaton",
                "text": "Keaton cannot be entertaining.",
                "fol": "\u00acp_5(Keaton)",
                "str_fol": "\u00accan_be_entertaining(Keaton)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_2(x) & p_9(x) -> p_0(x))).  [assumption].\n2 -(p_8(Keaton) <-> p_7(Keaton)) -> p_9(Keaton).  [assumption].\n3 (all x (p_7(x) -> p_6(x))).  [assumption].\n4 p_6(Keaton) -> -(p_4(Keaton) <-> p_1(Keaton)).  [assumption].\n5 (all x (p_4(x) -> p_5(x))).  [assumption].\n6 --p_5(Keaton).  [goal].\n7 p_3(Keaton) | p_8(Keaton).  [assumption].\n8 -p_3(Keaton).  [assumption].\n9 -p_2(x) | -p_9(x) | p_0(x).  [clausify(1)].\n10 p_2(Keaton).  [assumption].\n11 -p_9(Keaton) | p_0(Keaton).  [resolve(9,a,10,a)].\n12 -p_0(Keaton).  [assumption].\n13 -p_6(Keaton) | p_4(Keaton) | p_1(Keaton).  [clausify(4)].\n14 -p_1(Keaton).  [assumption].\n17 -p_8(Keaton) | p_7(Keaton) | p_9(Keaton).  [clausify(2)].\n18 p_8(Keaton).  [resolve(7,a,8,a)].\n19 p_7(Keaton) | p_9(Keaton).  [resolve(18,a,17,a)].\n20 -p_7(x) | p_6(x).  [clausify(3)].\n21 -p_6(Keaton) | p_4(Keaton).  [resolve(13,c,14,a)].\n22 -p_4(x) | p_5(x).  [clausify(5)].\n23 -p_6(Keaton) | p_5(Keaton).  [resolve(21,b,22,a)].\n24 -p_5(Keaton).  [deny(6)].\n25 p_9(Keaton) | p_6(Keaton).  [resolve(19,a,20,a)].\n26 -p_9(Keaton).  [resolve(11,b,12,a)].\n27 p_6(Keaton).  [resolve(25,a,26,a)].\n28 -p_6(Keaton).  [resolve(23,b,24,a)].\n29 $F.  [resolve(27,a,28,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\n\u00acp_1(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (p_7(x) \u2192 p_6(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))\np_8(Keaton)\np_4(Keaton) \u2228 p_1(Keaton)\np_4(Keaton) \u2192 p_5(Keaton)",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Keaton)",
                    "p_2(Keaton)",
                    "-p_0(Keaton)",
                    "-p_1(Keaton)",
                    "p_3(Keaton) | p_8(Keaton)",
                    "all x ((p_2(x) & p_9(x)) -> p_0(x))",
                    "(-(p_8(Keaton) <-> p_7(Keaton))) -> p_9(Keaton)",
                    "all x (p_7(x) -> p_6(x))",
                    "p_6(Keaton) -> (-(p_4(Keaton) <-> p_1(Keaton)))",
                    "all x (p_4(x) -> p_5(x))",
                    "p_8(Keaton)",
                    "p_4(Keaton) | p_1(Keaton)",
                    "p_4(Keaton) -> p_5(Keaton)"
                ],
                "formulas(goals)": [
                    "--p_5(Keaton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Keaton)",
                    "p_4(Keaton) \u2228 p_1(Keaton)"
                ],
                "added_rules": [
                    "p_4(Keaton) \u2192 p_5(Keaton)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (p_7(x) \u2192 p_6(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))\np_8(Keaton)\np_4(Keaton) \u2228 p_1(Keaton)\np_4(Keaton) \u2192 p_5(Keaton)\np_1(Keaton)\np_1(Keaton) \u2192 \u00acp_5(Keaton)",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Keaton)",
                    "p_2(Keaton)",
                    "-p_0(Keaton)",
                    "p_3(Keaton) | p_8(Keaton)",
                    "all x ((p_2(x) & p_9(x)) -> p_0(x))",
                    "(-(p_8(Keaton) <-> p_7(Keaton))) -> p_9(Keaton)",
                    "all x (p_7(x) -> p_6(x))",
                    "p_6(Keaton) -> (-(p_4(Keaton) <-> p_1(Keaton)))",
                    "all x (p_4(x) -> p_5(x))",
                    "p_8(Keaton)",
                    "p_4(Keaton) | p_1(Keaton)",
                    "p_4(Keaton) -> p_5(Keaton)",
                    "p_1(Keaton)",
                    "p_1(Keaton) -> -p_5(Keaton)"
                ],
                "formulas(goals)": [
                    "-p_5(Keaton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Keaton)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Keaton)"
                ],
                "added_rules": [
                    "p_1(Keaton) \u2192 \u00acp_5(Keaton)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (p_7(x) \u2192 p_6(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))\np_8(Keaton)\np_4(Keaton) \u2228 p_1(Keaton)\np_4(Keaton) \u2192 p_5(Keaton)\np_1(Keaton)\np_1(Keaton) \u2192 \u00acp_5(Keaton)\n\u00acp_4(Keaton)",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Keaton)",
                    "p_2(Keaton)",
                    "-p_0(Keaton)",
                    "p_3(Keaton) | p_8(Keaton)",
                    "all x ((p_2(x) & p_9(x)) -> p_0(x))",
                    "(-(p_8(Keaton) <-> p_7(Keaton))) -> p_9(Keaton)",
                    "all x (p_7(x) -> p_6(x))",
                    "p_6(Keaton) -> (-(p_4(Keaton) <-> p_1(Keaton)))",
                    "all x (p_4(x) -> p_5(x))",
                    "p_8(Keaton)",
                    "p_4(Keaton) | p_1(Keaton)",
                    "p_4(Keaton) -> p_5(Keaton)",
                    "p_1(Keaton)",
                    "p_1(Keaton) -> -p_5(Keaton)",
                    "-p_4(Keaton)"
                ],
                "formulas(goals)": [
                    "-p_5(Keaton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_4(Keaton)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (p_7(x) \u2192 p_6(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))\np_8(Keaton)\np_4(Keaton) \u2228 p_1(Keaton)\np_4(Keaton) \u2192 p_5(Keaton)\np_1(Keaton)\n\u00acp_4(Keaton)\np_8(Keaton) \u2192 p_5(Keaton)",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_3(Keaton).",
                    "p_2(Keaton).",
                    "- p_0(Keaton).",
                    "p_3(Keaton) | p_8(Keaton).",
                    "all x ((p_2(x) & p_9(x)) -> p_0(x)).",
                    "(-(p_8(Keaton) <-> p_7(Keaton))) -> p_9(Keaton).",
                    "all x (p_7(x) -> p_6(x)).",
                    "p_6(Keaton) -> (-(p_4(Keaton) <-> p_1(Keaton))).",
                    "all x (p_4(x) -> p_5(x)).",
                    "p_8(Keaton).",
                    "p_4(Keaton) | p_1(Keaton).",
                    "p_4(Keaton) -> p_5(Keaton).",
                    "p_1(Keaton).",
                    "- p_4(Keaton).",
                    "p_8(Keaton) -> p_5(Keaton)."
                ],
                "formulas(goals)": [
                    "p_5(Keaton)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_1(Keaton) \u2192 \u00acp_5(Keaton)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Keaton) \u2192 p_5(Keaton)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (p_7(x) \u2192 p_6(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))\np_8(Keaton)\np_4(Keaton) \u2228 p_1(Keaton)\np_4(Keaton) \u2192 p_5(Keaton)\np_1(Keaton)\n\u00acp_4(Keaton)\n(p_8(Keaton) \u2227 p_1(Keaton)) \u2192 \u00acp_5(Keaton)",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Keaton)",
                    "p_2(Keaton)",
                    "-p_0(Keaton)",
                    "p_3(Keaton) | p_8(Keaton)",
                    "all x ((p_2(x) & p_9(x)) -> p_0(x))",
                    "(-(p_8(Keaton) <-> p_7(Keaton))) -> p_9(Keaton)",
                    "all x (p_7(x) -> p_6(x))",
                    "p_6(Keaton) -> (-(p_4(Keaton) <-> p_1(Keaton)))",
                    "all x (p_4(x) -> p_5(x))",
                    "p_8(Keaton)",
                    "p_4(Keaton) | p_1(Keaton)",
                    "p_4(Keaton) -> p_5(Keaton)",
                    "p_1(Keaton)",
                    "-p_4(Keaton)",
                    "(p_8(Keaton) & p_1(Keaton)) -> -p_5(Keaton)"
                ],
                "formulas(goals)": [
                    "-p_5(Keaton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Keaton) \u2192 p_5(Keaton)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_8(Keaton) \u2227 p_1(Keaton)) \u2192 \u00acp_5(Keaton)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Keaton)\np_2(Keaton)\n\u00acp_0(Keaton)\np_3(Keaton) \u2228 p_8(Keaton)\n\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))\n(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)\n\u2200x (\u00acp_6(x) \u2192 \u00acp_7(x))\np_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))\n\u2200x (p_4(x) \u2192 p_5(x))\np_8(Keaton)\np_4(Keaton) \u2228 p_1(Keaton)\np_4(Keaton) \u2192 p_5(Keaton)\np_1(Keaton)\n\u00acp_4(Keaton)\n(p_8(Keaton) \u2227 p_1(Keaton)) \u2192 \u00acp_5(Keaton)\np_8(Keaton) \u2228 \u00acp_8(Keaton)\np_8(Keaton) \u2227 p_1(Keaton)\np_4(Keaton) \u2295 p_1(Keaton)\np_8(Keaton) \u2192 (p_1(Keaton) \u2192 \u00acp_5(Keaton))",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Keaton).",
                    "p_2(Keaton).",
                    "-p_0(Keaton).",
                    "p_3(Keaton) | p_8(Keaton).",
                    "all x ((p_2(x) & p_9(x)) -> p_0(x)).",
                    "(-(p_8(Keaton) <-> p_7(Keaton))) -> p_9(Keaton).",
                    "all x ((-p_6(x)) -> (-p_7(x))).",
                    "p_6(Keaton) -> (-(p_4(Keaton) <-> p_1(Keaton))).",
                    "all x (p_4(x) -> p_5(x)).",
                    "p_8(Keaton).",
                    "p_4(Keaton) | p_1(Keaton).",
                    "p_4(Keaton) -> p_5(Keaton).",
                    "p_1(Keaton).",
                    "-p_4(Keaton).",
                    "(p_8(Keaton) & p_1(Keaton)) -> (-p_5(Keaton)).",
                    "p_8(Keaton) | (-p_8(Keaton)).",
                    "p_8(Keaton) & p_1(Keaton).",
                    "-(p_4(Keaton) <-> p_1(Keaton)).",
                    "p_8(Keaton) -> (p_1(Keaton) -> (-p_5(Keaton)))."
                ],
                "formulas(goals)": [
                    "-p_5(Keaton)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_7(x) \u2192 p_6(x))"
                ],
                "added_facts": [
                    "p_8(Keaton) \u2228 \u00acp_8(Keaton)",
                    "p_8(Keaton) \u2227 p_1(Keaton)",
                    "p_4(Keaton) \u2295 p_1(Keaton)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_6(x) \u2192 \u00acp_7(x))",
                    "p_8(Keaton) \u2192 (p_1(Keaton) \u2192 \u00acp_5(Keaton))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Keaton)\np_1(Keaton)\np_4(Keaton)\n\u2200x (p_4(x) \u2192 p_5(x))",
            "Initial Goal": "\u00acp_5(Keaton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Keaton)",
                    "p_1(Keaton)",
                    "p_4(Keaton)",
                    "all x (p_4(x) -> p_5(x))"
                ],
                "formulas(goals)": [
                    "p_5(Keaton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Keaton)",
                    "p_2(Keaton)",
                    "\u00acp_0(Keaton)",
                    "p_3(Keaton) \u2228 p_8(Keaton)",
                    "p_4(Keaton) \u2228 p_1(Keaton)",
                    "\u00acp_4(Keaton)",
                    "p_8(Keaton) \u2228 \u00acp_8(Keaton)",
                    "p_8(Keaton) \u2227 p_1(Keaton)",
                    "p_4(Keaton) \u2295 p_1(Keaton)"
                ],
                "removed_rules": [
                    "\u2200x ((p_2(x) \u2227 p_9(x)) \u2192 p_0(x))",
                    "(p_8(Keaton) \u2295 p_7(Keaton)) \u2192 p_9(Keaton)",
                    "\u2200x (\u00acp_6(x) \u2192 \u00acp_7(x))",
                    "p_6(Keaton) \u2192 (p_4(Keaton) \u2295 p_1(Keaton))",
                    "p_4(Keaton) \u2192 p_5(Keaton)",
                    "(p_8(Keaton) \u2227 p_1(Keaton)) \u2192 \u00acp_5(Keaton)",
                    "p_8(Keaton) \u2192 (p_1(Keaton) \u2192 \u00acp_5(Keaton))"
                ],
                "added_facts": [
                    "p_4(Keaton)"
                ],
                "added_rules": []
            }
        }
    ]
}