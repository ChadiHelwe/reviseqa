{
    "background_story": "Cora was a journalist known for her ability to convey complex ideas with succinct clarity. She had a knack for cutting through the noise and getting straight to the point. Cora's articles were always concise, yet informative, making her a favorite among readers with busy lives. Her colleagues admired her skill in distilling lengthy interviews into brief, impactful quotes. Cora's brevity wasn't just a trait; it was a philosophy. She believed that the most powerful messages were those that were direct and to the point. With a few well-chosen words, Cora could capture the essence of a story, leaving a lasting impression on her audience.",
    "predicates": [
        {
            "id": 0,
            "name": "thinks_logically"
        },
        {
            "id": 1,
            "name": "gathers_info"
        },
        {
            "id": 2,
            "name": "is_informed"
        },
        {
            "id": 3,
            "name": "can_write_concisely"
        },
        {
            "id": 4,
            "name": "communicates_effectively"
        },
        {
            "id": 5,
            "name": "speaks_clearly"
        },
        {
            "id": 6,
            "name": "expresses_thoughts"
        },
        {
            "id": 7,
            "name": "listens_actively"
        },
        {
            "id": 8,
            "name": "asks_probing_questions"
        },
        {
            "id": 9,
            "name": "edits_well"
        },
        {
            "id": 10,
            "name": "researches_deeply"
        },
        {
            "id": 11,
            "name": "uses_simple_words"
        },
        {
            "id": 12,
            "name": "avoids_jargon"
        },
        {
            "id": 13,
            "name": "reports_acc\u0440\u0430\u0442\u043d\u043e"
        },
        {
            "id": 14,
            "name": "reads_widely"
        },
        {
            "id": 15,
            "name": "seeks_feedback"
        },
        {
            "id": 16,
            "name": "is_curious"
        },
        {
            "id": 17,
            "name": "seeks_truth"
        }
    ],
    "subject_name": "Cora",
    "subject_category": "person",
    "keyword": "briefness",
    "all_facts": [
        {
            "id": 0,
            "subject": "Cora",
            "text": "Cora does not think logically.",
            "fol": "\u00acp_0(Cora)",
            "str_fol": "\u00acthinks_logically(Cora)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Cora",
            "text": "Cora does not gather information.",
            "fol": "\u00acp_1(Cora)",
            "str_fol": "\u00acgathers_info(Cora)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Cora",
            "text": "Cora is not informed.",
            "fol": "\u00acp_2(Cora)",
            "str_fol": "\u00acis_informed(Cora)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Cora",
            "text": "Cora does not ask probing questions.",
            "fol": "\u00acp_8(Cora)",
            "str_fol": "\u00acasks_probing_questions(Cora)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Cora",
            "text": "Cora listens actively.",
            "fol": "p_7(Cora)",
            "str_fol": "listens_actively(Cora)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Cora",
            "text": "Cora does not express her thoughts.",
            "fol": "\u00acp_6(Cora)",
            "str_fol": "\u00acexpresses_thoughts(Cora)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Cora",
            "text": "Cora speaks clearly.",
            "fol": "p_5(Cora)",
            "str_fol": "speaks_clearly(Cora)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Cora",
            "text": "Cora can write concisely.",
            "fol": "p_3(Cora)",
            "str_fol": "can_write_concisely(Cora)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Cora",
            "text": "Cora communicates effectively.",
            "fol": "p_4(Cora)",
            "str_fol": "communicates_effectively(Cora)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 1,
            "subject": "Cora",
            "text": "Cora does not gather information.",
            "fol": "\u00acp_1(Cora)",
            "str_fol": "\u00acgathers_info(Cora)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Cora",
            "text": "Cora is not informed.",
            "fol": "\u00acp_2(Cora)",
            "str_fol": "\u00acis_informed(Cora)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Cora",
            "text": "Cora does not think logically.",
            "fol": "\u00acp_0(Cora)",
            "str_fol": "\u00acthinks_logically(Cora)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Cora either asks probing questions or gathers information (but not both), then she is informed.",
            "fol": "(p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora)",
            "str_fol": "(asks_probing_questions(Cora) \u2295 gathers_info(Cora)) \u2192 is_informed(Cora)"
        },
        {
            "id": 4,
            "text": "A person either asks probing questions or listens actively, but not necessarily both at the same time.",
            "fol": "\u2200x (p_8(x) \u2295 p_7(x))",
            "str_fol": "\u2200x (asks_probing_questions(x) \u2295 listens_actively(x))"
        },
        {
            "id": 3,
            "text": "A person either listens actively or expresses their thoughts, but not necessarily both at the same time.",
            "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
            "str_fol": "\u2200x (listens_actively(x) \u2295 expresses_thoughts(x))"
        },
        {
            "id": 2,
            "text": "A person either speaks clearly or thinks logically, but not necessarily both.",
            "fol": "\u2200x (p_5(x) \u2295 p_0(x))",
            "str_fol": "\u2200x (speaks_clearly(x) \u2295 thinks_logically(x))"
        },
        {
            "id": 1,
            "text": "For all people, if they can either write concisely or speak clearly, then they are able to express their thoughts.",
            "fol": "\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((can_write_concisely(x) \u2295 speaks_clearly(x)) \u2192 expresses_thoughts(x))"
        },
        {
            "id": 0,
            "text": "For all people, if they can write concisely, then they communicate effectively.",
            "fol": "\u2200x (p_3(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (can_write_concisely(x) \u2192 communicates_effectively(x))"
        }
    ],
    "context": [
        {
            "id": 1,
            "subject": "Cora",
            "text": "Cora does not gather information.",
            "fol": "\u00acp_1(Cora)",
            "str_fol": "\u00acgathers_info(Cora)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Cora",
            "text": "Cora is not informed.",
            "fol": "\u00acp_2(Cora)",
            "str_fol": "\u00acis_informed(Cora)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Cora",
            "text": "Cora does not think logically.",
            "fol": "\u00acp_0(Cora)",
            "str_fol": "\u00acthinks_logically(Cora)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Cora either asks probing questions or gathers information (but not both), then she is informed.",
            "fol": "(p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora)",
            "str_fol": "(asks_probing_questions(Cora) \u2295 gathers_info(Cora)) \u2192 is_informed(Cora)"
        },
        {
            "id": 4,
            "text": "A person either asks probing questions or listens actively, but not necessarily both at the same time.",
            "fol": "\u2200x (p_8(x) \u2295 p_7(x))",
            "str_fol": "\u2200x (asks_probing_questions(x) \u2295 listens_actively(x))"
        },
        {
            "id": 3,
            "text": "A person either listens actively or expresses their thoughts, but not necessarily both at the same time.",
            "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
            "str_fol": "\u2200x (listens_actively(x) \u2295 expresses_thoughts(x))"
        },
        {
            "id": 2,
            "text": "A person either speaks clearly or thinks logically, but not necessarily both.",
            "fol": "\u2200x (p_5(x) \u2295 p_0(x))",
            "str_fol": "\u2200x (speaks_clearly(x) \u2295 thinks_logically(x))"
        },
        {
            "id": 1,
            "text": "For all people, if they can either write concisely or speak clearly, then they are able to express their thoughts.",
            "fol": "\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((can_write_concisely(x) \u2295 speaks_clearly(x)) \u2192 expresses_thoughts(x))"
        },
        {
            "id": 0,
            "text": "For all people, if they can write concisely, then they communicate effectively.",
            "fol": "\u2200x (p_3(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (can_write_concisely(x) \u2192 communicates_effectively(x))"
        }
    ],
    "context_fol": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n(p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora)\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\n\u2200x (p_3(x) \u2192 p_4(x))",
    "conclusion": {
        "id": 8,
        "subject": "Cora",
        "text": "Cora communicates effectively.",
        "fol": "p_4(Cora)",
        "str_fol": "communicates_effectively(Cora)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_4(Cora)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Cora",
                    "text": "Cora does not gather information.",
                    "fol": "\u00acp_1(Cora)",
                    "str_fol": "\u00acgathers_info(Cora)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Cora",
                    "text": "Cora is not informed.",
                    "fol": "\u00acp_2(Cora)",
                    "str_fol": "\u00acis_informed(Cora)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Cora either asks probing questions or gathers information (but not both), then she is informed.",
                    "fol": "(p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora)",
                    "str_fol": "(asks_probing_questions(Cora) \u2295 gathers_info(Cora)) \u2192 is_informed(Cora)"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Cora",
                "text": "Cora does not ask probing questions.",
                "fol": "\u00acp_8(Cora)",
                "str_fol": "\u00acasks_probing_questions(Cora)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Cora",
                    "text": "Cora does not ask probing questions.",
                    "fol": "\u00acp_8(Cora)",
                    "str_fol": "\u00acasks_probing_questions(Cora)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "A person either asks probing questions or listens actively, but not necessarily both at the same time.",
                    "fol": "\u2200x (p_8(x) \u2295 p_7(x))",
                    "str_fol": "\u2200x (asks_probing_questions(x) \u2295 listens_actively(x))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Cora",
                "text": "Cora listens actively.",
                "fol": "p_7(Cora)",
                "str_fol": "listens_actively(Cora)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Cora",
                    "text": "Cora listens actively.",
                    "fol": "p_7(Cora)",
                    "str_fol": "listens_actively(Cora)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "A person either listens actively or expresses their thoughts, but not necessarily both at the same time.",
                    "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
                    "str_fol": "\u2200x (listens_actively(x) \u2295 expresses_thoughts(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Cora",
                "text": "Cora does not express her thoughts.",
                "fol": "\u00acp_6(Cora)",
                "str_fol": "\u00acexpresses_thoughts(Cora)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Cora",
                    "text": "Cora does not think logically.",
                    "fol": "\u00acp_0(Cora)",
                    "str_fol": "\u00acthinks_logically(Cora)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "A person either speaks clearly or thinks logically, but not necessarily both.",
                    "fol": "\u2200x (p_5(x) \u2295 p_0(x))",
                    "str_fol": "\u2200x (speaks_clearly(x) \u2295 thinks_logically(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Cora",
                "text": "Cora speaks clearly.",
                "fol": "p_5(Cora)",
                "str_fol": "speaks_clearly(Cora)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Cora",
                    "text": "Cora speaks clearly.",
                    "fol": "p_5(Cora)",
                    "str_fol": "speaks_clearly(Cora)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Cora",
                    "text": "Cora does not express her thoughts.",
                    "fol": "\u00acp_6(Cora)",
                    "str_fol": "\u00acexpresses_thoughts(Cora)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "For all people, if they can either write concisely or speak clearly, then they are able to express their thoughts.",
                    "fol": "\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((can_write_concisely(x) \u2295 speaks_clearly(x)) \u2192 expresses_thoughts(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Cora",
                "text": "Cora can write concisely.",
                "fol": "p_3(Cora)",
                "str_fol": "can_write_concisely(Cora)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Cora",
                    "text": "Cora can write concisely.",
                    "fol": "p_3(Cora)",
                    "str_fol": "can_write_concisely(Cora)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all people, if they can write concisely, then they communicate effectively.",
                    "fol": "\u2200x (p_3(x) \u2192 p_4(x))",
                    "str_fol": "\u2200x (can_write_concisely(x) \u2192 communicates_effectively(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Cora",
                "text": "Cora communicates effectively.",
                "fol": "p_4(Cora)",
                "str_fol": "communicates_effectively(Cora)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_8(Cora) <-> p_1(Cora)) -> p_2(Cora).  [assumption].\n2 (all x -(p_8(x) <-> p_7(x))).  [assumption].\n3 (all x -(p_7(x) <-> p_6(x))).  [assumption].\n4 (all x -(p_5(x) <-> p_0(x))).  [assumption].\n5 (all x (-(p_3(x) <-> p_5(x)) -> p_6(x))).  [assumption].\n6 (all x (p_3(x) -> p_4(x))).  [assumption].\n7 p_4(Cora).  [goal].\n8 -p_8(Cora) | p_1(Cora) | p_2(Cora).  [clausify(1)].\n9 -p_1(Cora).  [assumption].\n11 -p_8(Cora) | p_2(Cora).  [resolve(8,b,9,a)].\n12 -p_2(Cora).  [assumption].\n13 p_5(x) | p_0(x).  [clausify(4)].\n14 -p_0(Cora).  [assumption].\n17 p_8(x) | p_7(x).  [clausify(2)].\n18 -p_8(Cora).  [resolve(11,b,12,a)].\n19 -p_7(x) | -p_6(x).  [clausify(3)].\n21 p_7(Cora).  [resolve(18,a,17,a)].\n22 p_3(x) | -p_5(x) | p_6(x).  [clausify(5)].\n24 -p_3(x) | p_4(x).  [clausify(6)].\n25 p_4(x) | -p_5(x) | p_6(x).  [resolve(24,a,22,a)].\n26 -p_4(Cora).  [deny(7)].\n27 -p_5(Cora) | p_6(Cora).  [resolve(25,a,26,a)].\n28 p_5(Cora).  [resolve(13,b,14,a)].\n29 p_6(Cora).  [resolve(27,a,28,a)].\n30 -p_6(Cora).  [resolve(21,a,19,a)].\n31 $F.  [resolve(29,a,30,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n(p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora)\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\n\u2200x (p_3(x) \u2192 p_4(x))\np_3(Cora) \u2192 p_4(Cora)\np_4(Cora) \u2228 \u00acp_4(Cora)",
            "Initial Goal": "p_4(Cora)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora).",
                    "-p_2(Cora).",
                    "-p_0(Cora).",
                    "(-(p_8(Cora) <-> p_1(Cora))) -> p_2(Cora).",
                    "all x (-(p_8(x) <-> p_7(x))).",
                    "all x (p_7(x) | p_6(x)).",
                    "all x (-(p_7(x) & p_6(x))).",
                    "all x (p_5(x) | p_0(x)).",
                    "all x (-(p_5(x) & p_0(x))).",
                    "all x ((-(p_3(x) <-> p_5(x))) -> p_6(x)).",
                    "all x (p_3(x) -> p_4(x)).",
                    "p_3(Cora) -> p_4(Cora).",
                    "p_4(Cora) | -p_4(Cora)."
                ],
                "formulas(goals)": [
                    "p_4(Cora)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Cora) \u2228 p_0(Cora)",
                    "\u00ac(p_5(Cora) \u2227 p_0(Cora))",
                    "p_7(Cora) \u2228 p_6(Cora)",
                    "\u00ac(p_7(Cora) \u2227 p_6(Cora))",
                    "p_3(Cora) \u2192 p_4(Cora)",
                    "p_4(Cora) \u2228 \u00acp_4(Cora)"
                ],
                "added_rules": [
                    "\u2200x (p_7(x) \u2228 p_6(x))",
                    "\u2200x \u00ac(p_7(x) \u2227 p_6(x))",
                    "\u2200x (p_5(x) \u2228 p_0(x))",
                    "\u2200x \u00ac(p_5(x) \u2227 p_0(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n(p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora)\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\n\u2200x (p_3(x) \u2192 p_4(x))\np_3(Cora) \u2192 p_4(Cora)\np_4(Cora) \u2228 \u00acp_4(Cora)\np_7(Cora)\n\u00acp_6(Cora)\np_5(Cora)\np_3(Cora)\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u2200x (\u00acp_4(x) \u2192 \u00acp_3(x))\n\u00acp_8(Cora)",
            "Initial Goal": "p_4(Cora)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora)",
                    "-p_2(Cora)",
                    "-p_0(Cora)",
                    "(-(p_8(Cora) <-> p_1(Cora))) -> p_2(Cora)",
                    "all x (-(p_8(x) <-> p_7(x)))",
                    "all x (p_7(x) | p_6(x))",
                    "all x (-(p_7(x) & p_6(x)))",
                    "all x (p_5(x) | p_0(x))",
                    "all x (-(p_5(x) & p_0(x)))",
                    "all x ((-(p_3(x) <-> p_5(x))) -> p_6(x))",
                    "all x (p_3(x) -> p_4(x))",
                    "p_3(Cora) -> p_4(Cora)",
                    "p_4(Cora) | -p_4(Cora)",
                    "p_7(Cora)",
                    "-p_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "all x (-(p_5(x) <-> p_0(x)))",
                    "all x (-p_4(x) -> -p_3(x))",
                    "-p_8(Cora)"
                ],
                "formulas(goals)": [
                    "p_4(Cora)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Cora)",
                    "\u00acp_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "\u00acp_8(Cora)"
                ],
                "added_rules": [
                    "\u2200x (p_7(x) \u2295 p_6(x))",
                    "\u2200x (p_5(x) \u2295 p_0(x))",
                    "\u2200x (\u00acp_4(x) \u2192 \u00acp_3(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n((p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora))\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\np_4(Cora) \u2228 \u00acp_4(Cora)\np_7(Cora)\n\u00acp_6(Cora)\np_5(Cora)\np_3(Cora)\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u00acp_8(Cora)\n\u2200x ((p_7(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_4(x))",
            "Initial Goal": "p_4(Cora)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora)",
                    "-p_2(Cora)",
                    "-p_0(Cora)",
                    "((-(p_8(Cora) <-> p_1(Cora))) -> p_2(Cora))",
                    "all x (-(p_8(x) <-> p_7(x)))",
                    "all x (p_7(x) | p_6(x))",
                    "all x (-(p_7(x) & p_6(x)))",
                    "all x (p_5(x) | p_0(x))",
                    "all x (-(p_5(x) & p_0(x)))",
                    "all x ((-(p_3(x) <-> p_5(x))) -> p_6(x))",
                    "p_4(Cora) | -p_4(Cora)",
                    "p_7(Cora)",
                    "-p_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "all x (-(p_5(x) <-> p_0(x)))",
                    "-p_8(Cora)",
                    "all x ((p_7(x) & -p_6(x)) -> -p_4(x))"
                ],
                "formulas(goals)": [
                    "-p_4(Cora)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_3(x) \u2192 p_4(x))",
                    "p_3(Cora) \u2192 p_4(Cora)",
                    "\u2200x (\u00acp_4(x) \u2192 \u00acp_3(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_7(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_4(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n((p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora))\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\np_4(Cora) \u2228 \u00acp_4(Cora)\np_7(Cora)\n\u00acp_6(Cora)\np_5(Cora)\np_3(Cora)\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u00acp_8(Cora)\n\u2200x ((p_7(x) \u2227 \u00acp_6(x) \u2227 p_5(x)) \u2192 p_4(x))",
            "Initial Goal": "p_4(Cora)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora)",
                    "-p_2(Cora)",
                    "-p_0(Cora)",
                    "(-(p_8(Cora) <-> p_1(Cora))) -> p_2(Cora)",
                    "all x (-(p_8(x) <-> p_7(x)))",
                    "all x (p_7(x) | p_6(x))",
                    "all x (-(p_7(x) & p_6(x)))",
                    "all x (p_5(x) | p_0(x))",
                    "all x (-(p_5(x) & p_0(x)))",
                    "all x ((-(p_3(x) <-> p_5(x))) -> p_6(x))",
                    "p_4(Cora) | -p_4(Cora)",
                    "p_7(Cora)",
                    "-p_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "all x (-(p_5(x) <-> p_0(x)))",
                    "-p_8(Cora)",
                    "all x ((p_7(x) & -p_6(x) & p_5(x)) -> p_4(x))"
                ],
                "formulas(goals)": [
                    "p_4(Cora)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_7(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_4(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_7(x) \u2227 \u00acp_6(x) \u2227 p_5(x)) \u2192 p_4(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n((p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora))\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\np_4(Cora) \u2228 \u00acp_4(Cora)\np_7(Cora)\n\u00acp_6(Cora)\np_5(Cora)\np_3(Cora)\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u00acp_8(Cora)\n(p_3(Cora) \u2227 p_5(Cora)) \u2192 \u00acp_4(Cora)",
            "Initial Goal": "p_4(Cora)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora)",
                    "-p_2(Cora)",
                    "-p_0(Cora)",
                    "(-(p_8(Cora) <-> p_1(Cora))) -> p_2(Cora)",
                    "all x (-(p_8(x) <-> p_7(x)))",
                    "all x (p_7(x) | p_6(x))",
                    "all x (-(p_7(x) & p_6(x)))",
                    "all x (p_5(x) | p_0(x))",
                    "all x (-(p_5(x) & p_0(x)))",
                    "all x ((-(p_3(x) <-> p_5(x))) -> p_6(x))",
                    "p_4(Cora) | -p_4(Cora)",
                    "p_7(Cora)",
                    "-p_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "all x (-(p_5(x) <-> p_0(x)))",
                    "-p_8(Cora)",
                    "(p_3(Cora) & p_5(Cora)) -> -p_4(Cora)"
                ],
                "formulas(goals)": [
                    "-p_4(Cora)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_7(x) \u2227 \u00acp_6(x) \u2227 p_5(x)) \u2192 p_4(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_3(Cora) \u2227 p_5(Cora)) \u2192 \u00acp_4(Cora)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n((p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora))\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\np_4(Cora) \u2228 \u00acp_4(Cora)\np_7(Cora)\n\u00acp_6(Cora)\np_5(Cora)\np_3(Cora)\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u00acp_8(Cora)\n(p_3(Cora) \u2227 p_5(Cora)) \u2192 \u00acp_4(Cora)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x (p_6(x) \u2192 \u00acp_7(x))",
            "Initial Goal": "p_4(Cora)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora)",
                    "-p_2(Cora)",
                    "-p_0(Cora)",
                    "(-(p_8(Cora) <-> p_1(Cora)) -> p_2(Cora))",
                    "all x (-(p_8(x) <-> p_7(x)))",
                    "all x (p_7(x) | p_6(x))",
                    "all x (-(p_7(x) & p_6(x)))",
                    "all x (p_5(x) | p_0(x))",
                    "all x (-(p_5(x) & p_0(x)))",
                    "all x (-(p_3(x) <-> p_5(x)) -> p_6(x))",
                    "p_4(Cora) | -p_4(Cora)",
                    "p_7(Cora)",
                    "-p_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "all x (-(p_5(x) <-> p_0(x)))",
                    "-p_8(Cora)",
                    "(p_3(Cora) & p_5(Cora)) -> -p_4(Cora)",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x (p_6(x) -> -p_7(x))"
                ],
                "formulas(goals)": [
                    "-p_4(Cora)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                    "\u2200x (p_6(x) \u2192 \u00acp_7(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Cora)\n\u00acp_2(Cora)\n\u00acp_0(Cora)\n((p_8(Cora) \u2295 p_1(Cora)) \u2192 p_2(Cora))\n\u2200x (p_8(x) \u2295 p_7(x))\n\u2200x (p_7(x) \u2228 p_6(x))\n\u2200x \u00ac(p_7(x) \u2227 p_6(x))\n\u2200x (p_5(x) \u2228 p_0(x))\n\u2200x \u00ac(p_5(x) \u2227 p_0(x))\n\u2200x ((p_3(x) \u2295 p_5(x)) \u2192 p_6(x))\np_4(Cora) \u2228 \u00acp_4(Cora)\np_7(Cora)\n\u00acp_6(Cora)\np_5(Cora)\np_3(Cora)\n\u2200x (p_7(x) \u2295 p_6(x))\n\u2200x (p_5(x) \u2295 p_0(x))\n\u00acp_8(Cora)\n(p_3(Cora) \u2227 p_5(Cora)) \u2192 p_4(Cora)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x (p_6(x) \u2192 \u00acp_7(x))",
            "Initial Goal": "p_4(Cora)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Cora)",
                    "-p_2(Cora)",
                    "-p_0(Cora)",
                    "((-(p_8(Cora) <-> p_1(Cora))) -> p_2(Cora))",
                    "all x (-(p_8(x) <-> p_7(x)))",
                    "all x (p_7(x) | p_6(x))",
                    "all x (-(p_7(x) & p_6(x)))",
                    "all x (p_5(x) | p_0(x))",
                    "all x (-(p_5(x) & p_0(x)))",
                    "all x ((-(p_3(x) <-> p_5(x))) -> p_6(x))",
                    "(p_4(Cora) | -p_4(Cora))",
                    "p_7(Cora)",
                    "-p_6(Cora)",
                    "p_5(Cora)",
                    "p_3(Cora)",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "all x (-(p_5(x) <-> p_0(x)))",
                    "-p_8(Cora)",
                    "((p_3(Cora) & p_5(Cora)) -> p_4(Cora))",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x (p_6(x) -> -p_7(x))"
                ],
                "formulas(goals)": [
                    "p_4(Cora)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_3(Cora) \u2227 p_5(Cora)) \u2192 \u00acp_4(Cora)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_3(Cora) \u2227 p_5(Cora)) \u2192 p_4(Cora)"
                ]
            }
        }
    ]
}