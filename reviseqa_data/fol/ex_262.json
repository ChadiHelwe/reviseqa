{
    "background_story": "Axton was a young athlete who had always been in top physical condition. However, after a severe injury during a game, he began to experience strange muscle weakness and numbness. Doctors diagnosed him with a rare condition known as atonicity, characterized by a lack of muscle tone and reflexes. Axton's once-toned body began to feel heavy and unresponsive, making everyday tasks a challenge. Despite the setbacks, he remained determined to regain his strength and mobility. With the help of a dedicated physical therapist, Axton embarked on a long and arduous journey of rehabilitation, learning to adapt to his new limitations and find alternative ways to stay active and engaged. His resilience in the face of atonicity inspired those around him, showing that even in the darkest moments, the human spirit can persevere.",
    "predicates": [
        {
            "id": 0,
            "name": "limits_mobility"
        },
        {
            "id": 1,
            "name": "has_cure"
        },
        {
            "id": 2,
            "name": "impacts_reflexes"
        },
        {
            "id": 3,
            "name": "damages_nerves"
        },
        {
            "id": 4,
            "name": "chronic"
        },
        {
            "id": 5,
            "name": "curable"
        },
        {
            "id": 6,
            "name": "rare_disease"
        },
        {
            "id": 7,
            "name": "incurable"
        },
        {
            "id": 8,
            "name": "affects_muscles"
        },
        {
            "id": 9,
            "name": "is_treatable"
        },
        {
            "id": 10,
            "name": "causes_weakness"
        },
        {
            "id": 11,
            "name": "treatable"
        },
        {
            "id": 12,
            "name": "affects_joints"
        },
        {
            "id": 13,
            "name": "impacts_balance"
        },
        {
            "id": 14,
            "name": "is_debilitating"
        },
        {
            "id": 15,
            "name": "has_no_remedy"
        },
        {
            "id": 16,
            "name": "has_symptoms"
        },
        {
            "id": 17,
            "name": "causes_atrophy"
        },
        {
            "id": 18,
            "name": "leads_paralysis"
        },
        {
            "id": 19,
            "name": "requires_rehab"
        }
    ],
    "subject_name": "Axton",
    "subject_category": "medical condition",
    "keyword": "atonicity",
    "all_facts": [
        {
            "id": 0,
            "subject": "Axton",
            "text": "Axton's condition limits his mobility.",
            "fol": "p_0(Axton)",
            "str_fol": "limits_mobility(Axton)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Axton",
            "text": "Axton does not have a cure.",
            "fol": "\u00acp_1(Axton)",
            "str_fol": "\u00achas_cure(Axton)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Axton",
            "text": "Axton's reflexes are impacted.",
            "fol": "p_2(Axton)",
            "str_fol": "impacts_reflexes(Axton)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Axton",
            "text": "Axton's medical condition damages nerves.",
            "fol": "p_3(Axton)",
            "str_fol": "damages_nerves(Axton)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Axton",
            "text": "Axton causes weakness.",
            "fol": "p_10(Axton)",
            "str_fol": "causes_weakness(Axton)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Axton",
            "text": "Atonicity affects Axton's muscles.",
            "fol": "p_8(Axton)",
            "str_fol": "affects_muscles(Axton)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Axton",
            "text": "Axton is treatable.",
            "fol": "p_9(Axton)",
            "str_fol": "is_treatable(Axton)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Axton",
            "text": "Axton is not incurable.",
            "fol": "\u00acinp_5(Axton)",
            "str_fol": "\u00acincurable(Axton)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Axton",
            "text": "Axton has a rare disease.",
            "fol": "p_6(Axton)",
            "str_fol": "rare_disease(Axton)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Axton",
            "text": "Axton's condition is curable.",
            "fol": "p_5(Axton)",
            "str_fol": "curable(Axton)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Axton",
            "text": "Atonicity is not a chronic condition.",
            "fol": "\u00acp_4(Axton)",
            "str_fol": "\u00acchronic(Axton)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Axton",
            "text": "Axton's medical condition damages nerves.",
            "fol": "p_3(Axton)",
            "str_fol": "damages_nerves(Axton)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Axton",
            "text": "Axton's reflexes are impacted.",
            "fol": "p_2(Axton)",
            "str_fol": "impacts_reflexes(Axton)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Axton",
            "text": "Axton does not have a cure.",
            "fol": "\u00acp_1(Axton)",
            "str_fol": "\u00achas_cure(Axton)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Axton",
            "text": "Axton's condition limits his mobility.",
            "fol": "p_0(Axton)",
            "str_fol": "limits_mobility(Axton)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Any medical condition that damages nerves will cause weakness.",
            "fol": "\u2200x (p_3(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (damages_nerves(x) \u2192 causes_weakness(x))"
        },
        {
            "id": 5,
            "text": "If atonicity causes weakness, then it affects muscles and impacts reflexes.",
            "fol": "p_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))",
            "str_fol": "causes_weakness(Axton) \u2192 (affects_muscles(Axton) \u2227 impacts_reflexes(Axton))"
        },
        {
            "id": 4,
            "text": "Atonicity is either treatable or has a cure, but not both.",
            "fol": "p_9(Axton) \u2295 p_1(Axton)",
            "str_fol": "is_treatable(Axton) \u2295 has_cure(Axton)"
        },
        {
            "id": 3,
            "text": "A medical condition is either treatable or incurable, but not both.",
            "fol": "\u2200x (inp_5(x) \u2295 p_9(x))",
            "str_fol": "\u2200x (incurable(x) \u2295 is_treatable(x))"
        },
        {
            "id": 2,
            "text": "If atonicity affects muscles and limits mobility, then it is a rare disease.",
            "fol": "(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)",
            "str_fol": "(affects_muscles(Axton) \u2227 limits_mobility(Axton)) \u2192 rare_disease(Axton)"
        },
        {
            "id": 1,
            "text": "All rare diseases are either curable or incurable, but not both.",
            "fol": "\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))",
            "str_fol": "\u2200x (rare_disease(x) \u2192 (curable(x) \u2295 incurable(x)))"
        },
        {
            "id": 0,
            "text": "Atonicity is either a chronic condition or a curable condition, but not both.",
            "fol": "p_4(Axton) \u2295 p_5(Axton)",
            "str_fol": "chronic(Axton) \u2295 curable(Axton)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Axton",
            "text": "Axton's medical condition damages nerves.",
            "fol": "p_3(Axton)",
            "str_fol": "damages_nerves(Axton)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Axton",
            "text": "Axton's reflexes are impacted.",
            "fol": "p_2(Axton)",
            "str_fol": "impacts_reflexes(Axton)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Axton",
            "text": "Axton does not have a cure.",
            "fol": "\u00acp_1(Axton)",
            "str_fol": "\u00achas_cure(Axton)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Axton",
            "text": "Axton's condition limits his mobility.",
            "fol": "p_0(Axton)",
            "str_fol": "limits_mobility(Axton)",
            "negation": false
        },
        {
            "id": 6,
            "text": "Any medical condition that damages nerves will cause weakness.",
            "fol": "\u2200x (p_3(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (damages_nerves(x) \u2192 causes_weakness(x))"
        },
        {
            "id": 5,
            "text": "If atonicity causes weakness, then it affects muscles and impacts reflexes.",
            "fol": "p_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))",
            "str_fol": "causes_weakness(Axton) \u2192 (affects_muscles(Axton) \u2227 impacts_reflexes(Axton))"
        },
        {
            "id": 4,
            "text": "Atonicity is either treatable or has a cure, but not both.",
            "fol": "p_9(Axton) \u2295 p_1(Axton)",
            "str_fol": "is_treatable(Axton) \u2295 has_cure(Axton)"
        },
        {
            "id": 3,
            "text": "A medical condition is either treatable or incurable, but not both.",
            "fol": "\u2200x (inp_5(x) \u2295 p_9(x))",
            "str_fol": "\u2200x (incurable(x) \u2295 is_treatable(x))"
        },
        {
            "id": 2,
            "text": "If atonicity affects muscles and limits mobility, then it is a rare disease.",
            "fol": "(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)",
            "str_fol": "(affects_muscles(Axton) \u2227 limits_mobility(Axton)) \u2192 rare_disease(Axton)"
        },
        {
            "id": 1,
            "text": "All rare diseases are either curable or incurable, but not both.",
            "fol": "\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))",
            "str_fol": "\u2200x (rare_disease(x) \u2192 (curable(x) \u2295 incurable(x)))"
        },
        {
            "id": 0,
            "text": "Atonicity is either a chronic condition or a curable condition, but not both.",
            "fol": "p_4(Axton) \u2295 p_5(Axton)",
            "str_fol": "chronic(Axton) \u2295 curable(Axton)"
        }
    ],
    "context_fol": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_9(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)",
    "conclusion": {
        "id": 10,
        "subject": "Axton",
        "text": "Atonicity is not a chronic condition.",
        "fol": "\u00acp_4(Axton)",
        "str_fol": "\u00acchronic(Axton)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_4(Axton)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Axton",
                    "text": "Axton's medical condition damages nerves.",
                    "fol": "p_3(Axton)",
                    "str_fol": "damages_nerves(Axton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Any medical condition that damages nerves will cause weakness.",
                    "fol": "\u2200x (p_3(x) \u2192 p_10(x))",
                    "str_fol": "\u2200x (damages_nerves(x) \u2192 causes_weakness(x))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Axton",
                "text": "Axton causes weakness.",
                "fol": "p_10(Axton)",
                "str_fol": "causes_weakness(Axton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Axton",
                    "text": "Axton causes weakness.",
                    "fol": "p_10(Axton)",
                    "str_fol": "causes_weakness(Axton)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Axton",
                    "text": "Axton's reflexes are impacted.",
                    "fol": "p_2(Axton)",
                    "str_fol": "impacts_reflexes(Axton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If atonicity causes weakness, then it affects muscles and impacts reflexes.",
                    "fol": "p_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))",
                    "str_fol": "causes_weakness(Axton) \u2192 (affects_muscles(Axton) \u2227 impacts_reflexes(Axton))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Axton",
                "text": "Atonicity affects Axton's muscles.",
                "fol": "p_8(Axton)",
                "str_fol": "affects_muscles(Axton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Axton",
                    "text": "Axton does not have a cure.",
                    "fol": "\u00acp_1(Axton)",
                    "str_fol": "\u00achas_cure(Axton)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Atonicity is either treatable or has a cure, but not both.",
                    "fol": "p_9(Axton) \u2295 p_1(Axton)",
                    "str_fol": "is_treatable(Axton) \u2295 has_cure(Axton)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Axton",
                "text": "Axton is treatable.",
                "fol": "p_9(Axton)",
                "str_fol": "is_treatable(Axton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Axton",
                    "text": "Axton is treatable.",
                    "fol": "p_9(Axton)",
                    "str_fol": "is_treatable(Axton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "A medical condition is either treatable or incurable, but not both.",
                    "fol": "\u2200x (inp_5(x) \u2295 p_9(x))",
                    "str_fol": "\u2200x (incurable(x) \u2295 is_treatable(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Axton",
                "text": "Axton is not incurable.",
                "fol": "\u00acinp_5(Axton)",
                "str_fol": "\u00acincurable(Axton)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Axton",
                    "text": "Atonicity affects Axton's muscles.",
                    "fol": "p_8(Axton)",
                    "str_fol": "affects_muscles(Axton)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Axton",
                    "text": "Axton's condition limits his mobility.",
                    "fol": "p_0(Axton)",
                    "str_fol": "limits_mobility(Axton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If atonicity affects muscles and limits mobility, then it is a rare disease.",
                    "fol": "(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)",
                    "str_fol": "(affects_muscles(Axton) \u2227 limits_mobility(Axton)) \u2192 rare_disease(Axton)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Axton",
                "text": "Axton has a rare disease.",
                "fol": "p_6(Axton)",
                "str_fol": "rare_disease(Axton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Axton",
                    "text": "Axton has a rare disease.",
                    "fol": "p_6(Axton)",
                    "str_fol": "rare_disease(Axton)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Axton",
                    "text": "Axton is not incurable.",
                    "fol": "\u00acinp_5(Axton)",
                    "str_fol": "\u00acincurable(Axton)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "All rare diseases are either curable or incurable, but not both.",
                    "fol": "\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))",
                    "str_fol": "\u2200x (rare_disease(x) \u2192 (curable(x) \u2295 incurable(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Axton",
                "text": "Axton's condition is curable.",
                "fol": "p_5(Axton)",
                "str_fol": "curable(Axton)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Axton",
                    "text": "Axton's condition is curable.",
                    "fol": "p_5(Axton)",
                    "str_fol": "curable(Axton)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Atonicity is either a chronic condition or a curable condition, but not both.",
                    "fol": "p_4(Axton) \u2295 p_5(Axton)",
                    "str_fol": "chronic(Axton) \u2295 curable(Axton)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Axton",
                "text": "Atonicity is not a chronic condition.",
                "fol": "\u00acp_4(Axton)",
                "str_fol": "\u00acchronic(Axton)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_3(x) -> p_10(x))).  [assumption].\n2 p_10(Axton) -> p_8(Axton) & p_2(Axton).  [assumption].\n3 -(p_9(Axton) <-> p_1(Axton)).  [assumption].\n4 (all x -(inp_5(x) <-> p_9(x))).  [assumption].\n5 p_8(Axton) & p_0(Axton) -> p_6(Axton).  [assumption].\n6 (all x (p_6(x) -> -(p_5(x) <-> inp_5(x)))).  [assumption].\n7 -(p_4(Axton) <-> p_5(Axton)).  [assumption].\n8 -p_4(Axton).  [goal].\n9 -p_3(x) | p_10(x).  [clausify(1)].\n10 p_3(Axton).  [assumption].\n11 p_9(Axton) | p_1(Axton).  [clausify(3)].\n12 -p_1(Axton).  [assumption].\n14 -p_8(Axton) | -p_0(Axton) | p_6(Axton).  [clausify(5)].\n15 p_0(Axton).  [assumption].\n16 p_10(Axton).  [resolve(9,a,10,a)].\n17 -p_10(Axton) | p_8(Axton).  [clausify(2)].\n18 -inp_5(x) | -p_9(x).  [clausify(4)].\n20 -p_6(x) | p_5(x) | inp_5(x).  [clausify(6)].\n22 -p_4(Axton) | -p_5(Axton).  [clausify(7)].\n24 p_4(Axton).  [deny(8)].\n25 -p_6(x) | p_5(x) | -p_9(x).  [resolve(20,c,18,a)].\n26 p_9(Axton).  [resolve(11,b,12,a)].\n28 p_8(Axton).  [resolve(16,a,17,a)].\n29 -p_8(Axton) | p_6(Axton).  [resolve(14,b,15,a)].\n30 -p_6(Axton) | p_5(Axton).  [resolve(25,c,26,a)].\n31 -p_5(Axton).  [resolve(24,a,22,a)].\n32 -p_6(Axton).  [resolve(30,b,31,a)].\n33 p_6(Axton).  [resolve(28,a,29,a)].\n34 $F.  [resolve(32,a,33,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_9(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)\n\u00acinp_5(Axton)\np_5(Axton)\n\u2200x (p_9(x) \u2192 \u00acinp_5(x))\n\u2200x (inp_5(x) \u2192 \u00acp_9(x))",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton)",
                    "p_2(Axton)",
                    "-p_1(Axton)",
                    "p_0(Axton)",
                    "all x (p_3(x) -> p_10(x))",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton))",
                    "-(p_9(Axton) <-> p_1(Axton))",
                    "all x (-(inp_5(x) <-> p_9(x)))",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton)",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x))))",
                    "-(p_4(Axton) <-> p_5(Axton))",
                    "p_10(Axton)",
                    "p_10(Axton) -> p_8(Axton)",
                    "p_8(Axton)",
                    "p_6(Axton)",
                    "-(p_5(Axton) <-> inp_5(Axton))",
                    "p_9(Axton)",
                    "-inp_5(Axton)",
                    "p_5(Axton)",
                    "all x (p_9(x) -> -inp_5(x))",
                    "all x (inp_5(x) -> -p_9(x))"
                ],
                "formulas(goals)": [
                    "-p_4(Axton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Axton)",
                    "p_10(Axton) \u2192 p_8(Axton)",
                    "p_8(Axton)",
                    "p_6(Axton)",
                    "p_5(Axton) \u2295 inp_5(Axton)",
                    "p_9(Axton)",
                    "\u00acinp_5(Axton)",
                    "p_5(Axton)"
                ],
                "added_rules": [
                    "\u2200x (p_9(x) \u2192 \u00acinp_5(x))",
                    "\u2200x (inp_5(x) \u2192 \u00acp_9(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_1(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton)",
                    "p_2(Axton)",
                    "-p_1(Axton)",
                    "p_0(Axton)",
                    "all x (p_3(x) -> p_10(x))",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton))",
                    "-(p_9(Axton) <-> p_1(Axton))",
                    "all x (-(inp_5(x) <-> p_1(x)))",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton)",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x))))",
                    "-(p_4(Axton) <-> p_5(Axton))",
                    "p_10(Axton)",
                    "p_10(Axton) -> p_8(Axton)",
                    "p_8(Axton)",
                    "p_6(Axton)",
                    "-(p_5(Axton) <-> inp_5(Axton))",
                    "p_9(Axton)"
                ],
                "formulas(goals)": [
                    "--p_4(Axton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acinp_5(Axton)",
                    "p_5(Axton)"
                ],
                "removed_rules": [
                    "\u2200x (p_9(x) \u2192 \u00acinp_5(x))",
                    "\u2200x (inp_5(x) \u2192 \u00acp_9(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (inp_5(x) \u2295 p_1(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_1(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)\np_8(Axton) \u2227 p_2(Axton)\np_8(Axton) \u2227 p_0(Axton)\ninp_5(Axton)\n\u00acp_5(Axton)\np_10(Axton) \u2192 p_2(Axton)",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton)",
                    "p_2(Axton)",
                    "-p_1(Axton)",
                    "p_0(Axton)",
                    "all x (p_3(x) -> p_10(x))",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton))",
                    "-(p_9(Axton) <-> p_1(Axton))",
                    "all x (-(inp_5(x) <-> p_1(x)))",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton)",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x))))",
                    "-(p_4(Axton) <-> p_5(Axton))",
                    "p_10(Axton)",
                    "p_10(Axton) -> p_8(Axton)",
                    "p_8(Axton)",
                    "p_6(Axton)",
                    "-(p_5(Axton) <-> inp_5(Axton))",
                    "p_9(Axton)",
                    "p_8(Axton) & p_2(Axton)",
                    "p_8(Axton) & p_0(Axton)",
                    "inp_5(Axton)",
                    "-p_5(Axton)",
                    "p_10(Axton) -> p_2(Axton)"
                ],
                "formulas(goals)": [
                    "--p_4(Axton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Axton) \u2227 p_2(Axton)",
                    "p_8(Axton) \u2227 p_0(Axton)",
                    "inp_5(Axton)",
                    "\u00acp_5(Axton)"
                ],
                "added_rules": [
                    "p_10(Axton) \u2192 p_2(Axton)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_1(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)\np_8(Axton) \u2227 p_2(Axton)\np_8(Axton) \u2227 p_0(Axton)\ninp_5(Axton)\n\u00acp_5(Axton)\np_10(Axton) \u2192 p_2(Axton)\n\u00ac(p_4(Axton) \u2227 p_5(Axton))",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton)",
                    "p_2(Axton)",
                    "-p_1(Axton)",
                    "p_0(Axton)",
                    "all x (p_3(x) -> p_10(x))",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton))",
                    "-(p_9(Axton) <-> p_1(Axton))",
                    "all x (-(inp_5(x) <-> p_1(x)))",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton)",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x))))",
                    "-(p_4(Axton) <-> p_5(Axton))",
                    "p_10(Axton)",
                    "p_10(Axton) -> p_8(Axton)",
                    "p_8(Axton)",
                    "p_6(Axton)",
                    "-(p_5(Axton) <-> inp_5(Axton))",
                    "p_9(Axton)",
                    "p_8(Axton) & p_2(Axton)",
                    "p_8(Axton) & p_0(Axton)",
                    "inp_5(Axton)",
                    "-p_5(Axton)",
                    "p_10(Axton) -> p_2(Axton)",
                    "-(p_4(Axton) & p_5(Axton))"
                ],
                "formulas(goals)": [
                    "--p_4(Axton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_4(Axton) \u2227 p_5(Axton))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_1(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)\np_8(Axton) \u2227 p_2(Axton)\np_8(Axton) \u2227 p_0(Axton)\ninp_5(Axton)\n\u00acp_5(Axton)\np_10(Axton) \u2192 p_2(Axton)\n\u00ac(p_4(Axton) \u2227 p_5(Axton))\np_3(Axton) \u2192 p_10(Axton)",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton)",
                    "p_2(Axton)",
                    "-p_1(Axton)",
                    "p_0(Axton)",
                    "all x (p_3(x) -> p_10(x))",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton))",
                    "-(p_9(Axton) <-> p_1(Axton))",
                    "all x (-(inp_5(x) <-> p_1(x)))",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton)",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x))))",
                    "-(p_4(Axton) <-> p_5(Axton))",
                    "p_10(Axton)",
                    "p_10(Axton) -> p_8(Axton)",
                    "p_8(Axton)",
                    "p_6(Axton)",
                    "-(p_5(Axton) <-> inp_5(Axton))",
                    "p_9(Axton)",
                    "p_8(Axton) & p_2(Axton)",
                    "p_8(Axton) & p_0(Axton)",
                    "inp_5(Axton)",
                    "-p_5(Axton)",
                    "p_10(Axton) -> p_2(Axton)",
                    "-(p_4(Axton) & p_5(Axton))",
                    "p_3(Axton) -> p_10(Axton)"
                ],
                "formulas(goals)": [
                    "--p_4(Axton)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Axton) \u2192 p_10(Axton)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_1(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)\np_8(Axton) \u2227 p_2(Axton)\np_8(Axton) \u2227 p_0(Axton)\ninp_5(Axton)\np_10(Axton) \u2192 p_2(Axton)\n\u00ac(p_4(Axton) \u2227 p_5(Axton))\np_3(Axton) \u2192 p_10(Axton)\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_5(Axton)",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton).",
                    "p_2(Axton).",
                    "-p_1(Axton).",
                    "p_0(Axton).",
                    "all x (p_3(x) -> p_10(x)).",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton)).",
                    "-(p_9(Axton) <-> p_1(Axton)).",
                    "all x (-(inp_5(x) <-> p_1(x))).",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton).",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x)))).",
                    "-(p_4(Axton) <-> p_5(Axton)).",
                    "p_10(Axton).",
                    "p_10(Axton) -> p_8(Axton).",
                    "p_8(Axton).",
                    "p_6(Axton).",
                    "-(p_5(Axton) <-> inp_5(Axton)).",
                    "p_9(Axton).",
                    "p_8(Axton) & p_2(Axton).",
                    "p_8(Axton) & p_0(Axton).",
                    "inp_5(Axton).",
                    "p_10(Axton) -> p_2(Axton).",
                    "-(p_4(Axton) & p_5(Axton)).",
                    "p_3(Axton) -> p_10(Axton).",
                    "(p_8(Axton) & p_0(Axton)) -> p_5(Axton)."
                ],
                "formulas(goals)": [
                    "-p_4(Axton)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_5(Axton)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_5(Axton)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Axton)\np_2(Axton)\n\u00acp_1(Axton)\np_0(Axton)\n\u2200x (p_3(x) \u2192 p_10(x))\np_10(Axton) \u2192 (p_8(Axton) \u2227 p_2(Axton))\np_9(Axton) \u2295 p_1(Axton)\n\u2200x (inp_5(x) \u2295 p_1(x))\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_6(Axton)\n\u2200x (p_6(x) \u2192 (p_5(x) \u2295 inp_5(x)))\np_4(Axton) \u2295 p_5(Axton)\np_10(Axton)\np_10(Axton) \u2192 p_8(Axton)\np_8(Axton)\np_6(Axton)\np_5(Axton) \u2295 inp_5(Axton)\np_9(Axton)\np_8(Axton) \u2227 p_2(Axton)\np_8(Axton) \u2227 p_0(Axton)\ninp_5(Axton)\np_10(Axton) \u2192 p_2(Axton)\n\u00ac(p_4(Axton) \u2227 p_5(Axton))\np_3(Axton) \u2192 p_10(Axton)\n(p_8(Axton) \u2227 p_0(Axton)) \u2192 p_5(Axton)",
            "Initial Goal": "\u00acp_4(Axton)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Axton).",
                    "p_2(Axton).",
                    "-p_1(Axton).",
                    "p_0(Axton).",
                    "all x (p_3(x) -> p_10(x)).",
                    "p_10(Axton) -> (p_8(Axton) & p_2(Axton)).",
                    "-(p_9(Axton) <-> p_1(Axton)).",
                    "all x (-(inp_5(x) <-> p_1(x))).",
                    "(p_8(Axton) & p_0(Axton)) -> p_6(Axton).",
                    "all x (p_6(x) -> (-(p_5(x) <-> inp_5(x)))).",
                    "-(p_4(Axton) <-> p_5(Axton)).",
                    "p_10(Axton).",
                    "p_10(Axton) -> p_8(Axton).",
                    "p_8(Axton).",
                    "p_6(Axton).",
                    "-(p_5(Axton) <-> inp_5(Axton)).",
                    "p_9(Axton).",
                    "p_8(Axton) & p_2(Axton).",
                    "p_8(Axton) & p_0(Axton).",
                    "inp_5(Axton).",
                    "p_10(Axton) -> p_2(Axton).",
                    "-(p_4(Axton) & p_5(Axton)).",
                    "p_3(Axton) -> p_10(Axton).",
                    "(p_8(Axton) & p_0(Axton)) -> p_5(Axton)."
                ],
                "formulas(goals)": [
                    "-p_4(Axton)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        }
    ]
}