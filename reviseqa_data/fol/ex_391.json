{
    "background_story": "Alondra was a gentle soul with a seraphic voice that could melt the coldest of hearts. As a young singer, she would often perform at local charities and hospitals, bringing joy and comfort to those in need. Her music was not just a form of entertainment, but a healing balm that soothed the sick and the sorrowful. With a voice like an angel, Alondra's presence seemed almost otherworldly, as if she were a messenger from a higher realm. Her kindness, compassion, and generosity inspired countless people, earning her the nickname 'The Angel of Song'. Alondra's seraphic spirit continued to touch lives, reminding all who heard her sing of the beauty and goodness that existed in the world.",
    "predicates": [
        {
            "id": 0,
            "name": "sings_beautifully"
        },
        {
            "id": 1,
            "name": "philanthropic"
        },
        {
            "id": 2,
            "name": "brings_hope"
        },
        {
            "id": 3,
            "name": "empathic"
        },
        {
            "id": 4,
            "name": "caring"
        },
        {
            "id": 5,
            "name": "kind_hearted"
        },
        {
            "id": 6,
            "name": "talented"
        },
        {
            "id": 7,
            "name": "inspirational"
        },
        {
            "id": 8,
            "name": "compassionate"
        },
        {
            "id": 9,
            "name": "helps_others"
        },
        {
            "id": 10,
            "name": "heals_souls"
        },
        {
            "id": 11,
            "name": "is_nurturing"
        },
        {
            "id": 12,
            "name": "creative"
        },
        {
            "id": 13,
            "name": "generous"
        },
        {
            "id": 14,
            "name": "soothes_minds"
        },
        {
            "id": 15,
            "name": "eases_pain"
        },
        {
            "id": 16,
            "name": "donates_time"
        },
        {
            "id": 17,
            "name": "gives_support"
        },
        {
            "id": 18,
            "name": "sings_gently"
        },
        {
            "id": 19,
            "name": "has_empathy"
        },
        {
            "id": 20,
            "name": "soothe_pain"
        },
        {
            "id": 21,
            "name": "spread_love"
        }
    ],
    "subject_name": "Alondra",
    "subject_category": "human",
    "keyword": "seraphic",
    "all_facts": [
        {
            "id": 0,
            "subject": "Alondra",
            "text": "Alondra does not sing beautifully.",
            "fol": "\u00acp_0(Alondra)",
            "str_fol": "\u00acsings_beautifully(Alondra)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Alondra",
            "text": "Alondra is philanthropic.",
            "fol": "p_1(Alondra)",
            "str_fol": "philanthropic(Alondra)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Alondra",
            "text": "Alondra does not bring hope.",
            "fol": "\u00acp_2(Alondra)",
            "str_fol": "\u00acbrings_hope(Alondra)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Alondra",
            "text": "Alondra is not empathic.",
            "fol": "\u00acp_3(Alondra)",
            "str_fol": "\u00acempathic(Alondra)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Alondra",
            "text": "Alondra is not caring.",
            "fol": "\u00acp_4(Alondra)",
            "str_fol": "\u00accaring(Alondra)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Alondra",
            "text": "Alondra is not nurturing.",
            "fol": "\u00acp_11(Alondra)",
            "str_fol": "\u00acis_nurturing(Alondra)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Alondra",
            "text": "Alondra does not heal souls.",
            "fol": "\u00acp_10(Alondra)",
            "str_fol": "\u00acheals_souls(Alondra)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Alondra",
            "text": "Alondra helps others.",
            "fol": "p_9(Alondra)",
            "str_fol": "helps_others(Alondra)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Alondra",
            "text": "Alondra is not compassionate.",
            "fol": "\u00acp_8(Alondra)",
            "str_fol": "\u00accompassionate(Alondra)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Alondra",
            "text": "Alondra is inspirational.",
            "fol": "p_7(Alondra)",
            "str_fol": "inspirational(Alondra)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Alondra",
            "text": "Alondra is not kind-hearted.",
            "fol": "\u00acp_5(Alondra)",
            "str_fol": "\u00ackind_hearted(Alondra)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Alondra",
            "text": "Alondra is not empathic.",
            "fol": "\u00acp_3(Alondra)",
            "str_fol": "\u00acempathic(Alondra)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Alondra",
            "text": "Alondra is not caring.",
            "fol": "\u00acp_4(Alondra)",
            "str_fol": "\u00accaring(Alondra)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Alondra",
            "text": "Alondra does not bring hope.",
            "fol": "\u00acp_2(Alondra)",
            "str_fol": "\u00acbrings_hope(Alondra)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Alondra",
            "text": "Alondra does not sing beautifully.",
            "fol": "\u00acp_0(Alondra)",
            "str_fol": "\u00acsings_beautifully(Alondra)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Alondra",
            "text": "Alondra is philanthropic.",
            "fol": "p_1(Alondra)",
            "str_fol": "philanthropic(Alondra)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If someone is nurturing, then they are empathic and caring.",
            "fol": "\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))",
            "str_fol": "\u2200x (is_nurturing(x) \u2192 (empathic(x) \u2227 caring(x)))"
        },
        {
            "id": 4,
            "text": "For all humans, if they either heal souls or bring hope, then they are nurturing.",
            "fol": "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((heals_souls(x) \u2295 brings_hope(x)) \u2192 is_nurturing(x))"
        },
        {
            "id": 3,
            "text": "Alondra either helps others or sings beautifully.",
            "fol": "p_9(Alondra) \u2228 p_0(Alondra)",
            "str_fol": "helps_others(Alondra) \u2228 sings_beautifully(Alondra)"
        },
        {
            "id": 2,
            "text": "If Alondra helps others and is compassionate, then she heals souls.",
            "fol": "(p_9(Alondra) \u2227 p_8(Alondra)) \u2192 p_10(Alondra)",
            "str_fol": "(helps_others(Alondra) \u2227 compassionate(Alondra)) \u2192 heals_souls(Alondra)"
        },
        {
            "id": 1,
            "text": "If Alondra is philanthropic, then she is either inspirational or compassionate, but not both.",
            "fol": "p_1(Alondra) \u2192 (p_7(Alondra) \u2295 p_8(Alondra))",
            "str_fol": "philanthropic(Alondra) \u2192 (inspirational(Alondra) \u2295 compassionate(Alondra))"
        },
        {
            "id": 0,
            "text": "If Alondra is either kind-hearted or talented (but not both), then she is inspirational.",
            "fol": "(p_5(Alondra) \u2295 p_6(Alondra)) \u2192 p_7(Alondra)",
            "str_fol": "(kind_hearted(Alondra) \u2295 talented(Alondra)) \u2192 inspirational(Alondra)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Alondra",
            "text": "Alondra is not empathic.",
            "fol": "\u00acp_3(Alondra)",
            "str_fol": "\u00acempathic(Alondra)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Alondra",
            "text": "Alondra is not caring.",
            "fol": "\u00acp_4(Alondra)",
            "str_fol": "\u00accaring(Alondra)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Alondra",
            "text": "Alondra does not bring hope.",
            "fol": "\u00acp_2(Alondra)",
            "str_fol": "\u00acbrings_hope(Alondra)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Alondra",
            "text": "Alondra does not sing beautifully.",
            "fol": "\u00acp_0(Alondra)",
            "str_fol": "\u00acsings_beautifully(Alondra)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Alondra",
            "text": "Alondra is philanthropic.",
            "fol": "p_1(Alondra)",
            "str_fol": "philanthropic(Alondra)",
            "negation": false
        },
        {
            "id": 5,
            "text": "If someone is nurturing, then they are empathic and caring.",
            "fol": "\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))",
            "str_fol": "\u2200x (is_nurturing(x) \u2192 (empathic(x) \u2227 caring(x)))"
        },
        {
            "id": 4,
            "text": "For all humans, if they either heal souls or bring hope, then they are nurturing.",
            "fol": "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((heals_souls(x) \u2295 brings_hope(x)) \u2192 is_nurturing(x))"
        },
        {
            "id": 3,
            "text": "Alondra either helps others or sings beautifully.",
            "fol": "p_9(Alondra) \u2228 p_0(Alondra)",
            "str_fol": "helps_others(Alondra) \u2228 sings_beautifully(Alondra)"
        },
        {
            "id": 2,
            "text": "If Alondra helps others and is compassionate, then she heals souls.",
            "fol": "(p_9(Alondra) \u2227 p_8(Alondra)) \u2192 p_10(Alondra)",
            "str_fol": "(helps_others(Alondra) \u2227 compassionate(Alondra)) \u2192 heals_souls(Alondra)"
        },
        {
            "id": 1,
            "text": "If Alondra is philanthropic, then she is either inspirational or compassionate, but not both.",
            "fol": "p_1(Alondra) \u2192 (p_7(Alondra) \u2295 p_8(Alondra))",
            "str_fol": "philanthropic(Alondra) \u2192 (inspirational(Alondra) \u2295 compassionate(Alondra))"
        },
        {
            "id": 0,
            "text": "If Alondra is either kind-hearted or talented (but not both), then she is inspirational.",
            "fol": "(p_5(Alondra) \u2295 p_6(Alondra)) \u2192 p_7(Alondra)",
            "str_fol": "(kind_hearted(Alondra) \u2295 talented(Alondra)) \u2192 inspirational(Alondra)"
        }
    ],
    "context_fol": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\n\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_11(x))\np_9(Alondra) \u2228 p_0(Alondra)\n(p_9(Alondra) \u2227 p_8(Alondra)) \u2192 p_10(Alondra)\np_1(Alondra) \u2192 (p_7(Alondra) \u2295 p_8(Alondra))\n(p_5(Alondra) \u2295 p_6(Alondra)) \u2192 p_7(Alondra)",
    "conclusion": {
        "id": 10,
        "subject": "Alondra",
        "text": "Alondra is not kind-hearted.",
        "fol": "\u00acp_5(Alondra)",
        "str_fol": "\u00ackind_hearted(Alondra)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_5(Alondra)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Alondra",
                    "text": "Alondra is not empathic.",
                    "fol": "\u00acp_3(Alondra)",
                    "str_fol": "\u00acempathic(Alondra)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Alondra",
                    "text": "Alondra is not caring.",
                    "fol": "\u00acp_4(Alondra)",
                    "str_fol": "\u00accaring(Alondra)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone is nurturing, then they are empathic and caring.",
                    "fol": "\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))",
                    "str_fol": "\u2200x (is_nurturing(x) \u2192 (empathic(x) \u2227 caring(x)))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Alondra",
                "text": "Alondra is not nurturing.",
                "fol": "\u00acp_11(Alondra)",
                "str_fol": "\u00acis_nurturing(Alondra)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Alondra",
                    "text": "Alondra does not bring hope.",
                    "fol": "\u00acp_2(Alondra)",
                    "str_fol": "\u00acbrings_hope(Alondra)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Alondra",
                    "text": "Alondra is not nurturing.",
                    "fol": "\u00acp_11(Alondra)",
                    "str_fol": "\u00acis_nurturing(Alondra)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all humans, if they either heal souls or bring hope, then they are nurturing.",
                    "fol": "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((heals_souls(x) \u2295 brings_hope(x)) \u2192 is_nurturing(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Alondra",
                "text": "Alondra does not heal souls.",
                "fol": "\u00acp_10(Alondra)",
                "str_fol": "\u00acheals_souls(Alondra)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Alondra",
                    "text": "Alondra does not sing beautifully.",
                    "fol": "\u00acp_0(Alondra)",
                    "str_fol": "\u00acsings_beautifully(Alondra)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Alondra either helps others or sings beautifully.",
                    "fol": "p_9(Alondra) \u2228 p_0(Alondra)",
                    "str_fol": "helps_others(Alondra) \u2228 sings_beautifully(Alondra)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Alondra",
                "text": "Alondra helps others.",
                "fol": "p_9(Alondra)",
                "str_fol": "helps_others(Alondra)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Alondra",
                    "text": "Alondra helps others.",
                    "fol": "p_9(Alondra)",
                    "str_fol": "helps_others(Alondra)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Alondra",
                    "text": "Alondra does not heal souls.",
                    "fol": "\u00acp_10(Alondra)",
                    "str_fol": "\u00acheals_souls(Alondra)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Alondra helps others and is compassionate, then she heals souls.",
                    "fol": "(p_9(Alondra) \u2227 p_8(Alondra)) \u2192 p_10(Alondra)",
                    "str_fol": "(helps_others(Alondra) \u2227 compassionate(Alondra)) \u2192 heals_souls(Alondra)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Alondra",
                "text": "Alondra is not compassionate.",
                "fol": "\u00acp_8(Alondra)",
                "str_fol": "\u00accompassionate(Alondra)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Alondra",
                    "text": "Alondra is philanthropic.",
                    "fol": "p_1(Alondra)",
                    "str_fol": "philanthropic(Alondra)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Alondra",
                    "text": "Alondra is not compassionate.",
                    "fol": "\u00acp_8(Alondra)",
                    "str_fol": "\u00accompassionate(Alondra)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Alondra is philanthropic, then she is either inspirational or compassionate, but not both.",
                    "fol": "p_1(Alondra) \u2192 (p_7(Alondra) \u2295 p_8(Alondra))",
                    "str_fol": "philanthropic(Alondra) \u2192 (inspirational(Alondra) \u2295 compassionate(Alondra))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Alondra",
                "text": "Alondra is inspirational.",
                "fol": "p_7(Alondra)",
                "str_fol": "inspirational(Alondra)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Alondra",
                    "text": "Alondra is inspirational.",
                    "fol": "p_7(Alondra)",
                    "str_fol": "inspirational(Alondra)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Alondra is either kind-hearted or talented (but not both), then she is inspirational.",
                    "fol": "(p_5(Alondra) \u2295 p_6(Alondra)) \u2192 p_7(Alondra)",
                    "str_fol": "(kind_hearted(Alondra) \u2295 talented(Alondra)) \u2192 inspirational(Alondra)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\n\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_11(x))\np_9(Alondra) \u2228 p_0(Alondra)\n(p_9(Alondra) \u2227 p_8(Alondra)) \u2192 p_10(Alondra)\np_1(Alondra) \u2192 (p_7(Alondra) \u2295 p_8(Alondra))\n(p_5(Alondra) \u2295 p_6(Alondra)) \u2192 p_7(Alondra)",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Alondra).",
                    "-p_4(Alondra).",
                    "-p_2(Alondra).",
                    "-p_0(Alondra).",
                    "p_1(Alondra).",
                    "all x (p_11(x) -> (p_3(x) & p_4(x))).",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_11(x)).",
                    "p_9(Alondra) | p_0(Alondra).",
                    "(p_9(Alondra) & p_8(Alondra)) -> p_10(Alondra).",
                    "p_1(Alondra) -> (-(p_7(Alondra) <-> p_8(Alondra))).",
                    "(-(p_5(Alondra) <-> p_6(Alondra))) -> p_7(Alondra).",
                    "p_5(Alondra) -> p_8(Alondra)."
                ],
                "formulas(goals)": [
                    "-p_5(Alondra)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Alondra) \u2192 p_8(Alondra)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Alondra).\n\u00acp_4(Alondra).\n\u00acp_2(Alondra).\n\u00acp_0(Alondra).\np_1(Alondra).\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x))).\np_9(Alondra) \u2228 p_0(Alondra).\n(\u00acp_9(Alondra) \u2228 \u00acp_8(Alondra) \u2228 p_10(Alondra)).\n(p_1(Alondra) \u2192 \u00ac(p_7(Alondra) \u2194 p_8(Alondra))).\n(\u00ac(p_5(Alondra) \u2194 p_6(Alondra)) \u2192 p_7(Alondra)).\n(p_1(Alondra) \u2192 p_5(Alondra)).",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Alondra).",
                    "-p_4(Alondra).",
                    "-p_2(Alondra).",
                    "-p_0(Alondra).",
                    "p_1(Alondra).",
                    "all x (-p_11(x) | (p_3(x) & p_4(x))).",
                    "p_9(Alondra) | p_0(Alondra).",
                    "(-p_9(Alondra) | -p_8(Alondra) | p_10(Alondra)).",
                    "(-p_1(Alondra) | (-(p_7(Alondra) <-> p_8(Alondra)))).",
                    "(-(p_5(Alondra) <-> p_6(Alondra)) | p_7(Alondra)).",
                    "(-p_1(Alondra) | p_5(Alondra))."
                ],
                "formulas(goals)": [
                    "-(-p_5(Alondra))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_11(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_1(Alondra) \u2192 p_5(Alondra)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\np_9(Alondra) \u2228 p_0(Alondra)\n\u00acp_9(Alondra) \u2228 \u00acp_8(Alondra) \u2228 p_10(Alondra)\n(p_1(Alondra) \u2192 \u00ac(p_7(Alondra) \u2194 p_8(Alondra)))\n(\u00ac(p_5(Alondra) \u2194 p_6(Alondra)) \u2192 p_7(Alondra))\n(p_1(Alondra) \u2192 \u00acp_5(Alondra))",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Alondra).",
                    "-p_4(Alondra).",
                    "-p_2(Alondra).",
                    "-p_0(Alondra).",
                    "p_1(Alondra).",
                    "all x (p_11(x) -> (p_3(x) & p_4(x))).",
                    "p_9(Alondra) | p_0(Alondra).",
                    "-p_9(Alondra) | -p_8(Alondra) | p_10(Alondra).",
                    "(p_1(Alondra) -> -(p_7(Alondra) <-> p_8(Alondra))).",
                    "(-(p_5(Alondra) <-> p_6(Alondra)) -> p_7(Alondra)).",
                    "(p_1(Alondra) -> -p_5(Alondra))."
                ],
                "formulas(goals)": [
                    "-p_5(Alondra)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_1(Alondra) \u2192 p_5(Alondra))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_1(Alondra) \u2192 \u00acp_5(Alondra))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\np_9(Alondra) \u2228 p_0(Alondra)\n\u00acp_9(Alondra) \u2228 \u00acp_8(Alondra) \u2228 p_10(Alondra)\n(p_1(Alondra) \u2192 \u00ac((p_7(Alondra) \u2192 p_8(Alondra)) \u2227 (p_8(Alondra) \u2192 p_7(Alondra))))\n(\u00ac(p_5(Alondra) \u2194 p_6(Alondra)) \u2192 p_7(Alondra))\n\u00acp_1(Alondra) \u2228 \u00acp_5(Alondra)\np_1(Alondra) \u2228 \u00acp_1(Alondra)\n\u00acp_11(Alondra)",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-(p_3(Alondra))",
                    "-(p_4(Alondra))",
                    "-(p_2(Alondra))",
                    "-(p_0(Alondra))",
                    "p_1(Alondra)",
                    "all x (p_11(x) -> (p_3(x) & p_4(x)))",
                    "p_9(Alondra) | p_0(Alondra)",
                    "-(p_9(Alondra)) | -(p_8(Alondra)) | p_10(Alondra)",
                    "(p_1(Alondra) -> -((p_7(Alondra) -> p_8(Alondra)) & (p_8(Alondra) -> p_7(Alondra))))",
                    "(-(p_5(Alondra) <-> p_6(Alondra)) -> p_7(Alondra))",
                    "-(p_1(Alondra)) | -(p_5(Alondra))",
                    "p_1(Alondra) | -(p_1(Alondra))",
                    "-(p_11(Alondra))"
                ],
                "formulas(goals)": [
                    "-(p_5(Alondra))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_1(Alondra) \u2192 \u00ac(p_7(Alondra) \u2194 p_8(Alondra)))",
                    "(p_1(Alondra) \u2192 \u00acp_5(Alondra))"
                ],
                "added_facts": [
                    "\u00acp_11(Alondra)"
                ],
                "added_rules": [
                    "(p_1(Alondra) \u2192 \u00ac((p_7(Alondra) \u2192 p_8(Alondra)) \u2227 (p_8(Alondra) \u2192 p_7(Alondra))))",
                    "\u00acp_1(Alondra) \u2228 \u00acp_5(Alondra)",
                    "p_1(Alondra) \u2228 \u00acp_1(Alondra)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\np_9(Alondra) \u2228 p_0(Alondra)\n\u00acp_9(Alondra) \u2228 \u00acp_8(Alondra) \u2228 p_10(Alondra)\n(p_1(Alondra) \u2192 \u00ac((p_7(Alondra) \u2192 p_8(Alondra)) \u2227 (p_8(Alondra) \u2192 p_7(Alondra))))\n(\u00ac(p_5(Alondra) \u2194 p_6(Alondra)) \u2192 p_7(Alondra))\np_1(Alondra) \u2228 \u00acp_1(Alondra)\n\u00acp_11(Alondra)\n\u00acp_9(Alondra) \u2228 p_5(Alondra)",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Alondra)",
                    "-p_4(Alondra)",
                    "-p_2(Alondra)",
                    "-p_0(Alondra)",
                    "p_1(Alondra)",
                    "all x (-p_11(x) | (p_3(x) & p_4(x)))",
                    "p_9(Alondra) | p_0(Alondra)",
                    "-p_9(Alondra) | -p_8(Alondra) | p_10(Alondra)",
                    "-p_1(Alondra) | -(-(-p_7(Alondra) | p_8(Alondra)) | -(-p_8(Alondra) | p_7(Alondra)))",
                    "(-(-(-p_5(Alondra) | p_6(Alondra)) | -(-p_6(Alondra) | p_5(Alondra))) | p_7(Alondra))",
                    "p_1(Alondra) | -p_1(Alondra)",
                    "-p_11(Alondra)",
                    "-p_9(Alondra) | p_5(Alondra)"
                ],
                "formulas(goals)": [
                    "-(-p_5(Alondra))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_1(Alondra) \u2228 \u00acp_5(Alondra)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_9(Alondra) \u2228 p_5(Alondra)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\np_9(Alondra) \u2228 p_0(Alondra)\n\u00acp_9(Alondra) \u2228 \u00acp_8(Alondra) \u2228 p_10(Alondra)\n(p_1(Alondra) \u2192 \u00ac(p_7(Alondra) \u2194 p_8(Alondra)))\n(\u00ac(p_5(Alondra) \u2194 p_6(Alondra)) \u2192 p_7(Alondra))\np_1(Alondra) \u2228 \u00acp_1(Alondra)\n\u00acp_11(Alondra)\n\u00acp_9(Alondra) \u2228 p_5(Alondra)\np_9(Alondra)\np_5(Alondra)\n\u00acp_9(Alondra) \u2192 p_0(Alondra)",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Alondra)",
                    "-p_4(Alondra)",
                    "-p_2(Alondra)",
                    "-p_0(Alondra)",
                    "p_1(Alondra)",
                    "all x (p_11(x) -> (p_3(x) & p_4(x)))",
                    "p_9(Alondra) | p_0(Alondra)",
                    "-p_9(Alondra) | -p_8(Alondra) | p_10(Alondra)",
                    "p_1(Alondra) -> -(p_7(Alondra) <-> p_8(Alondra))",
                    "(-(p_5(Alondra) <-> p_6(Alondra)) -> p_7(Alondra))",
                    "p_1(Alondra) | -p_1(Alondra)",
                    "-p_11(Alondra)",
                    "-p_9(Alondra) | p_5(Alondra)",
                    "p_9(Alondra)",
                    "p_5(Alondra)",
                    "-p_9(Alondra) -> p_0(Alondra)"
                ],
                "formulas(goals)": [
                    "-(-p_5(Alondra))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Alondra)",
                    "p_5(Alondra)"
                ],
                "added_rules": [
                    "(p_1(Alondra) \u2192 \u00ac(p_7(Alondra) \u2194 p_8(Alondra)))",
                    "(\u00acp_9(Alondra) \u2192 p_0(Alondra))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Alondra)\n\u00acp_4(Alondra)\n\u00acp_2(Alondra)\n\u00acp_0(Alondra)\np_1(Alondra)\n\u2200x (p_11(x) \u2192 (p_3(x) \u2227 p_4(x)))\np_9(Alondra) \u2228 p_0(Alondra)\n\u00acp_9(Alondra) \u2228 \u00acp_8(Alondra) \u2228 p_10(Alondra)\n(p_1(Alondra) \u2192 ((p_7(Alondra) \u2227 \u00acp_8(Alondra)) \u2228 (\u00acp_7(Alondra) \u2227 p_8(Alondra))))\n(((p_5(Alondra) \u2227 \u00acp_6(Alondra)) \u2228 (\u00acp_5(Alondra) \u2227 p_6(Alondra))) \u2192 p_7(Alondra))\np_1(Alondra) \u2228 \u00acp_1(Alondra)\n\u00acp_11(Alondra)\n\u00acp_9(Alondra) \u2228 p_5(Alondra)\np_9(Alondra)\np_5(Alondra)\n(\u00acp_9(Alondra) \u2192 p_0(Alondra))\n(p_5(Alondra) \u2227 p_9(Alondra))",
            "Initial Goal": "\u00acp_5(Alondra)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Alondra)",
                    "-p_4(Alondra)",
                    "-p_2(Alondra)",
                    "-p_0(Alondra)",
                    "p_1(Alondra)",
                    "all x (p_11(x) -> (p_3(x) & p_4(x)))",
                    "p_9(Alondra) | p_0(Alondra)",
                    "-p_9(Alondra) | -p_8(Alondra) | p_10(Alondra)",
                    "(p_1(Alondra) -> ((p_7(Alondra) & -p_8(Alondra)) | (-p_7(Alondra) & p_8(Alondra))))",
                    "(((p_5(Alondra) & -p_6(Alondra)) | (-p_5(Alondra) & p_6(Alondra))) -> p_7(Alondra))",
                    "p_1(Alondra) | -p_1(Alondra)",
                    "-p_11(Alondra)",
                    "-p_9(Alondra) | p_5(Alondra)",
                    "p_9(Alondra)",
                    "p_5(Alondra)",
                    "(-p_9(Alondra) -> p_0(Alondra))",
                    "(p_5(Alondra) & p_9(Alondra))"
                ],
                "formulas(goals)": [
                    "--p_5(Alondra)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_1(Alondra) \u2192 \u00ac(p_7(Alondra) \u2194 p_8(Alondra)))",
                    "(\u00ac(p_5(Alondra) \u2194 p_6(Alondra)) \u2192 p_7(Alondra))"
                ],
                "added_facts": [
                    "(p_5(Alondra) \u2227 p_9(Alondra))"
                ],
                "added_rules": [
                    "(p_1(Alondra) \u2192 ((p_7(Alondra) \u2227 \u00acp_8(Alondra)) \u2228 (\u00acp_7(Alondra) \u2227 p_8(Alondra))))",
                    "(((p_5(Alondra) \u2227 \u00acp_6(Alondra)) \u2228 (\u00acp_5(Alondra) \u2227 p_6(Alondra))) \u2192 p_7(Alondra))"
                ]
            }
        }
    ]
}