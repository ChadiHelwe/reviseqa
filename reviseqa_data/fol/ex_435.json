{
    "background_story": "Edward was a young athlete who faced numerous challenges throughout his career. Despite being told he was too small to play football, he persevered, training tirelessly to prove his doubters wrong. After a devastating injury sidelined him for a season, Edward could have given up, but instead, he used the time to strengthen his mental game and study the sport. His prevailing spirit and determination paid off when he led his team to a championship win, earning him the MVP title. Edward's story inspired countless young athletes, showing them that with hard work and unwavering dedication, they too could overcome obstacles and achieve greatness. His prevailing attitude became a beacon of hope for those facing adversity, reminding them that success often lies just beyond the point of surrender.",
    "predicates": [
        {
            "id": 0,
            "name": "works_hard"
        },
        {
            "id": 1,
            "name": "stays_focused"
        },
        {
            "id": 2,
            "name": "inspires_others"
        },
        {
            "id": 3,
            "name": "faces_challenges"
        },
        {
            "id": 4,
            "name": "finds_motivation"
        },
        {
            "id": 5,
            "name": "determined"
        },
        {
            "id": 6,
            "name": "overcome_obstacles"
        },
        {
            "id": 7,
            "name": "achieve_success"
        },
        {
            "id": 8,
            "name": "sets_goals"
        },
        {
            "id": 9,
            "name": "succeeds"
        },
        {
            "id": 10,
            "name": "has_passion"
        },
        {
            "id": 11,
            "name": "pushes_limits"
        },
        {
            "id": 12,
            "name": "takes_risks"
        },
        {
            "id": 13,
            "name": "makes_plans"
        },
        {
            "id": 14,
            "name": "seeks_improvement"
        },
        {
            "id": 15,
            "name": "learns_fast"
        },
        {
            "id": 16,
            "name": "loves_competing"
        },
        {
            "id": 17,
            "name": "enjoys_training"
        }
    ],
    "subject_name": "Edward",
    "subject_category": "human",
    "keyword": "prevailing",
    "all_facts": [
        {
            "id": 0,
            "subject": "Edward",
            "text": "Edward works hard.",
            "fol": "p_0(Edward)",
            "str_fol": "works_hard(Edward)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Edward",
            "text": "Edward stays focused.",
            "fol": "p_1(Edward)",
            "str_fol": "stays_focused(Edward)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Edward",
            "text": "Edward does not inspire others.",
            "fol": "\u00acp_2(Edward)",
            "str_fol": "\u00acinspires_others(Edward)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Edward",
            "text": "Edward does not face challenges.",
            "fol": "\u00acp_3(Edward)",
            "str_fol": "\u00acfaces_challenges(Edward)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Edward",
            "text": "Edward does not find motivation.",
            "fol": "\u00acp_4(Edward)",
            "str_fol": "\u00acfinds_motivation(Edward)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Edward",
            "text": "Edward does not have passion.",
            "fol": "\u00acp_10(Edward)",
            "str_fol": "\u00achas_passion(Edward)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Edward",
            "text": "Edward does not succeed.",
            "fol": "\u00acp_9(Edward)",
            "str_fol": "\u00acsucceeds(Edward)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Edward",
            "text": "Edward is not determined.",
            "fol": "\u00acp_5(Edward)",
            "str_fol": "\u00acdetermined(Edward)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Edward",
            "text": "Edward does not set goals.",
            "fol": "\u00acp_8(Edward)",
            "str_fol": "\u00acsets_goals(Edward)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Edward",
            "text": "Edward achieves success.",
            "fol": "p_7(Edward)",
            "str_fol": "achieve_success(Edward)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Edward",
            "text": "Edward does not face challenges.",
            "fol": "\u00acp_3(Edward)",
            "str_fol": "\u00acfaces_challenges(Edward)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Edward",
            "text": "Edward does not find motivation.",
            "fol": "\u00acp_4(Edward)",
            "str_fol": "\u00acfinds_motivation(Edward)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Edward",
            "text": "Edward does not inspire others.",
            "fol": "\u00acp_2(Edward)",
            "str_fol": "\u00acinspires_others(Edward)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Edward",
            "text": "Edward stays focused.",
            "fol": "p_1(Edward)",
            "str_fol": "stays_focused(Edward)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Edward",
            "text": "Edward works hard.",
            "fol": "p_0(Edward)",
            "str_fol": "works_hard(Edward)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Anyone who has passion or faces challenges will find motivation.",
            "fol": "\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_passion(x) \u2228 faces_challenges(x)) \u2192 finds_motivation(x))"
        },
        {
            "id": 4,
            "text": "Anyone who has passion or succeeds will inspire others.",
            "fol": "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((has_passion(x) \u2228 succeeds(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 3,
            "text": "Edward is either determined or stays focused, but not necessarily both at the same time.",
            "fol": "p_1(Edward) \u2295 p_5(Edward)",
            "str_fol": "stays_focused(Edward) \u2295 determined(Edward)"
        },
        {
            "id": 2,
            "text": "If Edward sets goals, then he will succeed.",
            "fol": "p_8(Edward) \u2192 p_9(Edward)",
            "str_fol": "sets_goals(Edward) \u2192 succeeds(Edward)"
        },
        {
            "id": 1,
            "text": "For all humans, if they set goals and work hard, then they can overcome obstacles.",
            "fol": "\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((sets_goals(x) \u2227 works_hard(x)) \u2192 overcome_obstacles(x))"
        },
        {
            "id": 0,
            "text": "If Edward is determined, then he will overcome obstacles and achieve success.",
            "fol": "p_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))",
            "str_fol": "determined(Edward) \u2192 (overcome_obstacles(Edward) \u2227 achieve_success(Edward))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Edward",
            "text": "Edward does not face challenges.",
            "fol": "\u00acp_3(Edward)",
            "str_fol": "\u00acfaces_challenges(Edward)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Edward",
            "text": "Edward does not find motivation.",
            "fol": "\u00acp_4(Edward)",
            "str_fol": "\u00acfinds_motivation(Edward)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Edward",
            "text": "Edward does not inspire others.",
            "fol": "\u00acp_2(Edward)",
            "str_fol": "\u00acinspires_others(Edward)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Edward",
            "text": "Edward stays focused.",
            "fol": "p_1(Edward)",
            "str_fol": "stays_focused(Edward)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Edward",
            "text": "Edward works hard.",
            "fol": "p_0(Edward)",
            "str_fol": "works_hard(Edward)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Anyone who has passion or faces challenges will find motivation.",
            "fol": "\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_passion(x) \u2228 faces_challenges(x)) \u2192 finds_motivation(x))"
        },
        {
            "id": 4,
            "text": "Anyone who has passion or succeeds will inspire others.",
            "fol": "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((has_passion(x) \u2228 succeeds(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 3,
            "text": "Edward is either determined or stays focused, but not necessarily both at the same time.",
            "fol": "p_1(Edward) \u2295 p_5(Edward)",
            "str_fol": "stays_focused(Edward) \u2295 determined(Edward)"
        },
        {
            "id": 2,
            "text": "If Edward sets goals, then he will succeed.",
            "fol": "p_8(Edward) \u2192 p_9(Edward)",
            "str_fol": "sets_goals(Edward) \u2192 succeeds(Edward)"
        },
        {
            "id": 1,
            "text": "For all humans, if they set goals and work hard, then they can overcome obstacles.",
            "fol": "\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((sets_goals(x) \u2227 works_hard(x)) \u2192 overcome_obstacles(x))"
        },
        {
            "id": 0,
            "text": "If Edward is determined, then he will overcome obstacles and achieve success.",
            "fol": "p_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))",
            "str_fol": "determined(Edward) \u2192 (overcome_obstacles(Edward) \u2227 achieve_success(Edward))"
        }
    ],
    "context_fol": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))\np_1(Edward) \u2295 p_5(Edward)\np_8(Edward) \u2192 p_9(Edward)\n\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))\np_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))",
    "conclusion": {
        "id": 9,
        "subject": "Edward",
        "text": "Edward achieves success.",
        "fol": "p_7(Edward)",
        "str_fol": "achieve_success(Edward)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Edward)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Edward",
                    "text": "Edward does not face challenges.",
                    "fol": "\u00acp_3(Edward)",
                    "str_fol": "\u00acfaces_challenges(Edward)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Edward",
                    "text": "Edward does not find motivation.",
                    "fol": "\u00acp_4(Edward)",
                    "str_fol": "\u00acfinds_motivation(Edward)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who has passion or faces challenges will find motivation.",
                    "fol": "\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))",
                    "str_fol": "\u2200x ((has_passion(x) \u2228 faces_challenges(x)) \u2192 finds_motivation(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Edward",
                "text": "Edward does not have passion.",
                "fol": "\u00acp_10(Edward)",
                "str_fol": "\u00achas_passion(Edward)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Edward",
                    "text": "Edward does not have passion.",
                    "fol": "\u00acp_10(Edward)",
                    "str_fol": "\u00achas_passion(Edward)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Edward",
                    "text": "Edward does not inspire others.",
                    "fol": "\u00acp_2(Edward)",
                    "str_fol": "\u00acinspires_others(Edward)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who has passion or succeeds will inspire others.",
                    "fol": "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((has_passion(x) \u2228 succeeds(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Edward",
                "text": "Edward does not succeed.",
                "fol": "\u00acp_9(Edward)",
                "str_fol": "\u00acsucceeds(Edward)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Edward",
                    "text": "Edward stays focused.",
                    "fol": "p_1(Edward)",
                    "str_fol": "stays_focused(Edward)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Edward is either determined or stays focused, but not necessarily both at the same time.",
                    "fol": "p_1(Edward) \u2295 p_5(Edward)",
                    "str_fol": "stays_focused(Edward) \u2295 determined(Edward)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Edward",
                "text": "Edward is not determined.",
                "fol": "\u00acp_5(Edward)",
                "str_fol": "\u00acdetermined(Edward)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Edward",
                    "text": "Edward does not succeed.",
                    "fol": "\u00acp_9(Edward)",
                    "str_fol": "\u00acsucceeds(Edward)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Edward sets goals, then he will succeed.",
                    "fol": "p_8(Edward) \u2192 p_9(Edward)",
                    "str_fol": "sets_goals(Edward) \u2192 succeeds(Edward)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Edward",
                "text": "Edward does not set goals.",
                "fol": "\u00acp_8(Edward)",
                "str_fol": "\u00acsets_goals(Edward)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Edward",
                    "text": "Edward does not set goals.",
                    "fol": "\u00acp_8(Edward)",
                    "str_fol": "\u00acsets_goals(Edward)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Edward",
                    "text": "Edward works hard.",
                    "fol": "p_0(Edward)",
                    "str_fol": "works_hard(Edward)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "For all humans, if they set goals and work hard, then they can overcome obstacles.",
                    "fol": "\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((sets_goals(x) \u2227 works_hard(x)) \u2192 overcome_obstacles(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Edward",
                    "text": "Edward is not determined.",
                    "fol": "\u00acp_5(Edward)",
                    "str_fol": "\u00acdetermined(Edward)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Edward is determined, then he will overcome obstacles and achieve success.",
                    "fol": "p_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))",
                    "str_fol": "determined(Edward) \u2192 (overcome_obstacles(Edward) \u2227 achieve_success(Edward))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))\np_1(Edward) \u2295 p_5(Edward)\np_8(Edward) \u2192 p_9(Edward)\n\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))\np_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))",
            "Initial Goal": "p_7(Edward)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_3(Edward)",
                    "\u00acp_4(Edward)",
                    "\u00acp_2(Edward)",
                    "p_1(Edward)",
                    "p_0(Edward)",
                    "all x ((p_10(x) | p_3(x)) -> p_4(x))",
                    "all x ((p_10(x) | p_9(x)) -> p_2(x))",
                    "-(p_1(Edward) <-> p_5(Edward))",
                    "p_8(Edward) -> p_9(Edward)",
                    "all x ((p_8(x) & p_0(x)) -> p_6(x))",
                    "p_5(Edward) -> (p_6(Edward) & p_7(Edward))",
                    "all x ((p_1(x) & p_0(x)) -> p_7(x))"
                ],
                "formulas(goals)": [
                    "p_7(Edward)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_1(x) \u2227 p_0(x)) \u2192 p_7(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))\np_1(Edward) \u2295 p_5(Edward)\np_8(Edward) \u2192 p_9(Edward)\n\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))\np_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))\n\u00acp_7(Edward)",
            "Initial Goal": "p_7(Edward)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_3(Edward)",
                    "\u00acp_4(Edward)",
                    "\u00acp_2(Edward)",
                    "p_1(Edward)",
                    "p_0(Edward)",
                    "all x ((p_10(x) | p_3(x)) -> p_4(x))",
                    "all x ((p_10(x) | p_9(x)) -> p_2(x))",
                    "-(p_1(Edward) <-> p_5(Edward))",
                    "p_8(Edward) -> p_9(Edward)",
                    "all x ((p_8(x) & p_0(x)) -> p_6(x))",
                    "p_5(Edward) -> (p_6(Edward) & p_7(Edward))",
                    "\u00acp_7(Edward)"
                ],
                "formulas(goals)": [
                    "\u00acp_7(Edward)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Edward)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))\np_1(Edward) \u2295 p_5(Edward)\np_8(Edward) \u2192 p_9(Edward)\n\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))\np_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))\n\u00acp_7(Edward)\n\u00acp_5(Edward)\np_5(Edward) \u2192 p_6(Edward)\np_5(Edward) \u2192 p_7(Edward)\n\u2200x (p_8(x) \u2192 (p_0(x) \u2192 p_6(x)))",
            "Initial Goal": "p_7(Edward)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Edward).",
                    "-p_4(Edward).",
                    "-p_2(Edward).",
                    "p_1(Edward).",
                    "p_0(Edward).",
                    "all x ((p_10(x) | p_3(x)) -> p_4(x)).",
                    "all x ((p_10(x) | p_9(x)) -> p_2(x)).",
                    "-(p_1(Edward) <-> p_5(Edward)).",
                    "p_8(Edward) -> p_9(Edward).",
                    "all x ((p_8(x) & p_0(x)) -> p_6(x)).",
                    "p_5(Edward) -> (p_6(Edward) & p_7(Edward)).",
                    "-p_7(Edward).",
                    "-p_5(Edward).",
                    "p_5(Edward) -> p_6(Edward).",
                    "p_5(Edward) -> p_7(Edward).",
                    "all x (p_8(x) -> (p_0(x) -> p_6(x)))."
                ],
                "formulas(goals)": [
                    "-p_7(Edward)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_5(Edward)"
                ],
                "added_rules": [
                    "p_5(Edward) \u2192 p_6(Edward)",
                    "p_5(Edward) \u2192 p_7(Edward)",
                    "\u2200x (p_8(x) \u2192 (p_0(x) \u2192 p_6(x)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))\np_1(Edward) \u2295 p_5(Edward)\np_8(Edward) \u2192 p_9(Edward)\n\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))\np_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))\n\u00acp_7(Edward)\n\u00acp_5(Edward)\np_5(Edward) \u2192 p_6(Edward)\np_5(Edward) \u2192 p_7(Edward)\n\u2200x (p_8(x) \u2192 (p_0(x) \u2192 p_6(x)))\np_1(Edward) \u2228 p_5(Edward)\n\u00acp_1(Edward) \u2228 \u00acp_5(Edward)\n\u00acp_10(Edward)\n\u00acp_9(Edward)",
            "Initial Goal": "p_7(Edward)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(edward)",
                    "-p_4(edward)",
                    "-p_2(edward)",
                    "p_1(edward)",
                    "p_0(edward)",
                    "all x ((p_10(x) | p_3(x)) -> p_4(x))",
                    "all x ((p_10(x) | p_9(x)) -> p_2(x))",
                    "-(p_1(edward) <-> p_5(edward))",
                    "p_8(edward) -> p_9(edward)",
                    "all x ((p_8(x) & p_0(x)) -> p_6(x))",
                    "p_5(edward) -> (p_6(edward) & p_7(edward))",
                    "-p_7(edward)",
                    "-p_5(edward)",
                    "p_5(edward) -> p_6(edward)",
                    "p_5(edward) -> p_7(edward)",
                    "all x (p_8(x) -> (p_0(x) -> p_6(x)))",
                    "p_1(edward) | p_5(edward)",
                    "-p_1(edward) | -p_5(edward)",
                    "-p_10(edward)",
                    "-p_9(edward)"
                ],
                "formulas(goals)": [
                    "-p_7(edward)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Edward)",
                    "\u00acp_9(Edward)"
                ],
                "added_rules": [
                    "p_1(Edward) \u2228 p_5(Edward)",
                    "\u00acp_1(Edward) \u2228 \u00acp_5(Edward)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((p_10(x) \u2228 p_3(x)) \u2192 p_4(x))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_2(x))\n(p_1(Edward) \u2295 p_5(Edward))\np_8(Edward) \u2192 p_9(Edward)\n\u2200x ((p_8(x) \u2227 p_0(x)) \u2192 p_6(x))\np_5(Edward) \u2192 (p_6(Edward) \u2227 p_7(Edward))\n\u00acp_5(Edward)\np_5(Edward) \u2192 p_6(Edward)\np_5(Edward) \u2192 p_7(Edward)\n\u2200x (p_8(x) \u2192 (p_0(x) \u2192 p_6(x)))\np_1(Edward) \u2228 p_5(Edward)\n\u00acp_1(Edward) \u2228 \u00acp_5(Edward)\n\u00acp_10(Edward)\n\u00acp_9(Edward)\n(\u00acp_3(Edward) \u2192 p_7(Edward))",
            "Initial Goal": "p_7(Edward)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Edward)",
                    "-p_4(Edward)",
                    "-p_2(Edward)",
                    "p_1(Edward)",
                    "p_0(Edward)",
                    "all x ((p_10(x) | p_3(x)) -> p_4(x))",
                    "all x ((p_10(x) | p_9(x)) -> p_2(x))",
                    "-(p_1(Edward) <-> p_5(Edward))",
                    "p_8(Edward) -> p_9(Edward)",
                    "all x ((p_8(x) & p_0(x)) -> p_6(x))",
                    "p_5(Edward) -> (p_6(Edward) & p_7(Edward))",
                    "-p_5(Edward)",
                    "p_5(Edward) -> p_6(Edward)",
                    "p_5(Edward) -> p_7(Edward)",
                    "all x (p_8(x) -> (p_0(x) -> p_6(x)))",
                    "p_1(Edward) | p_5(Edward)",
                    "-p_1(Edward) | -p_5(Edward)",
                    "-p_10(Edward)",
                    "-p_9(Edward)",
                    "(-p_3(Edward)) -> p_7(Edward)"
                ],
                "formulas(goals)": [
                    "p_7(Edward)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Edward)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_3(Edward) \u2192 p_7(Edward)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x ((\u00ac(p_10(x) \u2228 p_3(x))) \u2228 p_4(x))\n\u2200x ((\u00ac(p_10(x) \u2228 p_9(x))) \u2228 p_2(x))\n(p_1(Edward) \u2295 p_5(Edward))\n(\u00acp_8(Edward)) \u2228 p_9(Edward)\n\u2200x (\u00ac(p_8(x) \u2227 p_0(x)) \u2228 p_6(x))\n(\u00acp_5(Edward)) \u2228 (p_6(Edward) \u2227 p_7(Edward))\n\u00acp_5(Edward)\n(\u00acp_5(Edward)) \u2228 p_6(Edward)\n(\u00acp_5(Edward)) \u2228 p_7(Edward)\n\u2200x (\u00acp_8(x) \u2228 (\u00acp_0(x) \u2228 p_6(x)))\np_1(Edward) \u2228 p_5(Edward)\n\u00acp_1(Edward) \u2228 \u00acp_5(Edward)\n\u00acp_10(Edward)\n\u00acp_9(Edward)\n(\u00ac(\u00acp_3(Edward))) \u2228 p_7(Edward)\np_7(Edward)\np_3(Edward) \u2228 p_7(Edward)\n\u2200x ((\u00ac(p_10(x) \u2228 p_3(x))) \u2228 p_4(x))\n\u2200x ((\u00ac(p_10(x) \u2228 p_9(x))) \u2228 p_2(x))\n(\u00acp_8(Edward)) \u2228 p_9(Edward)\n\u2200x (\u00acp_8(x) \u2228 \u00acp_0(x) \u2228 p_6(x))\n(p_6(Edward) \u2227 p_7(Edward)) \u2228 \u00acp_5(Edward)\n\u2200x (\u00acp_0(x) \u2228 \u00acp_8(x) \u2228 p_6(x))",
            "Initial Goal": "p_7(Edward)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Edward)",
                    "-p_4(Edward)",
                    "-p_2(Edward)",
                    "p_1(Edward)",
                    "p_0(Edward)",
                    "all x ((-(p_10(x) | p_3(x))) | p_4(x))",
                    "all x ((-(p_10(x) | p_9(x))) | p_2(x))",
                    "-((p_1(Edward) <-> p_5(Edward)))",
                    "(-p_8(Edward)) | p_9(Edward)",
                    "all x ((-(p_8(x) & p_0(x))) | p_6(x))",
                    "(-p_5(Edward)) | (p_6(Edward) & p_7(Edward))",
                    "-p_5(Edward)",
                    "(-p_5(Edward)) | p_6(Edward)",
                    "(-p_5(Edward)) | p_7(Edward)",
                    "all x ((-p_8(x)) | ((-p_0(x)) | p_6(x)))",
                    "p_1(Edward) | p_5(Edward)",
                    "(-p_1(Edward)) | (-p_5(Edward))",
                    "-p_10(Edward)",
                    "-p_9(Edward)",
                    "(-(-p_3(Edward))) | p_7(Edward)",
                    "p_7(Edward)",
                    "p_3(Edward) | p_7(Edward)",
                    "all x ((-(p_10(x) | p_3(x))) | p_4(x))",
                    "all x ((-(p_10(x) | p_9(x))) | p_2(x))",
                    "(-p_8(Edward)) | p_9(Edward)",
                    "all x ((-p_8(x)) | (-p_0(x)) | p_6(x))",
                    "(p_6(Edward) & p_7(Edward)) | (-p_5(Edward))",
                    "all x ((-p_0(x)) | (-p_8(x)) | p_6(x))"
                ],
                "formulas(goals)": [
                    "p_7(Edward)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Edward)",
                    "p_3(Edward) \u2228 p_7(Edward)"
                ],
                "added_rules": [
                    "\u2200x ((\u00ac(p_10(x) \u2228 p_3(x))) \u2228 p_4(x))",
                    "\u2200x ((\u00ac(p_10(x) \u2228 p_9(x))) \u2228 p_2(x))",
                    "(\u00acp_8(Edward)) \u2228 p_9(Edward)",
                    "\u2200x (\u00acp_8(x) \u2228 \u00acp_0(x) \u2228 p_6(x))",
                    "(p_6(Edward) \u2227 p_7(Edward)) \u2228 \u00acp_5(Edward)",
                    "\u2200x (\u00acp_0(x) \u2228 \u00acp_8(x) \u2228 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Edward)\n\u00acp_4(Edward)\n\u00acp_2(Edward)\np_1(Edward)\np_0(Edward)\n\u2200x (\u00ac(p_10(x) \u2228 p_3(x)) \u2228 p_4(x))\n\u2200x (\u00ac(p_10(x) \u2228 p_9(x)) \u2228 p_2(x))\n\u00ac(p_1(Edward) \u2194 p_5(Edward))\n\u00acp_8(Edward) \u2228 p_9(Edward)\n\u2200x (\u00ac(p_8(x) \u2227 p_0(x)) \u2228 p_6(x))\n\u00acp_5(Edward)\n\u00acp_5(Edward) \u2228 p_6(Edward)\n\u00acp_5(Edward) \u2228 p_7(Edward)\n\u2200x (\u00acp_8(x) \u2228 \u00acp_0(x) \u2228 p_6(x))\np_1(Edward) \u2228 p_5(Edward)\n\u00acp_1(Edward) \u2228 \u00acp_5(Edward)\n\u00acp_10(Edward)\n\u00acp_9(Edward)\np_7(Edward)\np_3(Edward) \u2228 p_7(Edward)\n(p_6(Edward) \u2227 p_7(Edward)) \u2228 \u00acp_5(Edward)\np_7(Edward) \u2228 p_1(Edward)\n\u00acp_3(Edward) \u2228 p_4(Edward)",
            "Initial Goal": "p_7(Edward)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Edward)",
                    "-p_4(Edward)",
                    "-p_2(Edward)",
                    "p_1(Edward)",
                    "p_0(Edward)",
                    "all x (-(p_10(x) | p_3(x)) | p_4(x))",
                    "all x (-(p_10(x) | p_9(x)) | p_2(x))",
                    "-(p_1(Edward) <-> p_5(Edward))",
                    "-p_8(Edward) | p_9(Edward)",
                    "all x (-(p_8(x) & p_0(x)) | p_6(x))",
                    "-p_5(Edward)",
                    "-p_5(Edward) | p_6(Edward)",
                    "-p_5(Edward) | p_7(Edward)",
                    "all x (-p_8(x) | -p_0(x) | p_6(x))",
                    "p_1(Edward) | p_5(Edward)",
                    "-p_1(Edward) | -p_5(Edward)",
                    "-p_10(Edward)",
                    "-p_9(Edward)",
                    "p_7(Edward)",
                    "p_3(Edward) | p_7(Edward)",
                    "(p_6(Edward) & p_7(Edward)) | -p_5(Edward)",
                    "p_7(Edward) | p_1(Edward)",
                    "-p_3(Edward) | p_4(Edward)"
                ],
                "formulas(goals)": [
                    "p_7(Edward)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "(\u00ac(\u00acp_3(Edward))) \u2228 p_7(Edward)"
                ],
                "removed_rules": [
                    "(\u00acp_5(Edward)) \u2228 (p_6(Edward) \u2227 p_7(Edward))",
                    "\u2200x ((\u00ac(p_10(x) \u2228 p_3(x))) \u2228 p_4(x))",
                    "\u2200x ((\u00ac(p_10(x) \u2228 p_9(x))) \u2228 p_2(x))",
                    "\u2200x (\u00acp_0(x) \u2228 \u00acp_8(x) \u2228 p_6(x))"
                ],
                "added_facts": [
                    "p_7(Edward) \u2228 p_1(Edward)",
                    "\u00acp_3(Edward) \u2228 p_4(Edward)"
                ],
                "added_rules": [
                    "\u00ac(p_1(Edward) \u2194 p_5(Edward))",
                    "(p_6(Edward) \u2227 p_7(Edward)) \u2228 \u00acp_5(Edward)"
                ]
            }
        }
    ]
}