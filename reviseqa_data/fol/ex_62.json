{
    "background_story": "Lian was a free-spirited artist known for living life on his own terms. He threw extravagant parties that lasted till dawn, filled with music, dance, and unbridled creativity. His art studio was a haven for like-minded individuals who sought to express themselves without boundaries. Lian's own art was a reflection of his licentious nature - bold, provocative, and unapologetic. He believed in pushing the limits of societal norms and expectations, often incorporating elements of shock and awe into his work. Despite the controversy that sometimes surrounded him, Lian remained unapologetic and true to his vision, inspiring a loyal following of fans who admired his fearless approach to life and art.",
    "predicates": [
        {
            "id": 0,
            "name": "is_innovator"
        },
        {
            "id": 1,
            "name": "is_artistic"
        },
        {
            "id": 2,
            "name": "is_pioneer"
        },
        {
            "id": 3,
            "name": "expresses_freely"
        },
        {
            "id": 4,
            "name": "breaks_rules"
        },
        {
            "id": 5,
            "name": "leads_others"
        },
        {
            "id": 6,
            "name": "seeks_order"
        },
        {
            "id": 7,
            "name": "speaks_passion"
        },
        {
            "id": 8,
            "name": "gains_followers"
        },
        {
            "id": 9,
            "name": "inspirational"
        },
        {
            "id": 10,
            "name": "charismatic"
        },
        {
            "id": 11,
            "name": "visionary"
        },
        {
            "id": 12,
            "name": "thinks_outside"
        },
        {
            "id": 13,
            "name": "creative"
        },
        {
            "id": 14,
            "name": "takes_risks"
        },
        {
            "id": 15,
            "name": "fearless"
        },
        {
            "id": 16,
            "name": "lives_authentically"
        },
        {
            "id": 17,
            "name": "embraces_individuality"
        },
        {
            "id": 18,
            "name": "sees_beyond"
        },
        {
            "id": 19,
            "name": "makes_statement"
        },
        {
            "id": 20,
            "name": "thinks_deeply"
        },
        {
            "id": 21,
            "name": "imagines_widely"
        },
        {
            "id": 22,
            "name": "open_minded"
        },
        {
            "id": 23,
            "name": "lives_freely"
        },
        {
            "id": 24,
            "name": "speaks_honestly"
        },
        {
            "id": 25,
            "name": "has_passion"
        },
        {
            "id": 26,
            "name": "seeks_challenge"
        },
        {
            "id": 27,
            "name": "lives_passion"
        },
        {
            "id": 28,
            "name": "values_honesty"
        }
    ],
    "subject_name": "Lian",
    "subject_category": "human",
    "keyword": "licentiously",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lian",
            "text": "Lian is an innovator.",
            "fol": "p_0(Lian)",
            "str_fol": "is_innovator(Lian)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lian",
            "text": "Lian is not artistic.",
            "fol": "\u00acp_1(Lian)",
            "str_fol": "\u00acis_artistic(Lian)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Lian",
            "text": "Lian is a pioneer.",
            "fol": "p_2(Lian)",
            "str_fol": "is_pioneer(Lian)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lian",
            "text": "Lian does not express himself freely.",
            "fol": "\u00acp_3(Lian)",
            "str_fol": "\u00acexpresses_freely(Lian)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lian",
            "text": "Lian does not break rules.",
            "fol": "\u00acp_4(Lian)",
            "str_fol": "\u00acbreaks_rules(Lian)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lian",
            "text": "Lian leads others.",
            "fol": "p_5(Lian)",
            "str_fol": "leads_others(Lian)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lian",
            "text": "Lian seeks order.",
            "fol": "p_6(Lian)",
            "str_fol": "seeks_order(Lian)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lian",
            "text": "Lian speaks with passion.",
            "fol": "p_7(Lian)",
            "str_fol": "speaks_passion(Lian)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lian",
            "text": "Lian does not gain followers.",
            "fol": "\u00acp_8(Lian)",
            "str_fol": "\u00acgains_followers(Lian)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Lian",
            "text": "Lian is not charismatic.",
            "fol": "\u00acp_10(Lian)",
            "str_fol": "\u00accharismatic(Lian)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Lian",
            "text": "Lian does not take risks.",
            "fol": "\u00acp_14(Lian)",
            "str_fol": "\u00actakes_risks(Lian)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Lian",
            "text": "Lian does not think outside the box.",
            "fol": "\u00acp_12(Lian)",
            "str_fol": "\u00acthinks_outside(Lian)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Lian",
            "text": "Lian is not visionary.",
            "fol": "\u00acp_11(Lian)",
            "str_fol": "\u00acvisionary(Lian)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Lian",
            "text": "Lian is not inspirational.",
            "fol": "\u00acp_9(Lian)",
            "str_fol": "\u00acinspirational(Lian)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Lian",
            "text": "Lian speaks with passion.",
            "fol": "p_7(Lian)",
            "str_fol": "speaks_passion(Lian)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lian",
            "text": "Lian does not gain followers.",
            "fol": "\u00acp_8(Lian)",
            "str_fol": "\u00acgains_followers(Lian)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lian",
            "text": "Lian seeks order.",
            "fol": "p_6(Lian)",
            "str_fol": "seeks_order(Lian)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lian",
            "text": "Lian does not break rules.",
            "fol": "\u00acp_4(Lian)",
            "str_fol": "\u00acbreaks_rules(Lian)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lian",
            "text": "Lian leads others.",
            "fol": "p_5(Lian)",
            "str_fol": "leads_others(Lian)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lian",
            "text": "Lian is not artistic.",
            "fol": "\u00acp_1(Lian)",
            "str_fol": "\u00acis_artistic(Lian)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lian",
            "text": "Lian does not express himself freely.",
            "fol": "\u00acp_3(Lian)",
            "str_fol": "\u00acexpresses_freely(Lian)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lian",
            "text": "Lian is an innovator.",
            "fol": "p_0(Lian)",
            "str_fol": "is_innovator(Lian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lian",
            "text": "Lian is a pioneer.",
            "fol": "p_2(Lian)",
            "str_fol": "is_pioneer(Lian)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If someone is charismatic and speaks with passion, then they gain followers.",
            "fol": "\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((charismatic(x) \u2227 speaks_passion(x)) \u2192 gains_followers(x))"
        },
        {
            "id": 5,
            "text": "Lian either seeks order or takes risks, but given his nature, it is unlikely he seeks order.",
            "fol": "p_6(Lian) \u2295 p_14(Lian)",
            "str_fol": "seeks_order(Lian) \u2295 takes_risks(Lian)"
        },
        {
            "id": 4,
            "text": "If Lian is either fearless or breaks rules (but not both), then he leads others.",
            "fol": "(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)",
            "str_fol": "(fearless(Lian) \u2295 breaks_rules(Lian)) \u2192 leads_others(Lian)"
        },
        {
            "id": 3,
            "text": "If Lian thinks outside the box or takes risks, then he is artistic.",
            "fol": "(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)",
            "str_fol": "(thinks_outside(Lian) \u2228 takes_risks(Lian)) \u2192 is_artistic(Lian)"
        },
        {
            "id": 2,
            "text": "Anyone who thinks outside the box or expresses themselves freely is creative.",
            "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((thinks_outside(x) \u2228 expresses_freely(x)) \u2192 creative(x))"
        },
        {
            "id": 1,
            "text": "If Lian is an innovator, then he is either visionary or a pioneer, but not both.",
            "fol": "p_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))",
            "str_fol": "is_innovator(Lian) \u2192 (visionary(Lian) \u2295 is_pioneer(Lian))"
        },
        {
            "id": 0,
            "text": "If Lian is either inspirational or charismatic (but not both), then he is visionary.",
            "fol": "(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)",
            "str_fol": "(inspirational(Lian) \u2295 charismatic(Lian)) \u2192 visionary(Lian)"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Lian",
            "text": "Lian speaks with passion.",
            "fol": "p_7(Lian)",
            "str_fol": "speaks_passion(Lian)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lian",
            "text": "Lian does not gain followers.",
            "fol": "\u00acp_8(Lian)",
            "str_fol": "\u00acgains_followers(Lian)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lian",
            "text": "Lian seeks order.",
            "fol": "p_6(Lian)",
            "str_fol": "seeks_order(Lian)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lian",
            "text": "Lian does not break rules.",
            "fol": "\u00acp_4(Lian)",
            "str_fol": "\u00acbreaks_rules(Lian)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lian",
            "text": "Lian leads others.",
            "fol": "p_5(Lian)",
            "str_fol": "leads_others(Lian)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lian",
            "text": "Lian is not artistic.",
            "fol": "\u00acp_1(Lian)",
            "str_fol": "\u00acis_artistic(Lian)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lian",
            "text": "Lian does not express himself freely.",
            "fol": "\u00acp_3(Lian)",
            "str_fol": "\u00acexpresses_freely(Lian)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lian",
            "text": "Lian is an innovator.",
            "fol": "p_0(Lian)",
            "str_fol": "is_innovator(Lian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lian",
            "text": "Lian is a pioneer.",
            "fol": "p_2(Lian)",
            "str_fol": "is_pioneer(Lian)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If someone is charismatic and speaks with passion, then they gain followers.",
            "fol": "\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((charismatic(x) \u2227 speaks_passion(x)) \u2192 gains_followers(x))"
        },
        {
            "id": 5,
            "text": "Lian either seeks order or takes risks, but given his nature, it is unlikely he seeks order.",
            "fol": "p_6(Lian) \u2295 p_14(Lian)",
            "str_fol": "seeks_order(Lian) \u2295 takes_risks(Lian)"
        },
        {
            "id": 4,
            "text": "If Lian is either fearless or breaks rules (but not both), then he leads others.",
            "fol": "(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)",
            "str_fol": "(fearless(Lian) \u2295 breaks_rules(Lian)) \u2192 leads_others(Lian)"
        },
        {
            "id": 3,
            "text": "If Lian thinks outside the box or takes risks, then he is artistic.",
            "fol": "(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)",
            "str_fol": "(thinks_outside(Lian) \u2228 takes_risks(Lian)) \u2192 is_artistic(Lian)"
        },
        {
            "id": 2,
            "text": "Anyone who thinks outside the box or expresses themselves freely is creative.",
            "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((thinks_outside(x) \u2228 expresses_freely(x)) \u2192 creative(x))"
        },
        {
            "id": 1,
            "text": "If Lian is an innovator, then he is either visionary or a pioneer, but not both.",
            "fol": "p_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))",
            "str_fol": "is_innovator(Lian) \u2192 (visionary(Lian) \u2295 is_pioneer(Lian))"
        },
        {
            "id": 0,
            "text": "If Lian is either inspirational or charismatic (but not both), then he is visionary.",
            "fol": "(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)",
            "str_fol": "(inspirational(Lian) \u2295 charismatic(Lian)) \u2192 visionary(Lian)"
        }
    ],
    "context_fol": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\n\u00acp_3(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)",
    "conclusion": {
        "id": 14,
        "text": "If Lian is fearless or creative, then he is inspirational.",
        "fol": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
        "str_fol": "(fearless(Lian) \u2228 creative(Lian)) \u2192 inspirational(Lian)"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Lian",
                    "text": "Lian speaks with passion.",
                    "fol": "p_7(Lian)",
                    "str_fol": "speaks_passion(Lian)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Lian",
                    "text": "Lian does not gain followers.",
                    "fol": "\u00acp_8(Lian)",
                    "str_fol": "\u00acgains_followers(Lian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone is charismatic and speaks with passion, then they gain followers.",
                    "fol": "\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((charismatic(x) \u2227 speaks_passion(x)) \u2192 gains_followers(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lian",
                "text": "Lian is not charismatic.",
                "fol": "\u00acp_10(Lian)",
                "str_fol": "\u00accharismatic(Lian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lian",
                    "text": "Lian seeks order.",
                    "fol": "p_6(Lian)",
                    "str_fol": "seeks_order(Lian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Lian either seeks order or takes risks, but given his nature, it is unlikely he seeks order.",
                    "fol": "p_6(Lian) \u2295 p_14(Lian)",
                    "str_fol": "seeks_order(Lian) \u2295 takes_risks(Lian)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lian",
                "text": "Lian does not take risks.",
                "fol": "\u00acp_14(Lian)",
                "str_fol": "\u00actakes_risks(Lian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Lian",
                    "text": "Lian does not break rules.",
                    "fol": "\u00acp_4(Lian)",
                    "str_fol": "\u00acbreaks_rules(Lian)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Lian",
                    "text": "Lian leads others.",
                    "fol": "p_5(Lian)",
                    "str_fol": "leads_others(Lian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Lian is either fearless or breaks rules (but not both), then he leads others.",
                    "fol": "(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)",
                    "str_fol": "(fearless(Lian) \u2295 breaks_rules(Lian)) \u2192 leads_others(Lian)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Lian",
                    "text": "Lian does not take risks.",
                    "fol": "\u00acp_14(Lian)",
                    "str_fol": "\u00actakes_risks(Lian)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Lian",
                    "text": "Lian is not artistic.",
                    "fol": "\u00acp_1(Lian)",
                    "str_fol": "\u00acis_artistic(Lian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Lian thinks outside the box or takes risks, then he is artistic.",
                    "fol": "(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)",
                    "str_fol": "(thinks_outside(Lian) \u2228 takes_risks(Lian)) \u2192 is_artistic(Lian)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lian",
                "text": "Lian does not think outside the box.",
                "fol": "\u00acp_12(Lian)",
                "str_fol": "\u00acthinks_outside(Lian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Lian",
                    "text": "Lian does not think outside the box.",
                    "fol": "\u00acp_12(Lian)",
                    "str_fol": "\u00acthinks_outside(Lian)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Lian",
                    "text": "Lian does not express himself freely.",
                    "fol": "\u00acp_3(Lian)",
                    "str_fol": "\u00acexpresses_freely(Lian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who thinks outside the box or expresses themselves freely is creative.",
                    "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((thinks_outside(x) \u2228 expresses_freely(x)) \u2192 creative(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Lian",
                    "text": "Lian is an innovator.",
                    "fol": "p_0(Lian)",
                    "str_fol": "is_innovator(Lian)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Lian",
                    "text": "Lian is a pioneer.",
                    "fol": "p_2(Lian)",
                    "str_fol": "is_pioneer(Lian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Lian is an innovator, then he is either visionary or a pioneer, but not both.",
                    "fol": "p_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))",
                    "str_fol": "is_innovator(Lian) \u2192 (visionary(Lian) \u2295 is_pioneer(Lian))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Lian",
                "text": "Lian is not visionary.",
                "fol": "\u00acp_11(Lian)",
                "str_fol": "\u00acvisionary(Lian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Lian",
                    "text": "Lian is not charismatic.",
                    "fol": "\u00acp_10(Lian)",
                    "str_fol": "\u00accharismatic(Lian)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Lian",
                    "text": "Lian is not visionary.",
                    "fol": "\u00acp_11(Lian)",
                    "str_fol": "\u00acvisionary(Lian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Lian is either inspirational or charismatic (but not both), then he is visionary.",
                    "fol": "(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)",
                    "str_fol": "(inspirational(Lian) \u2295 charismatic(Lian)) \u2192 visionary(Lian)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Lian",
                "text": "Lian is not inspirational.",
                "fol": "\u00acp_9(Lian)",
                "str_fol": "\u00acinspirational(Lian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Lian",
                    "text": "Lian is not inspirational.",
                    "fol": "\u00acp_9(Lian)",
                    "str_fol": "\u00acinspirational(Lian)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\n\u00acp_3(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian).",
                    "-p_8(Lian).",
                    "p_6(Lian).",
                    "-p_4(Lian).",
                    "p_5(Lian).",
                    "-p_1(Lian).",
                    "-p_3(Lian).",
                    "p_0(Lian).",
                    "p_2(Lian).",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x)).",
                    "-(p_6(Lian) <-> p_14(Lian)).",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian).",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian).",
                    "all x ((p_12(x) | p_3(x)) -> p_13(x)).",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian))).",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian).",
                    "p_15(Lian) -> p_8(Lian).",
                    "p_13(Lian) -> p_8(Lian)."
                ],
                "formulas(goals)": [
                    "(p_15(Lian) | p_13(Lian)) -> p_9(Lian)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_15(Lian) \u2192 p_8(Lian)",
                    "p_13(Lian) \u2192 p_8(Lian)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\n\u00acp_3(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)\n\u00acp_15(Lian)\n\u00acp_13(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian)",
                    "-p_8(Lian)",
                    "p_6(Lian)",
                    "-p_4(Lian)",
                    "p_5(Lian)",
                    "-p_1(Lian)",
                    "-p_3(Lian)",
                    "p_0(Lian)",
                    "p_2(Lian)",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Lian) <-> p_14(Lian))",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian)",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian)",
                    "all x ((p_12(x) | p_3(x)) -> p_13(x))",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian)))",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian)",
                    "-p_15(Lian)",
                    "-p_13(Lian)"
                ],
                "formulas(goals)": [
                    "(p_15(Lian) | p_13(Lian)) -> p_9(Lian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_15(Lian)",
                    "\u00acp_13(Lian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)\n\u00acp_15(Lian)\np_3(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian).",
                    "-p_8(Lian).",
                    "p_6(Lian).",
                    "-p_4(Lian).",
                    "p_5(Lian).",
                    "-p_1(Lian).",
                    "p_0(Lian).",
                    "p_2(Lian).",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x)).",
                    "-(p_6(Lian) <-> p_14(Lian)).",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian).",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian).",
                    "all x ((p_12(x) | p_3(x)) -> p_13(x)).",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian))).",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian).",
                    "-p_15(Lian).",
                    "p_3(Lian)."
                ],
                "formulas(goals)": [
                    "(p_15(Lian) | p_13(Lian)) & -p_9(Lian)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Lian)",
                    "\u00acp_13(Lian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_3(Lian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)\n\u00acp_15(Lian)\np_13(Lian) \u2192 p_9(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian)",
                    "-p_8(Lian)",
                    "p_6(Lian)",
                    "-p_4(Lian)",
                    "p_5(Lian)",
                    "-p_1(Lian)",
                    "p_0(Lian)",
                    "p_2(Lian)",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Lian) <-> p_14(Lian))",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian)",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian)",
                    "all x ((p_12(x) | p_3(x)) -> p_13(x))",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian)))",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian)",
                    "-p_15(Lian)",
                    "p_13(Lian) -> p_9(Lian)"
                ],
                "formulas(goals)": [
                    "(p_15(Lian) | p_13(Lian)) -> p_9(Lian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_3(Lian)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_13(Lian) \u2192 p_9(Lian)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x (p_12(x) \u2192 p_13(x))\n\u2200x (p_3(x) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)\n\u00acp_15(Lian)\np_13(Lian) \u2192 p_9(Lian)\n\u00acp_14(Lian)\n\u00acp_12(Lian)\n\u00acp_11(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian)",
                    "-p_8(Lian)",
                    "p_6(Lian)",
                    "-p_4(Lian)",
                    "p_5(Lian)",
                    "-p_1(Lian)",
                    "p_0(Lian)",
                    "p_2(Lian)",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Lian) <-> p_14(Lian))",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian)",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian)",
                    "all x (p_12(x) -> p_13(x))",
                    "all x (p_3(x) -> p_13(x))",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian)))",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian)",
                    "-p_15(Lian)",
                    "p_13(Lian) -> p_9(Lian)",
                    "-p_14(Lian)",
                    "-p_12(Lian)",
                    "-p_11(Lian)"
                ],
                "formulas(goals)": [
                    "(p_15(Lian) | p_13(Lian)) -> p_9(Lian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_13(x))"
                ],
                "added_facts": [
                    "\u00acp_14(Lian)",
                    "\u00acp_12(Lian)",
                    "\u00acp_11(Lian)"
                ],
                "added_rules": [
                    "\u2200x (p_12(x) \u2192 p_13(x))",
                    "\u2200x (p_3(x) \u2192 p_13(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x (p_12(x) \u2192 p_13(x))\n\u2200x (p_3(x) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)\n\u00acp_15(Lian)\n\u00acp_14(Lian)\n\u00acp_12(Lian)\n\u00acp_11(Lian)\np_13(Lian)\n\u00acp_9(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian)",
                    "-p_8(Lian)",
                    "p_6(Lian)",
                    "-p_4(Lian)",
                    "p_5(Lian)",
                    "-p_1(Lian)",
                    "p_0(Lian)",
                    "p_2(Lian)",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Lian) <-> p_14(Lian))",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian)",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian)",
                    "all x (p_12(x) -> p_13(x))",
                    "all x (p_3(x) -> p_13(x))",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian)))",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian)",
                    "-p_15(Lian)",
                    "-p_14(Lian)",
                    "-p_12(Lian)",
                    "-p_11(Lian)",
                    "p_13(Lian)",
                    "-p_9(Lian)"
                ],
                "formulas(goals)": [
                    "-((p_15(Lian) | p_13(Lian)) -> p_9(Lian))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_13(Lian) \u2192 p_9(Lian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Lian)",
                    "\u00acp_9(Lian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Lian)\n\u00acp_8(Lian)\np_6(Lian)\n\u00acp_4(Lian)\np_5(Lian)\n\u00acp_1(Lian)\np_0(Lian)\np_2(Lian)\n\u2200x ((p_10(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Lian) \u2295 p_14(Lian)\n(p_15(Lian) \u2295 p_4(Lian)) \u2192 p_5(Lian)\n(p_12(Lian) \u2228 p_14(Lian)) \u2192 p_1(Lian)\n\u2200x (p_12(x) \u2192 p_13(x))\n\u2200x (p_3(x) \u2192 p_13(x))\np_0(Lian) \u2192 (p_11(Lian) \u2295 p_2(Lian))\n(p_9(Lian) \u2295 p_10(Lian)) \u2192 p_11(Lian)\n\u00acp_15(Lian)\n\u00acp_14(Lian)\n\u00acp_12(Lian)\n\u00acp_11(Lian)\np_13(Lian)\n\u00acp_9(Lian)\n\u00ac(p_6(Lian) \u2227 p_14(Lian))\n\u00ac(p_15(Lian) \u2227 p_4(Lian))\np_12(Lian) \u2192 p_1(Lian)\np_14(Lian) \u2192 p_1(Lian)\n\u00ac(p_11(Lian) \u2227 p_2(Lian))\n\u00ac(p_9(Lian) \u2227 p_10(Lian))\n(p_10(Lian) \u2227 p_7(Lian)) \u2192 p_8(Lian)\np_3(Lian) \u2192 p_13(Lian)",
            "Initial Goal": "(p_15(Lian) \u2228 p_13(Lian)) \u2192 p_9(Lian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Lian)",
                    "-p_8(Lian)",
                    "p_6(Lian)",
                    "-p_4(Lian)",
                    "p_5(Lian)",
                    "-p_1(Lian)",
                    "p_0(Lian)",
                    "p_2(Lian)",
                    "all x ((p_10(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Lian) <-> p_14(Lian))",
                    "(-(p_15(Lian) <-> p_4(Lian))) -> p_5(Lian)",
                    "(p_12(Lian) | p_14(Lian)) -> p_1(Lian)",
                    "all x (p_12(x) -> p_13(x))",
                    "all x (p_3(x) -> p_13(x))",
                    "p_0(Lian) -> (-(p_11(Lian) <-> p_2(Lian)))",
                    "(-(p_9(Lian) <-> p_10(Lian))) -> p_11(Lian)",
                    "-p_15(Lian)",
                    "-p_14(Lian)",
                    "-p_12(Lian)",
                    "-p_11(Lian)",
                    "p_13(Lian)",
                    "-p_9(Lian)",
                    "-(p_6(Lian) & p_14(Lian))",
                    "-(p_15(Lian) & p_4(Lian))",
                    "p_12(Lian) -> p_1(Lian)",
                    "p_14(Lian) -> p_1(Lian)",
                    "-(p_11(Lian) & p_2(Lian))",
                    "-(p_9(Lian) & p_10(Lian))",
                    "(p_10(Lian) & p_7(Lian)) -> p_8(Lian)",
                    "p_3(Lian) -> p_13(Lian)"
                ],
                "formulas(goals)": [
                    "-((p_15(Lian) | p_13(Lian)) -> p_9(Lian))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_6(Lian) \u2227 p_14(Lian))",
                    "\u00ac(p_15(Lian) \u2227 p_4(Lian))",
                    "\u00ac(p_11(Lian) \u2227 p_2(Lian))",
                    "\u00ac(p_9(Lian) \u2227 p_10(Lian))"
                ],
                "added_rules": [
                    "p_12(Lian) \u2192 p_1(Lian)",
                    "p_14(Lian) \u2192 p_1(Lian)",
                    "(p_10(Lian) \u2227 p_7(Lian)) \u2192 p_8(Lian)",
                    "p_3(Lian) \u2192 p_13(Lian)"
                ]
            }
        }
    ]
}