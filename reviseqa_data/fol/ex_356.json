{
    "background_story": "Jairo was a charming and eccentric gentleman from a small village in Spain. He was known throughout the town for his impeccably waxed and curled mustachio, which he spent hours each morning perfecting. Jairo's mustachio had become an integral part of his identity, and he often joked that it had a life of its own. As the owner of the local caf\u00e9, Jairo would greet customers with a flourish of his mustachio, making them feel like royalty. His caf\u00e9 became famous for its exquisite coffee and Jairo's charismatic hospitality, with his mustachio being the crowning glory. People would come from miles around just to see Jairo's magnificent mustachio and bask in the warm, welcoming atmosphere he created.",
    "predicates": [
        {
            "id": 0,
            "name": "is_elegant"
        },
        {
            "id": 1,
            "name": "makes_exquisite_coffee"
        },
        {
            "id": 2,
            "name": "is_gregarious"
        },
        {
            "id": 3,
            "name": "enjoys_life"
        },
        {
            "id": 4,
            "name": "has_flair"
        },
        {
            "id": 5,
            "name": "charming"
        },
        {
            "id": 6,
            "name": "has_distinctive_features"
        },
        {
            "id": 7,
            "name": "provides_good_hospitality"
        },
        {
            "id": 8,
            "name": "owns_cafe"
        },
        {
            "id": 9,
            "name": "is_refined"
        },
        {
            "id": 10,
            "name": "dresses_well"
        },
        {
            "id": 11,
            "name": "is_sophisticated"
        },
        {
            "id": 12,
            "name": "is_outgoing"
        },
        {
            "id": 13,
            "name": "tells_stories"
        },
        {
            "id": 14,
            "name": "serves_tea"
        },
        {
            "id": 15,
            "name": "grooms_daily"
        },
        {
            "id": 16,
            "name": "values_appearance"
        },
        {
            "id": 17,
            "name": "exudes_confidence"
        },
        {
            "id": 18,
            "name": "wears_suits"
        },
        {
            "id": 19,
            "name": "confident"
        },
        {
            "id": 20,
            "name": "values_tradition"
        }
    ],
    "subject_name": "Jairo",
    "subject_category": "human",
    "keyword": "mustachio",
    "all_facts": [
        {
            "id": 0,
            "subject": "Jairo",
            "text": "Jairo is elegant.",
            "fol": "p_0(Jairo)",
            "str_fol": "is_elegant(Jairo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Jairo",
            "text": "Jairo does not make exquisite coffee.",
            "fol": "\u00acp_1(Jairo)",
            "str_fol": "\u00acmakes_exquisite_coffee(Jairo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jairo",
            "text": "Jairo is not gregarious.",
            "fol": "\u00acp_2(Jairo)",
            "str_fol": "\u00acis_gregarious(Jairo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Jairo",
            "text": "Jairo enjoys life.",
            "fol": "p_3(Jairo)",
            "str_fol": "enjoys_life(Jairo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Jairo",
            "text": "Jairo does not have flair.",
            "fol": "\u00acp_4(Jairo)",
            "str_fol": "\u00achas_flair(Jairo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jairo",
            "text": "Jairo is not sophisticated.",
            "fol": "\u00acp_11(Jairo)",
            "str_fol": "\u00acis_sophisticated(Jairo)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Jairo",
            "text": "Jairo dresses well.",
            "fol": "p_10(Jairo)",
            "str_fol": "dresses_well(Jairo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Jairo",
            "text": "Jairo is not refined.",
            "fol": "\u00acp_9(Jairo)",
            "str_fol": "\u00acis_refined(Jairo)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Jairo",
            "text": "Jairo has distinctive features.",
            "fol": "p_6(Jairo)",
            "str_fol": "has_distinctive_features(Jairo)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Jairo",
            "text": "Jairo owns a caf\u00e9.",
            "fol": "p_8(Jairo)",
            "str_fol": "owns_cafe(Jairo)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Jairo",
            "text": "Jairo provides good hospitality.",
            "fol": "p_7(Jairo)",
            "str_fol": "provides_good_hospitality(Jairo)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Jairo",
            "text": "Jairo is not charming.",
            "fol": "\u00acp_5(Jairo)",
            "str_fol": "\u00accharming(Jairo)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Jairo",
            "text": "Jairo enjoys life.",
            "fol": "p_3(Jairo)",
            "str_fol": "enjoys_life(Jairo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Jairo",
            "text": "Jairo does not have flair.",
            "fol": "\u00acp_4(Jairo)",
            "str_fol": "\u00achas_flair(Jairo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Jairo",
            "text": "Jairo is elegant.",
            "fol": "p_0(Jairo)",
            "str_fol": "is_elegant(Jairo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Jairo",
            "text": "Jairo is not gregarious.",
            "fol": "\u00acp_2(Jairo)",
            "str_fol": "\u00acis_gregarious(Jairo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Jairo",
            "text": "Jairo does not make exquisite coffee.",
            "fol": "\u00acp_1(Jairo)",
            "str_fol": "\u00acmakes_exquisite_coffee(Jairo)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If someone enjoys life and is sophisticated, then they have flair.",
            "fol": "\u2200x ((p_3(x) \u2227 p_11(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((enjoys_life(x) \u2227 is_sophisticated(x)) \u2192 has_flair(x))"
        },
        {
            "id": 5,
            "text": "A person is either sophisticated or dresses well, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (is_sophisticated(x) \u2295 dresses_well(x))"
        },
        {
            "id": 4,
            "text": "A person either dresses well or is refined, but not necessarily both.",
            "fol": "\u2200x (p_10(x) \u2295 p_9(x))",
            "str_fol": "\u2200x (dresses_well(x) \u2295 is_refined(x))"
        },
        {
            "id": 3,
            "text": "If Jairo is elegant, then he either has distinctive features or is refined, but not both.",
            "fol": "p_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))",
            "str_fol": "is_elegant(Jairo) \u2192 (is_refined(Jairo) \u2295 has_distinctive_features(Jairo))"
        },
        {
            "id": 2,
            "text": "Jairo is either gregarious or a caf\u00e9 owner, but not necessarily both.",
            "fol": "p_2(Jairo) \u2295 p_8(Jairo)",
            "str_fol": "is_gregarious(Jairo) \u2295 owns_cafe(Jairo)"
        },
        {
            "id": 1,
            "text": "If Jairo owns a caf\u00e9, then he either makes exquisite coffee or provides good hospitality.",
            "fol": "p_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))",
            "str_fol": "owns_cafe(Jairo) \u2192 (makes_exquisite_coffee(Jairo) \u2228 provides_good_hospitality(Jairo))"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is charming, then they either have distinctive features or provide good hospitality (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (charming(x) \u2192 (has_distinctive_features(x) \u2228 provides_good_hospitality(x)))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Jairo",
            "text": "Jairo enjoys life.",
            "fol": "p_3(Jairo)",
            "str_fol": "enjoys_life(Jairo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Jairo",
            "text": "Jairo does not have flair.",
            "fol": "\u00acp_4(Jairo)",
            "str_fol": "\u00achas_flair(Jairo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Jairo",
            "text": "Jairo is elegant.",
            "fol": "p_0(Jairo)",
            "str_fol": "is_elegant(Jairo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Jairo",
            "text": "Jairo is not gregarious.",
            "fol": "\u00acp_2(Jairo)",
            "str_fol": "\u00acis_gregarious(Jairo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Jairo",
            "text": "Jairo does not make exquisite coffee.",
            "fol": "\u00acp_1(Jairo)",
            "str_fol": "\u00acmakes_exquisite_coffee(Jairo)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If someone enjoys life and is sophisticated, then they have flair.",
            "fol": "\u2200x ((p_3(x) \u2227 p_11(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((enjoys_life(x) \u2227 is_sophisticated(x)) \u2192 has_flair(x))"
        },
        {
            "id": 5,
            "text": "A person is either sophisticated or dresses well, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (is_sophisticated(x) \u2295 dresses_well(x))"
        },
        {
            "id": 4,
            "text": "A person either dresses well or is refined, but not necessarily both.",
            "fol": "\u2200x (p_10(x) \u2295 p_9(x))",
            "str_fol": "\u2200x (dresses_well(x) \u2295 is_refined(x))"
        },
        {
            "id": 3,
            "text": "If Jairo is elegant, then he either has distinctive features or is refined, but not both.",
            "fol": "p_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))",
            "str_fol": "is_elegant(Jairo) \u2192 (is_refined(Jairo) \u2295 has_distinctive_features(Jairo))"
        },
        {
            "id": 2,
            "text": "Jairo is either gregarious or a caf\u00e9 owner, but not necessarily both.",
            "fol": "p_2(Jairo) \u2295 p_8(Jairo)",
            "str_fol": "is_gregarious(Jairo) \u2295 owns_cafe(Jairo)"
        },
        {
            "id": 1,
            "text": "If Jairo owns a caf\u00e9, then he either makes exquisite coffee or provides good hospitality.",
            "fol": "p_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))",
            "str_fol": "owns_cafe(Jairo) \u2192 (makes_exquisite_coffee(Jairo) \u2228 provides_good_hospitality(Jairo))"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is charming, then they either have distinctive features or provide good hospitality (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (charming(x) \u2192 (has_distinctive_features(x) \u2228 provides_good_hospitality(x)))"
        }
    ],
    "context_fol": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\n\u2200x ((p_3(x) \u2227 p_11(x)) \u2192 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\np_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
    "conclusion": {
        "id": 11,
        "subject": "Jairo",
        "text": "Jairo is not charming.",
        "fol": "\u00acp_5(Jairo)",
        "str_fol": "\u00accharming(Jairo)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_5(Jairo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Jairo",
                    "text": "Jairo enjoys life.",
                    "fol": "p_3(Jairo)",
                    "str_fol": "enjoys_life(Jairo)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Jairo",
                    "text": "Jairo does not have flair.",
                    "fol": "\u00acp_4(Jairo)",
                    "str_fol": "\u00achas_flair(Jairo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone enjoys life and is sophisticated, then they have flair.",
                    "fol": "\u2200x ((p_3(x) \u2227 p_11(x)) \u2192 p_4(x))",
                    "str_fol": "\u2200x ((enjoys_life(x) \u2227 is_sophisticated(x)) \u2192 has_flair(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Jairo",
                "text": "Jairo is not sophisticated.",
                "fol": "\u00acp_11(Jairo)",
                "str_fol": "\u00acis_sophisticated(Jairo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Jairo",
                    "text": "Jairo is not sophisticated.",
                    "fol": "\u00acp_11(Jairo)",
                    "str_fol": "\u00acis_sophisticated(Jairo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "A person is either sophisticated or dresses well, but not necessarily both.",
                    "fol": "\u2200x (p_11(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (is_sophisticated(x) \u2295 dresses_well(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Jairo",
                "text": "Jairo dresses well.",
                "fol": "p_10(Jairo)",
                "str_fol": "dresses_well(Jairo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Jairo",
                    "text": "Jairo dresses well.",
                    "fol": "p_10(Jairo)",
                    "str_fol": "dresses_well(Jairo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "A person either dresses well or is refined, but not necessarily both.",
                    "fol": "\u2200x (p_10(x) \u2295 p_9(x))",
                    "str_fol": "\u2200x (dresses_well(x) \u2295 is_refined(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Jairo",
                "text": "Jairo is not refined.",
                "fol": "\u00acp_9(Jairo)",
                "str_fol": "\u00acis_refined(Jairo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Jairo",
                    "text": "Jairo is elegant.",
                    "fol": "p_0(Jairo)",
                    "str_fol": "is_elegant(Jairo)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Jairo",
                    "text": "Jairo is not refined.",
                    "fol": "\u00acp_9(Jairo)",
                    "str_fol": "\u00acis_refined(Jairo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Jairo is elegant, then he either has distinctive features or is refined, but not both.",
                    "fol": "p_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))",
                    "str_fol": "is_elegant(Jairo) \u2192 (is_refined(Jairo) \u2295 has_distinctive_features(Jairo))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Jairo",
                "text": "Jairo has distinctive features.",
                "fol": "p_6(Jairo)",
                "str_fol": "has_distinctive_features(Jairo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Jairo",
                    "text": "Jairo is not gregarious.",
                    "fol": "\u00acp_2(Jairo)",
                    "str_fol": "\u00acis_gregarious(Jairo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Jairo is either gregarious or a caf\u00e9 owner, but not necessarily both.",
                    "fol": "p_2(Jairo) \u2295 p_8(Jairo)",
                    "str_fol": "is_gregarious(Jairo) \u2295 owns_cafe(Jairo)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Jairo",
                "text": "Jairo owns a caf\u00e9.",
                "fol": "p_8(Jairo)",
                "str_fol": "owns_cafe(Jairo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Jairo",
                    "text": "Jairo owns a caf\u00e9.",
                    "fol": "p_8(Jairo)",
                    "str_fol": "owns_cafe(Jairo)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Jairo",
                    "text": "Jairo does not make exquisite coffee.",
                    "fol": "\u00acp_1(Jairo)",
                    "str_fol": "\u00acmakes_exquisite_coffee(Jairo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Jairo owns a caf\u00e9, then he either makes exquisite coffee or provides good hospitality.",
                    "fol": "p_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))",
                    "str_fol": "owns_cafe(Jairo) \u2192 (makes_exquisite_coffee(Jairo) \u2228 provides_good_hospitality(Jairo))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Jairo",
                "text": "Jairo provides good hospitality.",
                "fol": "p_7(Jairo)",
                "str_fol": "provides_good_hospitality(Jairo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Jairo",
                    "text": "Jairo has distinctive features.",
                    "fol": "p_6(Jairo)",
                    "str_fol": "has_distinctive_features(Jairo)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Jairo",
                    "text": "Jairo provides good hospitality.",
                    "fol": "p_7(Jairo)",
                    "str_fol": "provides_good_hospitality(Jairo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if someone is charming, then they either have distinctive features or provide good hospitality (or both).",
                    "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
                    "str_fol": "\u2200x (charming(x) \u2192 (has_distinctive_features(x) \u2228 provides_good_hospitality(x)))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\n\u2200x ((p_3(x) \u2227 p_11(x)) \u2192 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\np_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo)",
                    "-p_4(Jairo)",
                    "p_0(Jairo)",
                    "-p_2(Jairo)",
                    "-p_1(Jairo)",
                    "all x ((p_3(x) & p_11(x)) -> p_4(x))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "all x (-(p_10(x) <-> p_9(x)))",
                    "p_0(Jairo) -> (-(p_9(Jairo) <-> p_6(Jairo)))",
                    "-(p_2(Jairo) <-> p_8(Jairo))",
                    "p_8(Jairo) -> (p_1(Jairo) | p_7(Jairo))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "all x (p_6(x) -> -p_5(x))"
                ],
                "formulas(goals)": [
                    "-p_5(Jairo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_6(x) \u2192 \u00acp_5(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\np_8(Jairo)\n\u00acp_11(Jairo)\np_10(Jairo)\n\u00acp_9(Jairo)\np_6(Jairo)\np_7(Jairo)\n\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\n\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2295 p_7(x)))",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo)",
                    "-p_4(Jairo)",
                    "p_0(Jairo)",
                    "-p_2(Jairo)",
                    "-p_1(Jairo)",
                    "p_8(Jairo)",
                    "-p_11(Jairo)",
                    "p_10(Jairo)",
                    "-p_9(Jairo)",
                    "p_6(Jairo)",
                    "p_7(Jairo)",
                    "all x (-p_3(x) | -p_11(x) | p_4(x))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "all x (-(p_10(x) <-> p_9(x)))",
                    "p_0(Jairo) -> (-(p_9(Jairo) <-> p_6(Jairo)))",
                    "-(p_2(Jairo) <-> p_8(Jairo))",
                    "-p_8(Jairo) | p_1(Jairo) | p_7(Jairo)",
                    "all x (p_5(x) -> (-(p_6(x) <-> p_7(x))))"
                ],
                "formulas(goals)": [
                    "-p_5(Jairo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_3(x) \u2227 p_11(x)) \u2192 p_4(x))",
                    "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))"
                ],
                "added_facts": [
                    "p_8(Jairo)",
                    "\u00acp_11(Jairo)",
                    "p_10(Jairo)",
                    "\u00acp_9(Jairo)",
                    "p_6(Jairo)",
                    "p_7(Jairo)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))",
                    "\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)",
                    "\u2200x (p_5(x) \u2192 (p_6(x) \u2295 p_7(x)))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\np_8(Jairo)\n\u00acp_11(Jairo)\np_10(Jairo)\n\u00acp_9(Jairo)\np_6(Jairo)\np_7(Jairo)\n\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\n\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2295 p_7(x)))\n\u00acp_0(Jairo) \u2228 p_9(Jairo) \u2228 p_6(Jairo)\n\u00acp_0(Jairo) \u2228 \u00acp_9(Jairo) \u2228 \u00acp_6(Jairo)",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo)",
                    "-p_4(Jairo)",
                    "p_0(Jairo)",
                    "-p_2(Jairo)",
                    "-p_1(Jairo)",
                    "p_8(Jairo)",
                    "-p_11(Jairo)",
                    "p_10(Jairo)",
                    "-p_9(Jairo)",
                    "p_6(Jairo)",
                    "p_7(Jairo)",
                    "all x (-p_3(x) | -p_11(x) | p_4(x))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "all x (-(p_10(x) <-> p_9(x)))",
                    "-p_0(Jairo) | (-(p_9(Jairo) <-> p_6(Jairo)))",
                    "-(p_2(Jairo) <-> p_8(Jairo))",
                    "-p_8(Jairo) | p_1(Jairo) | p_7(Jairo)",
                    "all x (-p_5(x) | (-(p_6(x) <-> p_7(x))))",
                    "-p_0(Jairo) | p_9(Jairo) | p_6(Jairo)",
                    "-p_0(Jairo) | -p_9(Jairo) | -p_6(Jairo)"
                ],
                "formulas(goals)": [
                    "-p_5(Jairo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_0(Jairo) \u2228 p_9(Jairo) \u2228 p_6(Jairo)",
                    "\u00acp_0(Jairo) \u2228 \u00acp_9(Jairo) \u2228 \u00acp_6(Jairo)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\np_8(Jairo)\n\u00acp_11(Jairo)\np_10(Jairo)\n\u00acp_9(Jairo)\np_6(Jairo)\np_7(Jairo)\n\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\n\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)\n\u00acp_0(Jairo) \u2228 p_9(Jairo) \u2228 p_6(Jairo)\n\u00acp_0(Jairo) \u2228 \u00acp_9(Jairo) \u2228 \u00acp_6(Jairo)\n\u2200x (p_6(x) \u2227 p_7(x) \u2192 p_5(x))",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo)",
                    "-p_4(Jairo)",
                    "p_0(Jairo)",
                    "-p_2(Jairo)",
                    "-p_1(Jairo)",
                    "p_8(Jairo)",
                    "-p_11(Jairo)",
                    "p_10(Jairo)",
                    "-p_9(Jairo)",
                    "p_6(Jairo)",
                    "p_7(Jairo)",
                    "all x (-p_3(x) | -p_11(x) | p_4(x))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "all x (-(p_10(x) <-> p_9(x)))",
                    "-p_0(Jairo) | (-(p_9(Jairo) <-> p_6(Jairo)))",
                    "-(p_2(Jairo) <-> p_8(Jairo))",
                    "-p_8(Jairo) | p_1(Jairo) | p_7(Jairo)",
                    "-p_0(Jairo) | p_9(Jairo) | p_6(Jairo)",
                    "-p_0(Jairo) | -p_9(Jairo) | -p_6(Jairo)",
                    "all x (-(p_6(x) & p_7(x)) | p_5(x))"
                ],
                "formulas(goals)": [
                    "p_5(Jairo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2192 (p_6(x) \u2295 p_7(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_6(x) \u2227 p_7(x) \u2192 p_5(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\np_8(Jairo)\n\u00acp_11(Jairo)\np_10(Jairo)\n\u00acp_9(Jairo)\np_6(Jairo)\np_7(Jairo)\np_5(Jairo)\n\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\n\u2200x (p_11(x) \u2194 \u00acp_10(x))\n\u2200x (p_10(x) \u2194 \u00acp_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\np_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))\n\u00acp_0(Jairo) \u2228 p_9(Jairo) \u2228 p_6(Jairo)\n\u00acp_0(Jairo) \u2228 \u00acp_9(Jairo) \u2228 \u00acp_6(Jairo)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2192 p_5(x)))",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo)",
                    "-p_4(Jairo)",
                    "p_0(Jairo)",
                    "-p_2(Jairo)",
                    "-p_1(Jairo)",
                    "p_8(Jairo)",
                    "-p_11(Jairo)",
                    "p_10(Jairo)",
                    "-p_9(Jairo)",
                    "p_6(Jairo)",
                    "p_7(Jairo)",
                    "p_5(Jairo)",
                    "all x (-p_3(x) | -p_11(x) | p_4(x))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "all x (-(p_10(x) <-> p_9(x)))",
                    "all x (p_11(x) <-> -p_10(x))",
                    "all x (p_10(x) <-> -p_9(x))",
                    "p_0(Jairo) -> (-(p_9(Jairo) <-> p_6(Jairo)))",
                    "-(p_2(Jairo) <-> p_8(Jairo))",
                    "p_8(Jairo) -> (p_1(Jairo) | p_7(Jairo))",
                    "-p_0(Jairo) | p_9(Jairo) | p_6(Jairo)",
                    "-p_0(Jairo) | -p_9(Jairo) | -p_6(Jairo)",
                    "all x (p_6(x) -> (p_7(x) -> p_5(x)))"
                ],
                "formulas(goals)": [
                    "p_5(Jairo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2227 p_7(x) \u2192 p_5(x))"
                ],
                "added_facts": [
                    "p_5(Jairo)"
                ],
                "added_rules": [
                    "\u2200x (p_11(x) \u2194 \u00acp_10(x))",
                    "\u2200x (p_10(x) \u2194 \u00acp_9(x))",
                    "p_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))",
                    "\u2200x (p_6(x) \u2192 (p_7(x) \u2192 p_5(x)))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\np_8(Jairo)\n\u00acp_11(Jairo)\np_10(Jairo)\n\u00acp_9(Jairo)\np_6(Jairo)\np_7(Jairo)\np_5(Jairo)\n\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\n\u2200x (p_11(x) \u2194 \u00acp_10(x))\n\u2200x (p_10(x) \u2194 \u00acp_9(x))\np_0(Jairo) \u2192 (p_9(Jairo) \u2295 p_6(Jairo))\np_2(Jairo) \u2295 p_8(Jairo)\np_8(Jairo) \u2192 (p_1(Jairo) \u2228 p_7(Jairo))\n\u00acp_0(Jairo) \u2228 p_9(Jairo) \u2228 p_6(Jairo)\n\u00acp_0(Jairo) \u2228 \u00acp_9(Jairo) \u2228 \u00acp_6(Jairo)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2192 p_5(x)))\n\u2200x (p_11(x) \u2194 p_9(x))\n\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)\np_11(Jairo) \u2194 p_9(Jairo)",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo).",
                    "-p_4(Jairo).",
                    "p_0(Jairo).",
                    "-p_2(Jairo).",
                    "-p_1(Jairo).",
                    "p_8(Jairo).",
                    "-p_11(Jairo).",
                    "p_10(Jairo).",
                    "-p_9(Jairo).",
                    "p_6(Jairo).",
                    "p_7(Jairo).",
                    "p_5(Jairo).",
                    "all x (-p_3(x) | -p_11(x) | p_4(x)).",
                    "all x (-(p_11(x) <-> p_10(x))).",
                    "all x (-(p_10(x) <-> p_9(x))).",
                    "all x (p_11(x) <-> -p_10(x)).",
                    "all x (p_10(x) <-> -p_9(x)).",
                    "p_0(Jairo) -> (-(p_9(Jairo) <-> p_6(Jairo))).",
                    "-(p_2(Jairo) <-> p_8(Jairo)).",
                    "p_8(Jairo) -> (p_1(Jairo) | p_7(Jairo)).",
                    "-p_0(Jairo) | p_9(Jairo) | p_6(Jairo).",
                    "-p_0(Jairo) | -p_9(Jairo) | -p_6(Jairo).",
                    "all x (-p_6(x) | -p_7(x) | p_5(x)).",
                    "all x (p_11(x) <-> p_9(x)).",
                    "-p_8(Jairo) | p_1(Jairo) | p_7(Jairo).",
                    "p_11(Jairo) <-> p_9(Jairo)."
                ],
                "formulas(goals)": [
                    "p_5(Jairo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Jairo) \u2194 p_9(Jairo)"
                ],
                "added_rules": [
                    "\u2200x (p_11(x) \u2194 p_9(x))",
                    "\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Jairo)\n\u00acp_4(Jairo)\np_0(Jairo)\n\u00acp_2(Jairo)\n\u00acp_1(Jairo)\np_8(Jairo)\n\u00acp_11(Jairo)\np_10(Jairo)\n\u00acp_9(Jairo)\np_7(Jairo)\n\u2200x (\u00acp_3(x) \u2228 \u00acp_11(x) \u2228 p_4(x))\n\u2200x (p_11(x) \u2295 p_10(x))\n\u2200x (p_10(x) \u2295 p_9(x))\n\u2200x (\u00acp_11(x) \u2228 \u00acp_10(x))\n\u2200x (\u00acp_10(x) \u2228 \u00acp_9(x))\n\u00acp_0(Jairo) \u2228 p_9(Jairo) \u2228 p_6(Jairo)\n\u00acp_0(Jairo) \u2228 \u00acp_9(Jairo) \u2228 \u00acp_6(Jairo)\np_2(Jairo) \u2295 p_8(Jairo)\n\u00acp_8(Jairo) \u2228 p_1(Jairo) \u2228 p_7(Jairo)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2192 p_5(x)))\n\u2200x (p_11(x) \u2194 p_9(x))\np_11(Jairo) \u2194 p_9(Jairo)\n\u2200x (p_8(x) \u2192 \u00acp_5(x))",
            "Initial Goal": "\u00acp_5(Jairo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Jairo).",
                    "-p_4(Jairo).",
                    "p_0(Jairo).",
                    "-p_2(Jairo).",
                    "-p_1(Jairo).",
                    "p_8(Jairo).",
                    "-p_11(Jairo).",
                    "p_10(Jairo).",
                    "-p_9(Jairo).",
                    "p_7(Jairo).",
                    "all x (-p_3(x) | -p_11(x) | p_4(x)).",
                    "all x (-(p_11(x) <-> p_10(x))).",
                    "all x (-(p_10(x) <-> p_9(x))).",
                    "all x (-p_11(x) | -p_10(x)).",
                    "all x (-p_10(x) | -p_9(x)).",
                    "-p_0(Jairo) | p_9(Jairo) | p_6(Jairo).",
                    "-p_0(Jairo) | -p_9(Jairo) | -p_6(Jairo).",
                    "-(p_2(Jairo) <-> p_8(Jairo)).",
                    "-p_8(Jairo) | p_1(Jairo) | p_7(Jairo).",
                    "all x (-p_6(x) | -p_7(x) | p_5(x)).",
                    "all x (p_11(x) <-> p_9(x)).",
                    "p_11(Jairo) <-> p_9(Jairo).",
                    "all x (-p_8(x) | -p_5(x))."
                ],
                "formulas(goals)": [
                    "-p_5(Jairo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Jairo)",
                    "p_5(Jairo)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_8(x) \u2192 \u00acp_5(x))"
                ]
            }
        }
    ]
}