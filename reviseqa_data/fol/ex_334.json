{
    "background_story": "Hadleigh was a talented but slightly absent-minded artist. One day, she accidentally overslept and missed a crucial meeting with a potential client. Feeling embarrassed and anxious, she rushed to the client's office to apologize. To her surprise, the client was understanding and even amused by her mishap. He explained that he too had once missed an important meeting due to unforeseen circumstances and knew how frustrating it could be. Considering Hadleigh's otherwise impeccable work and punctuality, he deemed her tardiness excusable. The client not only gave her a second chance but also commissioned a large project, recognizing that everyone deserves a bit of leniency now and then. Hadleigh learned a valuable lesson about the importance of communication and the value of empathy in both personal and professional relationships.",
    "predicates": [
        {
            "id": 0,
            "name": "builds_trust"
        },
        {
            "id": 1,
            "name": "adapts_quickly"
        },
        {
            "id": 2,
            "name": "explores_new"
        },
        {
            "id": 3,
            "name": "challenges_herself"
        },
        {
            "id": 4,
            "name": "makes_mistake"
        },
        {
            "id": 5,
            "name": "learns_from_it"
        },
        {
            "id": 6,
            "name": "gets_second_chance"
        },
        {
            "id": 7,
            "name": "is_honest"
        },
        {
            "id": 8,
            "name": "shows_effort"
        },
        {
            "id": 9,
            "name": "is_empathic"
        },
        {
            "id": 10,
            "name": "faces_setback"
        },
        {
            "id": 11,
            "name": "grows_wiser"
        },
        {
            "id": 12,
            "name": "develops_resilience"
        },
        {
            "id": 13,
            "name": "takes_risk"
        },
        {
            "id": 14,
            "name": "becomes_resilient"
        },
        {
            "id": 15,
            "name": "admits_fault"
        },
        {
            "id": 16,
            "name": "values_integrity"
        },
        {
            "id": 17,
            "name": "takes_initiative"
        },
        {
            "id": 18,
            "name": "listens_actively"
        },
        {
            "id": 19,
            "name": "respects_others"
        },
        {
            "id": 20,
            "name": "admits_error"
        },
        {
            "id": 21,
            "name": "seeks_feedback"
        },
        {
            "id": 22,
            "name": "facing_failure"
        },
        {
            "id": 23,
            "name": "stays_positive"
        },
        {
            "id": 24,
            "name": "meets_failure"
        },
        {
            "id": 25,
            "name": "experiences_disappointment"
        },
        {
            "id": 26,
            "name": "forges_connections"
        },
        {
            "id": 27,
            "name": "overcomes_fear"
        },
        {
            "id": 28,
            "name": "tries_new_things"
        }
    ],
    "subject_name": "Hadleigh",
    "subject_category": "human",
    "keyword": "excusable",
    "all_facts": [
        {
            "id": 0,
            "subject": "Hadleigh",
            "text": "Hadleigh does not build trust with her clients.",
            "fol": "\u00acp_0(Hadleigh)",
            "str_fol": "\u00acbuilds_trust(Hadleigh)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hadleigh",
            "text": "Hadleigh adapts quickly.",
            "fol": "p_1(Hadleigh)",
            "str_fol": "adapts_quickly(Hadleigh)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Hadleigh",
            "text": "Hadleigh does not explore new opportunities.",
            "fol": "\u00acp_2(Hadleigh)",
            "str_fol": "\u00acexplores_new(Hadleigh)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Hadleigh",
            "text": "Hadleigh challenges herself.",
            "fol": "p_3(Hadleigh)",
            "str_fol": "challenges_herself(Hadleigh)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Hadleigh",
            "text": "Hadleigh takes a risk.",
            "fol": "p_13(Hadleigh)",
            "str_fol": "takes_risk(Hadleigh)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Hadleigh",
            "text": "Hadleigh develops resilience.",
            "fol": "p_12(Hadleigh)",
            "str_fol": "develops_resilience(Hadleigh)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Hadleigh",
            "text": "Hadleigh faces a setback.",
            "fol": "p_10(Hadleigh)",
            "str_fol": "faces_setback(Hadleigh)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Hadleigh",
            "text": "Hadleigh does not grow wiser.",
            "fol": "\u00acp_11(Hadleigh)",
            "str_fol": "\u00acgrows_wiser(Hadleigh)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Hadleigh",
            "text": "Hadleigh learns from her mistake.",
            "fol": "p_5(Hadleigh)",
            "str_fol": "learns_from_it(Hadleigh)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Hadleigh",
            "text": "Hadleigh is not empathic.",
            "fol": "\u00acp_9(Hadleigh)",
            "str_fol": "\u00acis_empathic(Hadleigh)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Hadleigh",
            "text": "Hadleigh is honest.",
            "fol": "p_7(Hadleigh)",
            "str_fol": "is_honest(Hadleigh)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Hadleigh",
            "text": "Hadleigh gets a second chance.",
            "fol": "p_6(Hadleigh)",
            "str_fol": "gets_second_chance(Hadleigh)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Hadleigh",
            "text": "Hadleigh does not make a mistake.",
            "fol": "\u00acp_4(Hadleigh)",
            "str_fol": "\u00acmakes_mistake(Hadleigh)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Hadleigh",
            "text": "Hadleigh does not explore new opportunities.",
            "fol": "\u00acp_2(Hadleigh)",
            "str_fol": "\u00acexplores_new(Hadleigh)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Hadleigh",
            "text": "Hadleigh challenges herself.",
            "fol": "p_3(Hadleigh)",
            "str_fol": "challenges_herself(Hadleigh)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Hadleigh",
            "text": "Hadleigh adapts quickly.",
            "fol": "p_1(Hadleigh)",
            "str_fol": "adapts_quickly(Hadleigh)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Hadleigh",
            "text": "Hadleigh does not build trust with her clients.",
            "fol": "\u00acp_0(Hadleigh)",
            "str_fol": "\u00acbuilds_trust(Hadleigh)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Hadleigh either explores new opportunities or challenges herself (but not both), then she takes a risk.",
            "fol": "(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)",
            "str_fol": "(explores_new(Hadleigh) \u2295 challenges_herself(Hadleigh)) \u2192 takes_risk(Hadleigh)"
        },
        {
            "id": 7,
            "text": "Anyone who adapts quickly develops resilience.",
            "fol": "\u2200x (p_1(x) \u2192 p_12(x))",
            "str_fol": "\u2200x (adapts_quickly(x) \u2192 develops_resilience(x))"
        },
        {
            "id": 6,
            "text": "If Hadleigh takes a risk, then she faces a setback and becomes resilient.",
            "fol": "p_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))",
            "str_fol": "takes_risk(Hadleigh) \u2192 (faces_setback(Hadleigh) \u2227 becomes_resilient(Hadleigh))"
        },
        {
            "id": 5,
            "text": "Hadleigh either develops resilience or grows wiser, but these two personal growth trajectories are not necessarily intertwined.",
            "fol": "p_12(Hadleigh) \u2295 p_11(Hadleigh)",
            "str_fol": "develops_resilience(Hadleigh) \u2295 grows_wiser(Hadleigh)"
        },
        {
            "id": 4,
            "text": "Everyone who faces a setback either learns from it or grows wiser (or both).",
            "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))",
            "str_fol": "\u2200x (faces_setback(x) \u2192 (grows_wiser(x) \u2228 learns_from_it(x)))"
        },
        {
            "id": 3,
            "text": "If someone is empathic, then they build trust with others.",
            "fol": "\u2200x (p_9(x) \u2192 p_0(x))",
            "str_fol": "\u2200x (is_empathic(x) \u2192 builds_trust(x))"
        },
        {
            "id": 2,
            "text": "Hadleigh is either honest or empathic, but not necessarily both.",
            "fol": "p_7(Hadleigh) \u2295 p_9(Hadleigh)",
            "str_fol": "is_honest(Hadleigh) \u2295 is_empathic(Hadleigh)"
        },
        {
            "id": 1,
            "text": "If Hadleigh is honest, then she shows effort and gets a second chance.",
            "fol": "p_7(Hadleigh) \u2192 (p_8(Hadleigh) \u2227 p_6(Hadleigh))",
            "str_fol": "is_honest(Hadleigh) \u2192 (shows_effort(Hadleigh) \u2227 gets_second_chance(Hadleigh))"
        },
        {
            "id": 0,
            "text": "If Hadleigh makes a mistake, then she either learns from it or gets a second chance, but not both.",
            "fol": "p_4(Hadleigh) \u2192 (p_5(Hadleigh) \u2295 p_6(Hadleigh))",
            "str_fol": "makes_mistake(Hadleigh) \u2192 (learns_from_it(Hadleigh) \u2295 gets_second_chance(Hadleigh))"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Hadleigh",
            "text": "Hadleigh does not explore new opportunities.",
            "fol": "\u00acp_2(Hadleigh)",
            "str_fol": "\u00acexplores_new(Hadleigh)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Hadleigh",
            "text": "Hadleigh challenges herself.",
            "fol": "p_3(Hadleigh)",
            "str_fol": "challenges_herself(Hadleigh)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Hadleigh",
            "text": "Hadleigh adapts quickly.",
            "fol": "p_1(Hadleigh)",
            "str_fol": "adapts_quickly(Hadleigh)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Hadleigh",
            "text": "Hadleigh does not build trust with her clients.",
            "fol": "\u00acp_0(Hadleigh)",
            "str_fol": "\u00acbuilds_trust(Hadleigh)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Hadleigh either explores new opportunities or challenges herself (but not both), then she takes a risk.",
            "fol": "(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)",
            "str_fol": "(explores_new(Hadleigh) \u2295 challenges_herself(Hadleigh)) \u2192 takes_risk(Hadleigh)"
        },
        {
            "id": 7,
            "text": "Anyone who adapts quickly develops resilience.",
            "fol": "\u2200x (p_1(x) \u2192 p_12(x))",
            "str_fol": "\u2200x (adapts_quickly(x) \u2192 develops_resilience(x))"
        },
        {
            "id": 6,
            "text": "If Hadleigh takes a risk, then she faces a setback and becomes resilient.",
            "fol": "p_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))",
            "str_fol": "takes_risk(Hadleigh) \u2192 (faces_setback(Hadleigh) \u2227 becomes_resilient(Hadleigh))"
        },
        {
            "id": 5,
            "text": "Hadleigh either develops resilience or grows wiser, but these two personal growth trajectories are not necessarily intertwined.",
            "fol": "p_12(Hadleigh) \u2295 p_11(Hadleigh)",
            "str_fol": "develops_resilience(Hadleigh) \u2295 grows_wiser(Hadleigh)"
        },
        {
            "id": 4,
            "text": "Everyone who faces a setback either learns from it or grows wiser (or both).",
            "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))",
            "str_fol": "\u2200x (faces_setback(x) \u2192 (grows_wiser(x) \u2228 learns_from_it(x)))"
        },
        {
            "id": 3,
            "text": "If someone is empathic, then they build trust with others.",
            "fol": "\u2200x (p_9(x) \u2192 p_0(x))",
            "str_fol": "\u2200x (is_empathic(x) \u2192 builds_trust(x))"
        },
        {
            "id": 2,
            "text": "Hadleigh is either honest or empathic, but not necessarily both.",
            "fol": "p_7(Hadleigh) \u2295 p_9(Hadleigh)",
            "str_fol": "is_honest(Hadleigh) \u2295 is_empathic(Hadleigh)"
        },
        {
            "id": 1,
            "text": "If Hadleigh is honest, then she shows effort and gets a second chance.",
            "fol": "p_7(Hadleigh) \u2192 (p_8(Hadleigh) \u2227 p_6(Hadleigh))",
            "str_fol": "is_honest(Hadleigh) \u2192 (shows_effort(Hadleigh) \u2227 gets_second_chance(Hadleigh))"
        },
        {
            "id": 0,
            "text": "If Hadleigh makes a mistake, then she either learns from it or gets a second chance, but not both.",
            "fol": "p_4(Hadleigh) \u2192 (p_5(Hadleigh) \u2295 p_6(Hadleigh))",
            "str_fol": "makes_mistake(Hadleigh) \u2192 (learns_from_it(Hadleigh) \u2295 gets_second_chance(Hadleigh))"
        }
    ],
    "context_fol": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\n\u2200x (p_1(x) \u2192 p_12(x))\np_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))\n\u2200x (p_9(x) \u2192 p_0(x))\np_7(Hadleigh) \u2295 p_9(Hadleigh)\np_7(Hadleigh) \u2192 (p_8(Hadleigh) \u2227 p_6(Hadleigh))\np_4(Hadleigh) \u2192 (p_5(Hadleigh) \u2295 p_6(Hadleigh))",
    "conclusion": {
        "id": 12,
        "subject": "Hadleigh",
        "text": "Hadleigh does not make a mistake.",
        "fol": "\u00acp_4(Hadleigh)",
        "str_fol": "\u00acmakes_mistake(Hadleigh)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_4(Hadleigh)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Hadleigh",
                    "text": "Hadleigh does not explore new opportunities.",
                    "fol": "\u00acp_2(Hadleigh)",
                    "str_fol": "\u00acexplores_new(Hadleigh)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Hadleigh",
                    "text": "Hadleigh challenges herself.",
                    "fol": "p_3(Hadleigh)",
                    "str_fol": "challenges_herself(Hadleigh)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Hadleigh either explores new opportunities or challenges herself (but not both), then she takes a risk.",
                    "fol": "(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)",
                    "str_fol": "(explores_new(Hadleigh) \u2295 challenges_herself(Hadleigh)) \u2192 takes_risk(Hadleigh)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Hadleigh",
                "text": "Hadleigh takes a risk.",
                "fol": "p_13(Hadleigh)",
                "str_fol": "takes_risk(Hadleigh)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Hadleigh",
                    "text": "Hadleigh adapts quickly.",
                    "fol": "p_1(Hadleigh)",
                    "str_fol": "adapts_quickly(Hadleigh)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who adapts quickly develops resilience.",
                    "fol": "\u2200x (p_1(x) \u2192 p_12(x))",
                    "str_fol": "\u2200x (adapts_quickly(x) \u2192 develops_resilience(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Hadleigh",
                "text": "Hadleigh develops resilience.",
                "fol": "p_12(Hadleigh)",
                "str_fol": "develops_resilience(Hadleigh)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Hadleigh",
                    "text": "Hadleigh takes a risk.",
                    "fol": "p_13(Hadleigh)",
                    "str_fol": "takes_risk(Hadleigh)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Hadleigh takes a risk, then she faces a setback and becomes resilient.",
                    "fol": "p_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))",
                    "str_fol": "takes_risk(Hadleigh) \u2192 (faces_setback(Hadleigh) \u2227 becomes_resilient(Hadleigh))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Hadleigh",
                "text": "Hadleigh faces a setback.",
                "fol": "p_10(Hadleigh)",
                "str_fol": "faces_setback(Hadleigh)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Hadleigh",
                    "text": "Hadleigh develops resilience.",
                    "fol": "p_12(Hadleigh)",
                    "str_fol": "develops_resilience(Hadleigh)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Hadleigh either develops resilience or grows wiser, but these two personal growth trajectories are not necessarily intertwined.",
                    "fol": "p_12(Hadleigh) \u2295 p_11(Hadleigh)",
                    "str_fol": "develops_resilience(Hadleigh) \u2295 grows_wiser(Hadleigh)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Hadleigh",
                "text": "Hadleigh does not grow wiser.",
                "fol": "\u00acp_11(Hadleigh)",
                "str_fol": "\u00acgrows_wiser(Hadleigh)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Hadleigh",
                    "text": "Hadleigh faces a setback.",
                    "fol": "p_10(Hadleigh)",
                    "str_fol": "faces_setback(Hadleigh)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Hadleigh",
                    "text": "Hadleigh does not grow wiser.",
                    "fol": "\u00acp_11(Hadleigh)",
                    "str_fol": "\u00acgrows_wiser(Hadleigh)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Everyone who faces a setback either learns from it or grows wiser (or both).",
                    "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))",
                    "str_fol": "\u2200x (faces_setback(x) \u2192 (grows_wiser(x) \u2228 learns_from_it(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Hadleigh",
                "text": "Hadleigh learns from her mistake.",
                "fol": "p_5(Hadleigh)",
                "str_fol": "learns_from_it(Hadleigh)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Hadleigh",
                    "text": "Hadleigh does not build trust with her clients.",
                    "fol": "\u00acp_0(Hadleigh)",
                    "str_fol": "\u00acbuilds_trust(Hadleigh)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone is empathic, then they build trust with others.",
                    "fol": "\u2200x (p_9(x) \u2192 p_0(x))",
                    "str_fol": "\u2200x (is_empathic(x) \u2192 builds_trust(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Hadleigh",
                "text": "Hadleigh is not empathic.",
                "fol": "\u00acp_9(Hadleigh)",
                "str_fol": "\u00acis_empathic(Hadleigh)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Hadleigh",
                    "text": "Hadleigh is not empathic.",
                    "fol": "\u00acp_9(Hadleigh)",
                    "str_fol": "\u00acis_empathic(Hadleigh)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Hadleigh is either honest or empathic, but not necessarily both.",
                    "fol": "p_7(Hadleigh) \u2295 p_9(Hadleigh)",
                    "str_fol": "is_honest(Hadleigh) \u2295 is_empathic(Hadleigh)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Hadleigh",
                "text": "Hadleigh is honest.",
                "fol": "p_7(Hadleigh)",
                "str_fol": "is_honest(Hadleigh)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Hadleigh",
                    "text": "Hadleigh is honest.",
                    "fol": "p_7(Hadleigh)",
                    "str_fol": "is_honest(Hadleigh)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Hadleigh is honest, then she shows effort and gets a second chance.",
                    "fol": "p_7(Hadleigh) \u2192 (p_8(Hadleigh) \u2227 p_6(Hadleigh))",
                    "str_fol": "is_honest(Hadleigh) \u2192 (shows_effort(Hadleigh) \u2227 gets_second_chance(Hadleigh))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Hadleigh",
                "text": "Hadleigh gets a second chance.",
                "fol": "p_6(Hadleigh)",
                "str_fol": "gets_second_chance(Hadleigh)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Hadleigh",
                    "text": "Hadleigh learns from her mistake.",
                    "fol": "p_5(Hadleigh)",
                    "str_fol": "learns_from_it(Hadleigh)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Hadleigh",
                    "text": "Hadleigh gets a second chance.",
                    "fol": "p_6(Hadleigh)",
                    "str_fol": "gets_second_chance(Hadleigh)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Hadleigh makes a mistake, then she either learns from it or gets a second chance, but not both.",
                    "fol": "p_4(Hadleigh) \u2192 (p_5(Hadleigh) \u2295 p_6(Hadleigh))",
                    "str_fol": "makes_mistake(Hadleigh) \u2192 (learns_from_it(Hadleigh) \u2295 gets_second_chance(Hadleigh))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Hadleigh",
                "text": "Hadleigh does not make a mistake.",
                "fol": "\u00acp_4(Hadleigh)",
                "str_fol": "\u00acmakes_mistake(Hadleigh)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 -(p_2(Hadleigh) <-> p_3(Hadleigh)) -> p_13(Hadleigh).  [assumption].\n2 (all x (p_1(x) -> p_12(x))).  [assumption].\n3 p_13(Hadleigh) -> p_10(Hadleigh) & p_14(Hadleigh).  [assumption].\n4 -(p_12(Hadleigh) <-> p_11(Hadleigh)).  [assumption].\n5 (all x (p_10(x) -> p_11(x) | p_5(x))).  [assumption].\n6 (all x (p_9(x) -> p_0(x))).  [assumption].\n7 -(p_7(Hadleigh) <-> p_9(Hadleigh)).  [assumption].\n8 p_7(Hadleigh) -> p_8(Hadleigh) & p_6(Hadleigh).  [assumption].\n9 p_4(Hadleigh) -> -(p_5(Hadleigh) <-> p_6(Hadleigh)).  [assumption].\n10 -p_4(Hadleigh).  [goal].\n11 p_2(Hadleigh) | -p_3(Hadleigh) | p_13(Hadleigh).  [clausify(1)].\n12 -p_2(Hadleigh).  [assumption].\n14 -p_3(Hadleigh) | p_13(Hadleigh).  [resolve(11,a,12,a)].\n15 p_3(Hadleigh).  [assumption].\n16 -p_1(x) | p_12(x).  [clausify(2)].\n17 p_1(Hadleigh).  [assumption].\n18 -p_9(x) | p_0(x).  [clausify(6)].\n19 -p_0(Hadleigh).  [assumption].\n20 p_13(Hadleigh).  [resolve(14,a,15,a)].\n21 -p_13(Hadleigh) | p_10(Hadleigh).  [clausify(3)].\n23 -p_12(Hadleigh) | -p_11(Hadleigh).  [clausify(4)].\n25 p_12(Hadleigh).  [resolve(16,a,17,a)].\n26 p_10(Hadleigh).  [resolve(20,a,21,a)].\n27 -p_10(x) | p_11(x) | p_5(x).  [clausify(5)].\n29 p_7(Hadleigh) | p_9(Hadleigh).  [clausify(7)].\n31 -p_7(Hadleigh) | p_6(Hadleigh).  [clausify(8)].\n32 p_4(Hadleigh).  [deny(10)].\n34 -p_4(Hadleigh) | -p_5(Hadleigh) | -p_6(Hadleigh).  [clausify(9)].\n36 -p_9(Hadleigh).  [resolve(18,b,19,a)].\n37 p_6(Hadleigh) | p_9(Hadleigh).  [resolve(31,a,29,a)].\n38 p_11(Hadleigh) | p_5(Hadleigh).  [resolve(26,a,27,a)].\n39 -p_11(Hadleigh).  [resolve(25,a,23,a)].\n40 -p_5(Hadleigh) | -p_6(Hadleigh).  [resolve(32,a,34,a)].\n42 p_5(Hadleigh).  [resolve(38,a,39,a)].\n43 -p_6(Hadleigh).  [resolve(42,a,40,a)].\n44 p_6(Hadleigh).  [resolve(37,b,36,a)].\n45 $F.  [resolve(43,a,44,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\n\u2200x (\u00acp_12(x) \u2192 \u00acp_1(x))\np_13(Hadleigh)\n(p_13(Hadleigh) \u2192 p_10(Hadleigh)) \u2227 (p_13(Hadleigh) \u2192 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\n\u2200x (\u00acp_10(x) \u2228 p_11(x) \u2228 p_5(x))\n\u2200x (\u00acp_9(x) \u2228 p_0(x))\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 p_6(Hadleigh))\np_4(Hadleigh) \u2192 (p_5(Hadleigh) \u2295 p_6(Hadleigh))",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh)",
                    "p_3(Hadleigh)",
                    "p_1(Hadleigh)",
                    "-p_0(Hadleigh)",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh)",
                    "all x (-p_12(x) -> -p_1(x))",
                    "p_13(Hadleigh)",
                    "(p_13(Hadleigh) -> p_10(Hadleigh)) & (p_13(Hadleigh) -> p_14(Hadleigh))",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh))",
                    "all x (-p_10(x) | p_11(x) | p_5(x))",
                    "all x (-p_9(x) | p_0(x))",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh))",
                    "(p_7(Hadleigh) -> p_8(Hadleigh)) & (p_7(Hadleigh) -> p_6(Hadleigh))",
                    "p_4(Hadleigh) -> (-(p_5(Hadleigh) <-> p_6(Hadleigh)))"
                ],
                "formulas(goals)": [
                    "-p_4(Hadleigh)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_1(x) \u2192 p_12(x))",
                    "p_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))",
                    "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))",
                    "\u2200x (p_9(x) \u2192 p_0(x))",
                    "p_7(Hadleigh) \u2192 (p_8(Hadleigh) \u2227 p_6(Hadleigh))"
                ],
                "added_facts": [
                    "p_13(Hadleigh)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 \u00acp_1(x))",
                    "(p_13(Hadleigh) \u2192 p_10(Hadleigh)) \u2227 (p_13(Hadleigh) \u2192 p_14(Hadleigh))",
                    "\u2200x (\u00acp_10(x) \u2228 p_11(x) \u2228 p_5(x))",
                    "\u2200x (\u00acp_9(x) \u2228 p_0(x))",
                    "(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 p_6(Hadleigh))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\np_13(Hadleigh)\n(p_13(Hadleigh) \u2192 p_10(Hadleigh)) \u2227 (p_13(Hadleigh) \u2192 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\n\u2200x (\u00acp_10(x) \u2228 p_11(x) \u2228 p_5(x))\n\u2200x (\u00acp_9(x) \u2228 p_0(x))\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 p_6(Hadleigh))\n(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 p_4(Hadleigh)\np_6(Hadleigh) \u2192 \u00acp_5(Hadleigh)",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh)",
                    "p_3(Hadleigh)",
                    "p_1(Hadleigh)",
                    "-p_0(Hadleigh)",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh)",
                    "p_13(Hadleigh)",
                    "(p_13(Hadleigh) -> p_10(Hadleigh)) & (p_13(Hadleigh) -> p_14(Hadleigh))",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh))",
                    "all x (-p_10(x) | p_11(x) | p_5(x))",
                    "all x (-p_9(x) | p_0(x))",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh))",
                    "(p_7(Hadleigh) -> p_8(Hadleigh)) & (p_7(Hadleigh) -> p_6(Hadleigh))",
                    "(-(p_5(Hadleigh) <-> p_6(Hadleigh))) -> p_4(Hadleigh)",
                    "p_6(Hadleigh) -> -p_5(Hadleigh)"
                ],
                "formulas(goals)": [
                    "--p_4(Hadleigh)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 \u00acp_1(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 p_4(Hadleigh)",
                    "p_6(Hadleigh) \u2192 \u00acp_5(Hadleigh)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\np_13(Hadleigh)\np_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))\n\u2200x (\u00acp_9(x) \u2228 p_0(x))\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 p_6(Hadleigh))\n(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 p_4(Hadleigh)\np_5(Hadleigh) \u2192 \u00acp_6(Hadleigh)\np_8(Hadleigh)\np_14(Hadleigh)\n\u00acp_9(Hadleigh)\np_7(Hadleigh)\n\u00acp_12(Hadleigh)",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh).",
                    "p_3(Hadleigh).",
                    "p_1(Hadleigh).",
                    "-p_0(Hadleigh).",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh).",
                    "p_13(Hadleigh).",
                    "p_13(Hadleigh) -> (p_10(Hadleigh) & p_14(Hadleigh)).",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh)).",
                    "all x (p_10(x) -> (p_11(x) | p_5(x))).",
                    "all x (-p_9(x) | p_0(x)).",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh)).",
                    "(p_7(Hadleigh) -> p_8(Hadleigh)) & (p_7(Hadleigh) -> p_6(Hadleigh)).",
                    "(-(p_5(Hadleigh) <-> p_6(Hadleigh))) -> p_4(Hadleigh).",
                    "p_5(Hadleigh) -> -p_6(Hadleigh).",
                    "p_8(Hadleigh).",
                    "p_14(Hadleigh).",
                    "-p_9(Hadleigh).",
                    "p_7(Hadleigh).",
                    "-p_12(Hadleigh)."
                ],
                "formulas(goals)": [
                    "p_4(Hadleigh)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_13(Hadleigh) \u2192 p_10(Hadleigh)) \u2227 (p_13(Hadleigh) \u2192 p_14(Hadleigh))",
                    "\u2200x (\u00acp_10(x) \u2228 p_11(x) \u2228 p_5(x))",
                    "p_6(Hadleigh) \u2192 \u00acp_5(Hadleigh)"
                ],
                "added_facts": [
                    "p_8(Hadleigh)",
                    "p_14(Hadleigh)",
                    "\u00acp_9(Hadleigh)",
                    "p_7(Hadleigh)",
                    "\u00acp_12(Hadleigh)"
                ],
                "added_rules": [
                    "p_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))",
                    "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))",
                    "p_5(Hadleigh) \u2192 \u00acp_6(Hadleigh)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\np_13(Hadleigh)\np_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))\n\u2200x (\u00acp_9(x) \u2228 p_0(x))\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 \u00acp_6(Hadleigh))\n(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 p_4(Hadleigh)\np_5(Hadleigh) \u2192 \u00acp_6(Hadleigh)\np_8(Hadleigh)\np_14(Hadleigh)\n\u00acp_9(Hadleigh)\np_7(Hadleigh)\n\u00acp_12(Hadleigh)\n\u00acp_6(Hadleigh) \u2192 \u00acp_4(Hadleigh)",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh)",
                    "p_3(Hadleigh)",
                    "p_1(Hadleigh)",
                    "-p_0(Hadleigh)",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh)",
                    "p_13(Hadleigh)",
                    "p_13(Hadleigh) -> (p_10(Hadleigh) & p_14(Hadleigh))",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh))",
                    "all x (p_10(x) -> (p_11(x) | p_5(x)))",
                    "all x (-p_9(x) | p_0(x))",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh))",
                    "(p_7(Hadleigh) -> p_8(Hadleigh)) & (p_7(Hadleigh) -> -p_6(Hadleigh))",
                    "(-(p_5(Hadleigh) <-> p_6(Hadleigh))) -> p_4(Hadleigh)",
                    "p_5(Hadleigh) -> -p_6(Hadleigh)",
                    "p_8(Hadleigh)",
                    "p_14(Hadleigh)",
                    "-p_9(Hadleigh)",
                    "p_7(Hadleigh)",
                    "-p_12(Hadleigh)",
                    "-p_6(Hadleigh) -> -p_4(Hadleigh)"
                ],
                "formulas(goals)": [
                    "-p_4(Hadleigh)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Hadleigh) \u2192 \u00acp_6(Hadleigh))",
                    "\u00acp_6(Hadleigh) \u2192 \u00acp_4(Hadleigh)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\np_13(Hadleigh)\np_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_5(x)))\n\u2200x (\u00acp_9(x) \u2228 p_0(x))\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 \u00acp_6(Hadleigh))\n(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 p_4(Hadleigh)\np_5(Hadleigh) \u2192 \u00acp_6(Hadleigh)\np_8(Hadleigh)\np_14(Hadleigh)\n\u00acp_9(Hadleigh)\np_7(Hadleigh)\n\u00acp_12(Hadleigh)\np_5(Hadleigh)",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh)",
                    "p_3(Hadleigh)",
                    "p_1(Hadleigh)",
                    "-p_0(Hadleigh)",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh)",
                    "p_13(Hadleigh)",
                    "p_13(Hadleigh) -> (p_10(Hadleigh) & p_14(Hadleigh))",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh))",
                    "all x (p_10(x) -> (p_11(x) | p_5(x)))",
                    "all x (-p_9(x) | p_0(x))",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh))",
                    "(p_7(Hadleigh) -> p_8(Hadleigh)) & (p_7(Hadleigh) -> -p_6(Hadleigh))",
                    "(-(p_5(Hadleigh) <-> p_6(Hadleigh))) -> p_4(Hadleigh)",
                    "p_5(Hadleigh) -> -p_6(Hadleigh)",
                    "p_8(Hadleigh)",
                    "p_14(Hadleigh)",
                    "-p_9(Hadleigh)",
                    "p_7(Hadleigh)",
                    "-p_12(Hadleigh)",
                    "p_5(Hadleigh)"
                ],
                "formulas(goals)": [
                    "--p_4(Hadleigh)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_6(Hadleigh) \u2192 \u00acp_4(Hadleigh)"
                ],
                "added_facts": [
                    "p_5(Hadleigh)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\np_13(Hadleigh)\np_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 \u00acp_6(Hadleigh))\n(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 \u00acp_4(Hadleigh)\np_5(Hadleigh) \u2192 \u00acp_6(Hadleigh)\np_8(Hadleigh)\np_14(Hadleigh)\n\u00acp_9(Hadleigh)\np_7(Hadleigh)\n\u00acp_12(Hadleigh)\np_5(Hadleigh)",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh)",
                    "p_3(Hadleigh)",
                    "p_1(Hadleigh)",
                    "-p_0(Hadleigh)",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh)",
                    "p_13(Hadleigh)",
                    "p_13(Hadleigh) -> (p_10(Hadleigh) & p_14(Hadleigh))",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh))",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh))",
                    "(p_7(Hadleigh) -> p_8(Hadleigh)) & (p_7(Hadleigh) -> -p_6(Hadleigh))",
                    "(-(p_5(Hadleigh) <-> p_6(Hadleigh))) -> -p_4(Hadleigh)",
                    "p_5(Hadleigh) -> -p_6(Hadleigh)",
                    "p_8(Hadleigh)",
                    "p_14(Hadleigh)",
                    "-p_9(Hadleigh)",
                    "p_7(Hadleigh)",
                    "-p_12(Hadleigh)",
                    "p_5(Hadleigh)"
                ],
                "formulas(goals)": [
                    "-p_4(Hadleigh)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_9(x) \u2228 p_0(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 \u00acp_4(Hadleigh)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Hadleigh)\np_3(Hadleigh)\np_1(Hadleigh)\n\u00acp_0(Hadleigh)\n(p_2(Hadleigh) \u2295 p_3(Hadleigh)) \u2192 p_13(Hadleigh)\np_13(Hadleigh)\np_13(Hadleigh) \u2192 (p_10(Hadleigh) \u2227 p_14(Hadleigh))\np_12(Hadleigh) \u2295 p_11(Hadleigh)\np_7(Hadleigh) \u2295 p_9(Hadleigh)\n(p_7(Hadleigh) \u2192 p_8(Hadleigh))\n(p_5(Hadleigh) \u2295 p_6(Hadleigh)) \u2192 \u00acp_4(Hadleigh)\np_8(Hadleigh)\np_14(Hadleigh)\n\u00acp_9(Hadleigh)\np_7(Hadleigh)\n\u00acp_12(Hadleigh)\np_5(Hadleigh)\np_7(Hadleigh) \u2192 p_6(Hadleigh)\n(p_5(Hadleigh) \u2227 p_6(Hadleigh)) \u2192 p_4(Hadleigh)",
            "Initial Goal": "\u00acp_4(Hadleigh)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Hadleigh)",
                    "p_3(Hadleigh)",
                    "p_1(Hadleigh)",
                    "-p_0(Hadleigh)",
                    "(-(p_2(Hadleigh) <-> p_3(Hadleigh))) -> p_13(Hadleigh)",
                    "p_13(Hadleigh)",
                    "p_13(Hadleigh) -> (p_10(Hadleigh) & p_14(Hadleigh))",
                    "-(p_12(Hadleigh) <-> p_11(Hadleigh))",
                    "-(p_7(Hadleigh) <-> p_9(Hadleigh))",
                    "(p_7(Hadleigh) -> p_8(Hadleigh))",
                    "(-(p_5(Hadleigh) <-> p_6(Hadleigh))) -> -p_4(Hadleigh)",
                    "p_8(Hadleigh)",
                    "p_14(Hadleigh)",
                    "-p_9(Hadleigh)",
                    "p_7(Hadleigh)",
                    "-p_12(Hadleigh)",
                    "p_5(Hadleigh)",
                    "p_7(Hadleigh) -> p_6(Hadleigh)",
                    "(p_5(Hadleigh) & p_6(Hadleigh)) -> p_4(Hadleigh)"
                ],
                "formulas(goals)": [
                    "-(-p_4(Hadleigh))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_7(Hadleigh) \u2192 p_8(Hadleigh)) \u2227 (p_7(Hadleigh) \u2192 \u00acp_6(Hadleigh))",
                    "p_5(Hadleigh) \u2192 \u00acp_6(Hadleigh)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Hadleigh) \u2192 p_8(Hadleigh)",
                    "p_7(Hadleigh) \u2192 p_6(Hadleigh)",
                    "(p_5(Hadleigh) \u2227 p_6(Hadleigh)) \u2192 p_4(Hadleigh)"
                ]
            }
        }
    ]
}