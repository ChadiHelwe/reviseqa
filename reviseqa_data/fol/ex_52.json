{
    "background_story": "Kimber, a dedicated fitness instructor, opened her own yoga studio with the goal of bringing health benefits to her community. She designed classes for all ages and abilities, from meditation for seniors to energetic sessions for children. Kimber's studio quickly became a hub for wellness, offering workshops on nutrition and mindfulness. Her efforts didn't go unnoticed; soon, local businesses began to take notice of the positive impact her studio was having on employees' productivity and overall well-being. Companies started to offer her classes as a benefit to their employees, recognizing the value of a healthy workforce. Kimber's passion for yoga had created a ripple effect, benefiting not just her students, but the community at large.",
    "predicates": [
        {
            "id": 0,
            "name": "offers_workshops"
        },
        {
            "id": 1,
            "name": "improve_lives"
        },
        {
            "id": 2,
            "name": "eats_healthy"
        },
        {
            "id": 3,
            "name": "has_certification"
        },
        {
            "id": 4,
            "name": "gets_enough_rest"
        },
        {
            "id": 5,
            "name": "practices_yoga"
        },
        {
            "id": 6,
            "name": "values_wellness"
        },
        {
            "id": 7,
            "name": "teach_fitness"
        },
        {
            "id": 8,
            "name": "promote_health"
        },
        {
            "id": 9,
            "name": "enjoys_exercise"
        },
        {
            "id": 10,
            "name": "stays_active"
        },
        {
            "id": 11,
            "name": "owns_studio"
        },
        {
            "id": 12,
            "name": "helps_others"
        },
        {
            "id": 13,
            "name": "eats_nutritious"
        },
        {
            "id": 14,
            "name": "exercises_regularly"
        },
        {
            "id": 15,
            "name": "trains_coaches"
        },
        {
            "id": 16,
            "name": "runs_daily"
        },
        {
            "id": 17,
            "name": "lifts_weights"
        },
        {
            "id": 18,
            "name": "has_routine"
        },
        {
            "id": 19,
            "name": "joins_club"
        }
    ],
    "subject_name": "Kimber",
    "subject_category": "human",
    "keyword": "benefit",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kimber",
            "text": "Kimber offers workshops.",
            "fol": "p_0(Kimber)",
            "str_fol": "offers_workshops(Kimber)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kimber",
            "text": "Kimber improves lives.",
            "fol": "p_1(Kimber)",
            "str_fol": "improve_lives(Kimber)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kimber",
            "text": "Kimber eats healthy.",
            "fol": "p_2(Kimber)",
            "str_fol": "eats_healthy(Kimber)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kimber",
            "text": "Kimber has a certification.",
            "fol": "p_3(Kimber)",
            "str_fol": "has_certification(Kimber)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kimber",
            "text": "Kimber does not get enough rest.",
            "fol": "\u00acp_4(Kimber)",
            "str_fol": "\u00acgets_enough_rest(Kimber)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kimber",
            "text": "Kimber stays active.",
            "fol": "p_10(Kimber)",
            "str_fol": "stays_active(Kimber)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kimber",
            "text": "Kimber enjoys exercise.",
            "fol": "p_9(Kimber)",
            "str_fol": "enjoys_exercise(Kimber)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Kimber",
            "text": "Kimber teaches fitness.",
            "fol": "p_7(Kimber)",
            "str_fol": "teach_fitness(Kimber)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Kimber",
            "text": "Kimber practices yoga.",
            "fol": "p_5(Kimber)",
            "str_fol": "practices_yoga(Kimber)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Kimber",
            "text": "Kimber values wellness.",
            "fol": "p_6(Kimber)",
            "str_fol": "values_wellness(Kimber)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Kimber",
            "text": "Kimber does not get enough rest.",
            "fol": "\u00acp_4(Kimber)",
            "str_fol": "\u00acgets_enough_rest(Kimber)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kimber",
            "text": "Kimber eats healthy.",
            "fol": "p_2(Kimber)",
            "str_fol": "eats_healthy(Kimber)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kimber",
            "text": "Kimber has a certification.",
            "fol": "p_3(Kimber)",
            "str_fol": "has_certification(Kimber)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kimber",
            "text": "Kimber offers workshops.",
            "fol": "p_0(Kimber)",
            "str_fol": "offers_workshops(Kimber)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kimber",
            "text": "Kimber improves lives.",
            "fol": "p_1(Kimber)",
            "str_fol": "improve_lives(Kimber)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "A person either gets enough rest or stays active, but not necessarily both at the same time.",
            "fol": "\u2200x (p_4(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (gets_enough_rest(x) \u2295 stays_active(x))"
        },
        {
            "id": 4,
            "text": "If Kimber eats healthy and stays active, then she enjoys exercise.",
            "fol": "(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)",
            "str_fol": "(eats_healthy(Kimber) \u2227 stays_active(Kimber)) \u2192 enjoys_exercise(Kimber)"
        },
        {
            "id": 3,
            "text": "If Kimber has a certification or enjoys exercise, then she can teach fitness.",
            "fol": "(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)",
            "str_fol": "(has_certification(Kimber) \u2228 enjoys_exercise(Kimber)) \u2192 teach_fitness(Kimber)"
        },
        {
            "id": 2,
            "text": "Anyone who promotes health or offers workshops can improve lives.",
            "fol": "\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((promote_health(x) \u2228 offers_workshops(x)) \u2192 improve_lives(x))"
        },
        {
            "id": 1,
            "text": "If Kimber teaches fitness, then she practices yoga and promotes health.",
            "fol": "p_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))",
            "str_fol": "teach_fitness(Kimber) \u2192 (practices_yoga(Kimber) \u2227 promote_health(Kimber))"
        },
        {
            "id": 0,
            "text": "Kimber either practices yoga or values wellness (or both).",
            "fol": "p_5(Kimber) \u2228 p_6(Kimber)",
            "str_fol": "practices_yoga(Kimber) \u2228 values_wellness(Kimber)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Kimber",
            "text": "Kimber does not get enough rest.",
            "fol": "\u00acp_4(Kimber)",
            "str_fol": "\u00acgets_enough_rest(Kimber)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kimber",
            "text": "Kimber eats healthy.",
            "fol": "p_2(Kimber)",
            "str_fol": "eats_healthy(Kimber)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kimber",
            "text": "Kimber has a certification.",
            "fol": "p_3(Kimber)",
            "str_fol": "has_certification(Kimber)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kimber",
            "text": "Kimber offers workshops.",
            "fol": "p_0(Kimber)",
            "str_fol": "offers_workshops(Kimber)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kimber",
            "text": "Kimber improves lives.",
            "fol": "p_1(Kimber)",
            "str_fol": "improve_lives(Kimber)",
            "negation": false
        },
        {
            "id": 5,
            "text": "A person either gets enough rest or stays active, but not necessarily both at the same time.",
            "fol": "\u2200x (p_4(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (gets_enough_rest(x) \u2295 stays_active(x))"
        },
        {
            "id": 4,
            "text": "If Kimber eats healthy and stays active, then she enjoys exercise.",
            "fol": "(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)",
            "str_fol": "(eats_healthy(Kimber) \u2227 stays_active(Kimber)) \u2192 enjoys_exercise(Kimber)"
        },
        {
            "id": 3,
            "text": "If Kimber has a certification or enjoys exercise, then she can teach fitness.",
            "fol": "(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)",
            "str_fol": "(has_certification(Kimber) \u2228 enjoys_exercise(Kimber)) \u2192 teach_fitness(Kimber)"
        },
        {
            "id": 2,
            "text": "Anyone who promotes health or offers workshops can improve lives.",
            "fol": "\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((promote_health(x) \u2228 offers_workshops(x)) \u2192 improve_lives(x))"
        },
        {
            "id": 1,
            "text": "If Kimber teaches fitness, then she practices yoga and promotes health.",
            "fol": "p_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))",
            "str_fol": "teach_fitness(Kimber) \u2192 (practices_yoga(Kimber) \u2227 promote_health(Kimber))"
        },
        {
            "id": 0,
            "text": "Kimber either practices yoga or values wellness (or both).",
            "fol": "p_5(Kimber) \u2228 p_6(Kimber)",
            "str_fol": "practices_yoga(Kimber) \u2228 values_wellness(Kimber)"
        }
    ],
    "context_fol": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)",
    "conclusion": {
        "id": 9,
        "subject": "Kimber",
        "text": "Kimber values wellness.",
        "fol": "p_6(Kimber)",
        "str_fol": "values_wellness(Kimber)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Kimber)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kimber",
                    "text": "Kimber does not get enough rest.",
                    "fol": "\u00acp_4(Kimber)",
                    "str_fol": "\u00acgets_enough_rest(Kimber)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "A person either gets enough rest or stays active, but not necessarily both at the same time.",
                    "fol": "\u2200x (p_4(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (gets_enough_rest(x) \u2295 stays_active(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kimber",
                "text": "Kimber stays active.",
                "fol": "p_10(Kimber)",
                "str_fol": "stays_active(Kimber)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kimber",
                    "text": "Kimber eats healthy.",
                    "fol": "p_2(Kimber)",
                    "str_fol": "eats_healthy(Kimber)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Kimber",
                    "text": "Kimber stays active.",
                    "fol": "p_10(Kimber)",
                    "str_fol": "stays_active(Kimber)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Kimber eats healthy and stays active, then she enjoys exercise.",
                    "fol": "(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)",
                    "str_fol": "(eats_healthy(Kimber) \u2227 stays_active(Kimber)) \u2192 enjoys_exercise(Kimber)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kimber",
                "text": "Kimber enjoys exercise.",
                "fol": "p_9(Kimber)",
                "str_fol": "enjoys_exercise(Kimber)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kimber",
                    "text": "Kimber has a certification.",
                    "fol": "p_3(Kimber)",
                    "str_fol": "has_certification(Kimber)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Kimber",
                    "text": "Kimber enjoys exercise.",
                    "fol": "p_9(Kimber)",
                    "str_fol": "enjoys_exercise(Kimber)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Kimber has a certification or enjoys exercise, then she can teach fitness.",
                    "fol": "(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)",
                    "str_fol": "(has_certification(Kimber) \u2228 enjoys_exercise(Kimber)) \u2192 teach_fitness(Kimber)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kimber",
                "text": "Kimber teaches fitness.",
                "fol": "p_7(Kimber)",
                "str_fol": "teach_fitness(Kimber)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kimber",
                    "text": "Kimber offers workshops.",
                    "fol": "p_0(Kimber)",
                    "str_fol": "offers_workshops(Kimber)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Kimber",
                    "text": "Kimber improves lives.",
                    "fol": "p_1(Kimber)",
                    "str_fol": "improve_lives(Kimber)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who promotes health or offers workshops can improve lives.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((promote_health(x) \u2228 offers_workshops(x)) \u2192 improve_lives(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kimber",
                    "text": "Kimber teaches fitness.",
                    "fol": "p_7(Kimber)",
                    "str_fol": "teach_fitness(Kimber)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Kimber teaches fitness, then she practices yoga and promotes health.",
                    "fol": "p_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))",
                    "str_fol": "teach_fitness(Kimber) \u2192 (practices_yoga(Kimber) \u2227 promote_health(Kimber))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kimber",
                "text": "Kimber practices yoga.",
                "fol": "p_5(Kimber)",
                "str_fol": "practices_yoga(Kimber)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Kimber",
                    "text": "Kimber practices yoga.",
                    "fol": "p_5(Kimber)",
                    "str_fol": "practices_yoga(Kimber)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Kimber either practices yoga or values wellness (or both).",
                    "fol": "p_5(Kimber) \u2228 p_6(Kimber)",
                    "str_fol": "practices_yoga(Kimber) \u2228 values_wellness(Kimber)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_4(Kimber)",
                    "p_2(Kimber)",
                    "p_3(Kimber)",
                    "p_0(Kimber)",
                    "p_1(Kimber)",
                    "all x (p_4(x) <-> \u00acp_10(x))",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber)",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber)",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x))",
                    "p_7(Kimber) -> (p_5(Kimber) & p_8(Kimber))",
                    "p_5(Kimber) | p_6(Kimber)",
                    "p_1(Kimber) -> p_6(Kimber)"
                ],
                "formulas(goals)": [
                    "p_6(Kimber)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_1(Kimber) \u2192 p_6(Kimber)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x \u00ac(p_4(x) \u2194 p_10(x))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)\np_6(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kimber)",
                    "p_2(Kimber)",
                    "p_3(Kimber)",
                    "p_0(Kimber)",
                    "p_1(Kimber)",
                    "all x (-(p_4(x) <-> p_10(x)))",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber)",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber)",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x))",
                    "p_7(Kimber) -> (p_5(Kimber) & p_8(Kimber))",
                    "p_5(Kimber) | p_6(Kimber)",
                    "p_6(Kimber)"
                ],
                "formulas(goals)": [
                    "p_6(Kimber)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Kimber)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x ((p_4(x) \u2227 \u00acp_10(x)) \u2228 (\u00acp_4(x) \u2227 p_10(x)))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)\np_6(Kimber)\np_10(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kimber).",
                    "p_2(Kimber).",
                    "p_3(Kimber).",
                    "p_0(Kimber).",
                    "p_1(Kimber).",
                    "all x ((p_4(x) & -p_10(x)) | (-p_4(x) & p_10(x))).",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber).",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber).",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x)).",
                    "p_7(Kimber) -> (p_5(Kimber) & p_8(Kimber)).",
                    "p_5(Kimber) | p_6(Kimber).",
                    "p_6(Kimber).",
                    "p_10(Kimber)."
                ],
                "formulas(goals)": [
                    "p_6(Kimber)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x \u00ac(p_4(x) \u2194 p_10(x))"
                ],
                "added_facts": [
                    "p_10(Kimber)"
                ],
                "added_rules": [
                    "\u2200x ((p_4(x) \u2227 \u00acp_10(x)) \u2228 (\u00acp_4(x) \u2227 p_10(x)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x ((p_4(x) \u2227 \u00acp_10(x)) \u2228 (\u00acp_4(x) \u2227 p_10(x)))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)\np_10(Kimber)\np_5(Kimber) \u2192 \u00acp_6(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kimber)",
                    "p_2(Kimber)",
                    "p_3(Kimber)",
                    "p_0(Kimber)",
                    "p_1(Kimber)",
                    "all x ((p_4(x) & -p_10(x)) | (-p_4(x) & p_10(x)))",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber)",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber)",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x))",
                    "p_7(Kimber) -> (p_5(Kimber) & p_8(Kimber))",
                    "p_5(Kimber) | p_6(Kimber)",
                    "p_10(Kimber)",
                    "p_5(Kimber) -> -p_6(Kimber)"
                ],
                "formulas(goals)": [
                    "-p_6(Kimber)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Kimber)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Kimber) \u2192 \u00acp_6(Kimber)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x ((p_4(x) \u2227 \u00acp_10(x)) \u2228 (\u00acp_4(x) \u2227 p_10(x)))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)\np_10(Kimber)\np_10(Kimber) \u2192 p_6(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kimber)",
                    "p_2(Kimber)",
                    "p_3(Kimber)",
                    "p_0(Kimber)",
                    "p_1(Kimber)",
                    "all x ((p_4(x) & -p_10(x)) | (-p_4(x) & p_10(x)))",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber)",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber)",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x))",
                    "p_7(Kimber) -> (p_5(Kimber) & p_8(Kimber))",
                    "p_5(Kimber) | p_6(Kimber)",
                    "p_10(Kimber)",
                    "p_10(Kimber) -> p_6(Kimber)"
                ],
                "formulas(goals)": [
                    "p_6(Kimber)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Kimber) \u2192 \u00acp_6(Kimber)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Kimber) \u2192 p_6(Kimber)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x ((p_4(x) \u2227 \u00acp_10(x)) \u2228 (\u00acp_4(x) \u2227 p_10(x)))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))\np_5(Kimber) \u2228 p_6(Kimber)\np_10(Kimber)\np_5(Kimber) \u2192 \u00acp_6(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kimber)",
                    "p_2(Kimber)",
                    "p_3(Kimber)",
                    "p_0(Kimber)",
                    "p_1(Kimber)",
                    "all x ((p_4(x) & -p_10(x)) | (-p_4(x) & p_10(x)))",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber)",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber)",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x))",
                    "p_7(Kimber) -> (p_5(Kimber) & p_8(Kimber))",
                    "p_5(Kimber) | p_6(Kimber)",
                    "p_10(Kimber)",
                    "p_5(Kimber) -> -p_6(Kimber)"
                ],
                "formulas(goals)": [
                    "-p_6(Kimber)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Kimber) \u2192 p_6(Kimber)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Kimber) \u2192 \u00acp_6(Kimber)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Kimber)\np_2(Kimber)\np_3(Kimber)\np_0(Kimber)\np_1(Kimber)\n\u2200x ((p_4(x) \u2227 \u00acp_10(x)) \u2228 (\u00acp_4(x) \u2227 p_10(x)))\n(p_2(Kimber) \u2227 p_10(Kimber)) \u2192 p_9(Kimber)\n(p_3(Kimber) \u2228 p_9(Kimber)) \u2192 p_7(Kimber)\n\u2200x ((p_8(x) \u2228 p_0(x)) \u2192 p_1(x))\np_5(Kimber) \u2228 p_6(Kimber)\np_10(Kimber)\np_5(Kimber) \u2192 \u00acp_6(Kimber)\np_7(Kimber) \u2192 \u00acp_5(Kimber)",
            "Initial Goal": "p_6(Kimber)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Kimber).",
                    "p_2(Kimber).",
                    "p_3(Kimber).",
                    "p_0(Kimber).",
                    "p_1(Kimber).",
                    "all x ((p_4(x) & -p_10(x)) | (-p_4(x) & p_10(x))).",
                    "(p_2(Kimber) & p_10(Kimber)) -> p_9(Kimber).",
                    "(p_3(Kimber) | p_9(Kimber)) -> p_7(Kimber).",
                    "all x ((p_8(x) | p_0(x)) -> p_1(x)).",
                    "p_5(Kimber) | p_6(Kimber).",
                    "p_10(Kimber).",
                    "p_5(Kimber) -> -p_6(Kimber).",
                    "p_7(Kimber) -> -p_5(Kimber)."
                ],
                "formulas(goals)": [
                    "p_6(Kimber)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Kimber) \u2192 (p_5(Kimber) \u2227 p_8(Kimber))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Kimber) \u2192 \u00acp_5(Kimber)"
                ]
            }
        }
    ]
}