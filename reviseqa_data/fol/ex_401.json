{
    "background_story": "Kehlani was a renowned botanist with a passion for the ancient and obscure. Her life's work focused on the Anthocerotopsida, a division of hornworts that have remained largely unchanged since the Devonian period. Kehlani spent years studying these enigmatic plants, unraveling their secrets and advocating for their conservation. Her groundbreaking research on the unique characteristics of Anthocerotopsida led to a deeper understanding of plant evolution and diversity. Kehlani's dedication to her field earned her numerous accolades, including the prestigious Botany Award. She continued to explore the world, discovering new species and inspiring a new generation of botanists to follow in her footsteps, ensuring the fascinating world of Anthocerotopsida remained a vibrant area of study.",
    "predicates": [
        {
            "id": 0,
            "name": "investigate_evolution"
        },
        {
            "id": 1,
            "name": "examines_specimens"
        },
        {
            "id": 2,
            "name": "teach_others"
        },
        {
            "id": 3,
            "name": "understands_ecology"
        },
        {
            "id": 4,
            "name": "documents_flora"
        },
        {
            "id": 5,
            "name": "explores_ecosystems"
        },
        {
            "id": 6,
            "name": "observes_mosses"
        },
        {
            "id": 7,
            "name": "study_rare_plants"
        },
        {
            "id": 8,
            "name": "research_common_species"
        },
        {
            "id": 9,
            "name": "respected_expert"
        },
        {
            "id": 10,
            "name": "discover_new_species"
        },
        {
            "id": 11,
            "name": "classify_plants"
        },
        {
            "id": 12,
            "name": "analyzes_data"
        },
        {
            "id": 13,
            "name": "collects_samples"
        },
        {
            "id": 14,
            "name": "identifies_fungi"
        },
        {
            "id": 15,
            "name": "focus_on_flora"
        },
        {
            "id": 16,
            "name": "knows_taxonomy"
        },
        {
            "id": 17,
            "name": "publish_papers"
        },
        {
            "id": 18,
            "name": "explore_biodiversity"
        },
        {
            "id": 19,
            "name": "focus_on_genetics"
        },
        {
            "id": 20,
            "name": "has_knowledge"
        },
        {
            "id": 21,
            "name": "uses_microscope"
        },
        {
            "id": 22,
            "name": "explores_nature"
        },
        {
            "id": 23,
            "name": "documents_findings"
        },
        {
            "id": 24,
            "name": "examines_trees"
        }
    ],
    "subject_name": "Kehlani",
    "subject_category": "botanist",
    "keyword": "anthoceropsida",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kehlani",
            "text": "Kehlani investigates evolution.",
            "fol": "p_0(Kehlani)",
            "str_fol": "investigate_evolution(Kehlani)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kehlani",
            "text": "Kehlani does not examine specimens.",
            "fol": "\u00acp_1(Kehlani)",
            "str_fol": "\u00acexamines_specimens(Kehlani)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kehlani",
            "text": "Kehlani teaches others.",
            "fol": "p_2(Kehlani)",
            "str_fol": "teach_others(Kehlani)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kehlani",
            "text": "Kehlani does not understand ecology.",
            "fol": "\u00acp_3(Kehlani)",
            "str_fol": "\u00acunderstands_ecology(Kehlani)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Kehlani",
            "text": "Kehlani does not document flora.",
            "fol": "\u00acp_4(Kehlani)",
            "str_fol": "\u00acdocuments_flora(Kehlani)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Kehlani",
            "text": "Kehlani explores ecosystems.",
            "fol": "p_5(Kehlani)",
            "str_fol": "explores_ecosystems(Kehlani)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kehlani",
            "text": "Kehlani does not observe mosses.",
            "fol": "\u00acp_6(Kehlani)",
            "str_fol": "\u00acobserves_mosses(Kehlani)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kehlani",
            "text": "Kehlani identifies fungi.",
            "fol": "p_14(Kehlani)",
            "str_fol": "identifies_fungi(Kehlani)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Kehlani",
            "text": "Kehlani collects samples.",
            "fol": "p_13(Kehlani)",
            "str_fol": "collects_samples(Kehlani)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Kehlani",
            "text": "Kehlani analyzes data.",
            "fol": "p_12(Kehlani)",
            "str_fol": "analyzes_data(Kehlani)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Kehlani",
            "text": "Kehlani classifies plants.",
            "fol": "p_11(Kehlani)",
            "str_fol": "classify_plants(Kehlani)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Kehlani",
            "text": "Kehlani does not discover new species.",
            "fol": "\u00acp_10(Kehlani)",
            "str_fol": "\u00acdiscover_new_species(Kehlani)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Kehlani",
            "text": "Kehlani is not a respected expert.",
            "fol": "\u00acp_9(Kehlani)",
            "str_fol": "\u00acrespected_expert(Kehlani)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Kehlani",
            "text": "Kehlani researches common species.",
            "fol": "p_8(Kehlani)",
            "str_fol": "research_common_species(Kehlani)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Kehlani",
            "text": "Kehlani does not study rare plants.",
            "fol": "\u00acp_7(Kehlani)",
            "str_fol": "\u00acstudy_rare_plants(Kehlani)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Kehlani",
            "text": "Kehlani explores ecosystems.",
            "fol": "p_5(Kehlani)",
            "str_fol": "explores_ecosystems(Kehlani)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kehlani",
            "text": "Kehlani does not observe mosses.",
            "fol": "\u00acp_6(Kehlani)",
            "str_fol": "\u00acobserves_mosses(Kehlani)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Kehlani",
            "text": "Kehlani does not document flora.",
            "fol": "\u00acp_4(Kehlani)",
            "str_fol": "\u00acdocuments_flora(Kehlani)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kehlani",
            "text": "Kehlani does not understand ecology.",
            "fol": "\u00acp_3(Kehlani)",
            "str_fol": "\u00acunderstands_ecology(Kehlani)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kehlani",
            "text": "Kehlani does not examine specimens.",
            "fol": "\u00acp_1(Kehlani)",
            "str_fol": "\u00acexamines_specimens(Kehlani)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kehlani",
            "text": "Kehlani teaches others.",
            "fol": "p_2(Kehlani)",
            "str_fol": "teach_others(Kehlani)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kehlani",
            "text": "Kehlani investigates evolution.",
            "fol": "p_0(Kehlani)",
            "str_fol": "investigate_evolution(Kehlani)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Kehlani explores ecosystems, then she either observes mosses or identifies fungi, but not both.",
            "fol": "p_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))",
            "str_fol": "explores_ecosystems(Kehlani) \u2192 (observes_mosses(Kehlani) \u2295 identifies_fungi(Kehlani))"
        },
        {
            "id": 6,
            "text": "If Kehlani either identifies fungi or documents flora (but not both), then she collects samples.",
            "fol": "(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)",
            "str_fol": "(identifies_fungi(Kehlani) \u2295 documents_flora(Kehlani)) \u2192 collects_samples(Kehlani)"
        },
        {
            "id": 5,
            "text": "If Kehlani either analyzes data or collects samples (but not both), then she understands ecology.",
            "fol": "(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)",
            "str_fol": "(analyzes_data(Kehlani) \u2295 collects_samples(Kehlani)) \u2192 understands_ecology(Kehlani)"
        },
        {
            "id": 4,
            "text": "Any botanist who examines specimens or analyzes data can classify plants.",
            "fol": "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((examines_specimens(x) \u2228 analyzes_data(x)) \u2192 classify_plants(x))"
        },
        {
            "id": 3,
            "text": "A botanist either classifies plants or discovers new species, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (classify_plants(x) \u2295 discover_new_species(x))"
        },
        {
            "id": 2,
            "text": "Kehlani is either a respected expert or teaches others, but not both.",
            "fol": "p_2(Kehlani) \u2295 p_9(Kehlani)",
            "str_fol": "teach_others(Kehlani) \u2295 respected_expert(Kehlani)"
        },
        {
            "id": 1,
            "text": "Every botanist who investigates evolution either researches common species or discovers new species.",
            "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (investigate_evolution(x) \u2192 (research_common_species(x) \u2228 discover_new_species(x)))"
        },
        {
            "id": 0,
            "text": "If Kehlani either studies rare plants or researches common species (but not both), then she is a respected expert.",
            "fol": "(p_7(Kehlani) \u2295 p_8(Kehlani)) \u2192 p_9(Kehlani)",
            "str_fol": "(study_rare_plants(Kehlani) \u2295 research_common_species(Kehlani)) \u2192 respected_expert(Kehlani)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Kehlani",
            "text": "Kehlani explores ecosystems.",
            "fol": "p_5(Kehlani)",
            "str_fol": "explores_ecosystems(Kehlani)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kehlani",
            "text": "Kehlani does not observe mosses.",
            "fol": "\u00acp_6(Kehlani)",
            "str_fol": "\u00acobserves_mosses(Kehlani)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Kehlani",
            "text": "Kehlani does not document flora.",
            "fol": "\u00acp_4(Kehlani)",
            "str_fol": "\u00acdocuments_flora(Kehlani)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kehlani",
            "text": "Kehlani does not understand ecology.",
            "fol": "\u00acp_3(Kehlani)",
            "str_fol": "\u00acunderstands_ecology(Kehlani)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kehlani",
            "text": "Kehlani does not examine specimens.",
            "fol": "\u00acp_1(Kehlani)",
            "str_fol": "\u00acexamines_specimens(Kehlani)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kehlani",
            "text": "Kehlani teaches others.",
            "fol": "p_2(Kehlani)",
            "str_fol": "teach_others(Kehlani)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Kehlani",
            "text": "Kehlani investigates evolution.",
            "fol": "p_0(Kehlani)",
            "str_fol": "investigate_evolution(Kehlani)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Kehlani explores ecosystems, then she either observes mosses or identifies fungi, but not both.",
            "fol": "p_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))",
            "str_fol": "explores_ecosystems(Kehlani) \u2192 (observes_mosses(Kehlani) \u2295 identifies_fungi(Kehlani))"
        },
        {
            "id": 6,
            "text": "If Kehlani either identifies fungi or documents flora (but not both), then she collects samples.",
            "fol": "(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)",
            "str_fol": "(identifies_fungi(Kehlani) \u2295 documents_flora(Kehlani)) \u2192 collects_samples(Kehlani)"
        },
        {
            "id": 5,
            "text": "If Kehlani either analyzes data or collects samples (but not both), then she understands ecology.",
            "fol": "(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)",
            "str_fol": "(analyzes_data(Kehlani) \u2295 collects_samples(Kehlani)) \u2192 understands_ecology(Kehlani)"
        },
        {
            "id": 4,
            "text": "Any botanist who examines specimens or analyzes data can classify plants.",
            "fol": "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((examines_specimens(x) \u2228 analyzes_data(x)) \u2192 classify_plants(x))"
        },
        {
            "id": 3,
            "text": "A botanist either classifies plants or discovers new species, but not necessarily both.",
            "fol": "\u2200x (p_11(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (classify_plants(x) \u2295 discover_new_species(x))"
        },
        {
            "id": 2,
            "text": "Kehlani is either a respected expert or teaches others, but not both.",
            "fol": "p_2(Kehlani) \u2295 p_9(Kehlani)",
            "str_fol": "teach_others(Kehlani) \u2295 respected_expert(Kehlani)"
        },
        {
            "id": 1,
            "text": "Every botanist who investigates evolution either researches common species or discovers new species.",
            "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (investigate_evolution(x) \u2192 (research_common_species(x) \u2228 discover_new_species(x)))"
        },
        {
            "id": 0,
            "text": "If Kehlani either studies rare plants or researches common species (but not both), then she is a respected expert.",
            "fol": "(p_7(Kehlani) \u2295 p_8(Kehlani)) \u2192 p_9(Kehlani)",
            "str_fol": "(study_rare_plants(Kehlani) \u2295 research_common_species(Kehlani)) \u2192 respected_expert(Kehlani)"
        }
    ],
    "context_fol": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_7(Kehlani) \u2295 p_8(Kehlani)) \u2192 p_9(Kehlani)",
    "conclusion": {
        "id": 14,
        "subject": "Kehlani",
        "text": "Kehlani does not study rare plants.",
        "fol": "\u00acp_7(Kehlani)",
        "str_fol": "\u00acstudy_rare_plants(Kehlani)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_7(Kehlani)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Kehlani",
                    "text": "Kehlani explores ecosystems.",
                    "fol": "p_5(Kehlani)",
                    "str_fol": "explores_ecosystems(Kehlani)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Kehlani",
                    "text": "Kehlani does not observe mosses.",
                    "fol": "\u00acp_6(Kehlani)",
                    "str_fol": "\u00acobserves_mosses(Kehlani)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Kehlani explores ecosystems, then she either observes mosses or identifies fungi, but not both.",
                    "fol": "p_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))",
                    "str_fol": "explores_ecosystems(Kehlani) \u2192 (observes_mosses(Kehlani) \u2295 identifies_fungi(Kehlani))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kehlani",
                "text": "Kehlani identifies fungi.",
                "fol": "p_14(Kehlani)",
                "str_fol": "identifies_fungi(Kehlani)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kehlani",
                    "text": "Kehlani identifies fungi.",
                    "fol": "p_14(Kehlani)",
                    "str_fol": "identifies_fungi(Kehlani)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Kehlani",
                    "text": "Kehlani does not document flora.",
                    "fol": "\u00acp_4(Kehlani)",
                    "str_fol": "\u00acdocuments_flora(Kehlani)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Kehlani either identifies fungi or documents flora (but not both), then she collects samples.",
                    "fol": "(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)",
                    "str_fol": "(identifies_fungi(Kehlani) \u2295 documents_flora(Kehlani)) \u2192 collects_samples(Kehlani)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kehlani",
                "text": "Kehlani collects samples.",
                "fol": "p_13(Kehlani)",
                "str_fol": "collects_samples(Kehlani)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Kehlani",
                    "text": "Kehlani collects samples.",
                    "fol": "p_13(Kehlani)",
                    "str_fol": "collects_samples(Kehlani)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Kehlani",
                    "text": "Kehlani does not understand ecology.",
                    "fol": "\u00acp_3(Kehlani)",
                    "str_fol": "\u00acunderstands_ecology(Kehlani)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Kehlani either analyzes data or collects samples (but not both), then she understands ecology.",
                    "fol": "(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)",
                    "str_fol": "(analyzes_data(Kehlani) \u2295 collects_samples(Kehlani)) \u2192 understands_ecology(Kehlani)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Kehlani",
                "text": "Kehlani analyzes data.",
                "fol": "p_12(Kehlani)",
                "str_fol": "analyzes_data(Kehlani)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Kehlani",
                    "text": "Kehlani does not examine specimens.",
                    "fol": "\u00acp_1(Kehlani)",
                    "str_fol": "\u00acexamines_specimens(Kehlani)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Kehlani",
                    "text": "Kehlani analyzes data.",
                    "fol": "p_12(Kehlani)",
                    "str_fol": "analyzes_data(Kehlani)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any botanist who examines specimens or analyzes data can classify plants.",
                    "fol": "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((examines_specimens(x) \u2228 analyzes_data(x)) \u2192 classify_plants(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Kehlani",
                "text": "Kehlani classifies plants.",
                "fol": "p_11(Kehlani)",
                "str_fol": "classify_plants(Kehlani)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Kehlani",
                    "text": "Kehlani classifies plants.",
                    "fol": "p_11(Kehlani)",
                    "str_fol": "classify_plants(Kehlani)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "A botanist either classifies plants or discovers new species, but not necessarily both.",
                    "fol": "\u2200x (p_11(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (classify_plants(x) \u2295 discover_new_species(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Kehlani",
                "text": "Kehlani does not discover new species.",
                "fol": "\u00acp_10(Kehlani)",
                "str_fol": "\u00acdiscover_new_species(Kehlani)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kehlani",
                    "text": "Kehlani teaches others.",
                    "fol": "p_2(Kehlani)",
                    "str_fol": "teach_others(Kehlani)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Kehlani is either a respected expert or teaches others, but not both.",
                    "fol": "p_2(Kehlani) \u2295 p_9(Kehlani)",
                    "str_fol": "teach_others(Kehlani) \u2295 respected_expert(Kehlani)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Kehlani",
                "text": "Kehlani is not a respected expert.",
                "fol": "\u00acp_9(Kehlani)",
                "str_fol": "\u00acrespected_expert(Kehlani)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kehlani",
                    "text": "Kehlani investigates evolution.",
                    "fol": "p_0(Kehlani)",
                    "str_fol": "investigate_evolution(Kehlani)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Kehlani",
                    "text": "Kehlani does not discover new species.",
                    "fol": "\u00acp_10(Kehlani)",
                    "str_fol": "\u00acdiscover_new_species(Kehlani)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every botanist who investigates evolution either researches common species or discovers new species.",
                    "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (investigate_evolution(x) \u2192 (research_common_species(x) \u2228 discover_new_species(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Kehlani",
                "text": "Kehlani researches common species.",
                "fol": "p_8(Kehlani)",
                "str_fol": "research_common_species(Kehlani)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Kehlani",
                    "text": "Kehlani researches common species.",
                    "fol": "p_8(Kehlani)",
                    "str_fol": "research_common_species(Kehlani)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Kehlani",
                    "text": "Kehlani is not a respected expert.",
                    "fol": "\u00acp_9(Kehlani)",
                    "str_fol": "\u00acrespected_expert(Kehlani)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Kehlani either studies rare plants or researches common species (but not both), then she is a respected expert.",
                    "fol": "(p_7(Kehlani) \u2295 p_8(Kehlani)) \u2192 p_9(Kehlani)",
                    "str_fol": "(study_rare_plants(Kehlani) \u2295 research_common_species(Kehlani)) \u2192 respected_expert(Kehlani)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Kehlani",
                "text": "Kehlani does not study rare plants.",
                "fol": "\u00acp_7(Kehlani)",
                "str_fol": "\u00acstudy_rare_plants(Kehlani)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 p_5(Kehlani) -> -(p_6(Kehlani) <-> p_14(Kehlani)).  [assumption].\n2 -(p_14(Kehlani) <-> p_4(Kehlani)) -> p_13(Kehlani).  [assumption].\n3 -(p_12(Kehlani) <-> p_13(Kehlani)) -> p_3(Kehlani).  [assumption].\n4 (all x (p_1(x) | p_12(x) -> p_11(x))).  [assumption].\n5 (all x -(p_11(x) <-> p_10(x))).  [assumption].\n6 -(p_2(Kehlani) <-> p_9(Kehlani)).  [assumption].\n7 (all x (p_0(x) -> p_8(x) | p_10(x))).  [assumption].\n8 -(p_7(Kehlani) <-> p_8(Kehlani)) -> p_9(Kehlani).  [assumption].\n9 --p_7(Kehlani).  [goal].\n10 -p_5(Kehlani) | p_6(Kehlani) | p_14(Kehlani).  [clausify(1)].\n11 p_5(Kehlani).  [assumption].\n13 p_6(Kehlani) | p_14(Kehlani).  [resolve(10,a,11,a)].\n14 -p_6(Kehlani).  [assumption].\n16 -p_14(Kehlani) | p_4(Kehlani) | p_13(Kehlani).  [clausify(2)].\n17 -p_4(Kehlani).  [assumption].\n20 -p_3(Kehlani).  [assumption].\n21 p_12(Kehlani) | -p_13(Kehlani) | p_3(Kehlani).  [clausify(3)].\n22 -p_2(Kehlani) | -p_9(Kehlani).  [clausify(6)].\n23 p_2(Kehlani).  [assumption].\n25 -p_0(x) | p_8(x) | p_10(x).  [clausify(7)].\n26 p_0(Kehlani).  [assumption].\n27 p_12(Kehlani) | -p_13(Kehlani).  [resolve(21,c,20,a)].\n28 -p_12(x) | p_11(x).  [clausify(4)].\n30 -p_11(x) | -p_10(x).  [clausify(5)].\n32 -p_13(Kehlani) | p_11(Kehlani).  [resolve(27,a,28,a)].\n33 p_7(Kehlani) | -p_8(Kehlani) | p_9(Kehlani).  [clausify(8)].\n35 -p_7(Kehlani).  [deny(9)].\n36 -p_14(Kehlani) | p_13(Kehlani).  [resolve(16,b,17,a)].\n37 p_14(Kehlani).  [resolve(13,a,14,a)].\n38 -p_8(Kehlani) | p_9(Kehlani).  [resolve(35,a,33,a)].\n39 -p_9(Kehlani).  [resolve(22,a,23,a)].\n40 -p_8(Kehlani).  [resolve(38,b,39,a)].\n41 p_8(Kehlani) | p_10(Kehlani).  [resolve(25,a,26,a)].\n42 p_13(Kehlani).  [resolve(36,a,37,a)].\n43 -p_13(Kehlani) | -p_10(Kehlani).  [resolve(32,b,30,a)].\n44 -p_10(Kehlani).  [resolve(42,a,43,a)].\n45 p_10(Kehlani).  [resolve(40,a,41,a)].\n46 $F.  [resolve(44,a,45,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 \u00acp_7(Kehlani)",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani).",
                    "-p_6(Kehlani).",
                    "-p_4(Kehlani).",
                    "-p_3(Kehlani).",
                    "-p_1(Kehlani).",
                    "p_2(Kehlani).",
                    "p_0(Kehlani).",
                    "p_5(Kehlani) -> (-(p_6(Kehlani) <-> p_14(Kehlani))).",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani).",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani).",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x)).",
                    "all x (-(p_11(x) <-> p_10(x))).",
                    "-(p_2(Kehlani) <-> p_9(Kehlani)).",
                    "all x (p_0(x) -> (p_8(x) | p_10(x))).",
                    "(p_2(Kehlani) & p_0(Kehlani)) -> -p_7(Kehlani)."
                ],
                "formulas(goals)": [
                    "-p_7(Kehlani)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_7(Kehlani) \u2295 p_8(Kehlani)) \u2192 p_9(Kehlani)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 \u00acp_7(Kehlani)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 \u00acp_7(Kehlani)\np_14(Kehlani)\np_8(Kehlani) \u2228 p_10(Kehlani)\n\u00acp_9(Kehlani)\np_0(Kehlani) \u2228 \u00acp_0(Kehlani)",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani)",
                    "-p_6(Kehlani)",
                    "-p_4(Kehlani)",
                    "-p_3(Kehlani)",
                    "-p_1(Kehlani)",
                    "p_2(Kehlani)",
                    "p_0(Kehlani)",
                    "p_5(Kehlani) -> (-(p_6(Kehlani) <-> p_14(Kehlani)))",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani)",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani)",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "-(p_2(Kehlani) <-> p_9(Kehlani))",
                    "all x (p_0(x) -> (p_8(x) | p_10(x)))",
                    "((p_2(Kehlani) & p_0(Kehlani)) -> -p_7(Kehlani))",
                    "p_14(Kehlani)",
                    "p_8(Kehlani) | p_10(Kehlani)",
                    "-p_9(Kehlani)",
                    "p_0(Kehlani) | -p_0(Kehlani)"
                ],
                "formulas(goals)": [
                    "-p_7(Kehlani)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Kehlani)",
                    "p_8(Kehlani) \u2228 p_10(Kehlani)",
                    "\u00acp_9(Kehlani)",
                    "p_0(Kehlani) \u2228 \u00acp_0(Kehlani)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\np_6(Kehlani) \u2295 p_14(Kehlani)\n\u00ac(p_6(Kehlani) \u2295 p_14(Kehlani)) \u2192 \u00acp_5(Kehlani)\np_5(Kehlani) \u2192 ((p_6(Kehlani) \u2228 p_14(Kehlani)) \u2227 \u00ac(p_6(Kehlani) \u2227 p_14(Kehlani)))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (\u00acp_11(x) \u2192 \u00ac(p_1(x) \u2228 p_12(x)))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n\u2200x (\u00ac(p_8(x) \u2228 p_10(x)) \u2192 \u00acp_0(x))\n\u00ac(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2228 \u00acp_7(Kehlani)\n(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 \u00acp_7(Kehlani)\np_14(Kehlani)\n\u00ac\u00acp_14(Kehlani)\np_14(Kehlani) \u2228 p_14(Kehlani)\np_14(Kehlani) \u2227 p_14(Kehlani)\np_8(Kehlani) \u2228 p_10(Kehlani)\n\u00acp_9(Kehlani)\np_0(Kehlani) \u2228 \u00acp_0(Kehlani)",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani)",
                    "-p_6(Kehlani)",
                    "-p_4(Kehlani)",
                    "-p_3(Kehlani)",
                    "-p_1(Kehlani)",
                    "p_2(Kehlani)",
                    "p_0(Kehlani)",
                    "p_5(Kehlani) -> (-(p_6(Kehlani) <-> p_14(Kehlani)))",
                    "(-(p_6(Kehlani) <-> p_14(Kehlani)))",
                    "(-(-(p_6(Kehlani) <-> p_14(Kehlani)))) -> -p_5(Kehlani)",
                    "p_5(Kehlani) -> ((p_6(Kehlani) | p_14(Kehlani)) & -(p_6(Kehlani) & p_14(Kehlani)))",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani)",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani)",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x))",
                    "all x (-p_11(x) -> -(p_1(x) | p_12(x)))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "(-(p_2(Kehlani) <-> p_9(Kehlani)))",
                    "all x (p_0(x) -> (p_8(x) | p_10(x)))",
                    "all x (-(p_8(x) | p_10(x)) -> -p_0(x))",
                    "-(p_2(Kehlani) & p_0(Kehlani)) | -p_7(Kehlani)",
                    "(p_2(Kehlani) & p_0(Kehlani)) -> -p_7(Kehlani)",
                    "p_14(Kehlani)",
                    "--p_14(Kehlani)",
                    "p_14(Kehlani) | p_14(Kehlani)",
                    "p_14(Kehlani) & p_14(Kehlani)",
                    "p_8(Kehlani) | p_10(Kehlani)",
                    "-p_9(Kehlani)",
                    "p_0(Kehlani) | -p_0(Kehlani)"
                ],
                "formulas(goals)": [
                    "-p_7(Kehlani)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Kehlani) \u2295 p_14(Kehlani)",
                    "\u00ac\u00acp_14(Kehlani)",
                    "p_14(Kehlani) \u2228 p_14(Kehlani)",
                    "p_14(Kehlani) \u2227 p_14(Kehlani)"
                ],
                "added_rules": [
                    "\u00ac(p_6(Kehlani) \u2295 p_14(Kehlani)) \u2192 \u00acp_5(Kehlani)",
                    "p_5(Kehlani) \u2192 ((p_6(Kehlani) \u2228 p_14(Kehlani)) \u2227 \u00ac(p_6(Kehlani) \u2227 p_14(Kehlani)))",
                    "\u2200x (\u00acp_11(x) \u2192 \u00ac(p_1(x) \u2228 p_12(x)))",
                    "\u2200x (\u00ac(p_8(x) \u2228 p_10(x)) \u2192 \u00acp_0(x))",
                    "\u00ac(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2228 \u00acp_7(Kehlani)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\np_6(Kehlani) \u2295 p_14(Kehlani)\np_5(Kehlani) \u2192 ((p_6(Kehlani) \u2228 p_14(Kehlani)) \u2227 \u00ac(p_6(Kehlani) \u2227 p_14(Kehlani)))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (\u00acp_11(x) \u2192 \u00ac(p_1(x) \u2228 p_12(x)))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n\u2200x (\u00ac(p_8(x) \u2228 p_10(x)) \u2192 \u00acp_0(x))\n\u00ac(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2228 \u00acp_7(Kehlani)\n(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 \u00acp_7(Kehlani)\np_14(Kehlani)\n\u00ac\u00acp_14(Kehlani)\np_14(Kehlani) \u2228 p_14(Kehlani)\np_14(Kehlani) \u2227 p_14(Kehlani)\np_8(Kehlani) \u2228 p_10(Kehlani)\n\u00acp_9(Kehlani)\np_0(Kehlani) \u2228 \u00acp_0(Kehlani)\np_13(Kehlani)\n(p_2(Kehlani) \u2228 p_9(Kehlani)) \u2227 (\u00acp_2(Kehlani) \u2228 \u00acp_9(Kehlani))",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani)",
                    "-p_6(Kehlani)",
                    "-p_4(Kehlani)",
                    "-p_3(Kehlani)",
                    "-p_1(Kehlani)",
                    "p_2(Kehlani)",
                    "p_0(Kehlani)",
                    "p_5(Kehlani) -> (-(p_6(Kehlani) <-> p_14(Kehlani)))",
                    "-(p_6(Kehlani) <-> p_14(Kehlani))",
                    "p_5(Kehlani) -> ((p_6(Kehlani) | p_14(Kehlani)) & (-(p_6(Kehlani) & p_14(Kehlani))))",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani)",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani)",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x))",
                    "all x (-p_11(x) -> (-(p_1(x) | p_12(x))))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "-(p_2(Kehlani) <-> p_9(Kehlani))",
                    "all x (p_0(x) -> (p_8(x) | p_10(x)))",
                    "all x (-(p_8(x) | p_10(x)) -> -p_0(x))",
                    "(-(p_2(Kehlani) & p_0(Kehlani))) | -p_7(Kehlani)",
                    "((p_2(Kehlani) & p_0(Kehlani))) -> -p_7(Kehlani)",
                    "p_14(Kehlani)",
                    "--p_14(Kehlani)",
                    "p_14(Kehlani) | p_14(Kehlani)",
                    "p_14(Kehlani) & p_14(Kehlani)",
                    "p_8(Kehlani) | p_10(Kehlani)",
                    "-p_9(Kehlani)",
                    "p_0(Kehlani) | -p_0(Kehlani)",
                    "p_13(Kehlani)",
                    "(p_2(Kehlani) | p_9(Kehlani)) & (-p_2(Kehlani) | -p_9(Kehlani))"
                ],
                "formulas(goals)": [
                    "-p_7(Kehlani)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_6(Kehlani) \u2295 p_14(Kehlani)) \u2192 \u00acp_5(Kehlani)"
                ],
                "added_facts": [
                    "p_13(Kehlani)",
                    "(p_2(Kehlani) \u2228 p_9(Kehlani)) \u2227 (\u00acp_2(Kehlani) \u2228 \u00acp_9(Kehlani))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\np_6(Kehlani) \u2295 p_14(Kehlani)\np_5(Kehlani) \u2192 ((p_6(Kehlani) \u2228 p_14(Kehlani)) \u2227 \u00ac(p_6(Kehlani) \u2227 p_14(Kehlani)))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (\u00acp_11(x) \u2192 \u00ac(p_1(x) \u2228 p_12(x)))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n\u2200x (\u00ac(p_8(x) \u2228 p_10(x)) \u2192 \u00acp_0(x))\np_14(Kehlani)\n\u00ac\u00acp_14(Kehlani)\np_14(Kehlani) \u2228 p_14(Kehlani)\np_14(Kehlani) \u2227 p_14(Kehlani)\np_8(Kehlani) \u2228 p_10(Kehlani)\n\u00acp_9(Kehlani)\np_0(Kehlani) \u2228 \u00acp_0(Kehlani)\np_13(Kehlani)\n(p_2(Kehlani) \u2228 p_9(Kehlani)) \u2227 (\u00acp_2(Kehlani) \u2228 \u00acp_9(Kehlani))\n(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 p_7(Kehlani)",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani)",
                    "-p_6(Kehlani)",
                    "-p_4(Kehlani)",
                    "-p_3(Kehlani)",
                    "-p_1(Kehlani)",
                    "p_2(Kehlani)",
                    "p_0(Kehlani)",
                    "p_5(Kehlani) -> -(p_6(Kehlani) <-> p_14(Kehlani))",
                    "-(p_6(Kehlani) <-> p_14(Kehlani))",
                    "p_5(Kehlani) -> ((p_6(Kehlani) | p_14(Kehlani)) & -(p_6(Kehlani) & p_14(Kehlani)))",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani)",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani)",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x))",
                    "all x (-p_11(x) -> -(p_1(x) | p_12(x)))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "-(p_2(Kehlani) <-> p_9(Kehlani))",
                    "all x (p_0(x) -> (p_8(x) | p_10(x)))",
                    "all x (-(p_8(x) | p_10(x)) -> -p_0(x))",
                    "p_14(Kehlani)",
                    "--p_14(Kehlani)",
                    "p_14(Kehlani) | p_14(Kehlani)",
                    "p_14(Kehlani) & p_14(Kehlani)",
                    "p_8(Kehlani) | p_10(Kehlani)",
                    "-p_9(Kehlani)",
                    "p_0(Kehlani) | -p_0(Kehlani)",
                    "p_13(Kehlani)",
                    "(p_2(Kehlani) | p_9(Kehlani)) & (-p_2(Kehlani) | -p_9(Kehlani))",
                    "(p_2(Kehlani) & p_0(Kehlani)) -> p_7(Kehlani)"
                ],
                "formulas(goals)": [
                    "-(-p_7(Kehlani))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2228 \u00acp_7(Kehlani)",
                    "(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 \u00acp_7(Kehlani)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 p_7(Kehlani)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\np_6(Kehlani) \u2295 p_14(Kehlani)\np_5(Kehlani) \u2192 ((p_6(Kehlani) \u2228 p_14(Kehlani)) \u2227 \u00ac(p_6(Kehlani) \u2227 p_14(Kehlani)))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (\u00acp_11(x) \u2192 \u00ac(p_1(x) \u2228 p_12(x)))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n\u2200x (\u00ac(p_8(x) \u2228 p_10(x)) \u2192 \u00acp_0(x))\np_14(Kehlani)\n\u00ac\u00acp_14(Kehlani)\np_14(Kehlani) \u2228 p_14(Kehlani)\np_14(Kehlani) \u2227 p_14(Kehlani)\np_8(Kehlani) \u2228 p_10(Kehlani)\n\u00acp_9(Kehlani)\np_0(Kehlani) \u2228 \u00acp_0(Kehlani)\np_13(Kehlani)\n(p_2(Kehlani) \u2228 p_9(Kehlani)) \u2227 (\u00acp_2(Kehlani) \u2228 \u00acp_9(Kehlani))\np_13(Kehlani) \u2192 \u00acp_7(Kehlani)",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani)",
                    "-p_6(Kehlani)",
                    "-p_4(Kehlani)",
                    "-p_3(Kehlani)",
                    "-p_1(Kehlani)",
                    "p_2(Kehlani)",
                    "p_0(Kehlani)",
                    "p_5(Kehlani) -> (-(p_6(Kehlani) <-> p_14(Kehlani)))",
                    "-(p_6(Kehlani) <-> p_14(Kehlani))",
                    "p_5(Kehlani) -> ((p_6(Kehlani) | p_14(Kehlani)) & (-p_6(Kehlani) | -p_14(Kehlani)))",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani)",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani)",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x))",
                    "all x (-p_11(x) -> -(p_1(x) | p_12(x)))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "-(p_2(Kehlani) <-> p_9(Kehlani))",
                    "all x (p_0(x) -> (p_8(x) | p_10(x)))",
                    "all x (-(p_8(x) | p_10(x)) -> -p_0(x))",
                    "p_14(Kehlani)",
                    "--p_14(Kehlani)",
                    "p_14(Kehlani) | p_14(Kehlani)",
                    "p_14(Kehlani) & p_14(Kehlani)",
                    "p_8(Kehlani) | p_10(Kehlani)",
                    "-p_9(Kehlani)",
                    "p_0(Kehlani) | -p_0(Kehlani)",
                    "p_13(Kehlani)",
                    "(p_2(Kehlani) | p_9(Kehlani)) & (-p_2(Kehlani) | -p_9(Kehlani))",
                    "p_13(Kehlani) -> -p_7(Kehlani)"
                ],
                "formulas(goals)": [
                    "-p_7(Kehlani)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_2(Kehlani) \u2227 p_0(Kehlani)) \u2192 p_7(Kehlani)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_13(Kehlani) \u2192 \u00acp_7(Kehlani)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Kehlani)\n\u00acp_6(Kehlani)\n\u00acp_4(Kehlani)\n\u00acp_3(Kehlani)\n\u00acp_1(Kehlani)\np_2(Kehlani)\np_0(Kehlani)\np_5(Kehlani) \u2192 (p_6(Kehlani) \u2295 p_14(Kehlani))\np_6(Kehlani) \u2295 p_14(Kehlani)\np_5(Kehlani) \u2192 ((p_6(Kehlani) \u2228 p_14(Kehlani)) \u2227 \u00ac(p_6(Kehlani) \u2227 p_14(Kehlani)))\n(p_14(Kehlani) \u2295 p_4(Kehlani)) \u2192 p_13(Kehlani)\n(p_12(Kehlani) \u2295 p_13(Kehlani)) \u2192 p_3(Kehlani)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_11(x))\n\u2200x (\u00acp_11(x) \u2192 \u00ac(p_1(x) \u2228 p_12(x)))\n\u2200x (p_11(x) \u2295 p_10(x))\np_2(Kehlani) \u2295 p_9(Kehlani)\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_10(x)))\n\u2200x (\u00ac(p_8(x) \u2228 p_10(x)) \u2192 \u00acp_0(x))\np_14(Kehlani)\n\u00ac\u00acp_14(Kehlani)\np_14(Kehlani) \u2228 p_14(Kehlani)\np_14(Kehlani) \u2227 p_14(Kehlani)\np_8(Kehlani) \u2228 p_10(Kehlani)\n\u00acp_9(Kehlani)\np_0(Kehlani) \u2228 \u00acp_0(Kehlani)\np_13(Kehlani)\n(p_2(Kehlani) \u2228 p_9(Kehlani)) \u2227 (\u00acp_2(Kehlani) \u2228 \u00acp_9(Kehlani))\np_13(Kehlani) \u2192 \u00acp_7(Kehlani)\np_14(Kehlani) \u2228 p_13(Kehlani)\n\u00acp_6(Kehlani) \u2227 p_14(Kehlani)\np_13(Kehlani) \u2228 p_7(Kehlani)\n\u00acp_7(Kehlani) \u2228 p_13(Kehlani)\n\u2200x ((p_11(x) \u2228 p_10(x)) \u2227 \u00ac(p_11(x) \u2227 p_10(x)))\np_14(Kehlani) \u2227 \u00acp_4(Kehlani)",
            "Initial Goal": "\u00acp_7(Kehlani)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Kehlani)",
                    "-p_6(Kehlani)",
                    "-p_4(Kehlani)",
                    "-p_3(Kehlani)",
                    "-p_1(Kehlani)",
                    "p_2(Kehlani)",
                    "p_0(Kehlani)",
                    "p_5(Kehlani) -> -(p_6(Kehlani) <-> p_14(Kehlani))",
                    "-(p_6(Kehlani) <-> p_14(Kehlani))",
                    "p_5(Kehlani) -> ((p_6(Kehlani) | p_14(Kehlani)) & -(p_6(Kehlani) & p_14(Kehlani)))",
                    "(-(p_14(Kehlani) <-> p_4(Kehlani))) -> p_13(Kehlani)",
                    "(-(p_12(Kehlani) <-> p_13(Kehlani))) -> p_3(Kehlani)",
                    "all x ((p_1(x) | p_12(x)) -> p_11(x))",
                    "all x (-p_11(x) -> -(p_1(x) | p_12(x)))",
                    "all x (-(p_11(x) <-> p_10(x)))",
                    "-(p_2(Kehlani) <-> p_9(Kehlani))",
                    "all x (p_0(x) -> (p_8(x) | p_10(x)))",
                    "all x (-(p_8(x) | p_10(x)) -> -p_0(x))",
                    "p_14(Kehlani)",
                    "--p_14(Kehlani)",
                    "p_14(Kehlani) | p_14(Kehlani)",
                    "p_14(Kehlani) & p_14(Kehlani)",
                    "p_8(Kehlani) | p_10(Kehlani)",
                    "-p_9(Kehlani)",
                    "p_0(Kehlani) | -p_0(Kehlani)",
                    "p_13(Kehlani)",
                    "(p_2(Kehlani) | p_9(Kehlani)) & (-p_2(Kehlani) | -p_9(Kehlani))",
                    "p_13(Kehlani) -> -p_7(Kehlani)",
                    "p_14(Kehlani) | p_13(Kehlani)",
                    "-p_6(Kehlani) & p_14(Kehlani)",
                    "p_13(Kehlani) | p_7(Kehlani)",
                    "-p_7(Kehlani) | p_13(Kehlani)",
                    "all x ((p_11(x) | p_10(x)) & -(p_11(x) & p_10(x)))",
                    "p_14(Kehlani) & -p_4(Kehlani)"
                ],
                "formulas(goals)": [
                    "-p_7(Kehlani)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Kehlani) \u2228 p_13(Kehlani)",
                    "\u00acp_6(Kehlani) \u2227 p_14(Kehlani)",
                    "p_13(Kehlani) \u2228 p_7(Kehlani)",
                    "\u00acp_7(Kehlani) \u2228 p_13(Kehlani)",
                    "p_14(Kehlani) \u2227 \u00acp_4(Kehlani)"
                ],
                "added_rules": [
                    "\u2200x ((p_11(x) \u2228 p_10(x)) \u2227 \u00ac(p_11(x) \u2227 p_10(x)))"
                ]
            }
        }
    ]
}