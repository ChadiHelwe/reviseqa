{
    "background_story": "Angelo was a passionate pianist with a penchant for performing. Growing up in a family of musicians, he was practically born with a piano key in his hand. His parents, both professional pianists, recognized his prodigious talent from a young age and nurtured his growth. Angelo's practice sessions were painstakingly precise, with a focus on perfecting every phrase and pause. As he progressed, his performances became the pinnacle of piano playing, with critics praising his poetic and powerful playing style. Angelo's piano playing was not just a profession, but a pure passion that brought people together, creating a sense of peace and harmony wherever he performed.",
    "predicates": [
        {
            "id": 0,
            "name": "disciplined"
        },
        {
            "id": 1,
            "name": "talented"
        },
        {
            "id": 2,
            "name": "touches_hearts"
        },
        {
            "id": 3,
            "name": "passionate"
        },
        {
            "id": 4,
            "name": "plays_piano"
        },
        {
            "id": 5,
            "name": "rehearses"
        },
        {
            "id": 6,
            "name": "skilled"
        },
        {
            "id": 7,
            "name": "inspiring"
        },
        {
            "id": 8,
            "name": "dedicated"
        },
        {
            "id": 9,
            "name": "creative"
        },
        {
            "id": 10,
            "name": "expressive"
        },
        {
            "id": 11,
            "name": "loves_music"
        },
        {
            "id": 12,
            "name": "practices_daily"
        },
        {
            "id": 13,
            "name": "performs_well"
        },
        {
            "id": 14,
            "name": "has_vision"
        },
        {
            "id": 15,
            "name": "has_flair"
        },
        {
            "id": 16,
            "name": "sets_goals"
        },
        {
            "id": 17,
            "name": "works_hard"
        },
        {
            "id": 18,
            "name": "feels_emotion"
        },
        {
            "id": 19,
            "name": "conveys_feeling"
        },
        {
            "id": 20,
            "name": "makes_art"
        },
        {
            "id": 21,
            "name": "tracks_progress"
        },
        {
            "id": 22,
            "name": "enjoys_melody"
        },
        {
            "id": 23,
            "name": "values_harmony"
        },
        {
            "id": 24,
            "name": "learns_fast"
        }
    ],
    "subject_name": "Angelo",
    "subject_category": "human",
    "keyword": "p",
    "all_facts": [
        {
            "id": 0,
            "subject": "Angelo",
            "text": "Angelo is disciplined.",
            "fol": "p_0(Angelo)",
            "str_fol": "disciplined(Angelo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Angelo",
            "text": "Angelo is talented.",
            "fol": "p_1(Angelo)",
            "str_fol": "talented(Angelo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Angelo",
            "text": "Angelo does not touch people's hearts.",
            "fol": "\u00acp_2(Angelo)",
            "str_fol": "\u00actouches_hearts(Angelo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Angelo",
            "text": "Angelo is passionate.",
            "fol": "p_3(Angelo)",
            "str_fol": "passionate(Angelo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Angelo",
            "text": "Angelo plays the piano.",
            "fol": "p_4(Angelo)",
            "str_fol": "plays_piano(Angelo)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Angelo",
            "text": "Angelo does not rehearse.",
            "fol": "\u00acp_5(Angelo)",
            "str_fol": "\u00acrehearses(Angelo)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Angelo",
            "text": "Angelo loves music.",
            "fol": "p_11(Angelo)",
            "str_fol": "loves_music(Angelo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Angelo",
            "text": "Angelo practices daily.",
            "fol": "p_12(Angelo)",
            "str_fol": "practices_daily(Angelo)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Angelo",
            "text": "Angelo is not creative.",
            "fol": "\u00acp_9(Angelo)",
            "str_fol": "\u00accreative(Angelo)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Angelo",
            "text": "Angelo is expressive.",
            "fol": "p_10(Angelo)",
            "str_fol": "expressive(Angelo)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Angelo",
            "text": "Angelo is dedicated.",
            "fol": "p_8(Angelo)",
            "str_fol": "dedicated(Angelo)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Angelo",
            "text": "Angelo is inspiring.",
            "fol": "p_7(Angelo)",
            "str_fol": "inspiring(Angelo)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Angelo",
            "text": "Angelo is skilled.",
            "fol": "p_6(Angelo)",
            "str_fol": "skilled(Angelo)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Angelo",
            "text": "Angelo does not rehearse.",
            "fol": "\u00acp_5(Angelo)",
            "str_fol": "\u00acrehearses(Angelo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Angelo",
            "text": "Angelo plays the piano.",
            "fol": "p_4(Angelo)",
            "str_fol": "plays_piano(Angelo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Angelo",
            "text": "Angelo is talented.",
            "fol": "p_1(Angelo)",
            "str_fol": "talented(Angelo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Angelo",
            "text": "Angelo does not touch people's hearts.",
            "fol": "\u00acp_2(Angelo)",
            "str_fol": "\u00actouches_hearts(Angelo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Angelo",
            "text": "Angelo is disciplined.",
            "fol": "p_0(Angelo)",
            "str_fol": "disciplined(Angelo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Angelo",
            "text": "Angelo is passionate.",
            "fol": "p_3(Angelo)",
            "str_fol": "passionate(Angelo)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Angelo rehearses, then he will perform well.",
            "fol": "p_5(Angelo) \u2192 p_13(Angelo)",
            "str_fol": "rehearses(Angelo) \u2192 performs_well(Angelo)"
        },
        {
            "id": 6,
            "text": "Anyone who plays the piano loves music.",
            "fol": "\u2200x (p_4(x) \u2192 p_11(x))",
            "str_fol": "\u2200x (plays_piano(x) \u2192 loves_music(x))"
        },
        {
            "id": 5,
            "text": "If Angelo is talented, then he practices daily and performs well.",
            "fol": "p_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))",
            "str_fol": "talented(Angelo) \u2192 (practices_daily(Angelo) \u2227 performs_well(Angelo))"
        },
        {
            "id": 4,
            "text": "If Angelo is creative, then he touches people's hearts with his music.",
            "fol": "p_9(Angelo) \u2192 p_2(Angelo)",
            "str_fol": "creative(Angelo) \u2192 touches_hearts(Angelo)"
        },
        {
            "id": 3,
            "text": "If someone loves music and practices daily, then they are expressive.",
            "fol": "\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((loves_music(x) \u2227 practices_daily(x)) \u2192 expressive(x))"
        },
        {
            "id": 2,
            "text": "If Angelo is disciplined, then he is dedicated and expressive.",
            "fol": "p_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))",
            "str_fol": "disciplined(Angelo) \u2192 (dedicated(Angelo) \u2227 expressive(Angelo))"
        },
        {
            "id": 1,
            "text": "Anyone who is dedicated is either inspiring or creative (or both).",
            "fol": "\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (dedicated(x) \u2192 (inspiring(x) \u2228 creative(x)))"
        },
        {
            "id": 0,
            "text": "If Angelo is either passionate or skilled (but not both), then he is inspiring.",
            "fol": "(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)",
            "str_fol": "(passionate(Angelo) \u2295 skilled(Angelo)) \u2192 inspiring(Angelo)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Angelo",
            "text": "Angelo does not rehearse.",
            "fol": "\u00acp_5(Angelo)",
            "str_fol": "\u00acrehearses(Angelo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Angelo",
            "text": "Angelo plays the piano.",
            "fol": "p_4(Angelo)",
            "str_fol": "plays_piano(Angelo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Angelo",
            "text": "Angelo is talented.",
            "fol": "p_1(Angelo)",
            "str_fol": "talented(Angelo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Angelo",
            "text": "Angelo does not touch people's hearts.",
            "fol": "\u00acp_2(Angelo)",
            "str_fol": "\u00actouches_hearts(Angelo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Angelo",
            "text": "Angelo is disciplined.",
            "fol": "p_0(Angelo)",
            "str_fol": "disciplined(Angelo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Angelo",
            "text": "Angelo is passionate.",
            "fol": "p_3(Angelo)",
            "str_fol": "passionate(Angelo)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Angelo rehearses, then he will perform well.",
            "fol": "p_5(Angelo) \u2192 p_13(Angelo)",
            "str_fol": "rehearses(Angelo) \u2192 performs_well(Angelo)"
        },
        {
            "id": 6,
            "text": "Anyone who plays the piano loves music.",
            "fol": "\u2200x (p_4(x) \u2192 p_11(x))",
            "str_fol": "\u2200x (plays_piano(x) \u2192 loves_music(x))"
        },
        {
            "id": 5,
            "text": "If Angelo is talented, then he practices daily and performs well.",
            "fol": "p_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))",
            "str_fol": "talented(Angelo) \u2192 (practices_daily(Angelo) \u2227 performs_well(Angelo))"
        },
        {
            "id": 4,
            "text": "If Angelo is creative, then he touches people's hearts with his music.",
            "fol": "p_9(Angelo) \u2192 p_2(Angelo)",
            "str_fol": "creative(Angelo) \u2192 touches_hearts(Angelo)"
        },
        {
            "id": 3,
            "text": "If someone loves music and practices daily, then they are expressive.",
            "fol": "\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((loves_music(x) \u2227 practices_daily(x)) \u2192 expressive(x))"
        },
        {
            "id": 2,
            "text": "If Angelo is disciplined, then he is dedicated and expressive.",
            "fol": "p_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))",
            "str_fol": "disciplined(Angelo) \u2192 (dedicated(Angelo) \u2227 expressive(Angelo))"
        },
        {
            "id": 1,
            "text": "Anyone who is dedicated is either inspiring or creative (or both).",
            "fol": "\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (dedicated(x) \u2192 (inspiring(x) \u2228 creative(x)))"
        },
        {
            "id": 0,
            "text": "If Angelo is either passionate or skilled (but not both), then he is inspiring.",
            "fol": "(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)",
            "str_fol": "(passionate(Angelo) \u2295 skilled(Angelo)) \u2192 inspiring(Angelo)"
        }
    ],
    "context_fol": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)",
    "conclusion": {
        "id": 12,
        "subject": "Angelo",
        "text": "Angelo is skilled.",
        "fol": "p_6(Angelo)",
        "str_fol": "skilled(Angelo)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Angelo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Angelo",
                    "text": "Angelo does not rehearse.",
                    "fol": "\u00acp_5(Angelo)",
                    "str_fol": "\u00acrehearses(Angelo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Angelo rehearses, then he will perform well.",
                    "fol": "p_5(Angelo) \u2192 p_13(Angelo)",
                    "str_fol": "rehearses(Angelo) \u2192 performs_well(Angelo)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Angelo",
                    "text": "Angelo plays the piano.",
                    "fol": "p_4(Angelo)",
                    "str_fol": "plays_piano(Angelo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who plays the piano loves music.",
                    "fol": "\u2200x (p_4(x) \u2192 p_11(x))",
                    "str_fol": "\u2200x (plays_piano(x) \u2192 loves_music(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Angelo",
                "text": "Angelo loves music.",
                "fol": "p_11(Angelo)",
                "str_fol": "loves_music(Angelo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Angelo",
                    "text": "Angelo is talented.",
                    "fol": "p_1(Angelo)",
                    "str_fol": "talented(Angelo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Angelo is talented, then he practices daily and performs well.",
                    "fol": "p_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))",
                    "str_fol": "talented(Angelo) \u2192 (practices_daily(Angelo) \u2227 performs_well(Angelo))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Angelo",
                "text": "Angelo practices daily.",
                "fol": "p_12(Angelo)",
                "str_fol": "practices_daily(Angelo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Angelo",
                    "text": "Angelo does not touch people's hearts.",
                    "fol": "\u00acp_2(Angelo)",
                    "str_fol": "\u00actouches_hearts(Angelo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Angelo is creative, then he touches people's hearts with his music.",
                    "fol": "p_9(Angelo) \u2192 p_2(Angelo)",
                    "str_fol": "creative(Angelo) \u2192 touches_hearts(Angelo)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Angelo",
                "text": "Angelo is not creative.",
                "fol": "\u00acp_9(Angelo)",
                "str_fol": "\u00accreative(Angelo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Angelo",
                    "text": "Angelo loves music.",
                    "fol": "p_11(Angelo)",
                    "str_fol": "loves_music(Angelo)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Angelo",
                    "text": "Angelo practices daily.",
                    "fol": "p_12(Angelo)",
                    "str_fol": "practices_daily(Angelo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone loves music and practices daily, then they are expressive.",
                    "fol": "\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((loves_music(x) \u2227 practices_daily(x)) \u2192 expressive(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Angelo",
                "text": "Angelo is expressive.",
                "fol": "p_10(Angelo)",
                "str_fol": "expressive(Angelo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Angelo",
                    "text": "Angelo is disciplined.",
                    "fol": "p_0(Angelo)",
                    "str_fol": "disciplined(Angelo)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Angelo",
                    "text": "Angelo is expressive.",
                    "fol": "p_10(Angelo)",
                    "str_fol": "expressive(Angelo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Angelo is disciplined, then he is dedicated and expressive.",
                    "fol": "p_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))",
                    "str_fol": "disciplined(Angelo) \u2192 (dedicated(Angelo) \u2227 expressive(Angelo))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Angelo",
                "text": "Angelo is dedicated.",
                "fol": "p_8(Angelo)",
                "str_fol": "dedicated(Angelo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Angelo",
                    "text": "Angelo is dedicated.",
                    "fol": "p_8(Angelo)",
                    "str_fol": "dedicated(Angelo)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Angelo",
                    "text": "Angelo is not creative.",
                    "fol": "\u00acp_9(Angelo)",
                    "str_fol": "\u00accreative(Angelo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who is dedicated is either inspiring or creative (or both).",
                    "fol": "\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (dedicated(x) \u2192 (inspiring(x) \u2228 creative(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Angelo",
                "text": "Angelo is inspiring.",
                "fol": "p_7(Angelo)",
                "str_fol": "inspiring(Angelo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Angelo",
                    "text": "Angelo is passionate.",
                    "fol": "p_3(Angelo)",
                    "str_fol": "passionate(Angelo)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Angelo",
                    "text": "Angelo is inspiring.",
                    "fol": "p_7(Angelo)",
                    "str_fol": "inspiring(Angelo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Angelo is either passionate or skilled (but not both), then he is inspiring.",
                    "fol": "(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)",
                    "str_fol": "(passionate(Angelo) \u2295 skilled(Angelo)) \u2192 inspiring(Angelo)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Angelo).",
                    "p_4(Angelo).",
                    "p_1(Angelo).",
                    "-p_2(Angelo).",
                    "p_0(Angelo).",
                    "p_3(Angelo).",
                    "p_5(Angelo) -> p_13(Angelo).",
                    "all x (p_4(x) -> p_11(x)).",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo)).",
                    "p_9(Angelo) -> p_2(Angelo).",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x)).",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo)).",
                    "all x (p_8(x) -> (p_7(x) | p_9(x))).",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo).",
                    "(p_7(Angelo) & p_8(Angelo)) -> p_6(Angelo)."
                ],
                "formulas(goals)": [
                    "p_6(Angelo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Angelo) \u2227 p_8(Angelo)) \u2192 p_6(Angelo)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)\np_6(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Angelo)",
                    "p_4(Angelo)",
                    "p_1(Angelo)",
                    "-p_2(Angelo)",
                    "p_0(Angelo)",
                    "p_3(Angelo)",
                    "p_5(Angelo) -> p_13(Angelo)",
                    "all x (p_4(x) -> p_11(x))",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo))",
                    "p_9(Angelo) -> p_2(Angelo)",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x))",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo))",
                    "all x (p_8(x) -> (p_7(x) | p_9(x)))",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo)",
                    "p_6(Angelo)"
                ],
                "formulas(goals)": [
                    "p_6(Angelo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Angelo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)\np_13(Angelo) \u2192 \u00acp_6(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_5(Angelo)",
                    "p_4(Angelo)",
                    "p_1(Angelo)",
                    "\u00acp_2(Angelo)",
                    "p_0(Angelo)",
                    "p_3(Angelo)",
                    "p_5(Angelo) -> p_13(Angelo)",
                    "all x (p_4(x) -> p_11(x))",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo))",
                    "p_9(Angelo) -> p_2(Angelo)",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x))",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo))",
                    "all x (p_8(x) -> (p_7(x) | p_9(x)))",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo)",
                    "p_13(Angelo) -> \u00acp_6(Angelo)"
                ],
                "formulas(goals)": [
                    "\u00acp_6(Angelo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Angelo)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_13(Angelo) \u2192 \u00acp_6(Angelo)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)\np_13(Angelo) \u2192 \u00acp_6(Angelo)\np_12(Angelo)\np_13(Angelo)\n\u00ac(p_13(Angelo) \u2227 p_6(Angelo))\np_6(Angelo) \u2192 \u00acp_13(Angelo)\n\u00acp_6(Angelo)\np_11(Angelo)\np_10(Angelo)\np_0(Angelo) \u2192 p_8(Angelo)\n\u00acp_9(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Angelo).",
                    "p_4(Angelo).",
                    "p_1(Angelo).",
                    "-p_2(Angelo).",
                    "p_0(Angelo).",
                    "p_3(Angelo).",
                    "p_5(Angelo) -> p_13(Angelo).",
                    "all x (p_4(x) -> p_11(x)).",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo)).",
                    "p_9(Angelo) -> p_2(Angelo).",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x)).",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo)).",
                    "all x (p_8(x) -> (p_7(x) | p_9(x))).",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo).",
                    "p_13(Angelo) -> -p_6(Angelo).",
                    "p_12(Angelo).",
                    "p_13(Angelo).",
                    "-(p_13(Angelo) & p_6(Angelo)).",
                    "p_6(Angelo) -> -p_13(Angelo).",
                    "-p_6(Angelo).",
                    "p_11(Angelo).",
                    "p_10(Angelo).",
                    "p_0(Angelo) -> p_8(Angelo).",
                    "-p_9(Angelo)."
                ],
                "formulas(goals)": [
                    "-p_6(Angelo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_12(Angelo)",
                    "p_13(Angelo)",
                    "\u00ac(p_13(Angelo) \u2227 p_6(Angelo))",
                    "\u00acp_6(Angelo)",
                    "p_11(Angelo)",
                    "p_10(Angelo)",
                    "\u00acp_9(Angelo)"
                ],
                "added_rules": [
                    "p_6(Angelo) \u2192 \u00acp_13(Angelo)",
                    "p_0(Angelo) \u2192 p_8(Angelo)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)\np_12(Angelo)\np_13(Angelo)\np_11(Angelo)\np_10(Angelo)\np_0(Angelo) \u2192 p_8(Angelo)\n\u00acp_9(Angelo)\np_10(Angelo) \u2192 p_6(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Angelo)",
                    "p_4(Angelo)",
                    "p_1(Angelo)",
                    "-p_2(Angelo)",
                    "p_0(Angelo)",
                    "p_3(Angelo)",
                    "p_5(Angelo) -> p_13(Angelo)",
                    "all x (p_4(x) -> p_11(x))",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo))",
                    "p_9(Angelo) -> p_2(Angelo)",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x))",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo))",
                    "all x (p_8(x) -> (p_7(x) | p_9(x)))",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo)",
                    "p_12(Angelo)",
                    "p_13(Angelo)",
                    "p_11(Angelo)",
                    "p_10(Angelo)",
                    "p_0(Angelo) -> p_8(Angelo)",
                    "-p_9(Angelo)",
                    "p_10(Angelo) -> p_6(Angelo)"
                ],
                "formulas(goals)": [
                    "p_6(Angelo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Angelo)"
                ],
                "removed_rules": [
                    "p_13(Angelo) \u2192 \u00acp_6(Angelo)",
                    "\u00ac(p_13(Angelo) \u2227 p_6(Angelo))",
                    "p_6(Angelo) \u2192 \u00acp_13(Angelo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Angelo) \u2192 p_6(Angelo)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_0(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)\np_12(Angelo)\np_13(Angelo)\np_11(Angelo)\np_10(Angelo)\np_0(Angelo) \u2192 p_8(Angelo)\n\u00acp_9(Angelo)\np_7(Angelo) \u2192 \u00acp_6(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Angelo)",
                    "p_4(Angelo)",
                    "p_1(Angelo)",
                    "-p_2(Angelo)",
                    "p_0(Angelo)",
                    "p_3(Angelo)",
                    "p_5(Angelo) -> p_13(Angelo)",
                    "all x (p_4(x) -> p_11(x))",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo))",
                    "p_9(Angelo) -> p_2(Angelo)",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x))",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo))",
                    "all x (p_8(x) -> (p_7(x) | p_9(x)))",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo)",
                    "p_12(Angelo)",
                    "p_13(Angelo)",
                    "p_11(Angelo)",
                    "p_10(Angelo)",
                    "p_0(Angelo) -> p_8(Angelo)",
                    "-p_9(Angelo)",
                    "p_7(Angelo) -> -p_6(Angelo)"
                ],
                "formulas(goals)": [
                    "-p_6(Angelo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Angelo) \u2192 p_6(Angelo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Angelo) \u2192 \u00acp_6(Angelo)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Angelo)\np_4(Angelo)\np_1(Angelo)\n\u00acp_2(Angelo)\np_3(Angelo)\np_5(Angelo) \u2192 p_13(Angelo)\n\u2200x (p_4(x) \u2192 p_11(x))\np_1(Angelo) \u2192 (p_12(Angelo) \u2227 p_13(Angelo))\np_9(Angelo) \u2192 p_2(Angelo)\n\u2200x ((p_11(x) \u2227 p_12(x)) \u2192 p_10(x))\np_0(Angelo) \u2192 (p_8(Angelo) \u2227 p_10(Angelo))\n\u2200x (p_8(x) \u2192 (p_7(x) \u2228 p_9(x)))\n(p_3(Angelo) \u2295 p_6(Angelo)) \u2192 p_7(Angelo)\np_12(Angelo)\np_13(Angelo)\np_11(Angelo)\np_10(Angelo)\np_0(Angelo) \u2192 p_8(Angelo)\n\u00acp_9(Angelo)\n\u00acp_6(Angelo) \u2192 p_9(Angelo)",
            "Initial Goal": "p_6(Angelo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Angelo).",
                    "p_4(Angelo).",
                    "p_1(Angelo).",
                    "-p_2(Angelo).",
                    "p_3(Angelo).",
                    "p_5(Angelo) -> p_13(Angelo).",
                    "all x (p_4(x) -> p_11(x)).",
                    "p_1(Angelo) -> (p_12(Angelo) & p_13(Angelo)).",
                    "p_9(Angelo) -> p_2(Angelo).",
                    "all x ((p_11(x) & p_12(x)) -> p_10(x)).",
                    "p_0(Angelo) -> (p_8(Angelo) & p_10(Angelo)).",
                    "all x (p_8(x) -> (p_7(x) | p_9(x))).",
                    "(-(p_3(Angelo) <-> p_6(Angelo))) -> p_7(Angelo).",
                    "p_12(Angelo).",
                    "p_13(Angelo).",
                    "p_11(Angelo).",
                    "p_10(Angelo).",
                    "p_0(Angelo) -> p_8(Angelo).",
                    "-p_9(Angelo).",
                    "-p_6(Angelo) -> p_9(Angelo)."
                ],
                "formulas(goals)": [
                    "p_6(Angelo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Angelo)"
                ],
                "removed_rules": [
                    "p_7(Angelo) \u2192 \u00acp_6(Angelo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Angelo) \u2192 p_9(Angelo)"
                ]
            }
        }
    ]
}