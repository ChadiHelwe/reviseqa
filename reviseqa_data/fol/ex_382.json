{
    "background_story": "Emiliano was once a devout and peaceful Muslim, living a simple life in a small village. However, after being radicalized by extremist ideologies, he became a jihadist, believing that violence was the only way to achieve his goals. He joined a militant group, renouncing his former life and embracing a path of radicalism. As Emiliano delved deeper into the world of extremism, he lost sight of his humanity and the true teachings of his faith. His story serves as a cautionary tale about the dangers of radicalization and the importance of promoting tolerance, understanding, and peace.",
    "predicates": [
        {
            "id": 0,
            "name": "reads_widely"
        },
        {
            "id": 1,
            "name": "fosters_peace"
        },
        {
            "id": 2,
            "name": "acts_impulsively"
        },
        {
            "id": 3,
            "name": "respects_others"
        },
        {
            "id": 4,
            "name": "supports_dialogue"
        },
        {
            "id": 5,
            "name": "builds_bridges"
        },
        {
            "id": 6,
            "name": "exposed_to_extremism"
        },
        {
            "id": 7,
            "name": "lacks_critical_thinking"
        },
        {
            "id": 8,
            "name": "vulnerable_to_radicalization"
        },
        {
            "id": 9,
            "name": "seeks_knowledge"
        },
        {
            "id": 10,
            "name": "thinks_critically"
        },
        {
            "id": 11,
            "name": "embraces_diversity"
        },
        {
            "id": 12,
            "name": "open_minded"
        },
        {
            "id": 13,
            "name": "values_tolerance"
        },
        {
            "id": 14,
            "name": "promotes_harmony"
        },
        {
            "id": 15,
            "name": "faces_hardship"
        },
        {
            "id": 16,
            "name": "holds_grudge"
        },
        {
            "id": 17,
            "name": "asks_questions"
        },
        {
            "id": 18,
            "name": "explores_ideas"
        },
        {
            "id": 19,
            "name": "is_naive"
        },
        {
            "id": 20,
            "name": "learns_fast"
        },
        {
            "id": 21,
            "name": "curious"
        },
        {
            "id": 22,
            "name": "values_fairness"
        },
        {
            "id": 23,
            "name": "listens_actively"
        },
        {
            "id": 24,
            "name": "considers_alternatives"
        },
        {
            "id": 25,
            "name": "practices_empathy"
        },
        {
            "id": 26,
            "name": "rejects_violence"
        },
        {
            "id": 27,
            "name": "lives_modestly"
        }
    ],
    "subject_name": "Emiliano",
    "subject_category": "human",
    "keyword": "jihadist",
    "all_facts": [
        {
            "id": 0,
            "subject": "Emiliano",
            "text": "Emiliano does not read widely.",
            "fol": "\u00acp_0(Emiliano)",
            "str_fol": "\u00acreads_widely(Emiliano)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emiliano",
            "text": "Emiliano does not foster peace.",
            "fol": "\u00acp_1(Emiliano)",
            "str_fol": "\u00acfosters_peace(Emiliano)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emiliano",
            "text": "Emiliano acts impulsively.",
            "fol": "p_2(Emiliano)",
            "str_fol": "acts_impulsively(Emiliano)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Emiliano",
            "text": "Emiliano does not respect others.",
            "fol": "\u00acp_3(Emiliano)",
            "str_fol": "\u00acrespects_others(Emiliano)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Emiliano",
            "text": "Emiliano does not support dialogue.",
            "fol": "\u00acp_4(Emiliano)",
            "str_fol": "\u00acsupports_dialogue(Emiliano)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emiliano",
            "text": "Emiliano does not build bridges between people.",
            "fol": "\u00acp_5(Emiliano)",
            "str_fol": "\u00acbuilds_bridges(Emiliano)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emiliano",
            "text": "Emiliano does not promote harmony.",
            "fol": "\u00acp_14(Emiliano)",
            "str_fol": "\u00acpromotes_harmony(Emiliano)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Emiliano",
            "text": "Emiliano does not value tolerance.",
            "fol": "\u00acp_13(Emiliano)",
            "str_fol": "\u00acvalues_tolerance(Emiliano)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Emiliano",
            "text": "Emiliano is open-minded.",
            "fol": "p_12(Emiliano)",
            "str_fol": "open_minded(Emiliano)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Emiliano",
            "text": "Emiliano embraces diversity.",
            "fol": "p_11(Emiliano)",
            "str_fol": "embraces_diversity(Emiliano)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Emiliano",
            "text": "Emiliano does not think critically.",
            "fol": "\u00acp_10(Emiliano)",
            "str_fol": "\u00acthinks_critically(Emiliano)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Emiliano",
            "text": "Emiliano is not vulnerable to radicalization.",
            "fol": "\u00acp_8(Emiliano)",
            "str_fol": "\u00acvulnerable_to_radicalization(Emiliano)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Emiliano",
            "text": "Emiliano does not seek knowledge.",
            "fol": "\u00acp_9(Emiliano)",
            "str_fol": "\u00acseeks_knowledge(Emiliano)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Emiliano",
            "text": "Emiliano is exposed to extremism.",
            "fol": "p_6(Emiliano)",
            "str_fol": "exposed_to_extremism(Emiliano)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Emiliano",
            "text": "Emiliano does not lack critical thinking.",
            "fol": "\u00acp_7(Emiliano)",
            "str_fol": "\u00aclacks_critical_thinking(Emiliano)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Emiliano",
            "text": "Emiliano does not support dialogue.",
            "fol": "\u00acp_4(Emiliano)",
            "str_fol": "\u00acsupports_dialogue(Emiliano)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emiliano",
            "text": "Emiliano does not build bridges between people.",
            "fol": "\u00acp_5(Emiliano)",
            "str_fol": "\u00acbuilds_bridges(Emiliano)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emiliano",
            "text": "Emiliano does not respect others.",
            "fol": "\u00acp_3(Emiliano)",
            "str_fol": "\u00acrespects_others(Emiliano)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emiliano",
            "text": "Emiliano does not foster peace.",
            "fol": "\u00acp_1(Emiliano)",
            "str_fol": "\u00acfosters_peace(Emiliano)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emiliano",
            "text": "Emiliano acts impulsively.",
            "fol": "p_2(Emiliano)",
            "str_fol": "acts_impulsively(Emiliano)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Emiliano",
            "text": "Emiliano does not read widely.",
            "fol": "\u00acp_0(Emiliano)",
            "str_fol": "\u00acreads_widely(Emiliano)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Anyone who promotes harmony or supports dialogue will build bridges between people.",
            "fol": "\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((promotes_harmony(x) \u2228 supports_dialogue(x)) \u2192 builds_bridges(x))"
        },
        {
            "id": 7,
            "text": "Anyone who values tolerance or respects others will promote harmony.",
            "fol": "\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((values_tolerance(x) \u2228 respects_others(x)) \u2192 promotes_harmony(x))"
        },
        {
            "id": 6,
            "text": "Emiliano is either open-minded or values tolerance.",
            "fol": "p_12(Emiliano) \u2228 p_13(Emiliano)",
            "str_fol": "open_minded(Emiliano) \u2228 values_tolerance(Emiliano)"
        },
        {
            "id": 5,
            "text": "Everyone who is open-minded either embraces diversity or fosters peace (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (open_minded(x) \u2192 (embraces_diversity(x) \u2228 fosters_peace(x)))"
        },
        {
            "id": 4,
            "text": "Emiliano either thinks critically or acts impulsively, but not both.",
            "fol": "p_10(Emiliano) \u2295 p_2(Emiliano)",
            "str_fol": "thinks_critically(Emiliano) \u2295 acts_impulsively(Emiliano)"
        },
        {
            "id": 3,
            "text": "Emiliano is either vulnerable to radicalization or embraces diversity, but not both.",
            "fol": "p_8(Emiliano) \u2295 p_11(Emiliano)",
            "str_fol": "vulnerable_to_radicalization(Emiliano) \u2295 embraces_diversity(Emiliano)"
        },
        {
            "id": 2,
            "text": "If Emiliano either reads widely or seeks knowledge (but not both), then he thinks critically.",
            "fol": "(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)",
            "str_fol": "(reads_widely(Emiliano) \u2295 seeks_knowledge(Emiliano)) \u2192 thinks_critically(Emiliano)"
        },
        {
            "id": 1,
            "text": "Emiliano is either exposed to extremism or seeks knowledge.",
            "fol": "p_6(Emiliano) \u2228 p_9(Emiliano)",
            "str_fol": "exposed_to_extremism(Emiliano) \u2228 seeks_knowledge(Emiliano)"
        },
        {
            "id": 0,
            "text": "For all humans, if a person is exposed to extremism and lacks critical thinking, then they are vulnerable to radicalization.",
            "fol": "\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((exposed_to_extremism(x) \u2227 lacks_critical_thinking(x)) \u2192 vulnerable_to_radicalization(x))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Emiliano",
            "text": "Emiliano does not support dialogue.",
            "fol": "\u00acp_4(Emiliano)",
            "str_fol": "\u00acsupports_dialogue(Emiliano)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Emiliano",
            "text": "Emiliano does not build bridges between people.",
            "fol": "\u00acp_5(Emiliano)",
            "str_fol": "\u00acbuilds_bridges(Emiliano)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emiliano",
            "text": "Emiliano does not respect others.",
            "fol": "\u00acp_3(Emiliano)",
            "str_fol": "\u00acrespects_others(Emiliano)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emiliano",
            "text": "Emiliano does not foster peace.",
            "fol": "\u00acp_1(Emiliano)",
            "str_fol": "\u00acfosters_peace(Emiliano)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Emiliano",
            "text": "Emiliano acts impulsively.",
            "fol": "p_2(Emiliano)",
            "str_fol": "acts_impulsively(Emiliano)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Emiliano",
            "text": "Emiliano does not read widely.",
            "fol": "\u00acp_0(Emiliano)",
            "str_fol": "\u00acreads_widely(Emiliano)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Anyone who promotes harmony or supports dialogue will build bridges between people.",
            "fol": "\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((promotes_harmony(x) \u2228 supports_dialogue(x)) \u2192 builds_bridges(x))"
        },
        {
            "id": 7,
            "text": "Anyone who values tolerance or respects others will promote harmony.",
            "fol": "\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((values_tolerance(x) \u2228 respects_others(x)) \u2192 promotes_harmony(x))"
        },
        {
            "id": 6,
            "text": "Emiliano is either open-minded or values tolerance.",
            "fol": "p_12(Emiliano) \u2228 p_13(Emiliano)",
            "str_fol": "open_minded(Emiliano) \u2228 values_tolerance(Emiliano)"
        },
        {
            "id": 5,
            "text": "Everyone who is open-minded either embraces diversity or fosters peace (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (open_minded(x) \u2192 (embraces_diversity(x) \u2228 fosters_peace(x)))"
        },
        {
            "id": 4,
            "text": "Emiliano either thinks critically or acts impulsively, but not both.",
            "fol": "p_10(Emiliano) \u2295 p_2(Emiliano)",
            "str_fol": "thinks_critically(Emiliano) \u2295 acts_impulsively(Emiliano)"
        },
        {
            "id": 3,
            "text": "Emiliano is either vulnerable to radicalization or embraces diversity, but not both.",
            "fol": "p_8(Emiliano) \u2295 p_11(Emiliano)",
            "str_fol": "vulnerable_to_radicalization(Emiliano) \u2295 embraces_diversity(Emiliano)"
        },
        {
            "id": 2,
            "text": "If Emiliano either reads widely or seeks knowledge (but not both), then he thinks critically.",
            "fol": "(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)",
            "str_fol": "(reads_widely(Emiliano) \u2295 seeks_knowledge(Emiliano)) \u2192 thinks_critically(Emiliano)"
        },
        {
            "id": 1,
            "text": "Emiliano is either exposed to extremism or seeks knowledge.",
            "fol": "p_6(Emiliano) \u2228 p_9(Emiliano)",
            "str_fol": "exposed_to_extremism(Emiliano) \u2228 seeks_knowledge(Emiliano)"
        },
        {
            "id": 0,
            "text": "For all humans, if a person is exposed to extremism and lacks critical thinking, then they are vulnerable to radicalization.",
            "fol": "\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((exposed_to_extremism(x) \u2227 lacks_critical_thinking(x)) \u2192 vulnerable_to_radicalization(x))"
        }
    ],
    "context_fol": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\np_12(Emiliano) \u2228 p_13(Emiliano)\n\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\np_6(Emiliano) \u2228 p_9(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
    "conclusion": {
        "id": 14,
        "subject": "Emiliano",
        "text": "Emiliano does not lack critical thinking.",
        "fol": "\u00acp_7(Emiliano)",
        "str_fol": "\u00aclacks_critical_thinking(Emiliano)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_7(Emiliano)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Emiliano",
                    "text": "Emiliano does not support dialogue.",
                    "fol": "\u00acp_4(Emiliano)",
                    "str_fol": "\u00acsupports_dialogue(Emiliano)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Emiliano",
                    "text": "Emiliano does not build bridges between people.",
                    "fol": "\u00acp_5(Emiliano)",
                    "str_fol": "\u00acbuilds_bridges(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Anyone who promotes harmony or supports dialogue will build bridges between people.",
                    "fol": "\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((promotes_harmony(x) \u2228 supports_dialogue(x)) \u2192 builds_bridges(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Emiliano",
                "text": "Emiliano does not promote harmony.",
                "fol": "\u00acp_14(Emiliano)",
                "str_fol": "\u00acpromotes_harmony(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Emiliano",
                    "text": "Emiliano does not respect others.",
                    "fol": "\u00acp_3(Emiliano)",
                    "str_fol": "\u00acrespects_others(Emiliano)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Emiliano",
                    "text": "Emiliano does not promote harmony.",
                    "fol": "\u00acp_14(Emiliano)",
                    "str_fol": "\u00acpromotes_harmony(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who values tolerance or respects others will promote harmony.",
                    "fol": "\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((values_tolerance(x) \u2228 respects_others(x)) \u2192 promotes_harmony(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Emiliano",
                "text": "Emiliano does not value tolerance.",
                "fol": "\u00acp_13(Emiliano)",
                "str_fol": "\u00acvalues_tolerance(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Emiliano",
                    "text": "Emiliano does not value tolerance.",
                    "fol": "\u00acp_13(Emiliano)",
                    "str_fol": "\u00acvalues_tolerance(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Emiliano is either open-minded or values tolerance.",
                    "fol": "p_12(Emiliano) \u2228 p_13(Emiliano)",
                    "str_fol": "open_minded(Emiliano) \u2228 values_tolerance(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Emiliano",
                "text": "Emiliano is open-minded.",
                "fol": "p_12(Emiliano)",
                "str_fol": "open_minded(Emiliano)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Emiliano",
                    "text": "Emiliano is open-minded.",
                    "fol": "p_12(Emiliano)",
                    "str_fol": "open_minded(Emiliano)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Emiliano",
                    "text": "Emiliano does not foster peace.",
                    "fol": "\u00acp_1(Emiliano)",
                    "str_fol": "\u00acfosters_peace(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone who is open-minded either embraces diversity or fosters peace (or both).",
                    "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))",
                    "str_fol": "\u2200x (open_minded(x) \u2192 (embraces_diversity(x) \u2228 fosters_peace(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Emiliano",
                "text": "Emiliano embraces diversity.",
                "fol": "p_11(Emiliano)",
                "str_fol": "embraces_diversity(Emiliano)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Emiliano",
                    "text": "Emiliano acts impulsively.",
                    "fol": "p_2(Emiliano)",
                    "str_fol": "acts_impulsively(Emiliano)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Emiliano either thinks critically or acts impulsively, but not both.",
                    "fol": "p_10(Emiliano) \u2295 p_2(Emiliano)",
                    "str_fol": "thinks_critically(Emiliano) \u2295 acts_impulsively(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Emiliano",
                "text": "Emiliano does not think critically.",
                "fol": "\u00acp_10(Emiliano)",
                "str_fol": "\u00acthinks_critically(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Emiliano",
                    "text": "Emiliano embraces diversity.",
                    "fol": "p_11(Emiliano)",
                    "str_fol": "embraces_diversity(Emiliano)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Emiliano is either vulnerable to radicalization or embraces diversity, but not both.",
                    "fol": "p_8(Emiliano) \u2295 p_11(Emiliano)",
                    "str_fol": "vulnerable_to_radicalization(Emiliano) \u2295 embraces_diversity(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Emiliano",
                "text": "Emiliano is not vulnerable to radicalization.",
                "fol": "\u00acp_8(Emiliano)",
                "str_fol": "\u00acvulnerable_to_radicalization(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Emiliano",
                    "text": "Emiliano does not read widely.",
                    "fol": "\u00acp_0(Emiliano)",
                    "str_fol": "\u00acreads_widely(Emiliano)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Emiliano",
                    "text": "Emiliano does not think critically.",
                    "fol": "\u00acp_10(Emiliano)",
                    "str_fol": "\u00acthinks_critically(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Emiliano either reads widely or seeks knowledge (but not both), then he thinks critically.",
                    "fol": "(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)",
                    "str_fol": "(reads_widely(Emiliano) \u2295 seeks_knowledge(Emiliano)) \u2192 thinks_critically(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Emiliano",
                "text": "Emiliano does not seek knowledge.",
                "fol": "\u00acp_9(Emiliano)",
                "str_fol": "\u00acseeks_knowledge(Emiliano)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Emiliano",
                    "text": "Emiliano does not seek knowledge.",
                    "fol": "\u00acp_9(Emiliano)",
                    "str_fol": "\u00acseeks_knowledge(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Emiliano is either exposed to extremism or seeks knowledge.",
                    "fol": "p_6(Emiliano) \u2228 p_9(Emiliano)",
                    "str_fol": "exposed_to_extremism(Emiliano) \u2228 seeks_knowledge(Emiliano)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Emiliano",
                "text": "Emiliano is exposed to extremism.",
                "fol": "p_6(Emiliano)",
                "str_fol": "exposed_to_extremism(Emiliano)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Emiliano",
                    "text": "Emiliano is exposed to extremism.",
                    "fol": "p_6(Emiliano)",
                    "str_fol": "exposed_to_extremism(Emiliano)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Emiliano",
                    "text": "Emiliano is not vulnerable to radicalization.",
                    "fol": "\u00acp_8(Emiliano)",
                    "str_fol": "\u00acvulnerable_to_radicalization(Emiliano)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if a person is exposed to extremism and lacks critical thinking, then they are vulnerable to radicalization.",
                    "fol": "\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((exposed_to_extremism(x) \u2227 lacks_critical_thinking(x)) \u2192 vulnerable_to_radicalization(x))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Emiliano",
                "text": "Emiliano does not lack critical thinking.",
                "fol": "\u00acp_7(Emiliano)",
                "str_fol": "\u00aclacks_critical_thinking(Emiliano)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_14(x) | p_4(x) -> p_5(x))).  [assumption].\n2 (all x (p_13(x) | p_3(x) -> p_14(x))).  [assumption].\n3 (all x (p_12(x) -> p_11(x) | p_1(x))).  [assumption].\n4 -(p_10(Emiliano) <-> p_2(Emiliano)).  [assumption].\n5 -(p_8(Emiliano) <-> p_11(Emiliano)).  [assumption].\n6 -(p_0(Emiliano) <-> p_9(Emiliano)) -> p_10(Emiliano).  [assumption].\n7 (all x (p_6(x) & p_7(x) -> p_8(x))).  [assumption].\n8 -p_7(Emiliano).  [goal].\n9 -p_14(x) | p_5(x).  [clausify(1)].\n10 -p_5(Emiliano).  [assumption].\n11 -p_12(x) | p_11(x) | p_1(x).  [clausify(3)].\n12 -p_1(Emiliano).  [assumption].\n13 -p_10(Emiliano) | -p_2(Emiliano).  [clausify(4)].\n14 p_2(Emiliano).  [assumption].\n16 p_0(Emiliano) | -p_9(Emiliano) | p_10(Emiliano).  [clausify(6)].\n17 -p_0(Emiliano).  [assumption].\n19 p_12(Emiliano) | p_13(Emiliano).  [assumption].\n20 -p_13(x) | p_14(x).  [clausify(2)].\n21 -p_8(Emiliano) | -p_11(Emiliano).  [clausify(5)].\n23 -p_6(x) | -p_7(x) | p_8(x).  [clausify(7)].\n24 -p_6(Emiliano) | -p_7(Emiliano) | -p_11(Emiliano).  [resolve(23,c,21,a)].\n25 p_6(Emiliano) | p_9(Emiliano).  [assumption].\n26 -p_7(Emiliano) | -p_11(Emiliano) | p_9(Emiliano).  [resolve(24,a,25,a)].\n27 p_7(Emiliano).  [deny(8)].\n28 p_12(Emiliano) | p_14(Emiliano).  [resolve(19,b,20,a)].\n29 -p_14(Emiliano).  [resolve(9,b,10,a)].\n30 p_12(Emiliano).  [resolve(28,b,29,a)].\n31 -p_12(Emiliano) | p_11(Emiliano).  [resolve(11,c,12,a)].\n32 -p_9(Emiliano) | p_10(Emiliano).  [resolve(16,a,17,a)].\n33 -p_10(Emiliano).  [resolve(13,b,14,a)].\n34 p_11(Emiliano).  [resolve(30,a,31,a)].\n35 -p_11(Emiliano) | p_9(Emiliano).  [resolve(26,a,27,a)].\n36 p_9(Emiliano).  [resolve(34,a,35,a)].\n37 -p_9(Emiliano).  [resolve(32,b,33,a)].\n38 $F.  [resolve(36,a,37,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Emiliano)\np_6(Emiliano) \u2192 p_7(Emiliano)",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano)",
                    "-p_5(Emiliano)",
                    "-p_3(Emiliano)",
                    "-p_1(Emiliano)",
                    "p_2(Emiliano)",
                    "-p_0(Emiliano)",
                    "all x ((p_14(x) | p_4(x)) -> p_5(x))",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x))",
                    "all x (p_12(x) -> (p_11(x) | p_1(x)))",
                    "-(p_10(Emiliano) <-> p_2(Emiliano))",
                    "-(p_8(Emiliano) <-> p_11(Emiliano))",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano)) -> p_10(Emiliano))",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "p_6(Emiliano)",
                    "p_6(Emiliano) -> p_7(Emiliano)"
                ],
                "formulas(goals)": [
                    "p_7(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_12(Emiliano) \u2228 p_13(Emiliano)",
                    "p_6(Emiliano) \u2228 p_9(Emiliano)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Emiliano)"
                ],
                "added_rules": [
                    "p_6(Emiliano) \u2192 p_7(Emiliano)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Emiliano)\np_6(Emiliano) \u2192 p_7(Emiliano)\np_8(Emiliano)",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano)",
                    "-p_5(Emiliano)",
                    "-p_3(Emiliano)",
                    "-p_1(Emiliano)",
                    "p_2(Emiliano)",
                    "-p_0(Emiliano)",
                    "all x ((p_14(x) | p_4(x)) -> p_5(x))",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x))",
                    "all x (p_12(x) -> (p_11(x) | p_1(x)))",
                    "-(p_10(Emiliano) <-> p_2(Emiliano))",
                    "-(p_8(Emiliano) <-> p_11(Emiliano))",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano))) -> p_10(Emiliano)",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "p_6(Emiliano)",
                    "p_6(Emiliano) -> p_7(Emiliano)",
                    "p_8(Emiliano)"
                ],
                "formulas(goals)": [
                    "--p_7(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Emiliano)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Emiliano)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_7(x))\np_8(Emiliano)",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano)",
                    "-p_5(Emiliano)",
                    "-p_3(Emiliano)",
                    "-p_1(Emiliano)",
                    "p_2(Emiliano)",
                    "-p_0(Emiliano)",
                    "all x ((p_14(x) | p_4(x)) -> p_5(x))",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x))",
                    "all x (p_12(x) -> (p_11(x) | p_1(x)))",
                    "-(p_10(Emiliano) <-> p_2(Emiliano))",
                    "-(p_8(Emiliano) <-> p_11(Emiliano))",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano))) -> p_10(Emiliano)",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "p_6(Emiliano)",
                    "all x (-p_10(x) -> -p_7(x))",
                    "p_8(Emiliano)"
                ],
                "formulas(goals)": [
                    "-p_7(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Emiliano) \u2192 p_7(Emiliano)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_10(x) \u2192 \u00acp_7(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2227 \u00acp_11(x)) \u2192 p_1(x))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Emiliano)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_7(x))\np_8(Emiliano)\n\u00acp_10(Emiliano)\np_2(Emiliano) \u2228 \u00acp_2(Emiliano)",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano).",
                    "-p_5(Emiliano).",
                    "-p_3(Emiliano).",
                    "-p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "-p_0(Emiliano).",
                    "all x ((p_14(x) -> p_5(x)) & (p_4(x) -> p_5(x))).",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x)).",
                    "all x ((p_12(x) & -p_11(x)) -> p_1(x)).",
                    "-(p_10(Emiliano) <-> p_2(Emiliano)).",
                    "-(p_8(Emiliano) <-> p_11(Emiliano)).",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano))) -> p_10(Emiliano).",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x)).",
                    "p_6(Emiliano).",
                    "all x (-p_10(x) -> -p_7(x)).",
                    "p_8(Emiliano).",
                    "-p_10(Emiliano).",
                    "p_2(Emiliano) | -p_2(Emiliano)."
                ],
                "formulas(goals)": [
                    "-p_7(Emiliano)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_14(x) \u2228 p_4(x)) \u2192 p_5(x))",
                    "\u2200x (p_12(x) \u2192 (p_11(x) \u2228 p_1(x)))"
                ],
                "added_facts": [
                    "\u00acp_10(Emiliano)",
                    "p_2(Emiliano) \u2228 \u00acp_2(Emiliano)"
                ],
                "added_rules": [
                    "\u2200x ((p_14(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                    "\u2200x ((p_12(x) \u2227 \u00acp_11(x)) \u2192 p_1(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2227 \u00acp_11(x)) \u2192 p_1(x))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Emiliano)\np_8(Emiliano)\n\u00acp_10(Emiliano)\np_2(Emiliano) \u2228 \u00acp_2(Emiliano)\n\u2200x ((p_6(x) \u2227 p_8(x)) \u2192 p_7(x))",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_4(Emiliano)",
                    "\u00acp_5(Emiliano)",
                    "\u00acp_3(Emiliano)",
                    "\u00acp_1(Emiliano)",
                    "p_2(Emiliano)",
                    "\u00acp_0(Emiliano)",
                    "all x ((p_14(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_12(x) & \u00acp_11(x)) -> p_1(x))",
                    "-(p_10(Emiliano) <-> p_2(Emiliano))",
                    "-(p_8(Emiliano) <-> p_11(Emiliano))",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano))) -> p_10(Emiliano)",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "p_6(Emiliano)",
                    "p_8(Emiliano)",
                    "\u00acp_10(Emiliano)",
                    "p_2(Emiliano) | \u00acp_2(Emiliano)",
                    "all x ((p_6(x) & p_8(x)) -> p_7(x))"
                ],
                "formulas(goals)": [
                    "p_7(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_10(x) \u2192 \u00acp_7(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_6(x) \u2227 p_8(x)) \u2192 p_7(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano)\n\u00acp_5(Emiliano)\n\u00acp_3(Emiliano)\n\u00acp_1(Emiliano)\np_2(Emiliano)\n\u00acp_0(Emiliano)\n\u2200x ((p_14(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2227 \u00acp_11(x)) \u2192 p_1(x))\np_10(Emiliano) \u2295 p_2(Emiliano)\np_8(Emiliano) \u2295 p_11(Emiliano)\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano)\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Emiliano)\np_8(Emiliano)\n\u00acp_10(Emiliano)\np_2(Emiliano) \u2228 \u00acp_2(Emiliano)\n\u2200x ((p_6(x) \u2227 p_8(x)) \u2192 \u00acp_7(x))",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano)",
                    "-p_5(Emiliano)",
                    "-p_3(Emiliano)",
                    "-p_1(Emiliano)",
                    "p_2(Emiliano)",
                    "-p_0(Emiliano)",
                    "all x ((p_14(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_12(x) & -p_11(x)) -> p_1(x))",
                    "-(p_10(Emiliano) <-> p_2(Emiliano))",
                    "-(p_8(Emiliano) <-> p_11(Emiliano))",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano))) -> p_10(Emiliano)",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x))",
                    "p_6(Emiliano)",
                    "p_8(Emiliano)",
                    "-p_10(Emiliano)",
                    "p_2(Emiliano) | -p_2(Emiliano)",
                    "all x ((p_6(x) & p_8(x)) -> -p_7(x))"
                ],
                "formulas(goals)": [
                    "-p_7(Emiliano)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_6(x) \u2227 p_8(x)) \u2192 p_7(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_6(x) \u2227 p_8(x)) \u2192 \u00acp_7(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Emiliano).\n\u00acp_5(Emiliano).\n\u00acp_3(Emiliano).\n\u00acp_1(Emiliano).\np_2(Emiliano).\n\u00acp_0(Emiliano).\n\u2200x ((p_14(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x))).\n\u2200x ((p_13(x) \u2228 p_3(x)) \u2192 p_14(x)).\n\u2200x ((p_12(x) \u2227 \u00acp_11(x)) \u2192 p_1(x)).\np_10(Emiliano) \u2295 p_2(Emiliano).\np_8(Emiliano) \u2295 p_11(Emiliano).\n(p_0(Emiliano) \u2295 p_9(Emiliano)) \u2192 p_10(Emiliano).\n\u2200x ((p_6(x) \u2227 p_7(x)) \u2192 p_8(x)).\np_6(Emiliano).\np_8(Emiliano).\n\u00acp_10(Emiliano).\np_2(Emiliano) \u2228 \u00acp_2(Emiliano).\n\u2200x (p_8(x) \u2192 p_7(x)).",
            "Initial Goal": "\u00acp_7(Emiliano)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Emiliano).",
                    "-p_5(Emiliano).",
                    "-p_3(Emiliano).",
                    "-p_1(Emiliano).",
                    "p_2(Emiliano).",
                    "-p_0(Emiliano).",
                    "all x ((p_14(x) -> p_5(x)) & (p_4(x) -> p_5(x))).",
                    "all x ((p_13(x) | p_3(x)) -> p_14(x)).",
                    "all x ((p_12(x) & -p_11(x)) -> p_1(x)).",
                    "-(p_10(Emiliano) <-> p_2(Emiliano)).",
                    "-(p_8(Emiliano) <-> p_11(Emiliano)).",
                    "(-(p_0(Emiliano) <-> p_9(Emiliano))) -> p_10(Emiliano).",
                    "all x ((p_6(x) & p_7(x)) -> p_8(x)).",
                    "p_6(Emiliano).",
                    "p_8(Emiliano).",
                    "-p_10(Emiliano).",
                    "p_2(Emiliano) | -p_2(Emiliano).",
                    "all x (p_8(x) -> p_7(x))."
                ],
                "formulas(goals)": [
                    "-(-p_7(Emiliano))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_6(x) \u2227 p_8(x)) \u2192 \u00acp_7(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_8(x) \u2192 p_7(x))"
                ]
            }
        }
    ]
}