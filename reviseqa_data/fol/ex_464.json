{
    "background_story": "Jonah was a brilliant engineer who had spent his career working on innovative projects. However, after a decade in the corporate world, he felt a sense of disconnection from his community. Seeking a new challenge, Jonah discovered the concept of rediffusion, where old, discarded technology is repurposed for social good. Inspired, he founded a non-profit organization that collected and refurbished old radios, distributing them to remote villages without access to modern communication. Through his initiative, Jonah brought news, education, and entertainment to thousands of people, bridging the information gap and fostering community development. His work in rediffusion not only revitalized outdated technology but also reconnected him with his passion for making a meaningful difference in people's lives.",
    "predicates": [
        {
            "id": 0,
            "name": "code_programs"
        },
        {
            "id": 1,
            "name": "think_critically"
        },
        {
            "id": 2,
            "name": "build_gadgets"
        },
        {
            "id": 3,
            "name": "improve_lives"
        },
        {
            "id": 4,
            "name": "empower_others"
        },
        {
            "id": 5,
            "name": "is_resourceful"
        },
        {
            "id": 6,
            "name": "donate_time"
        },
        {
            "id": 7,
            "name": "help_others"
        },
        {
            "id": 8,
            "name": "have_technical_skills"
        },
        {
            "id": 9,
            "name": "care_about_social_causes"
        },
        {
            "id": 10,
            "name": "make_a_positive_impact"
        },
        {
            "id": 11,
            "name": "fix_machines"
        },
        {
            "id": 12,
            "name": "solve_problems"
        },
        {
            "id": 13,
            "name": "design_solutions"
        },
        {
            "id": 14,
            "name": "is_empathetic"
        },
        {
            "id": 15,
            "name": "lead_projects"
        },
        {
            "id": 16,
            "name": "teach_others"
        },
        {
            "id": 17,
            "name": "is_engineer"
        },
        {
            "id": 18,
            "name": "repair_electronics"
        },
        {
            "id": 19,
            "name": "think_creatively"
        },
        {
            "id": 20,
            "name": "work_collaboratively"
        },
        {
            "id": 21,
            "name": "identify_needs"
        },
        {
            "id": 22,
            "name": "find_innovative_ways"
        },
        {
            "id": 23,
            "name": "volunteer"
        },
        {
            "id": 24,
            "name": "listens"
        }
    ],
    "subject_name": "Jonah",
    "subject_category": "human",
    "keyword": "rediffusion",
    "all_facts": [
        {
            "id": 0,
            "subject": "Jonah",
            "text": "Jonah does not code programs.",
            "fol": "\u00acp_0(Jonah)",
            "str_fol": "\u00accode_programs(Jonah)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Jonah",
            "text": "Jonah does not think critically.",
            "fol": "\u00acp_1(Jonah)",
            "str_fol": "\u00acthink_critically(Jonah)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jonah",
            "text": "Jonah does not build gadgets.",
            "fol": "\u00acp_2(Jonah)",
            "str_fol": "\u00acbuild_gadgets(Jonah)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Jonah",
            "text": "Jonah does not improve lives.",
            "fol": "\u00acp_3(Jonah)",
            "str_fol": "\u00acimprove_lives(Jonah)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Jonah",
            "text": "Jonah does not empower others.",
            "fol": "\u00acp_4(Jonah)",
            "str_fol": "\u00acempower_others(Jonah)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jonah",
            "text": "Jonah is resourceful.",
            "fol": "p_5(Jonah)",
            "str_fol": "is_resourceful(Jonah)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Jonah",
            "text": "Jonah does not donate his time.",
            "fol": "\u00acp_6(Jonah)",
            "str_fol": "\u00acdonate_time(Jonah)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Jonah",
            "text": "Jonah does not help others.",
            "fol": "\u00acp_7(Jonah)",
            "str_fol": "\u00achelp_others(Jonah)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Jonah",
            "text": "Jonah is not empathetic.",
            "fol": "\u00acp_14(Jonah)",
            "str_fol": "\u00acis_empathetic(Jonah)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Jonah",
            "text": "Jonah makes a positive impact.",
            "fol": "p_10(Jonah)",
            "str_fol": "make_a_positive_impact(Jonah)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Jonah",
            "text": "Jonah does not design solutions.",
            "fol": "\u00acp_13(Jonah)",
            "str_fol": "\u00acdesign_solutions(Jonah)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Jonah",
            "text": "Jonah cannot solve problems.",
            "fol": "\u00acp_12(Jonah)",
            "str_fol": "\u00acsolve_problems(Jonah)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Jonah",
            "text": "Jonah does not fix machines.",
            "fol": "\u00acp_11(Jonah)",
            "str_fol": "\u00acfix_machines(Jonah)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Jonah",
            "text": "Jonah cares about social causes.",
            "fol": "p_9(Jonah)",
            "str_fol": "care_about_social_causes(Jonah)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Jonah",
            "text": "Jonah does not donate his time.",
            "fol": "\u00acp_6(Jonah)",
            "str_fol": "\u00acdonate_time(Jonah)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Jonah",
            "text": "Jonah does not help others.",
            "fol": "\u00acp_7(Jonah)",
            "str_fol": "\u00achelp_others(Jonah)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jonah",
            "text": "Jonah is resourceful.",
            "fol": "p_5(Jonah)",
            "str_fol": "is_resourceful(Jonah)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Jonah",
            "text": "Jonah does not improve lives.",
            "fol": "\u00acp_3(Jonah)",
            "str_fol": "\u00acimprove_lives(Jonah)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Jonah",
            "text": "Jonah does not empower others.",
            "fol": "\u00acp_4(Jonah)",
            "str_fol": "\u00acempower_others(Jonah)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Jonah",
            "text": "Jonah does not think critically.",
            "fol": "\u00acp_1(Jonah)",
            "str_fol": "\u00acthink_critically(Jonah)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jonah",
            "text": "Jonah does not build gadgets.",
            "fol": "\u00acp_2(Jonah)",
            "str_fol": "\u00acbuild_gadgets(Jonah)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Jonah",
            "text": "Jonah does not code programs.",
            "fol": "\u00acp_0(Jonah)",
            "str_fol": "\u00accode_programs(Jonah)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Jonah either donates his time or is empathetic (but not both), then he helps others.",
            "fol": "(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)",
            "str_fol": "(donate_time(Jonah) \u2295 is_empathetic(Jonah)) \u2192 help_others(Jonah)"
        },
        {
            "id": 5,
            "text": "If Jonah is resourceful, then he either makes a positive impact or is empathetic, but not both.",
            "fol": "p_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))",
            "str_fol": "is_resourceful(Jonah) \u2192 (is_empathetic(Jonah) \u2295 make_a_positive_impact(Jonah))"
        },
        {
            "id": 4,
            "text": "Everyone who designs solutions either improves lives or empowers others (or both).",
            "fol": "\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))",
            "str_fol": "\u2200x (design_solutions(x) \u2192 (improve_lives(x) \u2228 empower_others(x)))"
        },
        {
            "id": 3,
            "text": "If Jonah either designs solutions or can solve problems (but not both), then he thinks critically.",
            "fol": "(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)",
            "str_fol": "(design_solutions(Jonah) \u2295 solve_problems(Jonah)) \u2192 think_critically(Jonah)"
        },
        {
            "id": 2,
            "text": "If Jonah either builds gadgets or fixes machines (but not both), then he can solve problems.",
            "fol": "(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)",
            "str_fol": "(build_gadgets(Jonah) \u2295 fix_machines(Jonah)) \u2192 solve_problems(Jonah)"
        },
        {
            "id": 1,
            "text": "If someone either codes programs or fixes machines (but not both), then they have technical skills.",
            "fol": "\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((code_programs(x) \u2295 fix_machines(x)) \u2192 have_technical_skills(x))"
        },
        {
            "id": 0,
            "text": "For all humans, if they have technical skills or care about social causes (or both), then they can make a positive impact.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((have_technical_skills(x) \u2228 care_about_social_causes(x)) \u2192 make_a_positive_impact(x))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Jonah",
            "text": "Jonah does not donate his time.",
            "fol": "\u00acp_6(Jonah)",
            "str_fol": "\u00acdonate_time(Jonah)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Jonah",
            "text": "Jonah does not help others.",
            "fol": "\u00acp_7(Jonah)",
            "str_fol": "\u00achelp_others(Jonah)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jonah",
            "text": "Jonah is resourceful.",
            "fol": "p_5(Jonah)",
            "str_fol": "is_resourceful(Jonah)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Jonah",
            "text": "Jonah does not improve lives.",
            "fol": "\u00acp_3(Jonah)",
            "str_fol": "\u00acimprove_lives(Jonah)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Jonah",
            "text": "Jonah does not empower others.",
            "fol": "\u00acp_4(Jonah)",
            "str_fol": "\u00acempower_others(Jonah)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Jonah",
            "text": "Jonah does not think critically.",
            "fol": "\u00acp_1(Jonah)",
            "str_fol": "\u00acthink_critically(Jonah)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jonah",
            "text": "Jonah does not build gadgets.",
            "fol": "\u00acp_2(Jonah)",
            "str_fol": "\u00acbuild_gadgets(Jonah)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Jonah",
            "text": "Jonah does not code programs.",
            "fol": "\u00acp_0(Jonah)",
            "str_fol": "\u00accode_programs(Jonah)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Jonah either donates his time or is empathetic (but not both), then he helps others.",
            "fol": "(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)",
            "str_fol": "(donate_time(Jonah) \u2295 is_empathetic(Jonah)) \u2192 help_others(Jonah)"
        },
        {
            "id": 5,
            "text": "If Jonah is resourceful, then he either makes a positive impact or is empathetic, but not both.",
            "fol": "p_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))",
            "str_fol": "is_resourceful(Jonah) \u2192 (is_empathetic(Jonah) \u2295 make_a_positive_impact(Jonah))"
        },
        {
            "id": 4,
            "text": "Everyone who designs solutions either improves lives or empowers others (or both).",
            "fol": "\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))",
            "str_fol": "\u2200x (design_solutions(x) \u2192 (improve_lives(x) \u2228 empower_others(x)))"
        },
        {
            "id": 3,
            "text": "If Jonah either designs solutions or can solve problems (but not both), then he thinks critically.",
            "fol": "(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)",
            "str_fol": "(design_solutions(Jonah) \u2295 solve_problems(Jonah)) \u2192 think_critically(Jonah)"
        },
        {
            "id": 2,
            "text": "If Jonah either builds gadgets or fixes machines (but not both), then he can solve problems.",
            "fol": "(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)",
            "str_fol": "(build_gadgets(Jonah) \u2295 fix_machines(Jonah)) \u2192 solve_problems(Jonah)"
        },
        {
            "id": 1,
            "text": "If someone either codes programs or fixes machines (but not both), then they have technical skills.",
            "fol": "\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((code_programs(x) \u2295 fix_machines(x)) \u2192 have_technical_skills(x))"
        },
        {
            "id": 0,
            "text": "For all humans, if they have technical skills or care about social causes (or both), then they can make a positive impact.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((have_technical_skills(x) \u2228 care_about_social_causes(x)) \u2192 make_a_positive_impact(x))"
        }
    ],
    "context_fol": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\n(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
    "conclusion": {
        "id": 13,
        "subject": "Jonah",
        "text": "Jonah cares about social causes.",
        "fol": "p_9(Jonah)",
        "str_fol": "care_about_social_causes(Jonah)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_9(Jonah)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Jonah",
                    "text": "Jonah does not donate his time.",
                    "fol": "\u00acp_6(Jonah)",
                    "str_fol": "\u00acdonate_time(Jonah)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Jonah",
                    "text": "Jonah does not help others.",
                    "fol": "\u00acp_7(Jonah)",
                    "str_fol": "\u00achelp_others(Jonah)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Jonah either donates his time or is empathetic (but not both), then he helps others.",
                    "fol": "(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)",
                    "str_fol": "(donate_time(Jonah) \u2295 is_empathetic(Jonah)) \u2192 help_others(Jonah)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Jonah",
                "text": "Jonah is not empathetic.",
                "fol": "\u00acp_14(Jonah)",
                "str_fol": "\u00acis_empathetic(Jonah)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Jonah",
                    "text": "Jonah is resourceful.",
                    "fol": "p_5(Jonah)",
                    "str_fol": "is_resourceful(Jonah)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Jonah",
                    "text": "Jonah is not empathetic.",
                    "fol": "\u00acp_14(Jonah)",
                    "str_fol": "\u00acis_empathetic(Jonah)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Jonah is resourceful, then he either makes a positive impact or is empathetic, but not both.",
                    "fol": "p_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))",
                    "str_fol": "is_resourceful(Jonah) \u2192 (is_empathetic(Jonah) \u2295 make_a_positive_impact(Jonah))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Jonah",
                "text": "Jonah makes a positive impact.",
                "fol": "p_10(Jonah)",
                "str_fol": "make_a_positive_impact(Jonah)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Jonah",
                    "text": "Jonah does not improve lives.",
                    "fol": "\u00acp_3(Jonah)",
                    "str_fol": "\u00acimprove_lives(Jonah)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Jonah",
                    "text": "Jonah does not empower others.",
                    "fol": "\u00acp_4(Jonah)",
                    "str_fol": "\u00acempower_others(Jonah)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Everyone who designs solutions either improves lives or empowers others (or both).",
                    "fol": "\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))",
                    "str_fol": "\u2200x (design_solutions(x) \u2192 (improve_lives(x) \u2228 empower_others(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Jonah",
                "text": "Jonah does not design solutions.",
                "fol": "\u00acp_13(Jonah)",
                "str_fol": "\u00acdesign_solutions(Jonah)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Jonah",
                    "text": "Jonah does not design solutions.",
                    "fol": "\u00acp_13(Jonah)",
                    "str_fol": "\u00acdesign_solutions(Jonah)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Jonah",
                    "text": "Jonah does not think critically.",
                    "fol": "\u00acp_1(Jonah)",
                    "str_fol": "\u00acthink_critically(Jonah)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Jonah either designs solutions or can solve problems (but not both), then he thinks critically.",
                    "fol": "(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)",
                    "str_fol": "(design_solutions(Jonah) \u2295 solve_problems(Jonah)) \u2192 think_critically(Jonah)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Jonah",
                "text": "Jonah cannot solve problems.",
                "fol": "\u00acp_12(Jonah)",
                "str_fol": "\u00acsolve_problems(Jonah)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Jonah",
                    "text": "Jonah does not build gadgets.",
                    "fol": "\u00acp_2(Jonah)",
                    "str_fol": "\u00acbuild_gadgets(Jonah)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Jonah",
                    "text": "Jonah cannot solve problems.",
                    "fol": "\u00acp_12(Jonah)",
                    "str_fol": "\u00acsolve_problems(Jonah)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Jonah either builds gadgets or fixes machines (but not both), then he can solve problems.",
                    "fol": "(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)",
                    "str_fol": "(build_gadgets(Jonah) \u2295 fix_machines(Jonah)) \u2192 solve_problems(Jonah)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Jonah",
                "text": "Jonah does not fix machines.",
                "fol": "\u00acp_11(Jonah)",
                "str_fol": "\u00acfix_machines(Jonah)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Jonah",
                    "text": "Jonah does not code programs.",
                    "fol": "\u00acp_0(Jonah)",
                    "str_fol": "\u00accode_programs(Jonah)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Jonah",
                    "text": "Jonah does not fix machines.",
                    "fol": "\u00acp_11(Jonah)",
                    "str_fol": "\u00acfix_machines(Jonah)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone either codes programs or fixes machines (but not both), then they have technical skills.",
                    "fol": "\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((code_programs(x) \u2295 fix_machines(x)) \u2192 have_technical_skills(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Jonah",
                    "text": "Jonah makes a positive impact.",
                    "fol": "p_10(Jonah)",
                    "str_fol": "make_a_positive_impact(Jonah)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they have technical skills or care about social causes (or both), then they can make a positive impact.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((have_technical_skills(x) \u2228 care_about_social_causes(x)) \u2192 make_a_positive_impact(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\n(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah)",
                    "-p_7(Jonah)",
                    "p_5(Jonah)",
                    "-p_3(Jonah)",
                    "-p_4(Jonah)",
                    "-p_1(Jonah)",
                    "-p_2(Jonah)",
                    "-p_0(Jonah)",
                    "(-(p_6(Jonah) <-> p_14(Jonah))) -> p_7(Jonah)",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah)))",
                    "all x (p_13(x) -> (p_3(x) | p_4(x)))",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah)",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah)",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "(p_5(Jonah) & -p_7(Jonah)) -> p_9(Jonah)"
                ],
                "formulas(goals)": [
                    "p_9(Jonah)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Jonah) \u2227 \u00acp_7(Jonah)) \u2192 p_9(Jonah)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\n(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_9(Jonah)",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah)",
                    "-p_7(Jonah)",
                    "p_5(Jonah)",
                    "-p_3(Jonah)",
                    "-p_4(Jonah)",
                    "-p_1(Jonah)",
                    "-p_2(Jonah)",
                    "-p_0(Jonah)",
                    "(-(p_6(Jonah) <-> p_14(Jonah))) -> p_7(Jonah)",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah)))",
                    "all x (p_13(x) -> (p_3(x) | p_4(x)))",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah)",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah)",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "p_9(Jonah)"
                ],
                "formulas(goals)": [
                    "p_9(Jonah)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Jonah)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\n(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_5(Jonah) \u2192 \u00acp_9(Jonah)",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah)",
                    "-p_7(Jonah)",
                    "p_5(Jonah)",
                    "-p_3(Jonah)",
                    "-p_4(Jonah)",
                    "-p_1(Jonah)",
                    "-p_2(Jonah)",
                    "-p_0(Jonah)",
                    "(-(p_6(Jonah) <-> p_14(Jonah))) -> p_7(Jonah)",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah)))",
                    "all x (p_13(x) -> (p_3(x) | p_4(x)))",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah)",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah)",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "p_5(Jonah) -> -p_9(Jonah)"
                ],
                "formulas(goals)": [
                    "-p_9(Jonah)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_9(Jonah)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Jonah) \u2192 \u00acp_9(Jonah)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\n(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\np_5(Jonah) \u2192 \u00acp_9(Jonah)\np_9(Jonah) \u2192 \u00acp_5(Jonah)",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah)",
                    "-p_7(Jonah)",
                    "p_5(Jonah)",
                    "-p_3(Jonah)",
                    "-p_4(Jonah)",
                    "-p_1(Jonah)",
                    "-p_2(Jonah)",
                    "-p_0(Jonah)",
                    "(-(p_6(Jonah) <-> p_14(Jonah))) -> p_7(Jonah)",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah)))",
                    "all x (p_13(x) -> (p_3(x) | p_4(x)))",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah)",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah)",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "p_5(Jonah) -> -p_9(Jonah)",
                    "p_9(Jonah) -> -p_5(Jonah)"
                ],
                "formulas(goals)": [
                    "-p_9(Jonah)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_9(Jonah) \u2192 \u00acp_5(Jonah)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\n(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n(p_5(Jonah) \u2227 \u00acp_14(Jonah)) \u2192 p_9(Jonah)",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah)",
                    "-p_7(Jonah)",
                    "p_5(Jonah)",
                    "-p_3(Jonah)",
                    "-p_4(Jonah)",
                    "-p_1(Jonah)",
                    "-p_2(Jonah)",
                    "-p_0(Jonah)",
                    "(-(p_6(Jonah) <-> p_14(Jonah))) -> p_7(Jonah)",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah)))",
                    "all x (p_13(x) -> (p_3(x) | p_4(x)))",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah)",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah)",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "(p_5(Jonah) & -p_14(Jonah)) -> p_9(Jonah)"
                ],
                "formulas(goals)": [
                    "p_9(Jonah)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Jonah) \u2192 \u00acp_9(Jonah)",
                    "p_9(Jonah) \u2192 \u00acp_5(Jonah)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Jonah) \u2227 \u00acp_14(Jonah)) \u2192 p_9(Jonah)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n(p_5(Jonah) \u2227 \u00acp_14(Jonah)) \u2192 p_9(Jonah)\np_6(Jonah) \u2295 p_14(Jonah)",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah).",
                    "-p_7(Jonah).",
                    "p_5(Jonah).",
                    "-p_3(Jonah).",
                    "-p_4(Jonah).",
                    "-p_1(Jonah).",
                    "-p_2(Jonah).",
                    "-p_0(Jonah).",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah))).",
                    "all x (p_13(x) -> (p_3(x) | p_4(x))).",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah).",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah).",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x)).",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x)).",
                    "(p_5(Jonah) & -p_14(Jonah)) -> p_9(Jonah).",
                    "-(p_6(Jonah) <-> p_14(Jonah))."
                ],
                "formulas(goals)": [
                    "-p_9(Jonah)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Jonah) \u2295 p_14(Jonah)) \u2192 p_7(Jonah)"
                ],
                "added_facts": [
                    "p_6(Jonah) \u2295 p_14(Jonah)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Jonah)\n\u00acp_7(Jonah)\np_5(Jonah)\n\u00acp_3(Jonah)\n\u00acp_4(Jonah)\n\u00acp_1(Jonah)\n\u00acp_2(Jonah)\n\u00acp_0(Jonah)\np_5(Jonah) \u2192 (p_14(Jonah) \u2295 p_10(Jonah))\n\u2200x (p_13(x) \u2192 (p_3(x) \u2228 p_4(x)))\n(p_13(Jonah) \u2295 p_12(Jonah)) \u2192 p_1(Jonah)\n(p_2(Jonah) \u2295 p_11(Jonah)) \u2192 p_12(Jonah)\n\u2200x ((p_0(x) \u2295 p_11(x)) \u2192 p_8(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n(p_5(Jonah) \u2227 \u00acp_14(Jonah)) \u2192 p_9(Jonah)\np_5(Jonah) \u2192 \u00acp_14(Jonah)",
            "Initial Goal": "p_9(Jonah)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Jonah)",
                    "-p_7(Jonah)",
                    "p_5(Jonah)",
                    "-p_3(Jonah)",
                    "-p_4(Jonah)",
                    "-p_1(Jonah)",
                    "-p_2(Jonah)",
                    "-p_0(Jonah)",
                    "p_5(Jonah) -> (-(p_14(Jonah) <-> p_10(Jonah)))",
                    "all x (p_13(x) -> (p_3(x) | p_4(x)))",
                    "(-(p_13(Jonah) <-> p_12(Jonah))) -> p_1(Jonah)",
                    "(-(p_2(Jonah) <-> p_11(Jonah))) -> p_12(Jonah)",
                    "all x ((-(p_0(x) <-> p_11(x))) -> p_8(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "(p_5(Jonah) & -p_14(Jonah)) -> p_9(Jonah)",
                    "p_5(Jonah) -> -p_14(Jonah)"
                ],
                "formulas(goals)": [
                    "p_9(Jonah)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Jonah) \u2295 p_14(Jonah)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Jonah) \u2192 \u00acp_14(Jonah)"
                ]
            }
        }
    ]
}