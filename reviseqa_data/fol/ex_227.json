{
    "background_story": "Aldo was a charming Austrian chocolatier from Vienna. He inherited his love for confectionery from his grandfather, who owned a renowned patisserie in the heart of the city. Aldo spent years perfecting his craft, creating exquisite truffles and cakes that quickly gained popularity among the locals. His Austrian heritage deeply influenced his creations, with traditional ingredients like hazelnuts and apricots featuring prominently in his recipes. Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe', became a must-visit destination for tourists and natives alike, with its cozy atmosphere and the irresistible aroma of melting chocolate. As a proud Austrian, Aldo ensured that every piece of his craftsmanship told a story of the country's rich history and culture, making his chocolates not just a delight, but an experience.",
    "predicates": [
        {
            "id": 0,
            "name": "likes_cake"
        },
        {
            "id": 1,
            "name": "likes_fruits"
        },
        {
            "id": 2,
            "name": "shops_at_Wiener"
        },
        {
            "id": 3,
            "name": "drinks_coffee"
        },
        {
            "id": 4,
            "name": "appreciates_art"
        },
        {
            "id": 5,
            "name": "chocolate_lover"
        },
        {
            "id": 6,
            "name": "chocolate_hater"
        },
        {
            "id": 7,
            "name": "enjoys_truffles"
        },
        {
            "id": 8,
            "name": "visits_patisserie"
        },
        {
            "id": 9,
            "name": "eats_nuts"
        },
        {
            "id": 10,
            "name": "loves_sweets"
        },
        {
            "id": 11,
            "name": "avoids_sweets"
        },
        {
            "id": 12,
            "name": "dislikes_cocoa"
        },
        {
            "id": 13,
            "name": "craves_treats"
        },
        {
            "id": 14,
            "name": "appreciates_quality"
        },
        {
            "id": 15,
            "name": "values_tradition"
        },
        {
            "id": 16,
            "name": "enjoys_snacks"
        },
        {
            "id": 17,
            "name": "has_sweet_tooth"
        },
        {
            "id": 18,
            "name": "admires_pastries"
        },
        {
            "id": 19,
            "name": "enjoys_baking"
        }
    ],
    "subject_name": "Aldo",
    "subject_category": "person",
    "keyword": "austrian",
    "all_facts": [
        {
            "id": 0,
            "subject": "Aldo",
            "text": "Aldo likes cake.",
            "fol": "p_0(Aldo)",
            "str_fol": "likes_cake(Aldo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aldo",
            "text": "Aldo likes fruits.",
            "fol": "p_1(Aldo)",
            "str_fol": "likes_fruits(Aldo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Aldo",
            "text": "Aldo shops at Wiener S\u00fc\u00dfe.",
            "fol": "p_2(Aldo)",
            "str_fol": "shops_at_Wiener(Aldo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aldo",
            "text": "Aldo does not drink coffee.",
            "fol": "\u00acp_3(Aldo)",
            "str_fol": "\u00acdrinks_coffee(Aldo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Aldo",
            "text": "Aldo does not appreciate art.",
            "fol": "\u00acp_4(Aldo)",
            "str_fol": "\u00acappreciates_art(Aldo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Aldo",
            "text": "Aldo loves sweets.",
            "fol": "p_10(Aldo)",
            "str_fol": "loves_sweets(Aldo)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aldo",
            "text": "Aldo eats nuts.",
            "fol": "p_9(Aldo)",
            "str_fol": "eats_nuts(Aldo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Aldo",
            "text": "Aldo does not enjoy truffles.",
            "fol": "\u00acp_7(Aldo)",
            "str_fol": "\u00acenjoys_truffles(Aldo)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Aldo",
            "text": "Aldo does not visit the patisserie.",
            "fol": "\u00acp_8(Aldo)",
            "str_fol": "\u00acvisits_patisserie(Aldo)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Aldo",
            "text": "Aldo is not a chocolate hater.",
            "fol": "\u00acp_6(Aldo)",
            "str_fol": "\u00acchocolate_hater(Aldo)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Aldo",
            "text": "Aldo is someone who enjoys chocolates.",
            "fol": "p_5(Aldo)",
            "str_fol": "chocolate_lover(Aldo)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Aldo",
            "text": "Aldo does not appreciate art.",
            "fol": "\u00acp_4(Aldo)",
            "str_fol": "\u00acappreciates_art(Aldo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aldo",
            "text": "Aldo shops at Wiener S\u00fc\u00dfe.",
            "fol": "p_2(Aldo)",
            "str_fol": "shops_at_Wiener(Aldo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aldo",
            "text": "Aldo does not drink coffee.",
            "fol": "\u00acp_3(Aldo)",
            "str_fol": "\u00acdrinks_coffee(Aldo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Aldo",
            "text": "Aldo likes fruits.",
            "fol": "p_1(Aldo)",
            "str_fol": "likes_fruits(Aldo)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Aldo",
            "text": "Aldo likes cake.",
            "fol": "p_0(Aldo)",
            "str_fol": "likes_cake(Aldo)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Aldo either appreciates art or loves sweets, but not both.",
            "fol": "p_4(Aldo) \u2295 p_10(Aldo)",
            "str_fol": "appreciates_art(Aldo) \u2295 loves_sweets(Aldo)"
        },
        {
            "id": 4,
            "text": "If Aldo shops at Wiener S\u00fc\u00dfe, then he either eats nuts or drinks coffee.",
            "fol": "p_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))",
            "str_fol": "shops_at_Wiener(Aldo) \u2192 (eats_nuts(Aldo) \u2228 drinks_coffee(Aldo))"
        },
        {
            "id": 3,
            "text": "If Aldo loves sweets, then he either enjoys truffles or likes fruits, but not both.",
            "fol": "p_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))",
            "str_fol": "loves_sweets(Aldo) \u2192 (enjoys_truffles(Aldo) \u2295 likes_fruits(Aldo))"
        },
        {
            "id": 2,
            "text": "If a person visits Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe', then they either like cake or eat nuts, but not both.",
            "fol": "p_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))",
            "str_fol": "visits_patisserie(Aldo) \u2192 (likes_cake(Aldo) \u2295 eats_nuts(Aldo))"
        },
        {
            "id": 1,
            "text": "If a person either hates chocolate or enjoys truffles, then they visit Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe'.",
            "fol": "(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)",
            "str_fol": "(chocolate_hater(Aldo) \u2295 enjoys_truffles(Aldo)) \u2192 visits_patisserie(Aldo)"
        },
        {
            "id": 0,
            "text": "A person is either someone who enjoys Aldo's chocolates or someone who dislikes them, but not both.",
            "fol": "p_5(Aldo) \u2295 p_6(Aldo)",
            "str_fol": "chocolate_lover(Aldo) \u2295 chocolate_hater(Aldo)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Aldo",
            "text": "Aldo does not appreciate art.",
            "fol": "\u00acp_4(Aldo)",
            "str_fol": "\u00acappreciates_art(Aldo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aldo",
            "text": "Aldo shops at Wiener S\u00fc\u00dfe.",
            "fol": "p_2(Aldo)",
            "str_fol": "shops_at_Wiener(Aldo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aldo",
            "text": "Aldo does not drink coffee.",
            "fol": "\u00acp_3(Aldo)",
            "str_fol": "\u00acdrinks_coffee(Aldo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Aldo",
            "text": "Aldo likes fruits.",
            "fol": "p_1(Aldo)",
            "str_fol": "likes_fruits(Aldo)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Aldo",
            "text": "Aldo likes cake.",
            "fol": "p_0(Aldo)",
            "str_fol": "likes_cake(Aldo)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Aldo either appreciates art or loves sweets, but not both.",
            "fol": "p_4(Aldo) \u2295 p_10(Aldo)",
            "str_fol": "appreciates_art(Aldo) \u2295 loves_sweets(Aldo)"
        },
        {
            "id": 4,
            "text": "If Aldo shops at Wiener S\u00fc\u00dfe, then he either eats nuts or drinks coffee.",
            "fol": "p_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))",
            "str_fol": "shops_at_Wiener(Aldo) \u2192 (eats_nuts(Aldo) \u2228 drinks_coffee(Aldo))"
        },
        {
            "id": 3,
            "text": "If Aldo loves sweets, then he either enjoys truffles or likes fruits, but not both.",
            "fol": "p_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))",
            "str_fol": "loves_sweets(Aldo) \u2192 (enjoys_truffles(Aldo) \u2295 likes_fruits(Aldo))"
        },
        {
            "id": 2,
            "text": "If a person visits Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe', then they either like cake or eat nuts, but not both.",
            "fol": "p_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))",
            "str_fol": "visits_patisserie(Aldo) \u2192 (likes_cake(Aldo) \u2295 eats_nuts(Aldo))"
        },
        {
            "id": 1,
            "text": "If a person either hates chocolate or enjoys truffles, then they visit Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe'.",
            "fol": "(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)",
            "str_fol": "(chocolate_hater(Aldo) \u2295 enjoys_truffles(Aldo)) \u2192 visits_patisserie(Aldo)"
        },
        {
            "id": 0,
            "text": "A person is either someone who enjoys Aldo's chocolates or someone who dislikes them, but not both.",
            "fol": "p_5(Aldo) \u2295 p_6(Aldo)",
            "str_fol": "chocolate_lover(Aldo) \u2295 chocolate_hater(Aldo)"
        }
    ],
    "context_fol": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\np_4(Aldo) \u2295 p_10(Aldo)\np_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))\np_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))\np_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))\n(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)\np_5(Aldo) \u2295 p_6(Aldo)",
    "conclusion": {
        "id": 10,
        "subject": "Aldo",
        "text": "Aldo is someone who enjoys chocolates.",
        "fol": "p_5(Aldo)",
        "str_fol": "chocolate_lover(Aldo)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Aldo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Aldo",
                    "text": "Aldo does not appreciate art.",
                    "fol": "\u00acp_4(Aldo)",
                    "str_fol": "\u00acappreciates_art(Aldo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Aldo either appreciates art or loves sweets, but not both.",
                    "fol": "p_4(Aldo) \u2295 p_10(Aldo)",
                    "str_fol": "appreciates_art(Aldo) \u2295 loves_sweets(Aldo)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Aldo",
                "text": "Aldo loves sweets.",
                "fol": "p_10(Aldo)",
                "str_fol": "loves_sweets(Aldo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Aldo",
                    "text": "Aldo shops at Wiener S\u00fc\u00dfe.",
                    "fol": "p_2(Aldo)",
                    "str_fol": "shops_at_Wiener(Aldo)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Aldo",
                    "text": "Aldo does not drink coffee.",
                    "fol": "\u00acp_3(Aldo)",
                    "str_fol": "\u00acdrinks_coffee(Aldo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Aldo shops at Wiener S\u00fc\u00dfe, then he either eats nuts or drinks coffee.",
                    "fol": "p_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))",
                    "str_fol": "shops_at_Wiener(Aldo) \u2192 (eats_nuts(Aldo) \u2228 drinks_coffee(Aldo))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Aldo",
                "text": "Aldo eats nuts.",
                "fol": "p_9(Aldo)",
                "str_fol": "eats_nuts(Aldo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Aldo",
                    "text": "Aldo loves sweets.",
                    "fol": "p_10(Aldo)",
                    "str_fol": "loves_sweets(Aldo)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Aldo",
                    "text": "Aldo likes fruits.",
                    "fol": "p_1(Aldo)",
                    "str_fol": "likes_fruits(Aldo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Aldo loves sweets, then he either enjoys truffles or likes fruits, but not both.",
                    "fol": "p_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))",
                    "str_fol": "loves_sweets(Aldo) \u2192 (enjoys_truffles(Aldo) \u2295 likes_fruits(Aldo))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Aldo",
                "text": "Aldo does not enjoy truffles.",
                "fol": "\u00acp_7(Aldo)",
                "str_fol": "\u00acenjoys_truffles(Aldo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Aldo",
                    "text": "Aldo likes cake.",
                    "fol": "p_0(Aldo)",
                    "str_fol": "likes_cake(Aldo)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Aldo",
                    "text": "Aldo eats nuts.",
                    "fol": "p_9(Aldo)",
                    "str_fol": "eats_nuts(Aldo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If a person visits Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe', then they either like cake or eat nuts, but not both.",
                    "fol": "p_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))",
                    "str_fol": "visits_patisserie(Aldo) \u2192 (likes_cake(Aldo) \u2295 eats_nuts(Aldo))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Aldo",
                "text": "Aldo does not visit the patisserie.",
                "fol": "\u00acp_8(Aldo)",
                "str_fol": "\u00acvisits_patisserie(Aldo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Aldo",
                    "text": "Aldo does not enjoy truffles.",
                    "fol": "\u00acp_7(Aldo)",
                    "str_fol": "\u00acenjoys_truffles(Aldo)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Aldo",
                    "text": "Aldo does not visit the patisserie.",
                    "fol": "\u00acp_8(Aldo)",
                    "str_fol": "\u00acvisits_patisserie(Aldo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If a person either hates chocolate or enjoys truffles, then they visit Aldo's chocolate shop, 'Wiener S\u00fc\u00dfe'.",
                    "fol": "(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)",
                    "str_fol": "(chocolate_hater(Aldo) \u2295 enjoys_truffles(Aldo)) \u2192 visits_patisserie(Aldo)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Aldo",
                "text": "Aldo is not a chocolate hater.",
                "fol": "\u00acp_6(Aldo)",
                "str_fol": "\u00acchocolate_hater(Aldo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Aldo",
                    "text": "Aldo is not a chocolate hater.",
                    "fol": "\u00acp_6(Aldo)",
                    "str_fol": "\u00acchocolate_hater(Aldo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "A person is either someone who enjoys Aldo's chocolates or someone who dislikes them, but not both.",
                    "fol": "p_5(Aldo) \u2295 p_6(Aldo)",
                    "str_fol": "chocolate_lover(Aldo) \u2295 chocolate_hater(Aldo)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Aldo",
                "text": "Aldo is someone who enjoys chocolates.",
                "fol": "p_5(Aldo)",
                "str_fol": "chocolate_lover(Aldo)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_4(Aldo) <-> p_10(Aldo)).  [assumption].\n2 p_2(Aldo) -> p_9(Aldo) | p_3(Aldo).  [assumption].\n3 p_10(Aldo) -> -(p_7(Aldo) <-> p_1(Aldo)).  [assumption].\n4 p_8(Aldo) -> -(p_0(Aldo) <-> p_9(Aldo)).  [assumption].\n5 -(p_6(Aldo) <-> p_7(Aldo)) -> p_8(Aldo).  [assumption].\n6 -(p_5(Aldo) <-> p_6(Aldo)).  [assumption].\n7 p_5(Aldo).  [goal].\n8 p_4(Aldo) | p_10(Aldo).  [clausify(1)].\n9 -p_4(Aldo).  [assumption].\n11 -p_2(Aldo) | p_9(Aldo) | p_3(Aldo).  [clausify(2)].\n12 p_2(Aldo).  [assumption].\n13 p_9(Aldo) | p_3(Aldo).  [resolve(11,a,12,a)].\n14 -p_3(Aldo).  [assumption].\n15 -p_10(Aldo) | -p_7(Aldo) | -p_1(Aldo).  [clausify(3)].\n16 p_1(Aldo).  [assumption].\n18 -p_8(Aldo) | -p_0(Aldo) | -p_9(Aldo).  [clausify(4)].\n19 p_0(Aldo).  [assumption].\n22 -p_6(Aldo) | p_7(Aldo) | p_8(Aldo).  [clausify(5)].\n23 p_5(Aldo) | p_6(Aldo).  [clausify(6)].\n25 p_5(Aldo) | p_7(Aldo) | p_8(Aldo).  [resolve(23,b,22,a)].\n26 -p_5(Aldo).  [deny(7)].\n27 -p_10(Aldo) | -p_7(Aldo).  [resolve(15,c,16,a)].\n28 p_10(Aldo).  [resolve(8,a,9,a)].\n29 -p_8(Aldo) | -p_9(Aldo).  [resolve(18,b,19,a)].\n30 p_9(Aldo).  [resolve(13,b,14,a)].\n31 -p_7(Aldo).  [resolve(27,a,28,a)].\n32 p_7(Aldo) | p_8(Aldo).  [resolve(25,a,26,a)].\n33 p_8(Aldo).  [resolve(31,a,32,a)].\n34 -p_8(Aldo).  [resolve(29,b,30,a)].\n35 $F.  [resolve(33,a,34,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\np_4(Aldo) \u2295 p_10(Aldo)\np_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))\np_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))\np_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))\n(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)\np_5(Aldo) \u2295 p_6(Aldo)\np_6(Aldo)",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Aldo).",
                    "p_2(Aldo).",
                    "-p_3(Aldo).",
                    "p_1(Aldo).",
                    "p_0(Aldo).",
                    "(p_4(Aldo) & -p_10(Aldo)) | (-p_4(Aldo) & p_10(Aldo)).",
                    "p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo)).",
                    "p_10(Aldo) -> ((p_7(Aldo) & -p_1(Aldo)) | (-p_7(Aldo) & p_1(Aldo))).",
                    "p_8(Aldo) -> ((p_0(Aldo) & -p_9(Aldo)) | (-p_0(Aldo) & p_9(Aldo))).",
                    "((p_6(Aldo) & -p_7(Aldo)) | (-p_6(Aldo) & p_7(Aldo))) -> p_8(Aldo).",
                    "(p_5(Aldo) & -p_6(Aldo)) | (-p_5(Aldo) & p_6(Aldo)).",
                    "p_6(Aldo)."
                ],
                "formulas(goals)": [
                    "-p_5(Aldo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Aldo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\np_4(Aldo) \u2295 p_10(Aldo)\np_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))\np_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))\np_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))\n(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)\np_5(Aldo) \u2295 p_6(Aldo)\n\u00acp_6(Aldo)",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Aldo)",
                    "p_2(Aldo)",
                    "-p_3(Aldo)",
                    "p_1(Aldo)",
                    "p_0(Aldo)",
                    "-(p_4(Aldo) <-> p_10(Aldo))",
                    "p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo))",
                    "p_10(Aldo) -> (-(p_7(Aldo) <-> p_1(Aldo)))",
                    "p_8(Aldo) -> (-(p_0(Aldo) <-> p_9(Aldo)))",
                    "(-(p_6(Aldo) <-> p_7(Aldo))) -> p_8(Aldo)",
                    "-(p_5(Aldo) <-> p_6(Aldo))",
                    "-p_6(Aldo)"
                ],
                "formulas(goals)": [
                    "p_5(Aldo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Aldo)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Aldo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\np_4(Aldo) \u2295 p_10(Aldo)\np_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))\np_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))\np_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))\n(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)\np_5(Aldo) \u2295 p_6(Aldo)\n\u00acp_6(Aldo)\np_10(Aldo)\np_9(Aldo)\n\u00acp_7(Aldo)\n\u00acp_8(Aldo)",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_4(Aldo)",
                    "p_2(Aldo)",
                    "\u00acp_3(Aldo)",
                    "p_1(Aldo)",
                    "p_0(Aldo)",
                    "-(p_4(Aldo) <-> p_10(Aldo))",
                    "p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo))",
                    "p_10(Aldo) -> (-(p_7(Aldo) <-> p_1(Aldo)))",
                    "p_8(Aldo) -> (-(p_0(Aldo) <-> p_9(Aldo)))",
                    "(-(p_6(Aldo) <-> p_7(Aldo))) -> p_8(Aldo)",
                    "-(p_5(Aldo) <-> p_6(Aldo))",
                    "\u00acp_6(Aldo)",
                    "p_10(Aldo)",
                    "p_9(Aldo)",
                    "\u00acp_7(Aldo)",
                    "\u00acp_8(Aldo)"
                ],
                "formulas(goals)": [
                    "p_5(Aldo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Aldo)",
                    "p_9(Aldo)",
                    "\u00acp_7(Aldo)",
                    "\u00acp_8(Aldo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\np_4(Aldo) \u2295 p_10(Aldo)\np_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo))\np_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo))\np_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo))\n(p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo)\np_5(Aldo) \u2295 p_6(Aldo)\n\u00acp_6(Aldo)\np_10(Aldo)\np_9(Aldo)\n\u00acp_7(Aldo)\n\u00acp_8(Aldo)\np_6(Aldo) \u2194 p_7(Aldo)\n\u00ac(p_2(Aldo) \u2227 \u00acp_9(Aldo))",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Aldo)",
                    "p_2(Aldo)",
                    "-p_3(Aldo)",
                    "p_1(Aldo)",
                    "p_0(Aldo)",
                    "-(p_4(Aldo) <-> p_10(Aldo))",
                    "p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo))",
                    "p_10(Aldo) -> (-(p_7(Aldo) <-> p_1(Aldo)))",
                    "p_8(Aldo) -> (-(p_0(Aldo) <-> p_9(Aldo)))",
                    "(-(p_6(Aldo) <-> p_7(Aldo))) -> p_8(Aldo)",
                    "-(p_5(Aldo) <-> p_6(Aldo))",
                    "-p_6(Aldo)",
                    "p_10(Aldo)",
                    "p_9(Aldo)",
                    "-p_7(Aldo)",
                    "-p_8(Aldo)",
                    "p_6(Aldo) <-> p_7(Aldo)",
                    "-(p_2(Aldo) & -p_9(Aldo))"
                ],
                "formulas(goals)": [
                    "p_5(Aldo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Aldo) \u2194 p_7(Aldo)",
                    "\u00ac(p_2(Aldo) \u2227 \u00acp_9(Aldo))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\n(p_4(Aldo) \u2295 p_10(Aldo))\n(p_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo)))\n(p_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo)))\n(p_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo)))\n((p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo))\n(p_5(Aldo) \u2295 p_6(Aldo))\np_10(Aldo)\np_9(Aldo)\n\u00acp_7(Aldo)\n\u00acp_8(Aldo)\n\u00ac(p_2(Aldo) \u2227 \u00acp_9(Aldo))\np_6(Aldo)",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Aldo).",
                    "p_2(Aldo).",
                    "-p_3(Aldo).",
                    "p_1(Aldo).",
                    "p_0(Aldo).",
                    "-(p_4(Aldo) <-> p_10(Aldo)).",
                    "p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo)).",
                    "p_10(Aldo) -> (-(p_7(Aldo) <-> p_1(Aldo))).",
                    "p_8(Aldo) -> (-(p_0(Aldo) <-> p_9(Aldo))).",
                    "(-(p_6(Aldo) <-> p_7(Aldo))) -> p_8(Aldo).",
                    "-(p_5(Aldo) <-> p_6(Aldo)).",
                    "p_10(Aldo).",
                    "p_9(Aldo).",
                    "-p_7(Aldo).",
                    "-p_8(Aldo).",
                    "-(p_2(Aldo) & -p_9(Aldo)).",
                    "p_6(Aldo)."
                ],
                "formulas(goals)": [
                    "-p_5(Aldo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Aldo)"
                ],
                "removed_rules": [
                    "p_6(Aldo) \u2194 p_7(Aldo)"
                ],
                "added_facts": [
                    "p_6(Aldo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\n(p_4(Aldo) \u2295 p_10(Aldo))\n(p_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo)))\n(p_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo)))\n(p_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo)))\n((p_6(Aldo) \u2194 p_7(Aldo)) \u2192 p_8(Aldo))\n(p_5(Aldo) \u2295 p_6(Aldo))\np_10(Aldo)\np_9(Aldo)\n\u00acp_7(Aldo)\n\u00acp_8(Aldo)\n\u00ac(p_2(Aldo) \u2227 \u00acp_9(Aldo))\np_6(Aldo)",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Aldo)",
                    "p_2(Aldo)",
                    "-p_3(Aldo)",
                    "p_1(Aldo)",
                    "p_0(Aldo)",
                    "(-(p_4(Aldo) <-> p_10(Aldo)))",
                    "(p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo)))",
                    "(p_10(Aldo) -> (-(p_7(Aldo) <-> p_1(Aldo))))",
                    "(p_8(Aldo) -> (-(p_0(Aldo) <-> p_9(Aldo))))",
                    "((p_6(Aldo) <-> p_7(Aldo)) -> p_8(Aldo))",
                    "(-(p_5(Aldo) <-> p_6(Aldo)))",
                    "p_10(Aldo)",
                    "p_9(Aldo)",
                    "-p_7(Aldo)",
                    "-p_8(Aldo)",
                    "-(p_2(Aldo) & -p_9(Aldo))",
                    "p_6(Aldo)"
                ],
                "formulas(goals)": [
                    "-p_5(Aldo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "((p_6(Aldo) \u2295 p_7(Aldo)) \u2192 p_8(Aldo))"
                ],
                "added_facts": [],
                "added_rules": [
                    "((p_6(Aldo) \u2194 p_7(Aldo)) \u2192 p_8(Aldo))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Aldo)\np_2(Aldo)\n\u00acp_3(Aldo)\np_1(Aldo)\np_0(Aldo)\n(p_4(Aldo) \u2295 p_10(Aldo))\n(p_2(Aldo) \u2192 (p_9(Aldo) \u2228 p_3(Aldo)))\n(p_10(Aldo) \u2192 (p_7(Aldo) \u2295 p_1(Aldo)))\n(p_8(Aldo) \u2192 (p_0(Aldo) \u2295 p_9(Aldo)))\n((p_6(Aldo) \u2194 p_7(Aldo)) \u2192 p_8(Aldo))\n(p_5(Aldo) \u2295 p_6(Aldo))\np_10(Aldo)\np_9(Aldo)\n\u00acp_7(Aldo)\n\u00acp_8(Aldo)\n\u00ac(p_2(Aldo) \u2227 \u00acp_9(Aldo))\np_6(Aldo)\n(p_2(Aldo) \u2192 p_9(Aldo))\n(p_6(Aldo) \u2192 \u00acp_5(Aldo))\n(\u00acp_8(Aldo) \u2192 \u00ac(p_6(Aldo) \u2194 p_7(Aldo)))",
            "Initial Goal": "p_5(Aldo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Aldo)",
                    "p_2(Aldo)",
                    "-p_3(Aldo)",
                    "p_1(Aldo)",
                    "p_0(Aldo)",
                    "-(p_4(Aldo) <-> p_10(Aldo))",
                    "(p_2(Aldo) -> (p_9(Aldo) | p_3(Aldo)))",
                    "(p_10(Aldo) -> -(p_7(Aldo) <-> p_1(Aldo)))",
                    "(p_8(Aldo) -> -(p_0(Aldo) <-> p_9(Aldo)))",
                    "((p_6(Aldo) <-> p_7(Aldo)) -> p_8(Aldo))",
                    "-(p_5(Aldo) <-> p_6(Aldo))",
                    "p_10(Aldo)",
                    "p_9(Aldo)",
                    "-p_7(Aldo)",
                    "-p_8(Aldo)",
                    "-(p_2(Aldo) & -p_9(Aldo))",
                    "p_6(Aldo)",
                    "(p_2(Aldo) -> p_9(Aldo))",
                    "(p_6(Aldo) -> -p_5(Aldo))",
                    "(-p_8(Aldo) -> -(p_6(Aldo) <-> p_7(Aldo)))"
                ],
                "formulas(goals)": [
                    "-p_5(Aldo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_2(Aldo) \u2192 p_9(Aldo))",
                    "(p_6(Aldo) \u2192 \u00acp_5(Aldo))",
                    "(\u00acp_8(Aldo) \u2192 \u00ac(p_6(Aldo) \u2194 p_7(Aldo)))"
                ]
            }
        }
    ]
}