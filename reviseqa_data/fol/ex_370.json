{
    "background_story": "Edison, a brilliant but reclusive tech entrepreneur, had always been obsessed with creating the ultimate software platform. His company, NovaTech, had grown exponentially, with hundreds of employees and a plethora of projects. However, as time passed, Edison's vision began to bloat, and his platform became overly complex and cumbersome. Features were added upon features, making it difficult for users to navigate. Despite warnings from his team, Edison insisted on pushing forward, convinced that his vision was the key to success. As the platform's bloat continued to grow, so did the bugs and glitches, ultimately leading to a catastrophic crash that nearly bankrupted the company. Edison was left to ponder the consequences of his unchecked ambition and the dangers of unchecked bloat.",
    "predicates": [
        {
            "id": 0,
            "name": "perfectionist"
        },
        {
            "id": 1,
            "name": "work_hard"
        },
        {
            "id": 2,
            "name": "achieve_goals"
        },
        {
            "id": 3,
            "name": "adapt_easily"
        },
        {
            "id": 4,
            "name": "thinks_outside"
        },
        {
            "id": 5,
            "name": "succeed_fast"
        },
        {
            "id": 6,
            "name": "takes_risks"
        },
        {
            "id": 7,
            "name": "faces_challenges"
        },
        {
            "id": 8,
            "name": "reads_much"
        },
        {
            "id": 9,
            "name": "ambitious"
        },
        {
            "id": 10,
            "name": "driven"
        },
        {
            "id": 11,
            "name": "innovate"
        },
        {
            "id": 12,
            "name": "think_creatively"
        },
        {
            "id": 13,
            "name": "solve_problems"
        },
        {
            "id": 14,
            "name": "learn_fast"
        },
        {
            "id": 15,
            "name": "stay_focused"
        },
        {
            "id": 16,
            "name": "visionary"
        },
        {
            "id": 17,
            "name": "makes_progress"
        },
        {
            "id": 18,
            "name": "sets_goals"
        },
        {
            "id": 19,
            "name": "sees_opportunities"
        },
        {
            "id": 20,
            "name": "tries_new_ideas"
        },
        {
            "id": 21,
            "name": "acts_decisively"
        },
        {
            "id": 22,
            "name": "dreams_big"
        },
        {
            "id": 23,
            "name": "finds_solutions"
        },
        {
            "id": 24,
            "name": "_imaginative"
        },
        {
            "id": 25,
            "name": "open_minded"
        },
        {
            "id": 26,
            "name": "stays_organized"
        },
        {
            "id": 27,
            "name": "asks_questions"
        },
        {
            "id": 28,
            "name": "seeks_feedback"
        }
    ],
    "subject_name": "Edison",
    "subject_category": "person",
    "keyword": "bloat",
    "all_facts": [
        {
            "id": 0,
            "subject": "Edison",
            "text": "Edison is not a perfectionist.",
            "fol": "\u00acp_0(Edison)",
            "str_fol": "\u00acperfectionist(Edison)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Edison",
            "text": "Edison does not work hard.",
            "fol": "\u00acp_1(Edison)",
            "str_fol": "\u00acwork_hard(Edison)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Edison",
            "text": "Edison does not achieve his goals.",
            "fol": "\u00acp_2(Edison)",
            "str_fol": "\u00acachieve_goals(Edison)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Edison",
            "text": "Edison does not adapt easily.",
            "fol": "\u00acp_3(Edison)",
            "str_fol": "\u00acadapt_easily(Edison)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Edison",
            "text": "Edison does not think outside the box.",
            "fol": "\u00acp_4(Edison)",
            "str_fol": "\u00acthinks_outside(Edison)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Edison",
            "text": "Edison does not succeed quickly.",
            "fol": "\u00acp_5(Edison)",
            "str_fol": "\u00acsucceed_fast(Edison)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Edison",
            "text": "Edison does not take risks.",
            "fol": "\u00acp_6(Edison)",
            "str_fol": "\u00actakes_risks(Edison)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Edison",
            "text": "Edison does not face challenges.",
            "fol": "\u00acp_7(Edison)",
            "str_fol": "\u00acfaces_challenges(Edison)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Edison",
            "text": "Edison reads a lot.",
            "fol": "p_8(Edison)",
            "str_fol": "reads_much(Edison)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Edison",
            "text": "Edison learns quickly.",
            "fol": "p_14(Edison)",
            "str_fol": "learn_fast(Edison)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Edison",
            "text": "Edison does not make progress.",
            "fol": "\u00acp_17(Edison)",
            "str_fol": "\u00acmakes_progress(Edison)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Edison",
            "text": "Edison is not a visionary.",
            "fol": "\u00acp_16(Edison)",
            "str_fol": "\u00acvisionary(Edison)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Edison",
            "text": "Edison cannot solve problems.",
            "fol": "\u00acp_13(Edison)",
            "str_fol": "\u00acsolve_problems(Edison)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Edison",
            "text": "Edison is not driven.",
            "fol": "\u00acp_10(Edison)",
            "str_fol": "\u00acdriven(Edison)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Edison",
            "text": "Edison does not innovate.",
            "fol": "\u00acp_11(Edison)",
            "str_fol": "\u00acinnovate(Edison)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Edison",
            "text": "Edison is not ambitious.",
            "fol": "\u00acp_9(Edison)",
            "str_fol": "\u00acambitious(Edison)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Edison",
            "text": "Edison is ambitious, or a perfectionist, or a visionary.",
            "fol": "ambitious(Edison) \u2228 (p_0(Edison) \u2228 visionary(Edison))",
            "str_fol": "ambitious(Edison) \u2228 (perfectionist(Edison) \u2228 visionary(Edison))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 8,
            "subject": "Edison",
            "text": "Edison reads a lot.",
            "fol": "p_8(Edison)",
            "str_fol": "reads_much(Edison)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Edison",
            "text": "Edison does not take risks.",
            "fol": "\u00acp_6(Edison)",
            "str_fol": "\u00actakes_risks(Edison)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Edison",
            "text": "Edison does not face challenges.",
            "fol": "\u00acp_7(Edison)",
            "str_fol": "\u00acfaces_challenges(Edison)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Edison",
            "text": "Edison does not think outside the box.",
            "fol": "\u00acp_4(Edison)",
            "str_fol": "\u00acthinks_outside(Edison)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Edison",
            "text": "Edison does not adapt easily.",
            "fol": "\u00acp_3(Edison)",
            "str_fol": "\u00acadapt_easily(Edison)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Edison",
            "text": "Edison does not work hard.",
            "fol": "\u00acp_1(Edison)",
            "str_fol": "\u00acwork_hard(Edison)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Edison",
            "text": "Edison does not achieve his goals.",
            "fol": "\u00acp_2(Edison)",
            "str_fol": "\u00acachieve_goals(Edison)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Edison",
            "text": "Edison does not succeed quickly.",
            "fol": "\u00acp_5(Edison)",
            "str_fol": "\u00acsucceed_fast(Edison)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Edison",
            "text": "Edison is not a perfectionist.",
            "fol": "\u00acp_0(Edison)",
            "str_fol": "\u00acperfectionist(Edison)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Edison reads a lot, then he learns quickly.",
            "fol": "p_8(Edison) \u2192 p_14(Edison)",
            "str_fol": "reads_much(Edison) \u2192 learn_fast(Edison)"
        },
        {
            "id": 6,
            "text": "Anyone who takes risks or makes progress will face challenges.",
            "fol": "\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((takes_risks(x) \u2228 makes_progress(x)) \u2192 faces_challenges(x))"
        },
        {
            "id": 5,
            "text": "If Edison is either a visionary or thinks outside the box (but not both), then he makes progress.",
            "fol": "(p_16(Edison) \u2295 p_4(Edison)) \u2192 p_17(Edison)",
            "str_fol": "(visionary(Edison) \u2295 thinks_outside(Edison)) \u2192 makes_progress(Edison)"
        },
        {
            "id": 4,
            "text": "If someone can solve problems, then they stay focused and adapt easily.",
            "fol": "\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))",
            "str_fol": "\u2200x (solve_problems(x) \u2192 (stay_focused(x) \u2227 adapt_easily(x)))"
        },
        {
            "id": 3,
            "text": "If Edison can solve problems, then he thinks creatively and learns quickly.",
            "fol": "p_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))",
            "str_fol": "solve_problems(Edison) \u2192 (think_creatively(Edison) \u2227 learn_fast(Edison))"
        },
        {
            "id": 2,
            "text": "If Edison is driven, then he either works hard or achieves his goals, but not both.",
            "fol": "p_10(Edison) \u2192 (p_1(Edison) \u2295 p_2(Edison))",
            "str_fol": "driven(Edison) \u2192 (work_hard(Edison) \u2295 achieve_goals(Edison))"
        },
        {
            "id": 1,
            "text": "If Edison innovates or thinks creatively, then he will succeed quickly.",
            "fol": "(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)",
            "str_fol": "(innovate(Edison) \u2228 think_creatively(Edison)) \u2192 succeed_fast(Edison)"
        },
        {
            "id": 0,
            "text": "Anyone who is ambitious is either driven or innovates (or both).",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
            "str_fol": "\u2200x (ambitious(x) \u2192 (driven(x) \u2228 innovate(x)))"
        }
    ],
    "context": [
        {
            "id": 8,
            "subject": "Edison",
            "text": "Edison reads a lot.",
            "fol": "p_8(Edison)",
            "str_fol": "reads_much(Edison)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Edison",
            "text": "Edison does not take risks.",
            "fol": "\u00acp_6(Edison)",
            "str_fol": "\u00actakes_risks(Edison)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Edison",
            "text": "Edison does not face challenges.",
            "fol": "\u00acp_7(Edison)",
            "str_fol": "\u00acfaces_challenges(Edison)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Edison",
            "text": "Edison does not think outside the box.",
            "fol": "\u00acp_4(Edison)",
            "str_fol": "\u00acthinks_outside(Edison)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Edison",
            "text": "Edison does not adapt easily.",
            "fol": "\u00acp_3(Edison)",
            "str_fol": "\u00acadapt_easily(Edison)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Edison",
            "text": "Edison does not work hard.",
            "fol": "\u00acp_1(Edison)",
            "str_fol": "\u00acwork_hard(Edison)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Edison",
            "text": "Edison does not achieve his goals.",
            "fol": "\u00acp_2(Edison)",
            "str_fol": "\u00acachieve_goals(Edison)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Edison",
            "text": "Edison does not succeed quickly.",
            "fol": "\u00acp_5(Edison)",
            "str_fol": "\u00acsucceed_fast(Edison)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Edison",
            "text": "Edison is not a perfectionist.",
            "fol": "\u00acp_0(Edison)",
            "str_fol": "\u00acperfectionist(Edison)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If Edison reads a lot, then he learns quickly.",
            "fol": "p_8(Edison) \u2192 p_14(Edison)",
            "str_fol": "reads_much(Edison) \u2192 learn_fast(Edison)"
        },
        {
            "id": 6,
            "text": "Anyone who takes risks or makes progress will face challenges.",
            "fol": "\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((takes_risks(x) \u2228 makes_progress(x)) \u2192 faces_challenges(x))"
        },
        {
            "id": 5,
            "text": "If Edison is either a visionary or thinks outside the box (but not both), then he makes progress.",
            "fol": "(p_16(Edison) \u2295 p_4(Edison)) \u2192 p_17(Edison)",
            "str_fol": "(visionary(Edison) \u2295 thinks_outside(Edison)) \u2192 makes_progress(Edison)"
        },
        {
            "id": 4,
            "text": "If someone can solve problems, then they stay focused and adapt easily.",
            "fol": "\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))",
            "str_fol": "\u2200x (solve_problems(x) \u2192 (stay_focused(x) \u2227 adapt_easily(x)))"
        },
        {
            "id": 3,
            "text": "If Edison can solve problems, then he thinks creatively and learns quickly.",
            "fol": "p_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))",
            "str_fol": "solve_problems(Edison) \u2192 (think_creatively(Edison) \u2227 learn_fast(Edison))"
        },
        {
            "id": 2,
            "text": "If Edison is driven, then he either works hard or achieves his goals, but not both.",
            "fol": "p_10(Edison) \u2192 (p_1(Edison) \u2295 p_2(Edison))",
            "str_fol": "driven(Edison) \u2192 (work_hard(Edison) \u2295 achieve_goals(Edison))"
        },
        {
            "id": 1,
            "text": "If Edison innovates or thinks creatively, then he will succeed quickly.",
            "fol": "(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)",
            "str_fol": "(innovate(Edison) \u2228 think_creatively(Edison)) \u2192 succeed_fast(Edison)"
        },
        {
            "id": 0,
            "text": "Anyone who is ambitious is either driven or innovates (or both).",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
            "str_fol": "\u2200x (ambitious(x) \u2192 (driven(x) \u2228 innovate(x)))"
        }
    ],
    "context_fol": "p_8(Edison)\n\u00acp_6(Edison)\n\u00acp_7(Edison)\n\u00acp_4(Edison)\n\u00acp_3(Edison)\n\u00acp_1(Edison)\n\u00acp_2(Edison)\n\u00acp_5(Edison)\n\u00acp_0(Edison)\np_8(Edison) \u2192 p_14(Edison)\n\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))\n(p_16(Edison) \u2295 p_4(Edison)) \u2192 p_17(Edison)\n\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))\np_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))\np_10(Edison) \u2192 (p_1(Edison) \u2295 p_2(Edison))\n(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)\n\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
    "conclusion": {
        "id": 16,
        "text": "Edison is ambitious, or a perfectionist, or a visionary.",
        "fol": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
        "str_fol": "ambitious(Edison) \u2228 (perfectionist(Edison) \u2228 visionary(Edison))"
    },
    "initial_answer": "False",
    "initial_goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Edison",
                    "text": "Edison reads a lot.",
                    "fol": "p_8(Edison)",
                    "str_fol": "reads_much(Edison)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Edison reads a lot, then he learns quickly.",
                    "fol": "p_8(Edison) \u2192 p_14(Edison)",
                    "str_fol": "reads_much(Edison) \u2192 learn_fast(Edison)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Edison",
                "text": "Edison learns quickly.",
                "fol": "p_14(Edison)",
                "str_fol": "learn_fast(Edison)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Edison",
                    "text": "Edison does not take risks.",
                    "fol": "\u00acp_6(Edison)",
                    "str_fol": "\u00actakes_risks(Edison)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Edison",
                    "text": "Edison does not face challenges.",
                    "fol": "\u00acp_7(Edison)",
                    "str_fol": "\u00acfaces_challenges(Edison)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who takes risks or makes progress will face challenges.",
                    "fol": "\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((takes_risks(x) \u2228 makes_progress(x)) \u2192 faces_challenges(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Edison",
                "text": "Edison does not make progress.",
                "fol": "\u00acp_17(Edison)",
                "str_fol": "\u00acmakes_progress(Edison)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Edison",
                    "text": "Edison does not think outside the box.",
                    "fol": "\u00acp_4(Edison)",
                    "str_fol": "\u00acthinks_outside(Edison)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Edison",
                    "text": "Edison does not make progress.",
                    "fol": "\u00acp_17(Edison)",
                    "str_fol": "\u00acmakes_progress(Edison)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Edison is either a visionary or thinks outside the box (but not both), then he makes progress.",
                    "fol": "(p_16(Edison) \u2295 p_4(Edison)) \u2192 p_17(Edison)",
                    "str_fol": "(visionary(Edison) \u2295 thinks_outside(Edison)) \u2192 makes_progress(Edison)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Edison",
                "text": "Edison is not a visionary.",
                "fol": "\u00acp_16(Edison)",
                "str_fol": "\u00acvisionary(Edison)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Edison",
                    "text": "Edison does not adapt easily.",
                    "fol": "\u00acp_3(Edison)",
                    "str_fol": "\u00acadapt_easily(Edison)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone can solve problems, then they stay focused and adapt easily.",
                    "fol": "\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))",
                    "str_fol": "\u2200x (solve_problems(x) \u2192 (stay_focused(x) \u2227 adapt_easily(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Edison",
                "text": "Edison cannot solve problems.",
                "fol": "\u00acp_13(Edison)",
                "str_fol": "\u00acsolve_problems(Edison)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Edison",
                    "text": "Edison cannot solve problems.",
                    "fol": "\u00acp_13(Edison)",
                    "str_fol": "\u00acsolve_problems(Edison)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Edison",
                    "text": "Edison learns quickly.",
                    "fol": "p_14(Edison)",
                    "str_fol": "learn_fast(Edison)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Edison can solve problems, then he thinks creatively and learns quickly.",
                    "fol": "p_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))",
                    "str_fol": "solve_problems(Edison) \u2192 (think_creatively(Edison) \u2227 learn_fast(Edison))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Edison",
                    "text": "Edison does not work hard.",
                    "fol": "\u00acp_1(Edison)",
                    "str_fol": "\u00acwork_hard(Edison)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Edison",
                    "text": "Edison does not achieve his goals.",
                    "fol": "\u00acp_2(Edison)",
                    "str_fol": "\u00acachieve_goals(Edison)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Edison is driven, then he either works hard or achieves his goals, but not both.",
                    "fol": "p_10(Edison) \u2192 (p_1(Edison) \u2295 p_2(Edison))",
                    "str_fol": "driven(Edison) \u2192 (work_hard(Edison) \u2295 achieve_goals(Edison))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Edison",
                "text": "Edison is not driven.",
                "fol": "\u00acp_10(Edison)",
                "str_fol": "\u00acdriven(Edison)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Edison",
                    "text": "Edison does not succeed quickly.",
                    "fol": "\u00acp_5(Edison)",
                    "str_fol": "\u00acsucceed_fast(Edison)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Edison innovates or thinks creatively, then he will succeed quickly.",
                    "fol": "(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)",
                    "str_fol": "(innovate(Edison) \u2228 think_creatively(Edison)) \u2192 succeed_fast(Edison)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Edison",
                "text": "Edison does not innovate.",
                "fol": "\u00acp_11(Edison)",
                "str_fol": "\u00acinnovate(Edison)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Edison",
                    "text": "Edison is not driven.",
                    "fol": "\u00acp_10(Edison)",
                    "str_fol": "\u00acdriven(Edison)",
                    "negation": true
                },
                {
                    "id": 14,
                    "subject": "Edison",
                    "text": "Edison does not innovate.",
                    "fol": "\u00acp_11(Edison)",
                    "str_fol": "\u00acinnovate(Edison)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Anyone who is ambitious is either driven or innovates (or both).",
                    "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
                    "str_fol": "\u2200x (ambitious(x) \u2192 (driven(x) \u2228 innovate(x)))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Edison",
                "text": "Edison is not ambitious.",
                "fol": "\u00acp_9(Edison)",
                "str_fol": "\u00acambitious(Edison)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Edison",
                    "text": "Edison is not ambitious.",
                    "fol": "\u00acp_9(Edison)",
                    "str_fol": "\u00acambitious(Edison)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Edison",
                    "text": "Edison is not a perfectionist.",
                    "fol": "\u00acp_0(Edison)",
                    "str_fol": "\u00acperfectionist(Edison)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Edison",
                    "text": "Edison is not a visionary.",
                    "fol": "\u00acp_16(Edison)",
                    "str_fol": "\u00acvisionary(Edison)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 16,
                "text": "Edison is ambitious, or a perfectionist, or a visionary.",
                "fol": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
                "str_fol": "ambitious(Edison) \u2228 (perfectionist(Edison) \u2228 visionary(Edison))"
            }
        }
    ],
    "proof_trace": "2 (all x (p_6(x) | p_17(x) -> p_7(x))).  [assumption].\n3 -(p_16(Edison) <-> p_4(Edison)) -> p_17(Edison).  [assumption].\n6 p_10(Edison) -> -(p_1(Edison) <-> p_2(Edison)).  [assumption].\n7 p_11(Edison) | p_12(Edison) -> p_5(Edison).  [assumption].\n8 (all x (p_9(x) -> p_10(x) | p_11(x))).  [assumption].\n9 -(p_9(Edison) | p_0(Edison) | p_16(Edison)).  [goal].\n12 -p_17(x) | p_7(x).  [clausify(2)].\n13 -p_7(Edison).  [assumption].\n14 -p_16(Edison) | p_4(Edison) | p_17(Edison).  [clausify(3)].\n15 -p_4(Edison).  [assumption].\n19 -p_10(Edison) | p_1(Edison) | p_2(Edison).  [clausify(6)].\n20 -p_1(Edison).  [assumption].\n22 -p_10(Edison) | p_2(Edison).  [resolve(19,b,20,a)].\n23 -p_2(Edison).  [assumption].\n24 -p_11(Edison) | p_5(Edison).  [clausify(7)].\n25 -p_5(Edison).  [assumption].\n27 p_9(Edison) | p_0(Edison) | p_16(Edison).  [deny(9)].\n28 -p_0(Edison).  [assumption].\n29 p_9(Edison) | p_16(Edison).  [resolve(27,b,28,a)].\n30 -p_9(x) | p_10(x) | p_11(x).  [clausify(8)].\n31 -p_16(Edison) | p_17(Edison).  [resolve(14,b,15,a)].\n32 -p_17(Edison).  [resolve(12,b,13,a)].\n33 p_16(Edison) | p_10(Edison) | p_11(Edison).  [resolve(29,a,30,a)].\n34 -p_10(Edison).  [resolve(22,b,23,a)].\n35 p_16(Edison) | p_11(Edison).  [resolve(33,b,34,a)].\n36 -p_11(Edison).  [resolve(24,b,25,a)].\n37 p_16(Edison).  [resolve(35,b,36,a)].\n38 -p_16(Edison).  [resolve(31,b,32,a)].\n39 $F.  [resolve(37,a,38,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Edison)\n\u00acp_6(Edison)\n\u00acp_7(Edison)\n\u00acp_4(Edison)\n\u00acp_3(Edison)\n\u00acp_1(Edison)\n\u00acp_2(Edison)\n\u00acp_5(Edison)\n\u00acp_0(Edison)\np_8(Edison) \u2192 p_14(Edison)\n\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))\n((p_16(Edison) \u2228 p_4(Edison)) \u2227 \u00ac(p_16(Edison) \u2227 p_4(Edison))) \u2192 p_17(Edison)\n\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))\np_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))\np_10(Edison) \u2192 ((p_1(Edison) \u2228 p_2(Edison)) \u2227 \u00ac(p_1(Edison) \u2227 p_2(Edison)))\n(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)\n\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))\np_14(Edison)\n\u00acp_17(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Edison)",
                    "-p_6(Edison)",
                    "-p_7(Edison)",
                    "-p_4(Edison)",
                    "-p_3(Edison)",
                    "-p_1(Edison)",
                    "-p_2(Edison)",
                    "-p_5(Edison)",
                    "-p_0(Edison)",
                    "p_8(Edison) -> p_14(Edison)",
                    "all x ((p_6(x) | p_17(x)) -> p_7(x))",
                    "((p_16(Edison) | p_4(Edison)) & -(p_16(Edison) & p_4(Edison))) -> p_17(Edison)",
                    "all x (p_13(x) -> (p_15(x) & p_3(x)))",
                    "p_13(Edison) -> (p_12(Edison) & p_14(Edison))",
                    "p_10(Edison) -> ((p_1(Edison) | p_2(Edison)) & -(p_1(Edison) & p_2(Edison)))",
                    "(p_11(Edison) | p_12(Edison)) -> p_5(Edison)",
                    "all x (p_9(x) -> (p_10(x) | p_11(x)))",
                    "p_14(Edison)",
                    "-p_17(Edison)"
                ],
                "formulas(goals)": [
                    "-(p_9(Edison) | (p_0(Edison) | p_16(Edison)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Edison)",
                    "\u00acp_17(Edison)"
                ],
                "added_rules": [
                    "((p_16(Edison) \u2228 p_4(Edison)) \u2227 \u00ac(p_16(Edison) \u2227 p_4(Edison))) \u2192 p_17(Edison)",
                    "p_10(Edison) \u2192 ((p_1(Edison) \u2228 p_2(Edison)) \u2227 \u00ac(p_1(Edison) \u2227 p_2(Edison)))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Edison)\n\u00acp_6(Edison)\n\u00acp_7(Edison)\n\u00acp_4(Edison)\n\u00acp_3(Edison)\n\u00acp_1(Edison)\n\u00acp_2(Edison)\n\u00acp_5(Edison)\n\u00acp_0(Edison)\np_8(Edison) \u2192 p_14(Edison)\n\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))\n\u00acp_17(Edison) \u2192 p_16(Edison)\n\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))\np_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))\np_10(Edison) \u2192 ((p_1(Edison) \u2228 p_2(Edison)) \u2227 \u00ac(p_1(Edison) \u2227 p_2(Edison)))\n(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)\n\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))\np_14(Edison)\n\u00acp_17(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Edison)",
                    "-p_6(Edison)",
                    "-p_7(Edison)",
                    "-p_4(Edison)",
                    "-p_3(Edison)",
                    "-p_1(Edison)",
                    "-p_2(Edison)",
                    "-p_5(Edison)",
                    "-p_0(Edison)",
                    "p_8(Edison) -> p_14(Edison)",
                    "all x ((p_6(x) | p_17(x)) -> p_7(x))",
                    "-p_17(Edison) -> p_16(Edison)",
                    "all x (p_13(x) -> (p_15(x) & p_3(x)))",
                    "p_13(Edison) -> (p_12(Edison) & p_14(Edison))",
                    "p_10(Edison) -> ((p_1(Edison) | p_2(Edison)) & (-(p_1(Edison) & p_2(Edison))))",
                    "(p_11(Edison) | p_12(Edison)) -> p_5(Edison)",
                    "all x (p_9(x) -> (p_10(x) | p_11(x)))",
                    "p_14(Edison)",
                    "-p_17(Edison)"
                ],
                "formulas(goals)": [
                    "p_9(Edison) | (p_0(Edison) | p_16(Edison))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "((p_16(Edison) \u2228 p_4(Edison)) \u2227 \u00ac(p_16(Edison) \u2227 p_4(Edison))) \u2192 p_17(Edison)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_17(Edison) \u2192 p_16(Edison)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Edison)\n\u00acp_6(Edison)\n\u00acp_7(Edison)\n\u00acp_4(Edison)\n\u00acp_3(Edison)\n\u00acp_1(Edison)\n\u00acp_2(Edison)\n\u00acp_5(Edison)\n\u00acp_0(Edison)\np_8(Edison) \u2192 p_14(Edison)\n\u2200x ((\u00acp_6(x) \u2227 \u00acp_17(x)) \u2228 p_7(x))\n\u00acp_17(Edison) \u2192 p_16(Edison)\n\u2200x (p_13(x) \u2192 (p_15(x) \u2227 p_3(x)))\n(\u00acp_13(Edison) \u2228 p_12(Edison)) \u2227 (\u00acp_13(Edison) \u2228 p_14(Edison))\np_10(Edison) \u2192 ((p_1(Edison) \u2228 p_2(Edison)) \u2227 \u00ac(p_1(Edison) \u2227 p_2(Edison)))\n(\u00acp_11(Edison) \u2227 \u00acp_12(Edison)) \u2228 p_5(Edison)\n\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))\np_14(Edison)\n\u00acp_17(Edison)\np_17(Edison) \u2228 p_16(Edison)\n\u00acp_8(Edison) \u2228 p_14(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Edison)",
                    "-p_6(Edison)",
                    "-p_7(Edison)",
                    "-p_4(Edison)",
                    "-p_3(Edison)",
                    "-p_1(Edison)",
                    "-p_2(Edison)",
                    "-p_5(Edison)",
                    "-p_0(Edison)",
                    "p_8(Edison) -> p_14(Edison)",
                    "all x ((-p_6(x) & -p_17(x)) | p_7(x))",
                    "-p_17(Edison) -> p_16(Edison)",
                    "all x (p_13(x) -> (p_15(x) & p_3(x)))",
                    "(-p_13(Edison) | p_12(Edison)) & (-p_13(Edison) | p_14(Edison))",
                    "p_10(Edison) -> ((p_1(Edison) | p_2(Edison)) & -(p_1(Edison) & p_2(Edison)))",
                    "(-p_11(Edison) & -p_12(Edison)) | p_5(Edison)",
                    "all x (p_9(x) -> (p_10(x) | p_11(x)))",
                    "p_14(Edison)",
                    "-p_17(Edison)",
                    "p_17(Edison) | p_16(Edison)",
                    "-p_8(Edison) | p_14(Edison)"
                ],
                "formulas(goals)": [
                    "p_9(Edison) | (p_0(Edison) | p_16(Edison))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_6(x) \u2228 p_17(x)) \u2192 p_7(x))",
                    "p_13(Edison) \u2192 (p_12(Edison) \u2227 p_14(Edison))",
                    "(p_11(Edison) \u2228 p_12(Edison)) \u2192 p_5(Edison)"
                ],
                "added_facts": [
                    "p_17(Edison) \u2228 p_16(Edison)",
                    "\u00acp_8(Edison) \u2228 p_14(Edison)"
                ],
                "added_rules": [
                    "\u2200x ((\u00acp_6(x) \u2227 \u00acp_17(x)) \u2228 p_7(x))",
                    "(\u00acp_13(Edison) \u2228 p_12(Edison)) \u2227 (\u00acp_13(Edison) \u2228 p_14(Edison))",
                    "(\u00acp_11(Edison) \u2227 \u00acp_12(Edison)) \u2228 p_5(Edison)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_17(Edison)\n\u00acp_16(Edison) \u2228 p_17(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_17(Edison)",
                    "-p_16(Edison) | p_17(Edison)"
                ],
                "formulas(goals)": [
                    "-p_16(Edison)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_17(Edison)"
                ],
                "removed_rules": [
                    "\u00acp_17(Edison) \u2192 p_16(Edison)",
                    "p_17(Edison) \u2228 p_16(Edison)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_16(Edison) \u2228 p_17(Edison)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_17(Edison)\n\u00acp_16(Edison) \u2228 p_17(Edison)\n\u00acp_16(Edison)\n\u00acp_9(Edison)\n\u00acp_0(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_17(Edison)",
                    "-p_16(Edison) | p_17(Edison)",
                    "-p_16(Edison)",
                    "-p_9(Edison)",
                    "-p_0(Edison)"
                ],
                "formulas(goals)": [
                    "-(p_9(Edison) | (p_0(Edison) | p_16(Edison)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_16(Edison)",
                    "\u00acp_9(Edison)",
                    "\u00acp_0(Edison)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_16(Edison) \u2228 p_17(Edison)\n\u00acp_9(Edison)\n\u00acp_0(Edison)\np_16(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_16(Edison) | p_17(Edison)",
                    "\u00acp_9(Edison)",
                    "\u00acp_0(Edison)",
                    "p_16(Edison)"
                ],
                "formulas(goals)": [
                    "p_9(Edison) | (p_0(Edison) | p_16(Edison))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_17(Edison)",
                    "\u00acp_16(Edison)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_16(Edison)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_16(Edison) \u2228 p_17(Edison)\n\u00acp_9(Edison)\n\u00acp_0(Edison)\n\u00acp_16(Edison)",
            "Initial Goal": "p_9(Edison) \u2228 (p_0(Edison) \u2228 p_16(Edison))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_16(Edison) | p_17(Edison)",
                    "-p_9(Edison)",
                    "-p_0(Edison)",
                    "-p_16(Edison)"
                ],
                "formulas(goals)": [
                    "-(p_9(Edison) | (p_0(Edison) | p_16(Edison)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_16(Edison)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_16(Edison)"
                ],
                "added_rules": []
            }
        }
    ]
}