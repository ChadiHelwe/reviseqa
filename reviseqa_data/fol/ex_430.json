{
    "background_story": "Caleb was a meticulous librarian with a passion for organization. He spent most of his days cataloging books and ensuring that the library's collection was arranged alphabetically by author and title. His attention to detail was impressive, and visitors often marveled at the precision with which he maintained the shelves. Caleb's love for order extended beyond his work; he even kept his personal book collection at home arranged alphabetically. His friends would often tease him about his obsession, but Caleb couldn't imagine a more satisfying way to spend his time. As he often said, 'A place for everything, and everything in its place, alphabetically, of course!'",
    "predicates": [
        {
            "id": 0,
            "name": "is_neat"
        },
        {
            "id": 1,
            "name": "detail_oriented"
        },
        {
            "id": 2,
            "name": "manages_time"
        },
        {
            "id": 3,
            "name": "achieves_goals"
        },
        {
            "id": 4,
            "name": "learns_fast"
        },
        {
            "id": 5,
            "name": "takes_risks"
        },
        {
            "id": 6,
            "name": "organized"
        },
        {
            "id": 7,
            "name": "meticulous"
        },
        {
            "id": 8,
            "name": "productive"
        },
        {
            "id": 9,
            "name": "focused"
        },
        {
            "id": 10,
            "name": "methodical"
        },
        {
            "id": 11,
            "name": "is_spontaneous"
        },
        {
            "id": 12,
            "name": "prioritize_tasks"
        },
        {
            "id": 13,
            "name": "plans_ahead"
        },
        {
            "id": 14,
            "name": "succeeds"
        },
        {
            "id": 15,
            "name": "keeps_shelves"
        },
        {
            "id": 16,
            "name": "labels_books"
        },
        {
            "id": 17,
            "name": "sets_goals"
        },
        {
            "id": 18,
            "name": "works_hard"
        },
        {
            "id": 19,
            "name": "uses_lists"
        },
        {
            "id": 20,
            "name": "tracks_progress"
        },
        {
            "id": 21,
            "name": "likes_order"
        },
        {
            "id": 22,
            "name": "makes_lists"
        },
        {
            "id": 23,
            "name": "stays_motivated"
        }
    ],
    "subject_name": "Caleb",
    "subject_category": "human",
    "keyword": "alphabetically",
    "all_facts": [
        {
            "id": 0,
            "subject": "Caleb",
            "text": "Caleb is neat.",
            "fol": "p_0(Caleb)",
            "str_fol": "is_neat(Caleb)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Caleb",
            "text": "Caleb is detail-oriented.",
            "fol": "p_1(Caleb)",
            "str_fol": "detail_oriented(Caleb)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Caleb",
            "text": "Caleb does not manage his time.",
            "fol": "\u00acp_2(Caleb)",
            "str_fol": "\u00acmanages_time(Caleb)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Caleb",
            "text": "Caleb does not achieve his goals.",
            "fol": "\u00acp_3(Caleb)",
            "str_fol": "\u00acachieves_goals(Caleb)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Caleb",
            "text": "Caleb does not learn quickly.",
            "fol": "\u00acp_4(Caleb)",
            "str_fol": "\u00aclearns_fast(Caleb)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Caleb",
            "text": "Caleb does not take risks.",
            "fol": "\u00acp_5(Caleb)",
            "str_fol": "\u00actakes_risks(Caleb)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Caleb",
            "text": "Caleb does not succeed.",
            "fol": "\u00acp_14(Caleb)",
            "str_fol": "\u00acsucceeds(Caleb)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Caleb",
            "text": "Caleb does not plan ahead.",
            "fol": "\u00acp_13(Caleb)",
            "str_fol": "\u00acplans_ahead(Caleb)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Caleb",
            "text": "Caleb is spontaneous.",
            "fol": "p_11(Caleb)",
            "str_fol": "is_spontaneous(Caleb)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Caleb",
            "text": "Caleb is unable to prioritize tasks.",
            "fol": "\u00acp_12(Caleb)",
            "str_fol": "\u00acprioritize_tasks(Caleb)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Caleb",
            "text": "Caleb is focused.",
            "fol": "p_9(Caleb)",
            "str_fol": "focused(Caleb)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Caleb",
            "text": "Caleb is not methodical.",
            "fol": "\u00acp_10(Caleb)",
            "str_fol": "\u00acmethodical(Caleb)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Caleb",
            "text": "Caleb is productive.",
            "fol": "p_8(Caleb)",
            "str_fol": "productive(Caleb)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Caleb",
            "text": "Caleb is not organized.",
            "fol": "\u00acp_6(Caleb)",
            "str_fol": "\u00acorganized(Caleb)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Caleb",
            "text": "Caleb is meticulous.",
            "fol": "p_7(Caleb)",
            "str_fol": "meticulous(Caleb)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Caleb",
            "text": "Caleb does not learn quickly.",
            "fol": "\u00acp_4(Caleb)",
            "str_fol": "\u00aclearns_fast(Caleb)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Caleb",
            "text": "Caleb does not take risks.",
            "fol": "\u00acp_5(Caleb)",
            "str_fol": "\u00actakes_risks(Caleb)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Caleb",
            "text": "Caleb does not manage his time.",
            "fol": "\u00acp_2(Caleb)",
            "str_fol": "\u00acmanages_time(Caleb)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Caleb",
            "text": "Caleb does not achieve his goals.",
            "fol": "\u00acp_3(Caleb)",
            "str_fol": "\u00acachieves_goals(Caleb)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Caleb",
            "text": "Caleb is detail-oriented.",
            "fol": "p_1(Caleb)",
            "str_fol": "detail_oriented(Caleb)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Caleb",
            "text": "Caleb is neat.",
            "fol": "p_0(Caleb)",
            "str_fol": "is_neat(Caleb)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Caleb succeeds, then he either learns quickly or takes risks (but not both).",
            "fol": "p_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))",
            "str_fol": "succeeds(Caleb) \u2192 (learns_fast(Caleb) \u2295 takes_risks(Caleb))"
        },
        {
            "id": 7,
            "text": "If Caleb plans ahead, then he will succeed.",
            "fol": "p_13(Caleb) \u2192 p_14(Caleb)",
            "str_fol": "plans_ahead(Caleb) \u2192 succeeds(Caleb)"
        },
        {
            "id": 6,
            "text": "Caleb either plans ahead or is spontaneous.",
            "fol": "p_13(Caleb) \u2228 p_11(Caleb)",
            "str_fol": "plans_ahead(Caleb) \u2228 is_spontaneous(Caleb)"
        },
        {
            "id": 5,
            "text": "If Caleb either prioritizes tasks or manages time (but not both), then he achieves his goals.",
            "fol": "(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)",
            "str_fol": "(prioritize_tasks(Caleb) \u2295 manages_time(Caleb)) \u2192 achieves_goals(Caleb)"
        },
        {
            "id": 4,
            "text": "Everyone who is detail-oriented is either focused or able to prioritize tasks (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (detail_oriented(x) \u2192 (focused(x) \u2228 prioritize_tasks(x)))"
        },
        {
            "id": 3,
            "text": "Caleb is either spontaneous or methodical, but not both, reflecting his tendency to prioritize structure over flexibility.",
            "fol": "p_11(Caleb) \u2295 p_10(Caleb)",
            "str_fol": "is_spontaneous(Caleb) \u2295 methodical(Caleb)"
        },
        {
            "id": 2,
            "text": "If Caleb is focused, then he is either methodical or productive, but not both.",
            "fol": "p_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))",
            "str_fol": "focused(Caleb) \u2192 (methodical(Caleb) \u2295 productive(Caleb))"
        },
        {
            "id": 1,
            "text": "Caleb is either neat or organized, but not both, reflecting his unique approach to maintaining order.",
            "fol": "p_0(Caleb) \u2295 p_6(Caleb)",
            "str_fol": "is_neat(Caleb) \u2295 organized(Caleb)"
        },
        {
            "id": 0,
            "text": "If Caleb is either organized or meticulous (but not both), then he is productive.",
            "fol": "(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)",
            "str_fol": "(organized(Caleb) \u2295 meticulous(Caleb)) \u2192 productive(Caleb)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Caleb",
            "text": "Caleb does not learn quickly.",
            "fol": "\u00acp_4(Caleb)",
            "str_fol": "\u00aclearns_fast(Caleb)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Caleb",
            "text": "Caleb does not take risks.",
            "fol": "\u00acp_5(Caleb)",
            "str_fol": "\u00actakes_risks(Caleb)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Caleb",
            "text": "Caleb does not manage his time.",
            "fol": "\u00acp_2(Caleb)",
            "str_fol": "\u00acmanages_time(Caleb)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Caleb",
            "text": "Caleb does not achieve his goals.",
            "fol": "\u00acp_3(Caleb)",
            "str_fol": "\u00acachieves_goals(Caleb)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Caleb",
            "text": "Caleb is detail-oriented.",
            "fol": "p_1(Caleb)",
            "str_fol": "detail_oriented(Caleb)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Caleb",
            "text": "Caleb is neat.",
            "fol": "p_0(Caleb)",
            "str_fol": "is_neat(Caleb)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Caleb succeeds, then he either learns quickly or takes risks (but not both).",
            "fol": "p_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))",
            "str_fol": "succeeds(Caleb) \u2192 (learns_fast(Caleb) \u2295 takes_risks(Caleb))"
        },
        {
            "id": 7,
            "text": "If Caleb plans ahead, then he will succeed.",
            "fol": "p_13(Caleb) \u2192 p_14(Caleb)",
            "str_fol": "plans_ahead(Caleb) \u2192 succeeds(Caleb)"
        },
        {
            "id": 6,
            "text": "Caleb either plans ahead or is spontaneous.",
            "fol": "p_13(Caleb) \u2228 p_11(Caleb)",
            "str_fol": "plans_ahead(Caleb) \u2228 is_spontaneous(Caleb)"
        },
        {
            "id": 5,
            "text": "If Caleb either prioritizes tasks or manages time (but not both), then he achieves his goals.",
            "fol": "(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)",
            "str_fol": "(prioritize_tasks(Caleb) \u2295 manages_time(Caleb)) \u2192 achieves_goals(Caleb)"
        },
        {
            "id": 4,
            "text": "Everyone who is detail-oriented is either focused or able to prioritize tasks (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (detail_oriented(x) \u2192 (focused(x) \u2228 prioritize_tasks(x)))"
        },
        {
            "id": 3,
            "text": "Caleb is either spontaneous or methodical, but not both, reflecting his tendency to prioritize structure over flexibility.",
            "fol": "p_11(Caleb) \u2295 p_10(Caleb)",
            "str_fol": "is_spontaneous(Caleb) \u2295 methodical(Caleb)"
        },
        {
            "id": 2,
            "text": "If Caleb is focused, then he is either methodical or productive, but not both.",
            "fol": "p_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))",
            "str_fol": "focused(Caleb) \u2192 (methodical(Caleb) \u2295 productive(Caleb))"
        },
        {
            "id": 1,
            "text": "Caleb is either neat or organized, but not both, reflecting his unique approach to maintaining order.",
            "fol": "p_0(Caleb) \u2295 p_6(Caleb)",
            "str_fol": "is_neat(Caleb) \u2295 organized(Caleb)"
        },
        {
            "id": 0,
            "text": "If Caleb is either organized or meticulous (but not both), then he is productive.",
            "fol": "(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)",
            "str_fol": "(organized(Caleb) \u2295 meticulous(Caleb)) \u2192 productive(Caleb)"
        }
    ],
    "context_fol": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\n(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)",
    "conclusion": {
        "id": 14,
        "subject": "Caleb",
        "text": "Caleb is meticulous.",
        "fol": "p_7(Caleb)",
        "str_fol": "meticulous(Caleb)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Caleb)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Caleb",
                    "text": "Caleb does not learn quickly.",
                    "fol": "\u00acp_4(Caleb)",
                    "str_fol": "\u00aclearns_fast(Caleb)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Caleb",
                    "text": "Caleb does not take risks.",
                    "fol": "\u00acp_5(Caleb)",
                    "str_fol": "\u00actakes_risks(Caleb)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Caleb succeeds, then he either learns quickly or takes risks (but not both).",
                    "fol": "p_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))",
                    "str_fol": "succeeds(Caleb) \u2192 (learns_fast(Caleb) \u2295 takes_risks(Caleb))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Caleb",
                "text": "Caleb does not succeed.",
                "fol": "\u00acp_14(Caleb)",
                "str_fol": "\u00acsucceeds(Caleb)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Caleb",
                    "text": "Caleb does not succeed.",
                    "fol": "\u00acp_14(Caleb)",
                    "str_fol": "\u00acsucceeds(Caleb)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Caleb plans ahead, then he will succeed.",
                    "fol": "p_13(Caleb) \u2192 p_14(Caleb)",
                    "str_fol": "plans_ahead(Caleb) \u2192 succeeds(Caleb)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Caleb",
                "text": "Caleb does not plan ahead.",
                "fol": "\u00acp_13(Caleb)",
                "str_fol": "\u00acplans_ahead(Caleb)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Caleb",
                    "text": "Caleb does not plan ahead.",
                    "fol": "\u00acp_13(Caleb)",
                    "str_fol": "\u00acplans_ahead(Caleb)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Caleb either plans ahead or is spontaneous.",
                    "fol": "p_13(Caleb) \u2228 p_11(Caleb)",
                    "str_fol": "plans_ahead(Caleb) \u2228 is_spontaneous(Caleb)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Caleb",
                "text": "Caleb is spontaneous.",
                "fol": "p_11(Caleb)",
                "str_fol": "is_spontaneous(Caleb)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Caleb",
                    "text": "Caleb does not manage his time.",
                    "fol": "\u00acp_2(Caleb)",
                    "str_fol": "\u00acmanages_time(Caleb)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Caleb",
                    "text": "Caleb does not achieve his goals.",
                    "fol": "\u00acp_3(Caleb)",
                    "str_fol": "\u00acachieves_goals(Caleb)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Caleb either prioritizes tasks or manages time (but not both), then he achieves his goals.",
                    "fol": "(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)",
                    "str_fol": "(prioritize_tasks(Caleb) \u2295 manages_time(Caleb)) \u2192 achieves_goals(Caleb)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Caleb",
                "text": "Caleb is unable to prioritize tasks.",
                "fol": "\u00acp_12(Caleb)",
                "str_fol": "\u00acprioritize_tasks(Caleb)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Caleb",
                    "text": "Caleb is detail-oriented.",
                    "fol": "p_1(Caleb)",
                    "str_fol": "detail_oriented(Caleb)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Caleb",
                    "text": "Caleb is unable to prioritize tasks.",
                    "fol": "\u00acp_12(Caleb)",
                    "str_fol": "\u00acprioritize_tasks(Caleb)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Everyone who is detail-oriented is either focused or able to prioritize tasks (or both).",
                    "fol": "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (detail_oriented(x) \u2192 (focused(x) \u2228 prioritize_tasks(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Caleb",
                "text": "Caleb is focused.",
                "fol": "p_9(Caleb)",
                "str_fol": "focused(Caleb)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Caleb",
                    "text": "Caleb is spontaneous.",
                    "fol": "p_11(Caleb)",
                    "str_fol": "is_spontaneous(Caleb)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Caleb is either spontaneous or methodical, but not both, reflecting his tendency to prioritize structure over flexibility.",
                    "fol": "p_11(Caleb) \u2295 p_10(Caleb)",
                    "str_fol": "is_spontaneous(Caleb) \u2295 methodical(Caleb)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Caleb",
                "text": "Caleb is not methodical.",
                "fol": "\u00acp_10(Caleb)",
                "str_fol": "\u00acmethodical(Caleb)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Caleb",
                    "text": "Caleb is focused.",
                    "fol": "p_9(Caleb)",
                    "str_fol": "focused(Caleb)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Caleb",
                    "text": "Caleb is not methodical.",
                    "fol": "\u00acp_10(Caleb)",
                    "str_fol": "\u00acmethodical(Caleb)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Caleb is focused, then he is either methodical or productive, but not both.",
                    "fol": "p_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))",
                    "str_fol": "focused(Caleb) \u2192 (methodical(Caleb) \u2295 productive(Caleb))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Caleb",
                "text": "Caleb is productive.",
                "fol": "p_8(Caleb)",
                "str_fol": "productive(Caleb)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Caleb",
                    "text": "Caleb is neat.",
                    "fol": "p_0(Caleb)",
                    "str_fol": "is_neat(Caleb)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Caleb is either neat or organized, but not both, reflecting his unique approach to maintaining order.",
                    "fol": "p_0(Caleb) \u2295 p_6(Caleb)",
                    "str_fol": "is_neat(Caleb) \u2295 organized(Caleb)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Caleb",
                "text": "Caleb is not organized.",
                "fol": "\u00acp_6(Caleb)",
                "str_fol": "\u00acorganized(Caleb)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Caleb",
                    "text": "Caleb is not organized.",
                    "fol": "\u00acp_6(Caleb)",
                    "str_fol": "\u00acorganized(Caleb)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Caleb",
                    "text": "Caleb is productive.",
                    "fol": "p_8(Caleb)",
                    "str_fol": "productive(Caleb)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Caleb is either organized or meticulous (but not both), then he is productive.",
                    "fol": "(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)",
                    "str_fol": "(organized(Caleb) \u2295 meticulous(Caleb)) \u2192 productive(Caleb)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\n(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb)",
                    "-p_5(Caleb)",
                    "-p_2(Caleb)",
                    "-p_3(Caleb)",
                    "p_1(Caleb)",
                    "p_0(Caleb)",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb)))",
                    "p_13(Caleb) -> p_14(Caleb)",
                    "p_13(Caleb) | p_11(Caleb)",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb)",
                    "all x (p_1(x) -> (p_9(x) | p_12(x)))",
                    "-(p_11(Caleb) <-> p_10(Caleb))",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb)))",
                    "-(p_0(Caleb) <-> p_6(Caleb))",
                    "(-(p_6(Caleb) <-> p_7(Caleb))) -> p_8(Caleb)",
                    "p_6(Caleb) | p_7(Caleb)"
                ],
                "formulas(goals)": [
                    "p_7(Caleb)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Caleb) \u2228 p_7(Caleb)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\n(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)\np_8(Caleb) \u2192 \u00acp_7(Caleb)",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb).",
                    "-p_5(Caleb).",
                    "-p_2(Caleb).",
                    "-p_3(Caleb).",
                    "p_1(Caleb).",
                    "p_0(Caleb).",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb))).",
                    "p_13(Caleb) -> p_14(Caleb).",
                    "p_13(Caleb) | p_11(Caleb).",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb).",
                    "all x (p_1(x) -> (p_9(x) | p_12(x))).",
                    "(-(p_11(Caleb) <-> p_10(Caleb))).",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb))).",
                    "(-(p_0(Caleb) <-> p_6(Caleb))).",
                    "(-(p_6(Caleb) <-> p_7(Caleb))) -> p_8(Caleb).",
                    "p_8(Caleb) -> -p_7(Caleb)."
                ],
                "formulas(goals)": [
                    "-p_7(Caleb)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Caleb) \u2192 \u00acp_7(Caleb)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\n(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)\np_8(Caleb) \u2192 \u00acp_7(Caleb)\np_11(Caleb) \u2192 \u00acp_10(Caleb)\np_10(Caleb) \u2192 \u00acp_11(Caleb)\n(p_9(Caleb) \u2227 p_10(Caleb)) \u2192 \u00acp_8(Caleb)\n(p_9(Caleb) \u2227 p_8(Caleb)) \u2192 \u00acp_10(Caleb)\n(p_12(Caleb) \u2227 \u00acp_2(Caleb)) \u2192 p_3(Caleb)\n(\u00acp_12(Caleb) \u2227 p_2(Caleb)) \u2192 p_3(Caleb)\np_1(Caleb) \u2192 (p_9(Caleb) \u2228 p_12(Caleb))\n(p_8(Caleb) \u2227 p_7(Caleb)) \u2192 false",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb)",
                    "-p_5(Caleb)",
                    "-p_2(Caleb)",
                    "-p_3(Caleb)",
                    "p_1(Caleb)",
                    "p_0(Caleb)",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb)))",
                    "p_13(Caleb) -> p_14(Caleb)",
                    "p_13(Caleb) | p_11(Caleb)",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb)",
                    "all x (p_1(x) -> (p_9(x) | p_12(x)))",
                    "-(p_11(Caleb) <-> p_10(Caleb))",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb)))",
                    "-(p_0(Caleb) <-> p_6(Caleb))",
                    "(-(p_6(Caleb) <-> p_7(Caleb))) -> p_8(Caleb)",
                    "p_8(Caleb) -> -p_7(Caleb)",
                    "p_11(Caleb) -> -p_10(Caleb)",
                    "p_10(Caleb) -> -p_11(Caleb)",
                    "(p_9(Caleb) & p_10(Caleb)) -> -p_8(Caleb)",
                    "(p_9(Caleb) & p_8(Caleb)) -> -p_10(Caleb)",
                    "(p_12(Caleb) & -p_2(Caleb)) -> p_3(Caleb)",
                    "(-p_12(Caleb) & p_2(Caleb)) -> p_3(Caleb)",
                    "p_1(Caleb) -> (p_9(Caleb) | p_12(Caleb))",
                    "(p_8(Caleb) & p_7(Caleb)) -> $F"
                ],
                "formulas(goals)": [
                    "-p_7(Caleb)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Caleb) \u2192 \u00acp_10(Caleb)",
                    "p_10(Caleb) \u2192 \u00acp_11(Caleb)",
                    "(p_9(Caleb) \u2227 p_10(Caleb)) \u2192 \u00acp_8(Caleb)",
                    "(p_9(Caleb) \u2227 p_8(Caleb)) \u2192 \u00acp_10(Caleb)",
                    "(p_12(Caleb) \u2227 \u00acp_2(Caleb)) \u2192 p_3(Caleb)",
                    "(\u00acp_12(Caleb) \u2227 p_2(Caleb)) \u2192 p_3(Caleb)",
                    "p_1(Caleb) \u2192 (p_9(Caleb) \u2228 p_12(Caleb))",
                    "(p_8(Caleb) \u2227 p_7(Caleb)) \u2192 false"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\np_8(Caleb) \u2192 \u00acp_7(Caleb)\np_11(Caleb) \u2192 \u00acp_10(Caleb)\np_10(Caleb) \u2192 \u00acp_11(Caleb)\n(p_9(Caleb) \u2227 p_10(Caleb)) \u2192 \u00acp_8(Caleb)\n(p_9(Caleb) \u2227 p_8(Caleb)) \u2192 \u00acp_10(Caleb)\n(p_12(Caleb) \u2227 \u00acp_2(Caleb)) \u2192 p_3(Caleb)\n(\u00acp_12(Caleb) \u2227 p_2(Caleb)) \u2192 p_3(Caleb)\np_1(Caleb) \u2192 (p_9(Caleb) \u2228 p_12(Caleb))\n(p_8(Caleb) \u2227 p_7(Caleb)) \u2192 false\n\u00acp_6(Caleb) \u2192 p_7(Caleb)",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb).",
                    "-p_5(Caleb).",
                    "-p_2(Caleb).",
                    "-p_3(Caleb).",
                    "p_1(Caleb).",
                    "p_0(Caleb).",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb))).",
                    "p_13(Caleb) -> p_14(Caleb).",
                    "p_13(Caleb) | p_11(Caleb).",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb).",
                    "all x (p_1(x) -> (p_9(x) | p_12(x))).",
                    "-(p_11(Caleb) <-> p_10(Caleb)).",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb))).",
                    "-(p_0(Caleb) <-> p_6(Caleb)).",
                    "p_8(Caleb) -> -p_7(Caleb).",
                    "p_11(Caleb) -> -p_10(Caleb).",
                    "p_10(Caleb) -> -p_11(Caleb).",
                    "(p_9(Caleb) & p_10(Caleb)) -> -p_8(Caleb).",
                    "(p_9(Caleb) & p_8(Caleb)) -> -p_10(Caleb).",
                    "(p_12(Caleb) & -p_2(Caleb)) -> p_3(Caleb).",
                    "(-p_12(Caleb) & p_2(Caleb)) -> p_3(Caleb).",
                    "p_1(Caleb) -> (p_9(Caleb) | p_12(Caleb)).",
                    "(p_8(Caleb) & p_7(Caleb)) -> $F.",
                    "-p_6(Caleb) -> p_7(Caleb)."
                ],
                "formulas(goals)": [
                    "p_7(Caleb)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Caleb) \u2295 p_7(Caleb)) \u2192 p_8(Caleb)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Caleb) \u2192 p_7(Caleb)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\np_8(Caleb) \u2192 \u00acp_7(Caleb)\np_11(Caleb) \u2192 \u00acp_10(Caleb)\np_10(Caleb) \u2192 \u00acp_11(Caleb)\n(p_9(Caleb) \u2227 p_10(Caleb)) \u2192 \u00acp_8(Caleb)\n(p_9(Caleb) \u2227 p_8(Caleb)) \u2192 \u00acp_10(Caleb)\n(p_12(Caleb) \u2227 \u00acp_2(Caleb)) \u2192 p_3(Caleb)\n(\u00acp_12(Caleb) \u2227 p_2(Caleb)) \u2192 p_3(Caleb)\np_1(Caleb) \u2192 (p_9(Caleb) \u2228 p_12(Caleb))\n(p_8(Caleb) \u2227 p_7(Caleb)) \u2192 false\n\u00acp_6(Caleb) \u2192 p_8(Caleb)",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb)",
                    "-p_5(Caleb)",
                    "-p_2(Caleb)",
                    "-p_3(Caleb)",
                    "p_1(Caleb)",
                    "p_0(Caleb)",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb)))",
                    "p_13(Caleb) -> p_14(Caleb)",
                    "p_13(Caleb) | p_11(Caleb)",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb)",
                    "all x (p_1(x) -> (p_9(x) | p_12(x)))",
                    "-(p_11(Caleb) <-> p_10(Caleb))",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb)))",
                    "-(p_0(Caleb) <-> p_6(Caleb))",
                    "p_8(Caleb) -> -p_7(Caleb)",
                    "p_11(Caleb) -> -p_10(Caleb)",
                    "p_10(Caleb) -> -p_11(Caleb)",
                    "(p_9(Caleb) & p_10(Caleb)) -> -p_8(Caleb)",
                    "(p_9(Caleb) & p_8(Caleb)) -> -p_10(Caleb)",
                    "(p_12(Caleb) & -p_2(Caleb)) -> p_3(Caleb)",
                    "(-p_12(Caleb) & p_2(Caleb)) -> p_3(Caleb)",
                    "p_1(Caleb) -> (p_9(Caleb) | p_12(Caleb))",
                    "(p_8(Caleb) & p_7(Caleb)) -> $F",
                    "-p_6(Caleb) -> p_8(Caleb)"
                ],
                "formulas(goals)": [
                    "-p_7(Caleb)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_6(Caleb) \u2192 p_7(Caleb)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Caleb) \u2192 p_8(Caleb)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\np_11(Caleb) \u2192 \u00acp_10(Caleb)\np_10(Caleb) \u2192 \u00acp_11(Caleb)\n(p_9(Caleb) \u2227 p_10(Caleb)) \u2192 \u00acp_8(Caleb)\n(p_9(Caleb) \u2227 p_8(Caleb)) \u2192 \u00acp_10(Caleb)\n(p_12(Caleb) \u2227 \u00acp_2(Caleb)) \u2192 p_3(Caleb)\n(\u00acp_12(Caleb) \u2227 p_2(Caleb)) \u2192 p_3(Caleb)\np_1(Caleb) \u2192 (p_9(Caleb) \u2228 p_12(Caleb))\n\u00acp_6(Caleb) \u2192 p_8(Caleb)\np_7(Caleb) \u2194 p_8(Caleb)",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb)",
                    "-p_5(Caleb)",
                    "-p_2(Caleb)",
                    "-p_3(Caleb)",
                    "p_1(Caleb)",
                    "p_0(Caleb)",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb)))",
                    "p_13(Caleb) -> p_14(Caleb)",
                    "p_13(Caleb) | p_11(Caleb)",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb)",
                    "all x (p_1(x) -> (p_9(x) | p_12(x)))",
                    "-(p_11(Caleb) <-> p_10(Caleb))",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb)))",
                    "-(p_0(Caleb) <-> p_6(Caleb))",
                    "p_11(Caleb) -> -p_10(Caleb)",
                    "p_10(Caleb) -> -p_11(Caleb)",
                    "(p_9(Caleb) & p_10(Caleb)) -> -p_8(Caleb)",
                    "(p_9(Caleb) & p_8(Caleb)) -> -p_10(Caleb)",
                    "(p_12(Caleb) & -p_2(Caleb)) -> p_3(Caleb)",
                    "(-p_12(Caleb) & p_2(Caleb)) -> p_3(Caleb)",
                    "p_1(Caleb) -> (p_9(Caleb) | p_12(Caleb))",
                    "-p_6(Caleb) -> p_8(Caleb)",
                    "p_7(Caleb) <-> p_8(Caleb)"
                ],
                "formulas(goals)": [
                    "p_7(Caleb)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Caleb) \u2192 \u00acp_7(Caleb)",
                    "(p_8(Caleb) \u2227 p_7(Caleb)) \u2192 false"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Caleb) \u2194 p_8(Caleb)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Caleb)\n\u00acp_5(Caleb)\n\u00acp_2(Caleb)\n\u00acp_3(Caleb)\np_1(Caleb)\np_0(Caleb)\np_14(Caleb) \u2192 (p_4(Caleb) \u2295 p_5(Caleb))\np_13(Caleb) \u2192 p_14(Caleb)\np_13(Caleb) \u2228 p_11(Caleb)\n(p_12(Caleb) \u2295 p_2(Caleb)) \u2192 p_3(Caleb)\n\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_12(x)))\np_11(Caleb) \u2295 p_10(Caleb)\np_9(Caleb) \u2192 (p_10(Caleb) \u2295 p_8(Caleb))\np_0(Caleb) \u2295 p_6(Caleb)\np_11(Caleb) \u2192 \u00acp_10(Caleb)\np_10(Caleb) \u2192 \u00acp_11(Caleb)\n(p_9(Caleb) \u2227 p_10(Caleb)) \u2192 \u00acp_8(Caleb)\n(p_9(Caleb) \u2227 p_8(Caleb)) \u2192 \u00acp_10(Caleb)\n(p_12(Caleb) \u2227 \u00acp_2(Caleb)) \u2192 p_3(Caleb)\n(\u00acp_12(Caleb) \u2227 p_2(Caleb)) \u2192 p_3(Caleb)\np_1(Caleb) \u2192 (p_9(Caleb) \u2228 p_12(Caleb))\n\u00acp_6(Caleb) \u2192 p_8(Caleb)\np_7(Caleb) \u2194 p_8(Caleb)\np_11(Caleb) \u2192 \u00acp_8(Caleb)",
            "Initial Goal": "p_7(Caleb)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Caleb).",
                    "-p_5(Caleb).",
                    "-p_2(Caleb).",
                    "-p_3(Caleb).",
                    "p_1(Caleb).",
                    "p_0(Caleb).",
                    "p_14(Caleb) -> (-(p_4(Caleb) <-> p_5(Caleb))).",
                    "p_13(Caleb) -> p_14(Caleb).",
                    "p_13(Caleb) | p_11(Caleb).",
                    "(-(p_12(Caleb) <-> p_2(Caleb))) -> p_3(Caleb).",
                    "all x (p_1(x) -> (p_9(x) | p_12(x))).",
                    "-(p_11(Caleb) <-> p_10(Caleb)).",
                    "p_9(Caleb) -> (-(p_10(Caleb) <-> p_8(Caleb))).",
                    "-(p_0(Caleb) <-> p_6(Caleb)).",
                    "p_11(Caleb) -> -p_10(Caleb).",
                    "p_10(Caleb) -> -p_11(Caleb).",
                    "(p_9(Caleb) & p_10(Caleb)) -> -p_8(Caleb).",
                    "(p_9(Caleb) & p_8(Caleb)) -> -p_10(Caleb).",
                    "(p_12(Caleb) & -p_2(Caleb)) -> p_3(Caleb).",
                    "(-p_12(Caleb) & p_2(Caleb)) -> p_3(Caleb).",
                    "p_1(Caleb) -> (p_9(Caleb) | p_12(Caleb)).",
                    "-p_6(Caleb) -> p_8(Caleb).",
                    "p_7(Caleb) <-> p_8(Caleb).",
                    "p_11(Caleb) -> -p_8(Caleb)."
                ],
                "formulas(goals)": [
                    "-p_7(Caleb)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Caleb) \u2192 \u00acp_8(Caleb)"
                ]
            }
        }
    ]
}