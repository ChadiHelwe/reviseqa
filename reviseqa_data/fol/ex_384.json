{
    "background_story": "Leon, a 35-year-old husband and father of two, lived an active life until he was diagnosed with nephrocalcinosis, a rare kidney condition characterized by the deposition of calcium salts in the renal tissue. Despite the challenges, Leon remained determined to manage his condition and maintain his quality of life. With the support of his family and medical team, he adhered to a strict diet and treatment plan, making significant lifestyle adjustments to slow the progression of the disease. Leon's resilience and positive attitude inspired those around him, and he became an advocate for kidney health awareness, helping others understand and cope with similar conditions. Through his journey, Leon discovered a new sense of purpose and appreciation for life's simple joys.",
    "predicates": [
        {
            "id": 0,
            "name": "stays_positive"
        },
        {
            "id": 1,
            "name": "inspires_others"
        },
        {
            "id": 2,
            "name": "copes_well"
        },
        {
            "id": 3,
            "name": "finds_purpose"
        },
        {
            "id": 4,
            "name": "manages_condition"
        },
        {
            "id": 5,
            "name": "adheres_to_diet"
        },
        {
            "id": 6,
            "name": "diagnosed_with_illness"
        },
        {
            "id": 7,
            "name": "require_lifestyle_changes"
        },
        {
            "id": 8,
            "name": "need_medical_support"
        },
        {
            "id": 9,
            "name": "has_good_health"
        },
        {
            "id": 10,
            "name": "feels_happy"
        },
        {
            "id": 11,
            "name": "has_support"
        },
        {
            "id": 12,
            "name": "lives_fulfilled"
        },
        {
            "id": 13,
            "name": "has_resilience"
        },
        {
            "id": 14,
            "name": "seeks_treatment"
        },
        {
            "id": 15,
            "name": "faces_challenges"
        },
        {
            "id": 16,
            "name": "experiences_setbacks"
        },
        {
            "id": 17,
            "name": "eats_well"
        },
        {
            "id": 18,
            "name": "exercises_regularly"
        },
        {
            "id": 19,
            "name": "enjoys_life"
        },
        {
            "id": 20,
            "name": "is_content"
        },
        {
            "id": 21,
            "name": "loves_family"
        },
        {
            "id": 22,
            "name": "enjoys_hobbies"
        },
        {
            "id": 23,
            "name": "has_chronic_condition"
        },
        {
            "id": 24,
            "name": "has_family"
        },
        {
            "id": 25,
            "name": "builds_network"
        },
        {
            "id": 26,
            "name": "faces_adversity"
        },
        {
            "id": 27,
            "name": "has_condition"
        }
    ],
    "subject_name": "Leon",
    "subject_category": "human",
    "keyword": "nephrocalcinosis",
    "all_facts": [
        {
            "id": 0,
            "subject": "Leon",
            "text": "Leon stays positive.",
            "fol": "p_0(Leon)",
            "str_fol": "stays_positive(Leon)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Leon",
            "text": "Leon does not inspire others.",
            "fol": "\u00acp_1(Leon)",
            "str_fol": "\u00acinspires_others(Leon)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Leon",
            "text": "Leon does not cope well with his condition.",
            "fol": "\u00acp_2(Leon)",
            "str_fol": "\u00accopes_well(Leon)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Leon",
            "text": "Leon does not find purpose.",
            "fol": "\u00acp_3(Leon)",
            "str_fol": "\u00acfinds_purpose(Leon)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Leon",
            "text": "Leon manages his condition.",
            "fol": "p_4(Leon)",
            "str_fol": "manages_condition(Leon)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Leon",
            "text": "Leon does not adhere to a diet.",
            "fol": "\u00acp_5(Leon)",
            "str_fol": "\u00acadheres_to_diet(Leon)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Leon",
            "text": "Leon seeks treatment.",
            "fol": "p_14(Leon)",
            "str_fol": "seeks_treatment(Leon)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Leon",
            "text": "Leon does not have resilience.",
            "fol": "\u00acp_13(Leon)",
            "str_fol": "\u00achas_resilience(Leon)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Leon",
            "text": "Leon does not live a fulfilled life.",
            "fol": "\u00acp_12(Leon)",
            "str_fol": "\u00aclives_fulfilled(Leon)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Leon",
            "text": "Leon does not feel happy.",
            "fol": "\u00acp_10(Leon)",
            "str_fol": "\u00acfeels_happy(Leon)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Leon",
            "text": "Leon does not have good health.",
            "fol": "\u00acp_9(Leon)",
            "str_fol": "\u00achas_good_health(Leon)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Leon",
            "text": "Leon is diagnosed with an illness.",
            "fol": "p_6(Leon)",
            "str_fol": "diagnosed_with_illness(Leon)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Leon",
            "text": "Leon does not need medical support.",
            "fol": "\u00acp_8(Leon)",
            "str_fol": "\u00acneed_medical_support(Leon)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Leon",
            "text": "Leon manages his condition.",
            "fol": "p_4(Leon)",
            "str_fol": "manages_condition(Leon)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Leon",
            "text": "Leon does not adhere to a diet.",
            "fol": "\u00acp_5(Leon)",
            "str_fol": "\u00acadheres_to_diet(Leon)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Leon",
            "text": "Leon does not cope well with his condition.",
            "fol": "\u00acp_2(Leon)",
            "str_fol": "\u00accopes_well(Leon)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Leon",
            "text": "Leon does not inspire others.",
            "fol": "\u00acp_1(Leon)",
            "str_fol": "\u00acinspires_others(Leon)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Leon",
            "text": "Leon stays positive.",
            "fol": "p_0(Leon)",
            "str_fol": "stays_positive(Leon)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Leon",
            "text": "Leon does not find purpose.",
            "fol": "\u00acp_3(Leon)",
            "str_fol": "\u00acfinds_purpose(Leon)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Everyone who manages their condition either adheres to a diet or seeks treatment (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))",
            "str_fol": "\u2200x (manages_condition(x) \u2192 (adheres_to_diet(x) \u2228 seeks_treatment(x)))"
        },
        {
            "id": 7,
            "text": "Anyone who has resilience either copes well with challenges or inspires others.",
            "fol": "\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (has_resilience(x) \u2192 (copes_well(x) \u2228 inspires_others(x)))"
        },
        {
            "id": 6,
            "text": "If Leon has support, then he will stay positive.",
            "fol": "p_11(Leon) \u2192 p_0(Leon)",
            "str_fol": "has_support(Leon) \u2192 stays_positive(Leon)"
        },
        {
            "id": 5,
            "text": "If Leon requires lifestyle changes, then he seeks treatment.",
            "fol": "p_7(Leon) \u2192 p_14(Leon)",
            "str_fol": "require_lifestyle_changes(Leon) \u2192 seeks_treatment(Leon)"
        },
        {
            "id": 4,
            "text": "If Leon lives a fulfilled life, then he either finds purpose or has resilience, but not both.",
            "fol": "p_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))",
            "str_fol": "lives_fulfilled(Leon) \u2192 (finds_purpose(Leon) \u2295 has_resilience(Leon))"
        },
        {
            "id": 3,
            "text": "If Leon feels happy or has support, then he will live a fulfilled life.",
            "fol": "(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)",
            "str_fol": "(feels_happy(Leon) \u2228 has_support(Leon)) \u2192 lives_fulfilled(Leon)"
        },
        {
            "id": 2,
            "text": "If Leon has good health, then he feels happy.",
            "fol": "p_9(Leon) \u2192 p_10(Leon)",
            "str_fol": "has_good_health(Leon) \u2192 feels_happy(Leon)"
        },
        {
            "id": 1,
            "text": "Leon is either diagnosed with an illness or has good health, but not both.",
            "fol": "p_6(Leon) \u2295 p_9(Leon)",
            "str_fol": "diagnosed_with_illness(Leon) \u2295 has_good_health(Leon)"
        },
        {
            "id": 0,
            "text": "For all humans, if a person is diagnosed with an illness, then they require lifestyle changes and need medical support.",
            "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (diagnosed_with_illness(x) \u2192 (require_lifestyle_changes(x) \u2227 need_medical_support(x)))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Leon",
            "text": "Leon manages his condition.",
            "fol": "p_4(Leon)",
            "str_fol": "manages_condition(Leon)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Leon",
            "text": "Leon does not adhere to a diet.",
            "fol": "\u00acp_5(Leon)",
            "str_fol": "\u00acadheres_to_diet(Leon)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Leon",
            "text": "Leon does not cope well with his condition.",
            "fol": "\u00acp_2(Leon)",
            "str_fol": "\u00accopes_well(Leon)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Leon",
            "text": "Leon does not inspire others.",
            "fol": "\u00acp_1(Leon)",
            "str_fol": "\u00acinspires_others(Leon)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Leon",
            "text": "Leon stays positive.",
            "fol": "p_0(Leon)",
            "str_fol": "stays_positive(Leon)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Leon",
            "text": "Leon does not find purpose.",
            "fol": "\u00acp_3(Leon)",
            "str_fol": "\u00acfinds_purpose(Leon)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Everyone who manages their condition either adheres to a diet or seeks treatment (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))",
            "str_fol": "\u2200x (manages_condition(x) \u2192 (adheres_to_diet(x) \u2228 seeks_treatment(x)))"
        },
        {
            "id": 7,
            "text": "Anyone who has resilience either copes well with challenges or inspires others.",
            "fol": "\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (has_resilience(x) \u2192 (copes_well(x) \u2228 inspires_others(x)))"
        },
        {
            "id": 6,
            "text": "If Leon has support, then he will stay positive.",
            "fol": "p_11(Leon) \u2192 p_0(Leon)",
            "str_fol": "has_support(Leon) \u2192 stays_positive(Leon)"
        },
        {
            "id": 5,
            "text": "If Leon requires lifestyle changes, then he seeks treatment.",
            "fol": "p_7(Leon) \u2192 p_14(Leon)",
            "str_fol": "require_lifestyle_changes(Leon) \u2192 seeks_treatment(Leon)"
        },
        {
            "id": 4,
            "text": "If Leon lives a fulfilled life, then he either finds purpose or has resilience, but not both.",
            "fol": "p_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))",
            "str_fol": "lives_fulfilled(Leon) \u2192 (finds_purpose(Leon) \u2295 has_resilience(Leon))"
        },
        {
            "id": 3,
            "text": "If Leon feels happy or has support, then he will live a fulfilled life.",
            "fol": "(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)",
            "str_fol": "(feels_happy(Leon) \u2228 has_support(Leon)) \u2192 lives_fulfilled(Leon)"
        },
        {
            "id": 2,
            "text": "If Leon has good health, then he feels happy.",
            "fol": "p_9(Leon) \u2192 p_10(Leon)",
            "str_fol": "has_good_health(Leon) \u2192 feels_happy(Leon)"
        },
        {
            "id": 1,
            "text": "Leon is either diagnosed with an illness or has good health, but not both.",
            "fol": "p_6(Leon) \u2295 p_9(Leon)",
            "str_fol": "diagnosed_with_illness(Leon) \u2295 has_good_health(Leon)"
        },
        {
            "id": 0,
            "text": "For all humans, if a person is diagnosed with an illness, then they require lifestyle changes and need medical support.",
            "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (diagnosed_with_illness(x) \u2192 (require_lifestyle_changes(x) \u2227 need_medical_support(x)))"
        }
    ],
    "context_fol": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\np_11(Leon) \u2192 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
    "conclusion": {
        "id": 12,
        "subject": "Leon",
        "text": "Leon does not need medical support.",
        "fol": "\u00acp_8(Leon)",
        "str_fol": "\u00acneed_medical_support(Leon)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_8(Leon)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Leon",
                    "text": "Leon manages his condition.",
                    "fol": "p_4(Leon)",
                    "str_fol": "manages_condition(Leon)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Leon",
                    "text": "Leon does not adhere to a diet.",
                    "fol": "\u00acp_5(Leon)",
                    "str_fol": "\u00acadheres_to_diet(Leon)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Everyone who manages their condition either adheres to a diet or seeks treatment (or both).",
                    "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))",
                    "str_fol": "\u2200x (manages_condition(x) \u2192 (adheres_to_diet(x) \u2228 seeks_treatment(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Leon",
                "text": "Leon seeks treatment.",
                "fol": "p_14(Leon)",
                "str_fol": "seeks_treatment(Leon)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Leon",
                    "text": "Leon does not cope well with his condition.",
                    "fol": "\u00acp_2(Leon)",
                    "str_fol": "\u00accopes_well(Leon)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Leon",
                    "text": "Leon does not inspire others.",
                    "fol": "\u00acp_1(Leon)",
                    "str_fol": "\u00acinspires_others(Leon)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who has resilience either copes well with challenges or inspires others.",
                    "fol": "\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))",
                    "str_fol": "\u2200x (has_resilience(x) \u2192 (copes_well(x) \u2228 inspires_others(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Leon",
                "text": "Leon does not have resilience.",
                "fol": "\u00acp_13(Leon)",
                "str_fol": "\u00achas_resilience(Leon)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Leon",
                    "text": "Leon stays positive.",
                    "fol": "p_0(Leon)",
                    "str_fol": "stays_positive(Leon)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Leon has support, then he will stay positive.",
                    "fol": "p_11(Leon) \u2192 p_0(Leon)",
                    "str_fol": "has_support(Leon) \u2192 stays_positive(Leon)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Leon",
                    "text": "Leon seeks treatment.",
                    "fol": "p_14(Leon)",
                    "str_fol": "seeks_treatment(Leon)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Leon requires lifestyle changes, then he seeks treatment.",
                    "fol": "p_7(Leon) \u2192 p_14(Leon)",
                    "str_fol": "require_lifestyle_changes(Leon) \u2192 seeks_treatment(Leon)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Leon",
                    "text": "Leon does not find purpose.",
                    "fol": "\u00acp_3(Leon)",
                    "str_fol": "\u00acfinds_purpose(Leon)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Leon",
                    "text": "Leon does not have resilience.",
                    "fol": "\u00acp_13(Leon)",
                    "str_fol": "\u00achas_resilience(Leon)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Leon lives a fulfilled life, then he either finds purpose or has resilience, but not both.",
                    "fol": "p_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))",
                    "str_fol": "lives_fulfilled(Leon) \u2192 (finds_purpose(Leon) \u2295 has_resilience(Leon))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Leon",
                "text": "Leon does not live a fulfilled life.",
                "fol": "\u00acp_12(Leon)",
                "str_fol": "\u00aclives_fulfilled(Leon)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Leon",
                    "text": "Leon does not live a fulfilled life.",
                    "fol": "\u00acp_12(Leon)",
                    "str_fol": "\u00aclives_fulfilled(Leon)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Leon feels happy or has support, then he will live a fulfilled life.",
                    "fol": "(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)",
                    "str_fol": "(feels_happy(Leon) \u2228 has_support(Leon)) \u2192 lives_fulfilled(Leon)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Leon",
                "text": "Leon does not feel happy.",
                "fol": "\u00acp_10(Leon)",
                "str_fol": "\u00acfeels_happy(Leon)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Leon",
                    "text": "Leon does not feel happy.",
                    "fol": "\u00acp_10(Leon)",
                    "str_fol": "\u00acfeels_happy(Leon)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Leon has good health, then he feels happy.",
                    "fol": "p_9(Leon) \u2192 p_10(Leon)",
                    "str_fol": "has_good_health(Leon) \u2192 feels_happy(Leon)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Leon",
                "text": "Leon does not have good health.",
                "fol": "\u00acp_9(Leon)",
                "str_fol": "\u00achas_good_health(Leon)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Leon",
                    "text": "Leon does not have good health.",
                    "fol": "\u00acp_9(Leon)",
                    "str_fol": "\u00achas_good_health(Leon)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Leon is either diagnosed with an illness or has good health, but not both.",
                    "fol": "p_6(Leon) \u2295 p_9(Leon)",
                    "str_fol": "diagnosed_with_illness(Leon) \u2295 has_good_health(Leon)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Leon",
                "text": "Leon is diagnosed with an illness.",
                "fol": "p_6(Leon)",
                "str_fol": "diagnosed_with_illness(Leon)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Leon",
                    "text": "Leon is diagnosed with an illness.",
                    "fol": "p_6(Leon)",
                    "str_fol": "diagnosed_with_illness(Leon)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if a person is diagnosed with an illness, then they require lifestyle changes and need medical support.",
                    "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
                    "str_fol": "\u2200x (diagnosed_with_illness(x) \u2192 (require_lifestyle_changes(x) \u2227 need_medical_support(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Leon",
                "text": "Leon does not need medical support.",
                "fol": "\u00acp_8(Leon)",
                "str_fol": "\u00acneed_medical_support(Leon)",
                "negation": true
            }
        }
    ],
    "proof_trace": "2 (all x (p_13(x) -> p_2(x) | p_1(x))).  [assumption].\n5 p_12(Leon) -> -(p_3(Leon) <-> p_13(Leon)).  [assumption].\n6 p_10(Leon) | p_11(Leon) -> p_12(Leon).  [assumption].\n7 p_9(Leon) -> p_10(Leon).  [assumption].\n8 -(p_6(Leon) <-> p_9(Leon)).  [assumption].\n9 (all x (p_6(x) -> p_7(x) & p_8(x))).  [assumption].\n10 --p_8(Leon).  [goal].\n15 -p_13(x) | p_2(x) | p_1(x).  [clausify(2)].\n16 -p_2(Leon).  [assumption].\n17 -p_13(Leon) | p_1(Leon).  [resolve(15,b,16,a)].\n18 -p_1(Leon).  [assumption].\n19 -p_12(Leon) | p_3(Leon) | p_13(Leon).  [clausify(5)].\n20 -p_3(Leon).  [assumption].\n24 -p_9(Leon) | p_10(Leon).  [clausify(7)].\n25 -p_10(Leon) | p_12(Leon).  [clausify(6)].\n27 p_6(Leon) | p_9(Leon).  [clausify(8)].\n28 -p_6(x) | p_8(x).  [clausify(9)].\n29 p_8(Leon) | p_9(Leon).  [resolve(28,a,27,a)].\n30 -p_8(Leon).  [deny(10)].\n31 -p_12(Leon) | p_13(Leon).  [resolve(19,b,20,a)].\n32 -p_13(Leon).  [resolve(17,b,18,a)].\n33 p_9(Leon).  [resolve(29,a,30,a)].\n34 -p_9(Leon) | p_12(Leon).  [resolve(24,b,25,a)].\n35 p_12(Leon).  [resolve(33,a,34,a)].\n36 -p_12(Leon).  [resolve(31,b,32,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon)",
                    "-p_5(Leon)",
                    "-p_2(Leon)",
                    "-p_1(Leon)",
                    "p_0(Leon)",
                    "-p_3(Leon)",
                    "p_14(Leon)",
                    "all x (-p_4(x) | p_5(x) | p_14(x))",
                    "all x (p_13(x) -> (p_2(x) | p_1(x)))",
                    "-p_11(Leon) | p_0(Leon)",
                    "p_7(Leon) -> p_14(Leon)",
                    "p_12(Leon) -> (-(p_3(Leon) <-> p_13(Leon)))",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon)",
                    "p_9(Leon) -> p_10(Leon)",
                    "-(p_6(Leon) <-> p_9(Leon))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_6(Leon) -> p_8(Leon)",
                    "-p_9(Leon)"
                ],
                "formulas(goals)": [
                    "--p_8(Leon)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Leon)",
                    "\u00acp_9(Leon)"
                ],
                "added_rules": [
                    "p_6(Leon) \u2192 p_8(Leon)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))\n\u2200x (p_13(x) \u2192 \u00ac(\u00acp_2(x) \u2227 \u00acp_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)\np_7(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon).",
                    "-p_5(Leon).",
                    "-p_2(Leon).",
                    "-p_1(Leon).",
                    "p_0(Leon).",
                    "-p_3(Leon).",
                    "p_14(Leon).",
                    "all x (p_4(x) -> (p_5(x) | p_14(x))).",
                    "all x (p_13(x) -> -(-p_2(x) & -p_1(x))).",
                    "-p_11(Leon) | p_0(Leon).",
                    "p_7(Leon) -> p_14(Leon).",
                    "p_12(Leon) -> (-(p_3(Leon) <-> p_13(Leon))).",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon).",
                    "p_9(Leon) -> p_10(Leon).",
                    "(-(p_6(Leon) <-> p_9(Leon))).",
                    "all x (p_6(x) -> (p_7(x) & p_8(x))).",
                    "p_6(Leon) -> p_8(Leon).",
                    "-p_9(Leon).",
                    "p_7(Leon)."
                ],
                "formulas(goals)": [
                    "p_8(Leon)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))",
                    "\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))"
                ],
                "added_facts": [
                    "p_7(Leon)"
                ],
                "added_rules": [
                    "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))",
                    "\u2200x (p_13(x) \u2192 \u00ac(\u00acp_2(x) \u2227 \u00acp_1(x)))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)\np_7(Leon)\np_6(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon).",
                    "-p_5(Leon).",
                    "-p_2(Leon).",
                    "-p_1(Leon).",
                    "p_0(Leon).",
                    "-p_3(Leon).",
                    "p_14(Leon).",
                    "all x (-p_4(x) | p_5(x) | p_14(x)).",
                    "all x (p_13(x) -> (p_2(x) | p_1(x))).",
                    "-p_11(Leon) | p_0(Leon).",
                    "p_7(Leon) -> p_14(Leon).",
                    "p_12(Leon) -> (-(p_3(Leon) <-> p_13(Leon))).",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon).",
                    "p_9(Leon) -> p_10(Leon).",
                    "-(p_6(Leon) <-> p_9(Leon)).",
                    "all x (p_6(x) -> (p_7(x) & p_8(x))).",
                    "p_6(Leon) -> p_8(Leon).",
                    "-p_9(Leon).",
                    "p_7(Leon).",
                    "p_6(Leon)."
                ],
                "formulas(goals)": [
                    "p_8(Leon)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Leon)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)\np_7(Leon)\np_6(Leon)\np_8(Leon)\n\u00acp_6(Leon) \u2228 p_8(Leon)\np_7(Leon) \u2227 p_8(Leon)\np_5(Leon) \u2228 p_14(Leon)\np_8(Leon) \u2228 \u00acp_8(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon)",
                    "-p_5(Leon)",
                    "-p_2(Leon)",
                    "-p_1(Leon)",
                    "p_0(Leon)",
                    "-p_3(Leon)",
                    "p_14(Leon)",
                    "all x (-p_4(x) | p_5(x) | p_14(x))",
                    "all x (p_13(x) -> (p_2(x) | p_1(x)))",
                    "-p_11(Leon) | p_0(Leon)",
                    "p_7(Leon) -> p_14(Leon)",
                    "p_12(Leon) -> (-(p_3(Leon) <-> p_13(Leon)))",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon)",
                    "p_9(Leon) -> p_10(Leon)",
                    "-(p_6(Leon) <-> p_9(Leon))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_6(Leon) -> p_8(Leon)",
                    "-p_9(Leon)",
                    "p_7(Leon)",
                    "p_6(Leon)",
                    "p_8(Leon)",
                    "-p_6(Leon) | p_8(Leon)",
                    "p_7(Leon) & p_8(Leon)",
                    "p_5(Leon) | p_14(Leon)",
                    "p_8(Leon) | -p_8(Leon)"
                ],
                "formulas(goals)": [
                    "p_8(Leon)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Leon)",
                    "p_7(Leon) \u2227 p_8(Leon)",
                    "p_5(Leon) \u2228 p_14(Leon)",
                    "p_8(Leon) \u2228 \u00acp_8(Leon)"
                ],
                "added_rules": [
                    "\u00acp_6(Leon) \u2228 p_8(Leon)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)\np_7(Leon)\np_6(Leon)\np_8(Leon)\n\u00acp_6(Leon) \u2228 p_8(Leon)\np_7(Leon) \u2227 p_8(Leon)\np_5(Leon) \u2228 p_14(Leon)\np_8(Leon) \u2228 \u00acp_8(Leon)\np_6(Leon) \u2228 p_9(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon)",
                    "-p_5(Leon)",
                    "-p_2(Leon)",
                    "-p_1(Leon)",
                    "p_0(Leon)",
                    "-p_3(Leon)",
                    "p_14(Leon)",
                    "all x (-p_4(x) | p_5(x) | p_14(x))",
                    "all x (p_13(x) -> (p_2(x) | p_1(x)))",
                    "-p_11(Leon) | p_0(Leon)",
                    "p_7(Leon) -> p_14(Leon)",
                    "p_12(Leon) -> (-(p_3(Leon) <-> p_13(Leon)))",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon)",
                    "p_9(Leon) -> p_10(Leon)",
                    "-(p_6(Leon) <-> p_9(Leon))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_6(Leon) -> p_8(Leon)",
                    "-p_9(Leon)",
                    "p_7(Leon)",
                    "p_6(Leon)",
                    "p_8(Leon)",
                    "-p_6(Leon) | p_8(Leon)",
                    "p_7(Leon) & p_8(Leon)",
                    "p_5(Leon) | p_14(Leon)",
                    "p_8(Leon) | -p_8(Leon)",
                    "p_6(Leon) | p_9(Leon)"
                ],
                "formulas(goals)": [
                    "--p_8(Leon)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Leon) \u2228 p_9(Leon)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 ((p_3(Leon) \u2228 p_13(Leon)) \u2227 (\u00acp_3(Leon) \u2228 \u00acp_13(Leon)))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)\np_7(Leon)\np_6(Leon)\np_8(Leon)\n\u00acp_6(Leon) \u2228 p_8(Leon)\np_7(Leon) \u2227 p_8(Leon)\np_5(Leon) \u2228 p_14(Leon)\np_8(Leon) \u2228 \u00acp_8(Leon)\np_6(Leon) \u2228 p_9(Leon)\n(p_4(Leon) \u2227 \u00acp_5(Leon)) \u2192 p_14(Leon)\np_7(Leon) \u2228 \u00acp_6(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon)",
                    "-p_5(Leon)",
                    "-p_2(Leon)",
                    "-p_1(Leon)",
                    "p_0(Leon)",
                    "-p_3(Leon)",
                    "p_14(Leon)",
                    "all x (p_4(x) -> (p_5(x) | p_14(x)))",
                    "all x (p_13(x) -> (p_2(x) | p_1(x)))",
                    "-p_11(Leon) | p_0(Leon)",
                    "p_7(Leon) -> p_14(Leon)",
                    "p_12(Leon) -> ((p_3(Leon) | p_13(Leon)) & (-p_3(Leon) | -p_13(Leon)))",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon)",
                    "p_9(Leon) -> p_10(Leon)",
                    "-(p_6(Leon) <-> p_9(Leon))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_6(Leon) -> p_8(Leon)",
                    "-p_9(Leon)",
                    "p_7(Leon)",
                    "p_6(Leon)",
                    "p_8(Leon)",
                    "-p_6(Leon) | p_8(Leon)",
                    "p_7(Leon) & p_8(Leon)",
                    "p_5(Leon) | p_14(Leon)",
                    "p_8(Leon) | -p_8(Leon)",
                    "p_6(Leon) | p_9(Leon)",
                    "(p_4(Leon) & -p_5(Leon)) -> p_14(Leon)",
                    "p_7(Leon) | -p_6(Leon)"
                ],
                "formulas(goals)": [
                    "--p_8(Leon)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_14(x))",
                    "p_12(Leon) \u2192 (p_3(Leon) \u2295 p_13(Leon))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))",
                    "p_12(Leon) \u2192 ((p_3(Leon) \u2228 p_13(Leon)) \u2227 (\u00acp_3(Leon) \u2228 \u00acp_13(Leon)))",
                    "(p_4(Leon) \u2227 \u00acp_5(Leon)) \u2192 p_14(Leon)",
                    "p_7(Leon) \u2228 \u00acp_6(Leon)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leon)\n\u00acp_5(Leon)\n\u00acp_2(Leon)\n\u00acp_1(Leon)\np_0(Leon)\n\u00acp_3(Leon)\np_14(Leon)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_14(x)))\n\u2200x (p_13(x) \u2192 (p_2(x) \u2228 p_1(x)))\n\u00acp_11(Leon) \u2228 p_0(Leon)\np_7(Leon) \u2192 p_14(Leon)\np_12(Leon) \u2192 ((p_3(Leon) \u2228 p_13(Leon)) \u2227 (\u00acp_3(Leon) \u2228 \u00acp_13(Leon)))\n(p_10(Leon) \u2228 p_11(Leon)) \u2192 p_12(Leon)\np_9(Leon) \u2192 p_10(Leon)\np_6(Leon) \u2295 p_9(Leon)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_6(Leon) \u2192 p_8(Leon)\n\u00acp_9(Leon)\np_7(Leon)\np_6(Leon)\np_8(Leon)\n\u00acp_6(Leon) \u2228 p_8(Leon)\np_7(Leon) \u2227 p_8(Leon)\np_5(Leon) \u2228 p_14(Leon)\np_8(Leon) \u2228 \u00acp_8(Leon)\np_6(Leon) \u2228 p_9(Leon)\n(p_4(Leon) \u2227 \u00acp_5(Leon)) \u2192 p_14(Leon)\np_7(Leon) \u2228 \u00acp_6(Leon)\n\u00acp_6(Leon) \u2228 \u00acp_9(Leon)",
            "Initial Goal": "\u00acp_8(Leon)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leon)",
                    "-p_5(Leon)",
                    "-p_2(Leon)",
                    "-p_1(Leon)",
                    "p_0(Leon)",
                    "-p_3(Leon)",
                    "p_14(Leon)",
                    "all x (p_4(x) -> (p_5(x) | p_14(x)))",
                    "all x (p_13(x) -> (p_2(x) | p_1(x)))",
                    "-p_11(Leon) | p_0(Leon)",
                    "p_7(Leon) -> p_14(Leon)",
                    "p_12(Leon) -> ((p_3(Leon) | p_13(Leon)) & (-p_3(Leon) | -p_13(Leon)))",
                    "(p_10(Leon) | p_11(Leon)) -> p_12(Leon)",
                    "p_9(Leon) -> p_10(Leon)",
                    "-(p_6(Leon) <-> p_9(Leon))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_6(Leon) -> p_8(Leon)",
                    "-p_9(Leon)",
                    "p_7(Leon)",
                    "p_6(Leon)",
                    "p_8(Leon)",
                    "-p_6(Leon) | p_8(Leon)",
                    "p_7(Leon) & p_8(Leon)",
                    "p_5(Leon) | p_14(Leon)",
                    "p_8(Leon) | -p_8(Leon)",
                    "p_6(Leon) | p_9(Leon)",
                    "(p_4(Leon) & -p_5(Leon)) -> p_14(Leon)",
                    "p_7(Leon) | -p_6(Leon)",
                    "-p_6(Leon) | -p_9(Leon)"
                ],
                "formulas(goals)": [
                    "--p_8(Leon)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Leon) \u2228 \u00acp_9(Leon)"
                ],
                "added_rules": []
            }
        }
    ]
}