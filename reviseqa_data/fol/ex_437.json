{
    "background_story": "Duncan, a Scottish Highlander, lived a life deeply rooted in the fennic traditions of his ancestors. Growing up in the rugged Highlands, he learned the ancient ways of surviving off the land, from foraging for wild herbs to hunting in the misty glens. Duncan's connection to the natural world was profound, and he spent most of his days exploring the heather-covered moors and the whispering forests of birch and pine. He was especially skilled in the traditional crafts, weaving baskets from fenland reeds and carving wooden tools from the durable roots of ancient trees. Duncan's fennic upbringing gave him a unique perspective on life, one that honored the land, respected the cycles of nature, and found beauty in the simplicity of rural living.",
    "predicates": [
        {
            "id": 0,
            "name": "reuses_materials"
        },
        {
            "id": 1,
            "name": "protects_wildlife"
        },
        {
            "id": 2,
            "name": "loves_outdoors"
        },
        {
            "id": 3,
            "name": "elder"
        },
        {
            "id": 4,
            "name": "is_resourceful"
        },
        {
            "id": 5,
            "name": "values_simplicity"
        },
        {
            "id": 6,
            "name": "dyes_fabrics"
        },
        {
            "id": 7,
            "name": "carves_wood"
        },
        {
            "id": 8,
            "name": "tans_hides"
        },
        {
            "id": 9,
            "name": "respect_nature"
        },
        {
            "id": 10,
            "name": "harm_nature"
        },
        {
            "id": 11,
            "name": "outcast"
        },
        {
            "id": 12,
            "name": "lives_rurally"
        },
        {
            "id": 13,
            "name": "conserves_resources"
        },
        {
            "id": 14,
            "name": "hunter"
        },
        {
            "id": 15,
            "name": "crafts_tools"
        },
        {
            "id": 16,
            "name": "weaves_baskets"
        },
        {
            "id": 17,
            "name": "makes_furniture"
        },
        {
            "id": 18,
            "name": "uses_resources"
        },
        {
            "id": 19,
            "name": "sustains_environment"
        },
        {
            "id": 20,
            "name": "farms_land"
        },
        {
            "id": 21,
            "name": "follows_tradition"
        },
        {
            "id": 22,
            "name": "honors_ancestors"
        },
        {
            "id": 23,
            "name": "tracks_game"
        },
        {
            "id": 24,
            "name": "sets_traps"
        },
        {
            "id": 25,
            "name": "makes_things"
        },
        {
            "id": 26,
            "name": "uses_renewable"
        },
        {
            "id": 27,
            "name": "reduces_waste"
        },
        {
            "id": 28,
            "name": "forages_wild"
        },
        {
            "id": 29,
            "name": "gathers_plants"
        },
        {
            "id": 30,
            "name": "cuts_wood"
        },
        {
            "id": 31,
            "name": "shapes_planks"
        }
    ],
    "subject_name": "Duncan",
    "subject_category": "human",
    "keyword": "fennic",
    "all_facts": [
        {
            "id": 0,
            "subject": "Duncan",
            "text": "Duncan does not reuse materials.",
            "fol": "\u00acp_0(Duncan)",
            "str_fol": "\u00acreuses_materials(Duncan)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Duncan",
            "text": "Duncan does not protect wildlife.",
            "fol": "\u00acp_1(Duncan)",
            "str_fol": "\u00acprotects_wildlife(Duncan)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Duncan",
            "text": "Duncan loves the outdoors.",
            "fol": "p_2(Duncan)",
            "str_fol": "loves_outdoors(Duncan)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Duncan",
            "text": "Duncan is an elder.",
            "fol": "p_3(Duncan)",
            "str_fol": "elder(Duncan)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Duncan",
            "text": "Duncan is not resourceful.",
            "fol": "\u00acp_4(Duncan)",
            "str_fol": "\u00acis_resourceful(Duncan)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Duncan",
            "text": "Duncan does not value simplicity.",
            "fol": "\u00acp_5(Duncan)",
            "str_fol": "\u00acvalues_simplicity(Duncan)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Duncan",
            "text": "Duncan does not dye fabrics.",
            "fol": "\u00acp_6(Duncan)",
            "str_fol": "\u00acdyes_fabrics(Duncan)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Duncan",
            "text": "Duncan carves wood.",
            "fol": "p_7(Duncan)",
            "str_fol": "carves_wood(Duncan)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Duncan",
            "text": "Duncan tans hides.",
            "fol": "p_8(Duncan)",
            "str_fol": "tans_hides(Duncan)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Duncan",
            "text": "Duncan does not make furniture.",
            "fol": "\u00acp_17(Duncan)",
            "str_fol": "\u00acmakes_furniture(Duncan)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Duncan",
            "text": "Duncan does not weave baskets.",
            "fol": "\u00acp_16(Duncan)",
            "str_fol": "\u00acweaves_baskets(Duncan)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Duncan",
            "text": "Duncan does not conserve resources.",
            "fol": "\u00acp_13(Duncan)",
            "str_fol": "\u00acconserves_resources(Duncan)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Duncan",
            "text": "Duncan does not craft tools.",
            "fol": "\u00acp_15(Duncan)",
            "str_fol": "\u00accrafts_tools(Duncan)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Duncan",
            "text": "Duncan is a hunter.",
            "fol": "p_14(Duncan)",
            "str_fol": "hunter(Duncan)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Duncan",
            "text": "Duncan is not an outcast.",
            "fol": "\u00acp_11(Duncan)",
            "str_fol": "\u00acoutcast(Duncan)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Duncan",
            "text": "Duncan lives rurally.",
            "fol": "p_12(Duncan)",
            "str_fol": "lives_rurally(Duncan)",
            "negation": false
        },
        {
            "id": 16,
            "subject": "Duncan",
            "text": "Duncan harms nature.",
            "fol": "p_10(Duncan)",
            "str_fol": "harm_nature(Duncan)",
            "negation": false
        },
        {
            "id": 17,
            "subject": "Duncan",
            "text": "Duncan respects nature.",
            "fol": "p_9(Duncan)",
            "str_fol": "respect_nature(Duncan)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Duncan",
            "text": "Duncan carves wood.",
            "fol": "p_7(Duncan)",
            "str_fol": "carves_wood(Duncan)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Duncan",
            "text": "Duncan tans hides.",
            "fol": "p_8(Duncan)",
            "str_fol": "tans_hides(Duncan)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Duncan",
            "text": "Duncan does not dye fabrics.",
            "fol": "\u00acp_6(Duncan)",
            "str_fol": "\u00acdyes_fabrics(Duncan)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Duncan",
            "text": "Duncan does not reuse materials.",
            "fol": "\u00acp_0(Duncan)",
            "str_fol": "\u00acreuses_materials(Duncan)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Duncan",
            "text": "Duncan does not value simplicity.",
            "fol": "\u00acp_5(Duncan)",
            "str_fol": "\u00acvalues_simplicity(Duncan)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Duncan",
            "text": "Duncan is not resourceful.",
            "fol": "\u00acp_4(Duncan)",
            "str_fol": "\u00acis_resourceful(Duncan)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Duncan",
            "text": "Duncan is an elder.",
            "fol": "p_3(Duncan)",
            "str_fol": "elder(Duncan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Duncan",
            "text": "Duncan loves the outdoors.",
            "fol": "p_2(Duncan)",
            "str_fol": "loves_outdoors(Duncan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Duncan",
            "text": "Duncan does not protect wildlife.",
            "fol": "\u00acp_1(Duncan)",
            "str_fol": "\u00acprotects_wildlife(Duncan)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Duncan carves wood, then he either makes furniture or tans hides.",
            "fol": "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
            "str_fol": "carves_wood(Duncan) \u2192 (tans_hides(Duncan) \u2295 makes_furniture(Duncan))"
        },
        {
            "id": 7,
            "text": "If Duncan weaves baskets, then he either makes furniture or dyes fabrics.",
            "fol": "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
            "str_fol": "weaves_baskets(Duncan) \u2192 (makes_furniture(Duncan) \u2228 dyes_fabrics(Duncan))"
        },
        {
            "id": 6,
            "text": "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
            "fol": "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
            "str_fol": "(reuses_materials(Duncan) \u2295 conserves_resources(Duncan)) \u2192 values_simplicity(Duncan)"
        },
        {
            "id": 5,
            "text": "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
            "fol": "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
            "str_fol": "(crafts_tools(Duncan) \u2295 weaves_baskets(Duncan)) \u2192 is_resourceful(Duncan)"
        },
        {
            "id": 4,
            "text": "Duncan is either a hunter or crafts tools, but not both.",
            "fol": "p_14(Duncan) \u2295 p_15(Duncan)",
            "str_fol": "hunter(Duncan) \u2295 crafts_tools(Duncan)"
        },
        {
            "id": 3,
            "text": "If Duncan is a hunter, then he is either an outcast or an elder, but not both.",
            "fol": "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
            "str_fol": "hunter(Duncan) \u2192 (outcast(Duncan) \u2295 elder(Duncan))"
        },
        {
            "id": 2,
            "text": "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
            "fol": "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
            "str_fol": "loves_outdoors(Duncan) \u2192 (conserves_resources(Duncan) \u2228 lives_rurally(Duncan))"
        },
        {
            "id": 1,
            "text": "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
            "fol": "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
            "str_fol": "lives_rurally(Duncan) \u2192 (harm_nature(Duncan) \u2295 protects_wildlife(Duncan))"
        },
        {
            "id": 0,
            "text": "If Duncan either respects nature or harms nature (but not both), then he would be shunned by his community if he harms nature, as his community values living in harmony with the land.",
            "fol": "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
            "str_fol": "(respect_nature(Duncan) \u2295 harm_nature(Duncan)) \u2192 outcast(Duncan)"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Duncan",
            "text": "Duncan carves wood.",
            "fol": "p_7(Duncan)",
            "str_fol": "carves_wood(Duncan)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Duncan",
            "text": "Duncan tans hides.",
            "fol": "p_8(Duncan)",
            "str_fol": "tans_hides(Duncan)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Duncan",
            "text": "Duncan does not dye fabrics.",
            "fol": "\u00acp_6(Duncan)",
            "str_fol": "\u00acdyes_fabrics(Duncan)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Duncan",
            "text": "Duncan does not reuse materials.",
            "fol": "\u00acp_0(Duncan)",
            "str_fol": "\u00acreuses_materials(Duncan)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Duncan",
            "text": "Duncan does not value simplicity.",
            "fol": "\u00acp_5(Duncan)",
            "str_fol": "\u00acvalues_simplicity(Duncan)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Duncan",
            "text": "Duncan is not resourceful.",
            "fol": "\u00acp_4(Duncan)",
            "str_fol": "\u00acis_resourceful(Duncan)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Duncan",
            "text": "Duncan is an elder.",
            "fol": "p_3(Duncan)",
            "str_fol": "elder(Duncan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Duncan",
            "text": "Duncan loves the outdoors.",
            "fol": "p_2(Duncan)",
            "str_fol": "loves_outdoors(Duncan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Duncan",
            "text": "Duncan does not protect wildlife.",
            "fol": "\u00acp_1(Duncan)",
            "str_fol": "\u00acprotects_wildlife(Duncan)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Duncan carves wood, then he either makes furniture or tans hides.",
            "fol": "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
            "str_fol": "carves_wood(Duncan) \u2192 (tans_hides(Duncan) \u2295 makes_furniture(Duncan))"
        },
        {
            "id": 7,
            "text": "If Duncan weaves baskets, then he either makes furniture or dyes fabrics.",
            "fol": "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
            "str_fol": "weaves_baskets(Duncan) \u2192 (makes_furniture(Duncan) \u2228 dyes_fabrics(Duncan))"
        },
        {
            "id": 6,
            "text": "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
            "fol": "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
            "str_fol": "(reuses_materials(Duncan) \u2295 conserves_resources(Duncan)) \u2192 values_simplicity(Duncan)"
        },
        {
            "id": 5,
            "text": "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
            "fol": "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
            "str_fol": "(crafts_tools(Duncan) \u2295 weaves_baskets(Duncan)) \u2192 is_resourceful(Duncan)"
        },
        {
            "id": 4,
            "text": "Duncan is either a hunter or crafts tools, but not both.",
            "fol": "p_14(Duncan) \u2295 p_15(Duncan)",
            "str_fol": "hunter(Duncan) \u2295 crafts_tools(Duncan)"
        },
        {
            "id": 3,
            "text": "If Duncan is a hunter, then he is either an outcast or an elder, but not both.",
            "fol": "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
            "str_fol": "hunter(Duncan) \u2192 (outcast(Duncan) \u2295 elder(Duncan))"
        },
        {
            "id": 2,
            "text": "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
            "fol": "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
            "str_fol": "loves_outdoors(Duncan) \u2192 (conserves_resources(Duncan) \u2228 lives_rurally(Duncan))"
        },
        {
            "id": 1,
            "text": "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
            "fol": "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
            "str_fol": "lives_rurally(Duncan) \u2192 (harm_nature(Duncan) \u2295 protects_wildlife(Duncan))"
        },
        {
            "id": 0,
            "text": "If Duncan either respects nature or harms nature (but not both), then he would be shunned by his community if he harms nature, as his community values living in harmony with the land.",
            "fol": "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
            "str_fol": "(respect_nature(Duncan) \u2295 harm_nature(Duncan)) \u2192 outcast(Duncan)"
        }
    ],
    "context_fol": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\n\u00acp_1(Duncan)\np_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\n(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
    "conclusion": {
        "id": 17,
        "subject": "Duncan",
        "text": "Duncan respects nature.",
        "fol": "p_9(Duncan)",
        "str_fol": "respect_nature(Duncan)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_9(Duncan)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Duncan",
                    "text": "Duncan carves wood.",
                    "fol": "p_7(Duncan)",
                    "str_fol": "carves_wood(Duncan)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Duncan",
                    "text": "Duncan tans hides.",
                    "fol": "p_8(Duncan)",
                    "str_fol": "tans_hides(Duncan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Duncan carves wood, then he either makes furniture or tans hides.",
                    "fol": "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
                    "str_fol": "carves_wood(Duncan) \u2192 (tans_hides(Duncan) \u2295 makes_furniture(Duncan))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Duncan",
                "text": "Duncan does not make furniture.",
                "fol": "\u00acp_17(Duncan)",
                "str_fol": "\u00acmakes_furniture(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Duncan",
                    "text": "Duncan does not make furniture.",
                    "fol": "\u00acp_17(Duncan)",
                    "str_fol": "\u00acmakes_furniture(Duncan)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Duncan",
                    "text": "Duncan does not dye fabrics.",
                    "fol": "\u00acp_6(Duncan)",
                    "str_fol": "\u00acdyes_fabrics(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Duncan weaves baskets, then he either makes furniture or dyes fabrics.",
                    "fol": "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                    "str_fol": "weaves_baskets(Duncan) \u2192 (makes_furniture(Duncan) \u2228 dyes_fabrics(Duncan))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Duncan",
                "text": "Duncan does not weave baskets.",
                "fol": "\u00acp_16(Duncan)",
                "str_fol": "\u00acweaves_baskets(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Duncan",
                    "text": "Duncan does not reuse materials.",
                    "fol": "\u00acp_0(Duncan)",
                    "str_fol": "\u00acreuses_materials(Duncan)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Duncan",
                    "text": "Duncan does not value simplicity.",
                    "fol": "\u00acp_5(Duncan)",
                    "str_fol": "\u00acvalues_simplicity(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
                    "fol": "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
                    "str_fol": "(reuses_materials(Duncan) \u2295 conserves_resources(Duncan)) \u2192 values_simplicity(Duncan)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Duncan",
                "text": "Duncan does not conserve resources.",
                "fol": "\u00acp_13(Duncan)",
                "str_fol": "\u00acconserves_resources(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Duncan",
                    "text": "Duncan does not weave baskets.",
                    "fol": "\u00acp_16(Duncan)",
                    "str_fol": "\u00acweaves_baskets(Duncan)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Duncan",
                    "text": "Duncan is not resourceful.",
                    "fol": "\u00acp_4(Duncan)",
                    "str_fol": "\u00acis_resourceful(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                    "fol": "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                    "str_fol": "(crafts_tools(Duncan) \u2295 weaves_baskets(Duncan)) \u2192 is_resourceful(Duncan)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Duncan",
                "text": "Duncan does not craft tools.",
                "fol": "\u00acp_15(Duncan)",
                "str_fol": "\u00accrafts_tools(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Duncan",
                    "text": "Duncan does not craft tools.",
                    "fol": "\u00acp_15(Duncan)",
                    "str_fol": "\u00accrafts_tools(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Duncan is either a hunter or crafts tools, but not both.",
                    "fol": "p_14(Duncan) \u2295 p_15(Duncan)",
                    "str_fol": "hunter(Duncan) \u2295 crafts_tools(Duncan)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Duncan",
                "text": "Duncan is a hunter.",
                "fol": "p_14(Duncan)",
                "str_fol": "hunter(Duncan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Duncan",
                    "text": "Duncan is a hunter.",
                    "fol": "p_14(Duncan)",
                    "str_fol": "hunter(Duncan)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Duncan",
                    "text": "Duncan is an elder.",
                    "fol": "p_3(Duncan)",
                    "str_fol": "elder(Duncan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Duncan is a hunter, then he is either an outcast or an elder, but not both.",
                    "fol": "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
                    "str_fol": "hunter(Duncan) \u2192 (outcast(Duncan) \u2295 elder(Duncan))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Duncan",
                "text": "Duncan is not an outcast.",
                "fol": "\u00acp_11(Duncan)",
                "str_fol": "\u00acoutcast(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Duncan",
                    "text": "Duncan loves the outdoors.",
                    "fol": "p_2(Duncan)",
                    "str_fol": "loves_outdoors(Duncan)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Duncan",
                    "text": "Duncan does not conserve resources.",
                    "fol": "\u00acp_13(Duncan)",
                    "str_fol": "\u00acconserves_resources(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                    "fol": "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                    "str_fol": "loves_outdoors(Duncan) \u2192 (conserves_resources(Duncan) \u2228 lives_rurally(Duncan))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Duncan",
                "text": "Duncan lives rurally.",
                "fol": "p_12(Duncan)",
                "str_fol": "lives_rurally(Duncan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Duncan",
                    "text": "Duncan lives rurally.",
                    "fol": "p_12(Duncan)",
                    "str_fol": "lives_rurally(Duncan)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Duncan",
                    "text": "Duncan does not protect wildlife.",
                    "fol": "\u00acp_1(Duncan)",
                    "str_fol": "\u00acprotects_wildlife(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
                    "fol": "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
                    "str_fol": "lives_rurally(Duncan) \u2192 (harm_nature(Duncan) \u2295 protects_wildlife(Duncan))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Duncan",
                "text": "Duncan harms nature.",
                "fol": "p_10(Duncan)",
                "str_fol": "harm_nature(Duncan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 16,
                    "subject": "Duncan",
                    "text": "Duncan harms nature.",
                    "fol": "p_10(Duncan)",
                    "str_fol": "harm_nature(Duncan)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Duncan",
                    "text": "Duncan is not an outcast.",
                    "fol": "\u00acp_11(Duncan)",
                    "str_fol": "\u00acoutcast(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Duncan either respects nature or harms nature (but not both), then he would be shunned by his community if he harms nature, as his community values living in harmony with the land.",
                    "fol": "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                    "str_fol": "(respect_nature(Duncan) \u2295 harm_nature(Duncan)) \u2192 outcast(Duncan)"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Duncan",
                "text": "Duncan respects nature.",
                "fol": "p_9(Duncan)",
                "str_fol": "respect_nature(Duncan)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan)).  [assumption].\n2 p_16(Duncan) -> p_17(Duncan) | p_6(Duncan).  [assumption].\n3 -(p_0(Duncan) <-> p_13(Duncan)) -> p_5(Duncan).  [assumption].\n4 -(p_15(Duncan) <-> p_16(Duncan)) -> p_4(Duncan).  [assumption].\n5 -(p_14(Duncan) <-> p_15(Duncan)).  [assumption].\n6 p_14(Duncan) -> -(p_11(Duncan) <-> p_3(Duncan)).  [assumption].\n7 p_2(Duncan) -> p_13(Duncan) | p_12(Duncan).  [assumption].\n8 p_12(Duncan) -> -(p_10(Duncan) <-> p_1(Duncan)).  [assumption].\n9 -(p_9(Duncan) <-> p_10(Duncan)) -> p_11(Duncan).  [assumption].\n10 p_9(Duncan).  [goal].\n12 p_7(Duncan).  [assumption].\n13 -p_7(Duncan) | -p_8(Duncan) | -p_17(Duncan).  [clausify(1)].\n14 -p_8(Duncan) | -p_17(Duncan).  [resolve(13,a,12,a)].\n15 p_8(Duncan).  [assumption].\n17 -p_16(Duncan) | p_17(Duncan) | p_6(Duncan).  [clausify(2)].\n18 -p_6(Duncan).  [assumption].\n19 p_0(Duncan) | -p_13(Duncan) | p_5(Duncan).  [clausify(3)].\n20 -p_0(Duncan).  [assumption].\n22 -p_13(Duncan) | p_5(Duncan).  [resolve(19,a,20,a)].\n23 -p_5(Duncan).  [assumption].\n24 -p_15(Duncan) | p_16(Duncan) | p_4(Duncan).  [clausify(4)].\n25 -p_4(Duncan).  [assumption].\n27 -p_14(Duncan) | -p_11(Duncan) | -p_3(Duncan).  [clausify(6)].\n28 p_3(Duncan).  [assumption].\n30 -p_2(Duncan) | p_13(Duncan) | p_12(Duncan).  [clausify(7)].\n31 p_2(Duncan).  [assumption].\n32 -p_12(Duncan) | p_10(Duncan) | p_1(Duncan).  [clausify(8)].\n33 -p_1(Duncan).  [assumption].\n36 p_14(Duncan) | p_15(Duncan).  [clausify(5)].\n37 -p_14(Duncan) | -p_11(Duncan).  [resolve(27,c,28,a)].\n38 p_9(Duncan) | -p_10(Duncan) | p_11(Duncan).  [clausify(9)].\n40 -p_9(Duncan).  [deny(10)].\n41 -p_16(Duncan) | p_17(Duncan).  [resolve(17,c,18,a)].\n42 -p_17(Duncan).  [resolve(14,a,15,a)].\n43 p_13(Duncan) | p_12(Duncan).  [resolve(30,a,31,a)].\n44 -p_13(Duncan).  [resolve(22,b,23,a)].\n46 -p_15(Duncan) | p_16(Duncan).  [resolve(24,c,25,a)].\n47 -p_11(Duncan) | p_15(Duncan).  [resolve(37,a,36,a)].\n48 p_12(Duncan).  [resolve(43,a,44,a)].\n49 -p_12(Duncan) | p_10(Duncan).  [resolve(32,c,33,a)].\n50 p_10(Duncan).  [resolve(48,a,49,a)].\n51 -p_10(Duncan) | p_11(Duncan).  [resolve(40,a,38,a)].\n52 -p_11(Duncan) | p_16(Duncan).  [resolve(47,b,46,a)].\n53 -p_16(Duncan).  [resolve(41,b,42,a)].\n54 -p_11(Duncan).  [resolve(52,b,53,a)].\n55 p_11(Duncan).  [resolve(50,a,51,a)].\n56 $F.  [resolve(54,a,55,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Duncan).\np_8(Duncan).\n\u00acp_6(Duncan).\n\u00acp_0(Duncan).\n\u00acp_5(Duncan).\n\u00acp_4(Duncan).\np_3(Duncan).\np_2(Duncan).\np_1(Duncan).\np_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan)).\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan)).\n(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan).\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan).\np_14(Duncan) \u2295 p_15(Duncan).\np_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan)).\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan)).\np_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan)).\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan).",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan).",
                    "p_8(Duncan).",
                    "-p_6(Duncan).",
                    "-p_0(Duncan).",
                    "-p_5(Duncan).",
                    "-p_4(Duncan).",
                    "p_3(Duncan).",
                    "p_2(Duncan).",
                    "p_1(Duncan).",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan))).",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan)).",
                    "(-(p_0(Duncan) <-> p_13(Duncan))) -> p_5(Duncan).",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan).",
                    "-(p_14(Duncan) <-> p_15(Duncan)).",
                    "p_14(Duncan) -> (-(p_11(Duncan) <-> p_3(Duncan))).",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan)).",
                    "p_12(Duncan) -> (-(p_10(Duncan) <-> p_1(Duncan))).",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)."
                ],
                "formulas(goals)": [
                    "-p_9(Duncan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Duncan)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Duncan)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\np_1(Duncan)\np_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\n(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 \u00ac(p_11(Duncan) \u2295 p_3(Duncan))\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)\np_11(Duncan) \u2192 p_9(Duncan)",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan)))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "(-(p_0(Duncan) <-> p_13(Duncan))) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "-(p_14(Duncan) <-> p_15(Duncan))",
                    "p_14(Duncan) -> -(-(p_11(Duncan) <-> p_3(Duncan)))",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> (-(p_10(Duncan) <-> p_1(Duncan)))",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_11(Duncan) -> p_9(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_14(Duncan) \u2192 \u00ac(p_11(Duncan) \u2295 p_3(Duncan))",
                    "p_11(Duncan) \u2192 p_9(Duncan)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\np_1(Duncan)\np_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\np_13(Duncan) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 p_11(Duncan)\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 \u00acp_10(Duncan)\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)\np_11(Duncan) \u2192 p_9(Duncan)\np_12(Duncan)",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "-(p_15(Duncan) <-> p_16(Duncan)) -> p_4(Duncan)",
                    "-(p_14(Duncan) <-> p_15(Duncan))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "-(p_9(Duncan) <-> p_10(Duncan)) -> p_11(Duncan)",
                    "p_11(Duncan) -> p_9(Duncan)",
                    "p_12(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
                    "p_14(Duncan) \u2192 \u00ac(p_11(Duncan) \u2295 p_3(Duncan))",
                    "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))"
                ],
                "added_facts": [
                    "p_12(Duncan)"
                ],
                "added_rules": [
                    "p_13(Duncan) \u2192 p_5(Duncan)",
                    "p_14(Duncan) \u2192 p_11(Duncan)",
                    "p_12(Duncan) \u2192 \u00acp_10(Duncan)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\np_1(Duncan)\np_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\np_13(Duncan) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 p_11(Duncan)\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 \u00acp_10(Duncan)\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)\np_12(Duncan)\np_9(Duncan) \u2192 \u00acp_11(Duncan)",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan)))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "(-(p_14(Duncan) <-> p_15(Duncan)))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> (-p_10(Duncan))",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_9(Duncan) -> (-p_11(Duncan))"
                ],
                "formulas(goals)": [
                    "-p_9(Duncan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_11(Duncan) \u2192 p_9(Duncan)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Duncan) \u2192 \u00acp_11(Duncan)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\np_1(Duncan)\np_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\np_13(Duncan) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 p_11(Duncan)\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 \u00acp_10(Duncan)\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)\np_12(Duncan)\np_12(Duncan) \u2192 p_9(Duncan)",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "(-(p_14(Duncan) <-> p_15(Duncan)))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_12(Duncan) -> p_9(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Duncan) \u2192 \u00acp_11(Duncan)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_12(Duncan) \u2192 p_9(Duncan)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\np_1(Duncan)\np_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\np_13(Duncan) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 p_11(Duncan)\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 \u00acp_10(Duncan)\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)\np_12(Duncan)\np_12(Duncan) \u2192 p_9(Duncan)\np_12(Duncan) \u2192 (\u00acp_10(Duncan) \u2227 p_9(Duncan))\np_12(Duncan) \u2192 p_11(Duncan)",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "-(p_14(Duncan) <-> p_15(Duncan))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_12(Duncan) -> p_9(Duncan)",
                    "p_12(Duncan) -> (-p_10(Duncan) & p_9(Duncan))",
                    "p_12(Duncan) -> p_11(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_12(Duncan) \u2192 (\u00acp_10(Duncan) \u2227 p_9(Duncan))",
                    "p_12(Duncan) \u2192 p_11(Duncan)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Duncan)\np_8(Duncan)\n\u00acp_6(Duncan)\n\u00acp_0(Duncan)\n\u00acp_5(Duncan)\n\u00acp_4(Duncan)\np_3(Duncan)\np_2(Duncan)\np_1(Duncan)\np_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))\np_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))\np_13(Duncan) \u2192 p_5(Duncan)\n(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)\np_14(Duncan) \u2295 p_15(Duncan)\np_14(Duncan) \u2192 p_11(Duncan)\np_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))\np_12(Duncan) \u2192 \u00acp_10(Duncan)\n(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)\np_12(Duncan)\np_12(Duncan) \u2192 p_11(Duncan)\np_14(Duncan) \u2192 \u00acp_9(Duncan)",
            "Initial Goal": "p_9(Duncan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan)))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "(-(p_14(Duncan) <-> p_15(Duncan)))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_12(Duncan) -> p_11(Duncan)",
                    "p_14(Duncan) -> -p_9(Duncan)"
                ],
                "formulas(goals)": [
                    "-p_9(Duncan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_12(Duncan) \u2192 p_9(Duncan)",
                    "p_12(Duncan) \u2192 (\u00acp_10(Duncan) \u2227 p_9(Duncan))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_14(Duncan) \u2192 \u00acp_9(Duncan)"
                ]
            }
        }
    ]
}