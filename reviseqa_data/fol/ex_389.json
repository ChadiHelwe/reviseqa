{
    "background_story": "Bailee, a brilliant and eccentric botanist, had always been fascinated by the unique properties of plants. Her obsession, however, was not with their beauty or utility, but with their toxic potential. Bailee suffered from misophonia, a condition where certain sounds triggered intense emotional responses. The sound of chewing, in particular, sent her into a rage. Her colleagues found her distant and aloof, unaware of the turmoil she faced daily. Bailee's research focused on creating a new line of plants with sound-absorbing properties, hoping to one day create a sanctuary from the triggering noises that plagued her. Despite her prickly demeanor, Bailee's work showed promise, and her dedication to finding a solution for her condition inspired those around her to be more understanding and supportive.",
    "predicates": [
        {
            "id": 0,
            "name": "creative"
        },
        {
            "id": 1,
            "name": "faces_challenges"
        },
        {
            "id": 2,
            "name": "is_reserved"
        },
        {
            "id": 3,
            "name": "is_resourceful"
        },
        {
            "id": 4,
            "name": "open_minded"
        },
        {
            "id": 5,
            "name": "perceptive"
        },
        {
            "id": 6,
            "name": "sensitive"
        },
        {
            "id": 7,
            "name": "reclusive"
        },
        {
            "id": 8,
            "name": "introspective"
        },
        {
            "id": 9,
            "name": "empathetic"
        },
        {
            "id": 10,
            "name": "finds_solutions"
        },
        {
            "id": 11,
            "name": "self_aware"
        },
        {
            "id": 12,
            "name": "understanding"
        },
        {
            "id": 13,
            "name": "has_phobia"
        },
        {
            "id": 14,
            "name": "is_innovative"
        },
        {
            "id": 15,
            "name": "cares_deeply"
        },
        {
            "id": 16,
            "name": "feels_strongly"
        },
        {
            "id": 17,
            "name": "persistent"
        },
        {
            "id": 18,
            "name": "overcomes_obstacles"
        },
        {
            "id": 19,
            "name": "loves_reading"
        },
        {
            "id": 20,
            "name": "focused"
        },
        {
            "id": 21,
            "name": "diligent"
        },
        {
            "id": 22,
            "name": "values_privacy"
        },
        {
            "id": 23,
            "name": "has_insights"
        }
    ],
    "subject_name": "Bailee",
    "subject_category": "human",
    "keyword": "misocainea",
    "all_facts": [
        {
            "id": 0,
            "subject": "Bailee",
            "text": "Bailee is creative.",
            "fol": "p_0(Bailee)",
            "str_fol": "creative(Bailee)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Bailee",
            "text": "Bailee does not face challenges.",
            "fol": "\u00acp_1(Bailee)",
            "str_fol": "\u00acfaces_challenges(Bailee)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Bailee",
            "text": "Bailee is reserved.",
            "fol": "p_2(Bailee)",
            "str_fol": "is_reserved(Bailee)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Bailee",
            "text": "Bailee is not resourceful.",
            "fol": "\u00acp_3(Bailee)",
            "str_fol": "\u00acis_resourceful(Bailee)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Bailee",
            "text": "Bailee is open-minded.",
            "fol": "p_4(Bailee)",
            "str_fol": "open_minded(Bailee)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bailee",
            "text": "Bailee is perceptive.",
            "fol": "p_5(Bailee)",
            "str_fol": "perceptive(Bailee)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Bailee",
            "text": "Bailee is not understanding.",
            "fol": "\u00acp_12(Bailee)",
            "str_fol": "\u00acunderstanding(Bailee)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Bailee",
            "text": "Bailee is not introspective.",
            "fol": "\u00acp_8(Bailee)",
            "str_fol": "\u00acintrospective(Bailee)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Bailee",
            "text": "Bailee does not find solutions.",
            "fol": "\u00acp_10(Bailee)",
            "str_fol": "\u00acfinds_solutions(Bailee)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Bailee",
            "text": "Bailee is not empathetic.",
            "fol": "\u00acp_9(Bailee)",
            "str_fol": "\u00acempathetic(Bailee)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Bailee",
            "text": "Bailee is not reclusive.",
            "fol": "\u00acp_7(Bailee)",
            "str_fol": "\u00acreclusive(Bailee)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Bailee",
            "text": "Bailee is sensitive.",
            "fol": "p_6(Bailee)",
            "str_fol": "sensitive(Bailee)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Bailee",
            "text": "Bailee is open-minded.",
            "fol": "p_4(Bailee)",
            "str_fol": "open_minded(Bailee)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bailee",
            "text": "Bailee is perceptive.",
            "fol": "p_5(Bailee)",
            "str_fol": "perceptive(Bailee)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Bailee",
            "text": "Bailee is reserved.",
            "fol": "p_2(Bailee)",
            "str_fol": "is_reserved(Bailee)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Bailee",
            "text": "Bailee is not resourceful.",
            "fol": "\u00acp_3(Bailee)",
            "str_fol": "\u00acis_resourceful(Bailee)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bailee",
            "text": "Bailee does not face challenges.",
            "fol": "\u00acp_1(Bailee)",
            "str_fol": "\u00acfaces_challenges(Bailee)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Bailee",
            "text": "Bailee is creative.",
            "fol": "p_0(Bailee)",
            "str_fol": "creative(Bailee)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Bailee is self-aware, then she is both open-minded and perceptive.",
            "fol": "p_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))",
            "str_fol": "self_aware(Bailee) \u2192 (open_minded(Bailee) \u2227 perceptive(Bailee))"
        },
        {
            "id": 5,
            "text": "Bailee is either understanding or reserved, but not necessarily both.",
            "fol": "p_12(Bailee) \u2295 p_2(Bailee)",
            "str_fol": "understanding(Bailee) \u2295 is_reserved(Bailee)"
        },
        {
            "id": 4,
            "text": "Anyone who is introspective or self-aware is understanding.",
            "fol": "\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((introspective(x) \u2228 self_aware(x)) \u2192 understanding(x))"
        },
        {
            "id": 3,
            "text": "Anyone who finds solutions is resourceful.",
            "fol": "\u2200x (p_10(x) \u2192 p_3(x))",
            "str_fol": "\u2200x (finds_solutions(x) \u2192 is_resourceful(x))"
        },
        {
            "id": 2,
            "text": "If Bailee either faces challenges or is empathetic (but not both), then she finds solutions.",
            "fol": "(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)",
            "str_fol": "(faces_challenges(Bailee) \u2295 empathetic(Bailee)) \u2192 finds_solutions(Bailee)"
        },
        {
            "id": 1,
            "text": "If Bailee is either introspective or reclusive (but not both), then she is empathetic.",
            "fol": "(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)",
            "str_fol": "(introspective(Bailee) \u2295 reclusive(Bailee)) \u2192 empathetic(Bailee)"
        },
        {
            "id": 0,
            "text": "If Bailee is sensitive, then she is either creative or reclusive, but not both.",
            "fol": "p_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))",
            "str_fol": "sensitive(Bailee) \u2192 (creative(Bailee) \u2295 reclusive(Bailee))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Bailee",
            "text": "Bailee is open-minded.",
            "fol": "p_4(Bailee)",
            "str_fol": "open_minded(Bailee)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Bailee",
            "text": "Bailee is perceptive.",
            "fol": "p_5(Bailee)",
            "str_fol": "perceptive(Bailee)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Bailee",
            "text": "Bailee is reserved.",
            "fol": "p_2(Bailee)",
            "str_fol": "is_reserved(Bailee)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Bailee",
            "text": "Bailee is not resourceful.",
            "fol": "\u00acp_3(Bailee)",
            "str_fol": "\u00acis_resourceful(Bailee)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Bailee",
            "text": "Bailee does not face challenges.",
            "fol": "\u00acp_1(Bailee)",
            "str_fol": "\u00acfaces_challenges(Bailee)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Bailee",
            "text": "Bailee is creative.",
            "fol": "p_0(Bailee)",
            "str_fol": "creative(Bailee)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If Bailee is self-aware, then she is both open-minded and perceptive.",
            "fol": "p_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))",
            "str_fol": "self_aware(Bailee) \u2192 (open_minded(Bailee) \u2227 perceptive(Bailee))"
        },
        {
            "id": 5,
            "text": "Bailee is either understanding or reserved, but not necessarily both.",
            "fol": "p_12(Bailee) \u2295 p_2(Bailee)",
            "str_fol": "understanding(Bailee) \u2295 is_reserved(Bailee)"
        },
        {
            "id": 4,
            "text": "Anyone who is introspective or self-aware is understanding.",
            "fol": "\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((introspective(x) \u2228 self_aware(x)) \u2192 understanding(x))"
        },
        {
            "id": 3,
            "text": "Anyone who finds solutions is resourceful.",
            "fol": "\u2200x (p_10(x) \u2192 p_3(x))",
            "str_fol": "\u2200x (finds_solutions(x) \u2192 is_resourceful(x))"
        },
        {
            "id": 2,
            "text": "If Bailee either faces challenges or is empathetic (but not both), then she finds solutions.",
            "fol": "(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)",
            "str_fol": "(faces_challenges(Bailee) \u2295 empathetic(Bailee)) \u2192 finds_solutions(Bailee)"
        },
        {
            "id": 1,
            "text": "If Bailee is either introspective or reclusive (but not both), then she is empathetic.",
            "fol": "(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)",
            "str_fol": "(introspective(Bailee) \u2295 reclusive(Bailee)) \u2192 empathetic(Bailee)"
        },
        {
            "id": 0,
            "text": "If Bailee is sensitive, then she is either creative or reclusive, but not both.",
            "fol": "p_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))",
            "str_fol": "sensitive(Bailee) \u2192 (creative(Bailee) \u2295 reclusive(Bailee))"
        }
    ],
    "context_fol": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\n\u00acp_3(Bailee)\n\u00acp_1(Bailee)\np_0(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))",
    "conclusion": {
        "id": 11,
        "subject": "Bailee",
        "text": "Bailee is sensitive.",
        "fol": "p_6(Bailee)",
        "str_fol": "sensitive(Bailee)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Bailee)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Bailee",
                    "text": "Bailee is open-minded.",
                    "fol": "p_4(Bailee)",
                    "str_fol": "open_minded(Bailee)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Bailee",
                    "text": "Bailee is perceptive.",
                    "fol": "p_5(Bailee)",
                    "str_fol": "perceptive(Bailee)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Bailee is self-aware, then she is both open-minded and perceptive.",
                    "fol": "p_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))",
                    "str_fol": "self_aware(Bailee) \u2192 (open_minded(Bailee) \u2227 perceptive(Bailee))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Bailee",
                    "text": "Bailee is reserved.",
                    "fol": "p_2(Bailee)",
                    "str_fol": "is_reserved(Bailee)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Bailee is either understanding or reserved, but not necessarily both.",
                    "fol": "p_12(Bailee) \u2295 p_2(Bailee)",
                    "str_fol": "understanding(Bailee) \u2295 is_reserved(Bailee)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Bailee",
                "text": "Bailee is not understanding.",
                "fol": "\u00acp_12(Bailee)",
                "str_fol": "\u00acunderstanding(Bailee)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Bailee",
                    "text": "Bailee is not understanding.",
                    "fol": "\u00acp_12(Bailee)",
                    "str_fol": "\u00acunderstanding(Bailee)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who is introspective or self-aware is understanding.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))",
                    "str_fol": "\u2200x ((introspective(x) \u2228 self_aware(x)) \u2192 understanding(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Bailee",
                "text": "Bailee is not introspective.",
                "fol": "\u00acp_8(Bailee)",
                "str_fol": "\u00acintrospective(Bailee)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Bailee",
                    "text": "Bailee is not resourceful.",
                    "fol": "\u00acp_3(Bailee)",
                    "str_fol": "\u00acis_resourceful(Bailee)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who finds solutions is resourceful.",
                    "fol": "\u2200x (p_10(x) \u2192 p_3(x))",
                    "str_fol": "\u2200x (finds_solutions(x) \u2192 is_resourceful(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Bailee",
                "text": "Bailee does not find solutions.",
                "fol": "\u00acp_10(Bailee)",
                "str_fol": "\u00acfinds_solutions(Bailee)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Bailee",
                    "text": "Bailee does not face challenges.",
                    "fol": "\u00acp_1(Bailee)",
                    "str_fol": "\u00acfaces_challenges(Bailee)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Bailee",
                    "text": "Bailee does not find solutions.",
                    "fol": "\u00acp_10(Bailee)",
                    "str_fol": "\u00acfinds_solutions(Bailee)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Bailee either faces challenges or is empathetic (but not both), then she finds solutions.",
                    "fol": "(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)",
                    "str_fol": "(faces_challenges(Bailee) \u2295 empathetic(Bailee)) \u2192 finds_solutions(Bailee)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Bailee",
                "text": "Bailee is not empathetic.",
                "fol": "\u00acp_9(Bailee)",
                "str_fol": "\u00acempathetic(Bailee)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Bailee",
                    "text": "Bailee is not introspective.",
                    "fol": "\u00acp_8(Bailee)",
                    "str_fol": "\u00acintrospective(Bailee)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Bailee",
                    "text": "Bailee is not empathetic.",
                    "fol": "\u00acp_9(Bailee)",
                    "str_fol": "\u00acempathetic(Bailee)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Bailee is either introspective or reclusive (but not both), then she is empathetic.",
                    "fol": "(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)",
                    "str_fol": "(introspective(Bailee) \u2295 reclusive(Bailee)) \u2192 empathetic(Bailee)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Bailee",
                "text": "Bailee is not reclusive.",
                "fol": "\u00acp_7(Bailee)",
                "str_fol": "\u00acreclusive(Bailee)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Bailee",
                    "text": "Bailee is creative.",
                    "fol": "p_0(Bailee)",
                    "str_fol": "creative(Bailee)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Bailee",
                    "text": "Bailee is not reclusive.",
                    "fol": "\u00acp_7(Bailee)",
                    "str_fol": "\u00acreclusive(Bailee)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Bailee is sensitive, then she is either creative or reclusive, but not both.",
                    "fol": "p_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))",
                    "str_fol": "sensitive(Bailee) \u2192 (creative(Bailee) \u2295 reclusive(Bailee))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\n\u00acp_3(Bailee)\n\u00acp_1(Bailee)\np_0(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee).",
                    "p_5(Bailee).",
                    "p_2(Bailee).",
                    "-p_3(Bailee).",
                    "-p_1(Bailee).",
                    "p_0(Bailee).",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee)).",
                    "p_12(Bailee) | -p_2(Bailee).",
                    "-(p_12(Bailee)) | p_2(Bailee).",
                    "(p_12(Bailee)) | (p_2(Bailee)).",
                    "-(p_12(Bailee)) | -(p_2(Bailee)).",
                    "(all x ((p_8(x) | p_11(x)) -> p_12(x))).",
                    "(all x (p_10(x) -> p_3(x))).",
                    "((p_1(Bailee) | p_9(Bailee)) & (-p_1(Bailee) | -p_9(Bailee))) -> p_10(Bailee).",
                    "((p_8(Bailee) | p_7(Bailee)) & (-p_8(Bailee) | -p_7(Bailee))) -> p_9(Bailee).",
                    "p_6(Bailee) -> ( (p_0(Bailee) | p_7(Bailee)) & (-p_0(Bailee) | -p_7(Bailee)) ).",
                    "(p_0(Bailee) & -p_7(Bailee)) -> p_6(Bailee)."
                ],
                "formulas(goals)": [
                    "p_6(Bailee)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "((p_0(Bailee) \u2227 \u00acp_7(Bailee)) \u2192 p_6(Bailee))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\n\u00acp_3(Bailee)\n\u00acp_1(Bailee)\np_0(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))\np_6(Bailee) \u2192 p_3(Bailee)",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee)",
                    "p_5(Bailee)",
                    "p_2(Bailee)",
                    "-p_3(Bailee)",
                    "-p_1(Bailee)",
                    "p_0(Bailee)",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee))",
                    "-(p_12(Bailee) <-> p_2(Bailee))",
                    "all x ((p_8(x) | p_11(x)) -> p_12(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "(-(p_1(Bailee) <-> p_9(Bailee))) -> p_10(Bailee)",
                    "(-(p_8(Bailee) <-> p_7(Bailee))) -> p_9(Bailee)",
                    "p_6(Bailee) -> (-(p_0(Bailee) <-> p_7(Bailee)))",
                    "p_6(Bailee) -> p_3(Bailee)"
                ],
                "formulas(goals)": [
                    "-p_6(Bailee)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_6(Bailee) \u2192 p_3(Bailee)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\np_0(Bailee)\n\u00acp_1(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))\np_6(Bailee) \u2192 p_3(Bailee)\np_0(Bailee) \u2192 p_6(Bailee)",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee)",
                    "p_5(Bailee)",
                    "p_2(Bailee)",
                    "p_0(Bailee)",
                    "-p_1(Bailee)",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee))",
                    "-(p_12(Bailee) <-> p_2(Bailee))",
                    "all x ((p_8(x) | p_11(x)) -> p_12(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "(-(p_1(Bailee) <-> p_9(Bailee))) -> p_10(Bailee)",
                    "(-(p_8(Bailee) <-> p_7(Bailee))) -> p_9(Bailee)",
                    "p_6(Bailee) -> (-(p_0(Bailee) <-> p_7(Bailee)))",
                    "p_6(Bailee) -> p_3(Bailee)",
                    "p_0(Bailee) -> p_6(Bailee)"
                ],
                "formulas(goals)": [
                    "p_6(Bailee)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Bailee)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_0(Bailee) \u2192 p_6(Bailee)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\np_0(Bailee)\n\u00acp_1(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))\np_6(Bailee) \u2192 p_3(Bailee)\n(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 \u00acp_6(Bailee)",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee)",
                    "p_5(Bailee)",
                    "p_2(Bailee)",
                    "p_0(Bailee)",
                    "-p_1(Bailee)",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee))",
                    "-(p_12(Bailee) <-> p_2(Bailee))",
                    "all x ((p_8(x) | p_11(x)) -> p_12(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "(-(p_1(Bailee) <-> p_9(Bailee))) -> p_10(Bailee)",
                    "(-(p_8(Bailee) <-> p_7(Bailee))) -> p_9(Bailee)",
                    "p_6(Bailee) -> (-(p_0(Bailee) <-> p_7(Bailee)))",
                    "p_6(Bailee) -> p_3(Bailee)",
                    "(p_0(Bailee) & p_2(Bailee)) -> -p_6(Bailee)"
                ],
                "formulas(goals)": [
                    "-p_6(Bailee)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Bailee) \u2192 p_6(Bailee)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 \u00acp_6(Bailee)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\np_0(Bailee)\n\u00acp_1(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))\np_6(Bailee) \u2192 p_3(Bailee)\n(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 p_6(Bailee)",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee).",
                    "p_5(Bailee).",
                    "p_2(Bailee).",
                    "p_0(Bailee).",
                    "-p_1(Bailee).",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee)).",
                    "-(p_12(Bailee) <-> p_2(Bailee)).",
                    "all x ((p_8(x) | p_11(x)) -> p_12(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "(-(p_1(Bailee) <-> p_9(Bailee))) -> p_10(Bailee).",
                    "(-(p_8(Bailee) <-> p_7(Bailee))) -> p_9(Bailee).",
                    "p_6(Bailee) -> (-(p_0(Bailee) <-> p_7(Bailee))).",
                    "p_6(Bailee) -> p_3(Bailee).",
                    "(p_0(Bailee) & p_2(Bailee)) -> p_6(Bailee)."
                ],
                "formulas(goals)": [
                    "p_6(Bailee)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 \u00acp_6(Bailee)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 p_6(Bailee)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\np_0(Bailee)\n\u00acp_1(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))\np_6(Bailee) \u2192 p_3(Bailee)\n(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 p_6(Bailee)\n\u00acp_12(Bailee)\n\u00acp_8(Bailee)\n\u00acp_11(Bailee)\n\u00acp_7(Bailee)\np_3(Bailee)\np_9(Bailee) \u2192 p_10(Bailee)\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_11(x)))",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee)",
                    "p_5(Bailee)",
                    "p_2(Bailee)",
                    "p_0(Bailee)",
                    "-p_1(Bailee)",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee))",
                    "-(p_12(Bailee) <-> p_2(Bailee))",
                    "all x ((p_8(x) | p_11(x)) -> p_12(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "(-(p_1(Bailee) <-> p_9(Bailee))) -> p_10(Bailee)",
                    "(-(p_8(Bailee) <-> p_7(Bailee))) -> p_9(Bailee)",
                    "p_6(Bailee) -> (-(p_0(Bailee) <-> p_7(Bailee)))",
                    "p_6(Bailee) -> p_3(Bailee)",
                    "(p_0(Bailee) & p_2(Bailee)) -> p_6(Bailee)",
                    "-p_12(Bailee)",
                    "-p_8(Bailee)",
                    "-p_11(Bailee)",
                    "-p_7(Bailee)",
                    "p_3(Bailee)",
                    "p_9(Bailee) -> p_10(Bailee)",
                    "all x (-p_12(x) -> (-p_8(x) & -p_11(x)))"
                ],
                "formulas(goals)": [
                    "p_6(Bailee)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_12(Bailee)",
                    "\u00acp_8(Bailee)",
                    "\u00acp_11(Bailee)",
                    "\u00acp_7(Bailee)",
                    "p_3(Bailee)"
                ],
                "added_rules": [
                    "p_9(Bailee) \u2192 p_10(Bailee)",
                    "\u2200x (\u00acp_12(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_11(x)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Bailee)\np_5(Bailee)\np_2(Bailee)\np_0(Bailee)\n\u00acp_1(Bailee)\np_11(Bailee) \u2192 (p_4(Bailee) \u2227 p_5(Bailee))\np_12(Bailee) \u2295 p_2(Bailee)\n\u2200x ((p_8(x) \u2228 p_11(x)) \u2192 p_12(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n(p_1(Bailee) \u2295 p_9(Bailee)) \u2192 p_10(Bailee)\n(p_8(Bailee) \u2295 p_7(Bailee)) \u2192 p_9(Bailee)\np_6(Bailee) \u2192 (p_0(Bailee) \u2295 p_7(Bailee))\np_6(Bailee) \u2192 p_3(Bailee)\n\u00acp_12(Bailee)\n\u00acp_8(Bailee)\n\u00acp_11(Bailee)\n\u00acp_7(Bailee)\np_3(Bailee)\np_9(Bailee) \u2192 p_10(Bailee)\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_11(x)))\n(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 \u00acp_6(Bailee)",
            "Initial Goal": "p_6(Bailee)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Bailee).",
                    "p_5(Bailee).",
                    "p_2(Bailee).",
                    "p_0(Bailee).",
                    "-p_1(Bailee).",
                    "p_11(Bailee) -> (p_4(Bailee) & p_5(Bailee)).",
                    "-(p_12(Bailee) <-> p_2(Bailee)).",
                    "all x ((p_8(x) | p_11(x)) -> p_12(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "(-(p_1(Bailee) <-> p_9(Bailee))) -> p_10(Bailee).",
                    "(-(p_8(Bailee) <-> p_7(Bailee))) -> p_9(Bailee).",
                    "p_6(Bailee) -> (-(p_0(Bailee) <-> p_7(Bailee))).",
                    "p_6(Bailee) -> p_3(Bailee).",
                    "-p_12(Bailee).",
                    "-p_8(Bailee).",
                    "-p_11(Bailee).",
                    "-p_7(Bailee).",
                    "p_3(Bailee).",
                    "p_9(Bailee) -> p_10(Bailee).",
                    "all x (-p_12(x) -> (-p_8(x) & -p_11(x))).",
                    "(p_0(Bailee) & p_2(Bailee)) -> -p_6(Bailee)."
                ],
                "formulas(goals)": [
                    "-p_6(Bailee)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 p_6(Bailee)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Bailee) \u2227 p_2(Bailee)) \u2192 \u00acp_6(Bailee)"
                ]
            }
        }
    ]
}