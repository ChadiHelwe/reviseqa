{
    "background_story": "Maximus, a renowned chef, was known for his extraordinary ability to balance flavors in his dishes. His culinary journey began with a fascination for the fifth taste, umami, which is often associated with glutamate. He spent years researching and experimenting with various ingredients rich in glutamate, from meats and seafood to vegetables and mushrooms. Maximus's restaurant quickly gained popularity for its savory and rich flavors, with dishes like his signature 'Umami Bomb' soup and 'Glutamate-Glazed' pork chops. Food critics raved about the depth of flavor in his creations, and Maximus became celebrated as the 'Glutamate Guru' of the culinary world. His passion for understanding the science behind taste elevated the dining experience for countless patrons.",
    "predicates": [
        {
            "id": 0,
            "name": "gains_popularity"
        },
        {
            "id": 1,
            "name": "balances_flavors"
        },
        {
            "id": 2,
            "name": "cooks_with_passion"
        },
        {
            "id": 3,
            "name": "presents_well"
        },
        {
            "id": 4,
            "name": "owns_bistro"
        },
        {
            "id": 5,
            "name": "understands_umami"
        },
        {
            "id": 6,
            "name": "creates_delicious_dishes"
        },
        {
            "id": 7,
            "name": "elevates_cuisine"
        },
        {
            "id": 8,
            "name": "uses_quality_ingredients"
        },
        {
            "id": 9,
            "name": "receives_acclaim"
        },
        {
            "id": 10,
            "name": "experiments_frequently"
        },
        {
            "id": 11,
            "name": "masters_glutamate"
        },
        {
            "id": 12,
            "name": "runs_restaurant"
        },
        {
            "id": 13,
            "name": "studies_science"
        },
        {
            "id": 14,
            "name": "knows_glutamate"
        },
        {
            "id": 15,
            "name": "prepares_meals"
        },
        {
            "id": 16,
            "name": "innovates_menu"
        },
        {
            "id": 17,
            "name": "studies_culinary_arts"
        },
        {
            "id": 18,
            "name": "develops_new_recipes"
        },
        {
            "id": 19,
            "name": "sources_locally"
        },
        {
            "id": 20,
            "name": "selects_fresh"
        },
        {
            "id": 21,
            "name": "serves_meals"
        },
        {
            "id": 22,
            "name": "manages_kitchen"
        }
    ],
    "subject_name": "Maximus",
    "subject_category": "chef",
    "keyword": "glutamate",
    "all_facts": [
        {
            "id": 0,
            "subject": "Maximus",
            "text": "Maximus does not gain popularity.",
            "fol": "\u00acp_0(Maximus)",
            "str_fol": "\u00acgains_popularity(Maximus)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Maximus",
            "text": "Maximus balances flavors.",
            "fol": "p_1(Maximus)",
            "str_fol": "balances_flavors(Maximus)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Maximus",
            "text": "Maximus cooks with passion.",
            "fol": "p_2(Maximus)",
            "str_fol": "cooks_with_passion(Maximus)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Maximus",
            "text": "Maximus does not present his dishes well.",
            "fol": "\u00acp_3(Maximus)",
            "str_fol": "\u00acpresents_well(Maximus)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Maximus",
            "text": "Maximus does not own a bistro.",
            "fol": "\u00acp_4(Maximus)",
            "str_fol": "\u00acowns_bistro(Maximus)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Maximus",
            "text": "Maximus runs a restaurant.",
            "fol": "p_12(Maximus)",
            "str_fol": "runs_restaurant(Maximus)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Maximus",
            "text": "Maximus does not master glutamate.",
            "fol": "\u00acp_11(Maximus)",
            "str_fol": "\u00acmasters_glutamate(Maximus)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Maximus",
            "text": "Maximus does not receive acclaim.",
            "fol": "\u00acp_9(Maximus)",
            "str_fol": "\u00acreceives_acclaim(Maximus)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Maximus",
            "text": "Maximus does not elevate cuisine.",
            "fol": "\u00acp_7(Maximus)",
            "str_fol": "\u00acelevates_cuisine(Maximus)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Maximus",
            "text": "Maximus understands umami.",
            "fol": "p_5(Maximus)",
            "str_fol": "understands_umami(Maximus)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Maximus",
            "text": "Maximus creates delicious dishes.",
            "fol": "p_6(Maximus)",
            "str_fol": "creates_delicious_dishes(Maximus)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Maximus",
            "text": "Maximus does not own a bistro.",
            "fol": "\u00acp_4(Maximus)",
            "str_fol": "\u00acowns_bistro(Maximus)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Maximus",
            "text": "Maximus cooks with passion.",
            "fol": "p_2(Maximus)",
            "str_fol": "cooks_with_passion(Maximus)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Maximus",
            "text": "Maximus does not present his dishes well.",
            "fol": "\u00acp_3(Maximus)",
            "str_fol": "\u00acpresents_well(Maximus)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Maximus",
            "text": "Maximus does not gain popularity.",
            "fol": "\u00acp_0(Maximus)",
            "str_fol": "\u00acgains_popularity(Maximus)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Maximus",
            "text": "Maximus balances flavors.",
            "fol": "p_1(Maximus)",
            "str_fol": "balances_flavors(Maximus)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Maximus either runs a restaurant or owns a bistro.",
            "fol": "p_12(Maximus) \u2228 p_4(Maximus)",
            "str_fol": "runs_restaurant(Maximus) \u2228 owns_bistro(Maximus)"
        },
        {
            "id": 5,
            "text": "If Maximus uses quality ingredients, then he either cooks with passion or presents his dishes well, but not both.",
            "fol": "p_8(Maximus) \u2192 (p_2(Maximus) \u2295 p_3(Maximus))",
            "str_fol": "uses_quality_ingredients(Maximus) \u2192 (cooks_with_passion(Maximus) \u2295 presents_well(Maximus))"
        },
        {
            "id": 4,
            "text": "If Maximus masters glutamate and runs a restaurant, then he will gain popularity.",
            "fol": "(p_11(Maximus) \u2227 p_12(Maximus)) \u2192 p_0(Maximus)",
            "str_fol": "(masters_glutamate(Maximus) \u2227 runs_restaurant(Maximus)) \u2192 gains_popularity(Maximus)"
        },
        {
            "id": 3,
            "text": "If Maximus experiments frequently or receives acclaim, then he will master glutamate.",
            "fol": "(p_10(Maximus) \u2228 p_9(Maximus)) \u2192 p_11(Maximus)",
            "str_fol": "(experiments_frequently(Maximus) \u2228 receives_acclaim(Maximus)) \u2192 masters_glutamate(Maximus)"
        },
        {
            "id": 2,
            "text": "Any chef who elevates cuisine or uses quality ingredients will receive acclaim.",
            "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((elevates_cuisine(x) \u2228 uses_quality_ingredients(x)) \u2192 receives_acclaim(x))"
        },
        {
            "id": 1,
            "text": "Every chef who balances flavors either understands umami or elevates cuisine (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (balances_flavors(x) \u2192 (understands_umami(x) \u2228 elevates_cuisine(x)))"
        },
        {
            "id": 0,
            "text": "Every chef either understands umami or creates delicious dishes (or both).",
            "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
            "str_fol": "\u2200x (understands_umami(x) \u2228 creates_delicious_dishes(x))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Maximus",
            "text": "Maximus does not own a bistro.",
            "fol": "\u00acp_4(Maximus)",
            "str_fol": "\u00acowns_bistro(Maximus)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Maximus",
            "text": "Maximus cooks with passion.",
            "fol": "p_2(Maximus)",
            "str_fol": "cooks_with_passion(Maximus)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Maximus",
            "text": "Maximus does not present his dishes well.",
            "fol": "\u00acp_3(Maximus)",
            "str_fol": "\u00acpresents_well(Maximus)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Maximus",
            "text": "Maximus does not gain popularity.",
            "fol": "\u00acp_0(Maximus)",
            "str_fol": "\u00acgains_popularity(Maximus)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Maximus",
            "text": "Maximus balances flavors.",
            "fol": "p_1(Maximus)",
            "str_fol": "balances_flavors(Maximus)",
            "negation": false
        },
        {
            "id": 6,
            "text": "Maximus either runs a restaurant or owns a bistro.",
            "fol": "p_12(Maximus) \u2228 p_4(Maximus)",
            "str_fol": "runs_restaurant(Maximus) \u2228 owns_bistro(Maximus)"
        },
        {
            "id": 5,
            "text": "If Maximus uses quality ingredients, then he either cooks with passion or presents his dishes well, but not both.",
            "fol": "p_8(Maximus) \u2192 (p_2(Maximus) \u2295 p_3(Maximus))",
            "str_fol": "uses_quality_ingredients(Maximus) \u2192 (cooks_with_passion(Maximus) \u2295 presents_well(Maximus))"
        },
        {
            "id": 4,
            "text": "If Maximus masters glutamate and runs a restaurant, then he will gain popularity.",
            "fol": "(p_11(Maximus) \u2227 p_12(Maximus)) \u2192 p_0(Maximus)",
            "str_fol": "(masters_glutamate(Maximus) \u2227 runs_restaurant(Maximus)) \u2192 gains_popularity(Maximus)"
        },
        {
            "id": 3,
            "text": "If Maximus experiments frequently or receives acclaim, then he will master glutamate.",
            "fol": "(p_10(Maximus) \u2228 p_9(Maximus)) \u2192 p_11(Maximus)",
            "str_fol": "(experiments_frequently(Maximus) \u2228 receives_acclaim(Maximus)) \u2192 masters_glutamate(Maximus)"
        },
        {
            "id": 2,
            "text": "Any chef who elevates cuisine or uses quality ingredients will receive acclaim.",
            "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((elevates_cuisine(x) \u2228 uses_quality_ingredients(x)) \u2192 receives_acclaim(x))"
        },
        {
            "id": 1,
            "text": "Every chef who balances flavors either understands umami or elevates cuisine (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (balances_flavors(x) \u2192 (understands_umami(x) \u2228 elevates_cuisine(x)))"
        },
        {
            "id": 0,
            "text": "Every chef either understands umami or creates delicious dishes (or both).",
            "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
            "str_fol": "\u2200x (understands_umami(x) \u2228 creates_delicious_dishes(x))"
        }
    ],
    "context_fol": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 (p_2(Maximus) \u2295 p_3(Maximus))\n(p_11(Maximus) \u2227 p_12(Maximus)) \u2192 p_0(Maximus)\n(p_10(Maximus) \u2228 p_9(Maximus)) \u2192 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (p_5(x) \u2228 p_6(x))",
    "conclusion": {
        "id": 10,
        "subject": "Maximus",
        "text": "Maximus creates delicious dishes.",
        "fol": "p_6(Maximus)",
        "str_fol": "creates_delicious_dishes(Maximus)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_6(Maximus)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Maximus",
                    "text": "Maximus does not own a bistro.",
                    "fol": "\u00acp_4(Maximus)",
                    "str_fol": "\u00acowns_bistro(Maximus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Maximus either runs a restaurant or owns a bistro.",
                    "fol": "p_12(Maximus) \u2228 p_4(Maximus)",
                    "str_fol": "runs_restaurant(Maximus) \u2228 owns_bistro(Maximus)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Maximus",
                "text": "Maximus runs a restaurant.",
                "fol": "p_12(Maximus)",
                "str_fol": "runs_restaurant(Maximus)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Maximus",
                    "text": "Maximus cooks with passion.",
                    "fol": "p_2(Maximus)",
                    "str_fol": "cooks_with_passion(Maximus)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Maximus",
                    "text": "Maximus does not present his dishes well.",
                    "fol": "\u00acp_3(Maximus)",
                    "str_fol": "\u00acpresents_well(Maximus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Maximus uses quality ingredients, then he either cooks with passion or presents his dishes well, but not both.",
                    "fol": "p_8(Maximus) \u2192 (p_2(Maximus) \u2295 p_3(Maximus))",
                    "str_fol": "uses_quality_ingredients(Maximus) \u2192 (cooks_with_passion(Maximus) \u2295 presents_well(Maximus))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Maximus",
                    "text": "Maximus runs a restaurant.",
                    "fol": "p_12(Maximus)",
                    "str_fol": "runs_restaurant(Maximus)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Maximus",
                    "text": "Maximus does not gain popularity.",
                    "fol": "\u00acp_0(Maximus)",
                    "str_fol": "\u00acgains_popularity(Maximus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Maximus masters glutamate and runs a restaurant, then he will gain popularity.",
                    "fol": "(p_11(Maximus) \u2227 p_12(Maximus)) \u2192 p_0(Maximus)",
                    "str_fol": "(masters_glutamate(Maximus) \u2227 runs_restaurant(Maximus)) \u2192 gains_popularity(Maximus)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Maximus",
                "text": "Maximus does not master glutamate.",
                "fol": "\u00acp_11(Maximus)",
                "str_fol": "\u00acmasters_glutamate(Maximus)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Maximus",
                    "text": "Maximus does not master glutamate.",
                    "fol": "\u00acp_11(Maximus)",
                    "str_fol": "\u00acmasters_glutamate(Maximus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Maximus experiments frequently or receives acclaim, then he will master glutamate.",
                    "fol": "(p_10(Maximus) \u2228 p_9(Maximus)) \u2192 p_11(Maximus)",
                    "str_fol": "(experiments_frequently(Maximus) \u2228 receives_acclaim(Maximus)) \u2192 masters_glutamate(Maximus)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Maximus",
                "text": "Maximus does not receive acclaim.",
                "fol": "\u00acp_9(Maximus)",
                "str_fol": "\u00acreceives_acclaim(Maximus)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Maximus",
                    "text": "Maximus does not receive acclaim.",
                    "fol": "\u00acp_9(Maximus)",
                    "str_fol": "\u00acreceives_acclaim(Maximus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Any chef who elevates cuisine or uses quality ingredients will receive acclaim.",
                    "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((elevates_cuisine(x) \u2228 uses_quality_ingredients(x)) \u2192 receives_acclaim(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Maximus",
                "text": "Maximus does not elevate cuisine.",
                "fol": "\u00acp_7(Maximus)",
                "str_fol": "\u00acelevates_cuisine(Maximus)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Maximus",
                    "text": "Maximus balances flavors.",
                    "fol": "p_1(Maximus)",
                    "str_fol": "balances_flavors(Maximus)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Maximus",
                    "text": "Maximus does not elevate cuisine.",
                    "fol": "\u00acp_7(Maximus)",
                    "str_fol": "\u00acelevates_cuisine(Maximus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every chef who balances flavors either understands umami or elevates cuisine (or both).",
                    "fol": "\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))",
                    "str_fol": "\u2200x (balances_flavors(x) \u2192 (understands_umami(x) \u2228 elevates_cuisine(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Maximus",
                "text": "Maximus understands umami.",
                "fol": "p_5(Maximus)",
                "str_fol": "understands_umami(Maximus)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Maximus",
                    "text": "Maximus understands umami.",
                    "fol": "p_5(Maximus)",
                    "str_fol": "understands_umami(Maximus)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Every chef either understands umami or creates delicious dishes (or both).",
                    "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
                    "str_fol": "\u2200x (understands_umami(x) \u2228 creates_delicious_dishes(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 (p_2(Maximus) \u2295 p_3(Maximus))\n(p_11(Maximus) \u2227 p_12(Maximus)) \u2192 p_0(Maximus)\n(p_10(Maximus) \u2228 p_9(Maximus)) \u2192 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (p_5(x) \u2228 p_6(x))",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus).",
                    "p_2(Maximus).",
                    "-p_3(Maximus).",
                    "-p_0(Maximus).",
                    "p_1(Maximus).",
                    "p_12(Maximus) | p_4(Maximus).",
                    "p_8(Maximus) -> -(p_2(Maximus) <-> p_3(Maximus)).",
                    "(p_11(Maximus) & p_12(Maximus)) -> p_0(Maximus).",
                    "(p_10(Maximus) | p_9(Maximus)) -> p_11(Maximus).",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x)).",
                    "all x (p_1(x) -> (p_5(x) | p_7(x))).",
                    "all x (p_5(x) | p_6(x)).",
                    "p_5(Maximus) -> p_6(Maximus)."
                ],
                "formulas(goals)": [
                    "p_6(Maximus)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Maximus) \u2192 p_6(Maximus)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 ((p_2(Maximus) \u2228 p_3(Maximus)) \u2227 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))\n\u00ac(p_11(Maximus) \u2227 p_12(Maximus)) \u2228 p_0(Maximus)\n\u00ac(p_10(Maximus) \u2228 p_9(Maximus)) \u2228 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Maximus)",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus)",
                    "p_2(Maximus)",
                    "-p_3(Maximus)",
                    "-p_0(Maximus)",
                    "p_1(Maximus)",
                    "p_12(Maximus) | p_4(Maximus)",
                    "p_8(Maximus) -> ((p_2(Maximus) | p_3(Maximus)) & (-(p_2(Maximus) & p_3(Maximus))))",
                    "(-(p_11(Maximus) & p_12(Maximus))) | p_0(Maximus)",
                    "(-(p_10(Maximus) | p_9(Maximus))) | p_11(Maximus)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x (p_1(x) -> (p_5(x) | p_7(x)))",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Maximus)"
                ],
                "formulas(goals)": [
                    "p_6(Maximus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Maximus)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\n(p_8(Maximus) \u2192 (p_2(Maximus) \u2228 p_3(Maximus))) \u2227 (p_8(Maximus) \u2192 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))\n\u00ac(p_11(Maximus) \u2227 p_12(Maximus)) \u2228 p_0(Maximus)\n\u00ac(p_10(Maximus) \u2228 p_9(Maximus)) \u2228 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (\u00acp_5(x) \u2192 p_6(x))\np_6(Maximus)\np_12(Maximus)",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus).",
                    "p_2(Maximus).",
                    "-p_3(Maximus).",
                    "-p_0(Maximus).",
                    "p_1(Maximus).",
                    "p_12(Maximus) | p_4(Maximus).",
                    "(p_8(Maximus) -> (p_2(Maximus) | p_3(Maximus))) & (p_8(Maximus) -> (-(p_2(Maximus) & p_3(Maximus)))).",
                    "(-(p_11(Maximus) & p_12(Maximus))) | p_0(Maximus).",
                    "(-(p_10(Maximus) | p_9(Maximus))) | p_11(Maximus).",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x)).",
                    "all x (p_1(x) -> (p_5(x) | p_7(x))).",
                    "all x (-p_5(x) -> p_6(x)).",
                    "p_6(Maximus).",
                    "p_12(Maximus)."
                ],
                "formulas(goals)": [
                    "p_6(Maximus)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2228 p_6(x))"
                ],
                "added_facts": [
                    "p_12(Maximus)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_5(x) \u2192 p_6(x))",
                    "(p_8(Maximus) \u2192 (p_2(Maximus) \u2228 p_3(Maximus))) \u2227 (p_8(Maximus) \u2192 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 ((p_2(Maximus) \u2228 p_3(Maximus)) \u2227 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))\n\u00ac(p_11(Maximus) \u2227 p_12(Maximus)) \u2228 p_0(Maximus)\n\u00ac(p_10(Maximus) \u2228 p_9(Maximus)) \u2228 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (\u00acp_5(x) \u2192 p_6(x))\np_6(Maximus)\np_12(Maximus)\np_4(Maximus) \u2192 p_6(Maximus)\np_5(Maximus) \u2228 p_7(Maximus)",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus)",
                    "p_2(Maximus)",
                    "-p_3(Maximus)",
                    "-p_0(Maximus)",
                    "p_1(Maximus)",
                    "p_12(Maximus) | p_4(Maximus)",
                    "p_8(Maximus) -> ((p_2(Maximus) | p_3(Maximus)) & -(p_2(Maximus) & p_3(Maximus)))",
                    "-(p_11(Maximus) & p_12(Maximus)) | p_0(Maximus)",
                    "-(p_10(Maximus) | p_9(Maximus)) | p_11(Maximus)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x (p_1(x) -> (p_5(x) | p_7(x)))",
                    "all x (-p_5(x) -> p_6(x))",
                    "p_6(Maximus)",
                    "p_12(Maximus)",
                    "p_4(Maximus) -> p_6(Maximus)",
                    "p_5(Maximus) | p_7(Maximus)"
                ],
                "formulas(goals)": [
                    "p_6(Maximus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Maximus) \u2228 p_7(Maximus)"
                ],
                "added_rules": [
                    "p_4(Maximus) \u2192 p_6(Maximus)",
                    "p_8(Maximus) \u2192 ((p_2(Maximus) \u2228 p_3(Maximus)) \u2227 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 ((p_2(Maximus) \u2228 p_3(Maximus)) \u2227 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))\n\u00ac(p_11(Maximus) \u2227 p_12(Maximus)) \u2228 p_0(Maximus)\n\u00ac(p_10(Maximus) \u2228 p_9(Maximus)) \u2228 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (\u00acp_5(x) \u2192 p_6(x))\np_6(Maximus)\np_12(Maximus)\np_4(Maximus) \u2192 p_6(Maximus)\np_5(Maximus) \u2228 p_7(Maximus)\np_0(Maximus) \u2192 p_6(Maximus)\np_2(Maximus) \u2228 p_0(Maximus)",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus)",
                    "p_2(Maximus)",
                    "-p_3(Maximus)",
                    "-p_0(Maximus)",
                    "p_1(Maximus)",
                    "p_12(Maximus) | p_4(Maximus)",
                    "p_8(Maximus) -> ((p_2(Maximus) | p_3(Maximus)) & -(p_2(Maximus) & p_3(Maximus)))",
                    "-(p_11(Maximus) & p_12(Maximus)) | p_0(Maximus)",
                    "-(p_10(Maximus) | p_9(Maximus)) | p_11(Maximus)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x (p_1(x) -> (p_5(x) | p_7(x)))",
                    "all x (-p_5(x) -> p_6(x))",
                    "p_6(Maximus)",
                    "p_12(Maximus)",
                    "p_4(Maximus) -> p_6(Maximus)",
                    "p_5(Maximus) | p_7(Maximus)",
                    "p_0(Maximus) -> p_6(Maximus)",
                    "p_2(Maximus) | p_0(Maximus)"
                ],
                "formulas(goals)": [
                    "p_6(Maximus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_0(Maximus) \u2192 p_6(Maximus)",
                    "p_2(Maximus) \u2228 p_0(Maximus)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 ((p_2(Maximus) \u2228 p_3(Maximus)) \u2227 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))\n\u00ac(p_11(Maximus) \u2227 p_12(Maximus)) \u2228 p_0(Maximus)\n\u00ac(p_10(Maximus) \u2228 p_9(Maximus)) \u2228 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (\u00acp_5(x) \u2192 p_6(x))\np_12(Maximus)\np_4(Maximus) \u2192 p_6(Maximus)\np_5(Maximus) \u2228 p_7(Maximus)\np_0(Maximus) \u2192 p_6(Maximus)\np_2(Maximus) \u2228 p_0(Maximus)\np_5(Maximus) \u2192 \u00acp_6(Maximus)",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus)",
                    "p_2(Maximus)",
                    "-p_3(Maximus)",
                    "-p_0(Maximus)",
                    "p_1(Maximus)",
                    "p_12(Maximus) | p_4(Maximus)",
                    "p_8(Maximus) -> ((p_2(Maximus) | p_3(Maximus)) & (-(p_2(Maximus) & p_3(Maximus))))",
                    "-(p_11(Maximus) & p_12(Maximus)) | p_0(Maximus)",
                    "-(p_10(Maximus) | p_9(Maximus)) | p_11(Maximus)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x (p_1(x) -> (p_5(x) | p_7(x)))",
                    "all x (-p_5(x) -> p_6(x))",
                    "p_12(Maximus)",
                    "p_4(Maximus) -> p_6(Maximus)",
                    "p_5(Maximus) | p_7(Maximus)",
                    "p_0(Maximus) -> p_6(Maximus)",
                    "p_2(Maximus) | p_0(Maximus)",
                    "p_5(Maximus) -> -p_6(Maximus)"
                ],
                "formulas(goals)": [
                    "-p_6(Maximus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Maximus)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Maximus) \u2192 \u00acp_6(Maximus)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Maximus)\np_2(Maximus)\n\u00acp_3(Maximus)\n\u00acp_0(Maximus)\np_1(Maximus)\np_12(Maximus) \u2228 p_4(Maximus)\np_8(Maximus) \u2192 ((p_2(Maximus) \u2228 p_3(Maximus)) \u2227 \u00ac(p_2(Maximus) \u2227 p_3(Maximus)))\n\u00ac(p_11(Maximus) \u2227 p_12(Maximus)) \u2228 p_0(Maximus)\n\u00ac(p_10(Maximus) \u2228 p_9(Maximus)) \u2228 p_11(Maximus)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_1(x) \u2192 (p_5(x) \u2228 p_7(x)))\n\u2200x (\u00acp_5(x) \u2192 p_6(x))\np_12(Maximus)\np_4(Maximus) \u2192 p_6(Maximus)\n\u00ac(\u00acp_5(Maximus) \u2227 \u00acp_7(Maximus))\np_0(Maximus) \u2192 p_6(Maximus)\np_2(Maximus) \u2228 p_0(Maximus)\np_6(Maximus) \u2192 \u00acp_5(Maximus)\n\u00acp_6(Maximus) \u2192 p_5(Maximus)\np_12(Maximus) \u2227 p_12(Maximus)",
            "Initial Goal": "p_6(Maximus)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Maximus)",
                    "p_2(Maximus)",
                    "-p_3(Maximus)",
                    "-p_0(Maximus)",
                    "p_1(Maximus)",
                    "p_12(Maximus) | p_4(Maximus)",
                    "p_8(Maximus) -> ((p_2(Maximus) | p_3(Maximus)) & -(p_2(Maximus) & p_3(Maximus)))",
                    "-(p_11(Maximus) & p_12(Maximus)) | p_0(Maximus)",
                    "-(p_10(Maximus) | p_9(Maximus)) | p_11(Maximus)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x (p_1(x) -> (p_5(x) | p_7(x)))",
                    "all x (-p_5(x) -> p_6(x))",
                    "p_12(Maximus)",
                    "p_4(Maximus) -> p_6(Maximus)",
                    "-(-p_5(Maximus) & -p_7(Maximus))",
                    "p_0(Maximus) -> p_6(Maximus)",
                    "p_2(Maximus) | p_0(Maximus)",
                    "p_6(Maximus) -> -p_5(Maximus)",
                    "-p_6(Maximus) -> p_5(Maximus)",
                    "p_12(Maximus) & p_12(Maximus)"
                ],
                "formulas(goals)": [
                    "-p_6(Maximus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Maximus) \u2228 p_7(Maximus)",
                    "p_5(Maximus) \u2192 \u00acp_6(Maximus)"
                ],
                "added_facts": [
                    "p_12(Maximus) \u2227 p_12(Maximus)"
                ],
                "added_rules": [
                    "\u00ac(\u00acp_5(Maximus) \u2227 \u00acp_7(Maximus))",
                    "p_6(Maximus) \u2192 \u00acp_5(Maximus)",
                    "\u00acp_6(Maximus) \u2192 p_5(Maximus)"
                ]
            }
        }
    ]
}