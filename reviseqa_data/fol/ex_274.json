{
    "background_story": "Mitchell, a young and ambitious journalist, found himself in the midst of a tumultuous Germany during the 1930s. As the Nazi party rose to power, Mitchell was initially drawn to their promise of stability and national pride. However, as he witnessed the nazification of his adopted country, he began to see the darker side of the regime. The suppression of free speech, the persecution of minorities, and the erosion of civil liberties horrified him. Mitchell's journalist instincts compelled him to report on the truth, but the Nazi propaganda machine made it increasingly difficult. He walked a thin line between reporting the facts and avoiding the wrath of the Nazi authorities. Despite the risks, Mitchell continued to document the nazification of Germany, leaving behind a valuable record of the period's atrocities.",
    "predicates": [
        {
            "id": 0,
            "name": "expose_injustice"
        },
        {
            "id": 1,
            "name": "reveal_truth"
        },
        {
            "id": 2,
            "name": "tells_story"
        },
        {
            "id": 3,
            "name": "inspires_others"
        },
        {
            "id": 4,
            "name": "challenges_authority"
        },
        {
            "id": 5,
            "name": "defies_power"
        },
        {
            "id": 6,
            "name": "document_atrocities"
        },
        {
            "id": 7,
            "name": "leave_lasting_legacy"
        },
        {
            "id": 8,
            "name": "record_history"
        },
        {
            "id": 9,
            "name": "is_truthful"
        },
        {
            "id": 10,
            "name": "seek_justice"
        },
        {
            "id": 11,
            "name": "fight_oppression"
        },
        {
            "id": 12,
            "name": "speaks_out"
        },
        {
            "id": 13,
            "name": "faces_risk"
        },
        {
            "id": 14,
            "name": "resists_tyranny"
        },
        {
            "id": 15,
            "name": "stands_up"
        },
        {
            "id": 16,
            "name": "sees_evil"
        },
        {
            "id": 17,
            "name": "writes_account"
        },
        {
            "id": 18,
            "name": "fights_injustice"
        },
        {
            "id": 19,
            "name": "helps_victims"
        },
        {
            "id": 20,
            "name": "reports_facts"
        },
        {
            "id": 21,
            "name": "has_integrity"
        },
        {
            "id": 22,
            "name": "sees_injustice"
        },
        {
            "id": 23,
            "name": "has_courage"
        },
        {
            "id": 24,
            "name": "pursue_equality"
        },
        {
            "id": 25,
            "name": "seeks_truth"
        }
    ],
    "subject_name": "Mitchell",
    "subject_category": "historical figure",
    "keyword": "nazification",
    "all_facts": [
        {
            "id": 0,
            "subject": "Mitchell",
            "text": "Mitchell does not expose injustice.",
            "fol": "\u00acp_0(Mitchell)",
            "str_fol": "\u00acexpose_injustice(Mitchell)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Mitchell",
            "text": "Mitchell does not reveal the truth.",
            "fol": "\u00acp_1(Mitchell)",
            "str_fol": "\u00acreveal_truth(Mitchell)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Mitchell",
            "text": "Mitchell does not tell his story.",
            "fol": "\u00acp_2(Mitchell)",
            "str_fol": "\u00actells_story(Mitchell)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Mitchell",
            "text": "Mitchell does not inspire others.",
            "fol": "\u00acp_3(Mitchell)",
            "str_fol": "\u00acinspires_others(Mitchell)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Mitchell",
            "text": "Mitchell challenges authority.",
            "fol": "p_4(Mitchell)",
            "str_fol": "challenges_authority(Mitchell)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Mitchell",
            "text": "Mitchell defies oppressive power.",
            "fol": "p_5(Mitchell)",
            "str_fol": "defies_power(Mitchell)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Mitchell",
            "text": "Mitchell resists tyranny.",
            "fol": "p_14(Mitchell)",
            "str_fol": "resists_tyranny(Mitchell)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Mitchell",
            "text": "Mitchell faces risk.",
            "fol": "p_13(Mitchell)",
            "str_fol": "faces_risk(Mitchell)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Mitchell",
            "text": "Mitchell does not fight against oppression.",
            "fol": "\u00acp_11(Mitchell)",
            "str_fol": "\u00acfight_oppression(Mitchell)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Mitchell",
            "text": "Mitchell does not speak out.",
            "fol": "\u00acp_12(Mitchell)",
            "str_fol": "\u00acspeaks_out(Mitchell)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Mitchell",
            "text": "Mitchell is truthful.",
            "fol": "p_9(Mitchell)",
            "str_fol": "is_truthful(Mitchell)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Mitchell",
            "text": "Mitchell does not seek justice.",
            "fol": "\u00acp_10(Mitchell)",
            "str_fol": "\u00acseek_justice(Mitchell)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Mitchell",
            "text": "Mitchell records history.",
            "fol": "p_8(Mitchell)",
            "str_fol": "record_history(Mitchell)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Mitchell",
            "text": "Mitchell documents atrocities.",
            "fol": "p_6(Mitchell)",
            "str_fol": "document_atrocities(Mitchell)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Mitchell",
            "text": "Mitchell leaves a lasting legacy.",
            "fol": "p_7(Mitchell)",
            "str_fol": "leave_lasting_legacy(Mitchell)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Mitchell",
            "text": "Mitchell defies oppressive power.",
            "fol": "p_5(Mitchell)",
            "str_fol": "defies_power(Mitchell)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Mitchell",
            "text": "Mitchell challenges authority.",
            "fol": "p_4(Mitchell)",
            "str_fol": "challenges_authority(Mitchell)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Mitchell",
            "text": "Mitchell does not inspire others.",
            "fol": "\u00acp_3(Mitchell)",
            "str_fol": "\u00acinspires_others(Mitchell)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Mitchell",
            "text": "Mitchell does not tell his story.",
            "fol": "\u00acp_2(Mitchell)",
            "str_fol": "\u00actells_story(Mitchell)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Mitchell",
            "text": "Mitchell does not reveal the truth.",
            "fol": "\u00acp_1(Mitchell)",
            "str_fol": "\u00acreveal_truth(Mitchell)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Mitchell",
            "text": "Mitchell does not expose injustice.",
            "fol": "\u00acp_0(Mitchell)",
            "str_fol": "\u00acexpose_injustice(Mitchell)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
            "fol": "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((stands_up(x) \u2228 defies_power(x)) \u2192 resists_tyranny(x))"
        },
        {
            "id": 7,
            "text": "All historical figures who challenge authority face risk.",
            "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (challenges_authority(x) \u2192 faces_risk(x))"
        },
        {
            "id": 6,
            "text": "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
            "fol": "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((fight_oppression(x) \u2227 resists_tyranny(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 5,
            "text": "If Mitchell faces risk and speaks out, then he tells his story.",
            "fol": "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
            "str_fol": "(faces_risk(Mitchell) \u2227 speaks_out(Mitchell)) \u2192 tells_story(Mitchell)"
        },
        {
            "id": 4,
            "text": "Mitchell either speaks out or is truthful.",
            "fol": "p_12(Mitchell) \u2228 p_9(Mitchell)",
            "str_fol": "speaks_out(Mitchell) \u2228 is_truthful(Mitchell)"
        },
        {
            "id": 3,
            "text": "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
            "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
            "str_fol": "\u2200x (seek_justice(x) \u2192 (reveal_truth(x) \u2228 fight_oppression(x)))"
        },
        {
            "id": 2,
            "text": "If Mitchell is truthful, then he either seeks justice or records history, but not both.",
            "fol": "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))",
            "str_fol": "is_truthful(Mitchell) \u2192 (seek_justice(Mitchell) \u2295 record_history(Mitchell))"
        },
        {
            "id": 1,
            "text": "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
            "fol": "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
            "str_fol": "(expose_injustice(Mitchell) \u2295 record_history(Mitchell)) \u2192 document_atrocities(Mitchell)"
        },
        {
            "id": 0,
            "text": "If Mitchell documents atrocities, then he leaves a lasting legacy.",
            "fol": "p_6(Mitchell) \u2192 p_7(Mitchell)",
            "str_fol": "document_atrocities(Mitchell) \u2192 leave_lasting_legacy(Mitchell)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Mitchell",
            "text": "Mitchell defies oppressive power.",
            "fol": "p_5(Mitchell)",
            "str_fol": "defies_power(Mitchell)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Mitchell",
            "text": "Mitchell challenges authority.",
            "fol": "p_4(Mitchell)",
            "str_fol": "challenges_authority(Mitchell)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Mitchell",
            "text": "Mitchell does not inspire others.",
            "fol": "\u00acp_3(Mitchell)",
            "str_fol": "\u00acinspires_others(Mitchell)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Mitchell",
            "text": "Mitchell does not tell his story.",
            "fol": "\u00acp_2(Mitchell)",
            "str_fol": "\u00actells_story(Mitchell)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Mitchell",
            "text": "Mitchell does not reveal the truth.",
            "fol": "\u00acp_1(Mitchell)",
            "str_fol": "\u00acreveal_truth(Mitchell)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Mitchell",
            "text": "Mitchell does not expose injustice.",
            "fol": "\u00acp_0(Mitchell)",
            "str_fol": "\u00acexpose_injustice(Mitchell)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
            "fol": "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((stands_up(x) \u2228 defies_power(x)) \u2192 resists_tyranny(x))"
        },
        {
            "id": 7,
            "text": "All historical figures who challenge authority face risk.",
            "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (challenges_authority(x) \u2192 faces_risk(x))"
        },
        {
            "id": 6,
            "text": "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
            "fol": "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((fight_oppression(x) \u2227 resists_tyranny(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 5,
            "text": "If Mitchell faces risk and speaks out, then he tells his story.",
            "fol": "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
            "str_fol": "(faces_risk(Mitchell) \u2227 speaks_out(Mitchell)) \u2192 tells_story(Mitchell)"
        },
        {
            "id": 4,
            "text": "Mitchell either speaks out or is truthful.",
            "fol": "p_12(Mitchell) \u2228 p_9(Mitchell)",
            "str_fol": "speaks_out(Mitchell) \u2228 is_truthful(Mitchell)"
        },
        {
            "id": 3,
            "text": "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
            "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
            "str_fol": "\u2200x (seek_justice(x) \u2192 (reveal_truth(x) \u2228 fight_oppression(x)))"
        },
        {
            "id": 2,
            "text": "If Mitchell is truthful, then he either seeks justice or records history, but not both.",
            "fol": "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))",
            "str_fol": "is_truthful(Mitchell) \u2192 (seek_justice(Mitchell) \u2295 record_history(Mitchell))"
        },
        {
            "id": 1,
            "text": "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
            "fol": "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
            "str_fol": "(expose_injustice(Mitchell) \u2295 record_history(Mitchell)) \u2192 document_atrocities(Mitchell)"
        },
        {
            "id": 0,
            "text": "If Mitchell documents atrocities, then he leaves a lasting legacy.",
            "fol": "p_6(Mitchell) \u2192 p_7(Mitchell)",
            "str_fol": "document_atrocities(Mitchell) \u2192 leave_lasting_legacy(Mitchell)"
        }
    ],
    "context_fol": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\np_12(Mitchell) \u2228 p_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)",
    "conclusion": {
        "id": 14,
        "subject": "Mitchell",
        "text": "Mitchell leaves a lasting legacy.",
        "fol": "p_7(Mitchell)",
        "str_fol": "leave_lasting_legacy(Mitchell)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_7(Mitchell)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Mitchell",
                    "text": "Mitchell defies oppressive power.",
                    "fol": "p_5(Mitchell)",
                    "str_fol": "defies_power(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                    "fol": "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((stands_up(x) \u2228 defies_power(x)) \u2192 resists_tyranny(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Mitchell",
                "text": "Mitchell resists tyranny.",
                "fol": "p_14(Mitchell)",
                "str_fol": "resists_tyranny(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Mitchell",
                    "text": "Mitchell challenges authority.",
                    "fol": "p_4(Mitchell)",
                    "str_fol": "challenges_authority(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "All historical figures who challenge authority face risk.",
                    "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
                    "str_fol": "\u2200x (challenges_authority(x) \u2192 faces_risk(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Mitchell",
                "text": "Mitchell faces risk.",
                "fol": "p_13(Mitchell)",
                "str_fol": "faces_risk(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Mitchell",
                    "text": "Mitchell resists tyranny.",
                    "fol": "p_14(Mitchell)",
                    "str_fol": "resists_tyranny(Mitchell)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Mitchell",
                    "text": "Mitchell does not inspire others.",
                    "fol": "\u00acp_3(Mitchell)",
                    "str_fol": "\u00acinspires_others(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                    "fol": "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((fight_oppression(x) \u2227 resists_tyranny(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Mitchell",
                "text": "Mitchell does not fight against oppression.",
                "fol": "\u00acp_11(Mitchell)",
                "str_fol": "\u00acfight_oppression(Mitchell)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Mitchell",
                    "text": "Mitchell faces risk.",
                    "fol": "p_13(Mitchell)",
                    "str_fol": "faces_risk(Mitchell)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Mitchell",
                    "text": "Mitchell does not tell his story.",
                    "fol": "\u00acp_2(Mitchell)",
                    "str_fol": "\u00actells_story(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Mitchell faces risk and speaks out, then he tells his story.",
                    "fol": "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                    "str_fol": "(faces_risk(Mitchell) \u2227 speaks_out(Mitchell)) \u2192 tells_story(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Mitchell",
                "text": "Mitchell does not speak out.",
                "fol": "\u00acp_12(Mitchell)",
                "str_fol": "\u00acspeaks_out(Mitchell)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Mitchell",
                    "text": "Mitchell does not speak out.",
                    "fol": "\u00acp_12(Mitchell)",
                    "str_fol": "\u00acspeaks_out(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Mitchell either speaks out or is truthful.",
                    "fol": "p_12(Mitchell) \u2228 p_9(Mitchell)",
                    "str_fol": "speaks_out(Mitchell) \u2228 is_truthful(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Mitchell",
                "text": "Mitchell is truthful.",
                "fol": "p_9(Mitchell)",
                "str_fol": "is_truthful(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Mitchell",
                    "text": "Mitchell does not reveal the truth.",
                    "fol": "\u00acp_1(Mitchell)",
                    "str_fol": "\u00acreveal_truth(Mitchell)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Mitchell",
                    "text": "Mitchell does not fight against oppression.",
                    "fol": "\u00acp_11(Mitchell)",
                    "str_fol": "\u00acfight_oppression(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                    "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                    "str_fol": "\u2200x (seek_justice(x) \u2192 (reveal_truth(x) \u2228 fight_oppression(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Mitchell",
                "text": "Mitchell does not seek justice.",
                "fol": "\u00acp_10(Mitchell)",
                "str_fol": "\u00acseek_justice(Mitchell)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Mitchell",
                    "text": "Mitchell is truthful.",
                    "fol": "p_9(Mitchell)",
                    "str_fol": "is_truthful(Mitchell)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Mitchell",
                    "text": "Mitchell does not seek justice.",
                    "fol": "\u00acp_10(Mitchell)",
                    "str_fol": "\u00acseek_justice(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Mitchell is truthful, then he either seeks justice or records history, but not both.",
                    "fol": "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))",
                    "str_fol": "is_truthful(Mitchell) \u2192 (seek_justice(Mitchell) \u2295 record_history(Mitchell))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Mitchell",
                "text": "Mitchell records history.",
                "fol": "p_8(Mitchell)",
                "str_fol": "record_history(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Mitchell",
                    "text": "Mitchell does not expose injustice.",
                    "fol": "\u00acp_0(Mitchell)",
                    "str_fol": "\u00acexpose_injustice(Mitchell)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Mitchell",
                    "text": "Mitchell records history.",
                    "fol": "p_8(Mitchell)",
                    "str_fol": "record_history(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                    "fol": "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                    "str_fol": "(expose_injustice(Mitchell) \u2295 record_history(Mitchell)) \u2192 document_atrocities(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Mitchell",
                "text": "Mitchell documents atrocities.",
                "fol": "p_6(Mitchell)",
                "str_fol": "document_atrocities(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Mitchell",
                    "text": "Mitchell documents atrocities.",
                    "fol": "p_6(Mitchell)",
                    "str_fol": "document_atrocities(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                    "fol": "p_6(Mitchell) \u2192 p_7(Mitchell)",
                    "str_fol": "document_atrocities(Mitchell) \u2192 leave_lasting_legacy(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Mitchell",
                "text": "Mitchell leaves a lasting legacy.",
                "fol": "p_7(Mitchell)",
                "str_fol": "leave_lasting_legacy(Mitchell)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_15(x) | p_5(x) -> p_14(x))).  [assumption].\n2 (all x (p_4(x) -> p_13(x))).  [assumption].\n3 (all x (p_11(x) & p_14(x) -> p_3(x))).  [assumption].\n4 p_13(Mitchell) & p_12(Mitchell) -> p_2(Mitchell).  [assumption].\n5 (all x (p_10(x) -> p_1(x) | p_11(x))).  [assumption].\n6 p_9(Mitchell) -> -(p_10(Mitchell) <-> p_8(Mitchell)).  [assumption].\n7 -(p_0(Mitchell) <-> p_8(Mitchell)) -> p_6(Mitchell).  [assumption].\n8 p_6(Mitchell) -> p_7(Mitchell).  [assumption].\n9 p_7(Mitchell).  [goal].\n10 -p_5(x) | p_14(x).  [clausify(1)].\n11 p_5(Mitchell).  [assumption].\n12 -p_4(x) | p_13(x).  [clausify(2)].\n13 p_4(Mitchell).  [assumption].\n14 -p_11(x) | -p_14(x) | p_3(x).  [clausify(3)].\n15 -p_3(Mitchell).  [assumption].\n16 -p_13(Mitchell) | -p_12(Mitchell) | p_2(Mitchell).  [clausify(4)].\n17 -p_2(Mitchell).  [assumption].\n18 -p_10(x) | p_1(x) | p_11(x).  [clausify(5)].\n19 -p_1(Mitchell).  [assumption].\n20 p_0(Mitchell) | -p_8(Mitchell) | p_6(Mitchell).  [clausify(7)].\n21 -p_0(Mitchell).  [assumption].\n23 -p_13(Mitchell) | -p_12(Mitchell).  [resolve(16,c,17,a)].\n24 p_12(Mitchell) | p_9(Mitchell).  [assumption].\n25 -p_13(Mitchell) | p_9(Mitchell).  [resolve(23,b,24,a)].\n26 -p_9(Mitchell) | p_10(Mitchell) | p_8(Mitchell).  [clausify(6)].\n28 -p_8(Mitchell) | p_6(Mitchell).  [resolve(20,a,21,a)].\n29 -p_6(Mitchell) | p_7(Mitchell).  [clausify(8)].\n30 -p_8(Mitchell) | p_7(Mitchell).  [resolve(28,b,29,a)].\n31 -p_7(Mitchell).  [deny(9)].\n32 -p_11(Mitchell) | -p_14(Mitchell).  [resolve(14,c,15,a)].\n33 p_14(Mitchell).  [resolve(10,a,11,a)].\n34 -p_13(Mitchell) | p_10(Mitchell) | p_8(Mitchell).  [resolve(25,b,26,a)].\n35 p_13(Mitchell).  [resolve(12,a,13,a)].\n37 p_10(Mitchell) | p_8(Mitchell).  [resolve(34,a,35,a)].\n38 -p_10(Mitchell) | p_11(Mitchell).  [resolve(18,b,19,a)].\n39 p_8(Mitchell) | p_11(Mitchell).  [resolve(37,a,38,a)].\n40 -p_8(Mitchell).  [resolve(30,b,31,a)].\n41 p_11(Mitchell).  [resolve(39,a,40,a)].\n42 -p_11(Mitchell).  [resolve(32,b,33,a)].\n43 $F.  [resolve(41,a,42,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\np_12(Mitchell) \u2228 p_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\n\u00acp_8(Mitchell) \u2192 \u00acp_7(Mitchell)",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "p_12(Mitchell) | p_9(Mitchell)",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "-p_8(Mitchell) -> -p_7(Mitchell)"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                    "\u00acp_8(Mitchell) \u2192 \u00acp_7(Mitchell)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\np_12(Mitchell) \u2228 p_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\np_8(Mitchell) \u2192 p_7(Mitchell)\np_9(Mitchell) \u2192 p_8(Mitchell)",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell).",
                    "p_4(Mitchell).",
                    "-p_3(Mitchell).",
                    "-p_2(Mitchell).",
                    "-p_1(Mitchell).",
                    "-p_0(Mitchell).",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x)).",
                    "all x (p_4(x) -> p_13(x)).",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x)).",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell).",
                    "p_12(Mitchell) | p_9(Mitchell).",
                    "all x (p_10(x) -> (p_1(x) | p_11(x))).",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell)).",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell).",
                    "p_6(Mitchell) -> p_7(Mitchell).",
                    "p_8(Mitchell) -> p_7(Mitchell).",
                    "p_9(Mitchell) -> p_8(Mitchell)."
                ],
                "formulas(goals)": [
                    "p_7(Mitchell)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_8(Mitchell) \u2192 \u00acp_7(Mitchell)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Mitchell) \u2192 p_7(Mitchell)",
                    "p_9(Mitchell) \u2192 p_8(Mitchell)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\n\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\np_8(Mitchell) \u2192 p_7(Mitchell)\np_9(Mitchell) \u2192 p_8(Mitchell)\n\u00acp_8(Mitchell)\n\u00acp_6(Mitchell)\n(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "-p_12(Mitchell) & -p_9(Mitchell)",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "p_8(Mitchell) -> p_7(Mitchell)",
                    "p_9(Mitchell) -> p_8(Mitchell)",
                    "-p_8(Mitchell)",
                    "-p_6(Mitchell)",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell)"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_12(Mitchell) \u2228 p_9(Mitchell)"
                ],
                "added_facts": [
                    "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                    "\u00acp_8(Mitchell)",
                    "\u00acp_6(Mitchell)"
                ],
                "added_rules": [
                    "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\n\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\np_8(Mitchell) \u2192 p_7(Mitchell)\np_9(Mitchell) \u2192 p_8(Mitchell)\n\u00acp_6(Mitchell)\n(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)\np_8(Mitchell)",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell).",
                    "p_4(Mitchell).",
                    "-p_3(Mitchell).",
                    "-p_2(Mitchell).",
                    "-p_1(Mitchell).",
                    "-p_0(Mitchell).",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x)).",
                    "all x (p_4(x) -> p_13(x)).",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x)).",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell).",
                    "-p_12(Mitchell) & -p_9(Mitchell).",
                    "all x (p_10(x) -> (p_1(x) | p_11(x))).",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell)).",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell).",
                    "p_6(Mitchell) -> p_7(Mitchell).",
                    "p_8(Mitchell) -> p_7(Mitchell).",
                    "p_9(Mitchell) -> p_8(Mitchell).",
                    "-p_6(Mitchell).",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell).",
                    "p_8(Mitchell)."
                ],
                "formulas(goals)": [
                    "p_7(Mitchell)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Mitchell)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Mitchell)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\n\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\np_8(Mitchell) \u2192 p_7(Mitchell)\np_9(Mitchell) \u2192 p_8(Mitchell)\n\u00acp_6(Mitchell)\n(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)\np_4(Mitchell) \u2192 \u00acp_8(Mitchell)",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "-p_12(Mitchell) & -p_9(Mitchell)",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "p_8(Mitchell) -> p_7(Mitchell)",
                    "p_9(Mitchell) -> p_8(Mitchell)",
                    "-p_6(Mitchell)",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell)",
                    "p_4(Mitchell) -> -p_8(Mitchell)"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_8(Mitchell)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Mitchell) \u2192 \u00acp_8(Mitchell)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\n\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\np_8(Mitchell) \u2192 p_7(Mitchell)\np_9(Mitchell) \u2192 p_8(Mitchell)\n\u00acp_6(Mitchell)\n(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)\np_4(Mitchell) \u2192 \u00acp_8(Mitchell)\np_14(Mitchell)\np_13(Mitchell)\n\u00acp_9(Mitchell)\np_10(Mitchell) \u2192 (p_1(Mitchell) \u2228 p_11(Mitchell))",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "(-p_12(Mitchell)) & (-p_9(Mitchell))",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "p_8(Mitchell) -> p_7(Mitchell)",
                    "p_9(Mitchell) -> p_8(Mitchell)",
                    "-p_6(Mitchell)",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell)",
                    "p_4(Mitchell) -> -p_8(Mitchell)",
                    "p_14(Mitchell)",
                    "p_13(Mitchell)",
                    "-p_9(Mitchell)",
                    "p_10(Mitchell) -> (p_1(Mitchell) | p_11(Mitchell))"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Mitchell)",
                    "p_13(Mitchell)",
                    "\u00acp_9(Mitchell)"
                ],
                "added_rules": [
                    "p_10(Mitchell) \u2192 (p_1(Mitchell) \u2228 p_11(Mitchell))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Mitchell)\np_4(Mitchell)\n\u00acp_3(Mitchell)\n\u00acp_2(Mitchell)\n\u00acp_1(Mitchell)\n\u00acp_0(Mitchell)\n\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))\n\u2200x (p_4(x) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))\n(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)\n\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)\n\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))\np_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))\n(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)\np_6(Mitchell) \u2192 p_7(Mitchell)\np_8(Mitchell) \u2192 p_7(Mitchell)\np_9(Mitchell) \u2192 p_8(Mitchell)\n\u00acp_6(Mitchell)\n(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)\np_4(Mitchell) \u2192 \u00acp_8(Mitchell)\np_14(Mitchell)\np_13(Mitchell)\n\u00acp_9(Mitchell)\np_10(Mitchell) \u2192 (p_1(Mitchell) \u2228 p_11(Mitchell))\n\u00acp_8(Mitchell)\n(p_6(Mitchell) \u2228 p_8(Mitchell)) \u2192 p_7(Mitchell)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_1(x)))",
            "Initial Goal": "p_7(Mitchell)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell).",
                    "p_4(Mitchell).",
                    "-p_3(Mitchell).",
                    "-p_2(Mitchell).",
                    "-p_1(Mitchell).",
                    "-p_0(Mitchell).",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x)).",
                    "all x (p_4(x) -> p_13(x)).",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x)).",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell).",
                    "-p_12(Mitchell) & -p_9(Mitchell).",
                    "all x (p_10(x) -> (p_1(x) | p_11(x))).",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell)).",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell).",
                    "p_6(Mitchell) -> p_7(Mitchell).",
                    "p_8(Mitchell) -> p_7(Mitchell).",
                    "p_9(Mitchell) -> p_8(Mitchell).",
                    "-p_6(Mitchell).",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell).",
                    "p_4(Mitchell) -> -p_8(Mitchell).",
                    "p_14(Mitchell).",
                    "p_13(Mitchell).",
                    "-p_9(Mitchell).",
                    "p_10(Mitchell) -> (p_1(Mitchell) | p_11(Mitchell)).",
                    "-p_8(Mitchell).",
                    "(p_6(Mitchell) | p_8(Mitchell)) -> p_7(Mitchell).",
                    "all x (p_10(x) -> (p_11(x) | p_1(x)))."
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Mitchell)"
                ],
                "added_rules": [
                    "(p_6(Mitchell) \u2228 p_8(Mitchell)) \u2192 p_7(Mitchell)",
                    "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_1(x)))"
                ]
            }
        }
    ]
}