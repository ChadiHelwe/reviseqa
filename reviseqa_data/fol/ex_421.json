{
    "background_story": "Cuddly was a beloved Fastnacht donut in a small Pennsylvania bakery. Every year, on the day before Lent, the bakery would create these sweet treats to celebrate the last day of indulgence before the 40-day fast. Cuddly was special - made with love and care, fried to a golden brown, and topped with a light dusting of powdered sugar. As the big day approached, the aroma of Cuddly and his fellow Fastnachts wafted through the town, enticing everyone with their sweet scent. On Fastnacht Day, Cuddly was the star, bringing joy to all who bit into his soft, fluffy interior. His popularity was unmatched, and by the end of the day, he and all his friends were gone, leaving behind only happy memories and the promise of next year's Fastnacht celebration.",
    "predicates": [
        {
            "id": 0,
            "name": "is_light"
        },
        {
            "id": 1,
            "name": "tastes_great"
        },
        {
            "id": 2,
            "name": "has_sprinkles"
        },
        {
            "id": 3,
            "name": "tastes_best"
        },
        {
            "id": 4,
            "name": "crispy_outside"
        },
        {
            "id": 5,
            "name": "is_tender"
        },
        {
            "id": 6,
            "name": "delicious"
        },
        {
            "id": 7,
            "name": "popular"
        },
        {
            "id": 8,
            "name": "traditional"
        },
        {
            "id": 9,
            "name": "sweet"
        },
        {
            "id": 10,
            "name": "made_locally"
        },
        {
            "id": 11,
            "name": "fried_perfectly"
        },
        {
            "id": 12,
            "name": "is_fluffy"
        },
        {
            "id": 13,
            "name": "is_homemade"
        },
        {
            "id": 14,
            "name": "hand_crafted"
        },
        {
            "id": 15,
            "name": "freshly_baked"
        },
        {
            "id": 16,
            "name": "seasonal"
        },
        {
            "id": 17,
            "name": "tasty"
        },
        {
            "id": 18,
            "name": "golden_brown"
        },
        {
            "id": 19,
            "name": "fresh_baked"
        },
        {
            "id": 20,
            "name": "soft_inside"
        },
        {
            "id": 21,
            "name": "airy_texture"
        },
        {
            "id": 22,
            "name": "baked_with_love"
        },
        {
            "id": 23,
            "name": "made_with_love"
        },
        {
            "id": 24,
            "name": "cooked_to_perfection"
        }
    ],
    "subject_name": "Cuddly",
    "subject_category": "donut",
    "keyword": "fastnacht",
    "all_facts": [
        {
            "id": 0,
            "subject": "Cuddly",
            "text": "Cuddly is light.",
            "fol": "p_0(Cuddly)",
            "str_fol": "is_light(Cuddly)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Cuddly",
            "text": "Cuddly does not taste great.",
            "fol": "\u00acp_1(Cuddly)",
            "str_fol": "\u00actastes_great(Cuddly)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Cuddly",
            "text": "Cuddly has sprinkles.",
            "fol": "p_2(Cuddly)",
            "str_fol": "has_sprinkles(Cuddly)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Cuddly",
            "text": "Cuddly does not taste the best.",
            "fol": "\u00acp_3(Cuddly)",
            "str_fol": "\u00actastes_best(Cuddly)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Cuddly",
            "text": "Cuddly is crispy on the outside.",
            "fol": "p_4(Cuddly)",
            "str_fol": "crispy_outside(Cuddly)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Cuddly",
            "text": "Cuddly is not tender.",
            "fol": "\u00acp_5(Cuddly)",
            "str_fol": "\u00acis_tender(Cuddly)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Cuddly",
            "text": "Cuddly is not hand-crafted.",
            "fol": "\u00acp_14(Cuddly)",
            "str_fol": "\u00achand_crafted(Cuddly)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Cuddly",
            "text": "Cuddly is not homemade.",
            "fol": "\u00acp_13(Cuddly)",
            "str_fol": "\u00acis_homemade(Cuddly)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Cuddly",
            "text": "Cuddly is fluffy.",
            "fol": "p_12(Cuddly)",
            "str_fol": "is_fluffy(Cuddly)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Cuddly",
            "text": "Cuddly is made locally.",
            "fol": "p_10(Cuddly)",
            "str_fol": "made_locally(Cuddly)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Cuddly",
            "text": "Cuddly is not fried perfectly.",
            "fol": "\u00acp_11(Cuddly)",
            "str_fol": "\u00acfried_perfectly(Cuddly)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Cuddly",
            "text": "Cuddly is not sweet.",
            "fol": "\u00acp_9(Cuddly)",
            "str_fol": "\u00acsweet(Cuddly)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Cuddly",
            "text": "Cuddly is not delicious.",
            "fol": "\u00acp_6(Cuddly)",
            "str_fol": "\u00acdelicious(Cuddly)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Cuddly",
            "text": "Cuddly is popular.",
            "fol": "p_7(Cuddly)",
            "str_fol": "popular(Cuddly)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Cuddly",
            "text": "Cuddly is not tender.",
            "fol": "\u00acp_5(Cuddly)",
            "str_fol": "\u00acis_tender(Cuddly)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Cuddly",
            "text": "Cuddly does not taste the best.",
            "fol": "\u00acp_3(Cuddly)",
            "str_fol": "\u00actastes_best(Cuddly)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Cuddly",
            "text": "Cuddly is crispy on the outside.",
            "fol": "p_4(Cuddly)",
            "str_fol": "crispy_outside(Cuddly)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Cuddly",
            "text": "Cuddly does not taste great.",
            "fol": "\u00acp_1(Cuddly)",
            "str_fol": "\u00actastes_great(Cuddly)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Cuddly",
            "text": "Cuddly is light.",
            "fol": "p_0(Cuddly)",
            "str_fol": "is_light(Cuddly)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Cuddly",
            "text": "Cuddly has sprinkles.",
            "fol": "p_2(Cuddly)",
            "str_fol": "has_sprinkles(Cuddly)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Cuddly is hand-crafted, then he is tender.",
            "fol": "p_14(Cuddly) \u2192 p_5(Cuddly)",
            "str_fol": "hand_crafted(Cuddly) \u2192 is_tender(Cuddly)"
        },
        {
            "id": 7,
            "text": "If Cuddly is homemade or hand-crafted, then he tastes the best.",
            "fol": "(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)",
            "str_fol": "(is_homemade(Cuddly) \u2228 hand_crafted(Cuddly)) \u2192 tastes_best(Cuddly)"
        },
        {
            "id": 6,
            "text": "If Cuddly is either crispy on the outside or fluffy, then it tastes great.",
            "fol": "(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)",
            "str_fol": "(crispy_outside(Cuddly) \u2295 is_fluffy(Cuddly)) \u2192 tastes_great(Cuddly)"
        },
        {
            "id": 5,
            "text": "A donut is either homemade or made locally, but not necessarily both.",
            "fol": "\u2200x (p_13(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (is_homemade(x) \u2295 made_locally(x))"
        },
        {
            "id": 4,
            "text": "If a donut is fried perfectly, then it is either fluffy or light, but not both.",
            "fol": "p_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))",
            "str_fol": "fried_perfectly(Cuddly) \u2192 (is_fluffy(Cuddly) \u2295 is_light(Cuddly))"
        },
        {
            "id": 3,
            "text": "Cuddly is either sweet or has sprinkles, but not both.",
            "fol": "p_9(Cuddly) \u2295 p_2(Cuddly)",
            "str_fol": "sweet(Cuddly) \u2295 has_sprinkles(Cuddly)"
        },
        {
            "id": 2,
            "text": "If Cuddly is made locally and fried perfectly, then he is traditional.",
            "fol": "(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)",
            "str_fol": "(made_locally(Cuddly) \u2227 fried_perfectly(Cuddly)) \u2192 traditional(Cuddly)"
        },
        {
            "id": 1,
            "text": "All delicious donuts are sweet.",
            "fol": "\u2200x (p_6(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (delicious(x) \u2192 sweet(x))"
        },
        {
            "id": 0,
            "text": "If Cuddly is delicious, then he is either popular or traditional, but not both.",
            "fol": "p_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))",
            "str_fol": "delicious(Cuddly) \u2192 (popular(Cuddly) \u2295 traditional(Cuddly))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Cuddly",
            "text": "Cuddly is not tender.",
            "fol": "\u00acp_5(Cuddly)",
            "str_fol": "\u00acis_tender(Cuddly)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Cuddly",
            "text": "Cuddly does not taste the best.",
            "fol": "\u00acp_3(Cuddly)",
            "str_fol": "\u00actastes_best(Cuddly)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Cuddly",
            "text": "Cuddly is crispy on the outside.",
            "fol": "p_4(Cuddly)",
            "str_fol": "crispy_outside(Cuddly)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Cuddly",
            "text": "Cuddly does not taste great.",
            "fol": "\u00acp_1(Cuddly)",
            "str_fol": "\u00actastes_great(Cuddly)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Cuddly",
            "text": "Cuddly is light.",
            "fol": "p_0(Cuddly)",
            "str_fol": "is_light(Cuddly)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Cuddly",
            "text": "Cuddly has sprinkles.",
            "fol": "p_2(Cuddly)",
            "str_fol": "has_sprinkles(Cuddly)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Cuddly is hand-crafted, then he is tender.",
            "fol": "p_14(Cuddly) \u2192 p_5(Cuddly)",
            "str_fol": "hand_crafted(Cuddly) \u2192 is_tender(Cuddly)"
        },
        {
            "id": 7,
            "text": "If Cuddly is homemade or hand-crafted, then he tastes the best.",
            "fol": "(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)",
            "str_fol": "(is_homemade(Cuddly) \u2228 hand_crafted(Cuddly)) \u2192 tastes_best(Cuddly)"
        },
        {
            "id": 6,
            "text": "If Cuddly is either crispy on the outside or fluffy, then it tastes great.",
            "fol": "(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)",
            "str_fol": "(crispy_outside(Cuddly) \u2295 is_fluffy(Cuddly)) \u2192 tastes_great(Cuddly)"
        },
        {
            "id": 5,
            "text": "A donut is either homemade or made locally, but not necessarily both.",
            "fol": "\u2200x (p_13(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (is_homemade(x) \u2295 made_locally(x))"
        },
        {
            "id": 4,
            "text": "If a donut is fried perfectly, then it is either fluffy or light, but not both.",
            "fol": "p_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))",
            "str_fol": "fried_perfectly(Cuddly) \u2192 (is_fluffy(Cuddly) \u2295 is_light(Cuddly))"
        },
        {
            "id": 3,
            "text": "Cuddly is either sweet or has sprinkles, but not both.",
            "fol": "p_9(Cuddly) \u2295 p_2(Cuddly)",
            "str_fol": "sweet(Cuddly) \u2295 has_sprinkles(Cuddly)"
        },
        {
            "id": 2,
            "text": "If Cuddly is made locally and fried perfectly, then he is traditional.",
            "fol": "(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)",
            "str_fol": "(made_locally(Cuddly) \u2227 fried_perfectly(Cuddly)) \u2192 traditional(Cuddly)"
        },
        {
            "id": 1,
            "text": "All delicious donuts are sweet.",
            "fol": "\u2200x (p_6(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (delicious(x) \u2192 sweet(x))"
        },
        {
            "id": 0,
            "text": "If Cuddly is delicious, then he is either popular or traditional, but not both.",
            "fol": "p_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))",
            "str_fol": "delicious(Cuddly) \u2192 (popular(Cuddly) \u2295 traditional(Cuddly))"
        }
    ],
    "context_fol": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_14(Cuddly) \u2192 p_5(Cuddly)\n(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))",
    "conclusion": {
        "id": 13,
        "subject": "Cuddly",
        "text": "Cuddly is popular.",
        "fol": "p_7(Cuddly)",
        "str_fol": "popular(Cuddly)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Cuddly)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Cuddly",
                    "text": "Cuddly is not tender.",
                    "fol": "\u00acp_5(Cuddly)",
                    "str_fol": "\u00acis_tender(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Cuddly is hand-crafted, then he is tender.",
                    "fol": "p_14(Cuddly) \u2192 p_5(Cuddly)",
                    "str_fol": "hand_crafted(Cuddly) \u2192 is_tender(Cuddly)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Cuddly",
                "text": "Cuddly is not hand-crafted.",
                "fol": "\u00acp_14(Cuddly)",
                "str_fol": "\u00achand_crafted(Cuddly)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Cuddly",
                    "text": "Cuddly is not hand-crafted.",
                    "fol": "\u00acp_14(Cuddly)",
                    "str_fol": "\u00achand_crafted(Cuddly)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Cuddly",
                    "text": "Cuddly does not taste the best.",
                    "fol": "\u00acp_3(Cuddly)",
                    "str_fol": "\u00actastes_best(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Cuddly is homemade or hand-crafted, then he tastes the best.",
                    "fol": "(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)",
                    "str_fol": "(is_homemade(Cuddly) \u2228 hand_crafted(Cuddly)) \u2192 tastes_best(Cuddly)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Cuddly",
                "text": "Cuddly is not homemade.",
                "fol": "\u00acp_13(Cuddly)",
                "str_fol": "\u00acis_homemade(Cuddly)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Cuddly",
                    "text": "Cuddly is crispy on the outside.",
                    "fol": "p_4(Cuddly)",
                    "str_fol": "crispy_outside(Cuddly)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Cuddly",
                    "text": "Cuddly does not taste great.",
                    "fol": "\u00acp_1(Cuddly)",
                    "str_fol": "\u00actastes_great(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Cuddly is either crispy on the outside or fluffy, then it tastes great.",
                    "fol": "(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)",
                    "str_fol": "(crispy_outside(Cuddly) \u2295 is_fluffy(Cuddly)) \u2192 tastes_great(Cuddly)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Cuddly",
                "text": "Cuddly is fluffy.",
                "fol": "p_12(Cuddly)",
                "str_fol": "is_fluffy(Cuddly)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Cuddly",
                    "text": "Cuddly is not homemade.",
                    "fol": "\u00acp_13(Cuddly)",
                    "str_fol": "\u00acis_homemade(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "A donut is either homemade or made locally, but not necessarily both.",
                    "fol": "\u2200x (p_13(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (is_homemade(x) \u2295 made_locally(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Cuddly",
                "text": "Cuddly is made locally.",
                "fol": "p_10(Cuddly)",
                "str_fol": "made_locally(Cuddly)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Cuddly",
                    "text": "Cuddly is fluffy.",
                    "fol": "p_12(Cuddly)",
                    "str_fol": "is_fluffy(Cuddly)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Cuddly",
                    "text": "Cuddly is light.",
                    "fol": "p_0(Cuddly)",
                    "str_fol": "is_light(Cuddly)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If a donut is fried perfectly, then it is either fluffy or light, but not both.",
                    "fol": "p_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))",
                    "str_fol": "fried_perfectly(Cuddly) \u2192 (is_fluffy(Cuddly) \u2295 is_light(Cuddly))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Cuddly",
                "text": "Cuddly is not fried perfectly.",
                "fol": "\u00acp_11(Cuddly)",
                "str_fol": "\u00acfried_perfectly(Cuddly)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Cuddly",
                    "text": "Cuddly has sprinkles.",
                    "fol": "p_2(Cuddly)",
                    "str_fol": "has_sprinkles(Cuddly)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Cuddly is either sweet or has sprinkles, but not both.",
                    "fol": "p_9(Cuddly) \u2295 p_2(Cuddly)",
                    "str_fol": "sweet(Cuddly) \u2295 has_sprinkles(Cuddly)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Cuddly",
                "text": "Cuddly is not sweet.",
                "fol": "\u00acp_9(Cuddly)",
                "str_fol": "\u00acsweet(Cuddly)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Cuddly",
                    "text": "Cuddly is made locally.",
                    "fol": "p_10(Cuddly)",
                    "str_fol": "made_locally(Cuddly)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Cuddly",
                    "text": "Cuddly is not fried perfectly.",
                    "fol": "\u00acp_11(Cuddly)",
                    "str_fol": "\u00acfried_perfectly(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Cuddly is made locally and fried perfectly, then he is traditional.",
                    "fol": "(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)",
                    "str_fol": "(made_locally(Cuddly) \u2227 fried_perfectly(Cuddly)) \u2192 traditional(Cuddly)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Cuddly",
                    "text": "Cuddly is not sweet.",
                    "fol": "\u00acp_9(Cuddly)",
                    "str_fol": "\u00acsweet(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "All delicious donuts are sweet.",
                    "fol": "\u2200x (p_6(x) \u2192 p_9(x))",
                    "str_fol": "\u2200x (delicious(x) \u2192 sweet(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Cuddly",
                "text": "Cuddly is not delicious.",
                "fol": "\u00acp_6(Cuddly)",
                "str_fol": "\u00acdelicious(Cuddly)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Cuddly",
                    "text": "Cuddly is not delicious.",
                    "fol": "\u00acp_6(Cuddly)",
                    "str_fol": "\u00acdelicious(Cuddly)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Cuddly is delicious, then he is either popular or traditional, but not both.",
                    "fol": "p_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))",
                    "str_fol": "delicious(Cuddly) \u2192 (popular(Cuddly) \u2295 traditional(Cuddly))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_14(Cuddly) \u2192 p_5(Cuddly)\n(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly).",
                    "-p_3(Cuddly).",
                    "p_4(Cuddly).",
                    "-p_1(Cuddly).",
                    "p_0(Cuddly).",
                    "p_2(Cuddly).",
                    "p_14(Cuddly) -> p_5(Cuddly).",
                    "(p_13(Cuddly) | p_14(Cuddly)) -> p_3(Cuddly).",
                    "(-(p_4(Cuddly) <-> p_12(Cuddly))) -> p_1(Cuddly).",
                    "all x (-(p_13(x) <-> p_10(x))).",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly))).",
                    "-(p_9(Cuddly) <-> p_2(Cuddly)).",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly).",
                    "all x (p_6(x) -> p_9(x)).",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly))).",
                    "p_6(Cuddly).",
                    "-p_11(Cuddly)."
                ],
                "formulas(goals)": [
                    "p_7(Cuddly)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Cuddly)",
                    "\u00acp_11(Cuddly)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_14(Cuddly) \u2192 p_5(Cuddly)\n(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))\np_7(Cuddly)",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly).",
                    "-p_3(Cuddly).",
                    "p_4(Cuddly).",
                    "-p_1(Cuddly).",
                    "p_0(Cuddly).",
                    "p_2(Cuddly).",
                    "p_14(Cuddly) -> p_5(Cuddly).",
                    "(p_13(Cuddly) | p_14(Cuddly)) -> p_3(Cuddly).",
                    "(-(p_4(Cuddly) <-> p_12(Cuddly))) -> p_1(Cuddly).",
                    "all x (-(p_13(x) <-> p_10(x))).",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly))).",
                    "-(p_9(Cuddly) <-> p_2(Cuddly)).",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly).",
                    "all x (p_6(x) -> p_9(x)).",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly))).",
                    "p_7(Cuddly)."
                ],
                "formulas(goals)": [
                    "p_7(Cuddly)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Cuddly)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_14(Cuddly) \u2192 p_5(Cuddly)\n(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))\np_7(Cuddly)\np_7(Cuddly) \u2228 \u00acp_7(Cuddly)\n\u00acp_14(Cuddly)\n\u00acp_14(Cuddly) \u2228 p_5(Cuddly)\n\u00acp_13(Cuddly)\np_10(Cuddly)\n\u00acp_10(Cuddly) \u2228 \u00acp_11(Cuddly) \u2228 p_8(Cuddly)\n\u00acp_9(Cuddly)\n\u00acp_6(Cuddly)\n\u00acp_6(Cuddly) \u2228 (p_7(Cuddly) \u2295 p_8(Cuddly))\n\u2200x (p_6(x) \u2192 p_9(x)) \u2228 \u00ac\u2200x (p_6(x) \u2192 p_9(x))",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly)",
                    "-p_3(Cuddly)",
                    "p_4(Cuddly)",
                    "-p_1(Cuddly)",
                    "p_0(Cuddly)",
                    "p_2(Cuddly)",
                    "p_14(Cuddly) -> p_5(Cuddly)",
                    "(p_13(Cuddly) | p_14(Cuddly)) -> p_3(Cuddly)",
                    "(-(p_4(Cuddly) <-> p_12(Cuddly))) -> p_1(Cuddly)",
                    "all x (-(p_13(x) <-> p_10(x)))",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly)))",
                    "-(p_9(Cuddly) <-> p_2(Cuddly))",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly)",
                    "all x (p_6(x) -> p_9(x))",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "p_7(Cuddly)",
                    "p_7(Cuddly) | -p_7(Cuddly)",
                    "-p_14(Cuddly)",
                    "-p_14(Cuddly) | p_5(Cuddly)",
                    "-p_13(Cuddly)",
                    "p_10(Cuddly)",
                    "-p_10(Cuddly) | -p_11(Cuddly) | p_8(Cuddly)",
                    "-p_9(Cuddly)",
                    "-p_6(Cuddly)",
                    "-p_6(Cuddly) | (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "(all x (p_6(x) -> p_9(x))) | (-(all x (p_6(x) -> p_9(x))))"
                ],
                "formulas(goals)": [
                    "p_7(Cuddly)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Cuddly) \u2228 \u00acp_7(Cuddly)",
                    "\u00acp_14(Cuddly)",
                    "\u00acp_14(Cuddly) \u2228 p_5(Cuddly)",
                    "\u00acp_13(Cuddly)",
                    "p_10(Cuddly)",
                    "\u00acp_10(Cuddly) \u2228 \u00acp_11(Cuddly) \u2228 p_8(Cuddly)",
                    "\u00acp_9(Cuddly)",
                    "\u00acp_6(Cuddly)"
                ],
                "added_rules": [
                    "\u00acp_6(Cuddly) \u2228 (p_7(Cuddly) \u2295 p_8(Cuddly))",
                    "\u2200x (p_6(x) \u2192 p_9(x)) \u2228 \u00ac\u2200x (p_6(x) \u2192 p_9(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_3(Cuddly) \u2228 \u00acp_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))\np_7(Cuddly)\np_7(Cuddly) \u2228 \u00acp_7(Cuddly)\n\u00acp_14(Cuddly)\n\u00acp_13(Cuddly)\np_10(Cuddly)\n\u00acp_10(Cuddly) \u2228 \u00acp_11(Cuddly) \u2228 p_8(Cuddly)\n\u00acp_9(Cuddly)\n\u00acp_6(Cuddly)\n\u00acp_6(Cuddly) \u2228 (p_7(Cuddly) \u2295 p_8(Cuddly))\n\u2200x (p_6(x) \u2192 p_9(x)) \u2228 \u00ac\u2200x (p_6(x) \u2192 p_9(x))\np_11(Cuddly) \u2192 \u00acp_12(Cuddly)\n\u00acp_12(Cuddly) \u2192 p_1(Cuddly)",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly)",
                    "-p_3(Cuddly)",
                    "p_4(Cuddly)",
                    "-p_1(Cuddly)",
                    "p_0(Cuddly)",
                    "p_2(Cuddly)",
                    "p_3(Cuddly) | -p_3(Cuddly)",
                    "(-(p_4(Cuddly) <-> p_12(Cuddly))) -> p_1(Cuddly)",
                    "all x (-(p_13(x) <-> p_10(x)))",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly)))",
                    "-(p_9(Cuddly) <-> p_2(Cuddly))",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly)",
                    "all x (p_6(x) -> p_9(x))",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "p_7(Cuddly)",
                    "p_7(Cuddly) | -p_7(Cuddly)",
                    "-p_14(Cuddly)",
                    "-p_13(Cuddly)",
                    "p_10(Cuddly)",
                    "-p_10(Cuddly) | -p_11(Cuddly) | p_8(Cuddly)",
                    "-p_9(Cuddly)",
                    "-p_6(Cuddly)",
                    "-p_6(Cuddly) | (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "(all x (p_6(x) -> p_9(x))) | -(all x (p_6(x) -> p_9(x)))",
                    "p_11(Cuddly) -> -p_12(Cuddly)",
                    "-p_12(Cuddly) -> p_1(Cuddly)"
                ],
                "formulas(goals)": [
                    "p_7(Cuddly)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_13(Cuddly) \u2228 p_14(Cuddly)) \u2192 p_3(Cuddly)",
                    "p_14(Cuddly) \u2192 p_5(Cuddly)",
                    "\u00acp_14(Cuddly) \u2228 p_5(Cuddly)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Cuddly) \u2228 \u00acp_3(Cuddly)",
                    "p_11(Cuddly) \u2192 \u00acp_12(Cuddly)",
                    "\u00acp_12(Cuddly) \u2192 p_1(Cuddly)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_3(Cuddly) \u2228 \u00acp_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))\np_7(Cuddly) \u2228 \u00acp_7(Cuddly)\n\u00acp_14(Cuddly)\n\u00acp_13(Cuddly)\np_10(Cuddly)\n\u00acp_10(Cuddly) \u2228 \u00acp_11(Cuddly) \u2228 p_8(Cuddly)\n\u00acp_9(Cuddly)\n\u00acp_6(Cuddly)\n\u00acp_6(Cuddly) \u2228 (p_7(Cuddly) \u2295 p_8(Cuddly))\n\u2200x (p_6(x) \u2192 p_9(x)) \u2228 \u00ac\u2200x (p_6(x) \u2192 p_9(x))\np_11(Cuddly) \u2192 \u00acp_12(Cuddly)\n\u00acp_12(Cuddly) \u2192 p_1(Cuddly)\np_7(Cuddly) \u2192 p_6(Cuddly)",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly)",
                    "-p_3(Cuddly)",
                    "p_4(Cuddly)",
                    "-p_1(Cuddly)",
                    "p_0(Cuddly)",
                    "p_2(Cuddly)",
                    "p_3(Cuddly) | -p_3(Cuddly)",
                    "(-(p_4(Cuddly) <-> p_12(Cuddly))) -> p_1(Cuddly)",
                    "all x (-p_13(x) <-> p_10(x))",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly)))",
                    "-(p_9(Cuddly) <-> p_2(Cuddly))",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly)",
                    "all x (p_6(x) -> p_9(x))",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "p_7(Cuddly) | -p_7(Cuddly)",
                    "-p_14(Cuddly)",
                    "-p_13(Cuddly)",
                    "p_10(Cuddly)",
                    "-p_10(Cuddly) | -p_11(Cuddly) | p_8(Cuddly)",
                    "-p_9(Cuddly)",
                    "-p_6(Cuddly)",
                    "-p_6(Cuddly) | (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "(all x (p_6(x) -> p_9(x))) | -(all x (p_6(x) -> p_9(x)))",
                    "p_11(Cuddly) -> -p_12(Cuddly)",
                    "-p_12(Cuddly) -> p_1(Cuddly)",
                    "p_7(Cuddly) -> p_6(Cuddly)"
                ],
                "formulas(goals)": [
                    "-p_7(Cuddly)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_7(Cuddly)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Cuddly) \u2192 p_6(Cuddly)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_3(Cuddly) \u2228 \u00acp_3(Cuddly)\n(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))\np_7(Cuddly) \u2228 \u00acp_7(Cuddly)\n\u00acp_14(Cuddly)\n\u00acp_13(Cuddly)\np_10(Cuddly)\n\u00acp_10(Cuddly) \u2228 \u00acp_11(Cuddly) \u2228 p_8(Cuddly)\n\u00acp_9(Cuddly)\n\u00acp_6(Cuddly)\n\u00acp_6(Cuddly) \u2228 (p_7(Cuddly) \u2295 p_8(Cuddly))\n\u2200x (p_6(x) \u2192 p_9(x)) \u2228 \u00ac\u2200x (p_6(x) \u2192 p_9(x))\np_11(Cuddly) \u2192 \u00acp_12(Cuddly)\n\u00acp_12(Cuddly) \u2192 p_1(Cuddly)\np_7(Cuddly) \u2192 p_6(Cuddly)\n\u00acp_6(Cuddly) \u2192 \u00acp_7(Cuddly)\n\u00acp_7(Cuddly) \u2228 p_6(Cuddly)\np_11(Cuddly) \u2192 ((p_12(Cuddly) \u2228 p_0(Cuddly)) \u2227 \u00ac(p_12(Cuddly) \u2227 p_0(Cuddly)))\n(p_9(Cuddly) \u2228 p_2(Cuddly)) \u2227 \u00ac(p_9(Cuddly) \u2227 p_2(Cuddly))",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly)",
                    "-p_3(Cuddly)",
                    "p_4(Cuddly)",
                    "-p_1(Cuddly)",
                    "p_0(Cuddly)",
                    "p_2(Cuddly)",
                    "p_3(Cuddly) | -p_3(Cuddly)",
                    "(-(p_4(Cuddly) <-> p_12(Cuddly))) -> p_1(Cuddly)",
                    "all x (-(p_13(x) <-> p_10(x)))",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly)))",
                    "-(p_9(Cuddly) <-> p_2(Cuddly))",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly)",
                    "all x (p_6(x) -> p_9(x))",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "p_7(Cuddly) | -p_7(Cuddly)",
                    "-p_14(Cuddly)",
                    "-p_13(Cuddly)",
                    "p_10(Cuddly)",
                    "-p_10(Cuddly) | -p_11(Cuddly) | p_8(Cuddly)",
                    "-p_9(Cuddly)",
                    "-p_6(Cuddly)",
                    "-p_6(Cuddly) | (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "(all x (p_6(x) -> p_9(x))) | -(all x (p_6(x) -> p_9(x)))",
                    "p_11(Cuddly) -> -p_12(Cuddly)",
                    "-p_12(Cuddly) -> p_1(Cuddly)",
                    "p_7(Cuddly) -> p_6(Cuddly)",
                    "-p_6(Cuddly) -> -p_7(Cuddly)",
                    "-p_7(Cuddly) | p_6(Cuddly)",
                    "p_11(Cuddly) -> ((p_12(Cuddly) | p_0(Cuddly)) & -(p_12(Cuddly) & p_0(Cuddly)))",
                    "(p_9(Cuddly) | p_2(Cuddly)) & -(p_9(Cuddly) & p_2(Cuddly))"
                ],
                "formulas(goals)": [
                    "-p_7(Cuddly)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_6(Cuddly) \u2192 \u00acp_7(Cuddly)",
                    "\u00acp_7(Cuddly) \u2228 p_6(Cuddly)",
                    "p_11(Cuddly) \u2192 ((p_12(Cuddly) \u2228 p_0(Cuddly)) \u2227 \u00ac(p_12(Cuddly) \u2227 p_0(Cuddly)))",
                    "(p_9(Cuddly) \u2228 p_2(Cuddly)) \u2227 \u00ac(p_9(Cuddly) \u2227 p_2(Cuddly))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Cuddly)\n\u00acp_3(Cuddly)\np_4(Cuddly)\n\u00acp_1(Cuddly)\np_0(Cuddly)\np_2(Cuddly)\np_3(Cuddly) \u2228 \u00acp_3(Cuddly)\n((p_4(Cuddly) \u2228 p_12(Cuddly)) \u2227 \u00ac(p_4(Cuddly) \u2227 p_12(Cuddly))) \u2192 p_1(Cuddly)\n\u2200x (p_13(x) \u2295 p_10(x))\np_11(Cuddly) \u2192 (p_12(Cuddly) \u2295 p_0(Cuddly))\np_9(Cuddly) \u2295 p_2(Cuddly)\n(p_10(Cuddly) \u2227 p_11(Cuddly)) \u2192 p_8(Cuddly)\n\u2200x (p_6(x) \u2192 p_9(x))\np_6(Cuddly) \u2192 (p_7(Cuddly) \u2295 p_8(Cuddly))\np_7(Cuddly) \u2228 \u00acp_7(Cuddly)\n\u00acp_14(Cuddly)\n\u00acp_13(Cuddly)\np_10(Cuddly)\n\u00acp_10(Cuddly) \u2228 \u00acp_11(Cuddly) \u2228 p_8(Cuddly)\n\u00acp_9(Cuddly)\n\u00acp_6(Cuddly)\n\u00acp_6(Cuddly) \u2228 (p_7(Cuddly) \u2295 p_8(Cuddly))\n\u2200x (p_6(x) \u2192 p_9(x)) \u2228 \u00ac\u2200x (p_6(x) \u2192 p_9(x))\np_11(Cuddly) \u2192 \u00acp_12(Cuddly)\n\u00acp_12(Cuddly) \u2192 p_1(Cuddly)\np_7(Cuddly) \u2192 p_6(Cuddly)\n\u00acp_6(Cuddly) \u2192 \u00acp_7(Cuddly)\n\u00acp_7(Cuddly) \u2228 p_6(Cuddly)\np_11(Cuddly) \u2192 ((p_12(Cuddly) \u2228 p_0(Cuddly)) \u2227 \u00ac(p_12(Cuddly) \u2227 p_0(Cuddly)))\n(p_9(Cuddly) \u2228 p_2(Cuddly)) \u2227 \u00ac(p_9(Cuddly) \u2227 p_2(Cuddly))\np_5(Cuddly) \u2228 \u00acp_5(Cuddly)\n\u00acp_7(Cuddly) \u2228 \u00acp_7(Cuddly)\n(p_7(Cuddly) \u2192 p_6(Cuddly)) \u2228 (\u00acp_7(Cuddly) \u2192 p_6(Cuddly))",
            "Initial Goal": "p_7(Cuddly)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Cuddly)",
                    "-p_3(Cuddly)",
                    "p_4(Cuddly)",
                    "-p_1(Cuddly)",
                    "p_0(Cuddly)",
                    "p_2(Cuddly)",
                    "p_3(Cuddly) | -p_3(Cuddly)",
                    "((p_4(Cuddly) | p_12(Cuddly)) & -(p_4(Cuddly) & p_12(Cuddly))) -> p_1(Cuddly)",
                    "all x (-(p_13(x) <-> p_10(x)))",
                    "p_11(Cuddly) -> (-(p_12(Cuddly) <-> p_0(Cuddly)))",
                    "-(p_9(Cuddly) <-> p_2(Cuddly))",
                    "(p_10(Cuddly) & p_11(Cuddly)) -> p_8(Cuddly)",
                    "all x (p_6(x) -> p_9(x))",
                    "p_6(Cuddly) -> (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "p_7(Cuddly) | -p_7(Cuddly)",
                    "-p_14(Cuddly)",
                    "-p_13(Cuddly)",
                    "p_10(Cuddly)",
                    "-p_10(Cuddly) | -p_11(Cuddly) | p_8(Cuddly)",
                    "-p_9(Cuddly)",
                    "-p_6(Cuddly)",
                    "-p_6(Cuddly) | (-(p_7(Cuddly) <-> p_8(Cuddly)))",
                    "(all x (p_6(x) -> p_9(x))) | -(all x (p_6(x) -> p_9(x)))",
                    "p_11(Cuddly) -> -p_12(Cuddly)",
                    "-p_12(Cuddly) -> p_1(Cuddly)",
                    "p_7(Cuddly) -> p_6(Cuddly)",
                    "-p_6(Cuddly) -> -p_7(Cuddly)",
                    "-p_7(Cuddly) | p_6(Cuddly)",
                    "p_11(Cuddly) -> ((p_12(Cuddly) | p_0(Cuddly)) & -(p_12(Cuddly) & p_0(Cuddly)))",
                    "(p_9(Cuddly) | p_2(Cuddly)) & -(p_9(Cuddly) & p_2(Cuddly))",
                    "p_5(Cuddly) | -p_5(Cuddly)",
                    "-p_7(Cuddly) | -p_7(Cuddly)",
                    "(p_7(Cuddly) -> p_6(Cuddly)) | (-p_7(Cuddly) -> p_6(Cuddly))"
                ],
                "formulas(goals)": [
                    "-p_7(Cuddly)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_4(Cuddly) \u2295 p_12(Cuddly)) \u2192 p_1(Cuddly)"
                ],
                "added_facts": [
                    "p_5(Cuddly) \u2228 \u00acp_5(Cuddly)",
                    "\u00acp_7(Cuddly) \u2228 \u00acp_7(Cuddly)"
                ],
                "added_rules": [
                    "((p_4(Cuddly) \u2228 p_12(Cuddly)) \u2227 \u00ac(p_4(Cuddly) \u2227 p_12(Cuddly))) \u2192 p_1(Cuddly)",
                    "(p_7(Cuddly) \u2192 p_6(Cuddly)) \u2228 (\u00acp_7(Cuddly) \u2192 p_6(Cuddly))"
                ]
            }
        }
    ]
}