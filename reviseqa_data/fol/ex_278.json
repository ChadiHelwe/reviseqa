{
    "background_story": "Marie was known for her complaisant nature, always putting the needs of others before her own. She had a unique ability to understand and accommodate the desires of those around her, often going out of her way to ensure everyone's comfort and happiness. At work, Marie was the office peacemaker, mediating conflicts and smoothing over rough patches with her calm demeanor. In her personal life, she was the friend who always said yes, whether it was lending a listening ear, helping with errands, or simply being present. While her complaisance sometimes led to her shouldering too much responsibility, Marie's selflessness earned her a wealth of friendships and a reputation as the most considerate person in her social circle.",
    "predicates": [
        {
            "id": 0,
            "name": "earn_trust"
        },
        {
            "id": 1,
            "name": "has_charm"
        },
        {
            "id": 2,
            "name": "mediate_conflicts"
        },
        {
            "id": 3,
            "name": "gain_loyalty"
        },
        {
            "id": 4,
            "name": "builds_community"
        },
        {
            "id": 5,
            "name": "offer_guidance"
        },
        {
            "id": 6,
            "name": "foster_harmony"
        },
        {
            "id": 7,
            "name": "listens_active"
        },
        {
            "id": 8,
            "name": "shows_kindness"
        },
        {
            "id": 9,
            "name": "selfless"
        },
        {
            "id": 10,
            "name": "considerate"
        },
        {
            "id": 11,
            "name": "respected"
        },
        {
            "id": 12,
            "name": "is_outgoing"
        },
        {
            "id": 13,
            "name": "empathize_others"
        },
        {
            "id": 14,
            "name": "make_friends"
        },
        {
            "id": 15,
            "name": "lend_help"
        },
        {
            "id": 16,
            "name": "has_empathy"
        },
        {
            "id": 17,
            "name": "is_supportive"
        },
        {
            "id": 18,
            "name": "puts_others_first"
        },
        {
            "id": 19,
            "name": "has_integrity"
        },
        {
            "id": 20,
            "name": "values_others"
        },
        {
            "id": 21,
            "name": "acts_thoughtfully"
        },
        {
            "id": 22,
            "name": "is_adventurous"
        },
        {
            "id": 23,
            "name": "understand_people"
        },
        {
            "id": 24,
            "name": "care_deeply"
        },
        {
            "id": 25,
            "name": "is_sociable"
        },
        {
            "id": 26,
            "name": "is_altruistic"
        },
        {
            "id": 27,
            "name": "aid_needs"
        },
        {
            "id": 28,
            "name": "gives_advice"
        },
        {
            "id": 29,
            "name": "provides_comfort"
        },
        {
            "id": 30,
            "name": "cares_people"
        }
    ],
    "subject_name": "Marie",
    "subject_category": "human",
    "keyword": "complaisance",
    "all_facts": [
        {
            "id": 0,
            "subject": "Marie",
            "text": "Marie can earn trust.",
            "fol": "p_0(Marie)",
            "str_fol": "earn_trust(Marie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Marie",
            "text": "Marie does not have charm.",
            "fol": "\u00acp_1(Marie)",
            "str_fol": "\u00achas_charm(Marie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Marie",
            "text": "Marie mediates conflicts.",
            "fol": "p_2(Marie)",
            "str_fol": "mediate_conflicts(Marie)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Marie",
            "text": "Marie gains loyalty.",
            "fol": "p_3(Marie)",
            "str_fol": "gain_loyalty(Marie)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Marie",
            "text": "Marie does not build a community.",
            "fol": "\u00acp_4(Marie)",
            "str_fol": "\u00acbuilds_community(Marie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Marie",
            "text": "Marie offers guidance.",
            "fol": "p_5(Marie)",
            "str_fol": "offer_guidance(Marie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Marie",
            "text": "Marie does not foster harmony.",
            "fol": "\u00acp_6(Marie)",
            "str_fol": "\u00acfoster_harmony(Marie)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Marie",
            "text": "Marie does not listen actively.",
            "fol": "\u00acp_7(Marie)",
            "str_fol": "\u00aclistens_active(Marie)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Marie",
            "text": "Marie shows kindness.",
            "fol": "p_8(Marie)",
            "str_fol": "shows_kindness(Marie)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Marie",
            "text": "Marie has empathy.",
            "fol": "p_16(Marie)",
            "str_fol": "has_empathy(Marie)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Marie",
            "text": "Marie is supportive.",
            "fol": "p_17(Marie)",
            "str_fol": "is_supportive(Marie)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Marie",
            "text": "Marie does not lend help.",
            "fol": "\u00acp_15(Marie)",
            "str_fol": "\u00aclend_help(Marie)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Marie",
            "text": "Marie cannot make friends.",
            "fol": "\u00acp_14(Marie)",
            "str_fol": "\u00acmake_friends(Marie)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Marie",
            "text": "Marie is not outgoing.",
            "fol": "\u00acp_12(Marie)",
            "str_fol": "\u00acis_outgoing(Marie)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Marie",
            "text": "Marie is respected.",
            "fol": "p_11(Marie)",
            "str_fol": "respected(Marie)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Marie",
            "text": "Marie is not selfless.",
            "fol": "\u00acp_9(Marie)",
            "str_fol": "\u00acselfless(Marie)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Marie",
            "text": "Marie does not listen actively.",
            "fol": "\u00acp_7(Marie)",
            "str_fol": "\u00aclistens_active(Marie)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Marie",
            "text": "Marie shows kindness.",
            "fol": "p_8(Marie)",
            "str_fol": "shows_kindness(Marie)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Marie",
            "text": "Marie mediates conflicts.",
            "fol": "p_2(Marie)",
            "str_fol": "mediate_conflicts(Marie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Marie",
            "text": "Marie does not foster harmony.",
            "fol": "\u00acp_6(Marie)",
            "str_fol": "\u00acfoster_harmony(Marie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Marie",
            "text": "Marie offers guidance.",
            "fol": "p_5(Marie)",
            "str_fol": "offer_guidance(Marie)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Marie",
            "text": "Marie does not build a community.",
            "fol": "\u00acp_4(Marie)",
            "str_fol": "\u00acbuilds_community(Marie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Marie",
            "text": "Marie gains loyalty.",
            "fol": "p_3(Marie)",
            "str_fol": "gain_loyalty(Marie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Marie",
            "text": "Marie does not have charm.",
            "fol": "\u00acp_1(Marie)",
            "str_fol": "\u00achas_charm(Marie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Marie",
            "text": "Marie can earn trust.",
            "fol": "p_0(Marie)",
            "str_fol": "earn_trust(Marie)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Marie either listens actively or shows kindness (but not both), then she has empathy.",
            "fol": "(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)",
            "str_fol": "(listens_active(Marie) \u2295 shows_kindness(Marie)) \u2192 has_empathy(Marie)"
        },
        {
            "id": 7,
            "text": "For all humans, if someone either mediates conflicts or is supportive, then they foster harmony.",
            "fol": "\u2200x ((p_2(x) \u2295 p_17(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((mediate_conflicts(x) \u2295 is_supportive(x)) \u2192 foster_harmony(x))"
        },
        {
            "id": 6,
            "text": "If Marie is supportive, then she either lends help or offers guidance, but not both.",
            "fol": "p_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))",
            "str_fol": "is_supportive(Marie) \u2192 (lend_help(Marie) \u2295 offer_guidance(Marie))"
        },
        {
            "id": 5,
            "text": "If someone has empathy and makes friends, then they can build a community.",
            "fol": "\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_empathy(x) \u2227 make_friends(x)) \u2192 builds_community(x))"
        },
        {
            "id": 4,
            "text": "If Marie either lends help or empathizes with others (but not both), then she gains loyalty.",
            "fol": "(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)",
            "str_fol": "(lend_help(Marie) \u2295 empathize_others(Marie)) \u2192 gain_loyalty(Marie)"
        },
        {
            "id": 3,
            "text": "Anyone who has charm or is outgoing can make friends.",
            "fol": "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((has_charm(x) \u2228 is_outgoing(x)) \u2192 make_friends(x))"
        },
        {
            "id": 2,
            "text": "Anyone who empathizes with others or is considerate can earn trust.",
            "fol": "\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((empathize_others(x) \u2228 considerate(x)) \u2192 earn_trust(x))"
        },
        {
            "id": 1,
            "text": "Marie is either respected or outgoing, but not necessarily both.",
            "fol": "p_11(Marie) \u2295 p_12(Marie)",
            "str_fol": "respected(Marie) \u2295 is_outgoing(Marie)"
        },
        {
            "id": 0,
            "text": "If Marie is either selfless or considerate (but not both), then she is respected.",
            "fol": "(p_9(Marie) \u2295 p_10(Marie)) \u2192 p_11(Marie)",
            "str_fol": "(selfless(Marie) \u2295 considerate(Marie)) \u2192 respected(Marie)"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Marie",
            "text": "Marie does not listen actively.",
            "fol": "\u00acp_7(Marie)",
            "str_fol": "\u00aclistens_active(Marie)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Marie",
            "text": "Marie shows kindness.",
            "fol": "p_8(Marie)",
            "str_fol": "shows_kindness(Marie)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Marie",
            "text": "Marie mediates conflicts.",
            "fol": "p_2(Marie)",
            "str_fol": "mediate_conflicts(Marie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Marie",
            "text": "Marie does not foster harmony.",
            "fol": "\u00acp_6(Marie)",
            "str_fol": "\u00acfoster_harmony(Marie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Marie",
            "text": "Marie offers guidance.",
            "fol": "p_5(Marie)",
            "str_fol": "offer_guidance(Marie)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Marie",
            "text": "Marie does not build a community.",
            "fol": "\u00acp_4(Marie)",
            "str_fol": "\u00acbuilds_community(Marie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Marie",
            "text": "Marie gains loyalty.",
            "fol": "p_3(Marie)",
            "str_fol": "gain_loyalty(Marie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Marie",
            "text": "Marie does not have charm.",
            "fol": "\u00acp_1(Marie)",
            "str_fol": "\u00achas_charm(Marie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Marie",
            "text": "Marie can earn trust.",
            "fol": "p_0(Marie)",
            "str_fol": "earn_trust(Marie)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Marie either listens actively or shows kindness (but not both), then she has empathy.",
            "fol": "(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)",
            "str_fol": "(listens_active(Marie) \u2295 shows_kindness(Marie)) \u2192 has_empathy(Marie)"
        },
        {
            "id": 7,
            "text": "For all humans, if someone either mediates conflicts or is supportive, then they foster harmony.",
            "fol": "\u2200x ((p_2(x) \u2295 p_17(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((mediate_conflicts(x) \u2295 is_supportive(x)) \u2192 foster_harmony(x))"
        },
        {
            "id": 6,
            "text": "If Marie is supportive, then she either lends help or offers guidance, but not both.",
            "fol": "p_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))",
            "str_fol": "is_supportive(Marie) \u2192 (lend_help(Marie) \u2295 offer_guidance(Marie))"
        },
        {
            "id": 5,
            "text": "If someone has empathy and makes friends, then they can build a community.",
            "fol": "\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_empathy(x) \u2227 make_friends(x)) \u2192 builds_community(x))"
        },
        {
            "id": 4,
            "text": "If Marie either lends help or empathizes with others (but not both), then she gains loyalty.",
            "fol": "(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)",
            "str_fol": "(lend_help(Marie) \u2295 empathize_others(Marie)) \u2192 gain_loyalty(Marie)"
        },
        {
            "id": 3,
            "text": "Anyone who has charm or is outgoing can make friends.",
            "fol": "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((has_charm(x) \u2228 is_outgoing(x)) \u2192 make_friends(x))"
        },
        {
            "id": 2,
            "text": "Anyone who empathizes with others or is considerate can earn trust.",
            "fol": "\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((empathize_others(x) \u2228 considerate(x)) \u2192 earn_trust(x))"
        },
        {
            "id": 1,
            "text": "Marie is either respected or outgoing, but not necessarily both.",
            "fol": "p_11(Marie) \u2295 p_12(Marie)",
            "str_fol": "respected(Marie) \u2295 is_outgoing(Marie)"
        },
        {
            "id": 0,
            "text": "If Marie is either selfless or considerate (but not both), then she is respected.",
            "fol": "(p_9(Marie) \u2295 p_10(Marie)) \u2192 p_11(Marie)",
            "str_fol": "(selfless(Marie) \u2295 considerate(Marie)) \u2192 respected(Marie)"
        }
    ],
    "context_fol": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)\n\u2200x ((p_2(x) \u2295 p_17(x)) \u2192 p_6(x))\np_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))\n\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))\np_11(Marie) \u2295 p_12(Marie)\n(p_9(Marie) \u2295 p_10(Marie)) \u2192 p_11(Marie)",
    "conclusion": {
        "id": 15,
        "subject": "Marie",
        "text": "Marie is not selfless.",
        "fol": "\u00acp_9(Marie)",
        "str_fol": "\u00acselfless(Marie)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_9(Marie)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Marie",
                    "text": "Marie does not listen actively.",
                    "fol": "\u00acp_7(Marie)",
                    "str_fol": "\u00aclistens_active(Marie)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Marie",
                    "text": "Marie shows kindness.",
                    "fol": "p_8(Marie)",
                    "str_fol": "shows_kindness(Marie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Marie either listens actively or shows kindness (but not both), then she has empathy.",
                    "fol": "(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)",
                    "str_fol": "(listens_active(Marie) \u2295 shows_kindness(Marie)) \u2192 has_empathy(Marie)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Marie",
                "text": "Marie has empathy.",
                "fol": "p_16(Marie)",
                "str_fol": "has_empathy(Marie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Marie",
                    "text": "Marie mediates conflicts.",
                    "fol": "p_2(Marie)",
                    "str_fol": "mediate_conflicts(Marie)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Marie",
                    "text": "Marie does not foster harmony.",
                    "fol": "\u00acp_6(Marie)",
                    "str_fol": "\u00acfoster_harmony(Marie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "For all humans, if someone either mediates conflicts or is supportive, then they foster harmony.",
                    "fol": "\u2200x ((p_2(x) \u2295 p_17(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((mediate_conflicts(x) \u2295 is_supportive(x)) \u2192 foster_harmony(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Marie",
                "text": "Marie is supportive.",
                "fol": "p_17(Marie)",
                "str_fol": "is_supportive(Marie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Marie",
                    "text": "Marie is supportive.",
                    "fol": "p_17(Marie)",
                    "str_fol": "is_supportive(Marie)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Marie",
                    "text": "Marie offers guidance.",
                    "fol": "p_5(Marie)",
                    "str_fol": "offer_guidance(Marie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Marie is supportive, then she either lends help or offers guidance, but not both.",
                    "fol": "p_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))",
                    "str_fol": "is_supportive(Marie) \u2192 (lend_help(Marie) \u2295 offer_guidance(Marie))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Marie",
                "text": "Marie does not lend help.",
                "fol": "\u00acp_15(Marie)",
                "str_fol": "\u00aclend_help(Marie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Marie",
                    "text": "Marie has empathy.",
                    "fol": "p_16(Marie)",
                    "str_fol": "has_empathy(Marie)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Marie",
                    "text": "Marie does not build a community.",
                    "fol": "\u00acp_4(Marie)",
                    "str_fol": "\u00acbuilds_community(Marie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone has empathy and makes friends, then they can build a community.",
                    "fol": "\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))",
                    "str_fol": "\u2200x ((has_empathy(x) \u2227 make_friends(x)) \u2192 builds_community(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Marie",
                "text": "Marie cannot make friends.",
                "fol": "\u00acp_14(Marie)",
                "str_fol": "\u00acmake_friends(Marie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Marie",
                    "text": "Marie does not lend help.",
                    "fol": "\u00acp_15(Marie)",
                    "str_fol": "\u00aclend_help(Marie)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Marie",
                    "text": "Marie gains loyalty.",
                    "fol": "p_3(Marie)",
                    "str_fol": "gain_loyalty(Marie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Marie either lends help or empathizes with others (but not both), then she gains loyalty.",
                    "fol": "(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)",
                    "str_fol": "(lend_help(Marie) \u2295 empathize_others(Marie)) \u2192 gain_loyalty(Marie)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Marie",
                    "text": "Marie does not have charm.",
                    "fol": "\u00acp_1(Marie)",
                    "str_fol": "\u00achas_charm(Marie)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Marie",
                    "text": "Marie cannot make friends.",
                    "fol": "\u00acp_14(Marie)",
                    "str_fol": "\u00acmake_friends(Marie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who has charm or is outgoing can make friends.",
                    "fol": "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((has_charm(x) \u2228 is_outgoing(x)) \u2192 make_friends(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Marie",
                "text": "Marie is not outgoing.",
                "fol": "\u00acp_12(Marie)",
                "str_fol": "\u00acis_outgoing(Marie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Marie",
                    "text": "Marie can earn trust.",
                    "fol": "p_0(Marie)",
                    "str_fol": "earn_trust(Marie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who empathizes with others or is considerate can earn trust.",
                    "fol": "\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((empathize_others(x) \u2228 considerate(x)) \u2192 earn_trust(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Marie",
                    "text": "Marie is not outgoing.",
                    "fol": "\u00acp_12(Marie)",
                    "str_fol": "\u00acis_outgoing(Marie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Marie is either respected or outgoing, but not necessarily both.",
                    "fol": "p_11(Marie) \u2295 p_12(Marie)",
                    "str_fol": "respected(Marie) \u2295 is_outgoing(Marie)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Marie",
                "text": "Marie is respected.",
                "fol": "p_11(Marie)",
                "str_fol": "respected(Marie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Marie",
                    "text": "Marie is respected.",
                    "fol": "p_11(Marie)",
                    "str_fol": "respected(Marie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Marie is either selfless or considerate (but not both), then she is respected.",
                    "fol": "(p_9(Marie) \u2295 p_10(Marie)) \u2192 p_11(Marie)",
                    "str_fol": "(selfless(Marie) \u2295 considerate(Marie)) \u2192 respected(Marie)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)\n\u2200x ((p_2(x) \u2295 p_17(x)) \u2192 p_6(x))\np_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))\n\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))\np_11(Marie) \u2295 p_12(Marie)\n(p_9(Marie) \u2295 p_10(Marie)) \u2192 p_11(Marie)",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Marie)",
                    "p_8(Marie)",
                    "p_2(Marie)",
                    "-p_6(Marie)",
                    "p_5(Marie)",
                    "-p_4(Marie)",
                    "p_3(Marie)",
                    "-p_1(Marie)",
                    "p_0(Marie)",
                    "(-(p_7(Marie) <-> p_8(Marie))) -> p_16(Marie)",
                    "all x ((-(p_2(x) <-> p_17(x))) -> p_6(x))",
                    "(p_17(Marie)) -> (-(p_15(Marie) <-> p_5(Marie)))",
                    "all x ((p_16(x) & p_14(x)) -> p_4(x))",
                    "(-(p_15(Marie) <-> p_13(Marie))) -> p_3(Marie)",
                    "all x ((p_1(x) | p_12(x)) -> p_14(x))",
                    "all x ((p_13(x) | p_10(x)) -> p_0(x))",
                    "-(p_11(Marie) <-> p_12(Marie))",
                    "(-(p_9(Marie) <-> p_10(Marie))) -> p_11(Marie)",
                    "p_11(Marie) -> -p_9(Marie)"
                ],
                "formulas(goals)": [
                    "-p_9(Marie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Marie) \u2192 \u00acp_9(Marie)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)\n\u2200x ((p_2(x) \u2295 p_17(x)) \u2192 p_6(x))\np_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))\n\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))\np_11(Marie) \u2295 p_12(Marie)\np_5(Marie) \u2192 p_9(Marie)",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Marie)",
                    "p_8(Marie)",
                    "p_2(Marie)",
                    "-p_6(Marie)",
                    "p_5(Marie)",
                    "-p_4(Marie)",
                    "p_3(Marie)",
                    "-p_1(Marie)",
                    "p_0(Marie)",
                    "(-(p_7(Marie) <-> p_8(Marie))) -> p_16(Marie)",
                    "(all x ((-(p_2(x) <-> p_17(x))) -> p_6(x)))",
                    "p_17(Marie) -> (-(p_15(Marie) <-> p_5(Marie)))",
                    "(all x ((p_16(x) & p_14(x)) -> p_4(x)))",
                    "(-(p_15(Marie) <-> p_13(Marie))) -> p_3(Marie)",
                    "(all x ((p_1(x) | p_12(x)) -> p_14(x)))",
                    "(all x ((p_13(x) | p_10(x)) -> p_0(x)))",
                    "-(p_11(Marie) <-> p_12(Marie))",
                    "p_5(Marie) -> p_9(Marie)"
                ],
                "formulas(goals)": [
                    "p_9(Marie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_9(Marie) \u2295 p_10(Marie)) \u2192 p_11(Marie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Marie) \u2192 p_9(Marie)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)\n\u2200x (((p_2(x) \u2228 p_17(x)) \u2227 \u00ac(p_2(x) \u2227 p_17(x))) \u2192 p_6(x))\np_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))\n\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))\np_11(Marie) \u2295 p_12(Marie)\np_5(Marie) \u2192 p_9(Marie)\np_9(Marie)\np_9(Marie) \u2228 \u00acp_9(Marie)",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Marie)",
                    "p_8(Marie)",
                    "p_2(Marie)",
                    "-p_6(Marie)",
                    "p_5(Marie)",
                    "-p_4(Marie)",
                    "p_3(Marie)",
                    "-p_1(Marie)",
                    "p_0(Marie)",
                    "(-(p_7(Marie) <-> p_8(Marie))) -> p_16(Marie)",
                    "all x (((p_2(x) | p_17(x)) & -(p_2(x) & p_17(x))) -> p_6(x))",
                    "p_17(Marie) -> (-(p_15(Marie) <-> p_5(Marie)))",
                    "all x ((p_16(x) & p_14(x)) -> p_4(x))",
                    "(-(p_15(Marie) <-> p_13(Marie))) -> p_3(Marie)",
                    "all x ((p_1(x) | p_12(x)) -> p_14(x))",
                    "all x ((p_13(x) | p_10(x)) -> p_0(x))",
                    "-(p_11(Marie) <-> p_12(Marie))",
                    "p_5(Marie) -> p_9(Marie)",
                    "p_9(Marie)",
                    "p_9(Marie) | -p_9(Marie)"
                ],
                "formulas(goals)": [
                    "p_9(Marie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Marie)",
                    "p_9(Marie) \u2228 \u00acp_9(Marie)"
                ],
                "added_rules": [
                    "\u2200x (((p_2(x) \u2228 p_17(x)) \u2227 \u00ac(p_2(x) \u2227 p_17(x))) \u2192 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n((p_7(Marie) \u2228 p_8(Marie)) \u2227 \u00ac(p_7(Marie) \u2227 p_8(Marie))) \u2192 p_16(Marie)\n\u2200x (((p_2(x) \u2228 p_17(x)) \u2227 \u00ac(p_2(x) \u2227 p_17(x))) \u2192 p_6(x))\np_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))\n\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))\np_11(Marie) \u2295 p_12(Marie)\np_5(Marie) \u2192 p_9(Marie)\np_9(Marie)\np_9(Marie) \u2228 \u00acp_9(Marie)\n\u00acp_9(Marie) \u2192 \u00acp_5(Marie)",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Marie)",
                    "p_8(Marie)",
                    "p_2(Marie)",
                    "-p_6(Marie)",
                    "p_5(Marie)",
                    "-p_4(Marie)",
                    "p_3(Marie)",
                    "-p_1(Marie)",
                    "p_0(Marie)",
                    "((p_7(Marie) | p_8(Marie)) & -(p_7(Marie) & p_8(Marie))) -> p_16(Marie)",
                    "all x (((p_2(x) | p_17(x)) & -(p_2(x) & p_17(x))) -> p_6(x))",
                    "p_17(Marie) -> (-(p_15(Marie) <-> p_5(Marie)))",
                    "all x ((p_16(x) & p_14(x)) -> p_4(x))",
                    "(-(p_15(Marie) <-> p_13(Marie))) -> p_3(Marie)",
                    "all x ((p_1(x) | p_12(x)) -> p_14(x))",
                    "all x ((p_13(x) | p_10(x)) -> p_0(x))",
                    "-(p_11(Marie) <-> p_12(Marie))",
                    "p_5(Marie) -> p_9(Marie)",
                    "p_9(Marie)",
                    "p_9(Marie) | -p_9(Marie)",
                    "-p_9(Marie) -> -p_5(Marie)"
                ],
                "formulas(goals)": [
                    "p_9(Marie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_7(Marie) \u2295 p_8(Marie)) \u2192 p_16(Marie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "((p_7(Marie) \u2228 p_8(Marie)) \u2227 \u00ac(p_7(Marie) \u2227 p_8(Marie))) \u2192 p_16(Marie)",
                    "\u00acp_9(Marie) \u2192 \u00acp_5(Marie)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n((p_7(Marie) \u2228 p_8(Marie)) \u2227 \u00ac(p_7(Marie) \u2227 p_8(Marie))) \u2192 p_16(Marie)\n\u2200x (((p_2(x) \u2228 p_17(x)) \u2227 \u00ac(p_2(x) \u2227 p_17(x))) \u2192 p_6(x))\np_17(Marie) \u2192 (p_15(Marie) \u2295 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n(p_15(Marie) \u2295 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((p_1(x) \u2192 p_14(x)) \u2227 (p_12(x) \u2192 p_14(x)))\n\u2200x ((p_13(x) \u2228 p_10(x)) \u2192 p_0(x))\np_11(Marie) \u2295 p_12(Marie)\np_5(Marie) \u2192 p_9(Marie)\np_9(Marie)\np_9(Marie) \u2228 \u00acp_9(Marie)\n\u00acp_9(Marie) \u2192 \u00acp_5(Marie)\np_9(Marie) \u2192 p_9(Marie)\np_9(Marie) \u2228 p_9(Marie)",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Marie)",
                    "p_8(Marie)",
                    "p_2(Marie)",
                    "-p_6(Marie)",
                    "p_5(Marie)",
                    "-p_4(Marie)",
                    "p_3(Marie)",
                    "-p_1(Marie)",
                    "p_0(Marie)",
                    "((p_7(Marie) | p_8(Marie)) & -(p_7(Marie) & p_8(Marie))) -> p_16(Marie)",
                    "all x (((p_2(x) | p_17(x)) & -(p_2(x) & p_17(x))) -> p_6(x))",
                    "p_17(Marie) -> (-(p_15(Marie) <-> p_5(Marie)))",
                    "all x ((p_16(x) & p_14(x)) -> p_4(x))",
                    "(-(p_15(Marie) <-> p_13(Marie))) -> p_3(Marie)",
                    "all x ((p_1(x) -> p_14(x)) & (p_12(x) -> p_14(x)))",
                    "all x ((p_13(x) | p_10(x)) -> p_0(x))",
                    "-(p_11(Marie) <-> p_12(Marie))",
                    "p_5(Marie) -> p_9(Marie)",
                    "p_9(Marie)",
                    "p_9(Marie) | -p_9(Marie)",
                    "-p_9(Marie) -> -p_5(Marie)",
                    "p_9(Marie) -> p_9(Marie)",
                    "p_9(Marie) | p_9(Marie)"
                ],
                "formulas(goals)": [
                    "p_9(Marie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_1(x) \u2228 p_12(x)) \u2192 p_14(x))"
                ],
                "added_facts": [
                    "p_9(Marie) \u2228 p_9(Marie)",
                    "p_9(Marie) \u2192 p_9(Marie)"
                ],
                "added_rules": [
                    "\u2200x ((p_1(x) \u2192 p_14(x)) \u2227 (p_12(x) \u2192 p_14(x)))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Marie)\np_8(Marie)\np_2(Marie)\n\u00acp_6(Marie)\np_5(Marie)\n\u00acp_4(Marie)\np_3(Marie)\n\u00acp_1(Marie)\np_0(Marie)\n((p_7(Marie) \u2228 p_8(Marie)) \u2227 \u00ac(p_7(Marie) \u2227 p_8(Marie))) \u2192 p_16(Marie)\n\u2200x (((p_2(x) \u2228 p_17(x)) \u2227 \u00ac(p_2(x) \u2227 p_17(x))) \u2192 p_6(x))\np_17(Marie) \u2192 \u00ac(p_15(Marie) \u2194 p_5(Marie))\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 p_4(x))\n\u00ac(p_15(Marie) \u2194 p_13(Marie)) \u2192 p_3(Marie)\n\u2200x ((\u00acp_1(x) \u2228 p_14(x)) \u2227 (\u00acp_12(x) \u2228 p_14(x)))\n\u00ac(p_11(Marie) \u2194 p_12(Marie))\np_5(Marie) \u2192 p_9(Marie)\np_9(Marie)\np_9(Marie) \u2228 \u00acp_9(Marie)\n\u00acp_9(Marie) \u2192 \u00acp_5(Marie)\np_9(Marie) \u2192 p_9(Marie)\np_9(Marie) \u2228 p_9(Marie)\np_17(Marie)\n\u00acp_15(Marie)",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Marie)",
                    "p_8(Marie)",
                    "p_2(Marie)",
                    "-p_6(Marie)",
                    "p_5(Marie)",
                    "-p_4(Marie)",
                    "p_3(Marie)",
                    "-p_1(Marie)",
                    "p_0(Marie)",
                    "((p_7(Marie) | p_8(Marie)) & -(p_7(Marie) & p_8(Marie))) -> p_16(Marie)",
                    "all x (((p_2(x) | p_17(x)) & -(p_2(x) & p_17(x))) -> p_6(x))",
                    "p_17(Marie) -> -(p_15(Marie) <-> p_5(Marie))",
                    "all x ((p_16(x) & p_14(x)) -> p_4(x))",
                    "-(p_15(Marie) <-> p_13(Marie)) -> p_3(Marie)",
                    "all x ((-p_1(x) | p_14(x)) & (-p_12(x) | p_14(x)))",
                    "-(p_11(Marie) <-> p_12(Marie))",
                    "p_5(Marie) -> p_9(Marie)",
                    "p_9(Marie)",
                    "p_9(Marie) | -p_9(Marie)",
                    "-p_9(Marie) -> -p_5(Marie)",
                    "p_9(Marie) -> p_9(Marie)",
                    "p_9(Marie) | p_9(Marie)",
                    "p_17(Marie)",
                    "-p_15(Marie)"
                ],
                "formulas(goals)": [
                    "p_9(Marie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_17(Marie)",
                    "\u00acp_15(Marie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Marie).\np_8(Marie).\np_2(Marie).\n\u00acp_6(Marie).\np_5(Marie).\n\u00acp_4(Marie).\np_3(Marie).\n\u00acp_1(Marie).\np_0(Marie).\n((p_7(Marie) \u2228 p_8(Marie)) \u2227 \u00ac(p_7(Marie) \u2227 p_8(Marie))) \u2192 p_16(Marie).\n\u2200x (((p_2(x) \u2228 p_17(x)) \u2227 \u00ac(p_2(x) \u2227 p_17(x))) \u2192 p_6(x)).\np_17(Marie) \u2192 \u00ac(p_15(Marie) \u2194 p_5(Marie)).\n\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 (p_4(x) \u2228 p_9(Marie))).\n\u00ac(p_15(Marie) \u2194 p_13(Marie)) \u2192 p_3(Marie).\n\u2200x ((\u00acp_1(x) \u2228 p_14(x)) \u2227 (\u00acp_12(x) \u2228 p_14(x))).\n\u00ac(p_11(Marie) \u2194 p_12(Marie)).\np_5(Marie) \u2192 p_9(Marie).\np_9(Marie).\np_9(Marie) \u2228 \u00acp_9(Marie).\n\u00acp_9(Marie) \u2192 \u00acp_5(Marie).\np_9(Marie) \u2192 p_9(Marie).\np_9(Marie) \u2228 p_9(Marie).\np_17(Marie).\n\u00acp_15(Marie).\np_14(Marie).\np_9(Marie) \u2227 p_9(Marie).",
            "Initial Goal": "\u00acp_9(Marie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_7(Marie).",
                    "p_8(Marie).",
                    "p_2(Marie).",
                    "- p_6(Marie).",
                    "p_5(Marie).",
                    "- p_4(Marie).",
                    "p_3(Marie).",
                    "- p_1(Marie).",
                    "p_0(Marie).",
                    "((p_7(Marie) | p_8(Marie)) & -(p_7(Marie) & p_8(Marie))) -> p_16(Marie).",
                    "all x (((p_2(x) | p_17(x)) & -(p_2(x) & p_17(x))) -> p_6(x)).",
                    "p_17(Marie) -> -(p_15(Marie) <-> p_5(Marie)).",
                    "all x ((p_16(x) & p_14(x)) -> (p_4(x) | p_9(Marie))).",
                    "-(p_15(Marie) <-> p_13(Marie)) -> p_3(Marie).",
                    "all x (( -p_1(x) | p_14(x)) & ( -p_12(x) | p_14(x))).",
                    "-(p_11(Marie) <-> p_12(Marie)).",
                    "p_5(Marie) -> p_9(Marie).",
                    "p_9(Marie).",
                    "p_9(Marie) | -p_9(Marie).",
                    "-p_9(Marie) -> -p_5(Marie).",
                    "p_9(Marie) -> p_9(Marie).",
                    "p_9(Marie) | p_9(Marie).",
                    "p_17(Marie).",
                    "- p_15(Marie).",
                    "p_14(Marie).",
                    "p_9(Marie) & p_9(Marie)."
                ],
                "formulas(goals)": [
                    "- -p_9(Marie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Marie)",
                    "p_9(Marie) \u2227 p_9(Marie)"
                ],
                "added_rules": [
                    "\u2200x ((p_16(x) \u2227 p_14(x)) \u2192 (p_4(x) \u2228 p_9(Marie)))"
                ]
            }
        }
    ]
}