{
    "background_story": "Kolson was a young boy from Bangalore, the vibrant city in the heart of Karnataka. He was deeply rooted in the Kannada culture and took great pride in his heritage. Kolson spent most of his summers learning the intricacies of the Kannada language from his grandfather, who was a renowned poet. He would often accompany his grandfather to the annual Kannada literary festivals, where he would listen in awe to the recitations of classical Kannada poems. As he grew older, Kolson became an accomplished speaker and writer in Kannada, using his skills to translate ancient texts into modern scripts. His love for the language led him to become a teacher, inspiring a new generation of youngsters to appreciate the beauty and richness of Kannada.",
    "predicates": [
        {
            "id": 0,
            "name": "write_poetry"
        },
        {
            "id": 1,
            "name": "enjoy_art"
        },
        {
            "id": 2,
            "name": "honor_ancestors"
        },
        {
            "id": 3,
            "name": "appreciate_heritage"
        },
        {
            "id": 4,
            "name": "teach_others"
        },
        {
            "id": 5,
            "name": "learn_language"
        },
        {
            "id": 6,
            "name": "value_tradition"
        },
        {
            "id": 7,
            "name": "speak_fluently"
        },
        {
            "id": 8,
            "name": "respect_culture"
        },
        {
            "id": 9,
            "name": "preserve_history"
        },
        {
            "id": 10,
            "name": "share_knowledge"
        },
        {
            "id": 11,
            "name": "study_lit"
        },
        {
            "id": 12,
            "name": "read_classics"
        },
        {
            "id": 13,
            "name": "reads_classics"
        },
        {
            "id": 14,
            "name": "compose_prose"
        },
        {
            "id": 15,
            "name": "understands_customs"
        },
        {
            "id": 16,
            "name": "love_ancestors"
        },
        {
            "id": 17,
            "name": "love_reading"
        },
        {
            "id": 18,
            "name": "give_presentations"
        },
        {
            "id": 19,
            "name": "study_ancient_text"
        },
        {
            "id": 20,
            "name": "document_legacy"
        }
    ],
    "subject_name": "Kolson",
    "subject_category": "human",
    "keyword": "kannada",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kolson",
            "text": "Kolson writes poetry.",
            "fol": "p_0(Kolson)",
            "str_fol": "write_poetry(Kolson)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kolson",
            "text": "Kolson does not enjoy art.",
            "fol": "\u00acp_1(Kolson)",
            "str_fol": "\u00acenjoy_art(Kolson)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kolson",
            "text": "Kolson does not honor his ancestors.",
            "fol": "\u00acp_2(Kolson)",
            "str_fol": "\u00achonor_ancestors(Kolson)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kolson",
            "text": "Kolson preserves history.",
            "fol": "p_9(Kolson)",
            "str_fol": "preserve_history(Kolson)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kolson",
            "text": "Kolson appreciates his heritage.",
            "fol": "p_3(Kolson)",
            "str_fol": "appreciate_heritage(Kolson)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kolson",
            "text": "Kolson does not value tradition.",
            "fol": "\u00acp_6(Kolson)",
            "str_fol": "\u00acvalue_tradition(Kolson)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Kolson",
            "text": "Kolson does not teach others.",
            "fol": "\u00acp_4(Kolson)",
            "str_fol": "\u00acteach_others(Kolson)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Kolson",
            "text": "Kolson learns his language.",
            "fol": "p_5(Kolson)",
            "str_fol": "learn_language(Kolson)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Kolson",
            "text": "Kolson does not honor his ancestors.",
            "fol": "\u00acp_2(Kolson)",
            "str_fol": "\u00achonor_ancestors(Kolson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kolson",
            "text": "Kolson does not enjoy art.",
            "fol": "\u00acp_1(Kolson)",
            "str_fol": "\u00acenjoy_art(Kolson)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kolson",
            "text": "Kolson writes poetry.",
            "fol": "p_0(Kolson)",
            "str_fol": "write_poetry(Kolson)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Kolson either preserves history or honors his ancestors, but not necessarily both.",
            "fol": "p_9(Kolson) \u2295 p_2(Kolson)",
            "str_fol": "preserve_history(Kolson) \u2295 honor_ancestors(Kolson)"
        },
        {
            "id": 4,
            "text": "Kolson either appreciates his heritage or enjoys art.",
            "fol": "p_3(Kolson) \u2228 p_1(Kolson)",
            "str_fol": "appreciate_heritage(Kolson) \u2228 enjoy_art(Kolson)"
        },
        {
            "id": 3,
            "text": "Kolson either values tradition or preserves history, but not necessarily both.",
            "fol": "p_6(Kolson) \u2295 p_9(Kolson)",
            "str_fol": "value_tradition(Kolson) \u2295 preserve_history(Kolson)"
        },
        {
            "id": 2,
            "text": "If Kolson values tradition, then he speaks fluently and respects his culture.",
            "fol": "p_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))",
            "str_fol": "value_tradition(Kolson) \u2192 (speak_fluently(Kolson) \u2227 respect_culture(Kolson))"
        },
        {
            "id": 1,
            "text": "Kolson either writes poetry or teaches others, but not both.",
            "fol": "p_0(Kolson) \u2295 p_4(Kolson)",
            "str_fol": "write_poetry(Kolson) \u2295 teach_others(Kolson)"
        },
        {
            "id": 0,
            "text": "If Kolson appreciates his heritage, then he either teaches others or learns a language.",
            "fol": "p_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))",
            "str_fol": "appreciate_heritage(Kolson) \u2192 (teach_others(Kolson) \u2228 learn_language(Kolson))"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Kolson",
            "text": "Kolson does not honor his ancestors.",
            "fol": "\u00acp_2(Kolson)",
            "str_fol": "\u00achonor_ancestors(Kolson)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kolson",
            "text": "Kolson does not enjoy art.",
            "fol": "\u00acp_1(Kolson)",
            "str_fol": "\u00acenjoy_art(Kolson)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kolson",
            "text": "Kolson writes poetry.",
            "fol": "p_0(Kolson)",
            "str_fol": "write_poetry(Kolson)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Kolson either preserves history or honors his ancestors, but not necessarily both.",
            "fol": "p_9(Kolson) \u2295 p_2(Kolson)",
            "str_fol": "preserve_history(Kolson) \u2295 honor_ancestors(Kolson)"
        },
        {
            "id": 4,
            "text": "Kolson either appreciates his heritage or enjoys art.",
            "fol": "p_3(Kolson) \u2228 p_1(Kolson)",
            "str_fol": "appreciate_heritage(Kolson) \u2228 enjoy_art(Kolson)"
        },
        {
            "id": 3,
            "text": "Kolson either values tradition or preserves history, but not necessarily both.",
            "fol": "p_6(Kolson) \u2295 p_9(Kolson)",
            "str_fol": "value_tradition(Kolson) \u2295 preserve_history(Kolson)"
        },
        {
            "id": 2,
            "text": "If Kolson values tradition, then he speaks fluently and respects his culture.",
            "fol": "p_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))",
            "str_fol": "value_tradition(Kolson) \u2192 (speak_fluently(Kolson) \u2227 respect_culture(Kolson))"
        },
        {
            "id": 1,
            "text": "Kolson either writes poetry or teaches others, but not both.",
            "fol": "p_0(Kolson) \u2295 p_4(Kolson)",
            "str_fol": "write_poetry(Kolson) \u2295 teach_others(Kolson)"
        },
        {
            "id": 0,
            "text": "If Kolson appreciates his heritage, then he either teaches others or learns a language.",
            "fol": "p_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))",
            "str_fol": "appreciate_heritage(Kolson) \u2192 (teach_others(Kolson) \u2228 learn_language(Kolson))"
        }
    ],
    "context_fol": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))",
    "conclusion": {
        "id": 12,
        "text": "Kolson respects his culture, learns his language and shares his knowledge.",
        "fol": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
        "str_fol": "respect_culture(Kolson) \u2227 (learn_language(Kolson) \u2227 share_knowledge(Kolson))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kolson",
                    "text": "Kolson does not honor his ancestors.",
                    "fol": "\u00acp_2(Kolson)",
                    "str_fol": "\u00achonor_ancestors(Kolson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Kolson either preserves history or honors his ancestors, but not necessarily both.",
                    "fol": "p_9(Kolson) \u2295 p_2(Kolson)",
                    "str_fol": "preserve_history(Kolson) \u2295 honor_ancestors(Kolson)"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Kolson",
                "text": "Kolson preserves history.",
                "fol": "p_9(Kolson)",
                "str_fol": "preserve_history(Kolson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Kolson",
                    "text": "Kolson does not enjoy art.",
                    "fol": "\u00acp_1(Kolson)",
                    "str_fol": "\u00acenjoy_art(Kolson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Kolson either appreciates his heritage or enjoys art.",
                    "fol": "p_3(Kolson) \u2228 p_1(Kolson)",
                    "str_fol": "appreciate_heritage(Kolson) \u2228 enjoy_art(Kolson)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Kolson",
                "text": "Kolson appreciates his heritage.",
                "fol": "p_3(Kolson)",
                "str_fol": "appreciate_heritage(Kolson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kolson",
                    "text": "Kolson preserves history.",
                    "fol": "p_9(Kolson)",
                    "str_fol": "preserve_history(Kolson)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Kolson either values tradition or preserves history, but not necessarily both.",
                    "fol": "p_6(Kolson) \u2295 p_9(Kolson)",
                    "str_fol": "value_tradition(Kolson) \u2295 preserve_history(Kolson)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kolson",
                "text": "Kolson does not value tradition.",
                "fol": "\u00acp_6(Kolson)",
                "str_fol": "\u00acvalue_tradition(Kolson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Kolson",
                    "text": "Kolson does not value tradition.",
                    "fol": "\u00acp_6(Kolson)",
                    "str_fol": "\u00acvalue_tradition(Kolson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Kolson values tradition, then he speaks fluently and respects his culture.",
                    "fol": "p_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))",
                    "str_fol": "value_tradition(Kolson) \u2192 (speak_fluently(Kolson) \u2227 respect_culture(Kolson))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kolson",
                    "text": "Kolson writes poetry.",
                    "fol": "p_0(Kolson)",
                    "str_fol": "write_poetry(Kolson)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Kolson either writes poetry or teaches others, but not both.",
                    "fol": "p_0(Kolson) \u2295 p_4(Kolson)",
                    "str_fol": "write_poetry(Kolson) \u2295 teach_others(Kolson)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kolson",
                "text": "Kolson does not teach others.",
                "fol": "\u00acp_4(Kolson)",
                "str_fol": "\u00acteach_others(Kolson)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kolson",
                    "text": "Kolson appreciates his heritage.",
                    "fol": "p_3(Kolson)",
                    "str_fol": "appreciate_heritage(Kolson)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Kolson",
                    "text": "Kolson does not teach others.",
                    "fol": "\u00acp_4(Kolson)",
                    "str_fol": "\u00acteach_others(Kolson)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Kolson appreciates his heritage, then he either teaches others or learns a language.",
                    "fol": "p_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))",
                    "str_fol": "appreciate_heritage(Kolson) \u2192 (teach_others(Kolson) \u2228 learn_language(Kolson))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kolson",
                "text": "Kolson learns his language.",
                "fol": "p_5(Kolson)",
                "str_fol": "learn_language(Kolson)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kolson",
                    "text": "Kolson learns his language.",
                    "fol": "p_5(Kolson)",
                    "str_fol": "learn_language(Kolson)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson).",
                    "-p_1(Kolson).",
                    "p_0(Kolson).",
                    "-(p_9(Kolson) <-> p_2(Kolson)).",
                    "p_3(Kolson) | p_1(Kolson).",
                    "-(p_6(Kolson) <-> p_9(Kolson)).",
                    "-p_6(Kolson) | (p_7(Kolson) & p_8(Kolson)).",
                    "-(p_0(Kolson) <-> p_4(Kolson)).",
                    "-p_3(Kolson) | p_4(Kolson) | p_5(Kolson).",
                    "p_8(Kolson).",
                    "p_10(Kolson)."
                ],
                "formulas(goals)": [
                    "p_8(Kolson) & (p_5(Kolson) & p_10(Kolson))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Kolson)",
                    "p_10(Kolson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))\np_9(Kolson) \u2192 p_8(Kolson)\np_5(Kolson) \u2192 p_10(Kolson)",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson)",
                    "-p_1(Kolson)",
                    "p_0(Kolson)",
                    "-(p_9(Kolson) <-> p_2(Kolson))",
                    "p_3(Kolson) | p_1(Kolson)",
                    "-(p_6(Kolson) <-> p_9(Kolson))",
                    "p_6(Kolson) -> (p_7(Kolson) & p_8(Kolson))",
                    "-(p_0(Kolson) <-> p_4(Kolson))",
                    "p_3(Kolson) -> (p_4(Kolson) | p_5(Kolson))",
                    "p_9(Kolson) -> p_8(Kolson)",
                    "p_5(Kolson) -> p_10(Kolson)"
                ],
                "formulas(goals)": [
                    "p_8(Kolson) & (p_5(Kolson) & p_10(Kolson))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_9(Kolson) \u2192 p_8(Kolson)",
                    "p_5(Kolson) \u2192 p_10(Kolson)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))\np_9(Kolson) \u2192 p_8(Kolson)\np_5(Kolson) \u2192 p_10(Kolson)\np_9(Kolson)\np_4(Kolson) \u2228 p_5(Kolson)",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson)",
                    "-p_1(Kolson)",
                    "p_0(Kolson)",
                    "-(p_9(Kolson) <-> p_2(Kolson))",
                    "p_3(Kolson) | p_1(Kolson)",
                    "-(p_6(Kolson) <-> p_9(Kolson))",
                    "p_6(Kolson) -> (p_7(Kolson) & p_8(Kolson))",
                    "-(p_0(Kolson) <-> p_4(Kolson))",
                    "p_3(Kolson) -> (p_4(Kolson) | p_5(Kolson))",
                    "p_9(Kolson) -> p_8(Kolson)",
                    "p_5(Kolson) -> p_10(Kolson)",
                    "p_9(Kolson)",
                    "p_4(Kolson) | p_5(Kolson)"
                ],
                "formulas(goals)": [
                    "p_8(Kolson) & (p_5(Kolson) & p_10(Kolson))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Kolson)",
                    "p_4(Kolson) \u2228 p_5(Kolson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_9(Kolson) \u2192 p_8(Kolson)\np_5(Kolson) \u2192 p_10(Kolson)\np_9(Kolson)\np_4(Kolson) \u2228 \u00acp_5(Kolson)",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson)",
                    "-p_1(Kolson)",
                    "p_0(Kolson)",
                    "-(p_9(Kolson) <-> p_2(Kolson))",
                    "p_3(Kolson) | p_1(Kolson)",
                    "-(p_6(Kolson) <-> p_9(Kolson))",
                    "-p_6(Kolson) | (p_7(Kolson) & p_8(Kolson))",
                    "-(p_0(Kolson) <-> p_4(Kolson))",
                    "-p_9(Kolson) | p_8(Kolson)",
                    "-p_5(Kolson) | p_10(Kolson)",
                    "p_9(Kolson)",
                    "p_4(Kolson) | -p_5(Kolson)"
                ],
                "formulas(goals)": [
                    "-(p_8(Kolson) & (p_5(Kolson) & p_10(Kolson)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Kolson) \u2192 (p_4(Kolson) \u2228 p_5(Kolson))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Kolson) \u2228 \u00acp_5(Kolson)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_9(Kolson) \u2192 p_8(Kolson)\np_5(Kolson) \u2192 p_10(Kolson)\np_9(Kolson)\np_4(Kolson) \u2228 \u00acp_5(Kolson)\np_3(Kolson)\n\u00acp_6(Kolson)\n\u00acp_4(Kolson)\n\u00acp_5(Kolson)\np_8(Kolson)",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson)",
                    "-p_1(Kolson)",
                    "p_0(Kolson)",
                    "-(p_9(Kolson) <-> p_2(Kolson))",
                    "p_3(Kolson) | p_1(Kolson)",
                    "-(p_6(Kolson) <-> p_9(Kolson))",
                    "p_6(Kolson) -> (p_7(Kolson) & p_8(Kolson))",
                    "-(p_0(Kolson) <-> p_4(Kolson))",
                    "p_9(Kolson) -> p_8(Kolson)",
                    "p_5(Kolson) -> p_10(Kolson)",
                    "p_9(Kolson)",
                    "p_4(Kolson) | -p_5(Kolson)",
                    "p_3(Kolson)",
                    "-p_6(Kolson)",
                    "-p_4(Kolson)",
                    "-p_5(Kolson)",
                    "p_8(Kolson)"
                ],
                "formulas(goals)": [
                    "-(p_8(Kolson) & (p_5(Kolson) & p_10(Kolson)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_3(Kolson)",
                    "\u00acp_6(Kolson)",
                    "\u00acp_4(Kolson)",
                    "\u00acp_5(Kolson)",
                    "p_8(Kolson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_9(Kolson) \u2192 p_8(Kolson)\np_5(Kolson) \u2192 p_10(Kolson)\np_9(Kolson)\np_3(Kolson)\n\u00acp_6(Kolson)\n\u00acp_4(Kolson)\np_8(Kolson)\np_5(Kolson)",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson)",
                    "-p_1(Kolson)",
                    "p_0(Kolson)",
                    "-(p_9(Kolson) <-> p_2(Kolson))",
                    "p_3(Kolson) | p_1(Kolson)",
                    "-(p_6(Kolson) <-> p_9(Kolson))",
                    "p_6(Kolson) -> (p_7(Kolson) & p_8(Kolson))",
                    "-(p_0(Kolson) <-> p_4(Kolson))",
                    "p_9(Kolson) -> p_8(Kolson)",
                    "p_5(Kolson) -> p_10(Kolson)",
                    "p_9(Kolson)",
                    "p_3(Kolson)",
                    "-p_6(Kolson)",
                    "-p_4(Kolson)",
                    "p_8(Kolson)",
                    "p_5(Kolson)"
                ],
                "formulas(goals)": [
                    "p_8(Kolson) & (p_5(Kolson) & p_10(Kolson))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_5(Kolson)"
                ],
                "removed_rules": [
                    "p_4(Kolson) \u2228 \u00acp_5(Kolson)"
                ],
                "added_facts": [
                    "p_5(Kolson)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Kolson)\n\u00acp_1(Kolson)\np_0(Kolson)\np_9(Kolson) \u2295 p_2(Kolson)\np_3(Kolson) \u2228 p_1(Kolson)\np_6(Kolson) \u2295 p_9(Kolson)\np_6(Kolson) \u2192 (p_7(Kolson) \u2227 p_8(Kolson))\np_0(Kolson) \u2295 p_4(Kolson)\np_9(Kolson) \u2192 p_8(Kolson)\np_9(Kolson)\np_3(Kolson)\n\u00acp_6(Kolson)\n\u00acp_4(Kolson)\np_8(Kolson)\np_5(Kolson)\n\u00acp_10(Kolson)",
            "Initial Goal": "p_8(Kolson) \u2227 (p_5(Kolson) \u2227 p_10(Kolson))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Kolson).",
                    "-p_1(Kolson).",
                    "p_0(Kolson).",
                    "-(p_9(Kolson) <-> p_2(Kolson)).",
                    "p_3(Kolson) | p_1(Kolson).",
                    "-(p_6(Kolson) <-> p_9(Kolson)).",
                    "p_6(Kolson) -> (p_7(Kolson) & p_8(Kolson)).",
                    "-(p_0(Kolson) <-> p_4(Kolson)).",
                    "p_9(Kolson) -> p_8(Kolson).",
                    "p_9(Kolson).",
                    "p_3(Kolson).",
                    "-p_6(Kolson).",
                    "-p_4(Kolson).",
                    "p_8(Kolson).",
                    "p_5(Kolson).",
                    "-p_10(Kolson)."
                ],
                "formulas(goals)": [
                    "-(p_8(Kolson) & (p_5(Kolson) & p_10(Kolson)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Kolson) \u2192 p_10(Kolson)"
                ],
                "added_facts": [
                    "\u00acp_10(Kolson)"
                ],
                "added_rules": []
            }
        }
    ]
}