{
    "background_story": "Parker was a meticulous individual with an obsession for cleanness. As a child, he would spend hours organizing his toys and books, ensuring everything had its perfect place. This trait only intensified as he grew older. Parker became a renowned cleanliness consultant, helping businesses and homes achieve spotless environments. His attention to detail was unparalleled, and his methods were innovative and effective. Parker's own home was a testament to his dedication, with every surface sparkling and every item meticulously arranged. He believed that a clean space led to a clear mind, and his own clarity of thought and focus were a direct result of his strict cleanliness regimen. Parker's passion for cleanness had become not just a habit, but a way of life.",
    "predicates": [
        {
            "id": 0,
            "name": "has_order"
        },
        {
            "id": 1,
            "name": "values_control"
        },
        {
            "id": 2,
            "name": "prioritizes"
        },
        {
            "id": 3,
            "name": "manages_time"
        },
        {
            "id": 4,
            "name": "tidy"
        },
        {
            "id": 5,
            "name": "messy"
        },
        {
            "id": 6,
            "name": "focused"
        },
        {
            "id": 7,
            "name": "organized"
        },
        {
            "id": 8,
            "name": "disciplined"
        },
        {
            "id": 9,
            "name": "is_neat"
        },
        {
            "id": 10,
            "name": "is_cluttered"
        },
        {
            "id": 11,
            "name": "methodical"
        },
        {
            "id": 12,
            "name": "maintains_space"
        },
        {
            "id": 13,
            "name": "clears_mind"
        },
        {
            "id": 14,
            "name": "goal_oriented"
        },
        {
            "id": 15,
            "name": "likesroutine"
        },
        {
            "id": 16,
            "name": "keepspace"
        },
        {
            "id": 17,
            "name": "relaxed"
        },
        {
            "id": 18,
            "name": "creative"
        },
        {
            "id": 19,
            "name": "perfectionist"
        }
    ],
    "subject_name": "Parker",
    "subject_category": "human",
    "keyword": "cleanness",
    "all_facts": [
        {
            "id": 0,
            "subject": "Parker",
            "text": "Parker does not have order.",
            "fol": "\u00acp_0(Parker)",
            "str_fol": "\u00achas_order(Parker)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Parker",
            "text": "Parker does not value control.",
            "fol": "\u00acp_1(Parker)",
            "str_fol": "\u00acvalues_control(Parker)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Parker",
            "text": "Parker does not prioritize tasks.",
            "fol": "\u00acp_2(Parker)",
            "str_fol": "\u00acprioritizes(Parker)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Parker",
            "text": "Parker does not manage his time effectively.",
            "fol": "\u00acp_3(Parker)",
            "str_fol": "\u00acmanages_time(Parker)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Parker",
            "text": "Parker is not disciplined.",
            "fol": "\u00acp_8(Parker)",
            "str_fol": "\u00acdisciplined(Parker)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Parker",
            "text": "Parker is not cluttered.",
            "fol": "\u00acp_10(Parker)",
            "str_fol": "\u00acis_cluttered(Parker)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Parker",
            "text": "Parker is neat.",
            "fol": "p_9(Parker)",
            "str_fol": "is_neat(Parker)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Parker",
            "text": "Parker is not focused.",
            "fol": "\u00acp_6(Parker)",
            "str_fol": "\u00acfocused(Parker)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Parker",
            "text": "Parker is not tidy.",
            "fol": "\u00acp_4(Parker)",
            "str_fol": "\u00actidy(Parker)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Parker",
            "text": "Parker is not messy.",
            "fol": "\u00acp_5(Parker)",
            "str_fol": "\u00acmessy(Parker)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Parker",
            "text": "Parker does not prioritize tasks.",
            "fol": "\u00acp_2(Parker)",
            "str_fol": "\u00acprioritizes(Parker)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Parker",
            "text": "Parker does not manage his time effectively.",
            "fol": "\u00acp_3(Parker)",
            "str_fol": "\u00acmanages_time(Parker)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Parker",
            "text": "Parker does not have order.",
            "fol": "\u00acp_0(Parker)",
            "str_fol": "\u00achas_order(Parker)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Parker",
            "text": "Parker does not value control.",
            "fol": "\u00acp_1(Parker)",
            "str_fol": "\u00acvalues_control(Parker)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If someone is disciplined, then they prioritize tasks and manage their time effectively.",
            "fol": "\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))",
            "str_fol": "\u2200x (disciplined(x) \u2192 (prioritizes(x) \u2227 manages_time(x)))"
        },
        {
            "id": 5,
            "text": "If Parker is either cluttered or has order (but not both), then he values control.",
            "fol": "(p_10(Parker) \u2295 p_0(Parker)) \u2192 p_1(Parker)",
            "str_fol": "(is_cluttered(Parker) \u2295 has_order(Parker)) \u2192 values_control(Parker)"
        },
        {
            "id": 4,
            "text": "Parker is either cluttered or neat, but not both.",
            "fol": "p_10(Parker) \u2295 p_9(Parker)",
            "str_fol": "is_cluttered(Parker) \u2295 is_neat(Parker)"
        },
        {
            "id": 3,
            "text": "Parker is neat or organized.",
            "fol": "p_9(Parker) \u2228 p_7(Parker)",
            "str_fol": "is_neat(Parker) \u2228 organized(Parker)"
        },
        {
            "id": 2,
            "text": "If someone is focused, then they are organized and disciplined.",
            "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (focused(x) \u2192 (organized(x) \u2227 disciplined(x)))"
        },
        {
            "id": 1,
            "text": "If Parker is tidy, then he is focused.",
            "fol": "p_4(Parker) \u2192 p_6(Parker)",
            "str_fol": "tidy(Parker) \u2192 focused(Parker)"
        },
        {
            "id": 0,
            "text": "Parker is either tidy or messy, but not both.",
            "fol": "p_4(Parker) \u2295 p_5(Parker)",
            "str_fol": "tidy(Parker) \u2295 messy(Parker)"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Parker",
            "text": "Parker does not prioritize tasks.",
            "fol": "\u00acp_2(Parker)",
            "str_fol": "\u00acprioritizes(Parker)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Parker",
            "text": "Parker does not manage his time effectively.",
            "fol": "\u00acp_3(Parker)",
            "str_fol": "\u00acmanages_time(Parker)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Parker",
            "text": "Parker does not have order.",
            "fol": "\u00acp_0(Parker)",
            "str_fol": "\u00achas_order(Parker)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Parker",
            "text": "Parker does not value control.",
            "fol": "\u00acp_1(Parker)",
            "str_fol": "\u00acvalues_control(Parker)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If someone is disciplined, then they prioritize tasks and manage their time effectively.",
            "fol": "\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))",
            "str_fol": "\u2200x (disciplined(x) \u2192 (prioritizes(x) \u2227 manages_time(x)))"
        },
        {
            "id": 5,
            "text": "If Parker is either cluttered or has order (but not both), then he values control.",
            "fol": "(p_10(Parker) \u2295 p_0(Parker)) \u2192 p_1(Parker)",
            "str_fol": "(is_cluttered(Parker) \u2295 has_order(Parker)) \u2192 values_control(Parker)"
        },
        {
            "id": 4,
            "text": "Parker is either cluttered or neat, but not both.",
            "fol": "p_10(Parker) \u2295 p_9(Parker)",
            "str_fol": "is_cluttered(Parker) \u2295 is_neat(Parker)"
        },
        {
            "id": 3,
            "text": "Parker is neat or organized.",
            "fol": "p_9(Parker) \u2228 p_7(Parker)",
            "str_fol": "is_neat(Parker) \u2228 organized(Parker)"
        },
        {
            "id": 2,
            "text": "If someone is focused, then they are organized and disciplined.",
            "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (focused(x) \u2192 (organized(x) \u2227 disciplined(x)))"
        },
        {
            "id": 1,
            "text": "If Parker is tidy, then he is focused.",
            "fol": "p_4(Parker) \u2192 p_6(Parker)",
            "str_fol": "tidy(Parker) \u2192 focused(Parker)"
        },
        {
            "id": 0,
            "text": "Parker is either tidy or messy, but not both.",
            "fol": "p_4(Parker) \u2295 p_5(Parker)",
            "str_fol": "tidy(Parker) \u2295 messy(Parker)"
        }
    ],
    "context_fol": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n(p_10(Parker) \u2295 p_0(Parker)) \u2192 p_1(Parker)\np_10(Parker) \u2295 p_9(Parker)\np_9(Parker) \u2228 p_7(Parker)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 p_6(Parker)\np_4(Parker) \u2295 p_5(Parker)",
    "conclusion": {
        "id": 9,
        "subject": "Parker",
        "text": "Parker is not messy.",
        "fol": "\u00acp_5(Parker)",
        "str_fol": "\u00acmessy(Parker)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_5(Parker)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Parker",
                    "text": "Parker does not prioritize tasks.",
                    "fol": "\u00acp_2(Parker)",
                    "str_fol": "\u00acprioritizes(Parker)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Parker",
                    "text": "Parker does not manage his time effectively.",
                    "fol": "\u00acp_3(Parker)",
                    "str_fol": "\u00acmanages_time(Parker)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone is disciplined, then they prioritize tasks and manage their time effectively.",
                    "fol": "\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))",
                    "str_fol": "\u2200x (disciplined(x) \u2192 (prioritizes(x) \u2227 manages_time(x)))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Parker",
                "text": "Parker is not disciplined.",
                "fol": "\u00acp_8(Parker)",
                "str_fol": "\u00acdisciplined(Parker)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Parker",
                    "text": "Parker does not have order.",
                    "fol": "\u00acp_0(Parker)",
                    "str_fol": "\u00achas_order(Parker)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Parker",
                    "text": "Parker does not value control.",
                    "fol": "\u00acp_1(Parker)",
                    "str_fol": "\u00acvalues_control(Parker)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Parker is either cluttered or has order (but not both), then he values control.",
                    "fol": "(p_10(Parker) \u2295 p_0(Parker)) \u2192 p_1(Parker)",
                    "str_fol": "(is_cluttered(Parker) \u2295 has_order(Parker)) \u2192 values_control(Parker)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Parker",
                "text": "Parker is not cluttered.",
                "fol": "\u00acp_10(Parker)",
                "str_fol": "\u00acis_cluttered(Parker)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Parker",
                    "text": "Parker is not cluttered.",
                    "fol": "\u00acp_10(Parker)",
                    "str_fol": "\u00acis_cluttered(Parker)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Parker is either cluttered or neat, but not both.",
                    "fol": "p_10(Parker) \u2295 p_9(Parker)",
                    "str_fol": "is_cluttered(Parker) \u2295 is_neat(Parker)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Parker",
                "text": "Parker is neat.",
                "fol": "p_9(Parker)",
                "str_fol": "is_neat(Parker)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Parker",
                    "text": "Parker is neat.",
                    "fol": "p_9(Parker)",
                    "str_fol": "is_neat(Parker)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Parker is neat or organized.",
                    "fol": "p_9(Parker) \u2228 p_7(Parker)",
                    "str_fol": "is_neat(Parker) \u2228 organized(Parker)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Parker",
                    "text": "Parker is not disciplined.",
                    "fol": "\u00acp_8(Parker)",
                    "str_fol": "\u00acdisciplined(Parker)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone is focused, then they are organized and disciplined.",
                    "fol": "\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))",
                    "str_fol": "\u2200x (focused(x) \u2192 (organized(x) \u2227 disciplined(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Parker",
                "text": "Parker is not focused.",
                "fol": "\u00acp_6(Parker)",
                "str_fol": "\u00acfocused(Parker)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Parker",
                    "text": "Parker is not focused.",
                    "fol": "\u00acp_6(Parker)",
                    "str_fol": "\u00acfocused(Parker)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Parker is tidy, then he is focused.",
                    "fol": "p_4(Parker) \u2192 p_6(Parker)",
                    "str_fol": "tidy(Parker) \u2192 focused(Parker)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Parker",
                "text": "Parker is not tidy.",
                "fol": "\u00acp_4(Parker)",
                "str_fol": "\u00actidy(Parker)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Parker",
                    "text": "Parker is not tidy.",
                    "fol": "\u00acp_4(Parker)",
                    "str_fol": "\u00actidy(Parker)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Parker is either tidy or messy, but not both.",
                    "fol": "p_4(Parker) \u2295 p_5(Parker)",
                    "str_fol": "tidy(Parker) \u2295 messy(Parker)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Parker",
                "text": "Parker is not messy.",
                "fol": "\u00acp_5(Parker)",
                "str_fol": "\u00acmessy(Parker)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_8(x) -> p_2(x) & p_3(x))).  [assumption].\n4 (all x (p_6(x) -> p_7(x) & p_8(x))).  [assumption].\n5 p_4(Parker) -> p_6(Parker).  [assumption].\n6 -(p_4(Parker) <-> p_5(Parker)).  [assumption].\n7 --p_5(Parker).  [goal].\n8 -p_8(x) | p_2(x).  [clausify(1)].\n9 -p_2(Parker).  [assumption].\n20 -p_4(Parker) | p_6(Parker).  [clausify(5)].\n22 -p_6(x) | p_8(x).  [clausify(4)].\n24 p_4(Parker) | p_5(Parker).  [clausify(6)].\n26 -p_4(Parker) | p_8(Parker).  [resolve(20,b,22,a)].\n28 -p_5(Parker).  [deny(7)].\n29 p_8(Parker) | p_5(Parker).  [resolve(26,a,24,a)].\n30 p_8(Parker).  [resolve(29,b,28,a)].\n31 -p_8(Parker).  [resolve(8,b,9,a)].\n32 $F.  [resolve(30,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n(p_10(Parker) \u2295 p_0(Parker)) \u2192 p_1(Parker)\np_10(Parker) \u2295 p_9(Parker)\np_9(Parker) \u2228 p_7(Parker)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 p_6(Parker)\np_4(Parker) \u2295 p_5(Parker)\n\u00acp_8(Parker)\n\u2200x (p_6(x) \u2192 p_8(x))",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker)",
                    "-p_3(Parker)",
                    "-p_0(Parker)",
                    "-p_1(Parker)",
                    "all x (p_8(x) -> (p_2(x) & p_3(x)))",
                    "(-(p_10(Parker) <-> p_0(Parker))) -> p_1(Parker)",
                    "-(p_10(Parker) <-> p_9(Parker))",
                    "p_9(Parker) | p_7(Parker)",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_4(Parker) -> p_6(Parker)",
                    "-(p_4(Parker) <-> p_5(Parker))",
                    "-p_8(Parker)",
                    "all x (p_6(x) -> p_8(x))"
                ],
                "formulas(goals)": [
                    "p_5(Parker)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Parker)"
                ],
                "added_rules": [
                    "\u2200x (p_6(x) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)\np_10(Parker) \u2295 p_9(Parker)\n\u00ac(\u00acp_9(Parker) \u2227 \u00acp_7(Parker))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 p_6(Parker)\np_4(Parker) \u2295 p_5(Parker)\n\u00acp_8(Parker)\n\u2200x (\u00acp_6(x) \u2228 p_8(x))\n\u00acp_4(Parker)",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker)",
                    "-p_3(Parker)",
                    "-p_0(Parker)",
                    "-p_1(Parker)",
                    "all x (p_8(x) -> (p_2(x) & p_3(x)))",
                    "((p_10(Parker) | p_0(Parker)) & -(p_10(Parker) & p_0(Parker))) -> p_1(Parker)",
                    "-(p_10(Parker) <-> p_9(Parker))",
                    "-(-p_9(Parker) & -p_7(Parker))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_4(Parker) -> p_6(Parker)",
                    "-(p_4(Parker) <-> p_5(Parker))",
                    "-p_8(Parker)",
                    "all x (-p_6(x) | p_8(x))",
                    "-p_4(Parker)"
                ],
                "formulas(goals)": [
                    "--p_5(Parker)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2192 p_8(x))"
                ],
                "added_facts": [
                    "\u00acp_4(Parker)"
                ],
                "added_rules": [
                    "((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)",
                    "\u00ac(\u00acp_9(Parker) \u2227 \u00acp_7(Parker))",
                    "\u2200x (\u00acp_6(x) \u2228 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)\np_10(Parker) \u2295 p_9(Parker)\n\u00ac(\u00acp_9(Parker) \u2227 \u00acp_7(Parker))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 p_6(Parker)\n\u00ac(p_4(Parker) \u2295 p_5(Parker))\n\u00acp_8(Parker)\n\u2200x (\u00acp_6(x) \u2228 p_8(x))\n\u00acp_4(Parker)",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker).",
                    "-p_3(Parker).",
                    "-p_0(Parker).",
                    "-p_1(Parker).",
                    "all x (p_8(x) -> (p_2(x) & p_3(x))).",
                    "((p_10(Parker) | p_0(Parker)) & (-(p_10(Parker) & p_0(Parker)))) -> p_1(Parker).",
                    "-(p_10(Parker) <-> p_9(Parker)).",
                    "p_9(Parker) | p_7(Parker).",
                    "all x (p_6(x) -> (p_7(x) & p_8(x))).",
                    "p_4(Parker) -> p_6(Parker).",
                    "p_4(Parker) <-> p_5(Parker).",
                    "-p_8(Parker).",
                    "all x (-p_6(x) | p_8(x)).",
                    "-p_4(Parker)."
                ],
                "formulas(goals)": [
                    "-p_5(Parker)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Parker) \u2295 p_5(Parker)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_4(Parker) \u2295 p_5(Parker))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)\np_10(Parker) \u2295 p_9(Parker)\n\u00ac(\u00acp_9(Parker) \u2227 \u00acp_7(Parker))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 \u00acp_6(Parker)\n\u00ac(p_4(Parker) \u2295 p_5(Parker))\n\u00acp_8(Parker)\n\u2200x (\u00acp_6(x) \u2228 p_8(x))\np_4(Parker)",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker)",
                    "-p_3(Parker)",
                    "-p_0(Parker)",
                    "-p_1(Parker)",
                    "all x (p_8(x) -> (p_2(x) & p_3(x)))",
                    "((p_10(Parker) | p_0(Parker)) & -(p_10(Parker) & p_0(Parker))) -> p_1(Parker)",
                    "-(p_10(Parker) <-> p_9(Parker))",
                    "-(-p_9(Parker) & -p_7(Parker))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_4(Parker) -> -p_6(Parker)",
                    "-(-(p_4(Parker) <-> p_5(Parker)))",
                    "-p_8(Parker)",
                    "all x (-p_6(x) | p_8(x))",
                    "p_4(Parker)"
                ],
                "formulas(goals)": [
                    "-(-p_5(Parker))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_4(Parker)"
                ],
                "removed_rules": [
                    "p_4(Parker) \u2192 p_6(Parker)"
                ],
                "added_facts": [
                    "p_4(Parker)"
                ],
                "added_rules": [
                    "p_4(Parker) \u2192 \u00acp_6(Parker)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)\np_10(Parker) \u2295 p_9(Parker)\n\u00ac(\u00acp_9(Parker) \u2227 \u00acp_7(Parker))\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 \u00acp_6(Parker)\n\u00acp_8(Parker)\n\u2200x (\u00acp_6(x) \u2228 p_8(x))\np_4(Parker)\np_9(Parker) \u2192 \u00acp_5(Parker)",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker)",
                    "-p_3(Parker)",
                    "-p_0(Parker)",
                    "-p_1(Parker)",
                    "all x (p_8(x) -> (p_2(x) & p_3(x)))",
                    "((p_10(Parker) | p_0(Parker)) & -(p_10(Parker) & p_0(Parker))) -> p_1(Parker)",
                    "-(p_10(Parker) <-> p_9(Parker))",
                    "-(-p_9(Parker) & -p_7(Parker))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_4(Parker) -> -p_6(Parker)",
                    "-p_8(Parker)",
                    "all x (-p_6(x) | p_8(x))",
                    "p_4(Parker)",
                    "p_9(Parker) -> -p_5(Parker)"
                ],
                "formulas(goals)": [
                    "-p_5(Parker)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_4(Parker) \u2295 p_5(Parker))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Parker) \u2192 \u00acp_5(Parker)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)\n(p_10(Parker) \u2228 p_9(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_9(Parker))\np_9(Parker) \u2228 p_7(Parker)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 \u00acp_6(Parker)\n\u00acp_8(Parker)\n\u2200x (\u00acp_6(x) \u2228 p_8(x))\np_4(Parker)\np_9(Parker) \u2192 \u00acp_5(Parker)\np_9(Parker)\n\u00acp_10(Parker)\n\u2200x (p_8(x) \u2192 p_2(x))\n\u2200x (p_8(x) \u2192 p_3(x))\n\u00acp_6(Parker)",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker)",
                    "-p_3(Parker)",
                    "-p_0(Parker)",
                    "-p_1(Parker)",
                    "all x (p_8(x) -> (p_2(x) & p_3(x)))",
                    "((p_10(Parker) | p_0(Parker)) & -(p_10(Parker) & p_0(Parker))) -> p_1(Parker)",
                    "(p_10(Parker) | p_9(Parker)) & -(p_10(Parker) & p_9(Parker))",
                    "(p_9(Parker) | p_7(Parker))",
                    "all x (p_6(x) -> (p_7(x) & p_8(x)))",
                    "p_4(Parker) -> -p_6(Parker)",
                    "-p_8(Parker)",
                    "all x (-p_6(x) | p_8(x))",
                    "p_4(Parker)",
                    "p_9(Parker) -> -p_5(Parker)",
                    "p_9(Parker)",
                    "-p_10(Parker)",
                    "all x (p_8(x) -> p_2(x))",
                    "all x (p_8(x) -> p_3(x))",
                    "-p_6(Parker)"
                ],
                "formulas(goals)": [
                    "-p_5(Parker)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_10(Parker) \u2295 p_9(Parker)",
                    "\u00ac(\u00acp_9(Parker) \u2227 \u00acp_7(Parker))"
                ],
                "removed_rules": [],
                "added_facts": [
                    "(p_10(Parker) \u2228 p_9(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_9(Parker))",
                    "p_9(Parker) \u2228 p_7(Parker)",
                    "p_9(Parker)",
                    "\u00acp_10(Parker)",
                    "\u00acp_6(Parker)"
                ],
                "added_rules": [
                    "\u2200x (p_8(x) \u2192 p_2(x))",
                    "\u2200x (p_8(x) \u2192 p_3(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Parker)\n\u00acp_3(Parker)\n\u00acp_0(Parker)\n\u00acp_1(Parker)\n\u2200x (p_8(x) \u2192 (p_2(x) \u2227 p_3(x)))\n((p_10(Parker) \u2228 p_0(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_0(Parker))) \u2192 p_1(Parker)\n(p_10(Parker) \u2228 p_9(Parker)) \u2227 \u00ac(p_10(Parker) \u2227 p_9(Parker))\np_9(Parker) \u2228 p_7(Parker)\n\u2200x (p_6(x) \u2192 (p_7(x) \u2227 p_8(x)))\np_4(Parker) \u2192 \u00acp_6(Parker)\n\u00acp_8(Parker)\n\u2200x (\u00acp_6(x) \u2228 p_8(x))\np_4(Parker)\np_9(Parker) \u2192 p_5(Parker)\np_9(Parker)\n\u00acp_10(Parker)\n\u2200x (p_8(x) \u2192 p_2(x))\n\u2200x (p_8(x) \u2192 p_3(x))\n\u00acp_6(Parker)",
            "Initial Goal": "\u00acp_5(Parker)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Parker).",
                    "-p_3(Parker).",
                    "-p_0(Parker).",
                    "-p_1(Parker).",
                    "all x (p_8(x) -> (p_2(x) & p_3(x))).",
                    "((p_10(Parker) | p_0(Parker)) & -(p_10(Parker) & p_0(Parker))) -> p_1(Parker).",
                    "(p_10(Parker) | p_9(Parker)) & -(p_10(Parker) & p_9(Parker)).",
                    "p_9(Parker) | p_7(Parker).",
                    "all x (p_6(x) -> (p_7(x) & p_8(x))).",
                    "p_4(Parker) -> -p_6(Parker).",
                    "-p_8(Parker).",
                    "all x (-p_6(x) | p_8(x)).",
                    "p_4(Parker).",
                    "p_9(Parker) -> p_5(Parker).",
                    "p_9(Parker).",
                    "-p_10(Parker).",
                    "all x (p_8(x) -> p_2(x)).",
                    "all x (p_8(x) -> p_3(x)).",
                    "-p_6(Parker)."
                ],
                "formulas(goals)": [
                    "-(-p_5(Parker))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Parker) \u2192 \u00acp_5(Parker)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Parker) \u2192 p_5(Parker)"
                ]
            }
        }
    ]
}