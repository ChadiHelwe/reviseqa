{
    "background_story": "Elsie was a quick and nimble squirrel who lived in a bustling forest filled with tall oak trees. Her favorite thing in the world was collecting acorns, which she would meticulously store in various hiding spots around the forest. Elsie took great pride in her acorn collection, often spending hours each day scouring the ground for the perfect specimens. She was particularly fond of the large, plump acorns that fell from the oldest oak tree, which she believed held the most magic. As winter approached, Elsie's stash of acorns would sustain her through the cold months, and she would often share some with her friends and family, earning her the title of most generous squirrel in the forest.",
    "predicates": [
        {
            "id": 0,
            "name": "stores_food"
        },
        {
            "id": 1,
            "name": "stays_nourished"
        },
        {
            "id": 2,
            "name": "explores_forest"
        },
        {
            "id": 3,
            "name": "survives_winter"
        },
        {
            "id": 4,
            "name": "hides_acorns"
        },
        {
            "id": 5,
            "name": "runs_fast"
        },
        {
            "id": 6,
            "name": "eats_well"
        },
        {
            "id": 7,
            "name": "collects_nuts"
        },
        {
            "id": 8,
            "name": "is_social"
        },
        {
            "id": 9,
            "name": "climbs_trees"
        },
        {
            "id": 10,
            "name": "finds_berries"
        },
        {
            "id": 11,
            "name": "digs_burrows"
        },
        {
            "id": 12,
            "name": "gathers_seeds"
        },
        {
            "id": 13,
            "name": "thrives_season"
        },
        {
            "id": 14,
            "name": "lives_community"
        },
        {
            "id": 15,
            "name": "cares_young"
        },
        {
            "id": 16,
            "name": "preparing_winter"
        },
        {
            "id": 17,
            "name": "has_stash"
        },
        {
            "id": 18,
            "name": "active_morning"
        },
        {
            "id": 19,
            "name": "makes_nests"
        },
        {
            "id": 20,
            "name": "hoards_seeds"
        },
        {
            "id": 21,
            "name": "forages_daily"
        },
        {
            "id": 22,
            "name": "scans_ground"
        },
        {
            "id": 23,
            "name": "maintains_stash"
        }
    ],
    "subject_name": "Elsie",
    "subject_category": "squirrel",
    "keyword": "acorn",
    "all_facts": [
        {
            "id": 0,
            "subject": "Elsie",
            "text": "Elsie stores food.",
            "fol": "p_0(Elsie)",
            "str_fol": "stores_food(Elsie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Elsie",
            "text": "Elsie does not stay nourished.",
            "fol": "\u00acp_1(Elsie)",
            "str_fol": "\u00acstays_nourished(Elsie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Elsie",
            "text": "Elsie does not explore the forest.",
            "fol": "\u00acp_2(Elsie)",
            "str_fol": "\u00acexplores_forest(Elsie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Elsie",
            "text": "Elsie does not survive the winter.",
            "fol": "\u00acp_3(Elsie)",
            "str_fol": "\u00acsurvives_winter(Elsie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Elsie",
            "text": "Elsie does not hide acorns.",
            "fol": "\u00acp_4(Elsie)",
            "str_fol": "\u00achides_acorns(Elsie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Elsie",
            "text": "Elsie runs fast.",
            "fol": "p_5(Elsie)",
            "str_fol": "runs_fast(Elsie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Elsie",
            "text": "Elsie does not eat well.",
            "fol": "\u00acp_6(Elsie)",
            "str_fol": "\u00aceats_well(Elsie)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Elsie",
            "text": "Elsie thrives in the season.",
            "fol": "p_13(Elsie)",
            "str_fol": "thrives_season(Elsie)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Elsie",
            "text": "Elsie does not dig burrows.",
            "fol": "\u00acp_11(Elsie)",
            "str_fol": "\u00acdigs_burrows(Elsie)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Elsie",
            "text": "Elsie does not find berries.",
            "fol": "\u00acp_10(Elsie)",
            "str_fol": "\u00acfinds_berries(Elsie)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Elsie",
            "text": "Elsie does not climb trees.",
            "fol": "\u00acp_9(Elsie)",
            "str_fol": "\u00acclimbs_trees(Elsie)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Elsie",
            "text": "Elsie is social.",
            "fol": "p_8(Elsie)",
            "str_fol": "is_social(Elsie)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Elsie",
            "text": "Elsie collects nuts.",
            "fol": "p_7(Elsie)",
            "str_fol": "collects_nuts(Elsie)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Elsie",
            "text": "Elsie runs fast.",
            "fol": "p_5(Elsie)",
            "str_fol": "runs_fast(Elsie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Elsie",
            "text": "Elsie does not eat well.",
            "fol": "\u00acp_6(Elsie)",
            "str_fol": "\u00aceats_well(Elsie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Elsie",
            "text": "Elsie does not hide acorns.",
            "fol": "\u00acp_4(Elsie)",
            "str_fol": "\u00achides_acorns(Elsie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Elsie",
            "text": "Elsie does not survive the winter.",
            "fol": "\u00acp_3(Elsie)",
            "str_fol": "\u00acsurvives_winter(Elsie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Elsie",
            "text": "Elsie does not explore the forest.",
            "fol": "\u00acp_2(Elsie)",
            "str_fol": "\u00acexplores_forest(Elsie)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Elsie",
            "text": "Elsie does not stay nourished.",
            "fol": "\u00acp_1(Elsie)",
            "str_fol": "\u00acstays_nourished(Elsie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Elsie",
            "text": "Elsie stores food.",
            "fol": "p_0(Elsie)",
            "str_fol": "stores_food(Elsie)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Elsie either runs fast or thrives in the season (but not both), then she eats well.",
            "fol": "(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)",
            "str_fol": "(runs_fast(Elsie) \u2295 thrives_season(Elsie)) \u2192 eats_well(Elsie)"
        },
        {
            "id": 5,
            "text": "Any squirrel that gathers seeds or hides acorns can thrive in the season.",
            "fol": "\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((gathers_seeds(x) \u2228 hides_acorns(x)) \u2192 thrives_season(x))"
        },
        {
            "id": 4,
            "text": "Any squirrel that digs burrows or gathers seeds can survive the winter.",
            "fol": "\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((digs_burrows(x) \u2228 gathers_seeds(x)) \u2192 survives_winter(x))"
        },
        {
            "id": 3,
            "text": "Any squirrel that explores the forest or finds berries will stay nourished.",
            "fol": "\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((explores_forest(x) \u2228 finds_berries(x)) \u2192 stays_nourished(x))"
        },
        {
            "id": 2,
            "text": "If Elsie climbs trees, then she either finds berries or digs burrows (but not both).",
            "fol": "p_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))",
            "str_fol": "climbs_trees(Elsie) \u2192 (finds_berries(Elsie) \u2295 digs_burrows(Elsie))"
        },
        {
            "id": 1,
            "text": "Every squirrel that stores food either climbs trees or is social (or both).",
            "fol": "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (stores_food(x) \u2192 (climbs_trees(x) \u2228 is_social(x)))"
        },
        {
            "id": 0,
            "text": "Every squirrel either collects nuts or is social (or both).",
            "fol": "\u2200x (p_7(x) \u2228 p_8(x))",
            "str_fol": "\u2200x (collects_nuts(x) \u2228 is_social(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Elsie",
            "text": "Elsie runs fast.",
            "fol": "p_5(Elsie)",
            "str_fol": "runs_fast(Elsie)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Elsie",
            "text": "Elsie does not eat well.",
            "fol": "\u00acp_6(Elsie)",
            "str_fol": "\u00aceats_well(Elsie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Elsie",
            "text": "Elsie does not hide acorns.",
            "fol": "\u00acp_4(Elsie)",
            "str_fol": "\u00achides_acorns(Elsie)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Elsie",
            "text": "Elsie does not survive the winter.",
            "fol": "\u00acp_3(Elsie)",
            "str_fol": "\u00acsurvives_winter(Elsie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Elsie",
            "text": "Elsie does not explore the forest.",
            "fol": "\u00acp_2(Elsie)",
            "str_fol": "\u00acexplores_forest(Elsie)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Elsie",
            "text": "Elsie does not stay nourished.",
            "fol": "\u00acp_1(Elsie)",
            "str_fol": "\u00acstays_nourished(Elsie)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Elsie",
            "text": "Elsie stores food.",
            "fol": "p_0(Elsie)",
            "str_fol": "stores_food(Elsie)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If Elsie either runs fast or thrives in the season (but not both), then she eats well.",
            "fol": "(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)",
            "str_fol": "(runs_fast(Elsie) \u2295 thrives_season(Elsie)) \u2192 eats_well(Elsie)"
        },
        {
            "id": 5,
            "text": "Any squirrel that gathers seeds or hides acorns can thrive in the season.",
            "fol": "\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((gathers_seeds(x) \u2228 hides_acorns(x)) \u2192 thrives_season(x))"
        },
        {
            "id": 4,
            "text": "Any squirrel that digs burrows or gathers seeds can survive the winter.",
            "fol": "\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((digs_burrows(x) \u2228 gathers_seeds(x)) \u2192 survives_winter(x))"
        },
        {
            "id": 3,
            "text": "Any squirrel that explores the forest or finds berries will stay nourished.",
            "fol": "\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((explores_forest(x) \u2228 finds_berries(x)) \u2192 stays_nourished(x))"
        },
        {
            "id": 2,
            "text": "If Elsie climbs trees, then she either finds berries or digs burrows (but not both).",
            "fol": "p_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))",
            "str_fol": "climbs_trees(Elsie) \u2192 (finds_berries(Elsie) \u2295 digs_burrows(Elsie))"
        },
        {
            "id": 1,
            "text": "Every squirrel that stores food either climbs trees or is social (or both).",
            "fol": "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (stores_food(x) \u2192 (climbs_trees(x) \u2228 is_social(x)))"
        },
        {
            "id": 0,
            "text": "Every squirrel either collects nuts or is social (or both).",
            "fol": "\u2200x (p_7(x) \u2228 p_8(x))",
            "str_fol": "\u2200x (collects_nuts(x) \u2228 is_social(x))"
        }
    ],
    "context_fol": "p_5(Elsie)\n\u00acp_6(Elsie)\n\u00acp_4(Elsie)\n\u00acp_3(Elsie)\n\u00acp_2(Elsie)\n\u00acp_1(Elsie)\np_0(Elsie)\n(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)\n\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))\n\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))\np_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))\n\u2200x (p_7(x) \u2228 p_8(x))",
    "conclusion": {
        "id": 12,
        "subject": "Elsie",
        "text": "Elsie collects nuts.",
        "fol": "p_7(Elsie)",
        "str_fol": "collects_nuts(Elsie)",
        "negation": false
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_7(Elsie)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Elsie",
                    "text": "Elsie runs fast.",
                    "fol": "p_5(Elsie)",
                    "str_fol": "runs_fast(Elsie)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Elsie",
                    "text": "Elsie does not eat well.",
                    "fol": "\u00acp_6(Elsie)",
                    "str_fol": "\u00aceats_well(Elsie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Elsie either runs fast or thrives in the season (but not both), then she eats well.",
                    "fol": "(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)",
                    "str_fol": "(runs_fast(Elsie) \u2295 thrives_season(Elsie)) \u2192 eats_well(Elsie)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Elsie",
                "text": "Elsie thrives in the season.",
                "fol": "p_13(Elsie)",
                "str_fol": "thrives_season(Elsie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Elsie",
                    "text": "Elsie does not hide acorns.",
                    "fol": "\u00acp_4(Elsie)",
                    "str_fol": "\u00achides_acorns(Elsie)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Elsie",
                    "text": "Elsie thrives in the season.",
                    "fol": "p_13(Elsie)",
                    "str_fol": "thrives_season(Elsie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Any squirrel that gathers seeds or hides acorns can thrive in the season.",
                    "fol": "\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((gathers_seeds(x) \u2228 hides_acorns(x)) \u2192 thrives_season(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Elsie",
                    "text": "Elsie does not survive the winter.",
                    "fol": "\u00acp_3(Elsie)",
                    "str_fol": "\u00acsurvives_winter(Elsie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any squirrel that digs burrows or gathers seeds can survive the winter.",
                    "fol": "\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((digs_burrows(x) \u2228 gathers_seeds(x)) \u2192 survives_winter(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Elsie",
                "text": "Elsie does not dig burrows.",
                "fol": "\u00acp_11(Elsie)",
                "str_fol": "\u00acdigs_burrows(Elsie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Elsie",
                    "text": "Elsie does not explore the forest.",
                    "fol": "\u00acp_2(Elsie)",
                    "str_fol": "\u00acexplores_forest(Elsie)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Elsie",
                    "text": "Elsie does not stay nourished.",
                    "fol": "\u00acp_1(Elsie)",
                    "str_fol": "\u00acstays_nourished(Elsie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Any squirrel that explores the forest or finds berries will stay nourished.",
                    "fol": "\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((explores_forest(x) \u2228 finds_berries(x)) \u2192 stays_nourished(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Elsie",
                "text": "Elsie does not find berries.",
                "fol": "\u00acp_10(Elsie)",
                "str_fol": "\u00acfinds_berries(Elsie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Elsie",
                    "text": "Elsie does not find berries.",
                    "fol": "\u00acp_10(Elsie)",
                    "str_fol": "\u00acfinds_berries(Elsie)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Elsie",
                    "text": "Elsie does not dig burrows.",
                    "fol": "\u00acp_11(Elsie)",
                    "str_fol": "\u00acdigs_burrows(Elsie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Elsie climbs trees, then she either finds berries or digs burrows (but not both).",
                    "fol": "p_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))",
                    "str_fol": "climbs_trees(Elsie) \u2192 (finds_berries(Elsie) \u2295 digs_burrows(Elsie))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Elsie",
                "text": "Elsie does not climb trees.",
                "fol": "\u00acp_9(Elsie)",
                "str_fol": "\u00acclimbs_trees(Elsie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Elsie",
                    "text": "Elsie stores food.",
                    "fol": "p_0(Elsie)",
                    "str_fol": "stores_food(Elsie)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Elsie",
                    "text": "Elsie does not climb trees.",
                    "fol": "\u00acp_9(Elsie)",
                    "str_fol": "\u00acclimbs_trees(Elsie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every squirrel that stores food either climbs trees or is social (or both).",
                    "fol": "\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))",
                    "str_fol": "\u2200x (stores_food(x) \u2192 (climbs_trees(x) \u2228 is_social(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Elsie",
                "text": "Elsie is social.",
                "fol": "p_8(Elsie)",
                "str_fol": "is_social(Elsie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Elsie",
                    "text": "Elsie is social.",
                    "fol": "p_8(Elsie)",
                    "str_fol": "is_social(Elsie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Every squirrel either collects nuts or is social (or both).",
                    "fol": "\u2200x (p_7(x) \u2228 p_8(x))",
                    "str_fol": "\u2200x (collects_nuts(x) \u2228 is_social(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_5(Elsie)\n\u00acp_6(Elsie)\n\u00acp_4(Elsie)\n\u00acp_3(Elsie)\n\u00acp_2(Elsie)\n\u00acp_1(Elsie)\np_0(Elsie)\n(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)\n\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))\n\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))\np_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))\n\u2200x (p_7(x) \u2228 p_8(x))",
            "Initial Goal": "p_7(Elsie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Elsie).",
                    "-p_6(Elsie).",
                    "-p_4(Elsie).",
                    "-p_3(Elsie).",
                    "-p_2(Elsie).",
                    "-p_1(Elsie).",
                    "p_0(Elsie).",
                    "(-(p_5(Elsie) <-> p_13(Elsie))) -> p_6(Elsie).",
                    "all x ((p_12(x) | p_4(x)) -> p_13(x)).",
                    "all x ((p_11(x) | p_12(x)) -> p_3(x)).",
                    "all x ((p_2(x) | p_10(x)) -> p_1(x)).",
                    "p_9(Elsie) -> (-(p_10(Elsie) <-> p_11(Elsie))).",
                    "all x (p_0(x) -> (p_9(x) | p_8(x))).",
                    "all x (p_7(x) | p_8(x)).",
                    "-p_8(Elsie)."
                ],
                "formulas(goals)": [
                    "p_7(Elsie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Elsie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Elsie)\n\u00acp_6(Elsie)\n\u00acp_4(Elsie)\n\u00acp_3(Elsie)\n\u00acp_2(Elsie)\n\u00acp_1(Elsie)\np_0(Elsie)\n(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)\n\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))\n\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))\np_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))\n\u2200x (p_5(x) \u2192 \u00acp_7(x))",
            "Initial Goal": "p_7(Elsie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Elsie).",
                    "-p_6(Elsie).",
                    "-p_4(Elsie).",
                    "-p_3(Elsie).",
                    "-p_2(Elsie).",
                    "-p_1(Elsie).",
                    "p_0(Elsie).",
                    "(-(p_5(Elsie) <-> p_13(Elsie))) -> p_6(Elsie).",
                    "all x ((p_12(x) | p_4(x)) -> p_13(x)).",
                    "all x ((p_11(x) | p_12(x)) -> p_3(x)).",
                    "all x ((p_2(x) | p_10(x)) -> p_1(x)).",
                    "p_9(Elsie) -> (-(p_10(Elsie) <-> p_11(Elsie))).",
                    "all x (p_0(x) -> (p_9(x) | p_8(x))).",
                    "all x (p_5(x) -> -p_7(x))."
                ],
                "formulas(goals)": [
                    "-p_7(Elsie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_7(x) \u2228 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_5(x) \u2192 \u00acp_7(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Elsie)\n\u00acp_6(Elsie)\n\u00acp_4(Elsie)\n\u00acp_3(Elsie)\n\u00acp_2(Elsie)\n\u00acp_1(Elsie)\np_0(Elsie)\n(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)\n\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))\n\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))\np_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))\n\u2200x (p_5(x) \u2192 \u00acp_7(x))\n\u00acp_11(Elsie)\n\u00acp_12(Elsie)\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_12(x) \u2227 \u00acp_4(x)))\n\u2200x (\u00acp_3(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_12(x)))\n\u2200x (\u00acp_1(x) \u2192 (\u00acp_2(x) \u2227 \u00acp_10(x)))\n\u2200x (p_7(x) \u2192 \u00acp_5(x))",
            "Initial Goal": "p_7(Elsie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Elsie)",
                    "-p_6(Elsie)",
                    "-p_4(Elsie)",
                    "-p_3(Elsie)",
                    "-p_2(Elsie)",
                    "-p_1(Elsie)",
                    "p_0(Elsie)",
                    "(-(p_5(Elsie) <-> p_13(Elsie))) -> p_6(Elsie)",
                    "all x ((p_12(x) | p_4(x)) -> p_13(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_3(x))",
                    "all x ((p_2(x) | p_10(x)) -> p_1(x))",
                    "p_9(Elsie) -> (-(p_10(Elsie) <-> p_11(Elsie)))",
                    "all x (p_0(x) -> (p_9(x) | p_8(x)))",
                    "all x (p_5(x) -> -p_7(x))",
                    "-p_11(Elsie)",
                    "-p_12(Elsie)",
                    "all x (-p_13(x) -> (-p_12(x) & -p_4(x)))",
                    "all x (-p_3(x) -> (-p_11(x) & -p_12(x)))",
                    "all x (-p_1(x) -> (-p_2(x) & -p_10(x)))",
                    "all x (p_7(x) -> -p_5(x))"
                ],
                "formulas(goals)": [
                    "-p_7(Elsie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Elsie)",
                    "\u00acp_12(Elsie)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_13(x) \u2192 (\u00acp_12(x) \u2227 \u00acp_4(x)))",
                    "\u2200x (\u00acp_3(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_12(x)))",
                    "\u2200x (\u00acp_1(x) \u2192 (\u00acp_2(x) \u2227 \u00acp_10(x)))",
                    "\u2200x (p_7(x) \u2192 \u00acp_5(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Elsie)\n\u00acp_6(Elsie)\n\u00acp_4(Elsie)\n\u00acp_3(Elsie)\n\u00acp_2(Elsie)\n\u00acp_1(Elsie)\np_0(Elsie)\n(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)\n\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))\n\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))\np_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))\n\u2200x (p_5(x) \u2192 \u00acp_7(x))\n\u00acp_11(Elsie)\n\u00acp_12(Elsie)\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_12(x) \u2227 \u00acp_4(x)))\n\u2200x (\u00acp_3(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_12(x)))\n\u2200x (\u00acp_1(x) \u2192 (\u00acp_2(x) \u2227 \u00acp_10(x)))\n\u2200x (p_7(x) \u2192 \u00acp_5(x))\np_13(Elsie)\np_9(Elsie) \u2228 p_8(Elsie)",
            "Initial Goal": "p_7(Elsie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Elsie)",
                    "-p_6(Elsie)",
                    "-p_4(Elsie)",
                    "-p_3(Elsie)",
                    "-p_2(Elsie)",
                    "-p_1(Elsie)",
                    "p_0(Elsie)",
                    "(-(p_5(Elsie) <-> p_13(Elsie))) -> p_6(Elsie)",
                    "all x ((p_12(x) | p_4(x)) -> p_13(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_3(x))",
                    "all x ((p_2(x) | p_10(x)) -> p_1(x))",
                    "p_9(Elsie) -> (-(p_10(Elsie) <-> p_11(Elsie)))",
                    "all x (p_0(x) -> (p_9(x) | p_8(x)))",
                    "all x (p_5(x) -> -p_7(x))",
                    "-p_11(Elsie)",
                    "-p_12(Elsie)",
                    "all x (-p_13(x) -> (-p_12(x) & -p_4(x)))",
                    "all x (-p_3(x) -> (-p_11(x) & -p_12(x)))",
                    "all x (-p_1(x) -> (-p_2(x) & -p_10(x)))",
                    "all x (p_7(x) -> -p_5(x))",
                    "p_13(Elsie)",
                    "p_9(Elsie) | p_8(Elsie)"
                ],
                "formulas(goals)": [
                    "-p_7(Elsie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Elsie)",
                    "p_9(Elsie) \u2228 p_8(Elsie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Elsie)\n\u00acp_6(Elsie)\n\u00acp_4(Elsie)\n\u00acp_3(Elsie)\n\u00acp_2(Elsie)\n\u00acp_1(Elsie)\np_0(Elsie)\n(p_5(Elsie) \u2295 p_13(Elsie)) \u2192 p_6(Elsie)\n\u2200x ((p_12(x) \u2228 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_3(x))\n\u2200x ((p_2(x) \u2228 p_10(x)) \u2192 p_1(x))\np_9(Elsie) \u2192 (p_10(Elsie) \u2295 p_11(Elsie))\n\u2200x (p_0(x) \u2192 (p_9(x) \u2228 p_8(x)))\n\u2200x (p_5(x) \u2192 \u00acp_7(x))\n\u00acp_11(Elsie)\n\u00acp_12(Elsie)\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_12(x) \u2227 \u00acp_4(x)))\n\u2200x (\u00acp_3(x) \u2192 (\u00acp_11(x) \u2227 \u00acp_12(x)))\n\u2200x (\u00acp_1(x) \u2192 (\u00acp_2(x) \u2227 \u00acp_10(x)))\n\u2200x (p_7(x) \u2192 \u00acp_5(x))\np_13(Elsie)\np_9(Elsie) \u2228 p_8(Elsie)\n\u00acp_10(Elsie)\n\u00acp_9(Elsie)",
            "Initial Goal": "p_7(Elsie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Elsie).",
                    "-p_6(Elsie).",
                    "-p_4(Elsie).",
                    "-p_3(Elsie).",
                    "-p_2(Elsie).",
                    "-p_1(Elsie).",
                    "p_0(Elsie).",
                    "(-(p_5(Elsie) <-> p_13(Elsie))) -> p_6(Elsie).",
                    "all x ((p_12(x) | p_4(x)) -> p_13(x)).",
                    "all x ((p_11(x) | p_12(x)) -> p_3(x)).",
                    "all x ((p_2(x) | p_10(x)) -> p_1(x)).",
                    "p_9(Elsie) -> (-(p_10(Elsie) <-> p_11(Elsie))).",
                    "all x (p_0(x) -> (p_9(x) | p_8(x))).",
                    "all x (p_5(x) -> -p_7(x)).",
                    "-p_11(Elsie).",
                    "-p_12(Elsie).",
                    "all x (-p_13(x) -> (-p_12(x) & -p_4(x))).",
                    "all x (-p_3(x) -> (-p_11(x) & -p_12(x))).",
                    "all x (-p_1(x) -> (-p_2(x) & -p_10(x))).",
                    "all x (p_7(x) -> -p_5(x)).",
                    "p_13(Elsie).",
                    "p_9(Elsie) | p_8(Elsie).",
                    "-p_10(Elsie).",
                    "-p_9(Elsie)."
                ],
                "formulas(goals)": [
                    "-p_7(Elsie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Elsie)",
                    "\u00acp_9(Elsie)"
                ],
                "added_rules": []
            }
        }
    ]
}