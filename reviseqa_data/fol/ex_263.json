{
    "background_story": "Avalynn was a charming, yet slightly eccentric, elderly woman known for her tendency to maunder. She would often get lost in conversations, meandering from one topic to another without warning. Her friends and family had grown accustomed to her rambling stories, which could start with a discussion about the weather and end with a tale about her childhood. Despite the circuitous nature of her conversations, Avalynn's words were always laced with wisdom, humor, and a deep insight into human nature. As she sat on her porch, watching the sunset, Avalynn would maunder on about life, love, and everything in between, captivating all who would listen with her unique brand of storytelling.",
    "predicates": [
        {
            "id": 0,
            "name": "charming"
        },
        {
            "id": 1,
            "name": "is_entertaining"
        },
        {
            "id": 2,
            "name": "has_experience"
        },
        {
            "id": 3,
            "name": "loves_life"
        },
        {
            "id": 4,
            "name": "enjoys_company"
        },
        {
            "id": 5,
            "name": "is_affable"
        },
        {
            "id": 6,
            "name": "has_insight"
        },
        {
            "id": 7,
            "name": "wise"
        },
        {
            "id": 8,
            "name": "good_storyteller"
        },
        {
            "id": 9,
            "name": "engaging"
        },
        {
            "id": 10,
            "name": "is_elderly"
        },
        {
            "id": 11,
            "name": "is_witty"
        },
        {
            "id": 12,
            "name": "shares_knowledge"
        },
        {
            "id": 13,
            "name": "likes_talking"
        },
        {
            "id": 14,
            "name": "outgoing"
        },
        {
            "id": 15,
            "name": "has_humor"
        },
        {
            "id": 16,
            "name": "lively"
        },
        {
            "id": 17,
            "name": "thoughtful"
        },
        {
            "id": 18,
            "name": "meanders"
        },
        {
            "id": 19,
            "name": "captivates"
        },
        {
            "id": 20,
            "name": "quick_minded"
        },
        {
            "id": 21,
            "name": "sharp_tongued"
        },
        {
            "id": 22,
            "name": "enjoys_sharing"
        },
        {
            "id": 23,
            "name": "is_vocal"
        },
        {
            "id": 24,
            "name": "speaks_freely"
        },
        {
            "id": 25,
            "name": "enjoys_joking"
        },
        {
            "id": 26,
            "name": "lives_alone"
        },
        {
            "id": 27,
            "name": "reads_books"
        },
        {
            "id": 28,
            "name": "reads_widely"
        },
        {
            "id": 29,
            "name": "travels_frequently"
        }
    ],
    "subject_name": "Avalynn",
    "subject_category": "human",
    "keyword": "maunder",
    "all_facts": [
        {
            "id": 0,
            "subject": "Avalynn",
            "text": "Avalynn is charming.",
            "fol": "p_0(Avalynn)",
            "str_fol": "charming(Avalynn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Avalynn",
            "text": "Avalynn is not entertaining.",
            "fol": "\u00acp_1(Avalynn)",
            "str_fol": "\u00acis_entertaining(Avalynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Avalynn",
            "text": "Avalynn has experience.",
            "fol": "p_2(Avalynn)",
            "str_fol": "has_experience(Avalynn)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Avalynn",
            "text": "Avalynn loves life.",
            "fol": "p_3(Avalynn)",
            "str_fol": "loves_life(Avalynn)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Avalynn",
            "text": "Avalynn does not enjoy company.",
            "fol": "\u00acp_4(Avalynn)",
            "str_fol": "\u00acenjoys_company(Avalynn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Avalynn",
            "text": "Avalynn is not affable.",
            "fol": "\u00acp_5(Avalynn)",
            "str_fol": "\u00acis_affable(Avalynn)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Avalynn",
            "text": "Avalynn has insight.",
            "fol": "p_6(Avalynn)",
            "str_fol": "has_insight(Avalynn)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Avalynn",
            "text": "Avalynn does not share knowledge.",
            "fol": "\u00acp_12(Avalynn)",
            "str_fol": "\u00acshares_knowledge(Avalynn)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Avalynn",
            "text": "Avalynn is not outgoing.",
            "fol": "\u00acp_14(Avalynn)",
            "str_fol": "\u00acoutgoing(Avalynn)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Avalynn",
            "text": "Avalynn does not have humor.",
            "fol": "\u00acp_15(Avalynn)",
            "str_fol": "\u00achas_humor(Avalynn)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Avalynn",
            "text": "Avalynn is witty.",
            "fol": "p_11(Avalynn)",
            "str_fol": "is_witty(Avalynn)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Avalynn",
            "text": "Avalynn is elderly.",
            "fol": "p_10(Avalynn)",
            "str_fol": "is_elderly(Avalynn)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Avalynn",
            "text": "Avalynn is not engaging.",
            "fol": "\u00acp_9(Avalynn)",
            "str_fol": "\u00acengaging(Avalynn)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Avalynn",
            "text": "Avalynn is not a good storyteller.",
            "fol": "\u00acp_8(Avalynn)",
            "str_fol": "\u00acgood_storyteller(Avalynn)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Avalynn",
            "text": "Avalynn has insight.",
            "fol": "p_6(Avalynn)",
            "str_fol": "has_insight(Avalynn)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Avalynn",
            "text": "Avalynn does not enjoy company.",
            "fol": "\u00acp_4(Avalynn)",
            "str_fol": "\u00acenjoys_company(Avalynn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Avalynn",
            "text": "Avalynn is not affable.",
            "fol": "\u00acp_5(Avalynn)",
            "str_fol": "\u00acis_affable(Avalynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Avalynn",
            "text": "Avalynn loves life.",
            "fol": "p_3(Avalynn)",
            "str_fol": "loves_life(Avalynn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Avalynn",
            "text": "Avalynn is not entertaining.",
            "fol": "\u00acp_1(Avalynn)",
            "str_fol": "\u00acis_entertaining(Avalynn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Avalynn",
            "text": "Avalynn is charming.",
            "fol": "p_0(Avalynn)",
            "str_fol": "charming(Avalynn)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Avalynn",
            "text": "Avalynn has experience.",
            "fol": "p_2(Avalynn)",
            "str_fol": "has_experience(Avalynn)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "Avalynn either shares knowledge or has insight, but not necessarily both.",
            "fol": "p_12(Avalynn) \u2295 p_6(Avalynn)",
            "str_fol": "shares_knowledge(Avalynn) \u2295 has_insight(Avalynn)"
        },
        {
            "id": 6,
            "text": "For all humans, if they either enjoy company or are outgoing, then they are affable.",
            "fol": "\u2200x ((p_4(x) \u2295 p_14(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((enjoys_company(x) \u2295 outgoing(x)) \u2192 is_affable(x))"
        },
        {
            "id": 5,
            "text": "If someone has humor and loves life, then they are entertaining.",
            "fol": "\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((has_humor(x) \u2227 loves_life(x)) \u2192 is_entertaining(x))"
        },
        {
            "id": 4,
            "text": "If someone is outgoing, then they have humor and like talking.",
            "fol": "\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))",
            "str_fol": "\u2200x (outgoing(x) \u2192 (has_humor(x) \u2227 likes_talking(x)))"
        },
        {
            "id": 3,
            "text": "If Avalynn is charming, then she likes talking and is witty.",
            "fol": "p_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))",
            "str_fol": "charming(Avalynn) \u2192 (likes_talking(Avalynn) \u2227 is_witty(Avalynn))"
        },
        {
            "id": 2,
            "text": "If someone is either elderly or has experience, then they share knowledge.",
            "fol": "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((is_elderly(x) \u2295 has_experience(x)) \u2192 shares_knowledge(x))"
        },
        {
            "id": 1,
            "text": "If Avalynn is elderly, then she is either engaging or witty, but not both.",
            "fol": "p_10(Avalynn) \u2192 (p_9(Avalynn) \u2295 p_11(Avalynn))",
            "str_fol": "is_elderly(Avalynn) \u2192 (engaging(Avalynn) \u2295 is_witty(Avalynn))"
        },
        {
            "id": 0,
            "text": "For all humans, if they are wise or good storytellers, then they are engaging.",
            "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((wise(x) \u2228 good_storyteller(x)) \u2192 engaging(x))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Avalynn",
            "text": "Avalynn has insight.",
            "fol": "p_6(Avalynn)",
            "str_fol": "has_insight(Avalynn)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Avalynn",
            "text": "Avalynn does not enjoy company.",
            "fol": "\u00acp_4(Avalynn)",
            "str_fol": "\u00acenjoys_company(Avalynn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Avalynn",
            "text": "Avalynn is not affable.",
            "fol": "\u00acp_5(Avalynn)",
            "str_fol": "\u00acis_affable(Avalynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Avalynn",
            "text": "Avalynn loves life.",
            "fol": "p_3(Avalynn)",
            "str_fol": "loves_life(Avalynn)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Avalynn",
            "text": "Avalynn is not entertaining.",
            "fol": "\u00acp_1(Avalynn)",
            "str_fol": "\u00acis_entertaining(Avalynn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Avalynn",
            "text": "Avalynn is charming.",
            "fol": "p_0(Avalynn)",
            "str_fol": "charming(Avalynn)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Avalynn",
            "text": "Avalynn has experience.",
            "fol": "p_2(Avalynn)",
            "str_fol": "has_experience(Avalynn)",
            "negation": false
        },
        {
            "id": 7,
            "text": "Avalynn either shares knowledge or has insight, but not necessarily both.",
            "fol": "p_12(Avalynn) \u2295 p_6(Avalynn)",
            "str_fol": "shares_knowledge(Avalynn) \u2295 has_insight(Avalynn)"
        },
        {
            "id": 6,
            "text": "For all humans, if they either enjoy company or are outgoing, then they are affable.",
            "fol": "\u2200x ((p_4(x) \u2295 p_14(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((enjoys_company(x) \u2295 outgoing(x)) \u2192 is_affable(x))"
        },
        {
            "id": 5,
            "text": "If someone has humor and loves life, then they are entertaining.",
            "fol": "\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((has_humor(x) \u2227 loves_life(x)) \u2192 is_entertaining(x))"
        },
        {
            "id": 4,
            "text": "If someone is outgoing, then they have humor and like talking.",
            "fol": "\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))",
            "str_fol": "\u2200x (outgoing(x) \u2192 (has_humor(x) \u2227 likes_talking(x)))"
        },
        {
            "id": 3,
            "text": "If Avalynn is charming, then she likes talking and is witty.",
            "fol": "p_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))",
            "str_fol": "charming(Avalynn) \u2192 (likes_talking(Avalynn) \u2227 is_witty(Avalynn))"
        },
        {
            "id": 2,
            "text": "If someone is either elderly or has experience, then they share knowledge.",
            "fol": "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((is_elderly(x) \u2295 has_experience(x)) \u2192 shares_knowledge(x))"
        },
        {
            "id": 1,
            "text": "If Avalynn is elderly, then she is either engaging or witty, but not both.",
            "fol": "p_10(Avalynn) \u2192 (p_9(Avalynn) \u2295 p_11(Avalynn))",
            "str_fol": "is_elderly(Avalynn) \u2192 (engaging(Avalynn) \u2295 is_witty(Avalynn))"
        },
        {
            "id": 0,
            "text": "For all humans, if they are wise or good storytellers, then they are engaging.",
            "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((wise(x) \u2228 good_storyteller(x)) \u2192 engaging(x))"
        }
    ],
    "context_fol": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\np_12(Avalynn) \u2295 p_6(Avalynn)\n\u2200x ((p_4(x) \u2295 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\np_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))\n\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_12(x))\np_10(Avalynn) \u2192 (p_9(Avalynn) \u2295 p_11(Avalynn))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
    "conclusion": {
        "id": 13,
        "subject": "Avalynn",
        "text": "Avalynn is not a good storyteller.",
        "fol": "\u00acp_8(Avalynn)",
        "str_fol": "\u00acgood_storyteller(Avalynn)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_8(Avalynn)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Avalynn",
                    "text": "Avalynn has insight.",
                    "fol": "p_6(Avalynn)",
                    "str_fol": "has_insight(Avalynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Avalynn either shares knowledge or has insight, but not necessarily both.",
                    "fol": "p_12(Avalynn) \u2295 p_6(Avalynn)",
                    "str_fol": "shares_knowledge(Avalynn) \u2295 has_insight(Avalynn)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Avalynn",
                "text": "Avalynn does not share knowledge.",
                "fol": "\u00acp_12(Avalynn)",
                "str_fol": "\u00acshares_knowledge(Avalynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Avalynn",
                    "text": "Avalynn does not enjoy company.",
                    "fol": "\u00acp_4(Avalynn)",
                    "str_fol": "\u00acenjoys_company(Avalynn)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Avalynn",
                    "text": "Avalynn is not affable.",
                    "fol": "\u00acp_5(Avalynn)",
                    "str_fol": "\u00acis_affable(Avalynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "For all humans, if they either enjoy company or are outgoing, then they are affable.",
                    "fol": "\u2200x ((p_4(x) \u2295 p_14(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((enjoys_company(x) \u2295 outgoing(x)) \u2192 is_affable(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Avalynn",
                "text": "Avalynn is not outgoing.",
                "fol": "\u00acp_14(Avalynn)",
                "str_fol": "\u00acoutgoing(Avalynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Avalynn",
                    "text": "Avalynn loves life.",
                    "fol": "p_3(Avalynn)",
                    "str_fol": "loves_life(Avalynn)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Avalynn",
                    "text": "Avalynn is not entertaining.",
                    "fol": "\u00acp_1(Avalynn)",
                    "str_fol": "\u00acis_entertaining(Avalynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone has humor and loves life, then they are entertaining.",
                    "fol": "\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((has_humor(x) \u2227 loves_life(x)) \u2192 is_entertaining(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Avalynn",
                "text": "Avalynn does not have humor.",
                "fol": "\u00acp_15(Avalynn)",
                "str_fol": "\u00achas_humor(Avalynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Avalynn",
                    "text": "Avalynn is not outgoing.",
                    "fol": "\u00acp_14(Avalynn)",
                    "str_fol": "\u00acoutgoing(Avalynn)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Avalynn",
                    "text": "Avalynn does not have humor.",
                    "fol": "\u00acp_15(Avalynn)",
                    "str_fol": "\u00achas_humor(Avalynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone is outgoing, then they have humor and like talking.",
                    "fol": "\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))",
                    "str_fol": "\u2200x (outgoing(x) \u2192 (has_humor(x) \u2227 likes_talking(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Avalynn",
                    "text": "Avalynn is charming.",
                    "fol": "p_0(Avalynn)",
                    "str_fol": "charming(Avalynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Avalynn is charming, then she likes talking and is witty.",
                    "fol": "p_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))",
                    "str_fol": "charming(Avalynn) \u2192 (likes_talking(Avalynn) \u2227 is_witty(Avalynn))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Avalynn",
                "text": "Avalynn is witty.",
                "fol": "p_11(Avalynn)",
                "str_fol": "is_witty(Avalynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Avalynn",
                    "text": "Avalynn has experience.",
                    "fol": "p_2(Avalynn)",
                    "str_fol": "has_experience(Avalynn)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Avalynn",
                    "text": "Avalynn does not share knowledge.",
                    "fol": "\u00acp_12(Avalynn)",
                    "str_fol": "\u00acshares_knowledge(Avalynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone is either elderly or has experience, then they share knowledge.",
                    "fol": "\u2200x ((p_10(x) \u2295 p_2(x)) \u2192 p_12(x))",
                    "str_fol": "\u2200x ((is_elderly(x) \u2295 has_experience(x)) \u2192 shares_knowledge(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Avalynn",
                "text": "Avalynn is elderly.",
                "fol": "p_10(Avalynn)",
                "str_fol": "is_elderly(Avalynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Avalynn",
                    "text": "Avalynn is elderly.",
                    "fol": "p_10(Avalynn)",
                    "str_fol": "is_elderly(Avalynn)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Avalynn",
                    "text": "Avalynn is witty.",
                    "fol": "p_11(Avalynn)",
                    "str_fol": "is_witty(Avalynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Avalynn is elderly, then she is either engaging or witty, but not both.",
                    "fol": "p_10(Avalynn) \u2192 (p_9(Avalynn) \u2295 p_11(Avalynn))",
                    "str_fol": "is_elderly(Avalynn) \u2192 (engaging(Avalynn) \u2295 is_witty(Avalynn))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Avalynn",
                "text": "Avalynn is not engaging.",
                "fol": "\u00acp_9(Avalynn)",
                "str_fol": "\u00acengaging(Avalynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Avalynn",
                    "text": "Avalynn is not engaging.",
                    "fol": "\u00acp_9(Avalynn)",
                    "str_fol": "\u00acengaging(Avalynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they are wise or good storytellers, then they are engaging.",
                    "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((wise(x) \u2228 good_storyteller(x)) \u2192 engaging(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Avalynn",
                "text": "Avalynn is not a good storyteller.",
                "fol": "\u00acp_8(Avalynn)",
                "str_fol": "\u00acgood_storyteller(Avalynn)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 -(p_12(Avalynn) <-> p_6(Avalynn)).  [assumption].\n5 p_0(Avalynn) -> p_13(Avalynn) & p_11(Avalynn).  [assumption].\n6 (all x (-(p_10(x) <-> p_2(x)) -> p_12(x))).  [assumption].\n7 p_10(Avalynn) -> -(p_9(Avalynn) <-> p_11(Avalynn)).  [assumption].\n8 (all x (p_7(x) | p_8(x) -> p_9(x))).  [assumption].\n9 -p_8(Avalynn).  [goal].\n10 -p_12(Avalynn) | -p_6(Avalynn).  [clausify(1)].\n11 p_6(Avalynn).  [assumption].\n23 p_0(Avalynn).  [assumption].\n24 -p_0(Avalynn) | p_11(Avalynn).  [clausify(5)].\n25 p_10(x) | -p_2(x) | p_12(x).  [clausify(6)].\n26 p_2(Avalynn).  [assumption].\n28 p_10(Avalynn) | p_12(Avalynn).  [resolve(25,b,26,a)].\n30 -p_10(Avalynn) | -p_9(Avalynn) | -p_11(Avalynn).  [clausify(7)].\n31 p_8(Avalynn).  [deny(9)].\n32 -p_8(x) | p_9(x).  [clausify(8)].\n34 -p_12(Avalynn).  [resolve(10,b,11,a)].\n35 p_12(Avalynn) | -p_9(Avalynn) | -p_11(Avalynn).  [resolve(28,a,30,a)].\n36 -p_9(Avalynn) | -p_11(Avalynn).  [resolve(35,a,34,a)].\n37 p_11(Avalynn).  [resolve(24,a,23,a)].\n38 -p_9(Avalynn).  [resolve(36,b,37,a)].\n39 p_9(Avalynn).  [resolve(31,a,32,a)].\n40 $F.  [resolve(38,a,39,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n\u00ac(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\np_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\np_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x ((p_0(x) \u2227 p_2(x)) \u2192 p_8(x))",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn).",
                    "-p_4(Avalynn).",
                    "-p_5(Avalynn).",
                    "p_3(Avalynn).",
                    "-p_1(Avalynn).",
                    "p_0(Avalynn).",
                    "p_2(Avalynn).",
                    "-(p_12(Avalynn) <-> p_6(Avalynn)).",
                    "all x (-(p_4(x) <-> p_14(x)) -> p_5(x)).",
                    "all x ((p_15(x) & p_3(x)) -> p_1(x)).",
                    "all x (p_14(x) -> (p_15(x) & p_13(x))).",
                    "p_0(Avalynn) -> (p_13(Avalynn) & p_11(Avalynn)).",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_12(x)).",
                    "p_10(Avalynn) -> -(p_9(Avalynn) <-> p_11(Avalynn)).",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x)).",
                    "all x ((p_0(x) & p_2(x)) -> p_8(x))."
                ],
                "formulas(goals)": [
                    "p_8(Avalynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_0(x) \u2227 p_2(x)) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\np_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\np_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x ((p_0(x) \u2227 p_2(x)) \u2192 p_8(x))",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn)",
                    "-p_4(Avalynn)",
                    "-p_5(Avalynn)",
                    "p_3(Avalynn)",
                    "-p_1(Avalynn)",
                    "p_0(Avalynn)",
                    "p_2(Avalynn)",
                    "(p_12(Avalynn) <-> p_6(Avalynn))",
                    "all x (-(p_4(x) <-> p_14(x)) -> p_5(x))",
                    "all x ((p_15(x) & p_3(x)) -> p_1(x))",
                    "all x (p_14(x) -> (p_15(x) & p_13(x)))",
                    "p_0(Avalynn) -> (p_13(Avalynn) & p_11(Avalynn))",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_12(x))",
                    "p_10(Avalynn) -> (-(p_9(Avalynn) <-> p_11(Avalynn)))",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x ((p_0(x) & p_2(x)) -> p_8(x))"
                ],
                "formulas(goals)": [
                    "-(-p_8(Avalynn))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00ac(p_12(Avalynn) \u2194 p_6(Avalynn))"
                ],
                "removed_rules": [],
                "added_facts": [
                    "(p_12(Avalynn) \u2194 p_6(Avalynn))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\np_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\np_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_3(x) \u2192 \u00acp_8(x))",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn).",
                    "-p_4(Avalynn).",
                    "-p_5(Avalynn).",
                    "p_3(Avalynn).",
                    "-p_1(Avalynn).",
                    "p_0(Avalynn).",
                    "p_2(Avalynn).",
                    "(p_12(Avalynn) <-> p_6(Avalynn)).",
                    "all x (-(-(p_4(x) <-> p_14(x))) | p_5(x)).",
                    "all x (-(p_15(x) & p_3(x)) | p_1(x)).",
                    "all x (-p_14(x) | (p_15(x) & p_13(x))).",
                    "(-p_0(Avalynn) | (p_13(Avalynn) & p_11(Avalynn))).",
                    "all x (-(-(p_10(x) <-> p_2(x))) | p_12(x)).",
                    "(-p_10(Avalynn) | (-(p_9(Avalynn) <-> p_11(Avalynn)))).",
                    "all x (-(p_7(x) | p_8(x)) | p_9(x)).",
                    "all x (-p_3(x) | -p_8(x))."
                ],
                "formulas(goals)": [
                    "-p_8(Avalynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_0(x) \u2227 p_2(x)) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_3(x) \u2192 \u00acp_8(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\np_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\np_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_3(x) \u2192 \u00acp_8(x))\np_6(Avalynn) \u2228 \u00acp_6(Avalynn)\n\u2200x (\u00ac(p_3(x) \u2227 p_8(x)))\np_6(Avalynn) \u2228 p_8(Avalynn)\np_12(Avalynn) \u2192 p_6(Avalynn)\np_6(Avalynn) \u2192 p_12(Avalynn)\np_4(Avalynn) \u2194 p_14(Avalynn)\np_13(Avalynn)\np_11(Avalynn)\n\u00acp_8(Avalynn) \u2228 p_7(Avalynn)",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn).",
                    "-p_4(Avalynn).",
                    "-p_5(Avalynn).",
                    "p_3(Avalynn).",
                    "-p_1(Avalynn).",
                    "p_0(Avalynn).",
                    "p_2(Avalynn).",
                    "p_12(Avalynn) <-> p_6(Avalynn).",
                    "all x (-(p_4(x) <-> p_14(x)) -> p_5(x)).",
                    "all x ((p_15(x) & p_3(x)) -> p_1(x)).",
                    "all x (p_14(x) -> (p_15(x) & p_13(x))).",
                    "p_0(Avalynn) -> (p_13(Avalynn) & p_11(Avalynn)).",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_12(x)).",
                    "p_10(Avalynn) -> -(p_9(Avalynn) <-> p_11(Avalynn)).",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x)).",
                    "all x (p_3(x) -> -p_8(x)).",
                    "p_6(Avalynn) | -p_6(Avalynn).",
                    "all x (-(p_3(x) & p_8(x))).",
                    "p_6(Avalynn) | p_8(Avalynn).",
                    "p_12(Avalynn) -> p_6(Avalynn).",
                    "p_6(Avalynn) -> p_12(Avalynn).",
                    "p_4(Avalynn) <-> p_14(Avalynn).",
                    "p_13(Avalynn).",
                    "p_11(Avalynn).",
                    "-p_8(Avalynn) | p_7(Avalynn)."
                ],
                "formulas(goals)": [
                    "-p_8(Avalynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Avalynn)",
                    "p_11(Avalynn)",
                    "(p_6(Avalynn) \u2228 \u00acp_6(Avalynn))",
                    "(p_6(Avalynn) \u2228 p_8(Avalynn))",
                    "(\u00acp_8(Avalynn) \u2228 p_7(Avalynn))"
                ],
                "added_rules": [
                    "\u2200x (\u00ac(p_3(x) \u2227 p_8(x)))",
                    "(p_12(Avalynn) \u2192 p_6(Avalynn))",
                    "(p_6(Avalynn) \u2192 p_12(Avalynn))",
                    "(p_4(Avalynn) \u2194 p_14(Avalynn))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\np_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\np_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n\u2200x (p_3(x) \u2192 \u00acp_8(x))\np_6(Avalynn) \u2228 \u00acp_6(Avalynn)\n\u2200x \u00ac(p_3(x) \u2227 p_8(x))\np_6(Avalynn) \u2228 p_8(Avalynn)\np_12(Avalynn) \u2192 p_6(Avalynn)\np_6(Avalynn) \u2192 p_12(Avalynn)\n(p_4(Avalynn) \u2194 p_14(Avalynn))\np_13(Avalynn)\np_11(Avalynn)\n\u00acp_8(Avalynn) \u2228 p_7(Avalynn)\n\u00acp_8(Avalynn)\np_12(Avalynn)\n(\u00acp_8(Avalynn) \u2192 p_6(Avalynn))\n(p_4(Avalynn) \u2192 p_14(Avalynn))\n(p_14(Avalynn) \u2192 p_4(Avalynn))\n(p_0(Avalynn) \u2192 p_13(Avalynn))\n(p_0(Avalynn) \u2192 p_11(Avalynn))\n(p_8(Avalynn) \u2192 p_7(Avalynn))",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn)",
                    "-p_4(Avalynn)",
                    "-p_5(Avalynn)",
                    "p_3(Avalynn)",
                    "-p_1(Avalynn)",
                    "p_0(Avalynn)",
                    "p_2(Avalynn)",
                    "(p_12(Avalynn) <-> p_6(Avalynn))",
                    "all x (-(p_4(x) <-> p_14(x)) -> p_5(x))",
                    "all x ((p_15(x) & p_3(x)) -> p_1(x))",
                    "all x (p_14(x) -> (p_15(x) & p_13(x)))",
                    "p_0(Avalynn) -> (p_13(Avalynn) & p_11(Avalynn))",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_12(x))",
                    "p_10(Avalynn) -> -(p_9(Avalynn) <-> p_11(Avalynn))",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "all x (p_3(x) -> -p_8(x))",
                    "p_6(Avalynn) | -p_6(Avalynn)",
                    "all x -(p_3(x) & p_8(x))",
                    "p_6(Avalynn) | p_8(Avalynn)",
                    "p_12(Avalynn) -> p_6(Avalynn)",
                    "p_6(Avalynn) -> p_12(Avalynn)",
                    "(p_4(Avalynn) <-> p_14(Avalynn))",
                    "p_13(Avalynn)",
                    "p_11(Avalynn)",
                    "-p_8(Avalynn) | p_7(Avalynn)",
                    "-p_8(Avalynn)",
                    "p_12(Avalynn)",
                    "(-p_8(Avalynn) -> p_6(Avalynn))",
                    "(p_4(Avalynn) -> p_14(Avalynn))",
                    "(p_14(Avalynn) -> p_4(Avalynn))",
                    "(p_0(Avalynn) -> p_13(Avalynn))",
                    "(p_0(Avalynn) -> p_11(Avalynn))",
                    "(p_8(Avalynn) -> p_7(Avalynn))"
                ],
                "formulas(goals)": [
                    "-p_8(Avalynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Avalynn)",
                    "p_12(Avalynn)"
                ],
                "added_rules": [
                    "(\u00acp_8(Avalynn) \u2192 p_6(Avalynn))",
                    "(p_4(Avalynn) \u2192 p_14(Avalynn))",
                    "(p_14(Avalynn) \u2192 p_4(Avalynn))",
                    "(p_0(Avalynn) \u2192 p_13(Avalynn))",
                    "(p_0(Avalynn) \u2192 p_11(Avalynn))",
                    "(p_8(Avalynn) \u2192 p_7(Avalynn))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\n(p_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn)))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\n(p_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn)))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n(p_6(Avalynn) \u2228 \u00acp_6(Avalynn))\n(p_6(Avalynn) \u2228 p_8(Avalynn))\n(p_12(Avalynn) \u2192 p_6(Avalynn))\n(p_6(Avalynn) \u2192 p_12(Avalynn))\n(p_4(Avalynn) \u2194 p_14(Avalynn))\np_13(Avalynn)\np_11(Avalynn)\n(\u00acp_8(Avalynn) \u2228 p_7(Avalynn))\np_12(Avalynn)\n(\u00acp_8(Avalynn) \u2192 p_6(Avalynn))\n(p_4(Avalynn) \u2192 p_14(Avalynn))\n(p_14(Avalynn) \u2192 p_4(Avalynn))\n(p_0(Avalynn) \u2192 p_13(Avalynn))\n(p_0(Avalynn) \u2192 p_11(Avalynn))\n(p_8(Avalynn) \u2192 p_7(Avalynn))\n(p_3(Avalynn) \u2192 p_8(Avalynn))",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn)",
                    "-p_4(Avalynn)",
                    "-p_5(Avalynn)",
                    "p_3(Avalynn)",
                    "-p_1(Avalynn)",
                    "p_0(Avalynn)",
                    "p_2(Avalynn)",
                    "(p_12(Avalynn) <-> p_6(Avalynn))",
                    "all x (-(p_4(x) <-> p_14(x)) -> p_5(x))",
                    "all x ((p_15(x) & p_3(x)) -> p_1(x))",
                    "all x (p_14(x) -> (p_15(x) & p_13(x)))",
                    "(p_0(Avalynn) -> (p_13(Avalynn) & p_11(Avalynn)))",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_12(x))",
                    "(p_10(Avalynn) -> -(p_9(Avalynn) <-> p_11(Avalynn)))",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "(p_6(Avalynn) | -p_6(Avalynn))",
                    "(p_6(Avalynn) | p_8(Avalynn))",
                    "(p_12(Avalynn) -> p_6(Avalynn))",
                    "(p_6(Avalynn) -> p_12(Avalynn))",
                    "(p_4(Avalynn) <-> p_14(Avalynn))",
                    "p_13(Avalynn)",
                    "p_11(Avalynn)",
                    "(-p_8(Avalynn) | p_7(Avalynn))",
                    "p_12(Avalynn)",
                    "(-p_8(Avalynn) -> p_6(Avalynn))",
                    "(p_4(Avalynn) -> p_14(Avalynn))",
                    "(p_14(Avalynn) -> p_4(Avalynn))",
                    "(p_0(Avalynn) -> p_13(Avalynn))",
                    "(p_0(Avalynn) -> p_11(Avalynn))",
                    "(p_8(Avalynn) -> p_7(Avalynn))",
                    "(p_3(Avalynn) -> p_8(Avalynn))"
                ],
                "formulas(goals)": [
                    "-(-p_8(Avalynn))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Avalynn)"
                ],
                "removed_rules": [
                    "\u2200x (p_3(x) \u2192 \u00acp_8(x))",
                    "\u2200x \u00ac(p_3(x) \u2227 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_3(Avalynn) \u2192 p_8(Avalynn))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Avalynn)\n\u00acp_4(Avalynn)\n\u00acp_5(Avalynn)\np_3(Avalynn)\n\u00acp_1(Avalynn)\np_0(Avalynn)\np_2(Avalynn)\n(p_12(Avalynn) \u2194 p_6(Avalynn))\n\u2200x (\u00ac(p_4(x) \u2194 p_14(x)) \u2192 p_5(x))\n\u2200x ((p_15(x) \u2227 p_3(x)) \u2192 p_1(x))\n\u2200x (p_14(x) \u2192 (p_15(x) \u2227 p_13(x)))\n(p_0(Avalynn) \u2192 (p_13(Avalynn) \u2227 p_11(Avalynn)))\n\u2200x (\u00ac(p_10(x) \u2194 p_2(x)) \u2192 p_12(x))\n(p_10(Avalynn) \u2192 \u00ac(p_9(Avalynn) \u2194 p_11(Avalynn)))\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\n(p_6(Avalynn) \u2228 \u00acp_6(Avalynn))\n(p_6(Avalynn) \u2228 p_8(Avalynn))\n(p_12(Avalynn) \u2192 p_6(Avalynn))\n(p_6(Avalynn) \u2192 p_12(Avalynn))\n(p_4(Avalynn) \u2194 p_14(Avalynn))\np_13(Avalynn)\np_11(Avalynn)\n(\u00acp_8(Avalynn) \u2228 p_7(Avalynn))\np_12(Avalynn)\n(\u00acp_8(Avalynn) \u2192 p_6(Avalynn))\n(p_4(Avalynn) \u2192 p_14(Avalynn))\n(p_14(Avalynn) \u2192 p_4(Avalynn))\n(p_0(Avalynn) \u2192 p_13(Avalynn))\n(p_0(Avalynn) \u2192 p_11(Avalynn))\n(p_8(Avalynn) \u2192 p_7(Avalynn))\n(p_3(Avalynn) \u2192 p_8(Avalynn))\n(p_8(Avalynn) \u2228 \u00acp_8(Avalynn))\n\u2200x (p_8(x) \u2192 p_9(x))",
            "Initial Goal": "\u00acp_8(Avalynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Avalynn)",
                    "-p_4(Avalynn)",
                    "-p_5(Avalynn)",
                    "p_3(Avalynn)",
                    "-p_1(Avalynn)",
                    "p_0(Avalynn)",
                    "p_2(Avalynn)",
                    "(p_12(Avalynn) <-> p_6(Avalynn))",
                    "all x (-(p_4(x) <-> p_14(x)) -> p_5(x))",
                    "all x ((p_15(x) & p_3(x)) -> p_1(x))",
                    "all x (p_14(x) -> (p_15(x) & p_13(x)))",
                    "(p_0(Avalynn) -> (p_13(Avalynn) & p_11(Avalynn)))",
                    "all x (-(p_10(x) <-> p_2(x)) -> p_12(x))",
                    "(p_10(Avalynn) -> -(p_9(Avalynn) <-> p_11(Avalynn)))",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "(p_6(Avalynn) | -p_6(Avalynn))",
                    "(p_6(Avalynn) | p_8(Avalynn))",
                    "(p_12(Avalynn) -> p_6(Avalynn))",
                    "(p_6(Avalynn) -> p_12(Avalynn))",
                    "(p_4(Avalynn) <-> p_14(Avalynn))",
                    "p_13(Avalynn)",
                    "p_11(Avalynn)",
                    "(-p_8(Avalynn) | p_7(Avalynn))",
                    "p_12(Avalynn)",
                    "(-p_8(Avalynn) -> p_6(Avalynn))",
                    "(p_4(Avalynn) -> p_14(Avalynn))",
                    "(p_14(Avalynn) -> p_4(Avalynn))",
                    "(p_0(Avalynn) -> p_13(Avalynn))",
                    "(p_0(Avalynn) -> p_11(Avalynn))",
                    "(p_8(Avalynn) -> p_7(Avalynn))",
                    "(p_3(Avalynn) -> p_8(Avalynn))",
                    "(p_8(Avalynn) | -p_8(Avalynn))",
                    "all x (p_8(x) -> p_9(x))"
                ],
                "formulas(goals)": [
                    "-(-p_8(Avalynn))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "(p_8(Avalynn) \u2228 \u00acp_8(Avalynn))"
                ],
                "added_rules": [
                    "\u2200x (p_8(x) \u2192 p_9(x))"
                ]
            }
        }
    ]
}