{
    "background_story": "Leonardo was a renowned immunologist who dedicated his life to understanding the intricate world of cellular biology. His fascination with the immune system led him to focus on macrophages, a type of white blood cell that plays a crucial role in devouring foreign particles and cellular debris. Leonardo's groundbreaking research on macrophage function and behavior helped unravel the mysteries of immune response and disease pathology. His laboratory became a hub for innovative research, attracting scholars and scientists from around the globe. Leonardo's work paved the way for novel therapies targeting macrophages in the treatment of infectious diseases, cancer, and autoimmune disorders. His contributions to the field earned him numerous accolades, cementing his legacy as a pioneer in the study of macrophages and their vital role in human health.",
    "predicates": [
        {
            "id": 0,
            "name": "develop_theories"
        },
        {
            "id": 1,
            "name": "conduct_experiments"
        },
        {
            "id": 2,
            "name": "draw_conclusions"
        },
        {
            "id": 3,
            "name": "make_discoveries"
        },
        {
            "id": 4,
            "name": "teach_students"
        },
        {
            "id": 5,
            "name": "study_molecular_biology"
        },
        {
            "id": 6,
            "name": "understand_immune_system"
        },
        {
            "id": 7,
            "name": "investigate_cells"
        },
        {
            "id": 8,
            "name": "analyze_data"
        },
        {
            "id": 9,
            "name": "publish_research"
        },
        {
            "id": 10,
            "name": "collect_samples"
        },
        {
            "id": 11,
            "name": "research_diseases"
        },
        {
            "id": 12,
            "name": "identify_patterns"
        },
        {
            "id": 13,
            "name": "curious_mind"
        },
        {
            "id": 14,
            "name": "solve_problems"
        },
        {
            "id": 15,
            "name": "design_models"
        },
        {
            "id": 16,
            "name": "review_literature"
        },
        {
            "id": 17,
            "name": "create_models"
        },
        {
            "id": 18,
            "name": "lead_laboratory"
        },
        {
            "id": 19,
            "name": "design_protocols"
        }
    ],
    "subject_name": "Leonardo",
    "subject_category": "scientist",
    "keyword": "macrophage",
    "all_facts": [
        {
            "id": 0,
            "subject": "Leonardo",
            "text": "Leonardo develops theories.",
            "fol": "p_0(Leonardo)",
            "str_fol": "develop_theories(Leonardo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Leonardo",
            "text": "Leonardo conducts experiments.",
            "fol": "p_1(Leonardo)",
            "str_fol": "conduct_experiments(Leonardo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Leonardo",
            "text": "Leonardo does not draw conclusions.",
            "fol": "\u00acp_2(Leonardo)",
            "str_fol": "\u00acdraw_conclusions(Leonardo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Leonardo",
            "text": "Leonardo does not make discoveries.",
            "fol": "\u00acp_3(Leonardo)",
            "str_fol": "\u00acmake_discoveries(Leonardo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Leonardo",
            "text": "Leonardo teaches students.",
            "fol": "p_4(Leonardo)",
            "str_fol": "teach_students(Leonardo)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Leonardo",
            "text": "Leonardo does not collect samples.",
            "fol": "\u00acp_10(Leonardo)",
            "str_fol": "\u00accollect_samples(Leonardo)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Leonardo",
            "text": "Leonardo does not publish research.",
            "fol": "\u00acp_9(Leonardo)",
            "str_fol": "\u00acpublish_research(Leonardo)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Leonardo",
            "text": "Leonardo analyzes data.",
            "fol": "p_8(Leonardo)",
            "str_fol": "analyze_data(Leonardo)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Leonardo",
            "text": "Leonardo investigates cells.",
            "fol": "p_7(Leonardo)",
            "str_fol": "investigate_cells(Leonardo)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Leonardo",
            "text": "Leonardo understands the immune system.",
            "fol": "p_6(Leonardo)",
            "str_fol": "understand_immune_system(Leonardo)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Leonardo",
            "text": "Leonardo does not study molecular biology.",
            "fol": "\u00acp_5(Leonardo)",
            "str_fol": "\u00acstudy_molecular_biology(Leonardo)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Leonardo",
            "text": "Leonardo teaches students.",
            "fol": "p_4(Leonardo)",
            "str_fol": "teach_students(Leonardo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Leonardo",
            "text": "Leonardo does not make discoveries.",
            "fol": "\u00acp_3(Leonardo)",
            "str_fol": "\u00acmake_discoveries(Leonardo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Leonardo",
            "text": "Leonardo conducts experiments.",
            "fol": "p_1(Leonardo)",
            "str_fol": "conduct_experiments(Leonardo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Leonardo",
            "text": "Leonardo does not draw conclusions.",
            "fol": "\u00acp_2(Leonardo)",
            "str_fol": "\u00acdraw_conclusions(Leonardo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Leonardo",
            "text": "Leonardo develops theories.",
            "fol": "p_0(Leonardo)",
            "str_fol": "develop_theories(Leonardo)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Leonardo either collects samples or teaches students, but not both.",
            "fol": "p_10(Leonardo) \u2295 p_4(Leonardo)",
            "str_fol": "collect_samples(Leonardo) \u2295 teach_students(Leonardo)"
        },
        {
            "id": 4,
            "text": "Any scientist who either collects samples or publishes research can make discoveries.",
            "fol": "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((collect_samples(x) \u2228 publish_research(x)) \u2192 make_discoveries(x))"
        },
        {
            "id": 3,
            "text": "Every scientist who conducts experiments either draws conclusions or analyzes data.",
            "fol": "\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (conduct_experiments(x) \u2192 (draw_conclusions(x) \u2228 analyze_data(x)))"
        },
        {
            "id": 2,
            "text": "If Leonardo either analyzes data or investigates cells (but not both), then he publishes research.",
            "fol": "(p_8(Leonardo) \u2295 p_7(Leonardo)) \u2192 p_9(Leonardo)",
            "str_fol": "(analyze_data(Leonardo) \u2295 investigate_cells(Leonardo)) \u2192 publish_research(Leonardo)"
        },
        {
            "id": 1,
            "text": "If Leonardo investigates cells, then he understands the immune system and develops theories.",
            "fol": "p_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))",
            "str_fol": "investigate_cells(Leonardo) \u2192 (understand_immune_system(Leonardo) \u2227 develop_theories(Leonardo))"
        },
        {
            "id": 0,
            "text": "If Leonardo studies molecular biology, then he understands the immune system.",
            "fol": "p_5(Leonardo) \u2192 p_6(Leonardo)",
            "str_fol": "study_molecular_biology(Leonardo) \u2192 understand_immune_system(Leonardo)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Leonardo",
            "text": "Leonardo teaches students.",
            "fol": "p_4(Leonardo)",
            "str_fol": "teach_students(Leonardo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Leonardo",
            "text": "Leonardo does not make discoveries.",
            "fol": "\u00acp_3(Leonardo)",
            "str_fol": "\u00acmake_discoveries(Leonardo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Leonardo",
            "text": "Leonardo conducts experiments.",
            "fol": "p_1(Leonardo)",
            "str_fol": "conduct_experiments(Leonardo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Leonardo",
            "text": "Leonardo does not draw conclusions.",
            "fol": "\u00acp_2(Leonardo)",
            "str_fol": "\u00acdraw_conclusions(Leonardo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Leonardo",
            "text": "Leonardo develops theories.",
            "fol": "p_0(Leonardo)",
            "str_fol": "develop_theories(Leonardo)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Leonardo either collects samples or teaches students, but not both.",
            "fol": "p_10(Leonardo) \u2295 p_4(Leonardo)",
            "str_fol": "collect_samples(Leonardo) \u2295 teach_students(Leonardo)"
        },
        {
            "id": 4,
            "text": "Any scientist who either collects samples or publishes research can make discoveries.",
            "fol": "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((collect_samples(x) \u2228 publish_research(x)) \u2192 make_discoveries(x))"
        },
        {
            "id": 3,
            "text": "Every scientist who conducts experiments either draws conclusions or analyzes data.",
            "fol": "\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (conduct_experiments(x) \u2192 (draw_conclusions(x) \u2228 analyze_data(x)))"
        },
        {
            "id": 2,
            "text": "If Leonardo either analyzes data or investigates cells (but not both), then he publishes research.",
            "fol": "(p_8(Leonardo) \u2295 p_7(Leonardo)) \u2192 p_9(Leonardo)",
            "str_fol": "(analyze_data(Leonardo) \u2295 investigate_cells(Leonardo)) \u2192 publish_research(Leonardo)"
        },
        {
            "id": 1,
            "text": "If Leonardo investigates cells, then he understands the immune system and develops theories.",
            "fol": "p_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))",
            "str_fol": "investigate_cells(Leonardo) \u2192 (understand_immune_system(Leonardo) \u2227 develop_theories(Leonardo))"
        },
        {
            "id": 0,
            "text": "If Leonardo studies molecular biology, then he understands the immune system.",
            "fol": "p_5(Leonardo) \u2192 p_6(Leonardo)",
            "str_fol": "study_molecular_biology(Leonardo) \u2192 understand_immune_system(Leonardo)"
        }
    ],
    "context_fol": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\np_10(Leonardo) \u2295 p_4(Leonardo)\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n(p_8(Leonardo) \u2295 p_7(Leonardo)) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\np_5(Leonardo) \u2192 p_6(Leonardo)",
    "conclusion": {
        "id": 10,
        "subject": "Leonardo",
        "text": "Leonardo does not study molecular biology.",
        "fol": "\u00acp_5(Leonardo)",
        "str_fol": "\u00acstudy_molecular_biology(Leonardo)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_5(Leonardo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Leonardo",
                    "text": "Leonardo teaches students.",
                    "fol": "p_4(Leonardo)",
                    "str_fol": "teach_students(Leonardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Leonardo either collects samples or teaches students, but not both.",
                    "fol": "p_10(Leonardo) \u2295 p_4(Leonardo)",
                    "str_fol": "collect_samples(Leonardo) \u2295 teach_students(Leonardo)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Leonardo",
                "text": "Leonardo does not collect samples.",
                "fol": "\u00acp_10(Leonardo)",
                "str_fol": "\u00accollect_samples(Leonardo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Leonardo",
                    "text": "Leonardo does not collect samples.",
                    "fol": "\u00acp_10(Leonardo)",
                    "str_fol": "\u00accollect_samples(Leonardo)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Leonardo",
                    "text": "Leonardo does not make discoveries.",
                    "fol": "\u00acp_3(Leonardo)",
                    "str_fol": "\u00acmake_discoveries(Leonardo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any scientist who either collects samples or publishes research can make discoveries.",
                    "fol": "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((collect_samples(x) \u2228 publish_research(x)) \u2192 make_discoveries(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Leonardo",
                "text": "Leonardo does not publish research.",
                "fol": "\u00acp_9(Leonardo)",
                "str_fol": "\u00acpublish_research(Leonardo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Leonardo",
                    "text": "Leonardo conducts experiments.",
                    "fol": "p_1(Leonardo)",
                    "str_fol": "conduct_experiments(Leonardo)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Leonardo",
                    "text": "Leonardo does not draw conclusions.",
                    "fol": "\u00acp_2(Leonardo)",
                    "str_fol": "\u00acdraw_conclusions(Leonardo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Every scientist who conducts experiments either draws conclusions or analyzes data.",
                    "fol": "\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))",
                    "str_fol": "\u2200x (conduct_experiments(x) \u2192 (draw_conclusions(x) \u2228 analyze_data(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Leonardo",
                "text": "Leonardo analyzes data.",
                "fol": "p_8(Leonardo)",
                "str_fol": "analyze_data(Leonardo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Leonardo",
                    "text": "Leonardo analyzes data.",
                    "fol": "p_8(Leonardo)",
                    "str_fol": "analyze_data(Leonardo)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Leonardo",
                    "text": "Leonardo does not publish research.",
                    "fol": "\u00acp_9(Leonardo)",
                    "str_fol": "\u00acpublish_research(Leonardo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Leonardo either analyzes data or investigates cells (but not both), then he publishes research.",
                    "fol": "(p_8(Leonardo) \u2295 p_7(Leonardo)) \u2192 p_9(Leonardo)",
                    "str_fol": "(analyze_data(Leonardo) \u2295 investigate_cells(Leonardo)) \u2192 publish_research(Leonardo)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Leonardo",
                "text": "Leonardo investigates cells.",
                "fol": "p_7(Leonardo)",
                "str_fol": "investigate_cells(Leonardo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Leonardo",
                    "text": "Leonardo investigates cells.",
                    "fol": "p_7(Leonardo)",
                    "str_fol": "investigate_cells(Leonardo)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Leonardo",
                    "text": "Leonardo develops theories.",
                    "fol": "p_0(Leonardo)",
                    "str_fol": "develop_theories(Leonardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Leonardo investigates cells, then he understands the immune system and develops theories.",
                    "fol": "p_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))",
                    "str_fol": "investigate_cells(Leonardo) \u2192 (understand_immune_system(Leonardo) \u2227 develop_theories(Leonardo))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Leonardo",
                "text": "Leonardo understands the immune system.",
                "fol": "p_6(Leonardo)",
                "str_fol": "understand_immune_system(Leonardo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Leonardo",
                    "text": "Leonardo understands the immune system.",
                    "fol": "p_6(Leonardo)",
                    "str_fol": "understand_immune_system(Leonardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Leonardo studies molecular biology, then he understands the immune system.",
                    "fol": "p_5(Leonardo) \u2192 p_6(Leonardo)",
                    "str_fol": "study_molecular_biology(Leonardo) \u2192 understand_immune_system(Leonardo)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\np_10(Leonardo) \u2295 p_4(Leonardo)\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n(p_8(Leonardo) \u2295 p_7(Leonardo)) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\np_5(Leonardo) \u2192 p_6(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo)",
                    "-p_3(Leonardo)",
                    "p_1(Leonardo)",
                    "-p_2(Leonardo)",
                    "p_0(Leonardo)",
                    "-(p_10(Leonardo) <-> p_4(Leonardo))",
                    "all x (-(p_10(x) | p_9(x)) | p_3(x))",
                    "all x (-p_1(x) | p_2(x) | p_8(x))",
                    "(-(-(p_8(Leonardo) <-> p_7(Leonardo))) | p_9(Leonardo))",
                    "(-p_7(Leonardo) | (p_6(Leonardo) & p_0(Leonardo)))",
                    "(-p_5(Leonardo) | p_6(Leonardo))",
                    "(-p_7(Leonardo) | -p_5(Leonardo))"
                ],
                "formulas(goals)": [
                    "-p_5(Leonardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Leonardo) \u2192 \u00acp_5(Leonardo)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\np_10(Leonardo) \u2295 p_4(Leonardo)\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n(p_8(Leonardo) \u2295 p_7(Leonardo)) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\np_6(Leonardo) \u2192 p_5(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo)",
                    "-p_3(Leonardo)",
                    "p_1(Leonardo)",
                    "-p_2(Leonardo)",
                    "p_0(Leonardo)",
                    "-(p_10(Leonardo) <-> p_4(Leonardo))",
                    "all x ((p_10(x) | p_9(x)) -> p_3(x))",
                    "all x (p_1(x) -> (p_2(x) | p_8(x)))",
                    "(-(p_8(Leonardo) <-> p_7(Leonardo))) -> p_9(Leonardo)",
                    "p_7(Leonardo) -> (p_6(Leonardo) & p_0(Leonardo))",
                    "p_6(Leonardo) -> p_5(Leonardo)"
                ],
                "formulas(goals)": [
                    "-(-p_5(Leonardo))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Leonardo) \u2192 p_6(Leonardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Leonardo) \u2192 p_5(Leonardo)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\n(p_10(Leonardo) \u2228 p_4(Leonardo)) \u2227 (\u00acp_10(Leonardo) \u2228 \u00acp_4(Leonardo))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n((p_8(Leonardo) \u2227 \u00acp_7(Leonardo)) \u2228 (\u00acp_8(Leonardo) \u2227 p_7(Leonardo))) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\np_5(Leonardo) \u2192 \u00acp_5(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo)",
                    "-p_3(Leonardo)",
                    "p_1(Leonardo)",
                    "-p_2(Leonardo)",
                    "p_0(Leonardo)",
                    "(p_10(Leonardo) | p_4(Leonardo)) & (-p_10(Leonardo) | -p_4(Leonardo))",
                    "all x ((p_10(x) | p_9(x)) -> p_3(x))",
                    "all x (p_1(x) -> (p_2(x) | p_8(x)))",
                    "((p_8(Leonardo) & -p_7(Leonardo)) | (-p_8(Leonardo) & p_7(Leonardo))) -> p_9(Leonardo)",
                    "p_7(Leonardo) -> (p_6(Leonardo) & p_0(Leonardo))",
                    "p_5(Leonardo) -> -p_5(Leonardo)"
                ],
                "formulas(goals)": [
                    "-p_5(Leonardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Leonardo) \u2192 p_5(Leonardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Leonardo) \u2192 \u00acp_5(Leonardo)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\n(p_10(Leonardo) \u2228 p_4(Leonardo)) \u2227 (\u00acp_10(Leonardo) \u2228 \u00acp_4(Leonardo))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n((p_8(Leonardo) \u2227 \u00acp_7(Leonardo)) \u2228 (\u00acp_8(Leonardo) \u2227 p_7(Leonardo))) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\n(p_5(Leonardo) \u2192 \u00acp_5(Leonardo)) \u2192 p_5(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo).",
                    "-p_3(Leonardo).",
                    "p_1(Leonardo).",
                    "-p_2(Leonardo).",
                    "p_0(Leonardo).",
                    "(p_10(Leonardo) | p_4(Leonardo)) & (-p_10(Leonardo) | -p_4(Leonardo)).",
                    "all x ((p_10(x) | p_9(x)) -> p_3(x)).",
                    "all x (p_1(x) -> (p_2(x) | p_8(x))).",
                    "((p_8(Leonardo) & -p_7(Leonardo)) | (-p_8(Leonardo) & p_7(Leonardo))) -> p_9(Leonardo).",
                    "p_7(Leonardo) -> (p_6(Leonardo) & p_0(Leonardo)).",
                    "(p_5(Leonardo) -> -p_5(Leonardo)) -> p_5(Leonardo)."
                ],
                "formulas(goals)": [
                    "-(-p_5(Leonardo))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Leonardo) \u2192 \u00acp_5(Leonardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Leonardo) \u2192 \u00acp_5(Leonardo)) \u2192 p_5(Leonardo)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\n(p_10(Leonardo) \u2228 p_4(Leonardo)) \u2227 (\u00acp_10(Leonardo) \u2228 \u00acp_4(Leonardo))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n((p_8(Leonardo) \u2227 \u00acp_7(Leonardo)) \u2228 (\u00acp_8(Leonardo) \u2227 p_7(Leonardo))) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\n\u00acp_9(Leonardo) \u2192 \u00acp_5(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo)",
                    "-p_3(Leonardo)",
                    "p_1(Leonardo)",
                    "-p_2(Leonardo)",
                    "p_0(Leonardo)",
                    "(p_10(Leonardo) | p_4(Leonardo)) & (-p_10(Leonardo) | -p_4(Leonardo))",
                    "all x ((p_10(x) | p_9(x)) -> p_3(x))",
                    "all x (p_1(x) -> (p_2(x) | p_8(x)))",
                    "((p_8(Leonardo) & -p_7(Leonardo)) | (-p_8(Leonardo) & p_7(Leonardo))) -> p_9(Leonardo)",
                    "p_7(Leonardo) -> (p_6(Leonardo) & p_0(Leonardo))",
                    "-p_9(Leonardo) -> -p_5(Leonardo)"
                ],
                "formulas(goals)": [
                    "-p_5(Leonardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_5(Leonardo) \u2192 \u00acp_5(Leonardo)) \u2192 p_5(Leonardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_9(Leonardo) \u2192 \u00acp_5(Leonardo)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\n(p_10(Leonardo) \u2228 p_4(Leonardo)) \u2227 (\u00acp_10(Leonardo) \u2228 \u00acp_4(Leonardo))\n\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n((p_8(Leonardo) \u2227 \u00acp_7(Leonardo)) \u2228 (\u00acp_8(Leonardo) \u2227 p_7(Leonardo))) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\n\u00acp_9(Leonardo) \u2192 \u00acp_5(Leonardo)\n\u00acp_10(Leonardo)\n\u2200x (\u00acp_3(x) \u2192 \u00acp_9(x))\np_7(Leonardo) \u2192 p_6(Leonardo)\np_8(Leonardo)\n\u00acp_9(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo)",
                    "-p_3(Leonardo)",
                    "p_1(Leonardo)",
                    "-p_2(Leonardo)",
                    "p_0(Leonardo)",
                    "(p_10(Leonardo) | p_4(Leonardo)) & (-p_10(Leonardo) | -p_4(Leonardo))",
                    "all x ((p_10(x) | p_9(x)) -> p_3(x))",
                    "all x (p_1(x) -> (p_2(x) | p_8(x)))",
                    "((p_8(Leonardo) & -p_7(Leonardo)) | (-p_8(Leonardo) & p_7(Leonardo))) -> p_9(Leonardo)",
                    "p_7(Leonardo) -> (p_6(Leonardo) & p_0(Leonardo))",
                    "-p_9(Leonardo) -> -p_5(Leonardo)",
                    "-p_10(Leonardo)",
                    "all x (-p_3(x) -> -p_9(x))",
                    "p_7(Leonardo) -> p_6(Leonardo)",
                    "p_8(Leonardo)",
                    "-p_9(Leonardo)"
                ],
                "formulas(goals)": [
                    "-p_5(Leonardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Leonardo)",
                    "p_8(Leonardo)",
                    "\u00acp_9(Leonardo)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_3(x) \u2192 \u00acp_9(x))",
                    "p_7(Leonardo) \u2192 p_6(Leonardo)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Leonardo)\n\u00acp_3(Leonardo)\np_1(Leonardo)\n\u00acp_2(Leonardo)\np_0(Leonardo)\n(p_10(Leonardo) \u2228 p_4(Leonardo)) \u2227 (\u00acp_10(Leonardo) \u2228 \u00acp_4(Leonardo))\n\u2200x ((p_10(x) \u2192 p_3(x)) \u2227 (p_9(x) \u2192 p_3(x)))\n\u2200x (p_1(x) \u2192 (p_2(x) \u2228 p_8(x)))\n((p_8(Leonardo) \u2227 \u00acp_7(Leonardo)) \u2228 (\u00acp_8(Leonardo) \u2227 p_7(Leonardo))) \u2192 p_9(Leonardo)\np_7(Leonardo) \u2192 (p_6(Leonardo) \u2227 p_0(Leonardo))\n\u00acp_9(Leonardo) \u2192 \u00acp_5(Leonardo)\n\u00acp_10(Leonardo)\n\u2200x (\u00acp_3(x) \u2192 \u00acp_9(x))\np_7(Leonardo) \u2192 p_6(Leonardo)\np_8(Leonardo)\n\u00acp_9(Leonardo)\np_7(Leonardo)",
            "Initial Goal": "\u00acp_5(Leonardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Leonardo)",
                    "-p_3(Leonardo)",
                    "p_1(Leonardo)",
                    "-p_2(Leonardo)",
                    "p_0(Leonardo)",
                    "(p_10(Leonardo) | p_4(Leonardo)) & (-p_10(Leonardo) | -p_4(Leonardo))",
                    "all x ((p_10(x) -> p_3(x)) & (p_9(x) -> p_3(x)))",
                    "all x (p_1(x) -> (p_2(x) | p_8(x)))",
                    "((p_8(Leonardo) & -p_7(Leonardo)) | (-p_8(Leonardo) & p_7(Leonardo))) -> p_9(Leonardo)",
                    "p_7(Leonardo) -> (p_6(Leonardo) & p_0(Leonardo))",
                    "-p_9(Leonardo) -> -p_5(Leonardo)",
                    "-p_10(Leonardo)",
                    "all x (-p_3(x) -> -p_9(x))",
                    "p_7(Leonardo) -> p_6(Leonardo)",
                    "p_8(Leonardo)",
                    "-p_9(Leonardo)",
                    "p_7(Leonardo)"
                ],
                "formulas(goals)": [
                    "-p_5(Leonardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_10(x) \u2228 p_9(x)) \u2192 p_3(x))"
                ],
                "added_facts": [
                    "p_7(Leonardo)"
                ],
                "added_rules": [
                    "\u2200x ((p_10(x) \u2192 p_3(x)) \u2227 (p_9(x) \u2192 p_3(x)))"
                ]
            }
        }
    ]
}