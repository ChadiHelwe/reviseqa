{
    "background_story": "Theo was a gentle soul with a heart of gold, often referred to as a sap by his friends. He had a tendency to fall deeply in love with anyone who showed him kindness, and his emotions were always worn on his sleeve. Theo's friends would often tease him about being a hopeless romantic, but he couldn't help the way he felt. He wrote sappy love poems and songs, and even had a habit of leaving sweet notes for his loved ones to find. Despite his vulnerability, Theo's kind heart and genuine nature made him a beloved friend to many, and his sappy side only added to his charm.",
    "predicates": [
        {
            "id": 0,
            "name": "is_sensitive"
        },
        {
            "id": 1,
            "name": "forms_strong_bonds"
        },
        {
            "id": 2,
            "name": "sings_sincerely"
        },
        {
            "id": 3,
            "name": "connects_with_others"
        },
        {
            "id": 4,
            "name": "romantic"
        },
        {
            "id": 5,
            "name": "emotional"
        },
        {
            "id": 6,
            "name": "loved_by_others"
        },
        {
            "id": 7,
            "name": "has_kind_heart"
        },
        {
            "id": 8,
            "name": "shows_affection"
        },
        {
            "id": 9,
            "name": "cares_deeply"
        },
        {
            "id": 10,
            "name": "writes_from_heart"
        },
        {
            "id": 11,
            "name": "open_minded"
        },
        {
            "id": 12,
            "name": "values_honesty"
        },
        {
            "id": 13,
            "name": "trusts_easily"
        },
        {
            "id": 14,
            "name": "is_genuine"
        },
        {
            "id": 15,
            "name": "makes_others_smile"
        },
        {
            "id": 16,
            "name": "values_relationships"
        },
        {
            "id": 17,
            "name": "puts_others_first"
        },
        {
            "id": 18,
            "name": "expresses_freely"
        },
        {
            "id": 19,
            "name": "shares_genuinely"
        }
    ],
    "subject_name": "Theo",
    "subject_category": "person",
    "keyword": "sap",
    "all_facts": [
        {
            "id": 0,
            "subject": "Theo",
            "text": "Theo is not sensitive.",
            "fol": "\u00acp_0(Theo)",
            "str_fol": "\u00acis_sensitive(Theo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Theo",
            "text": "Theo does not form strong bonds with others.",
            "fol": "\u00acp_1(Theo)",
            "str_fol": "\u00acforms_strong_bonds(Theo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Theo",
            "text": "Theo does not sing sincerely.",
            "fol": "\u00acp_2(Theo)",
            "str_fol": "\u00acsings_sincerely(Theo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Theo",
            "text": "Theo can connect with others.",
            "fol": "p_3(Theo)",
            "str_fol": "connects_with_others(Theo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Theo",
            "text": "Theo does not care deeply about others.",
            "fol": "\u00acp_9(Theo)",
            "str_fol": "\u00accares_deeply(Theo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Theo",
            "text": "Theo has a kind heart.",
            "fol": "p_7(Theo)",
            "str_fol": "has_kind_heart(Theo)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Theo",
            "text": "Theo is loved by others.",
            "fol": "p_6(Theo)",
            "str_fol": "loved_by_others(Theo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Theo",
            "text": "Theo is romantic.",
            "fol": "p_4(Theo)",
            "str_fol": "romantic(Theo)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Theo",
            "text": "Theo is not emotional.",
            "fol": "\u00acp_5(Theo)",
            "str_fol": "\u00acemotional(Theo)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Theo",
            "text": "Theo does not sing sincerely.",
            "fol": "\u00acp_2(Theo)",
            "str_fol": "\u00acsings_sincerely(Theo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Theo",
            "text": "Theo can connect with others.",
            "fol": "p_3(Theo)",
            "str_fol": "connects_with_others(Theo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Theo",
            "text": "Theo does not form strong bonds with others.",
            "fol": "\u00acp_1(Theo)",
            "str_fol": "\u00acforms_strong_bonds(Theo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Theo",
            "text": "Theo is not sensitive.",
            "fol": "\u00acp_0(Theo)",
            "str_fol": "\u00acis_sensitive(Theo)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Theo either writes from the heart or sings sincerely (but not both), then he can connect with others.",
            "fol": "(p_10(Theo) \u2295 p_2(Theo)) \u2192 p_3(Theo)",
            "str_fol": "(writes_from_heart(Theo) \u2295 sings_sincerely(Theo)) \u2192 connects_with_others(Theo)"
        },
        {
            "id": 4,
            "text": "Anyone who cares deeply or writes from the heart can form strong bonds with others.",
            "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((cares_deeply(x) \u2228 writes_from_heart(x)) \u2192 forms_strong_bonds(x))"
        },
        {
            "id": 3,
            "text": "Theo has a kind heart or cares deeply about others.",
            "fol": "p_7(Theo) \u2228 p_9(Theo)",
            "str_fol": "has_kind_heart(Theo) \u2228 cares_deeply(Theo)"
        },
        {
            "id": 2,
            "text": "If Theo has a kind heart or shows affection, then he is loved by others.",
            "fol": "(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)",
            "str_fol": "(has_kind_heart(Theo) \u2228 shows_affection(Theo)) \u2192 loved_by_others(Theo)"
        },
        {
            "id": 1,
            "text": "Theo is either sensitive or romantic.",
            "fol": "p_0(Theo) \u2228 p_4(Theo)",
            "str_fol": "is_sensitive(Theo) \u2228 romantic(Theo)"
        },
        {
            "id": 0,
            "text": "If Theo is romantic, then he is emotional and loved by others.",
            "fol": "p_4(Theo) \u2192 (p_5(Theo) \u2227 p_6(Theo))",
            "str_fol": "romantic(Theo) \u2192 (emotional(Theo) \u2227 loved_by_others(Theo))"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Theo",
            "text": "Theo does not sing sincerely.",
            "fol": "\u00acp_2(Theo)",
            "str_fol": "\u00acsings_sincerely(Theo)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Theo",
            "text": "Theo can connect with others.",
            "fol": "p_3(Theo)",
            "str_fol": "connects_with_others(Theo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Theo",
            "text": "Theo does not form strong bonds with others.",
            "fol": "\u00acp_1(Theo)",
            "str_fol": "\u00acforms_strong_bonds(Theo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Theo",
            "text": "Theo is not sensitive.",
            "fol": "\u00acp_0(Theo)",
            "str_fol": "\u00acis_sensitive(Theo)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Theo either writes from the heart or sings sincerely (but not both), then he can connect with others.",
            "fol": "(p_10(Theo) \u2295 p_2(Theo)) \u2192 p_3(Theo)",
            "str_fol": "(writes_from_heart(Theo) \u2295 sings_sincerely(Theo)) \u2192 connects_with_others(Theo)"
        },
        {
            "id": 4,
            "text": "Anyone who cares deeply or writes from the heart can form strong bonds with others.",
            "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((cares_deeply(x) \u2228 writes_from_heart(x)) \u2192 forms_strong_bonds(x))"
        },
        {
            "id": 3,
            "text": "Theo has a kind heart or cares deeply about others.",
            "fol": "p_7(Theo) \u2228 p_9(Theo)",
            "str_fol": "has_kind_heart(Theo) \u2228 cares_deeply(Theo)"
        },
        {
            "id": 2,
            "text": "If Theo has a kind heart or shows affection, then he is loved by others.",
            "fol": "(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)",
            "str_fol": "(has_kind_heart(Theo) \u2228 shows_affection(Theo)) \u2192 loved_by_others(Theo)"
        },
        {
            "id": 1,
            "text": "Theo is either sensitive or romantic.",
            "fol": "p_0(Theo) \u2228 p_4(Theo)",
            "str_fol": "is_sensitive(Theo) \u2228 romantic(Theo)"
        },
        {
            "id": 0,
            "text": "If Theo is romantic, then he is emotional and loved by others.",
            "fol": "p_4(Theo) \u2192 (p_5(Theo) \u2227 p_6(Theo))",
            "str_fol": "romantic(Theo) \u2192 (emotional(Theo) \u2227 loved_by_others(Theo))"
        }
    ],
    "context_fol": "\u00acp_2(Theo)\np_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n(p_10(Theo) \u2295 p_2(Theo)) \u2192 p_3(Theo)\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))\np_7(Theo) \u2228 p_9(Theo)\n(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)\np_0(Theo) \u2228 p_4(Theo)\np_4(Theo) \u2192 (p_5(Theo) \u2227 p_6(Theo))",
    "conclusion": {
        "id": 8,
        "subject": "Theo",
        "text": "Theo is not emotional.",
        "fol": "\u00acp_5(Theo)",
        "str_fol": "\u00acemotional(Theo)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_5(Theo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Theo",
                    "text": "Theo does not sing sincerely.",
                    "fol": "\u00acp_2(Theo)",
                    "str_fol": "\u00acsings_sincerely(Theo)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Theo",
                    "text": "Theo can connect with others.",
                    "fol": "p_3(Theo)",
                    "str_fol": "connects_with_others(Theo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Theo either writes from the heart or sings sincerely (but not both), then he can connect with others.",
                    "fol": "(p_10(Theo) \u2295 p_2(Theo)) \u2192 p_3(Theo)",
                    "str_fol": "(writes_from_heart(Theo) \u2295 sings_sincerely(Theo)) \u2192 connects_with_others(Theo)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Theo",
                    "text": "Theo does not form strong bonds with others.",
                    "fol": "\u00acp_1(Theo)",
                    "str_fol": "\u00acforms_strong_bonds(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who cares deeply or writes from the heart can form strong bonds with others.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((cares_deeply(x) \u2228 writes_from_heart(x)) \u2192 forms_strong_bonds(x))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Theo",
                "text": "Theo does not care deeply about others.",
                "fol": "\u00acp_9(Theo)",
                "str_fol": "\u00accares_deeply(Theo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Theo",
                    "text": "Theo does not care deeply about others.",
                    "fol": "\u00acp_9(Theo)",
                    "str_fol": "\u00accares_deeply(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Theo has a kind heart or cares deeply about others.",
                    "fol": "p_7(Theo) \u2228 p_9(Theo)",
                    "str_fol": "has_kind_heart(Theo) \u2228 cares_deeply(Theo)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Theo",
                "text": "Theo has a kind heart.",
                "fol": "p_7(Theo)",
                "str_fol": "has_kind_heart(Theo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Theo",
                    "text": "Theo has a kind heart.",
                    "fol": "p_7(Theo)",
                    "str_fol": "has_kind_heart(Theo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Theo has a kind heart or shows affection, then he is loved by others.",
                    "fol": "(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)",
                    "str_fol": "(has_kind_heart(Theo) \u2228 shows_affection(Theo)) \u2192 loved_by_others(Theo)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Theo",
                "text": "Theo is loved by others.",
                "fol": "p_6(Theo)",
                "str_fol": "loved_by_others(Theo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Theo",
                    "text": "Theo is not sensitive.",
                    "fol": "\u00acp_0(Theo)",
                    "str_fol": "\u00acis_sensitive(Theo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Theo is either sensitive or romantic.",
                    "fol": "p_0(Theo) \u2228 p_4(Theo)",
                    "str_fol": "is_sensitive(Theo) \u2228 romantic(Theo)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Theo",
                "text": "Theo is romantic.",
                "fol": "p_4(Theo)",
                "str_fol": "romantic(Theo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Theo",
                    "text": "Theo is romantic.",
                    "fol": "p_4(Theo)",
                    "str_fol": "romantic(Theo)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Theo",
                    "text": "Theo is loved by others.",
                    "fol": "p_6(Theo)",
                    "str_fol": "loved_by_others(Theo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Theo is romantic, then he is emotional and loved by others.",
                    "fol": "p_4(Theo) \u2192 (p_5(Theo) \u2227 p_6(Theo))",
                    "str_fol": "romantic(Theo) \u2192 (emotional(Theo) \u2227 loved_by_others(Theo))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Theo",
                "text": "Theo is not emotional.",
                "fol": "\u00acp_5(Theo)",
                "str_fol": "\u00acemotional(Theo)",
                "negation": true
            }
        }
    ],
    "proof_trace": "4 p_4(Theo) -> p_5(Theo) & p_6(Theo).  [assumption].\n5 --p_5(Theo).  [goal].\n12 p_0(Theo) | p_4(Theo).  [assumption].\n13 -p_0(Theo).  [assumption].\n16 p_4(Theo).  [resolve(12,a,13,a)].\n17 -p_4(Theo) | p_5(Theo).  [clausify(4)].\n19 p_5(Theo).  [resolve(16,a,17,a)].\n20 -p_5(Theo).  [deny(5)].\n23 $F.  [resolve(19,a,20,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Theo)\np_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n((p_10(Theo) \u2228 p_2(Theo)) \u2227 \u00ac(p_10(Theo) \u2227 p_2(Theo))) \u2192 p_3(Theo)\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))\np_7(Theo) \u2228 p_9(Theo)\n(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)\np_4(Theo) \u2228 p_0(Theo)\np_4(Theo) \u2192 p_5(Theo)\np_4(Theo) \u2192 p_6(Theo)\n\u00ac(p_1(Theo) \u2227 p_0(Theo))",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Theo).",
                    "p_3(Theo).",
                    "-p_1(Theo).",
                    "-p_0(Theo).",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo).",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x)).",
                    "p_7(Theo) | p_9(Theo).",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo).",
                    "p_4(Theo) | p_0(Theo).",
                    "p_4(Theo) -> p_5(Theo).",
                    "p_4(Theo) -> p_6(Theo).",
                    "-(p_1(Theo) & p_0(Theo))."
                ],
                "formulas(goals)": [
                    "--p_5(Theo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_10(Theo) \u2295 p_2(Theo)) \u2192 p_3(Theo)",
                    "p_0(Theo) \u2228 p_4(Theo)",
                    "p_4(Theo) \u2192 (p_5(Theo) \u2227 p_6(Theo))"
                ],
                "added_facts": [
                    "\u00ac(p_1(Theo) \u2227 p_0(Theo))"
                ],
                "added_rules": [
                    "((p_10(Theo) \u2228 p_2(Theo)) \u2227 \u00ac(p_10(Theo) \u2227 p_2(Theo))) \u2192 p_3(Theo)",
                    "p_4(Theo) \u2228 p_0(Theo)",
                    "p_4(Theo) \u2192 p_5(Theo)",
                    "p_4(Theo) \u2192 p_6(Theo)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Theo)\np_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n((p_10(Theo) \u2228 p_2(Theo)) \u2227 \u00ac(p_10(Theo) \u2227 p_2(Theo))) \u2192 p_3(Theo)\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))\np_7(Theo) \u2228 p_9(Theo)\n(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)\np_4(Theo) \u2228 p_0(Theo)\np_4(Theo) \u2192 p_5(Theo)\np_4(Theo) \u2192 p_6(Theo)\n\u00ac(p_1(Theo) \u2227 p_0(Theo))\np_5(Theo)\n\u2200x ((p_9(x) \u2192 p_1(x)) \u2227 (p_10(x) \u2192 p_1(x)))\np_7(Theo) \u2192 p_7(Theo)\np_6(Theo) \u2228 \u00acp_6(Theo)\n(p_7(Theo) \u2192 p_6(Theo))\n(p_8(Theo) \u2192 p_6(Theo))\np_4(Theo) \u2228 \u00acp_4(Theo)",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Theo)",
                    "p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo)",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x))",
                    "p_7(Theo) | p_9(Theo)",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo)",
                    "p_4(Theo) | p_0(Theo)",
                    "p_4(Theo) -> p_5(Theo)",
                    "p_4(Theo) -> p_6(Theo)",
                    "-(p_1(Theo) & p_0(Theo))",
                    "p_5(Theo)",
                    "all x ((p_9(x) -> p_1(x)) & (p_10(x) -> p_1(x)))",
                    "p_7(Theo) -> p_7(Theo)",
                    "p_6(Theo) | -p_6(Theo)",
                    "(p_7(Theo) -> p_6(Theo))",
                    "(p_8(Theo) -> p_6(Theo))",
                    "p_4(Theo) | -p_4(Theo)"
                ],
                "formulas(goals)": [
                    "-(-p_5(Theo))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Theo)"
                ],
                "added_rules": [
                    "\u2200x ((p_9(x) \u2192 p_1(x)) \u2227 (p_10(x) \u2192 p_1(x)))",
                    "p_7(Theo) \u2192 p_7(Theo)",
                    "p_6(Theo) \u2228 \u00acp_6(Theo)",
                    "p_7(Theo) \u2192 p_6(Theo)",
                    "p_8(Theo) \u2192 p_6(Theo)",
                    "p_4(Theo) \u2228 \u00acp_4(Theo)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Theo)\np_3(Theo)\n\u00acp_1(Theo)\n\u00acp_0(Theo)\n((p_10(Theo) \u2228 p_2(Theo)) \u2227 \u00ac(p_10(Theo) \u2227 p_2(Theo))) \u2192 p_3(Theo)\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_1(x))\np_7(Theo) \u2228 p_9(Theo)\n(p_7(Theo) \u2228 p_8(Theo)) \u2192 p_6(Theo)\np_4(Theo) \u2228 p_0(Theo)\np_4(Theo) \u2192 p_5(Theo)\np_4(Theo) \u2192 p_6(Theo)\n\u00ac(p_1(Theo) \u2227 p_0(Theo))\np_5(Theo)\n\u2200x ((p_9(x) \u2192 p_1(x)) \u2227 (p_10(x) \u2192 p_1(x)))\np_7(Theo) \u2192 p_7(Theo)\np_6(Theo) \u2228 \u00acp_6(Theo)\n(p_7(Theo) \u2192 p_6(Theo))\n(p_8(Theo) \u2192 p_6(Theo))\np_4(Theo) \u2228 \u00acp_4(Theo)\np_5(Theo) \u2228 p_2(Theo)\n\u00acp_1(Theo) \u2228 \u00acp_0(Theo)",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Theo)",
                    "p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo)",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x))",
                    "p_7(Theo) | p_9(Theo)",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo)",
                    "p_4(Theo) | p_0(Theo)",
                    "p_4(Theo) -> p_5(Theo)",
                    "p_4(Theo) -> p_6(Theo)",
                    "-(p_1(Theo) & p_0(Theo))",
                    "p_5(Theo)",
                    "all x ((p_9(x) -> p_1(x)) & (p_10(x) -> p_1(x)))",
                    "p_7(Theo) -> p_7(Theo)",
                    "p_6(Theo) | -p_6(Theo)",
                    "(p_7(Theo) -> p_6(Theo))",
                    "(p_8(Theo) -> p_6(Theo))",
                    "p_4(Theo) | -p_4(Theo)",
                    "p_5(Theo) | p_2(Theo)",
                    "-p_1(Theo) | -p_0(Theo)"
                ],
                "formulas(goals)": [
                    "--p_5(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Theo) \u2228 p_2(Theo)",
                    "\u00acp_1(Theo) \u2228 \u00acp_0(Theo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p\u2083(Theo)\n\u00acp\u2081(Theo)\n\u00acp\u2080(Theo)\n((p\u2081\u2080(Theo) \u2228 p\u2082(Theo)) \u2227 \u00ac(p\u2081\u2080(Theo) \u2227 p\u2082(Theo))) \u2192 p\u2083(Theo)\n\u2200x ((p\u2089(x) \u2228 p\u2081\u2080(x)) \u2192 p\u2081(x))\np\u2087(Theo) \u2228 p\u2089(Theo)\n(p\u2087(Theo) \u2228 p\u2088(Theo)) \u2192 p\u2086(Theo)\np\u2084(Theo) \u2228 p\u2080(Theo)\np\u2084(Theo) \u2192 p\u2086(Theo)\n\u00ac(p\u2081(Theo) \u2227 p\u2080(Theo))\n\u2200x ((p\u2089(x) \u2192 p\u2081(x)) \u2227 (p\u2081\u2080(x) \u2192 p\u2081(x)))\np\u2087(Theo) \u2192 p\u2087(Theo)\np\u2086(Theo) \u2228 \u00acp\u2086(Theo)\n(p\u2087(Theo) \u2192 p\u2086(Theo))\n(p\u2088(Theo) \u2192 p\u2086(Theo))\np\u2084(Theo) \u2228 \u00acp\u2084(Theo)\np\u2085(Theo) \u2228 p\u2082(Theo)\n\u00acp\u2081(Theo) \u2228 \u00acp\u2080(Theo)\np\u2084(Theo) \u2227 \u00acp\u2085(Theo)",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo)",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x))",
                    "p_7(Theo) | p_9(Theo)",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo)",
                    "p_4(Theo) | p_0(Theo)",
                    "p_4(Theo) -> p_6(Theo)",
                    "-(p_1(Theo) & p_0(Theo))",
                    "all x ((p_9(x) -> p_1(x)) & (p_10(x) -> p_1(x)))",
                    "p_7(Theo) -> p_7(Theo)",
                    "p_6(Theo) | -p_6(Theo)",
                    "(p_7(Theo) -> p_6(Theo))",
                    "(p_8(Theo) -> p_6(Theo))",
                    "p_4(Theo) | -p_4(Theo)",
                    "p_5(Theo) | p_2(Theo)",
                    "-p_1(Theo) | -p_0(Theo)",
                    "p_4(Theo) & -p_5(Theo)"
                ],
                "formulas(goals)": [
                    "-p_5(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_2(Theo)",
                    "p_5(Theo)"
                ],
                "removed_rules": [
                    "p_4(Theo) \u2192 p_5(Theo)"
                ],
                "added_facts": [
                    "p_4(Theo) \u2227 \u00acp_5(Theo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p\u2083(Theo)\n\u00acp\u2081(Theo)\n\u00acp\u2080(Theo)\n((p\u2081\u2080(Theo) \u2228 p\u2082(Theo)) \u2227 \u00ac(p\u2081\u2080(Theo) \u2227 p\u2082(Theo))) \u2192 p\u2083(Theo)\n\u2200x ((p\u2089(x) \u2228 p\u2081\u2080(x)) \u2192 p\u2081(x))\np\u2087(Theo) \u2228 p\u2089(Theo)\n(p\u2087(Theo) \u2228 p\u2088(Theo)) \u2192 p\u2086(Theo)\np\u2084(Theo) \u2228 p\u2080(Theo)\np\u2084(Theo) \u2192 p\u2086(Theo)\n\u00ac(p\u2081(Theo) \u2227 p\u2080(Theo))\n\u2200x ((p\u2089(x) \u2192 p\u2081(x)) \u2227 (p\u2081\u2080(x) \u2192 p\u2081(x)))\np\u2087(Theo) \u2192 p\u2087(Theo)\np\u2086(Theo) \u2228 \u00acp\u2086(Theo)\n(p\u2087(Theo) \u2192 p\u2086(Theo))\n(p\u2088(Theo) \u2192 p\u2086(Theo))\np\u2084(Theo) \u2228 \u00acp\u2084(Theo)\np\u2085(Theo) \u2228 p\u2082(Theo)\n\u00acp\u2081(Theo) \u2228 \u00acp\u2080(Theo)\np\u2084(Theo) \u2227 \u00acp\u2085(Theo)\np\u2084(Theo)\n\u00acp\u2085(Theo)\np\u2086(Theo)\n(\u00acp\u2080(Theo) \u2192 p\u2084(Theo))\n(\u00acp\u2089(Theo) \u2192 p\u2087(Theo))\n(\u00acp\u2085(Theo) \u2192 p\u2082(Theo))",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo)",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x))",
                    "p_7(Theo) | p_9(Theo)",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo)",
                    "p_4(Theo) | p_0(Theo)",
                    "p_4(Theo) -> p_6(Theo)",
                    "-(p_1(Theo) & p_0(Theo))",
                    "all x ((p_9(x) -> p_1(x)) & (p_10(x) -> p_1(x)))",
                    "p_7(Theo) -> p_7(Theo)",
                    "p_6(Theo) | -p_6(Theo)",
                    "(p_7(Theo) -> p_6(Theo))",
                    "(p_8(Theo) -> p_6(Theo))",
                    "p_4(Theo) | -p_4(Theo)",
                    "p_5(Theo) | p_2(Theo)",
                    "-p_1(Theo) | -p_0(Theo)",
                    "p_4(Theo) & -p_5(Theo)",
                    "p_4(Theo)",
                    "-p_5(Theo)",
                    "p_6(Theo)",
                    "(-p_0(Theo) -> p_4(Theo))",
                    "(-p_9(Theo) -> p_7(Theo))",
                    "(-p_5(Theo) -> p_2(Theo))"
                ],
                "formulas(goals)": [
                    "-p_5(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p\u2084(Theo)",
                    "\u00acp\u2085(Theo)",
                    "p\u2086(Theo)"
                ],
                "added_rules": [
                    "(\u00acp\u2080(Theo) \u2192 p\u2084(Theo))",
                    "(\u00acp\u2089(Theo) \u2192 p\u2087(Theo))",
                    "(\u00acp\u2085(Theo) \u2192 p\u2082(Theo))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p\u2083(Theo)\n\u00acp\u2081(Theo)\n\u00acp\u2080(Theo)\n((p\u2081\u2080(Theo) \u2228 p\u2082(Theo)) \u2227 \u00ac(p\u2081\u2080(Theo) \u2227 p\u2082(Theo))) \u2192 p\u2083(Theo)\n\u2200x ((p\u2089(x) \u2228 p\u2081\u2080(x)) \u2192 p\u2081(x))\np\u2087(Theo) \u2228 p\u2089(Theo)\n(p\u2087(Theo) \u2228 p\u2088(Theo)) \u2192 p\u2086(Theo)\np\u2084(Theo) \u2228 p\u2080(Theo)\np\u2084(Theo) \u2192 p\u2086(Theo)\n\u00ac(p\u2081(Theo) \u2227 p\u2080(Theo))\n\u2200x ((p\u2089(x) \u2192 p\u2081(x)) \u2227 (p\u2081\u2080(x) \u2192 p\u2081(x)))\np\u2087(Theo) \u2192 p\u2087(Theo)\np\u2086(Theo) \u2228 \u00acp\u2086(Theo)\n(p\u2087(Theo) \u2192 p\u2086(Theo))\n(p\u2088(Theo) \u2192 p\u2086(Theo))\np\u2084(Theo) \u2228 \u00acp\u2084(Theo)\np\u2085(Theo) \u2228 p\u2082(Theo)\n\u00acp\u2081(Theo) \u2228 \u00acp\u2080(Theo)\np\u2084(Theo)\np\u2086(Theo)\n(\u00acp\u2080(Theo) \u2192 p\u2084(Theo))\n(\u00acp\u2089(Theo) \u2192 p\u2087(Theo))\n\u00acp\u2082(Theo)",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo)",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x))",
                    "p_7(Theo) | p_9(Theo)",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo)",
                    "p_4(Theo) | p_0(Theo)",
                    "p_4(Theo) -> p_6(Theo)",
                    "-(p_1(Theo) & p_0(Theo))",
                    "all x ((p_9(x) -> p_1(x)) & (p_10(x) -> p_1(x)))",
                    "p_7(Theo) -> p_7(Theo)",
                    "p_6(Theo) | -p_6(Theo)",
                    "(p_7(Theo) -> p_6(Theo))",
                    "(p_8(Theo) -> p_6(Theo))",
                    "p_4(Theo) | -p_4(Theo)",
                    "p_5(Theo) | p_2(Theo)",
                    "-p_1(Theo) | -p_0(Theo)",
                    "p_4(Theo)",
                    "p_6(Theo)",
                    "(-p_0(Theo) -> p_4(Theo))",
                    "(-p_9(Theo) -> p_7(Theo))",
                    "-p_2(Theo)"
                ],
                "formulas(goals)": [
                    "p_5(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p\u2084(Theo) \u2227 \u00acp\u2085(Theo)",
                    "\u00acp\u2085(Theo)"
                ],
                "removed_rules": [
                    "(\u00acp\u2085(Theo) \u2192 p\u2082(Theo))"
                ],
                "added_facts": [
                    "\u00acp\u2082(Theo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p\u2083(Theo)\n\u00acp\u2081(Theo)\n\u00acp\u2080(Theo)\n((p\u2081\u2080(Theo) \u2228 p\u2082(Theo)) \u2227 \u00ac(p\u2081\u2080(Theo) \u2227 p\u2082(Theo))) \u2192 p\u2083(Theo)\n\u2200x ((p\u2089(x) \u2228 p\u2081\u2080(x)) \u2192 p\u2081(x))\np\u2087(Theo) \u2228 p\u2089(Theo)\n(p\u2087(Theo) \u2228 p\u2088(Theo)) \u2192 p\u2086(Theo)\np\u2084(Theo) \u2228 p\u2080(Theo)\np\u2084(Theo) \u2192 p\u2086(Theo)\n\u00ac(p\u2081(Theo) \u2227 p\u2080(Theo))\n\u2200x ((p\u2089(x) \u2192 p\u2081(x)) \u2227 (p\u2081\u2080(x) \u2192 p\u2081(x)))\np\u2087(Theo) \u2192 p\u2086(Theo)\np\u2088(Theo) \u2192 p\u2086(Theo)\np\u2084(Theo)\np\u2086(Theo)\n(\u00acp\u2089(Theo) \u2192 p\u2087(Theo))\n\u00acp\u2082(Theo)\np\u2085(Theo) \u2192 p\u2081(Theo)",
            "Initial Goal": "\u00acp_5(Theo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Theo)",
                    "-p_1(Theo)",
                    "-p_0(Theo)",
                    "((p_10(Theo) | p_2(Theo)) & -(p_10(Theo) & p_2(Theo))) -> p_3(Theo)",
                    "all x ((p_9(x) | p_10(x)) -> p_1(x))",
                    "p_7(Theo) | p_9(Theo)",
                    "(p_7(Theo) | p_8(Theo)) -> p_6(Theo)",
                    "p_4(Theo) | p_0(Theo)",
                    "p_4(Theo) -> p_6(Theo)",
                    "-(p_1(Theo) & p_0(Theo))",
                    "all x ((p_9(x) -> p_1(x)) & (p_10(x) -> p_1(x)))",
                    "p_7(Theo) -> p_6(Theo)",
                    "p_8(Theo) -> p_6(Theo)",
                    "p_4(Theo)",
                    "p_6(Theo)",
                    "(-p_9(Theo) -> p_7(Theo))",
                    "-p_2(Theo)",
                    "p_5(Theo) -> p_1(Theo)"
                ],
                "formulas(goals)": [
                    "-p_5(Theo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Theo) \u2228 p_2(Theo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Theo) \u2192 p_1(Theo)"
                ]
            }
        }
    ]
}