{
    "background_story": "Haven was a brilliant and eccentric musicologist with a passion for the works of Robert Schumann. She spent most of her days studying the composer's life and muses, often finding solace in the melancholic melodies of his piano concertos. Haven's fascination with Schumann led her to Germany, where she delved into the archives of his letters and manuscripts. Her research uncovered a previously unknown sketch of an unfinished symphony, which she painstakingly completed and premiered at a Berlin concert hall. The performance was met with critical acclaim, and Haven became recognized as a leading authority on Schumann's oeuvre. Her love for the composer's music not only deepened her understanding of his art but also influenced her own compositions, weaving a thread of Romanticism into her modern works.",
    "predicates": [
        {
            "id": 0,
            "name": "love_classics"
        },
        {
            "id": 1,
            "name": "teach_music"
        },
        {
            "id": 2,
            "name": "pursue_interests"
        },
        {
            "id": 3,
            "name": "find_fulfillment"
        },
        {
            "id": 4,
            "name": "arrange_scores"
        },
        {
            "id": 5,
            "name": "analyze_manuscripts"
        },
        {
            "id": 6,
            "name": "perform_concerts"
        },
        {
            "id": 7,
            "name": "create_art"
        },
        {
            "id": 8,
            "name": "express_emotion"
        },
        {
            "id": 9,
            "name": "play_instrument"
        },
        {
            "id": 10,
            "name": "study_composers"
        },
        {
            "id": 11,
            "name": "compose_symphonies"
        },
        {
            "id": 12,
            "name": "understand_harmony"
        },
        {
            "id": 13,
            "name": "feel_deeply"
        },
        {
            "id": 14,
            "name": "reflect_life"
        },
        {
            "id": 15,
            "name": "connect_passion"
        },
        {
            "id": 16,
            "name": "write_scores"
        },
        {
            "id": 17,
            "name": "appreciate_music"
        },
        {
            "id": 18,
            "name": "imagine_beauty"
        },
        {
            "id": 19,
            "name": "read_scores"
        },
        {
            "id": 20,
            "name": "learn_piano"
        },
        {
            "id": 21,
            "name": "find_beauty"
        },
        {
            "id": 22,
            "name": "value_sincerity"
        },
        {
            "id": 23,
            "name": "seek_authenticity"
        },
        {
            "id": 24,
            "name": "read_poetry"
        },
        {
            "id": 25,
            "name": "watch_drama"
        },
        {
            "id": 26,
            "name": "hear_melodies"
        },
        {
            "id": 27,
            "name": "interpret_scores"
        },
        {
            "id": 28,
            "name": "improvise_pieces"
        },
        {
            "id": 29,
            "name": "hear_melody"
        }
    ],
    "subject_name": "Haven",
    "subject_category": "human",
    "keyword": "schumann",
    "all_facts": [
        {
            "id": 0,
            "subject": "Haven",
            "text": "Haven loves classics.",
            "fol": "p_0(Haven)",
            "str_fol": "love_classics(Haven)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Haven",
            "text": "Haven teaches music.",
            "fol": "p_1(Haven)",
            "str_fol": "teach_music(Haven)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Haven",
            "text": "Haven pursues her interests.",
            "fol": "p_2(Haven)",
            "str_fol": "pursue_interests(Haven)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Haven",
            "text": "Haven does not find fulfillment.",
            "fol": "\u00acp_3(Haven)",
            "str_fol": "\u00acfind_fulfillment(Haven)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Haven",
            "text": "Haven arranges scores.",
            "fol": "p_4(Haven)",
            "str_fol": "arrange_scores(Haven)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Haven",
            "text": "Haven analyzes manuscripts.",
            "fol": "p_5(Haven)",
            "str_fol": "analyze_manuscripts(Haven)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Haven",
            "text": "Haven does not perform concerts.",
            "fol": "\u00acp_6(Haven)",
            "str_fol": "\u00acperform_concerts(Haven)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Haven",
            "text": "Haven writes musical scores.",
            "fol": "p_16(Haven)",
            "str_fol": "write_scores(Haven)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Haven",
            "text": "Haven composes symphonies.",
            "fol": "p_11(Haven)",
            "str_fol": "compose_symphonies(Haven)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Haven",
            "text": "Haven does not understand harmony.",
            "fol": "\u00acp_12(Haven)",
            "str_fol": "\u00acunderstand_harmony(Haven)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Haven",
            "text": "Haven connects with her passion.",
            "fol": "p_15(Haven)",
            "str_fol": "connect_passion(Haven)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Haven",
            "text": "Haven feels deeply.",
            "fol": "p_13(Haven)",
            "str_fol": "feel_deeply(Haven)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Haven",
            "text": "Haven expresses emotion.",
            "fol": "p_8(Haven)",
            "str_fol": "express_emotion(Haven)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Haven",
            "text": "Haven plays an instrument.",
            "fol": "p_9(Haven)",
            "str_fol": "play_instrument(Haven)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Haven",
            "text": "Haven studies composers.",
            "fol": "p_10(Haven)",
            "str_fol": "study_composers(Haven)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Haven",
            "text": "Haven analyzes manuscripts.",
            "fol": "p_5(Haven)",
            "str_fol": "analyze_manuscripts(Haven)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Haven",
            "text": "Haven does not perform concerts.",
            "fol": "\u00acp_6(Haven)",
            "str_fol": "\u00acperform_concerts(Haven)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Haven",
            "text": "Haven teaches music.",
            "fol": "p_1(Haven)",
            "str_fol": "teach_music(Haven)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Haven",
            "text": "Haven arranges scores.",
            "fol": "p_4(Haven)",
            "str_fol": "arrange_scores(Haven)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Haven",
            "text": "Haven pursues her interests.",
            "fol": "p_2(Haven)",
            "str_fol": "pursue_interests(Haven)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Haven",
            "text": "Haven does not find fulfillment.",
            "fol": "\u00acp_3(Haven)",
            "str_fol": "\u00acfind_fulfillment(Haven)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Haven",
            "text": "Haven loves classics.",
            "fol": "p_0(Haven)",
            "str_fol": "love_classics(Haven)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Haven analyzes manuscripts, then she either performs concerts or writes musical scores.",
            "fol": "p_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))",
            "str_fol": "analyze_manuscripts(Haven) \u2192 (perform_concerts(Haven) \u2228 write_scores(Haven))"
        },
        {
            "id": 7,
            "text": "If Haven writes musical scores, then she will compose symphonies.",
            "fol": "p_16(Haven) \u2192 p_11(Haven)",
            "str_fol": "write_scores(Haven) \u2192 compose_symphonies(Haven)"
        },
        {
            "id": 6,
            "text": "If Haven teaches music, then she either arranges scores or understands harmony, but not both.",
            "fol": "p_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))",
            "str_fol": "teach_music(Haven) \u2192 (arrange_scores(Haven) \u2295 understand_harmony(Haven))"
        },
        {
            "id": 5,
            "text": "If Haven either connects with her passion or pursues her interests (but not both), then she finds fulfillment.",
            "fol": "(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)",
            "str_fol": "(connect_passion(Haven) \u2295 pursue_interests(Haven)) \u2192 find_fulfillment(Haven)"
        },
        {
            "id": 4,
            "text": "Anyone who reflects on life or connects with their passion can feel deeply.",
            "fol": "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((reflect_life(x) \u2228 connect_passion(x)) \u2192 feel_deeply(x))"
        },
        {
            "id": 3,
            "text": "Anyone who feels deeply will express emotion.",
            "fol": "\u2200x (p_13(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (feel_deeply(x) \u2192 express_emotion(x))"
        },
        {
            "id": 2,
            "text": "For all humans, if they either compose symphonies or play an instrument, then they understand harmony.",
            "fol": "\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((compose_symphonies(x) \u2295 play_instrument(x)) \u2192 understand_harmony(x))"
        },
        {
            "id": 1,
            "text": "If Haven loves classics, then she plays an instrument and studies composers.",
            "fol": "p_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))",
            "str_fol": "love_classics(Haven) \u2192 (play_instrument(Haven) \u2227 study_composers(Haven))"
        },
        {
            "id": 0,
            "text": "If a person creates art, then they express emotion.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (create_art(x) \u2192 express_emotion(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Haven",
            "text": "Haven analyzes manuscripts.",
            "fol": "p_5(Haven)",
            "str_fol": "analyze_manuscripts(Haven)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Haven",
            "text": "Haven does not perform concerts.",
            "fol": "\u00acp_6(Haven)",
            "str_fol": "\u00acperform_concerts(Haven)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Haven",
            "text": "Haven teaches music.",
            "fol": "p_1(Haven)",
            "str_fol": "teach_music(Haven)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Haven",
            "text": "Haven arranges scores.",
            "fol": "p_4(Haven)",
            "str_fol": "arrange_scores(Haven)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Haven",
            "text": "Haven pursues her interests.",
            "fol": "p_2(Haven)",
            "str_fol": "pursue_interests(Haven)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Haven",
            "text": "Haven does not find fulfillment.",
            "fol": "\u00acp_3(Haven)",
            "str_fol": "\u00acfind_fulfillment(Haven)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Haven",
            "text": "Haven loves classics.",
            "fol": "p_0(Haven)",
            "str_fol": "love_classics(Haven)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Haven analyzes manuscripts, then she either performs concerts or writes musical scores.",
            "fol": "p_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))",
            "str_fol": "analyze_manuscripts(Haven) \u2192 (perform_concerts(Haven) \u2228 write_scores(Haven))"
        },
        {
            "id": 7,
            "text": "If Haven writes musical scores, then she will compose symphonies.",
            "fol": "p_16(Haven) \u2192 p_11(Haven)",
            "str_fol": "write_scores(Haven) \u2192 compose_symphonies(Haven)"
        },
        {
            "id": 6,
            "text": "If Haven teaches music, then she either arranges scores or understands harmony, but not both.",
            "fol": "p_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))",
            "str_fol": "teach_music(Haven) \u2192 (arrange_scores(Haven) \u2295 understand_harmony(Haven))"
        },
        {
            "id": 5,
            "text": "If Haven either connects with her passion or pursues her interests (but not both), then she finds fulfillment.",
            "fol": "(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)",
            "str_fol": "(connect_passion(Haven) \u2295 pursue_interests(Haven)) \u2192 find_fulfillment(Haven)"
        },
        {
            "id": 4,
            "text": "Anyone who reflects on life or connects with their passion can feel deeply.",
            "fol": "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((reflect_life(x) \u2228 connect_passion(x)) \u2192 feel_deeply(x))"
        },
        {
            "id": 3,
            "text": "Anyone who feels deeply will express emotion.",
            "fol": "\u2200x (p_13(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (feel_deeply(x) \u2192 express_emotion(x))"
        },
        {
            "id": 2,
            "text": "For all humans, if they either compose symphonies or play an instrument, then they understand harmony.",
            "fol": "\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((compose_symphonies(x) \u2295 play_instrument(x)) \u2192 understand_harmony(x))"
        },
        {
            "id": 1,
            "text": "If Haven loves classics, then she plays an instrument and studies composers.",
            "fol": "p_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))",
            "str_fol": "love_classics(Haven) \u2192 (play_instrument(Haven) \u2227 study_composers(Haven))"
        },
        {
            "id": 0,
            "text": "If a person creates art, then they express emotion.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (create_art(x) \u2192 express_emotion(x))"
        }
    ],
    "context_fol": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\np_0(Haven)\np_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))\np_16(Haven) \u2192 p_11(Haven)\np_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))\n(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)\n\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\np_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))\n\u2200x (p_7(x) \u2192 p_8(x))",
    "conclusion": {
        "id": 18,
        "text": "Haven appreciates music, studies composers, and creates art.",
        "fol": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
        "str_fol": "appreciate_music(Haven) \u2227 (study_composers(Haven) \u2227 create_art(Haven))"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Haven",
                    "text": "Haven analyzes manuscripts.",
                    "fol": "p_5(Haven)",
                    "str_fol": "analyze_manuscripts(Haven)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Haven",
                    "text": "Haven does not perform concerts.",
                    "fol": "\u00acp_6(Haven)",
                    "str_fol": "\u00acperform_concerts(Haven)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Haven analyzes manuscripts, then she either performs concerts or writes musical scores.",
                    "fol": "p_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))",
                    "str_fol": "analyze_manuscripts(Haven) \u2192 (perform_concerts(Haven) \u2228 write_scores(Haven))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Haven",
                "text": "Haven writes musical scores.",
                "fol": "p_16(Haven)",
                "str_fol": "write_scores(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Haven",
                    "text": "Haven writes musical scores.",
                    "fol": "p_16(Haven)",
                    "str_fol": "write_scores(Haven)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Haven writes musical scores, then she will compose symphonies.",
                    "fol": "p_16(Haven) \u2192 p_11(Haven)",
                    "str_fol": "write_scores(Haven) \u2192 compose_symphonies(Haven)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Haven",
                "text": "Haven composes symphonies.",
                "fol": "p_11(Haven)",
                "str_fol": "compose_symphonies(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Haven",
                    "text": "Haven teaches music.",
                    "fol": "p_1(Haven)",
                    "str_fol": "teach_music(Haven)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Haven",
                    "text": "Haven arranges scores.",
                    "fol": "p_4(Haven)",
                    "str_fol": "arrange_scores(Haven)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Haven teaches music, then she either arranges scores or understands harmony, but not both.",
                    "fol": "p_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))",
                    "str_fol": "teach_music(Haven) \u2192 (arrange_scores(Haven) \u2295 understand_harmony(Haven))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Haven",
                "text": "Haven does not understand harmony.",
                "fol": "\u00acp_12(Haven)",
                "str_fol": "\u00acunderstand_harmony(Haven)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Haven",
                    "text": "Haven pursues her interests.",
                    "fol": "p_2(Haven)",
                    "str_fol": "pursue_interests(Haven)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Haven",
                    "text": "Haven does not find fulfillment.",
                    "fol": "\u00acp_3(Haven)",
                    "str_fol": "\u00acfind_fulfillment(Haven)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Haven either connects with her passion or pursues her interests (but not both), then she finds fulfillment.",
                    "fol": "(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)",
                    "str_fol": "(connect_passion(Haven) \u2295 pursue_interests(Haven)) \u2192 find_fulfillment(Haven)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Haven",
                "text": "Haven connects with her passion.",
                "fol": "p_15(Haven)",
                "str_fol": "connect_passion(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Haven",
                    "text": "Haven connects with her passion.",
                    "fol": "p_15(Haven)",
                    "str_fol": "connect_passion(Haven)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who reflects on life or connects with their passion can feel deeply.",
                    "fol": "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((reflect_life(x) \u2228 connect_passion(x)) \u2192 feel_deeply(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Haven",
                "text": "Haven feels deeply.",
                "fol": "p_13(Haven)",
                "str_fol": "feel_deeply(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Haven",
                    "text": "Haven feels deeply.",
                    "fol": "p_13(Haven)",
                    "str_fol": "feel_deeply(Haven)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who feels deeply will express emotion.",
                    "fol": "\u2200x (p_13(x) \u2192 p_8(x))",
                    "str_fol": "\u2200x (feel_deeply(x) \u2192 express_emotion(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Haven",
                "text": "Haven expresses emotion.",
                "fol": "p_8(Haven)",
                "str_fol": "express_emotion(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Haven",
                    "text": "Haven composes symphonies.",
                    "fol": "p_11(Haven)",
                    "str_fol": "compose_symphonies(Haven)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Haven",
                    "text": "Haven does not understand harmony.",
                    "fol": "\u00acp_12(Haven)",
                    "str_fol": "\u00acunderstand_harmony(Haven)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For all humans, if they either compose symphonies or play an instrument, then they understand harmony.",
                    "fol": "\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))",
                    "str_fol": "\u2200x ((compose_symphonies(x) \u2295 play_instrument(x)) \u2192 understand_harmony(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Haven",
                "text": "Haven plays an instrument.",
                "fol": "p_9(Haven)",
                "str_fol": "play_instrument(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Haven",
                    "text": "Haven loves classics.",
                    "fol": "p_0(Haven)",
                    "str_fol": "love_classics(Haven)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Haven",
                    "text": "Haven plays an instrument.",
                    "fol": "p_9(Haven)",
                    "str_fol": "play_instrument(Haven)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Haven loves classics, then she plays an instrument and studies composers.",
                    "fol": "p_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))",
                    "str_fol": "love_classics(Haven) \u2192 (play_instrument(Haven) \u2227 study_composers(Haven))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Haven",
                "text": "Haven studies composers.",
                "fol": "p_10(Haven)",
                "str_fol": "study_composers(Haven)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Haven",
                    "text": "Haven expresses emotion.",
                    "fol": "p_8(Haven)",
                    "str_fol": "express_emotion(Haven)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If a person creates art, then they express emotion.",
                    "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
                    "str_fol": "\u2200x (create_art(x) \u2192 express_emotion(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Haven",
                    "text": "Haven studies composers.",
                    "fol": "p_10(Haven)",
                    "str_fol": "study_composers(Haven)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\np_0(Haven)\np_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))\np_16(Haven) \u2192 p_11(Haven)\np_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))\n(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)\n\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\np_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))\n\u2200x (p_7(x) \u2192 p_8(x))",
            "Initial Goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Haven)",
                    "-p_6(Haven)",
                    "p_1(Haven)",
                    "p_4(Haven)",
                    "p_2(Haven)",
                    "-p_3(Haven)",
                    "p_0(Haven)",
                    "p_5(Haven) -> (p_6(Haven) | p_16(Haven))",
                    "p_16(Haven) -> p_11(Haven)",
                    "p_1(Haven) -> (-(p_4(Haven) <-> p_12(Haven)))",
                    "(-(p_15(Haven) <-> p_2(Haven))) -> p_3(Haven)",
                    "all x ((p_14(x) | p_15(x)) -> p_13(x))",
                    "all x (p_13(x) -> p_8(x))",
                    "all x ((-(p_11(x) <-> p_9(x))) -> p_12(x))",
                    "p_0(Haven) -> (p_9(Haven) & p_10(Haven))",
                    "all x (p_7(x) -> p_8(x))",
                    "p_10(Haven) -> p_7(Haven)",
                    "p_7(Haven) -> p_17(Haven)"
                ],
                "formulas(goals)": [
                    "p_17(Haven) & (p_10(Haven) & p_7(Haven))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Haven) \u2192 p_7(Haven)",
                    "p_7(Haven) \u2192 p_17(Haven)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\np_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))\np_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))\np_16(Haven) \u2192 p_11(Haven)\np_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))\n(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)\n\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Haven)",
            "Initial Goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Haven)",
                    "-p_6(Haven)",
                    "p_1(Haven)",
                    "p_4(Haven)",
                    "p_2(Haven)",
                    "-p_3(Haven)",
                    "p_0(Haven) -> (p_9(Haven) & p_10(Haven))",
                    "p_5(Haven) -> (p_6(Haven) | p_16(Haven))",
                    "p_16(Haven) -> p_11(Haven)",
                    "p_1(Haven) -> (-(p_4(Haven) <-> p_12(Haven)))",
                    "(-(p_15(Haven) <-> p_2(Haven))) -> p_3(Haven)",
                    "all x ((p_14(x) | p_15(x)) -> p_13(x))",
                    "all x (p_13(x) -> p_8(x))",
                    "all x ((-(p_11(x) <-> p_9(x))) -> p_12(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-p_10(Haven)"
                ],
                "formulas(goals)": [
                    "-(p_17(Haven) & (p_10(Haven) & p_7(Haven)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Haven)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Haven)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\np_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))\n(p_5(Haven) \u2227 \u00acp_6(Haven)) \u2192 p_16(Haven)\np_16(Haven) \u2192 p_11(Haven)\np_16(Haven)\np_1(Haven) \u2192 (p_4(Haven) \u2228 p_12(Haven))\np_1(Haven) \u2192 \u00ac(p_4(Haven) \u2227 p_12(Haven))\n(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Haven)",
            "Initial Goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Haven).",
                    "-p_6(Haven).",
                    "p_1(Haven).",
                    "p_4(Haven).",
                    "p_2(Haven).",
                    "-p_3(Haven).",
                    "p_0(Haven) -> (p_9(Haven) & p_10(Haven)).",
                    "(p_5(Haven) & -p_6(Haven)) -> p_16(Haven).",
                    "p_16(Haven) -> p_11(Haven).",
                    "p_16(Haven).",
                    "p_1(Haven) -> (p_4(Haven) | p_12(Haven)).",
                    "p_1(Haven) -> -(p_4(Haven) & p_12(Haven)).",
                    "(-(p_15(Haven) <-> p_2(Haven))) -> p_3(Haven).",
                    "all x (-p_13(x) -> (-p_14(x) & -p_15(x))).",
                    "all x (p_13(x) -> p_8(x)).",
                    "all x ((-(p_11(x) <-> p_9(x))) -> p_12(x)).",
                    "all x (p_7(x) -> p_8(x)).",
                    "-p_10(Haven)."
                ],
                "formulas(goals)": [
                    "-(p_17(Haven) & (p_10(Haven) & p_7(Haven)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Haven) \u2192 (p_6(Haven) \u2228 p_16(Haven))",
                    "p_1(Haven) \u2192 (p_4(Haven) \u2295 p_12(Haven))",
                    "\u2200x ((p_14(x) \u2228 p_15(x)) \u2192 p_13(x))"
                ],
                "added_facts": [
                    "p_16(Haven)"
                ],
                "added_rules": [
                    "(p_5(Haven) \u2227 \u00acp_6(Haven)) \u2192 p_16(Haven)",
                    "p_1(Haven) \u2192 (p_4(Haven) \u2228 p_12(Haven))",
                    "p_1(Haven) \u2192 \u00ac(p_4(Haven) \u2227 p_12(Haven))",
                    "\u2200x (\u00acp_13(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\np_0(Haven) \u2192 (p_9(Haven) \u2227 p_10(Haven))\n(p_5(Haven) \u2227 \u00acp_6(Haven)) \u2192 p_16(Haven)\np_16(Haven) \u2192 p_11(Haven)\np_16(Haven)\np_1(Haven) \u2192 (p_4(Haven) \u2228 p_12(Haven))\np_1(Haven) \u2192 (\u00acp_4(Haven) \u2228 \u00acp_12(Haven))\np_4(Haven) \u2228 p_12(Haven)\n(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Haven)\np_11(Haven)\n(p_1(Haven) \u2227 p_4(Haven)) \u2192 \u00acp_12(Haven)",
            "Initial Goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Haven)",
                    "-p_6(Haven)",
                    "p_1(Haven)",
                    "p_4(Haven)",
                    "p_2(Haven)",
                    "-p_3(Haven)",
                    "p_0(Haven) -> (p_9(Haven) & p_10(Haven))",
                    "(p_5(Haven) & -p_6(Haven)) -> p_16(Haven)",
                    "p_16(Haven) -> p_11(Haven)",
                    "p_16(Haven)",
                    "p_1(Haven) -> (p_4(Haven) | p_12(Haven))",
                    "p_1(Haven) -> (-p_4(Haven) | -p_12(Haven))",
                    "p_4(Haven) | p_12(Haven)",
                    "(-(p_15(Haven) <-> p_2(Haven))) -> p_3(Haven)",
                    "all x (-p_13(x) -> (-p_14(x) & -p_15(x)))",
                    "all x (p_13(x) -> p_8(x))",
                    "all x ((-(p_11(x) <-> p_9(x))) -> p_12(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-p_10(Haven)",
                    "p_11(Haven)",
                    "(p_1(Haven) & p_4(Haven)) -> -p_12(Haven)"
                ],
                "formulas(goals)": [
                    "-(p_17(Haven) & (p_10(Haven) & p_7(Haven)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Haven)",
                    "p_4(Haven) \u2228 p_12(Haven)"
                ],
                "added_rules": [
                    "p_1(Haven) \u2192 (\u00acp_4(Haven) \u2228 \u00acp_12(Haven))",
                    "(p_1(Haven) \u2227 p_4(Haven)) \u2192 \u00acp_12(Haven)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\n\u00acp_0(Haven) \u2228 (p_9(Haven) \u2227 p_10(Haven))\n(p_5(Haven) \u2227 \u00acp_6(Haven)) \u2192 p_16(Haven)\np_16(Haven) \u2192 p_11(Haven)\np_16(Haven)\np_1(Haven) \u2192 (p_4(Haven) \u2228 p_12(Haven))\np_1(Haven) \u2192 (\u00acp_4(Haven) \u2228 \u00acp_12(Haven))\np_4(Haven) \u2228 p_12(Haven)\n(p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven)\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\n\u2200x (p_7(x) \u2192 p_8(x))\n\u00acp_10(Haven)\np_11(Haven)\n(p_1(Haven) \u2227 p_4(Haven)) \u2192 \u00acp_12(Haven)\np_15(Haven)\n\u00acp_12(Haven)",
            "Initial Goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Haven)",
                    "-p_6(Haven)",
                    "p_1(Haven)",
                    "p_4(Haven)",
                    "p_2(Haven)",
                    "-p_3(Haven)",
                    "-p_0(Haven) | (p_9(Haven) & p_10(Haven))",
                    "(p_5(Haven) & -p_6(Haven)) -> p_16(Haven)",
                    "p_16(Haven) -> p_11(Haven)",
                    "p_16(Haven)",
                    "p_1(Haven) -> (p_4(Haven) | p_12(Haven))",
                    "p_1(Haven) -> (-p_4(Haven) | -p_12(Haven))",
                    "p_4(Haven) | p_12(Haven)",
                    "(-(p_15(Haven) <-> p_2(Haven))) -> p_3(Haven)",
                    "all x (-p_13(x) -> (-p_14(x) & -p_15(x)))",
                    "all x (p_13(x) -> p_8(x))",
                    "all x ((-(p_11(x) <-> p_9(x))) -> p_12(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-p_10(Haven)",
                    "p_11(Haven)",
                    "(p_1(Haven) & p_4(Haven)) -> -p_12(Haven)",
                    "p_15(Haven)",
                    "-p_12(Haven)"
                ],
                "formulas(goals)": [
                    "-(p_17(Haven) & (p_10(Haven) & p_7(Haven)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_15(Haven)",
                    "\u00acp_12(Haven)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Haven)\n\u00acp_6(Haven)\np_1(Haven)\np_4(Haven)\np_2(Haven)\n\u00acp_3(Haven)\n(\u00acp_0(Haven) \u2228 (p_9(Haven) \u2227 p_10(Haven)))\n((p_5(Haven) \u2227 \u00acp_6(Haven)) \u2192 p_16(Haven))\n(p_16(Haven) \u2192 p_11(Haven))\np_16(Haven)\n(p_1(Haven) \u2192 (p_4(Haven) \u2228 p_12(Haven)))\n(p_1(Haven) \u2192 (\u00acp_4(Haven) \u2228 \u00acp_12(Haven)))\n(p_4(Haven) \u2228 p_12(Haven))\n((p_15(Haven) \u2295 p_2(Haven)) \u2192 p_3(Haven))\n\u2200x (\u00acp_13(x) \u2192 (\u00acp_14(x) \u2227 \u00acp_15(x)))\n\u2200x (p_13(x) \u2192 p_8(x))\n\u2200x ((p_11(x) \u2295 p_9(x)) \u2192 p_12(x))\n\u2200x (p_7(x) \u2192 p_8(x))\np_11(Haven)\n((p_1(Haven) \u2227 p_4(Haven)) \u2192 \u00acp_12(Haven))\np_15(Haven)\n\u00acp_12(Haven)\np_10(Haven)\np_7(Haven)\np_17(Haven)",
            "Initial Goal": "p_17(Haven) \u2227 (p_10(Haven) \u2227 p_7(Haven))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Haven)",
                    "-p_6(Haven)",
                    "p_1(Haven)",
                    "p_4(Haven)",
                    "p_2(Haven)",
                    "-p_3(Haven)",
                    "(-p_0(Haven) | (p_9(Haven) & p_10(Haven)))",
                    "((p_5(Haven) & -p_6(Haven)) -> p_16(Haven))",
                    "(p_16(Haven) -> p_11(Haven))",
                    "p_16(Haven)",
                    "(p_1(Haven) -> (p_4(Haven) | p_12(Haven)))",
                    "(p_1(Haven) -> (-p_4(Haven) | -p_12(Haven)))",
                    "(p_4(Haven) | p_12(Haven))",
                    "(-(p_15(Haven) <-> p_2(Haven)) -> p_3(Haven))",
                    "(all x (-p_13(x) -> (-p_14(x) & -p_15(x))))",
                    "(all x (p_13(x) -> p_8(x)))",
                    "(all x (-(p_11(x) <-> p_9(x)) -> p_12(x)))",
                    "(all x (p_7(x) -> p_8(x)))",
                    "p_11(Haven)",
                    "((p_1(Haven) & p_4(Haven)) -> -p_12(Haven))",
                    "p_15(Haven)",
                    "-p_12(Haven)",
                    "p_10(Haven)",
                    "p_7(Haven)",
                    "p_17(Haven)"
                ],
                "formulas(goals)": [
                    "(p_17(Haven) & (p_10(Haven) & p_7(Haven)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_10(Haven)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Haven)",
                    "p_7(Haven)",
                    "p_17(Haven)"
                ],
                "added_rules": []
            }
        }
    ]
}