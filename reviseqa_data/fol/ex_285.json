{
    "background_story": "Hailey was an innovative optometrist with a passion for corrective lenses. She spent most of her career studying the unique properties of planoconcave lenses, which are thinner in the center than at the edges. Hailey's fascination with these lenses stemmed from their ability to correct nearsightedness while minimizing distortion. She dedicated herself to designing and manufacturing planoconcave lenses that were not only effective but also aesthetically pleasing. Hailey's breakthrough designs improved the vision and lives of countless individuals, earning her recognition in the optometry community. Her work showcased the significant impact that a deep understanding of lens curvature, like that of planoconcave lenses, could have on vision correction and eye health.",
    "predicates": [
        {
            "id": 0,
            "name": "study_lenses"
        },
        {
            "id": 1,
            "name": "understand_curvature"
        },
        {
            "id": 2,
            "name": "enhance_eye_health"
        },
        {
            "id": 3,
            "name": "know_optics"
        },
        {
            "id": 4,
            "name": "correct_nearsighted"
        },
        {
            "id": 5,
            "name": "think_creatively"
        },
        {
            "id": 6,
            "name": "is_resourceful"
        },
        {
            "id": 7,
            "name": "dedicated_optometrist"
        },
        {
            "id": 8,
            "name": "improve_vision"
        },
        {
            "id": 9,
            "name": "earn_recognition"
        },
        {
            "id": 10,
            "name": "create_solutions"
        },
        {
            "id": 11,
            "name": "design_glasses"
        },
        {
            "id": 12,
            "name": "minimize_distortion"
        },
        {
            "id": 13,
            "name": "make_progress"
        },
        {
            "id": 14,
            "name": "solve_problems"
        },
        {
            "id": 15,
            "name": "care_about_patients"
        },
        {
            "id": 16,
            "name": "advance_research"
        },
        {
            "id": 17,
            "name": "help_patients"
        },
        {
            "id": 18,
            "name": "advance_knowledge"
        },
        {
            "id": 19,
            "name": "invest_time"
        },
        {
            "id": 20,
            "name": "help_others"
        },
        {
            "id": 21,
            "name": "craft_frames"
        },
        {
            "id": 22,
            "name": "prescribe_correction"
        },
        {
            "id": 23,
            "name": "prescribes_eyewear"
        },
        {
            "id": 24,
            "name": "learns_fast"
        },
        {
            "id": 25,
            "name": "face_challenges"
        },
        {
            "id": 26,
            "name": "learn_quickly"
        }
    ],
    "subject_name": "Hailey",
    "subject_category": "human",
    "keyword": "planoconcave",
    "all_facts": [
        {
            "id": 0,
            "subject": "Hailey",
            "text": "Hailey does not study lenses.",
            "fol": "\u00acp_0(Hailey)",
            "str_fol": "\u00acstudy_lenses(Hailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hailey",
            "text": "Hailey understands curvature.",
            "fol": "p_1(Hailey)",
            "str_fol": "understand_curvature(Hailey)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Hailey",
            "text": "Hailey does not enhance eye health.",
            "fol": "\u00acp_2(Hailey)",
            "str_fol": "\u00acenhance_eye_health(Hailey)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Hailey",
            "text": "Hailey does not know optics.",
            "fol": "\u00acp_3(Hailey)",
            "str_fol": "\u00acknow_optics(Hailey)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Hailey",
            "text": "Hailey does not correct nearsightedness.",
            "fol": "\u00acp_4(Hailey)",
            "str_fol": "\u00accorrect_nearsighted(Hailey)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Hailey",
            "text": "Hailey thinks creatively.",
            "fol": "p_5(Hailey)",
            "str_fol": "think_creatively(Hailey)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Hailey",
            "text": "Hailey is not resourceful, which means she does not solve problems.",
            "fol": "\u00acp_6(Hailey)",
            "str_fol": "\u00acis_resourceful(Hailey)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Hailey",
            "text": "Hailey does not solve problems.",
            "fol": "\u00acp_14(Hailey)",
            "str_fol": "\u00acsolve_problems(Hailey)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Hailey",
            "text": "Hailey does not make progress.",
            "fol": "\u00acp_13(Hailey)",
            "str_fol": "\u00acmake_progress(Hailey)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Hailey",
            "text": "Hailey does not minimize distortion.",
            "fol": "\u00acp_12(Hailey)",
            "str_fol": "\u00acminimize_distortion(Hailey)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Hailey",
            "text": "Hailey does not design glasses.",
            "fol": "\u00acp_11(Hailey)",
            "str_fol": "\u00acdesign_glasses(Hailey)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Hailey",
            "text": "Hailey creates solutions.",
            "fol": "p_10(Hailey)",
            "str_fol": "create_solutions(Hailey)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Hailey",
            "text": "Hailey is a dedicated optometrist.",
            "fol": "p_7(Hailey)",
            "str_fol": "dedicated_optometrist(Hailey)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Hailey",
            "text": "Hailey does not earn recognition.",
            "fol": "\u00acp_9(Hailey)",
            "str_fol": "\u00acearn_recognition(Hailey)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Hailey",
            "text": "Hailey is not resourceful, which means she does not solve problems.",
            "fol": "\u00acp_6(Hailey)",
            "str_fol": "\u00acis_resourceful(Hailey)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Hailey",
            "text": "Hailey thinks creatively.",
            "fol": "p_5(Hailey)",
            "str_fol": "think_creatively(Hailey)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Hailey",
            "text": "Hailey does not know optics.",
            "fol": "\u00acp_3(Hailey)",
            "str_fol": "\u00acknow_optics(Hailey)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Hailey",
            "text": "Hailey does not correct nearsightedness.",
            "fol": "\u00acp_4(Hailey)",
            "str_fol": "\u00accorrect_nearsighted(Hailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hailey",
            "text": "Hailey understands curvature.",
            "fol": "p_1(Hailey)",
            "str_fol": "understand_curvature(Hailey)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Hailey",
            "text": "Hailey does not enhance eye health.",
            "fol": "\u00acp_2(Hailey)",
            "str_fol": "\u00acenhance_eye_health(Hailey)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Hailey",
            "text": "Hailey does not study lenses.",
            "fol": "\u00acp_0(Hailey)",
            "str_fol": "\u00acstudy_lenses(Hailey)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If someone solves problems, then they are resourceful.",
            "fol": "\u2200x (p_14(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (solve_problems(x) \u2192 is_resourceful(x))"
        },
        {
            "id": 6,
            "text": "If Hailey makes progress, then she solves problems and thinks creatively.",
            "fol": "p_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))",
            "str_fol": "make_progress(Hailey) \u2192 (solve_problems(Hailey) \u2227 think_creatively(Hailey))"
        },
        {
            "id": 5,
            "text": "Anyone who knows optics or minimizes distortion can make progress.",
            "fol": "\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((know_optics(x) \u2228 minimize_distortion(x)) \u2192 make_progress(x))"
        },
        {
            "id": 4,
            "text": "If Hailey designs glasses, then she either corrects nearsightedness or minimizes distortion (but not both).",
            "fol": "p_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))",
            "str_fol": "design_glasses(Hailey) \u2192 (correct_nearsighted(Hailey) \u2295 minimize_distortion(Hailey))"
        },
        {
            "id": 3,
            "text": "If Hailey understands curvature, then she either creates solutions or enhances eye health.",
            "fol": "p_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))",
            "str_fol": "understand_curvature(Hailey) \u2192 (create_solutions(Hailey) \u2228 enhance_eye_health(Hailey))"
        },
        {
            "id": 2,
            "text": "Hailey is either a dedicated optometrist or designs glasses.",
            "fol": "p_7(Hailey) \u2228 p_11(Hailey)",
            "str_fol": "dedicated_optometrist(Hailey) \u2228 design_glasses(Hailey)"
        },
        {
            "id": 1,
            "text": "If someone studies lenses, then they create solutions and improve vision.",
            "fol": "\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (study_lenses(x) \u2192 (create_solutions(x) \u2227 improve_vision(x)))"
        },
        {
            "id": 0,
            "text": "If Hailey is a dedicated optometrist, then she improves vision and earns recognition.",
            "fol": "p_7(Hailey) \u2192 (p_8(Hailey) \u2227 p_9(Hailey))",
            "str_fol": "dedicated_optometrist(Hailey) \u2192 (improve_vision(Hailey) \u2227 earn_recognition(Hailey))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Hailey",
            "text": "Hailey is not resourceful, which means she does not solve problems.",
            "fol": "\u00acp_6(Hailey)",
            "str_fol": "\u00acis_resourceful(Hailey)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Hailey",
            "text": "Hailey thinks creatively.",
            "fol": "p_5(Hailey)",
            "str_fol": "think_creatively(Hailey)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Hailey",
            "text": "Hailey does not know optics.",
            "fol": "\u00acp_3(Hailey)",
            "str_fol": "\u00acknow_optics(Hailey)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Hailey",
            "text": "Hailey does not correct nearsightedness.",
            "fol": "\u00acp_4(Hailey)",
            "str_fol": "\u00accorrect_nearsighted(Hailey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Hailey",
            "text": "Hailey understands curvature.",
            "fol": "p_1(Hailey)",
            "str_fol": "understand_curvature(Hailey)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Hailey",
            "text": "Hailey does not enhance eye health.",
            "fol": "\u00acp_2(Hailey)",
            "str_fol": "\u00acenhance_eye_health(Hailey)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Hailey",
            "text": "Hailey does not study lenses.",
            "fol": "\u00acp_0(Hailey)",
            "str_fol": "\u00acstudy_lenses(Hailey)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If someone solves problems, then they are resourceful.",
            "fol": "\u2200x (p_14(x) \u2192 p_6(x))",
            "str_fol": "\u2200x (solve_problems(x) \u2192 is_resourceful(x))"
        },
        {
            "id": 6,
            "text": "If Hailey makes progress, then she solves problems and thinks creatively.",
            "fol": "p_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))",
            "str_fol": "make_progress(Hailey) \u2192 (solve_problems(Hailey) \u2227 think_creatively(Hailey))"
        },
        {
            "id": 5,
            "text": "Anyone who knows optics or minimizes distortion can make progress.",
            "fol": "\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((know_optics(x) \u2228 minimize_distortion(x)) \u2192 make_progress(x))"
        },
        {
            "id": 4,
            "text": "If Hailey designs glasses, then she either corrects nearsightedness or minimizes distortion (but not both).",
            "fol": "p_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))",
            "str_fol": "design_glasses(Hailey) \u2192 (correct_nearsighted(Hailey) \u2295 minimize_distortion(Hailey))"
        },
        {
            "id": 3,
            "text": "If Hailey understands curvature, then she either creates solutions or enhances eye health.",
            "fol": "p_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))",
            "str_fol": "understand_curvature(Hailey) \u2192 (create_solutions(Hailey) \u2228 enhance_eye_health(Hailey))"
        },
        {
            "id": 2,
            "text": "Hailey is either a dedicated optometrist or designs glasses.",
            "fol": "p_7(Hailey) \u2228 p_11(Hailey)",
            "str_fol": "dedicated_optometrist(Hailey) \u2228 design_glasses(Hailey)"
        },
        {
            "id": 1,
            "text": "If someone studies lenses, then they create solutions and improve vision.",
            "fol": "\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))",
            "str_fol": "\u2200x (study_lenses(x) \u2192 (create_solutions(x) \u2227 improve_vision(x)))"
        },
        {
            "id": 0,
            "text": "If Hailey is a dedicated optometrist, then she improves vision and earns recognition.",
            "fol": "p_7(Hailey) \u2192 (p_8(Hailey) \u2227 p_9(Hailey))",
            "str_fol": "dedicated_optometrist(Hailey) \u2192 (improve_vision(Hailey) \u2227 earn_recognition(Hailey))"
        }
    ],
    "context_fol": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_7(Hailey) \u2192 (p_8(Hailey) \u2227 p_9(Hailey))",
    "conclusion": {
        "id": 13,
        "subject": "Hailey",
        "text": "Hailey does not earn recognition.",
        "fol": "\u00acp_9(Hailey)",
        "str_fol": "\u00acearn_recognition(Hailey)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_9(Hailey)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Hailey",
                    "text": "Hailey is not resourceful, which means she does not solve problems.",
                    "fol": "\u00acp_6(Hailey)",
                    "str_fol": "\u00acis_resourceful(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If someone solves problems, then they are resourceful.",
                    "fol": "\u2200x (p_14(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (solve_problems(x) \u2192 is_resourceful(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Hailey",
                "text": "Hailey does not solve problems.",
                "fol": "\u00acp_14(Hailey)",
                "str_fol": "\u00acsolve_problems(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Hailey",
                    "text": "Hailey does not solve problems.",
                    "fol": "\u00acp_14(Hailey)",
                    "str_fol": "\u00acsolve_problems(Hailey)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Hailey",
                    "text": "Hailey thinks creatively.",
                    "fol": "p_5(Hailey)",
                    "str_fol": "think_creatively(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Hailey makes progress, then she solves problems and thinks creatively.",
                    "fol": "p_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))",
                    "str_fol": "make_progress(Hailey) \u2192 (solve_problems(Hailey) \u2227 think_creatively(Hailey))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Hailey",
                "text": "Hailey does not make progress.",
                "fol": "\u00acp_13(Hailey)",
                "str_fol": "\u00acmake_progress(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Hailey",
                    "text": "Hailey does not know optics.",
                    "fol": "\u00acp_3(Hailey)",
                    "str_fol": "\u00acknow_optics(Hailey)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Hailey",
                    "text": "Hailey does not make progress.",
                    "fol": "\u00acp_13(Hailey)",
                    "str_fol": "\u00acmake_progress(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who knows optics or minimizes distortion can make progress.",
                    "fol": "\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((know_optics(x) \u2228 minimize_distortion(x)) \u2192 make_progress(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Hailey",
                "text": "Hailey does not minimize distortion.",
                "fol": "\u00acp_12(Hailey)",
                "str_fol": "\u00acminimize_distortion(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Hailey",
                    "text": "Hailey does not correct nearsightedness.",
                    "fol": "\u00acp_4(Hailey)",
                    "str_fol": "\u00accorrect_nearsighted(Hailey)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Hailey",
                    "text": "Hailey does not minimize distortion.",
                    "fol": "\u00acp_12(Hailey)",
                    "str_fol": "\u00acminimize_distortion(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Hailey designs glasses, then she either corrects nearsightedness or minimizes distortion (but not both).",
                    "fol": "p_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))",
                    "str_fol": "design_glasses(Hailey) \u2192 (correct_nearsighted(Hailey) \u2295 minimize_distortion(Hailey))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Hailey",
                "text": "Hailey does not design glasses.",
                "fol": "\u00acp_11(Hailey)",
                "str_fol": "\u00acdesign_glasses(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Hailey",
                    "text": "Hailey understands curvature.",
                    "fol": "p_1(Hailey)",
                    "str_fol": "understand_curvature(Hailey)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Hailey",
                    "text": "Hailey does not enhance eye health.",
                    "fol": "\u00acp_2(Hailey)",
                    "str_fol": "\u00acenhance_eye_health(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Hailey understands curvature, then she either creates solutions or enhances eye health.",
                    "fol": "p_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))",
                    "str_fol": "understand_curvature(Hailey) \u2192 (create_solutions(Hailey) \u2228 enhance_eye_health(Hailey))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Hailey",
                "text": "Hailey creates solutions.",
                "fol": "p_10(Hailey)",
                "str_fol": "create_solutions(Hailey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Hailey",
                    "text": "Hailey does not design glasses.",
                    "fol": "\u00acp_11(Hailey)",
                    "str_fol": "\u00acdesign_glasses(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Hailey is either a dedicated optometrist or designs glasses.",
                    "fol": "p_7(Hailey) \u2228 p_11(Hailey)",
                    "str_fol": "dedicated_optometrist(Hailey) \u2228 design_glasses(Hailey)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Hailey",
                "text": "Hailey is a dedicated optometrist.",
                "fol": "p_7(Hailey)",
                "str_fol": "dedicated_optometrist(Hailey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Hailey",
                    "text": "Hailey does not study lenses.",
                    "fol": "\u00acp_0(Hailey)",
                    "str_fol": "\u00acstudy_lenses(Hailey)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Hailey",
                    "text": "Hailey creates solutions.",
                    "fol": "p_10(Hailey)",
                    "str_fol": "create_solutions(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone studies lenses, then they create solutions and improve vision.",
                    "fol": "\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))",
                    "str_fol": "\u2200x (study_lenses(x) \u2192 (create_solutions(x) \u2227 improve_vision(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Hailey",
                    "text": "Hailey is a dedicated optometrist.",
                    "fol": "p_7(Hailey)",
                    "str_fol": "dedicated_optometrist(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Hailey is a dedicated optometrist, then she improves vision and earns recognition.",
                    "fol": "p_7(Hailey) \u2192 (p_8(Hailey) \u2227 p_9(Hailey))",
                    "str_fol": "dedicated_optometrist(Hailey) \u2192 (improve_vision(Hailey) \u2227 earn_recognition(Hailey))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Hailey",
                "text": "Hailey does not earn recognition.",
                "fol": "\u00acp_9(Hailey)",
                "str_fol": "\u00acearn_recognition(Hailey)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_14(x) -> p_6(x))).  [assumption].\n2 p_13(Hailey) -> p_14(Hailey) & p_5(Hailey).  [assumption].\n3 (all x (p_3(x) | p_12(x) -> p_13(x))).  [assumption].\n4 p_11(Hailey) -> -(p_4(Hailey) <-> p_12(Hailey)).  [assumption].\n7 p_7(Hailey) -> p_8(Hailey) & p_9(Hailey).  [assumption].\n8 --p_9(Hailey).  [goal].\n9 -p_14(x) | p_6(x).  [clausify(1)].\n10 -p_6(Hailey).  [assumption].\n11 -p_11(Hailey) | p_4(Hailey) | p_12(Hailey).  [clausify(4)].\n12 -p_4(Hailey).  [assumption].\n18 -p_12(x) | p_13(x).  [clausify(3)].\n19 -p_13(Hailey) | p_14(Hailey).  [clausify(2)].\n21 p_7(Hailey) | p_11(Hailey).  [assumption].\n22 -p_7(Hailey) | p_9(Hailey).  [clausify(7)].\n23 p_9(Hailey) | p_11(Hailey).  [resolve(22,a,21,a)].\n24 -p_9(Hailey).  [deny(8)].\n25 -p_12(Hailey) | p_14(Hailey).  [resolve(18,b,19,a)].\n26 -p_14(Hailey).  [resolve(9,b,10,a)].\n28 -p_11(Hailey) | p_12(Hailey).  [resolve(11,b,12,a)].\n29 p_11(Hailey).  [resolve(23,a,24,a)].\n31 -p_12(Hailey).  [resolve(25,b,26,a)].\n32 p_12(Hailey).  [resolve(29,a,28,a)].\n33 $F.  [resolve(32,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_9(Hailey) \u2192 p_6(Hailey)",
            "Initial Goal": "\u00acp_9(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Hailey)",
                    "p_5(Hailey)",
                    "-p_3(Hailey)",
                    "-p_4(Hailey)",
                    "p_1(Hailey)",
                    "-p_2(Hailey)",
                    "-p_0(Hailey)",
                    "all x (p_14(x) -> p_6(x))",
                    "p_13(Hailey) -> (p_14(Hailey) & p_5(Hailey))",
                    "all x ((p_3(x) | p_12(x)) -> p_13(x))",
                    "p_11(Hailey) -> (-(p_4(Hailey) <-> p_12(Hailey)))",
                    "p_1(Hailey) -> (p_10(Hailey) | p_2(Hailey))",
                    "p_7(Hailey) | p_11(Hailey)",
                    "all x (p_0(x) -> (p_10(x) & p_8(x)))",
                    "p_9(Hailey) -> p_6(Hailey)"
                ],
                "formulas(goals)": [
                    "-p_9(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Hailey) \u2192 (p_8(Hailey) \u2227 p_9(Hailey))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Hailey) \u2192 p_6(Hailey)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_9(Hailey) \u2192 p_6(Hailey)\np_13(Hailey) \u2192 p_6(Hailey)\np_12(Hailey) \u2192 p_13(Hailey)\np_10(Hailey)",
            "Initial Goal": "\u00acp_9(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Hailey)",
                    "p_5(Hailey)",
                    "-p_3(Hailey)",
                    "-p_4(Hailey)",
                    "p_1(Hailey)",
                    "-p_2(Hailey)",
                    "-p_0(Hailey)",
                    "all x (p_14(x) -> p_6(x))",
                    "p_13(Hailey) -> (p_14(Hailey) & p_5(Hailey))",
                    "all x ((p_3(x) | p_12(x)) -> p_13(x))",
                    "p_11(Hailey) -> (-(p_4(Hailey) <-> p_12(Hailey)))",
                    "p_1(Hailey) -> (p_10(Hailey) | p_2(Hailey))",
                    "p_7(Hailey) | p_11(Hailey)",
                    "all x (p_0(x) -> (p_10(x) & p_8(x)))",
                    "p_9(Hailey) -> p_6(Hailey)",
                    "p_13(Hailey) -> p_6(Hailey)",
                    "p_12(Hailey) -> p_13(Hailey)",
                    "p_10(Hailey)"
                ],
                "formulas(goals)": [
                    "-p_9(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Hailey)"
                ],
                "added_rules": [
                    "p_13(Hailey) \u2192 p_6(Hailey)",
                    "p_12(Hailey) \u2192 p_13(Hailey)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_9(Hailey) \u2192 p_6(Hailey)\np_13(Hailey) \u2192 p_6(Hailey)\np_12(Hailey) \u2192 p_13(Hailey)\np_10(Hailey)\n\u00acp_6(Hailey) \u2192 \u00acp_13(Hailey)\np_13(Hailey) \u2192 p_14(Hailey)\np_13(Hailey) \u2192 p_5(Hailey)\np_14(Hailey) \u2192 p_6(Hailey)\np_10(Hailey) \u2228 p_2(Hailey)\np_11(Hailey) \u2192 ((p_4(Hailey) \u2228 p_12(Hailey)) \u2227 \u00ac(p_4(Hailey) \u2227 p_12(Hailey)))\n\u00acp_13(Hailey) \u2192 \u00acp_12(Hailey)\n\u00acp_13(Hailey) \u2192 (\u00acp_3(Hailey) \u2227 \u00acp_12(Hailey))",
            "Initial Goal": "\u00acp_9(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Hailey).",
                    "p_5(Hailey).",
                    "-p_3(Hailey).",
                    "-p_4(Hailey).",
                    "p_1(Hailey).",
                    "-p_2(Hailey).",
                    "-p_0(Hailey).",
                    "(all x (p_14(x) -> p_6(x))).",
                    "(p_13(Hailey) -> (p_14(Hailey) & p_5(Hailey))).",
                    "(all x ((p_3(x) | p_12(x)) -> p_13(x))).",
                    "(p_11(Hailey) -> (-(p_4(Hailey) <-> p_12(Hailey)))).",
                    "(p_1(Hailey) -> (p_10(Hailey) | p_2(Hailey))).",
                    "(p_7(Hailey) | p_11(Hailey)).",
                    "(all x (p_0(x) -> (p_10(x) & p_8(x)))).",
                    "(p_9(Hailey) -> p_6(Hailey)).",
                    "(p_13(Hailey) -> p_6(Hailey)).",
                    "(p_12(Hailey) -> p_13(Hailey)).",
                    "p_10(Hailey).",
                    "(-p_6(Hailey) -> -p_13(Hailey)).",
                    "(p_13(Hailey) -> p_14(Hailey)).",
                    "(p_13(Hailey) -> p_5(Hailey)).",
                    "(p_14(Hailey) -> p_6(Hailey)).",
                    "(p_10(Hailey) | p_2(Hailey)).",
                    "(p_11(Hailey) -> ((p_4(Hailey) | p_12(Hailey)) & (-(p_4(Hailey) & p_12(Hailey))))).",
                    "(-p_13(Hailey) -> -p_12(Hailey)).",
                    "(-p_13(Hailey) -> (-p_3(Hailey) & -p_12(Hailey)))."
                ],
                "formulas(goals)": [
                    "-p_9(Hailey)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Hailey) \u2228 p_2(Hailey)"
                ],
                "added_rules": [
                    "\u00acp_6(Hailey) \u2192 \u00acp_13(Hailey)",
                    "p_13(Hailey) \u2192 p_14(Hailey)",
                    "p_13(Hailey) \u2192 p_5(Hailey)",
                    "p_14(Hailey) \u2192 p_6(Hailey)",
                    "p_11(Hailey) \u2192 ((p_4(Hailey) \u2228 p_12(Hailey)) \u2227 \u00ac(p_4(Hailey) \u2227 p_12(Hailey)))",
                    "\u00acp_13(Hailey) \u2192 \u00acp_12(Hailey)",
                    "\u00acp_13(Hailey) \u2192 (\u00acp_3(Hailey) \u2227 \u00acp_12(Hailey))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_9(Hailey) \u2192 p_6(Hailey)\np_13(Hailey) \u2192 p_6(Hailey)\np_12(Hailey) \u2192 p_13(Hailey)\np_10(Hailey)\n\u00acp_6(Hailey) \u2192 \u00acp_13(Hailey)\np_13(Hailey) \u2192 p_14(Hailey)\np_13(Hailey) \u2192 p_5(Hailey)\np_14(Hailey) \u2192 p_6(Hailey)\np_10(Hailey) \u2228 p_2(Hailey)\np_11(Hailey) \u2192 ((p_4(Hailey) \u2228 p_12(Hailey)) \u2227 \u00ac(p_4(Hailey) \u2227 p_12(Hailey)))\n\u00acp_13(Hailey) \u2192 \u00acp_12(Hailey)\n\u00acp_13(Hailey) \u2192 (\u00acp_3(Hailey) \u2227 \u00acp_12(Hailey))\n\u00acp_13(Hailey) \u2192 \u00acp_3(Hailey)",
            "Initial Goal": "\u00acp_9(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Hailey)",
                    "p_5(Hailey)",
                    "-p_3(Hailey)",
                    "-p_4(Hailey)",
                    "p_1(Hailey)",
                    "-p_2(Hailey)",
                    "-p_0(Hailey)",
                    "all x (p_14(x) -> p_6(x))",
                    "p_13(Hailey) -> (p_14(Hailey) & p_5(Hailey))",
                    "all x ((p_3(x) | p_12(x)) -> p_13(x))",
                    "p_11(Hailey) -> (-(p_4(Hailey) <-> p_12(Hailey)))",
                    "p_1(Hailey) -> (p_10(Hailey) | p_2(Hailey))",
                    "p_7(Hailey) | p_11(Hailey)",
                    "all x (p_0(x) -> (p_10(x) & p_8(x)))",
                    "p_9(Hailey) -> p_6(Hailey)",
                    "p_13(Hailey) -> p_6(Hailey)",
                    "p_12(Hailey) -> p_13(Hailey)",
                    "p_10(Hailey)",
                    "-p_6(Hailey) -> -p_13(Hailey)",
                    "p_13(Hailey) -> p_14(Hailey)",
                    "p_13(Hailey) -> p_5(Hailey)",
                    "p_14(Hailey) -> p_6(Hailey)",
                    "p_10(Hailey) | p_2(Hailey)",
                    "p_11(Hailey) -> ((p_4(Hailey) | p_12(Hailey)) & (-(p_4(Hailey) & p_12(Hailey))))",
                    "-p_13(Hailey) -> -p_12(Hailey)",
                    "-p_13(Hailey) -> (-p_3(Hailey) & -p_12(Hailey))",
                    "-p_13(Hailey) -> -p_3(Hailey)"
                ],
                "formulas(goals)": [
                    "-p_9(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_13(Hailey) \u2192 \u00acp_3(Hailey)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_13(Hailey) \u2192 p_6(Hailey)\np_12(Hailey) \u2192 p_13(Hailey)\np_10(Hailey)\n\u00acp_6(Hailey) \u2192 \u00acp_13(Hailey)\np_13(Hailey) \u2192 p_14(Hailey)\np_13(Hailey) \u2192 p_5(Hailey)\np_14(Hailey) \u2192 p_6(Hailey)\np_10(Hailey) \u2228 p_2(Hailey)\np_11(Hailey) \u2192 ((p_4(Hailey) \u2228 p_12(Hailey)) \u2227 \u00ac(p_4(Hailey) \u2227 p_12(Hailey)))\n\u00acp_13(Hailey) \u2192 \u00acp_12(Hailey)\n\u00acp_13(Hailey) \u2192 (\u00acp_3(Hailey) \u2227 \u00acp_12(Hailey))\n\u00acp_13(Hailey) \u2192 \u00acp_3(Hailey)\np_10(Hailey) \u2192 p_9(Hailey)",
            "Initial Goal": "\u00acp_9(Hailey)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-(p_6(Hailey))",
                    "p_5(Hailey)",
                    "-(p_3(Hailey))",
                    "-(p_4(Hailey))",
                    "p_1(Hailey)",
                    "-(p_2(Hailey))",
                    "-(p_0(Hailey))",
                    "all x (p_14(x) -> p_6(x))",
                    "p_13(Hailey) -> (p_14(Hailey) & p_5(Hailey))",
                    "all x ((p_3(x) | p_12(x)) -> p_13(x))",
                    "p_11(Hailey) -> (-(p_4(Hailey) <-> p_12(Hailey)))",
                    "p_1(Hailey) -> (p_10(Hailey) | p_2(Hailey))",
                    "p_7(Hailey) | p_11(Hailey)",
                    "all x (p_0(x) -> (p_10(x) & p_8(x)))",
                    "p_13(Hailey) -> p_6(Hailey)",
                    "p_12(Hailey) -> p_13(Hailey)",
                    "p_10(Hailey)",
                    "-(p_6(Hailey)) -> -(p_13(Hailey))",
                    "p_13(Hailey) -> p_14(Hailey)",
                    "p_13(Hailey) -> p_5(Hailey)",
                    "p_14(Hailey) -> p_6(Hailey)",
                    "p_10(Hailey) | p_2(Hailey)",
                    "p_11(Hailey) -> ((p_4(Hailey) | p_12(Hailey)) & (-(p_4(Hailey)) | -(p_12(Hailey))))",
                    "-(p_13(Hailey)) -> -(p_12(Hailey))",
                    "-(p_13(Hailey)) -> (-(p_3(Hailey)) & -(p_12(Hailey)))",
                    "-(p_13(Hailey)) -> -(p_3(Hailey))",
                    "p_10(Hailey) -> p_9(Hailey)"
                ],
                "formulas(goals)": [
                    "-(-(p_9(Hailey)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Hailey) \u2192 p_6(Hailey)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Hailey) \u2192 p_9(Hailey)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Hailey)\np_5(Hailey)\n\u00acp_3(Hailey)\n\u00acp_4(Hailey)\np_1(Hailey)\n\u00acp_2(Hailey)\n\u00acp_0(Hailey)\n\u2200x (p_14(x) \u2192 p_6(x))\np_13(Hailey) \u2192 (p_14(Hailey) \u2227 p_5(Hailey))\n\u2200x ((p_3(x) \u2228 p_12(x)) \u2192 p_13(x))\np_11(Hailey) \u2192 (p_4(Hailey) \u2295 p_12(Hailey))\np_1(Hailey) \u2192 (p_10(Hailey) \u2228 p_2(Hailey))\np_7(Hailey) \u2228 p_11(Hailey)\n\u2200x (p_0(x) \u2192 (p_10(x) \u2227 p_8(x)))\np_13(Hailey) \u2192 p_6(Hailey)\np_12(Hailey) \u2192 p_13(Hailey)\np_10(Hailey)\n\u00acp_6(Hailey) \u2192 \u00acp_13(Hailey)\np_13(Hailey) \u2192 p_14(Hailey)\np_13(Hailey) \u2192 p_5(Hailey)\np_14(Hailey) \u2192 p_6(Hailey)\np_10(Hailey) \u2228 p_2(Hailey)\np_11(Hailey) \u2192 ((p_4(Hailey) \u2228 p_12(Hailey)) \u2227 \u00ac(p_4(Hailey) \u2227 p_12(Hailey)))\n\u00acp_13(Hailey) \u2192 \u00acp_12(Hailey)\n\u00acp_13(Hailey) \u2192 (\u00acp_3(Hailey) \u2227 \u00acp_12(Hailey))\n\u00acp_13(Hailey) \u2192 \u00acp_3(Hailey)\np_5(Hailey) \u2192 \u00acp_9(Hailey)",
            "Initial Goal": "\u00acp_9(Hailey)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Hailey)",
                    "p_5(Hailey)",
                    "-p_3(Hailey)",
                    "-p_4(Hailey)",
                    "p_1(Hailey)",
                    "-p_2(Hailey)",
                    "-p_0(Hailey)",
                    "all x (p_14(x) -> p_6(x))",
                    "p_13(Hailey) -> (p_14(Hailey) & p_5(Hailey))",
                    "all x ((p_3(x) | p_12(x)) -> p_13(x))",
                    "p_11(Hailey) -> (-(p_4(Hailey) <-> p_12(Hailey)))",
                    "p_1(Hailey) -> (p_10(Hailey) | p_2(Hailey))",
                    "p_7(Hailey) | p_11(Hailey)",
                    "all x (p_0(x) -> (p_10(x) & p_8(x)))",
                    "p_13(Hailey) -> p_6(Hailey)",
                    "p_12(Hailey) -> p_13(Hailey)",
                    "p_10(Hailey)",
                    "-p_6(Hailey) -> -p_13(Hailey)",
                    "p_13(Hailey) -> p_14(Hailey)",
                    "p_13(Hailey) -> p_5(Hailey)",
                    "p_14(Hailey) -> p_6(Hailey)",
                    "p_10(Hailey) | p_2(Hailey)",
                    "p_11(Hailey) -> ((p_4(Hailey) | p_12(Hailey)) & (-(p_4(Hailey) & p_12(Hailey))))",
                    "-p_13(Hailey) -> -p_12(Hailey)",
                    "-p_13(Hailey) -> (-p_3(Hailey) & -p_12(Hailey))",
                    "-p_13(Hailey) -> -p_3(Hailey)",
                    "p_5(Hailey) -> -p_9(Hailey)"
                ],
                "formulas(goals)": [
                    "-p_9(Hailey)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Hailey) \u2192 p_9(Hailey)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Hailey) \u2192 \u00acp_9(Hailey)"
                ]
            }
        }
    ]
}