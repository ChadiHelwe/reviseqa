{
    "background_story": "Charming was a quaint, picturesque town nestled on the banks of the Mississippi River, near the city of Moline. Founded in the early 19th century, it was a hub for agriculture and trade, with its fertile soil and access to the river making it an ideal location for settlers. The town's name, Charming, was given due to its enchanting landscapes and friendly residents. Over the years, Charming developed a strong sense of community, with annual festivals celebrating its history and the harvest season. Despite its growth, the town retained its charm, with vintage shops, family-owned diners, and a beautiful riverside park that overlooked the Moline skyline. Charming remained a beloved destination for those seeking a tranquil escape from the hustle and bustle of city life.",
    "predicates": [
        {
            "id": 0,
            "name": "has_parks"
        },
        {
            "id": 1,
            "name": "has_landmarks"
        },
        {
            "id": 2,
            "name": "hosts_festivals"
        },
        {
            "id": 3,
            "name": "has_history"
        },
        {
            "id": 4,
            "name": "grows_economy"
        },
        {
            "id": 5,
            "name": "is_popular"
        },
        {
            "id": 6,
            "name": "offers_accommodations"
        },
        {
            "id": 7,
            "name": "quaint_town"
        },
        {
            "id": 8,
            "name": "has_community_events"
        },
        {
            "id": 9,
            "name": "retains_charm"
        },
        {
            "id": 10,
            "name": "is_scenic"
        },
        {
            "id": 11,
            "name": "has_riverside"
        },
        {
            "id": 12,
            "name": "is_beloved"
        },
        {
            "id": 13,
            "name": "attracts_tourists"
        },
        {
            "id": 14,
            "name": "has_hotels"
        },
        {
            "id": 15,
            "name": "founded_early"
        },
        {
            "id": 16,
            "name": "has_vintage_shops"
        },
        {
            "id": 17,
            "name": "holds_parades"
        },
        {
            "id": 18,
            "name": "sponsors_markets"
        },
        {
            "id": 19,
            "name": "has_waterfront"
        },
        {
            "id": 20,
            "name": "has_mountains"
        },
        {
            "id": 21,
            "name": "has_natural_beauty"
        },
        {
            "id": 22,
            "name": "supports_local_business"
        },
        {
            "id": 23,
            "name": "borders_water"
        },
        {
            "id": 24,
            "name": "overlooks_city"
        },
        {
            "id": 25,
            "name": "has_nature"
        },
        {
            "id": 26,
            "name": "has_culture"
        },
        {
            "id": 27,
            "name": "has_shops"
        },
        {
            "id": 28,
            "name": "serves_food"
        }
    ],
    "subject_name": "Charming",
    "subject_category": "place",
    "keyword": "moline",
    "all_facts": [
        {
            "id": 0,
            "subject": "Charming",
            "text": "Charming has parks.",
            "fol": "p_0(Charming)",
            "str_fol": "has_parks(Charming)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Charming",
            "text": "Charming does not have landmarks.",
            "fol": "\u00acp_1(Charming)",
            "str_fol": "\u00achas_landmarks(Charming)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Charming",
            "text": "Charming does not host festivals.",
            "fol": "\u00acp_2(Charming)",
            "str_fol": "\u00achosts_festivals(Charming)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Charming",
            "text": "Charming has history.",
            "fol": "p_3(Charming)",
            "str_fol": "has_history(Charming)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Charming",
            "text": "Charming does not grow its economy.",
            "fol": "\u00acp_4(Charming)",
            "str_fol": "\u00acgrows_economy(Charming)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Charming",
            "text": "Charming is popular.",
            "fol": "p_5(Charming)",
            "str_fol": "is_popular(Charming)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Charming",
            "text": "Charming does not offer accommodations.",
            "fol": "\u00acp_6(Charming)",
            "str_fol": "\u00acoffers_accommodations(Charming)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Charming",
            "text": "Charming has hotels.",
            "fol": "p_14(Charming)",
            "str_fol": "has_hotels(Charming)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Charming",
            "text": "Charming does not attract tourists.",
            "fol": "\u00acp_13(Charming)",
            "str_fol": "\u00acattracts_tourists(Charming)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Charming",
            "text": "Charming is beloved.",
            "fol": "p_12(Charming)",
            "str_fol": "is_beloved(Charming)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Charming",
            "text": "Charming is not scenic.",
            "fol": "\u00acp_10(Charming)",
            "str_fol": "\u00acis_scenic(Charming)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Charming",
            "text": "Charming is a quaint town.",
            "fol": "p_7(Charming)",
            "str_fol": "quaint_town(Charming)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Charming",
            "text": "Charming retains its charm.",
            "fol": "p_9(Charming)",
            "str_fol": "retains_charm(Charming)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Charming",
            "text": "Charming is popular.",
            "fol": "p_5(Charming)",
            "str_fol": "is_popular(Charming)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Charming",
            "text": "Charming does not offer accommodations.",
            "fol": "\u00acp_6(Charming)",
            "str_fol": "\u00acoffers_accommodations(Charming)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Charming",
            "text": "Charming does not grow its economy.",
            "fol": "\u00acp_4(Charming)",
            "str_fol": "\u00acgrows_economy(Charming)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Charming",
            "text": "Charming has history.",
            "fol": "p_3(Charming)",
            "str_fol": "has_history(Charming)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Charming",
            "text": "Charming has parks.",
            "fol": "p_0(Charming)",
            "str_fol": "has_parks(Charming)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Charming",
            "text": "Charming does not host festivals.",
            "fol": "\u00acp_2(Charming)",
            "str_fol": "\u00achosts_festivals(Charming)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Charming",
            "text": "Charming does not have landmarks.",
            "fol": "\u00acp_1(Charming)",
            "str_fol": "\u00achas_landmarks(Charming)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "Every popular place either has hotels or offers accommodations.",
            "fol": "\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (is_popular(x) \u2192 (has_hotels(x) \u2228 offers_accommodations(x)))"
        },
        {
            "id": 6,
            "text": "If a place has hotels and attracts tourists, then it will grow its economy.",
            "fol": "\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_hotels(x) \u2227 attracts_tourists(x)) \u2192 grows_economy(x))"
        },
        {
            "id": 5,
            "text": "Charming has history or a riverside.",
            "fol": "p_3(Charming) \u2228 p_11(Charming)",
            "str_fol": "has_history(Charming) \u2228 has_riverside(Charming)"
        },
        {
            "id": 4,
            "text": "If Charming has parks, then it is either beloved or hosts festivals.",
            "fol": "p_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))",
            "str_fol": "has_parks(Charming) \u2192 (is_beloved(Charming) \u2228 hosts_festivals(Charming))"
        },
        {
            "id": 3,
            "text": "Any place that has landmarks or is scenic will attract tourists.",
            "fol": "\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((has_landmarks(x) \u2228 is_scenic(x)) \u2192 attracts_tourists(x))"
        },
        {
            "id": 2,
            "text": "If Charming has a riverside and has community events, then it is beloved.",
            "fol": "(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)",
            "str_fol": "(has_riverside(Charming) \u2227 has_community_events(Charming)) \u2192 is_beloved(Charming)"
        },
        {
            "id": 1,
            "text": "Charming is either scenic or a quaint town, but not both.",
            "fol": "p_10(Charming) \u2295 p_7(Charming)",
            "str_fol": "is_scenic(Charming) \u2295 quaint_town(Charming)"
        },
        {
            "id": 0,
            "text": "For all places, if a place is a quaint town, then it has community events and retains its charm.",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (quaint_town(x) \u2192 (has_community_events(x) \u2227 retains_charm(x)))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Charming",
            "text": "Charming is popular.",
            "fol": "p_5(Charming)",
            "str_fol": "is_popular(Charming)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Charming",
            "text": "Charming does not offer accommodations.",
            "fol": "\u00acp_6(Charming)",
            "str_fol": "\u00acoffers_accommodations(Charming)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Charming",
            "text": "Charming does not grow its economy.",
            "fol": "\u00acp_4(Charming)",
            "str_fol": "\u00acgrows_economy(Charming)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Charming",
            "text": "Charming has history.",
            "fol": "p_3(Charming)",
            "str_fol": "has_history(Charming)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Charming",
            "text": "Charming has parks.",
            "fol": "p_0(Charming)",
            "str_fol": "has_parks(Charming)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Charming",
            "text": "Charming does not host festivals.",
            "fol": "\u00acp_2(Charming)",
            "str_fol": "\u00achosts_festivals(Charming)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Charming",
            "text": "Charming does not have landmarks.",
            "fol": "\u00acp_1(Charming)",
            "str_fol": "\u00achas_landmarks(Charming)",
            "negation": true
        },
        {
            "id": 7,
            "text": "Every popular place either has hotels or offers accommodations.",
            "fol": "\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (is_popular(x) \u2192 (has_hotels(x) \u2228 offers_accommodations(x)))"
        },
        {
            "id": 6,
            "text": "If a place has hotels and attracts tourists, then it will grow its economy.",
            "fol": "\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((has_hotels(x) \u2227 attracts_tourists(x)) \u2192 grows_economy(x))"
        },
        {
            "id": 5,
            "text": "Charming has history or a riverside.",
            "fol": "p_3(Charming) \u2228 p_11(Charming)",
            "str_fol": "has_history(Charming) \u2228 has_riverside(Charming)"
        },
        {
            "id": 4,
            "text": "If Charming has parks, then it is either beloved or hosts festivals.",
            "fol": "p_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))",
            "str_fol": "has_parks(Charming) \u2192 (is_beloved(Charming) \u2228 hosts_festivals(Charming))"
        },
        {
            "id": 3,
            "text": "Any place that has landmarks or is scenic will attract tourists.",
            "fol": "\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((has_landmarks(x) \u2228 is_scenic(x)) \u2192 attracts_tourists(x))"
        },
        {
            "id": 2,
            "text": "If Charming has a riverside and has community events, then it is beloved.",
            "fol": "(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)",
            "str_fol": "(has_riverside(Charming) \u2227 has_community_events(Charming)) \u2192 is_beloved(Charming)"
        },
        {
            "id": 1,
            "text": "Charming is either scenic or a quaint town, but not both.",
            "fol": "p_10(Charming) \u2295 p_7(Charming)",
            "str_fol": "is_scenic(Charming) \u2295 quaint_town(Charming)"
        },
        {
            "id": 0,
            "text": "For all places, if a place is a quaint town, then it has community events and retains its charm.",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (quaint_town(x) \u2192 (has_community_events(x) \u2227 retains_charm(x)))"
        }
    ],
    "context_fol": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\np_10(Charming) \u2295 p_7(Charming)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
    "conclusion": {
        "id": 12,
        "subject": "Charming",
        "text": "Charming retains its charm.",
        "fol": "p_9(Charming)",
        "str_fol": "retains_charm(Charming)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_9(Charming)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Charming",
                    "text": "Charming is popular.",
                    "fol": "p_5(Charming)",
                    "str_fol": "is_popular(Charming)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Charming",
                    "text": "Charming does not offer accommodations.",
                    "fol": "\u00acp_6(Charming)",
                    "str_fol": "\u00acoffers_accommodations(Charming)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Every popular place either has hotels or offers accommodations.",
                    "fol": "\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))",
                    "str_fol": "\u2200x (is_popular(x) \u2192 (has_hotels(x) \u2228 offers_accommodations(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Charming",
                "text": "Charming has hotels.",
                "fol": "p_14(Charming)",
                "str_fol": "has_hotels(Charming)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Charming",
                    "text": "Charming has hotels.",
                    "fol": "p_14(Charming)",
                    "str_fol": "has_hotels(Charming)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Charming",
                    "text": "Charming does not grow its economy.",
                    "fol": "\u00acp_4(Charming)",
                    "str_fol": "\u00acgrows_economy(Charming)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If a place has hotels and attracts tourists, then it will grow its economy.",
                    "fol": "\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))",
                    "str_fol": "\u2200x ((has_hotels(x) \u2227 attracts_tourists(x)) \u2192 grows_economy(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Charming",
                "text": "Charming does not attract tourists.",
                "fol": "\u00acp_13(Charming)",
                "str_fol": "\u00acattracts_tourists(Charming)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Charming",
                    "text": "Charming has history.",
                    "fol": "p_3(Charming)",
                    "str_fol": "has_history(Charming)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Charming has history or a riverside.",
                    "fol": "p_3(Charming) \u2228 p_11(Charming)",
                    "str_fol": "has_history(Charming) \u2228 has_riverside(Charming)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Charming",
                    "text": "Charming has parks.",
                    "fol": "p_0(Charming)",
                    "str_fol": "has_parks(Charming)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Charming",
                    "text": "Charming does not host festivals.",
                    "fol": "\u00acp_2(Charming)",
                    "str_fol": "\u00achosts_festivals(Charming)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Charming has parks, then it is either beloved or hosts festivals.",
                    "fol": "p_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))",
                    "str_fol": "has_parks(Charming) \u2192 (is_beloved(Charming) \u2228 hosts_festivals(Charming))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Charming",
                "text": "Charming is beloved.",
                "fol": "p_12(Charming)",
                "str_fol": "is_beloved(Charming)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Charming",
                    "text": "Charming does not have landmarks.",
                    "fol": "\u00acp_1(Charming)",
                    "str_fol": "\u00achas_landmarks(Charming)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Charming",
                    "text": "Charming does not attract tourists.",
                    "fol": "\u00acp_13(Charming)",
                    "str_fol": "\u00acattracts_tourists(Charming)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Any place that has landmarks or is scenic will attract tourists.",
                    "fol": "\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((has_landmarks(x) \u2228 is_scenic(x)) \u2192 attracts_tourists(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Charming",
                "text": "Charming is not scenic.",
                "fol": "\u00acp_10(Charming)",
                "str_fol": "\u00acis_scenic(Charming)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Charming",
                    "text": "Charming is beloved.",
                    "fol": "p_12(Charming)",
                    "str_fol": "is_beloved(Charming)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Charming has a riverside and has community events, then it is beloved.",
                    "fol": "(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)",
                    "str_fol": "(has_riverside(Charming) \u2227 has_community_events(Charming)) \u2192 is_beloved(Charming)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Charming",
                    "text": "Charming is not scenic.",
                    "fol": "\u00acp_10(Charming)",
                    "str_fol": "\u00acis_scenic(Charming)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Charming is either scenic or a quaint town, but not both.",
                    "fol": "p_10(Charming) \u2295 p_7(Charming)",
                    "str_fol": "is_scenic(Charming) \u2295 quaint_town(Charming)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Charming",
                "text": "Charming is a quaint town.",
                "fol": "p_7(Charming)",
                "str_fol": "quaint_town(Charming)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Charming",
                    "text": "Charming is a quaint town.",
                    "fol": "p_7(Charming)",
                    "str_fol": "quaint_town(Charming)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all places, if a place is a quaint town, then it has community events and retains its charm.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
                    "str_fol": "\u2200x (quaint_town(x) \u2192 (has_community_events(x) \u2227 retains_charm(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Charming",
                "text": "Charming retains its charm.",
                "fol": "p_9(Charming)",
                "str_fol": "retains_charm(Charming)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_5(x) -> p_14(x) | p_6(x))).  [assumption].\n2 (all x (p_14(x) & p_13(x) -> p_4(x))).  [assumption].\n4 (all x (p_1(x) | p_10(x) -> p_13(x))).  [assumption].\n6 -(p_10(Charming) <-> p_7(Charming)).  [assumption].\n7 (all x (p_7(x) -> p_8(x) & p_9(x))).  [assumption].\n8 p_9(Charming).  [goal].\n9 -p_5(x) | p_14(x) | p_6(x).  [clausify(1)].\n10 p_5(Charming).  [assumption].\n11 p_14(Charming) | p_6(Charming).  [resolve(9,a,10,a)].\n12 -p_6(Charming).  [assumption].\n13 -p_14(x) | -p_13(x) | p_4(x).  [clausify(2)].\n14 -p_4(Charming).  [assumption].\n19 p_10(Charming) | p_7(Charming).  [clausify(6)].\n20 -p_10(x) | p_13(x).  [clausify(4)].\n22 p_7(Charming) | p_13(Charming).  [resolve(19,a,20,a)].\n24 -p_7(x) | p_9(x).  [clausify(7)].\n25 p_13(Charming) | p_9(Charming).  [resolve(22,a,24,a)].\n26 -p_9(Charming).  [deny(8)].\n27 -p_14(Charming) | -p_13(Charming).  [resolve(13,c,14,a)].\n28 p_14(Charming).  [resolve(11,b,12,a)].\n29 -p_13(Charming).  [resolve(27,a,28,a)].\n31 p_13(Charming).  [resolve(25,b,26,a)].\n32 $F.  [resolve(29,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\np_10(Charming) \u2295 p_7(Charming)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_14(Charming) \u2228 p_6(Charming)\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\n\u2200x (\u00acp_7(x) \u2228 p_9(x))",
            "Initial Goal": "p_9(Charming)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming).",
                    "-p_6(Charming).",
                    "-p_4(Charming).",
                    "p_3(Charming).",
                    "p_0(Charming).",
                    "-p_2(Charming).",
                    "-p_1(Charming).",
                    "all x (p_5(x) -> (p_14(x) | p_6(x))).",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x)).",
                    "p_3(Charming) | p_11(Charming).",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming)).",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x)).",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming).",
                    "-(p_10(Charming) <-> p_7(Charming)).",
                    "all x (p_7(x) -> (p_8(x) & p_9(x))).",
                    "p_14(Charming) | p_6(Charming).",
                    "all x (-p_7(x) | p_8(x)).",
                    "all x (-p_7(x) | p_9(x))."
                ],
                "formulas(goals)": [
                    "p_9(Charming)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Charming) \u2228 p_6(Charming)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_7(x) \u2228 p_8(x))",
                    "\u2200x (\u00acp_7(x) \u2228 p_9(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\np_10(Charming) \u2295 p_7(Charming)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))\np_14(Charming) \u2228 p_6(Charming)\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\n\u2200x (\u00acp_7(x) \u2228 p_9(x))\np_14(Charming)\n\u00acp_10(Charming)",
            "Initial Goal": "p_9(Charming)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming)",
                    "-p_6(Charming)",
                    "-p_4(Charming)",
                    "p_3(Charming)",
                    "p_0(Charming)",
                    "-p_2(Charming)",
                    "-p_1(Charming)",
                    "all x (p_5(x) -> (p_14(x) | p_6(x)))",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x))",
                    "p_3(Charming) | p_11(Charming)",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming))",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x))",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming)",
                    "-(p_10(Charming) <-> p_7(Charming))",
                    "all x (p_7(x) -> (p_8(x) & p_9(x)))",
                    "p_14(Charming) | p_6(Charming)",
                    "all x (-p_7(x) | p_8(x))",
                    "all x (-p_7(x) | p_9(x))",
                    "p_14(Charming)",
                    "-p_10(Charming)"
                ],
                "formulas(goals)": [
                    "p_9(Charming)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_14(Charming)",
                    "\u00acp_10(Charming)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\np_10(Charming) \u2295 p_7(Charming)\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\np_14(Charming) \u2228 p_6(Charming)\np_14(Charming)\n\u00acp_10(Charming)\n\u2200x (p_7(x) \u2192 \u00acp_9(x))",
            "Initial Goal": "p_9(Charming)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming)",
                    "-p_6(Charming)",
                    "-p_4(Charming)",
                    "p_3(Charming)",
                    "p_0(Charming)",
                    "-p_2(Charming)",
                    "-p_1(Charming)",
                    "all x (p_5(x) -> (p_14(x) | p_6(x)))",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x))",
                    "p_3(Charming) | p_11(Charming)",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming))",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x))",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming)",
                    "-(p_10(Charming) <-> p_7(Charming))",
                    "all x (-p_7(x) | p_8(x))",
                    "p_14(Charming) | p_6(Charming)",
                    "p_14(Charming)",
                    "-p_10(Charming)",
                    "all x (p_7(x) -> -p_9(x))"
                ],
                "formulas(goals)": [
                    "-p_9(Charming)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_7(x) \u2192 (p_8(x) \u2227 p_9(x)))",
                    "\u2200x (\u00acp_7(x) \u2228 p_9(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_7(x) \u2192 \u00acp_9(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\np_10(Charming) \u2295 p_7(Charming)\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\np_14(Charming) \u2228 p_6(Charming)\np_14(Charming)\n\u00acp_10(Charming)\n\u2200x (p_7(x) \u2192 \u00acp_9(x))\np_7(Charming)\n\u2200x (p_9(x) \u2192 \u00acp_7(x))",
            "Initial Goal": "p_9(Charming)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming)",
                    "-p_6(Charming)",
                    "-p_4(Charming)",
                    "p_3(Charming)",
                    "p_0(Charming)",
                    "-p_2(Charming)",
                    "-p_1(Charming)",
                    "all x (p_5(x) -> (p_14(x) | p_6(x)))",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x))",
                    "p_3(Charming) | p_11(Charming)",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming))",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x))",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming)",
                    "-(p_10(Charming) <-> p_7(Charming))",
                    "all x (-p_7(x) | p_8(x))",
                    "p_14(Charming) | p_6(Charming)",
                    "p_14(Charming)",
                    "-p_10(Charming)",
                    "all x (p_7(x) -> -p_9(x))",
                    "p_7(Charming)",
                    "all x (p_9(x) -> -p_7(x))"
                ],
                "formulas(goals)": [
                    "-p_9(Charming)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Charming)"
                ],
                "added_rules": [
                    "\u2200x (p_9(x) \u2192 \u00acp_7(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\n(p_10(Charming) \u2227 \u00acp_7(Charming)) \u2228 (\u00acp_10(Charming) \u2227 p_7(Charming))\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\np_14(Charming) \u2228 p_6(Charming)\np_14(Charming)\n\u00acp_10(Charming)\np_7(Charming)\n\u2200x (p_12(x) \u2192 p_9(x))",
            "Initial Goal": "p_9(Charming)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming)",
                    "-p_6(Charming)",
                    "-p_4(Charming)",
                    "p_3(Charming)",
                    "p_0(Charming)",
                    "-p_2(Charming)",
                    "-p_1(Charming)",
                    "all x (p_5(x) -> (p_14(x) | p_6(x)))",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x))",
                    "p_3(Charming) | p_11(Charming)",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming))",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x))",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming)",
                    "(p_10(Charming) & -p_7(Charming)) | (-p_10(Charming) & p_7(Charming))",
                    "all x (-p_7(x) | p_8(x))",
                    "p_14(Charming) | p_6(Charming)",
                    "p_14(Charming)",
                    "-p_10(Charming)",
                    "p_7(Charming)",
                    "all x (p_12(x) -> p_9(x))"
                ],
                "formulas(goals)": [
                    "p_9(Charming)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_7(x) \u2192 \u00acp_9(x))",
                    "\u2200x (p_9(x) \u2192 \u00acp_7(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_12(x) \u2192 p_9(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\n(p_10(Charming) \u2227 \u00acp_7(Charming)) \u2228 (\u00acp_10(Charming) \u2227 p_7(Charming))\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\np_14(Charming) \u2228 p_6(Charming)\np_14(Charming)\n\u00acp_10(Charming)\np_7(Charming)\np_7(Charming) \u2192 \u00acp_9(Charming)",
            "Initial Goal": "p_9(Charming)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming).",
                    "-p_6(Charming).",
                    "-p_4(Charming).",
                    "p_3(Charming).",
                    "p_0(Charming).",
                    "-p_2(Charming).",
                    "-p_1(Charming).",
                    "all x (p_5(x) -> (p_14(x) | p_6(x))).",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x)).",
                    "p_3(Charming) | p_11(Charming).",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming)).",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x)).",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming).",
                    "(p_10(Charming) & -p_7(Charming)) | (-p_10(Charming) & p_7(Charming)).",
                    "all x (-p_7(x) | p_8(x)).",
                    "p_14(Charming) | p_6(Charming).",
                    "p_14(Charming).",
                    "-p_10(Charming).",
                    "p_7(Charming).",
                    "p_7(Charming) -> -p_9(Charming)."
                ],
                "formulas(goals)": [
                    "-p_9(Charming)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_12(x) \u2192 p_9(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Charming) \u2192 \u00acp_9(Charming)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Charming)\n\u00acp_6(Charming)\n\u00acp_4(Charming)\np_3(Charming)\np_0(Charming)\n\u00acp_2(Charming)\n\u00acp_1(Charming)\n\u2200x ((p_5(x) \u2227 \u00acp_14(x)) \u2192 p_6(x))\n\u2200x ((p_14(x) \u2227 p_13(x)) \u2192 p_4(x))\np_3(Charming) \u2228 p_11(Charming)\np_0(Charming) \u2192 (p_12(Charming) \u2228 p_2(Charming))\n\u2200x ((p_1(x) \u2228 p_10(x)) \u2192 p_13(x))\n(p_11(Charming) \u2227 p_8(Charming)) \u2192 p_12(Charming)\n(p_10(Charming) \u2227 \u00acp_7(Charming)) \u2228 (\u00acp_10(Charming) \u2227 p_7(Charming))\n\u2200x (\u00acp_7(x) \u2228 p_8(x))\np_14(Charming) \u2228 p_6(Charming)\np_14(Charming)\n\u00acp_10(Charming)\np_7(Charming)\np_7(Charming) \u2192 \u00acp_9(Charming)\np_8(Charming)\np_9(Charming) \u2192 \u00acp_7(Charming)",
            "Initial Goal": "p_9(Charming)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Charming)",
                    "-p_6(Charming)",
                    "-p_4(Charming)",
                    "p_3(Charming)",
                    "p_0(Charming)",
                    "-p_2(Charming)",
                    "-p_1(Charming)",
                    "all x ((p_5(x) & -p_14(x)) -> p_6(x))",
                    "all x ((p_14(x) & p_13(x)) -> p_4(x))",
                    "p_3(Charming) | p_11(Charming)",
                    "p_0(Charming) -> (p_12(Charming) | p_2(Charming))",
                    "all x ((p_1(x) | p_10(x)) -> p_13(x))",
                    "(p_11(Charming) & p_8(Charming)) -> p_12(Charming)",
                    "(p_10(Charming) & -p_7(Charming)) | (-p_10(Charming) & p_7(Charming))",
                    "all x (-p_7(x) | p_8(x))",
                    "p_14(Charming) | p_6(Charming)",
                    "p_14(Charming)",
                    "-p_10(Charming)",
                    "p_7(Charming)",
                    "p_7(Charming) -> -p_9(Charming)",
                    "p_8(Charming)",
                    "p_9(Charming) -> -p_7(Charming)"
                ],
                "formulas(goals)": [
                    "-p_9(Charming)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2192 (p_14(x) \u2228 p_6(x)))"
                ],
                "added_facts": [
                    "p_8(Charming)"
                ],
                "added_rules": [
                    "\u2200x ((p_5(x) \u2227 \u00acp_14(x)) \u2192 p_6(x))",
                    "p_9(Charming) \u2192 \u00acp_7(Charming)"
                ]
            }
        }
    ]
}