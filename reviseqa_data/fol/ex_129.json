{
    "background_story": "Augustus was a brilliant pharmacist who dedicated his life to finding the perfect dose of medicine to cure the most debilitating diseases. Growing up, he watched his mother suffer from a chronic illness, and the experience fueled his passion for pharmacology. After years of research, Augustus developed a groundbreaking formula that required a precise dose to be effective. His discovery revolutionized the treatment of the disease, and soon his medication was in high demand. Augustus's attention to detail and commitment to finding the optimal dose earned him international recognition, and he became known as a leading expert in his field. His work improved the lives of countless people, and he continued to refine his craft, always seeking the perfect dose to heal and protect.",
    "predicates": [
        {
            "id": 0,
            "name": "gets_treatment"
        },
        {
            "id": 1,
            "name": "has_medication"
        },
        {
            "id": 2,
            "name": "rests_well"
        },
        {
            "id": 3,
            "name": "takes_correct_dose"
        },
        {
            "id": 4,
            "name": "recovers_from_illness"
        },
        {
            "id": 5,
            "name": "has_proper_diagnosis"
        },
        {
            "id": 6,
            "name": "seeks_medical_help"
        },
        {
            "id": 7,
            "name": "needs_care"
        },
        {
            "id": 8,
            "name": "feels_better"
        },
        {
            "id": 9,
            "name": "reads_label"
        },
        {
            "id": 10,
            "name": "follows_instructions"
        },
        {
            "id": 11,
            "name": "follows_treatment"
        },
        {
            "id": 12,
            "name": "monitors_progress"
        },
        {
            "id": 13,
            "name": "feels_unwell"
        },
        {
            "id": 14,
            "name": "has_symptoms"
        },
        {
            "id": 15,
            "name": "is_ill"
        },
        {
            "id": 16,
            "name": "is_injured"
        },
        {
            "id": 17,
            "name": "eats_well"
        },
        {
            "id": 18,
            "name": "exercises_regularly"
        }
    ],
    "subject_name": "Augustus",
    "subject_category": "human",
    "keyword": "dose",
    "all_facts": [
        {
            "id": 0,
            "subject": "Augustus",
            "text": "Augustus does not get treatment.",
            "fol": "\u00acp_0(Augustus)",
            "str_fol": "\u00acgets_treatment(Augustus)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Augustus",
            "text": "Augustus does not have medication.",
            "fol": "\u00acp_1(Augustus)",
            "str_fol": "\u00achas_medication(Augustus)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Augustus",
            "text": "Augustus rests well.",
            "fol": "p_2(Augustus)",
            "str_fol": "rests_well(Augustus)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Augustus",
            "text": "Augustus does not feel better.",
            "fol": "\u00acp_8(Augustus)",
            "str_fol": "\u00acfeels_better(Augustus)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Augustus",
            "text": "Augustus does not need care.",
            "fol": "\u00acp_7(Augustus)",
            "str_fol": "\u00acneeds_care(Augustus)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Augustus",
            "text": "Augustus seeks medical help.",
            "fol": "p_6(Augustus)",
            "str_fol": "seeks_medical_help(Augustus)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Augustus",
            "text": "Augustus does not have a proper diagnosis.",
            "fol": "\u00acp_5(Augustus)",
            "str_fol": "\u00achas_proper_diagnosis(Augustus)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Augustus",
            "text": "Augustus takes the correct dose.",
            "fol": "p_3(Augustus)",
            "str_fol": "takes_correct_dose(Augustus)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Augustus",
            "text": "Augustus recovers from illness.",
            "fol": "p_4(Augustus)",
            "str_fol": "recovers_from_illness(Augustus)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 1,
            "subject": "Augustus",
            "text": "Augustus does not have medication.",
            "fol": "\u00acp_1(Augustus)",
            "str_fol": "\u00achas_medication(Augustus)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Augustus",
            "text": "Augustus rests well.",
            "fol": "p_2(Augustus)",
            "str_fol": "rests_well(Augustus)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Augustus",
            "text": "Augustus does not get treatment.",
            "fol": "\u00acp_0(Augustus)",
            "str_fol": "\u00acgets_treatment(Augustus)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Augustus's patients feel better, then they have medication and rest well.",
            "fol": "p_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))",
            "str_fol": "feels_better(Augustus) \u2192 (has_medication(Augustus) \u2227 rests_well(Augustus))"
        },
        {
            "id": 4,
            "text": "If Augustus's patients need care, then they will feel better.",
            "fol": "p_7(Augustus) \u2192 p_8(Augustus)",
            "str_fol": "needs_care(Augustus) \u2192 feels_better(Augustus)"
        },
        {
            "id": 3,
            "text": "Augustus's patients either need care or seek medical help.",
            "fol": "p_7(Augustus) \u2228 p_6(Augustus)",
            "str_fol": "needs_care(Augustus) \u2228 seeks_medical_help(Augustus)"
        },
        {
            "id": 2,
            "text": "For all people, if they have a proper diagnosis and seek medical help, then they get treatment.",
            "fol": "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((has_proper_diagnosis(x) \u2227 seeks_medical_help(x)) \u2192 gets_treatment(x))"
        },
        {
            "id": 1,
            "text": "For Augustus's patients, either they take the correct dose of medication or they have a proper diagnosis, but not both at the same time.",
            "fol": "p_3(Augustus) \u2295 p_5(Augustus)",
            "str_fol": "takes_correct_dose(Augustus) \u2295 has_proper_diagnosis(Augustus)"
        },
        {
            "id": 0,
            "text": "If Augustus's patients take the correct dose, then they recover from illness.",
            "fol": "p_3(Augustus) \u2192 p_4(Augustus)",
            "str_fol": "takes_correct_dose(Augustus) \u2192 recovers_from_illness(Augustus)"
        }
    ],
    "context": [
        {
            "id": 1,
            "subject": "Augustus",
            "text": "Augustus does not have medication.",
            "fol": "\u00acp_1(Augustus)",
            "str_fol": "\u00achas_medication(Augustus)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Augustus",
            "text": "Augustus rests well.",
            "fol": "p_2(Augustus)",
            "str_fol": "rests_well(Augustus)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Augustus",
            "text": "Augustus does not get treatment.",
            "fol": "\u00acp_0(Augustus)",
            "str_fol": "\u00acgets_treatment(Augustus)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Augustus's patients feel better, then they have medication and rest well.",
            "fol": "p_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))",
            "str_fol": "feels_better(Augustus) \u2192 (has_medication(Augustus) \u2227 rests_well(Augustus))"
        },
        {
            "id": 4,
            "text": "If Augustus's patients need care, then they will feel better.",
            "fol": "p_7(Augustus) \u2192 p_8(Augustus)",
            "str_fol": "needs_care(Augustus) \u2192 feels_better(Augustus)"
        },
        {
            "id": 3,
            "text": "Augustus's patients either need care or seek medical help.",
            "fol": "p_7(Augustus) \u2228 p_6(Augustus)",
            "str_fol": "needs_care(Augustus) \u2228 seeks_medical_help(Augustus)"
        },
        {
            "id": 2,
            "text": "For all people, if they have a proper diagnosis and seek medical help, then they get treatment.",
            "fol": "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))",
            "str_fol": "\u2200x ((has_proper_diagnosis(x) \u2227 seeks_medical_help(x)) \u2192 gets_treatment(x))"
        },
        {
            "id": 1,
            "text": "For Augustus's patients, either they take the correct dose of medication or they have a proper diagnosis, but not both at the same time.",
            "fol": "p_3(Augustus) \u2295 p_5(Augustus)",
            "str_fol": "takes_correct_dose(Augustus) \u2295 has_proper_diagnosis(Augustus)"
        },
        {
            "id": 0,
            "text": "If Augustus's patients take the correct dose, then they recover from illness.",
            "fol": "p_3(Augustus) \u2192 p_4(Augustus)",
            "str_fol": "takes_correct_dose(Augustus) \u2192 recovers_from_illness(Augustus)"
        }
    ],
    "context_fol": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\np_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))\np_7(Augustus) \u2192 p_8(Augustus)\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))\np_3(Augustus) \u2295 p_5(Augustus)\np_3(Augustus) \u2192 p_4(Augustus)",
    "conclusion": {
        "id": 8,
        "subject": "Augustus",
        "text": "Augustus recovers from illness.",
        "fol": "p_4(Augustus)",
        "str_fol": "recovers_from_illness(Augustus)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_4(Augustus)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Augustus",
                    "text": "Augustus does not have medication.",
                    "fol": "\u00acp_1(Augustus)",
                    "str_fol": "\u00achas_medication(Augustus)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Augustus",
                    "text": "Augustus rests well.",
                    "fol": "p_2(Augustus)",
                    "str_fol": "rests_well(Augustus)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Augustus's patients feel better, then they have medication and rest well.",
                    "fol": "p_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))",
                    "str_fol": "feels_better(Augustus) \u2192 (has_medication(Augustus) \u2227 rests_well(Augustus))"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Augustus",
                "text": "Augustus does not feel better.",
                "fol": "\u00acp_8(Augustus)",
                "str_fol": "\u00acfeels_better(Augustus)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Augustus",
                    "text": "Augustus does not feel better.",
                    "fol": "\u00acp_8(Augustus)",
                    "str_fol": "\u00acfeels_better(Augustus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Augustus's patients need care, then they will feel better.",
                    "fol": "p_7(Augustus) \u2192 p_8(Augustus)",
                    "str_fol": "needs_care(Augustus) \u2192 feels_better(Augustus)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Augustus",
                "text": "Augustus does not need care.",
                "fol": "\u00acp_7(Augustus)",
                "str_fol": "\u00acneeds_care(Augustus)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Augustus",
                    "text": "Augustus does not need care.",
                    "fol": "\u00acp_7(Augustus)",
                    "str_fol": "\u00acneeds_care(Augustus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Augustus's patients either need care or seek medical help.",
                    "fol": "p_7(Augustus) \u2228 p_6(Augustus)",
                    "str_fol": "needs_care(Augustus) \u2228 seeks_medical_help(Augustus)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Augustus",
                "text": "Augustus seeks medical help.",
                "fol": "p_6(Augustus)",
                "str_fol": "seeks_medical_help(Augustus)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Augustus",
                    "text": "Augustus seeks medical help.",
                    "fol": "p_6(Augustus)",
                    "str_fol": "seeks_medical_help(Augustus)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Augustus",
                    "text": "Augustus does not get treatment.",
                    "fol": "\u00acp_0(Augustus)",
                    "str_fol": "\u00acgets_treatment(Augustus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For all people, if they have a proper diagnosis and seek medical help, then they get treatment.",
                    "fol": "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((has_proper_diagnosis(x) \u2227 seeks_medical_help(x)) \u2192 gets_treatment(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Augustus",
                "text": "Augustus does not have a proper diagnosis.",
                "fol": "\u00acp_5(Augustus)",
                "str_fol": "\u00achas_proper_diagnosis(Augustus)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Augustus",
                    "text": "Augustus does not have a proper diagnosis.",
                    "fol": "\u00acp_5(Augustus)",
                    "str_fol": "\u00achas_proper_diagnosis(Augustus)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "For Augustus's patients, either they take the correct dose of medication or they have a proper diagnosis, but not both at the same time.",
                    "fol": "p_3(Augustus) \u2295 p_5(Augustus)",
                    "str_fol": "takes_correct_dose(Augustus) \u2295 has_proper_diagnosis(Augustus)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Augustus",
                "text": "Augustus takes the correct dose.",
                "fol": "p_3(Augustus)",
                "str_fol": "takes_correct_dose(Augustus)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Augustus",
                    "text": "Augustus takes the correct dose.",
                    "fol": "p_3(Augustus)",
                    "str_fol": "takes_correct_dose(Augustus)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Augustus's patients take the correct dose, then they recover from illness.",
                    "fol": "p_3(Augustus) \u2192 p_4(Augustus)",
                    "str_fol": "takes_correct_dose(Augustus) \u2192 recovers_from_illness(Augustus)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Augustus",
                "text": "Augustus recovers from illness.",
                "fol": "p_4(Augustus)",
                "str_fol": "recovers_from_illness(Augustus)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_8(Augustus) -> p_1(Augustus) & p_2(Augustus).  [assumption].\n2 p_7(Augustus) -> p_8(Augustus).  [assumption].\n3 (all x (p_5(x) & p_6(x) -> p_0(x))).  [assumption].\n4 -(p_3(Augustus) <-> p_5(Augustus)).  [assumption].\n5 p_3(Augustus) -> p_4(Augustus).  [assumption].\n6 p_4(Augustus).  [goal].\n7 -p_8(Augustus) | p_1(Augustus).  [clausify(1)].\n8 -p_1(Augustus).  [assumption].\n9 -p_5(x) | -p_6(x) | p_0(x).  [clausify(3)].\n10 -p_0(Augustus).  [assumption].\n11 p_7(Augustus) | p_6(Augustus).  [assumption].\n12 -p_7(Augustus) | p_8(Augustus).  [clausify(2)].\n14 p_3(Augustus) | p_5(Augustus).  [clausify(4)].\n15 -p_3(Augustus) | p_4(Augustus).  [clausify(5)].\n16 p_4(Augustus) | p_5(Augustus).  [resolve(15,a,14,a)].\n17 -p_4(Augustus).  [deny(6)].\n18 p_6(Augustus) | p_8(Augustus).  [resolve(11,a,12,a)].\n19 -p_8(Augustus).  [resolve(7,b,8,a)].\n20 p_5(Augustus).  [resolve(16,a,17,a)].\n21 -p_5(Augustus) | -p_6(Augustus).  [resolve(9,c,10,a)].\n22 -p_6(Augustus).  [resolve(20,a,21,a)].\n23 p_6(Augustus).  [resolve(18,b,19,a)].\n24 $F.  [resolve(22,a,23,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\n(p_8(Augustus) \u2192 p_1(Augustus)) \u2227 (p_8(Augustus) \u2192 p_2(Augustus))\n(\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus))\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus) \u2192 p_4(Augustus)\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Augustus)",
                    "p_2(Augustus)",
                    "-p_0(Augustus)",
                    "(p_8(Augustus) -> p_1(Augustus)) & (p_8(Augustus) -> p_2(Augustus))",
                    "(-p_8(Augustus) -> -p_7(Augustus))",
                    "p_7(Augustus) | p_6(Augustus)",
                    "all x ((p_5(x) & p_6(x)) -> p_0(x))",
                    "(p_3(Augustus) | p_5(Augustus)) & (-p_3(Augustus) | -p_5(Augustus))",
                    "p_3(Augustus) -> p_4(Augustus)",
                    "p_3(Augustus)",
                    "-p_5(Augustus)",
                    "p_6(Augustus)"
                ],
                "formulas(goals)": [
                    "p_4(Augustus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))",
                    "p_7(Augustus) \u2192 p_8(Augustus)",
                    "p_3(Augustus) \u2295 p_5(Augustus)"
                ],
                "added_facts": [
                    "p_3(Augustus)",
                    "\u00acp_5(Augustus)",
                    "p_6(Augustus)"
                ],
                "added_rules": [
                    "(p_8(Augustus) \u2192 p_1(Augustus)) \u2227 (p_8(Augustus) \u2192 p_2(Augustus))",
                    "\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus)",
                    "(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\n(p_8(Augustus) \u2192 p_1(Augustus)) \u2227 (p_8(Augustus) \u2192 p_2(Augustus))\n(\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus))\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)\n(p_6(Augustus) \u2192 \u00acp_4(Augustus))",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_1(Augustus)",
                    "p_2(Augustus)",
                    "\u00acp_0(Augustus)",
                    "(p_8(Augustus) -> p_1(Augustus)) & (p_8(Augustus) -> p_2(Augustus))",
                    "(\u00acp_8(Augustus) -> \u00acp_7(Augustus))",
                    "p_7(Augustus) | p_6(Augustus)",
                    "all x ((p_5(x) & p_6(x)) -> p_0(x))",
                    "(p_3(Augustus) | p_5(Augustus)) & (\u00acp_3(Augustus) | \u00acp_5(Augustus))",
                    "p_3(Augustus)",
                    "\u00acp_5(Augustus)",
                    "p_6(Augustus)",
                    "(p_6(Augustus) -> \u00acp_4(Augustus))"
                ],
                "formulas(goals)": [
                    "\u00acp_4(Augustus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Augustus) \u2192 p_4(Augustus)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Augustus) \u2192 \u00acp_4(Augustus))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\n(p_8(Augustus) \u2192 p_1(Augustus)) \u2227 (p_8(Augustus) \u2192 p_2(Augustus))\n(\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus))\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)\n(p_6(Augustus) \u2192 p_4(Augustus))",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Augustus).",
                    "p_2(Augustus).",
                    "-p_0(Augustus).",
                    "(p_8(Augustus) -> p_1(Augustus)) & (p_8(Augustus) -> p_2(Augustus)).",
                    "(-p_8(Augustus) -> -p_7(Augustus)).",
                    "p_7(Augustus) | p_6(Augustus).",
                    "(all x ((p_5(x) & p_6(x)) -> p_0(x))).",
                    "(p_3(Augustus) | p_5(Augustus)) & (-p_3(Augustus) | -p_5(Augustus)).",
                    "p_3(Augustus).",
                    "-p_5(Augustus).",
                    "p_6(Augustus).",
                    "(p_6(Augustus) -> p_4(Augustus))."
                ],
                "formulas(goals)": [
                    "p_4(Augustus)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Augustus) \u2192 \u00acp_4(Augustus))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Augustus) \u2192 p_4(Augustus))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\n(p_8(Augustus) \u2192 p_1(Augustus)) \u2227 (p_8(Augustus) \u2192 p_2(Augustus))\n(\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus))\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)\n(p_6(Augustus) \u2192 p_4(Augustus))\n\u00acp_8(Augustus)",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Augustus)",
                    "p_2(Augustus)",
                    "-p_0(Augustus)",
                    "(p_8(Augustus) -> p_1(Augustus)) & (p_8(Augustus) -> p_2(Augustus))",
                    "(-p_8(Augustus) -> -p_7(Augustus))",
                    "p_7(Augustus) | p_6(Augustus)",
                    "all x ((p_5(x) & p_6(x)) -> p_0(x))",
                    "(p_3(Augustus) | p_5(Augustus)) & (-p_3(Augustus) | -p_5(Augustus))",
                    "p_3(Augustus)",
                    "-p_5(Augustus)",
                    "p_6(Augustus)",
                    "(p_6(Augustus) -> p_4(Augustus))",
                    "-p_8(Augustus)"
                ],
                "formulas(goals)": [
                    "p_4(Augustus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Augustus)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\np_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))\n\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus)\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)\n\u00acp_6(Augustus) \u2228 p_4(Augustus)\n\u00acp_8(Augustus)\n\u00acp_7(Augustus)",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Augustus).",
                    "p_2(Augustus).",
                    "-p_0(Augustus).",
                    "p_8(Augustus) -> (p_1(Augustus) & p_2(Augustus)).",
                    "-p_8(Augustus) -> -p_7(Augustus).",
                    "p_7(Augustus) | p_6(Augustus).",
                    "(all x ((p_5(x) & p_6(x)) -> p_0(x))).",
                    "(p_3(Augustus) | p_5(Augustus)) & (-p_3(Augustus) | -p_5(Augustus)).",
                    "p_3(Augustus).",
                    "-p_5(Augustus).",
                    "p_6(Augustus).",
                    "-p_6(Augustus) | p_4(Augustus).",
                    "-p_8(Augustus).",
                    "-p_7(Augustus)."
                ],
                "formulas(goals)": [
                    "p_4(Augustus)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_8(Augustus) \u2192 p_1(Augustus)) \u2227 (p_8(Augustus) \u2192 p_2(Augustus))",
                    "p_6(Augustus) \u2192 p_4(Augustus)"
                ],
                "added_facts": [
                    "\u00acp_7(Augustus)"
                ],
                "added_rules": [
                    "p_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))",
                    "\u00acp_6(Augustus) \u2228 p_4(Augustus)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\np_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))\n\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus)\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2192 p_0(x)))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)\np_6(Augustus) \u2192 p_4(Augustus)\n\u00acp_8(Augustus)\n\u00acp_7(Augustus)\np_4(Augustus)\n(\u00acp_1(Augustus) \u2228 \u00acp_2(Augustus)) \u2192 \u00acp_8(Augustus)",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Augustus)",
                    "p_2(Augustus)",
                    "-p_0(Augustus)",
                    "p_8(Augustus) -> (p_1(Augustus) & p_2(Augustus))",
                    "-p_8(Augustus) -> -p_7(Augustus)",
                    "p_7(Augustus) | p_6(Augustus)",
                    "all x (p_5(x) -> (p_6(x) -> p_0(x)))",
                    "(p_3(Augustus) | p_5(Augustus)) & (-p_3(Augustus) | -p_5(Augustus))",
                    "p_3(Augustus)",
                    "-p_5(Augustus)",
                    "p_6(Augustus)",
                    "p_6(Augustus) -> p_4(Augustus)",
                    "-p_8(Augustus)",
                    "-p_7(Augustus)",
                    "p_4(Augustus)",
                    "(-p_1(Augustus) | -p_2(Augustus)) -> -p_8(Augustus)"
                ],
                "formulas(goals)": [
                    "p_4(Augustus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_5(x) \u2227 p_6(x)) \u2192 p_0(x))",
                    "\u00acp_6(Augustus) \u2228 p_4(Augustus)"
                ],
                "added_facts": [
                    "p_4(Augustus)"
                ],
                "added_rules": [
                    "\u2200x (p_5(x) \u2192 (p_6(x) \u2192 p_0(x)))",
                    "p_6(Augustus) \u2192 p_4(Augustus)",
                    "(\u00acp_1(Augustus) \u2228 \u00acp_2(Augustus)) \u2192 \u00acp_8(Augustus)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_1(Augustus)\np_2(Augustus)\n\u00acp_0(Augustus)\np_8(Augustus) \u2192 (p_1(Augustus) \u2227 p_2(Augustus))\n\u00acp_8(Augustus) \u2192 \u00acp_7(Augustus)\np_7(Augustus) \u2228 p_6(Augustus)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2192 p_0(x)))\n(p_3(Augustus) \u2228 p_5(Augustus)) \u2227 (\u00acp_3(Augustus) \u2228 \u00acp_5(Augustus))\np_3(Augustus)\n\u00acp_5(Augustus)\np_6(Augustus)\np_6(Augustus) \u2192 \u00acp_4(Augustus)\n\u00acp_8(Augustus)\n\u00acp_7(Augustus)\n(\u00acp_1(Augustus) \u2228 \u00acp_2(Augustus)) \u2192 \u00acp_8(Augustus)",
            "Initial Goal": "p_4(Augustus)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_1(Augustus)",
                    "p_2(Augustus)",
                    "-p_0(Augustus)",
                    "p_8(Augustus) -> (p_1(Augustus) & p_2(Augustus))",
                    "-p_8(Augustus) -> -p_7(Augustus)",
                    "p_7(Augustus) | p_6(Augustus)",
                    "all x (p_5(x) -> (p_6(x) -> p_0(x)))",
                    "(p_3(Augustus) | p_5(Augustus)) & (-p_3(Augustus) | -p_5(Augustus))",
                    "p_3(Augustus)",
                    "-p_5(Augustus)",
                    "p_6(Augustus)",
                    "p_6(Augustus) -> -p_4(Augustus)",
                    "-p_8(Augustus)",
                    "-p_7(Augustus)",
                    "(-p_1(Augustus) | -p_2(Augustus)) -> -p_8(Augustus)"
                ],
                "formulas(goals)": [
                    "-p_4(Augustus)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Augustus)"
                ],
                "removed_rules": [
                    "p_6(Augustus) \u2192 p_4(Augustus)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Augustus) \u2192 \u00acp_4(Augustus)"
                ]
            }
        }
    ]
}