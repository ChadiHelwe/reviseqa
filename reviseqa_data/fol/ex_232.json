{
    "background_story": "Lacey, a passionate philanthropist, dedicated her life to establishing a fund that supported education for underprivileged children. Growing up in a low-income household, she understood the barriers that limited access to quality education. After graduating from college, Lacey worked tirelessly to raise awareness and funds for her cause. She founded the 'Empowerment Through Education' fund, which provided scholarships, resources, and mentorship to deserving students. Through her fund, Lacey has changed the lives of countless young people, empowering them to break the cycle of poverty and achieve their full potential. Her selfless efforts have earned her numerous accolades, but for Lacey, the true reward is seeing the positive impact of her fund on the communities she serves.",
    "predicates": [
        {
            "id": 0,
            "name": "care_about_others"
        },
        {
            "id": 1,
            "name": "volunteer_time"
        },
        {
            "id": 2,
            "name": "promote_literacy"
        },
        {
            "id": 3,
            "name": "make_difference"
        },
        {
            "id": 4,
            "name": "guide_students"
        },
        {
            "id": 5,
            "name": "invest_in_futures"
        },
        {
            "id": 6,
            "name": "have_wealth"
        },
        {
            "id": 7,
            "name": "feel_generous"
        },
        {
            "id": 8,
            "name": "donate_funds"
        },
        {
            "id": 9,
            "name": "empower_communities"
        },
        {
            "id": 10,
            "name": "help_needy"
        },
        {
            "id": 11,
            "name": "support_education"
        },
        {
            "id": 12,
            "name": "give_back"
        },
        {
            "id": 13,
            "name": "mentor_youth"
        },
        {
            "id": 14,
            "name": "believe_in_equality"
        },
        {
            "id": 15,
            "name": "value_knowledge"
        },
        {
            "id": 16,
            "name": "found_organization"
        },
        {
            "id": 17,
            "name": "raise_awareness"
        },
        {
            "id": 18,
            "name": "have_passion"
        },
        {
            "id": 19,
            "name": "inspire_others"
        },
        {
            "id": 20,
            "name": "fund_scholarships"
        },
        {
            "id": 21,
            "name": "provide_resources"
        },
        {
            "id": 22,
            "name": "raises_awareness"
        },
        {
            "id": 23,
            "name": "provides_resources"
        }
    ],
    "subject_name": "Lacey",
    "subject_category": "human",
    "keyword": "fund",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lacey",
            "text": "Lacey cares about others.",
            "fol": "p_0(Lacey)",
            "str_fol": "care_about_others(Lacey)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lacey",
            "text": "Lacey does not volunteer her time.",
            "fol": "\u00acp_1(Lacey)",
            "str_fol": "\u00acvolunteer_time(Lacey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Lacey",
            "text": "Lacey does not promote literacy.",
            "fol": "\u00acp_2(Lacey)",
            "str_fol": "\u00acpromote_literacy(Lacey)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lacey",
            "text": "Lacey is not making a difference.",
            "fol": "\u00acp_3(Lacey)",
            "str_fol": "\u00acmake_difference(Lacey)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lacey",
            "text": "Lacey does not guide students.",
            "fol": "\u00acp_4(Lacey)",
            "str_fol": "\u00acguide_students(Lacey)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lacey",
            "text": "Lacey invests in the futures of others.",
            "fol": "p_5(Lacey)",
            "str_fol": "invest_in_futures(Lacey)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lacey",
            "text": "Lacey has wealth.",
            "fol": "p_6(Lacey)",
            "str_fol": "have_wealth(Lacey)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lacey",
            "text": "Lacey does not feel generous.",
            "fol": "\u00acp_7(Lacey)",
            "str_fol": "\u00acfeel_generous(Lacey)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Lacey",
            "text": "Lacey donates funds.",
            "fol": "p_8(Lacey)",
            "str_fol": "donate_funds(Lacey)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Lacey",
            "text": "Lacey mentors youth.",
            "fol": "p_13(Lacey)",
            "str_fol": "mentor_youth(Lacey)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Lacey",
            "text": "Lacey gives back to her community.",
            "fol": "p_12(Lacey)",
            "str_fol": "give_back(Lacey)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Lacey",
            "text": "Lacey helps those in need.",
            "fol": "p_10(Lacey)",
            "str_fol": "help_needy(Lacey)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Lacey",
            "text": "Lacey supports education.",
            "fol": "p_11(Lacey)",
            "str_fol": "support_education(Lacey)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Lacey",
            "text": "Lacey empowers communities.",
            "fol": "p_9(Lacey)",
            "str_fol": "empower_communities(Lacey)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Lacey",
            "text": "Lacey cares about others, supports education, and empowers communities through her philanthropic work.",
            "fol": "p_0(Lacey) \u2227 (support_education(Lacey) \u2227 empower_communities(Lacey))",
            "str_fol": "care_about_others(Lacey) \u2227 (support_education(Lacey) \u2227 empower_communities(Lacey))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Lacey",
            "text": "Lacey has wealth.",
            "fol": "p_6(Lacey)",
            "str_fol": "have_wealth(Lacey)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lacey",
            "text": "Lacey does not feel generous.",
            "fol": "\u00acp_7(Lacey)",
            "str_fol": "\u00acfeel_generous(Lacey)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lacey",
            "text": "Lacey invests in the futures of others.",
            "fol": "p_5(Lacey)",
            "str_fol": "invest_in_futures(Lacey)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lacey",
            "text": "Lacey does not guide students.",
            "fol": "\u00acp_4(Lacey)",
            "str_fol": "\u00acguide_students(Lacey)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lacey",
            "text": "Lacey is not making a difference.",
            "fol": "\u00acp_3(Lacey)",
            "str_fol": "\u00acmake_difference(Lacey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Lacey",
            "text": "Lacey does not promote literacy.",
            "fol": "\u00acp_2(Lacey)",
            "str_fol": "\u00acpromote_literacy(Lacey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lacey",
            "text": "Lacey does not volunteer her time.",
            "fol": "\u00acp_1(Lacey)",
            "str_fol": "\u00acvolunteer_time(Lacey)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lacey",
            "text": "Lacey cares about others.",
            "fol": "p_0(Lacey)",
            "str_fol": "care_about_others(Lacey)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Anyone who has wealth or feels generous can donate funds.",
            "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((have_wealth(x) \u2228 feel_generous(x)) \u2192 donate_funds(x))"
        },
        {
            "id": 4,
            "text": "Everyone who invests in the futures of others either guides students or mentors youth (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))",
            "str_fol": "\u2200x (invest_in_futures(x) \u2192 (guide_students(x) \u2228 mentor_youth(x)))"
        },
        {
            "id": 3,
            "text": "Everyone who either gives back to their community or mentors youth is making a difference.",
            "fol": "\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((give_back(x) \u2295 mentor_youth(x)) \u2192 make_difference(x))"
        },
        {
            "id": 2,
            "text": "Anyone who gives back to their community helps those in need.",
            "fol": "\u2200x (p_12(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (give_back(x) \u2192 help_needy(x))"
        },
        {
            "id": 1,
            "text": "If Lacey helps those in need, then she either promotes literacy or supports education.",
            "fol": "p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey))",
            "str_fol": "help_needy(Lacey) \u2192 (promote_literacy(Lacey) \u2228 support_education(Lacey))"
        },
        {
            "id": 0,
            "text": "If Lacey either donates funds or volunteers her time (but not both), then she empowers communities.",
            "fol": "(p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey)",
            "str_fol": "(donate_funds(Lacey) \u2295 volunteer_time(Lacey)) \u2192 empower_communities(Lacey)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Lacey",
            "text": "Lacey has wealth.",
            "fol": "p_6(Lacey)",
            "str_fol": "have_wealth(Lacey)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lacey",
            "text": "Lacey does not feel generous.",
            "fol": "\u00acp_7(Lacey)",
            "str_fol": "\u00acfeel_generous(Lacey)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lacey",
            "text": "Lacey invests in the futures of others.",
            "fol": "p_5(Lacey)",
            "str_fol": "invest_in_futures(Lacey)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lacey",
            "text": "Lacey does not guide students.",
            "fol": "\u00acp_4(Lacey)",
            "str_fol": "\u00acguide_students(Lacey)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lacey",
            "text": "Lacey is not making a difference.",
            "fol": "\u00acp_3(Lacey)",
            "str_fol": "\u00acmake_difference(Lacey)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Lacey",
            "text": "Lacey does not promote literacy.",
            "fol": "\u00acp_2(Lacey)",
            "str_fol": "\u00acpromote_literacy(Lacey)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lacey",
            "text": "Lacey does not volunteer her time.",
            "fol": "\u00acp_1(Lacey)",
            "str_fol": "\u00acvolunteer_time(Lacey)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lacey",
            "text": "Lacey cares about others.",
            "fol": "p_0(Lacey)",
            "str_fol": "care_about_others(Lacey)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Anyone who has wealth or feels generous can donate funds.",
            "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((have_wealth(x) \u2228 feel_generous(x)) \u2192 donate_funds(x))"
        },
        {
            "id": 4,
            "text": "Everyone who invests in the futures of others either guides students or mentors youth (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))",
            "str_fol": "\u2200x (invest_in_futures(x) \u2192 (guide_students(x) \u2228 mentor_youth(x)))"
        },
        {
            "id": 3,
            "text": "Everyone who either gives back to their community or mentors youth is making a difference.",
            "fol": "\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((give_back(x) \u2295 mentor_youth(x)) \u2192 make_difference(x))"
        },
        {
            "id": 2,
            "text": "Anyone who gives back to their community helps those in need.",
            "fol": "\u2200x (p_12(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (give_back(x) \u2192 help_needy(x))"
        },
        {
            "id": 1,
            "text": "If Lacey helps those in need, then she either promotes literacy or supports education.",
            "fol": "p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey))",
            "str_fol": "help_needy(Lacey) \u2192 (promote_literacy(Lacey) \u2228 support_education(Lacey))"
        },
        {
            "id": 0,
            "text": "If Lacey either donates funds or volunteers her time (but not both), then she empowers communities.",
            "fol": "(p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey)",
            "str_fol": "(donate_funds(Lacey) \u2295 volunteer_time(Lacey)) \u2192 empower_communities(Lacey)"
        }
    ],
    "context_fol": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))\n\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\np_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey))\n(p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey)",
    "conclusion": {
        "id": 12,
        "text": "Lacey cares about others, supports education, and empowers communities through her philanthropic work.",
        "fol": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
        "str_fol": "care_about_others(Lacey) \u2227 (support_education(Lacey) \u2227 empower_communities(Lacey))"
    },
    "initial_answer": "True",
    "initial_goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lacey",
                    "text": "Lacey has wealth.",
                    "fol": "p_6(Lacey)",
                    "str_fol": "have_wealth(Lacey)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Lacey",
                    "text": "Lacey does not feel generous.",
                    "fol": "\u00acp_7(Lacey)",
                    "str_fol": "\u00acfeel_generous(Lacey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who has wealth or feels generous can donate funds.",
                    "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((have_wealth(x) \u2228 feel_generous(x)) \u2192 donate_funds(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Lacey",
                "text": "Lacey donates funds.",
                "fol": "p_8(Lacey)",
                "str_fol": "donate_funds(Lacey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Lacey",
                    "text": "Lacey invests in the futures of others.",
                    "fol": "p_5(Lacey)",
                    "str_fol": "invest_in_futures(Lacey)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Lacey",
                    "text": "Lacey does not guide students.",
                    "fol": "\u00acp_4(Lacey)",
                    "str_fol": "\u00acguide_students(Lacey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Everyone who invests in the futures of others either guides students or mentors youth (or both).",
                    "fol": "\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))",
                    "str_fol": "\u2200x (invest_in_futures(x) \u2192 (guide_students(x) \u2228 mentor_youth(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lacey",
                "text": "Lacey mentors youth.",
                "fol": "p_13(Lacey)",
                "str_fol": "mentor_youth(Lacey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Lacey",
                    "text": "Lacey mentors youth.",
                    "fol": "p_13(Lacey)",
                    "str_fol": "mentor_youth(Lacey)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Lacey",
                    "text": "Lacey is not making a difference.",
                    "fol": "\u00acp_3(Lacey)",
                    "str_fol": "\u00acmake_difference(Lacey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Everyone who either gives back to their community or mentors youth is making a difference.",
                    "fol": "\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((give_back(x) \u2295 mentor_youth(x)) \u2192 make_difference(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lacey",
                "text": "Lacey gives back to her community.",
                "fol": "p_12(Lacey)",
                "str_fol": "give_back(Lacey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Lacey",
                    "text": "Lacey gives back to her community.",
                    "fol": "p_12(Lacey)",
                    "str_fol": "give_back(Lacey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who gives back to their community helps those in need.",
                    "fol": "\u2200x (p_12(x) \u2192 p_10(x))",
                    "str_fol": "\u2200x (give_back(x) \u2192 help_needy(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lacey",
                "text": "Lacey helps those in need.",
                "fol": "p_10(Lacey)",
                "str_fol": "help_needy(Lacey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Lacey",
                    "text": "Lacey helps those in need.",
                    "fol": "p_10(Lacey)",
                    "str_fol": "help_needy(Lacey)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Lacey",
                    "text": "Lacey does not promote literacy.",
                    "fol": "\u00acp_2(Lacey)",
                    "str_fol": "\u00acpromote_literacy(Lacey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Lacey helps those in need, then she either promotes literacy or supports education.",
                    "fol": "p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey))",
                    "str_fol": "help_needy(Lacey) \u2192 (promote_literacy(Lacey) \u2228 support_education(Lacey))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Lacey",
                "text": "Lacey supports education.",
                "fol": "p_11(Lacey)",
                "str_fol": "support_education(Lacey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Lacey",
                    "text": "Lacey donates funds.",
                    "fol": "p_8(Lacey)",
                    "str_fol": "donate_funds(Lacey)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Lacey",
                    "text": "Lacey does not volunteer her time.",
                    "fol": "\u00acp_1(Lacey)",
                    "str_fol": "\u00acvolunteer_time(Lacey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Lacey either donates funds or volunteers her time (but not both), then she empowers communities.",
                    "fol": "(p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey)",
                    "str_fol": "(donate_funds(Lacey) \u2295 volunteer_time(Lacey)) \u2192 empower_communities(Lacey)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Lacey",
                "text": "Lacey empowers communities.",
                "fol": "p_9(Lacey)",
                "str_fol": "empower_communities(Lacey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Lacey",
                    "text": "Lacey cares about others.",
                    "fol": "p_0(Lacey)",
                    "str_fol": "care_about_others(Lacey)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Lacey",
                    "text": "Lacey supports education.",
                    "fol": "p_11(Lacey)",
                    "str_fol": "support_education(Lacey)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Lacey",
                    "text": "Lacey empowers communities.",
                    "fol": "p_9(Lacey)",
                    "str_fol": "empower_communities(Lacey)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 12,
                "text": "Lacey cares about others, supports education, and empowers communities through her philanthropic work.",
                "fol": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
                "str_fol": "care_about_others(Lacey) \u2227 (support_education(Lacey) \u2227 empower_communities(Lacey))"
            }
        }
    ],
    "proof_trace": "1 (all x (p_6(x) | p_7(x) -> p_8(x))).  [assumption].\n2 (all x (p_5(x) -> p_4(x) | p_13(x))).  [assumption].\n3 (all x (-(p_12(x) <-> p_13(x)) -> p_3(x))).  [assumption].\n4 (all x (p_12(x) -> p_10(x))).  [assumption].\n5 p_10(Lacey) -> p_2(Lacey) | p_11(Lacey).  [assumption].\n6 -(p_8(Lacey) <-> p_1(Lacey)) -> p_9(Lacey).  [assumption].\n7 p_0(Lacey) & p_11(Lacey) & p_9(Lacey).  [goal].\n8 -p_6(x) | p_8(x).  [clausify(1)].\n9 p_6(Lacey).  [assumption].\n10 -p_5(x) | p_4(x) | p_13(x).  [clausify(2)].\n11 p_5(Lacey).  [assumption].\n12 p_4(Lacey) | p_13(Lacey).  [resolve(10,a,11,a)].\n13 -p_4(Lacey).  [assumption].\n15 -p_3(Lacey).  [assumption].\n16 p_12(x) | -p_13(x) | p_3(x).  [clausify(3)].\n17 -p_10(Lacey) | p_2(Lacey) | p_11(Lacey).  [clausify(5)].\n18 -p_2(Lacey).  [assumption].\n19 -p_8(Lacey) | p_1(Lacey) | p_9(Lacey).  [clausify(6)].\n20 -p_1(Lacey).  [assumption].\n22 -p_0(Lacey) | -p_11(Lacey) | -p_9(Lacey).  [deny(7)].\n23 p_0(Lacey).  [assumption].\n24 p_12(Lacey) | -p_13(Lacey).  [resolve(16,c,15,a)].\n25 -p_12(x) | p_10(x).  [clausify(4)].\n26 -p_8(Lacey) | p_9(Lacey).  [resolve(19,b,20,a)].\n27 p_8(Lacey).  [resolve(8,a,9,a)].\n28 -p_13(Lacey) | p_10(Lacey).  [resolve(24,a,25,a)].\n29 p_13(Lacey).  [resolve(12,a,13,a)].\n30 p_10(Lacey).  [resolve(28,a,29,a)].\n31 -p_10(Lacey) | p_11(Lacey).  [resolve(17,b,18,a)].\n32 p_11(Lacey).  [resolve(30,a,31,a)].\n33 -p_11(Lacey) | -p_9(Lacey).  [resolve(22,a,23,a)].\n34 -p_9(Lacey).  [resolve(32,a,33,a)].\n35 p_9(Lacey).  [resolve(26,a,27,a)].\n36 $F.  [resolve(34,a,35,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))\n\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\np_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey))\n(p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey)\np_11(Lacey) \u2192 p_3(Lacey)",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey).",
                    "-p_7(Lacey).",
                    "p_5(Lacey).",
                    "-p_4(Lacey).",
                    "-p_3(Lacey).",
                    "-p_2(Lacey).",
                    "-p_1(Lacey).",
                    "p_0(Lacey).",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x)).",
                    "all x (p_5(x) -> (p_4(x) | p_13(x))).",
                    "all x (-(p_12(x) <-> p_13(x)) -> p_3(x)).",
                    "all x (p_12(x) -> p_10(x)).",
                    "p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey)).",
                    "(-(p_8(Lacey) <-> p_1(Lacey))) -> p_9(Lacey).",
                    "p_11(Lacey) -> p_3(Lacey)."
                ],
                "formulas(goals)": [
                    "- (p_0(Lacey) & (p_11(Lacey) & p_9(Lacey)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_11(Lacey) \u2192 p_3(Lacey)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))\n\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\n(p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey)))\n((p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey))\np_10(Lacey)",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey)",
                    "-p_7(Lacey)",
                    "p_5(Lacey)",
                    "-p_4(Lacey)",
                    "-p_3(Lacey)",
                    "-p_2(Lacey)",
                    "-p_1(Lacey)",
                    "p_0(Lacey)",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "all x (p_5(x) -> (p_4(x) | p_13(x)))",
                    "all x ((-(p_12(x) <-> p_13(x))) -> p_3(x))",
                    "all x (p_12(x) -> p_10(x))",
                    "(p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey)))",
                    "((-(p_8(Lacey) <-> p_1(Lacey))) -> p_9(Lacey))",
                    "p_10(Lacey)"
                ],
                "formulas(goals)": [
                    "p_0(Lacey) & (p_11(Lacey) & p_9(Lacey))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_11(Lacey) \u2192 p_3(Lacey)"
                ],
                "added_facts": [
                    "p_10(Lacey)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))\n\u2200x ((p_5(x) \u2227 \u00acp_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\n(p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey)))\n((p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey))\np_10(Lacey)\np_13(Lacey)",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey)",
                    "-p_7(Lacey)",
                    "p_5(Lacey)",
                    "-p_4(Lacey)",
                    "-p_3(Lacey)",
                    "-p_2(Lacey)",
                    "-p_1(Lacey)",
                    "p_0(Lacey)",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x))",
                    "all x ((p_5(x) & -p_4(x)) -> p_13(x))",
                    "all x ((- (p_12(x) <-> p_13(x))) -> p_3(x))",
                    "all x (p_12(x) -> p_10(x))",
                    "(p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey)))",
                    "(- (p_8(Lacey) <-> p_1(Lacey)) -> p_9(Lacey))",
                    "p_10(Lacey)",
                    "p_13(Lacey)"
                ],
                "formulas(goals)": [
                    "p_0(Lacey) & (p_11(Lacey) & p_9(Lacey))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2192 (p_4(x) \u2228 p_13(x)))"
                ],
                "added_facts": [
                    "p_13(Lacey)"
                ],
                "added_rules": [
                    "\u2200x ((p_5(x) \u2227 \u00acp_4(x)) \u2192 p_13(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x (\u00acp_8(x) \u2192 (\u00acp_6(x) \u2227 \u00acp_7(x)))\n\u2200x ((p_5(x) \u2227 \u00acp_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\n(p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey)))\n((p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey))\np_10(Lacey)\np_13(Lacey)\np_8(Lacey)\np_11(Lacey)\np_9(Lacey)",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey)",
                    "-p_7(Lacey)",
                    "p_5(Lacey)",
                    "-p_4(Lacey)",
                    "-p_3(Lacey)",
                    "-p_2(Lacey)",
                    "-p_1(Lacey)",
                    "p_0(Lacey)",
                    "all x (-p_8(x) -> (-p_6(x) & -p_7(x)))",
                    "all x ((p_5(x) & -p_4(x)) -> p_13(x))",
                    "all x ((-(p_12(x) <-> p_13(x))) -> p_3(x))",
                    "all x (p_12(x) -> p_10(x))",
                    "(p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey)))",
                    "(-(p_8(Lacey) <-> p_1(Lacey)) -> p_9(Lacey))",
                    "p_10(Lacey)",
                    "p_13(Lacey)",
                    "p_8(Lacey)",
                    "p_11(Lacey)",
                    "p_9(Lacey)"
                ],
                "formulas(goals)": [
                    "(p_0(Lacey) & (p_11(Lacey) & p_9(Lacey)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))"
                ],
                "added_facts": [
                    "p_8(Lacey)",
                    "p_11(Lacey)",
                    "p_9(Lacey)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_8(x) \u2192 (\u00acp_6(x) \u2227 \u00acp_7(x)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x (p_8(x) \u2228 (\u00acp_6(x) \u2227 \u00acp_7(x)))\n\u2200x ((p_5(x) \u2227 \u00acp_4(x)) \u2192 p_13(x))\n\u2200x (((p_12(x) \u2228 p_13(x)) \u2227 \u00ac(p_12(x) \u2227 p_13(x))) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\n(p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey)))\n((p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey))\np_10(Lacey)\np_13(Lacey)\np_8(Lacey)\np_11(Lacey)\np_9(Lacey)\np_0(Lacey) \u2228 \u00acp_0(Lacey)\np_8(Lacey) \u2227 p_5(Lacey)\np_9(Lacey) \u2228 p_10(Lacey)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_12(x))",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey)",
                    "-p_7(Lacey)",
                    "p_5(Lacey)",
                    "-p_4(Lacey)",
                    "-p_3(Lacey)",
                    "-p_2(Lacey)",
                    "-p_1(Lacey)",
                    "p_0(Lacey)",
                    "all x (p_8(x) | (-p_6(x) & -p_7(x)))",
                    "all x ((p_5(x) & -p_4(x)) -> p_13(x))",
                    "all x (((p_12(x) | p_13(x)) & -(p_12(x) & p_13(x))) -> p_3(x))",
                    "all x (p_12(x) -> p_10(x))",
                    "(p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey)))",
                    "(-(p_8(Lacey) <-> p_1(Lacey)) -> p_9(Lacey))",
                    "p_10(Lacey)",
                    "p_13(Lacey)",
                    "p_8(Lacey)",
                    "p_11(Lacey)",
                    "p_9(Lacey)",
                    "(p_0(Lacey) | -p_0(Lacey))",
                    "(p_8(Lacey) & p_5(Lacey))",
                    "(p_9(Lacey) | p_10(Lacey))",
                    "all x (-p_10(x) -> -p_12(x))"
                ],
                "formulas(goals)": [
                    "p_0(Lacey) & (p_11(Lacey) & p_9(Lacey))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_8(x) \u2192 (\u00acp_6(x) \u2227 \u00acp_7(x)))",
                    "\u2200x ((p_12(x) \u2295 p_13(x)) \u2192 p_3(x))"
                ],
                "added_facts": [
                    "p_0(Lacey) \u2228 \u00acp_0(Lacey)",
                    "p_8(Lacey) \u2227 p_5(Lacey)",
                    "p_9(Lacey) \u2228 p_10(Lacey)"
                ],
                "added_rules": [
                    "\u2200x (p_8(x) \u2228 (\u00acp_6(x) \u2227 \u00acp_7(x)))",
                    "\u2200x (((p_12(x) \u2228 p_13(x)) \u2227 \u00ac(p_12(x) \u2227 p_13(x))) \u2192 p_3(x))",
                    "\u2200x (\u00acp_10(x) \u2192 \u00acp_12(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x (p_8(x) \u2228 (\u00acp_6(x) \u2227 \u00acp_7(x)))\n\u2200x ((p_5(x) \u2227 \u00acp_4(x)) \u2192 p_13(x))\n\u2200x (((p_12(x) \u2228 p_13(x)) \u2227 \u00ac(p_12(x) \u2227 p_13(x))) \u2192 p_3(x))\n\u2200x (p_12(x) \u2192 p_10(x))\n(p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey)))\np_10(Lacey)\np_13(Lacey)\np_8(Lacey)\np_11(Lacey)\np_0(Lacey) \u2228 \u00acp_0(Lacey)\np_8(Lacey) \u2227 p_5(Lacey)\np_9(Lacey) \u2228 p_10(Lacey)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_12(x))\n\u2200x (p_13(x) \u2192 \u00acp_9(x))",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey)",
                    "-p_7(Lacey)",
                    "p_5(Lacey)",
                    "-p_4(Lacey)",
                    "-p_3(Lacey)",
                    "-p_2(Lacey)",
                    "-p_1(Lacey)",
                    "p_0(Lacey)",
                    "all x (p_8(x) | (-p_6(x) & -p_7(x)))",
                    "all x ((p_5(x) & -p_4(x)) -> p_13(x))",
                    "all x (((p_12(x) | p_13(x)) & -(p_12(x) & p_13(x))) -> p_3(x))",
                    "all x (p_12(x) -> p_10(x))",
                    "(p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey)))",
                    "p_10(Lacey)",
                    "p_13(Lacey)",
                    "p_8(Lacey)",
                    "p_11(Lacey)",
                    "p_0(Lacey) | -p_0(Lacey)",
                    "p_8(Lacey) & p_5(Lacey)",
                    "p_9(Lacey) | p_10(Lacey)",
                    "all x (-p_10(x) -> -p_12(x))",
                    "all x (p_13(x) -> -p_9(x))"
                ],
                "formulas(goals)": [
                    "-(p_0(Lacey) & (p_11(Lacey) & p_9(Lacey)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_9(Lacey)"
                ],
                "removed_rules": [
                    "((p_8(Lacey) \u2295 p_1(Lacey)) \u2192 p_9(Lacey))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_13(x) \u2192 \u00acp_9(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lacey)\n\u00acp_7(Lacey)\np_5(Lacey)\n\u00acp_4(Lacey)\n\u00acp_3(Lacey)\n\u00acp_2(Lacey)\n\u00acp_1(Lacey)\np_0(Lacey)\n\u2200x (p_8(x) \u2228 (\u00acp_6(x) \u2227 \u00acp_7(x)))\n\u2200x (\u00acp_5(x) \u2228 p_4(x) \u2228 p_13(x))\n(\u2200x ((p_12(x) \u2227 \u00acp_13(x)) \u2192 p_3(x))) \u2227 (\u2200x ((\u00acp_12(x) \u2227 p_13(x)) \u2192 p_3(x)))\n\u2200x (p_12(x) \u2192 p_10(x))\n(p_10(Lacey) \u2192 (p_2(Lacey) \u2228 p_11(Lacey)))\np_10(Lacey)\np_13(Lacey)\np_8(Lacey)\np_11(Lacey)\np_0(Lacey) \u2228 \u00acp_0(Lacey)\np_8(Lacey) \u2227 p_5(Lacey)\np_9(Lacey) \u2228 p_10(Lacey)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_12(x))\n\u2200x (p_13(x) \u2192 \u00acp_9(x))\n\u00acp_9(Lacey)",
            "Initial Goal": "p_0(Lacey) \u2227 (p_11(Lacey) \u2227 p_9(Lacey))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lacey).",
                    "-p_7(Lacey).",
                    "p_5(Lacey).",
                    "-p_4(Lacey).",
                    "-p_3(Lacey).",
                    "-p_2(Lacey).",
                    "-p_1(Lacey).",
                    "p_0(Lacey).",
                    "all x (p_8(x) | (-p_6(x) & -p_7(x))).",
                    "all x (-p_5(x) | p_4(x) | p_13(x)).",
                    "(all x ((p_12(x) & -p_13(x)) -> p_3(x))) & (all x ((-p_12(x) & p_13(x)) -> p_3(x))).",
                    "all x (p_12(x) -> p_10(x)).",
                    "(p_10(Lacey) -> (p_2(Lacey) | p_11(Lacey))).",
                    "p_10(Lacey).",
                    "p_13(Lacey).",
                    "p_8(Lacey).",
                    "p_11(Lacey).",
                    "(p_0(Lacey) | -p_0(Lacey)).",
                    "(p_8(Lacey) & p_5(Lacey)).",
                    "(p_9(Lacey) | p_10(Lacey)).",
                    "all x (-p_10(x) -> -p_12(x)).",
                    "all x (p_13(x) -> -p_9(x)).",
                    "-p_9(Lacey)."
                ],
                "formulas(goals)": [
                    "-(p_0(Lacey) & (p_11(Lacey) & p_9(Lacey)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_5(x) \u2227 \u00acp_4(x)) \u2192 p_13(x))",
                    "\u2200x (((p_12(x) \u2228 p_13(x)) \u2227 \u00ac(p_12(x) \u2227 p_13(x))) \u2192 p_3(x))"
                ],
                "added_facts": [
                    "\u00acp_9(Lacey)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_5(x) \u2228 p_4(x) \u2228 p_13(x))",
                    "(\u2200x ((p_12(x) \u2227 \u00acp_13(x)) \u2192 p_3(x))) \u2227 (\u2200x ((\u00acp_12(x) \u2227 p_13(x)) \u2192 p_3(x)))"
                ]
            }
        }
    ]
}