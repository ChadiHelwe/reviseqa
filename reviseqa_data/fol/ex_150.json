{
    "background_story": "Francesca, a talented chef, had a unique ability to meld different culinary traditions to create innovative dishes. Growing up in a multicultural community, she was exposed to a variety of flavors and cooking techniques. She combined Italian pasta-making with Asian stir-fry methods and Indian spice blends to create a fusion cuisine that wowed critics and patrons alike. Her restaurant, 'Mosaic', became a sensation, attracting foodies from around the world. Francesca's passion for melding flavors and cultures not only reflected in her cooking but also in her community work, where she brought people together through culinary workshops and events, celebrating the beauty of diversity and the art of melding differences into something extraordinary.",
    "predicates": [
        {
            "id": 0,
            "name": "teach_cooking"
        },
        {
            "id": 1,
            "name": "cooks_creatively"
        },
        {
            "id": 2,
            "name": "runs_restaurant"
        },
        {
            "id": 3,
            "name": "foster_community"
        },
        {
            "id": 4,
            "name": "share_knowledge"
        },
        {
            "id": 5,
            "name": "is_culinary_explorer"
        },
        {
            "id": 6,
            "name": "creates_innovative_dishes"
        },
        {
            "id": 7,
            "name": "meld_flavors"
        },
        {
            "id": 8,
            "name": "celebrate_diversity"
        },
        {
            "id": 9,
            "name": "host_events"
        },
        {
            "id": 10,
            "name": "bring_people_together"
        },
        {
            "id": 11,
            "name": "tries_new_recipes"
        },
        {
            "id": 12,
            "name": "experiments_with_spices"
        },
        {
            "id": 13,
            "name": "is_foodie"
        },
        {
            "id": 14,
            "name": "appreciate_culture"
        },
        {
            "id": 15,
            "name": "love_travel"
        },
        {
            "id": 16,
            "name": "learn_quickly"
        },
        {
            "id": 17,
            "name": "organize_workshops"
        },
        {
            "id": 18,
            "name": "organize_meetups"
        },
        {
            "id": 19,
            "name": "lead_workshops"
        }
    ],
    "subject_name": "Francesca",
    "subject_category": "human",
    "keyword": "meld",
    "all_facts": [
        {
            "id": 0,
            "subject": "Francesca",
            "text": "Francesca teaches cooking.",
            "fol": "p_0(Francesca)",
            "str_fol": "teach_cooking(Francesca)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Francesca",
            "text": "Francesca cooks creatively.",
            "fol": "p_1(Francesca)",
            "str_fol": "cooks_creatively(Francesca)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Francesca",
            "text": "Francesca does not run a restaurant.",
            "fol": "\u00acp_2(Francesca)",
            "str_fol": "\u00acruns_restaurant(Francesca)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Francesca",
            "text": "Francesca fosters community.",
            "fol": "p_3(Francesca)",
            "str_fol": "foster_community(Francesca)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Francesca",
            "text": "Francesca shares knowledge.",
            "fol": "p_4(Francesca)",
            "str_fol": "share_knowledge(Francesca)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Francesca",
            "text": "Francesca does not bring people together.",
            "fol": "\u00acp_10(Francesca)",
            "str_fol": "\u00acbring_people_together(Francesca)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Francesca",
            "text": "Francesca does not meld flavors in her cooking.",
            "fol": "\u00acp_7(Francesca)",
            "str_fol": "\u00acmeld_flavors(Francesca)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Francesca",
            "text": "Francesca does not celebrate diversity in her cooking and community work.",
            "fol": "\u00acp_8(Francesca)",
            "str_fol": "\u00accelebrate_diversity(Francesca)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Francesca",
            "text": "Francesca is not a culinary explorer.",
            "fol": "\u00acp_5(Francesca)",
            "str_fol": "\u00acis_culinary_explorer(Francesca)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Francesca",
            "text": "Francesca does not create innovative dishes.",
            "fol": "\u00acp_6(Francesca)",
            "str_fol": "\u00accreates_innovative_dishes(Francesca)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Francesca",
            "text": "Francesca shares knowledge.",
            "fol": "p_4(Francesca)",
            "str_fol": "share_knowledge(Francesca)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Francesca",
            "text": "Francesca teaches cooking.",
            "fol": "p_0(Francesca)",
            "str_fol": "teach_cooking(Francesca)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Francesca",
            "text": "Francesca fosters community.",
            "fol": "p_3(Francesca)",
            "str_fol": "foster_community(Francesca)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Francesca",
            "text": "Francesca cooks creatively.",
            "fol": "p_1(Francesca)",
            "str_fol": "cooks_creatively(Francesca)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Francesca",
            "text": "Francesca does not run a restaurant.",
            "fol": "\u00acp_2(Francesca)",
            "str_fol": "\u00acruns_restaurant(Francesca)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "For all people, either they share knowledge or bring people together, but not necessarily both.",
            "fol": "\u2200x (p_4(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (share_knowledge(x) \u2295 bring_people_together(x))"
        },
        {
            "id": 4,
            "text": "If Francesca either teaches cooking or hosts events (but not both), then she fosters community.",
            "fol": "(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)",
            "str_fol": "(teach_cooking(Francesca) \u2295 host_events(Francesca)) \u2192 foster_community(Francesca)"
        },
        {
            "id": 3,
            "text": "If Francesca melds flavors and cooks creatively, then she runs a restaurant.",
            "fol": "(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)",
            "str_fol": "(meld_flavors(Francesca) \u2227 cooks_creatively(Francesca)) \u2192 runs_restaurant(Francesca)"
        },
        {
            "id": 2,
            "text": "Anyone who celebrates diversity or hosts events can bring people together.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((celebrate_diversity(x) \u2228 host_events(x)) \u2192 bring_people_together(x))"
        },
        {
            "id": 1,
            "text": "Every culinary explorer either melds flavors or celebrates diversity (or both) in their work.",
            "fol": "\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (is_culinary_explorer(x) \u2192 (meld_flavors(x) \u2228 celebrate_diversity(x)))"
        },
        {
            "id": 0,
            "text": "If Francesca is a culinary explorer, then she creates innovative dishes.",
            "fol": "p_5(Francesca) \u2192 p_6(Francesca)",
            "str_fol": "is_culinary_explorer(Francesca) \u2192 creates_innovative_dishes(Francesca)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Francesca",
            "text": "Francesca shares knowledge.",
            "fol": "p_4(Francesca)",
            "str_fol": "share_knowledge(Francesca)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Francesca",
            "text": "Francesca teaches cooking.",
            "fol": "p_0(Francesca)",
            "str_fol": "teach_cooking(Francesca)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Francesca",
            "text": "Francesca fosters community.",
            "fol": "p_3(Francesca)",
            "str_fol": "foster_community(Francesca)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Francesca",
            "text": "Francesca cooks creatively.",
            "fol": "p_1(Francesca)",
            "str_fol": "cooks_creatively(Francesca)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Francesca",
            "text": "Francesca does not run a restaurant.",
            "fol": "\u00acp_2(Francesca)",
            "str_fol": "\u00acruns_restaurant(Francesca)",
            "negation": true
        },
        {
            "id": 5,
            "text": "For all people, either they share knowledge or bring people together, but not necessarily both.",
            "fol": "\u2200x (p_4(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (share_knowledge(x) \u2295 bring_people_together(x))"
        },
        {
            "id": 4,
            "text": "If Francesca either teaches cooking or hosts events (but not both), then she fosters community.",
            "fol": "(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)",
            "str_fol": "(teach_cooking(Francesca) \u2295 host_events(Francesca)) \u2192 foster_community(Francesca)"
        },
        {
            "id": 3,
            "text": "If Francesca melds flavors and cooks creatively, then she runs a restaurant.",
            "fol": "(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)",
            "str_fol": "(meld_flavors(Francesca) \u2227 cooks_creatively(Francesca)) \u2192 runs_restaurant(Francesca)"
        },
        {
            "id": 2,
            "text": "Anyone who celebrates diversity or hosts events can bring people together.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((celebrate_diversity(x) \u2228 host_events(x)) \u2192 bring_people_together(x))"
        },
        {
            "id": 1,
            "text": "Every culinary explorer either melds flavors or celebrates diversity (or both) in their work.",
            "fol": "\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (is_culinary_explorer(x) \u2192 (meld_flavors(x) \u2228 celebrate_diversity(x)))"
        },
        {
            "id": 0,
            "text": "If Francesca is a culinary explorer, then she creates innovative dishes.",
            "fol": "p_5(Francesca) \u2192 p_6(Francesca)",
            "str_fol": "is_culinary_explorer(Francesca) \u2192 creates_innovative_dishes(Francesca)"
        }
    ],
    "context_fol": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)",
    "conclusion": {
        "id": 9,
        "subject": "Francesca",
        "text": "Francesca does not create innovative dishes.",
        "fol": "\u00acp_6(Francesca)",
        "str_fol": "\u00accreates_innovative_dishes(Francesca)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_6(Francesca)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Francesca",
                    "text": "Francesca shares knowledge.",
                    "fol": "p_4(Francesca)",
                    "str_fol": "share_knowledge(Francesca)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "For all people, either they share knowledge or bring people together, but not necessarily both.",
                    "fol": "\u2200x (p_4(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (share_knowledge(x) \u2295 bring_people_together(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Francesca",
                "text": "Francesca does not bring people together.",
                "fol": "\u00acp_10(Francesca)",
                "str_fol": "\u00acbring_people_together(Francesca)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Francesca",
                    "text": "Francesca teaches cooking.",
                    "fol": "p_0(Francesca)",
                    "str_fol": "teach_cooking(Francesca)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Francesca",
                    "text": "Francesca fosters community.",
                    "fol": "p_3(Francesca)",
                    "str_fol": "foster_community(Francesca)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Francesca either teaches cooking or hosts events (but not both), then she fosters community.",
                    "fol": "(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)",
                    "str_fol": "(teach_cooking(Francesca) \u2295 host_events(Francesca)) \u2192 foster_community(Francesca)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Francesca",
                    "text": "Francesca cooks creatively.",
                    "fol": "p_1(Francesca)",
                    "str_fol": "cooks_creatively(Francesca)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Francesca",
                    "text": "Francesca does not run a restaurant.",
                    "fol": "\u00acp_2(Francesca)",
                    "str_fol": "\u00acruns_restaurant(Francesca)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Francesca melds flavors and cooks creatively, then she runs a restaurant.",
                    "fol": "(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)",
                    "str_fol": "(meld_flavors(Francesca) \u2227 cooks_creatively(Francesca)) \u2192 runs_restaurant(Francesca)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Francesca",
                "text": "Francesca does not meld flavors in her cooking.",
                "fol": "\u00acp_7(Francesca)",
                "str_fol": "\u00acmeld_flavors(Francesca)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Francesca",
                    "text": "Francesca does not bring people together.",
                    "fol": "\u00acp_10(Francesca)",
                    "str_fol": "\u00acbring_people_together(Francesca)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who celebrates diversity or hosts events can bring people together.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((celebrate_diversity(x) \u2228 host_events(x)) \u2192 bring_people_together(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Francesca",
                "text": "Francesca does not celebrate diversity in her cooking and community work.",
                "fol": "\u00acp_8(Francesca)",
                "str_fol": "\u00accelebrate_diversity(Francesca)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Francesca",
                    "text": "Francesca does not meld flavors in her cooking.",
                    "fol": "\u00acp_7(Francesca)",
                    "str_fol": "\u00acmeld_flavors(Francesca)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Francesca",
                    "text": "Francesca does not celebrate diversity in her cooking and community work.",
                    "fol": "\u00acp_8(Francesca)",
                    "str_fol": "\u00accelebrate_diversity(Francesca)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every culinary explorer either melds flavors or celebrates diversity (or both) in their work.",
                    "fol": "\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))",
                    "str_fol": "\u2200x (is_culinary_explorer(x) \u2192 (meld_flavors(x) \u2228 celebrate_diversity(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Francesca",
                "text": "Francesca is not a culinary explorer.",
                "fol": "\u00acp_5(Francesca)",
                "str_fol": "\u00acis_culinary_explorer(Francesca)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Francesca",
                    "text": "Francesca is not a culinary explorer.",
                    "fol": "\u00acp_5(Francesca)",
                    "str_fol": "\u00acis_culinary_explorer(Francesca)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Francesca is a culinary explorer, then she creates innovative dishes.",
                    "fol": "p_5(Francesca) \u2192 p_6(Francesca)",
                    "str_fol": "is_culinary_explorer(Francesca) \u2192 creates_innovative_dishes(Francesca)"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca).",
                    "p_0(Francesca).",
                    "p_3(Francesca).",
                    "p_1(Francesca).",
                    "-p_2(Francesca).",
                    "all x (-(p_4(x) <-> p_10(x))).",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca).",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca).",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x)).",
                    "all x (p_5(x) -> (p_7(x) | p_8(x))).",
                    "p_5(Francesca) -> p_6(Francesca).",
                    "-p_5(Francesca) -> -p_6(Francesca)."
                ],
                "formulas(goals)": [
                    "-p_6(Francesca)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_5(Francesca) \u2192 \u00acp_6(Francesca)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)\n\u2200x (p_6(x) \u2192 p_10(x))",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca)",
                    "p_0(Francesca)",
                    "p_3(Francesca)",
                    "p_1(Francesca)",
                    "-p_2(Francesca)",
                    "all x (-(p_4(x) <-> p_10(x)))",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca)",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca)",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "all x (p_5(x) -> (p_7(x) | p_8(x)))",
                    "p_5(Francesca) -> p_6(Francesca)",
                    "all x (p_6(x) -> p_10(x))"
                ],
                "formulas(goals)": [
                    "-p_6(Francesca)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_6(x) \u2192 p_10(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)\n\u2200x (\u00acp_10(x) \u2192 p_6(x))",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca)",
                    "p_0(Francesca)",
                    "p_3(Francesca)",
                    "p_1(Francesca)",
                    "-p_2(Francesca)",
                    "all x (-(p_4(x) <-> p_10(x)))",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca)",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca)",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "all x (p_5(x) -> (p_7(x) | p_8(x)))",
                    "p_5(Francesca) -> p_6(Francesca)",
                    "all x (-p_10(x) -> p_6(x))"
                ],
                "formulas(goals)": [
                    "-(-p_6(Francesca))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2192 p_10(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_10(x) \u2192 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n\u2200x (p_4(x) \u2295 p_10(x))\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)\n\u2200x (\u00acp_10(x) \u2192 p_6(x))\n\u2200x ((\u00acp_7(x) \u2227 \u00acp_8(x)) \u2192 \u00acp_5(x))\n\u2200x (\u00acp_6(x) \u2192 p_10(x))",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca)",
                    "p_0(Francesca)",
                    "p_3(Francesca)",
                    "p_1(Francesca)",
                    "-p_2(Francesca)",
                    "all x (-(p_4(x) <-> p_10(x)))",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca)",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca)",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "all x (p_5(x) -> (p_7(x) | p_8(x)))",
                    "p_5(Francesca) -> p_6(Francesca)",
                    "all x (-p_10(x) -> p_6(x))",
                    "all x ((-p_7(x) & -p_8(x)) -> -p_5(x))",
                    "all x (-p_6(x) -> p_10(x))"
                ],
                "formulas(goals)": [
                    "-(-p_6(Francesca))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((\u00acp_7(x) \u2227 \u00acp_8(x)) \u2192 \u00acp_5(x))",
                    "\u2200x (\u00acp_6(x) \u2192 p_10(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)\n\u2200x ((\u00acp_7(x) \u2227 \u00acp_8(x)) \u2192 \u00acp_5(x))\n\u2200x (\u00acp_6(x) \u2192 p_10(x))\np_10(Francesca)\np_10(Francesca) \u2192 \u00acp_6(Francesca)",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca)",
                    "p_0(Francesca)",
                    "p_3(Francesca)",
                    "p_1(Francesca)",
                    "-p_2(Francesca)",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca)",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca)",
                    "all x ((p_8(x) | p_9(x)) -> p_10(x))",
                    "all x (p_5(x) -> (p_7(x) | p_8(x)))",
                    "p_5(Francesca) -> p_6(Francesca)",
                    "all x ((-p_7(x) & -p_8(x)) -> -p_5(x))",
                    "all x (-p_6(x) -> p_10(x))",
                    "p_10(Francesca)",
                    "p_10(Francesca) -> -p_6(Francesca)"
                ],
                "formulas(goals)": [
                    "-p_6(Francesca)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2295 p_10(x))",
                    "\u2200x (\u00acp_10(x) \u2192 p_6(x))"
                ],
                "added_facts": [
                    "p_10(Francesca)"
                ],
                "added_rules": [
                    "p_10(Francesca) \u2192 \u00acp_6(Francesca)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)\n\u2200x ((\u00acp_7(x) \u2227 \u00acp_8(x)) \u2192 \u00acp_5(x))\n\u2200x (\u00acp_6(x) \u2192 p_10(x))\np_10(Francesca)\np_10(Francesca) \u2192 \u00acp_6(Francesca)\n\u00acp_6(Francesca)",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca)",
                    "p_0(Francesca)",
                    "p_3(Francesca)",
                    "p_1(Francesca)",
                    "-p_2(Francesca)",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca)",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca)",
                    "all x (-p_10(x) -> (-p_8(x) & -p_9(x)))",
                    "all x (p_5(x) -> (p_7(x) | p_8(x)))",
                    "p_5(Francesca) -> p_6(Francesca)",
                    "all x ((-p_7(x) & -p_8(x)) -> -p_5(x))",
                    "all x (-p_6(x) -> p_10(x))",
                    "p_10(Francesca)",
                    "p_10(Francesca) -> -p_6(Francesca)",
                    "-p_6(Francesca)"
                ],
                "formulas(goals)": [
                    "-p_6(Francesca)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_10(x))"
                ],
                "added_facts": [
                    "\u00acp_6(Francesca)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Francesca)\np_0(Francesca)\np_3(Francesca)\np_1(Francesca)\n\u00acp_2(Francesca)\n(p_0(Francesca) \u2295 p_9(Francesca)) \u2192 p_3(Francesca)\n(p_7(Francesca) \u2227 p_1(Francesca)) \u2192 p_2(Francesca)\n\u2200x (\u00acp_10(x) \u2192 (\u00acp_8(x) \u2227 \u00acp_9(x)))\n\u2200x (p_5(x) \u2192 (p_7(x) \u2228 p_8(x)))\np_5(Francesca) \u2192 p_6(Francesca)\n\u2200x ((\u00acp_7(x) \u2227 \u00acp_8(x)) \u2192 \u00acp_5(x))\n\u2200x (\u00acp_6(x) \u2192 p_10(x))\np_10(Francesca)\np_8(Francesca)\np_5(Francesca)",
            "Initial Goal": "\u00acp_6(Francesca)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Francesca)",
                    "p_0(Francesca)",
                    "p_3(Francesca)",
                    "p_1(Francesca)",
                    "-p_2(Francesca)",
                    "(-(p_0(Francesca) <-> p_9(Francesca))) -> p_3(Francesca)",
                    "(p_7(Francesca) & p_1(Francesca)) -> p_2(Francesca)",
                    "all x (-p_10(x) -> (-p_8(x) & -p_9(x)))",
                    "all x (p_5(x) -> (p_7(x) | p_8(x)))",
                    "p_5(Francesca) -> p_6(Francesca)",
                    "all x ((-p_7(x) & -p_8(x)) -> -p_5(x))",
                    "all x (-p_6(x) -> p_10(x))",
                    "p_10(Francesca)",
                    "p_8(Francesca)",
                    "p_5(Francesca)"
                ],
                "formulas(goals)": [
                    "-(-p_6(Francesca))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Francesca)"
                ],
                "removed_rules": [
                    "p_10(Francesca) \u2192 \u00acp_6(Francesca)"
                ],
                "added_facts": [
                    "p_8(Francesca)",
                    "p_5(Francesca)"
                ],
                "added_rules": []
            }
        }
    ]
}