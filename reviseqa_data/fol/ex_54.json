{
    "background_story": "Aurelia was a dedicated bus driver who spent most of her days navigating the busy city streets. She took great pride in her work, ensuring that every passenger reached their destination safely and on time. Even on her days off, Aurelia would often find herself thinking about her route, wondering how she could improve the commute for her regular riders. Her friends and family would jokingly call her a 'busman' because she seemed to always be on the job, even when she wasn't driving. Aurelia didn't mind; she loved the sense of responsibility and the feeling of being an integral part of the community's daily rhythm. She knew every stop, every landmark, and every face on her route, making her more than just a driver - she was a trusted fixture in the neighborhood.",
    "predicates": [
        {
            "id": 0,
            "name": "drives_safely"
        },
        {
            "id": 1,
            "name": "shows_up"
        },
        {
            "id": 2,
            "name": "earns_trust"
        },
        {
            "id": 3,
            "name": "meets_deadlines"
        },
        {
            "id": 4,
            "name": "is_dependable"
        },
        {
            "id": 5,
            "name": "is_punctual"
        },
        {
            "id": 6,
            "name": "feels_fulfilled"
        },
        {
            "id": 7,
            "name": "is_dedicated"
        },
        {
            "id": 8,
            "name": "takes_responsibility"
        },
        {
            "id": 9,
            "name": "cares_passengers"
        },
        {
            "id": 10,
            "name": "knows_route"
        },
        {
            "id": 11,
            "name": "helps_others"
        },
        {
            "id": 12,
            "name": "loves_job"
        },
        {
            "id": 13,
            "name": "is_reliable"
        },
        {
            "id": 14,
            "name": "enjoys_work"
        },
        {
            "id": 15,
            "name": "does_duty"
        },
        {
            "id": 16,
            "name": "serves_community"
        },
        {
            "id": 17,
            "name": "builds_relationships"
        },
        {
            "id": 18,
            "name": "makes_difference"
        },
        {
            "id": 19,
            "name": "familiar_face"
        },
        {
            "id": 20,
            "name": "enjoys_driving"
        },
        {
            "id": 21,
            "name": "works_hard"
        },
        {
            "id": 22,
            "name": "plans_ahead"
        },
        {
            "id": 23,
            "name": "is_accountable"
        },
        {
            "id": 24,
            "name": "likes_driving"
        }
    ],
    "subject_name": "Aurelia",
    "subject_category": "human",
    "keyword": "busman",
    "all_facts": [
        {
            "id": 0,
            "subject": "Aurelia",
            "text": "Aurelia drives safely.",
            "fol": "p_0(Aurelia)",
            "str_fol": "drives_safely(Aurelia)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Aurelia",
            "text": "Aurelia does not show up.",
            "fol": "\u00acp_1(Aurelia)",
            "str_fol": "\u00acshows_up(Aurelia)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Aurelia",
            "text": "Aurelia does not earn trust.",
            "fol": "\u00acp_2(Aurelia)",
            "str_fol": "\u00acearns_trust(Aurelia)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Aurelia",
            "text": "Aurelia meets deadlines.",
            "fol": "p_3(Aurelia)",
            "str_fol": "meets_deadlines(Aurelia)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Aurelia",
            "text": "Aurelia is not dependable.",
            "fol": "\u00acp_4(Aurelia)",
            "str_fol": "\u00acis_dependable(Aurelia)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Aurelia",
            "text": "Aurelia is punctual.",
            "fol": "p_5(Aurelia)",
            "str_fol": "is_punctual(Aurelia)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aurelia",
            "text": "Aurelia feels fulfilled.",
            "fol": "p_6(Aurelia)",
            "str_fol": "feels_fulfilled(Aurelia)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Aurelia",
            "text": "Aurelia does not enjoy her work.",
            "fol": "\u00acp_14(Aurelia)",
            "str_fol": "\u00acenjoys_work(Aurelia)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Aurelia",
            "text": "Aurelia does her duty.",
            "fol": "p_15(Aurelia)",
            "str_fol": "does_duty(Aurelia)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Aurelia",
            "text": "Aurelia is reliable.",
            "fol": "p_13(Aurelia)",
            "str_fol": "is_reliable(Aurelia)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Aurelia",
            "text": "Aurelia loves her job.",
            "fol": "p_12(Aurelia)",
            "str_fol": "loves_job(Aurelia)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Aurelia",
            "text": "Aurelia does not know the route.",
            "fol": "\u00acp_10(Aurelia)",
            "str_fol": "\u00acknows_route(Aurelia)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Aurelia",
            "text": "Aurelia does not help others.",
            "fol": "\u00acp_11(Aurelia)",
            "str_fol": "\u00achelps_others(Aurelia)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Aurelia",
            "text": "Aurelia does not care for passengers.",
            "fol": "\u00acp_9(Aurelia)",
            "str_fol": "\u00accares_passengers(Aurelia)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Aurelia",
            "text": "Aurelia takes responsibility for her passengers' safety.",
            "fol": "p_8(Aurelia)",
            "str_fol": "takes_responsibility(Aurelia)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Aurelia",
            "text": "Aurelia is not dedicated to her job.",
            "fol": "\u00acp_7(Aurelia)",
            "str_fol": "\u00acis_dedicated(Aurelia)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Aurelia",
            "text": "Aurelia is punctual.",
            "fol": "p_5(Aurelia)",
            "str_fol": "is_punctual(Aurelia)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aurelia",
            "text": "Aurelia feels fulfilled.",
            "fol": "p_6(Aurelia)",
            "str_fol": "feels_fulfilled(Aurelia)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aurelia",
            "text": "Aurelia meets deadlines.",
            "fol": "p_3(Aurelia)",
            "str_fol": "meets_deadlines(Aurelia)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Aurelia",
            "text": "Aurelia is not dependable.",
            "fol": "\u00acp_4(Aurelia)",
            "str_fol": "\u00acis_dependable(Aurelia)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Aurelia",
            "text": "Aurelia does not show up.",
            "fol": "\u00acp_1(Aurelia)",
            "str_fol": "\u00acshows_up(Aurelia)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Aurelia",
            "text": "Aurelia drives safely.",
            "fol": "p_0(Aurelia)",
            "str_fol": "drives_safely(Aurelia)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Aurelia",
            "text": "Aurelia does not earn trust.",
            "fol": "\u00acp_2(Aurelia)",
            "str_fol": "\u00acearns_trust(Aurelia)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Aurelia is punctual, then she either feels fulfilled or enjoys her work, but not both.",
            "fol": "p_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))",
            "str_fol": "is_punctual(Aurelia) \u2192 (feels_fulfilled(Aurelia) \u2295 enjoys_work(Aurelia))"
        },
        {
            "id": 7,
            "text": "If Aurelia either meets deadlines or does her duty (but not both), then she is dependable.",
            "fol": "(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)",
            "str_fol": "(meets_deadlines(Aurelia) \u2295 does_duty(Aurelia)) \u2192 is_dependable(Aurelia)"
        },
        {
            "id": 6,
            "text": "Any person who shows up or does their duty is reliable.",
            "fol": "\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((shows_up(x) \u2228 does_duty(x)) \u2192 is_reliable(x))"
        },
        {
            "id": 5,
            "text": "If Aurelia is reliable, then she either loves her job or enjoys her work, but not both.",
            "fol": "p_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))",
            "str_fol": "is_reliable(Aurelia) \u2192 (loves_job(Aurelia) \u2295 enjoys_work(Aurelia))"
        },
        {
            "id": 4,
            "text": "Aurelia either knows her route or loves her job, but not necessarily both.",
            "fol": "p_10(Aurelia) \u2295 p_12(Aurelia)",
            "str_fol": "knows_route(Aurelia) \u2295 loves_job(Aurelia)"
        },
        {
            "id": 3,
            "text": "If someone helps others and drives safely, then they earn trust.",
            "fol": "\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((helps_others(x) \u2227 drives_safely(x)) \u2192 earns_trust(x))"
        },
        {
            "id": 2,
            "text": "If someone cares for passengers, then they know the route and help others.",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))",
            "str_fol": "\u2200x (cares_passengers(x) \u2192 (knows_route(x) \u2227 helps_others(x)))"
        },
        {
            "id": 1,
            "text": "Aurelia either takes responsibility or cares for passengers.",
            "fol": "p_8(Aurelia) \u2228 p_9(Aurelia)",
            "str_fol": "takes_responsibility(Aurelia) \u2228 cares_passengers(Aurelia)"
        },
        {
            "id": 0,
            "text": "For all humans, if they are dedicated, then they take responsibility.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (is_dedicated(x) \u2192 takes_responsibility(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Aurelia",
            "text": "Aurelia is punctual.",
            "fol": "p_5(Aurelia)",
            "str_fol": "is_punctual(Aurelia)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Aurelia",
            "text": "Aurelia feels fulfilled.",
            "fol": "p_6(Aurelia)",
            "str_fol": "feels_fulfilled(Aurelia)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Aurelia",
            "text": "Aurelia meets deadlines.",
            "fol": "p_3(Aurelia)",
            "str_fol": "meets_deadlines(Aurelia)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Aurelia",
            "text": "Aurelia is not dependable.",
            "fol": "\u00acp_4(Aurelia)",
            "str_fol": "\u00acis_dependable(Aurelia)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Aurelia",
            "text": "Aurelia does not show up.",
            "fol": "\u00acp_1(Aurelia)",
            "str_fol": "\u00acshows_up(Aurelia)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Aurelia",
            "text": "Aurelia drives safely.",
            "fol": "p_0(Aurelia)",
            "str_fol": "drives_safely(Aurelia)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Aurelia",
            "text": "Aurelia does not earn trust.",
            "fol": "\u00acp_2(Aurelia)",
            "str_fol": "\u00acearns_trust(Aurelia)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Aurelia is punctual, then she either feels fulfilled or enjoys her work, but not both.",
            "fol": "p_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))",
            "str_fol": "is_punctual(Aurelia) \u2192 (feels_fulfilled(Aurelia) \u2295 enjoys_work(Aurelia))"
        },
        {
            "id": 7,
            "text": "If Aurelia either meets deadlines or does her duty (but not both), then she is dependable.",
            "fol": "(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)",
            "str_fol": "(meets_deadlines(Aurelia) \u2295 does_duty(Aurelia)) \u2192 is_dependable(Aurelia)"
        },
        {
            "id": 6,
            "text": "Any person who shows up or does their duty is reliable.",
            "fol": "\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((shows_up(x) \u2228 does_duty(x)) \u2192 is_reliable(x))"
        },
        {
            "id": 5,
            "text": "If Aurelia is reliable, then she either loves her job or enjoys her work, but not both.",
            "fol": "p_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))",
            "str_fol": "is_reliable(Aurelia) \u2192 (loves_job(Aurelia) \u2295 enjoys_work(Aurelia))"
        },
        {
            "id": 4,
            "text": "Aurelia either knows her route or loves her job, but not necessarily both.",
            "fol": "p_10(Aurelia) \u2295 p_12(Aurelia)",
            "str_fol": "knows_route(Aurelia) \u2295 loves_job(Aurelia)"
        },
        {
            "id": 3,
            "text": "If someone helps others and drives safely, then they earn trust.",
            "fol": "\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((helps_others(x) \u2227 drives_safely(x)) \u2192 earns_trust(x))"
        },
        {
            "id": 2,
            "text": "If someone cares for passengers, then they know the route and help others.",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))",
            "str_fol": "\u2200x (cares_passengers(x) \u2192 (knows_route(x) \u2227 helps_others(x)))"
        },
        {
            "id": 1,
            "text": "Aurelia either takes responsibility or cares for passengers.",
            "fol": "p_8(Aurelia) \u2228 p_9(Aurelia)",
            "str_fol": "takes_responsibility(Aurelia) \u2228 cares_passengers(Aurelia)"
        },
        {
            "id": 0,
            "text": "For all humans, if they are dedicated, then they take responsibility.",
            "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
            "str_fol": "\u2200x (is_dedicated(x) \u2192 takes_responsibility(x))"
        }
    ],
    "context_fol": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))",
    "conclusion": {
        "id": 15,
        "subject": "Aurelia",
        "text": "Aurelia is not dedicated to her job.",
        "fol": "\u00acp_7(Aurelia)",
        "str_fol": "\u00acis_dedicated(Aurelia)",
        "negation": true
    },
    "initial_answer": "Uncertain",
    "initial_goal": "\u00acp_7(Aurelia)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Aurelia",
                    "text": "Aurelia is punctual.",
                    "fol": "p_5(Aurelia)",
                    "str_fol": "is_punctual(Aurelia)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Aurelia",
                    "text": "Aurelia feels fulfilled.",
                    "fol": "p_6(Aurelia)",
                    "str_fol": "feels_fulfilled(Aurelia)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Aurelia is punctual, then she either feels fulfilled or enjoys her work, but not both.",
                    "fol": "p_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))",
                    "str_fol": "is_punctual(Aurelia) \u2192 (feels_fulfilled(Aurelia) \u2295 enjoys_work(Aurelia))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Aurelia",
                "text": "Aurelia does not enjoy her work.",
                "fol": "\u00acp_14(Aurelia)",
                "str_fol": "\u00acenjoys_work(Aurelia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Aurelia",
                    "text": "Aurelia meets deadlines.",
                    "fol": "p_3(Aurelia)",
                    "str_fol": "meets_deadlines(Aurelia)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Aurelia",
                    "text": "Aurelia is not dependable.",
                    "fol": "\u00acp_4(Aurelia)",
                    "str_fol": "\u00acis_dependable(Aurelia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Aurelia either meets deadlines or does her duty (but not both), then she is dependable.",
                    "fol": "(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)",
                    "str_fol": "(meets_deadlines(Aurelia) \u2295 does_duty(Aurelia)) \u2192 is_dependable(Aurelia)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Aurelia",
                "text": "Aurelia does her duty.",
                "fol": "p_15(Aurelia)",
                "str_fol": "does_duty(Aurelia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Aurelia",
                    "text": "Aurelia does not show up.",
                    "fol": "\u00acp_1(Aurelia)",
                    "str_fol": "\u00acshows_up(Aurelia)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Aurelia",
                    "text": "Aurelia does her duty.",
                    "fol": "p_15(Aurelia)",
                    "str_fol": "does_duty(Aurelia)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Any person who shows up or does their duty is reliable.",
                    "fol": "\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((shows_up(x) \u2228 does_duty(x)) \u2192 is_reliable(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Aurelia",
                "text": "Aurelia is reliable.",
                "fol": "p_13(Aurelia)",
                "str_fol": "is_reliable(Aurelia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Aurelia",
                    "text": "Aurelia is reliable.",
                    "fol": "p_13(Aurelia)",
                    "str_fol": "is_reliable(Aurelia)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Aurelia",
                    "text": "Aurelia does not enjoy her work.",
                    "fol": "\u00acp_14(Aurelia)",
                    "str_fol": "\u00acenjoys_work(Aurelia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Aurelia is reliable, then she either loves her job or enjoys her work, but not both.",
                    "fol": "p_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))",
                    "str_fol": "is_reliable(Aurelia) \u2192 (loves_job(Aurelia) \u2295 enjoys_work(Aurelia))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Aurelia",
                "text": "Aurelia loves her job.",
                "fol": "p_12(Aurelia)",
                "str_fol": "loves_job(Aurelia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Aurelia",
                    "text": "Aurelia loves her job.",
                    "fol": "p_12(Aurelia)",
                    "str_fol": "loves_job(Aurelia)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Aurelia either knows her route or loves her job, but not necessarily both.",
                    "fol": "p_10(Aurelia) \u2295 p_12(Aurelia)",
                    "str_fol": "knows_route(Aurelia) \u2295 loves_job(Aurelia)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Aurelia",
                "text": "Aurelia does not know the route.",
                "fol": "\u00acp_10(Aurelia)",
                "str_fol": "\u00acknows_route(Aurelia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Aurelia",
                    "text": "Aurelia drives safely.",
                    "fol": "p_0(Aurelia)",
                    "str_fol": "drives_safely(Aurelia)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Aurelia",
                    "text": "Aurelia does not earn trust.",
                    "fol": "\u00acp_2(Aurelia)",
                    "str_fol": "\u00acearns_trust(Aurelia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone helps others and drives safely, then they earn trust.",
                    "fol": "\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((helps_others(x) \u2227 drives_safely(x)) \u2192 earns_trust(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Aurelia",
                "text": "Aurelia does not help others.",
                "fol": "\u00acp_11(Aurelia)",
                "str_fol": "\u00achelps_others(Aurelia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Aurelia",
                    "text": "Aurelia does not know the route.",
                    "fol": "\u00acp_10(Aurelia)",
                    "str_fol": "\u00acknows_route(Aurelia)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Aurelia",
                    "text": "Aurelia does not help others.",
                    "fol": "\u00acp_11(Aurelia)",
                    "str_fol": "\u00achelps_others(Aurelia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone cares for passengers, then they know the route and help others.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))",
                    "str_fol": "\u2200x (cares_passengers(x) \u2192 (knows_route(x) \u2227 helps_others(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Aurelia",
                "text": "Aurelia does not care for passengers.",
                "fol": "\u00acp_9(Aurelia)",
                "str_fol": "\u00accares_passengers(Aurelia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Aurelia",
                    "text": "Aurelia does not care for passengers.",
                    "fol": "\u00acp_9(Aurelia)",
                    "str_fol": "\u00accares_passengers(Aurelia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Aurelia either takes responsibility or cares for passengers.",
                    "fol": "p_8(Aurelia) \u2228 p_9(Aurelia)",
                    "str_fol": "takes_responsibility(Aurelia) \u2228 cares_passengers(Aurelia)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Aurelia",
                "text": "Aurelia takes responsibility for her passengers' safety.",
                "fol": "p_8(Aurelia)",
                "str_fol": "takes_responsibility(Aurelia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Aurelia",
                    "text": "Aurelia takes responsibility for her passengers' safety.",
                    "fol": "p_8(Aurelia)",
                    "str_fol": "takes_responsibility(Aurelia)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they are dedicated, then they take responsibility.",
                    "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
                    "str_fol": "\u2200x (is_dedicated(x) \u2192 takes_responsibility(x))"
                }
            ],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia).",
                    "p_6(Aurelia).",
                    "p_3(Aurelia).",
                    "-p_4(Aurelia).",
                    "-p_1(Aurelia).",
                    "p_0(Aurelia).",
                    "-p_2(Aurelia).",
                    "p_5(Aurelia) -> (-(p_6(Aurelia) <-> p_14(Aurelia))).",
                    "(-(p_3(Aurelia) <-> p_15(Aurelia))) -> p_4(Aurelia).",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x)).",
                    "p_13(Aurelia) -> (-(p_12(Aurelia) <-> p_14(Aurelia))).",
                    "-(p_10(Aurelia) <-> p_12(Aurelia)).",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x)).",
                    "all x (p_9(x) -> (p_10(x) & p_11(x))).",
                    "p_8(Aurelia) | p_9(Aurelia).",
                    "all x (p_7(x) -> p_8(x)).",
                    "p_7(Aurelia) -> p_2(Aurelia)."
                ],
                "formulas(goals)": [
                    "-p_7(Aurelia)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Aurelia) \u2192 p_2(Aurelia)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))\np_0(Aurelia) \u2192 p_7(Aurelia)",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia)",
                    "p_6(Aurelia)",
                    "p_3(Aurelia)",
                    "-p_4(Aurelia)",
                    "-p_1(Aurelia)",
                    "p_0(Aurelia)",
                    "-p_2(Aurelia)",
                    "p_5(Aurelia) -> (-(p_6(Aurelia) <-> p_14(Aurelia)))",
                    "(-(p_3(Aurelia) <-> p_15(Aurelia))) -> p_4(Aurelia)",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x))",
                    "p_13(Aurelia) -> (-(p_12(Aurelia) <-> p_14(Aurelia)))",
                    "-(p_10(Aurelia) <-> p_12(Aurelia))",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x))",
                    "all x (p_9(x) -> (p_10(x) & p_11(x)))",
                    "p_8(Aurelia) | p_9(Aurelia)",
                    "all x (p_7(x) -> p_8(x))",
                    "p_0(Aurelia) -> p_7(Aurelia)"
                ],
                "formulas(goals)": [
                    "--p_7(Aurelia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_0(Aurelia) \u2192 p_7(Aurelia)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))\np_0(Aurelia) \u2192 p_7(Aurelia)\np_7(Aurelia) \u2228 \u00acp_7(Aurelia)\n\u00acp_7(Aurelia) \u2192 \u00acp_0(Aurelia)\np_8(Aurelia)\n\u00acp_8(Aurelia) \u2192 p_9(Aurelia)\np_15(Aurelia) \u2192 p_13(Aurelia)\np_13(Aurelia) \u2192 ((p_12(Aurelia) \u2228 p_14(Aurelia)) \u2227 (\u00acp_12(Aurelia) \u2228 \u00acp_14(Aurelia)))\n(p_10(Aurelia) \u2228 p_12(Aurelia)) \u2227 (\u00acp_10(Aurelia) \u2228 \u00acp_12(Aurelia))\n((p_3(Aurelia) \u2228 p_15(Aurelia)) \u2227 (\u00acp_3(Aurelia) \u2228 \u00acp_15(Aurelia))) \u2192 p_4(Aurelia)",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia)",
                    "p_6(Aurelia)",
                    "p_3(Aurelia)",
                    "-p_4(Aurelia)",
                    "-p_1(Aurelia)",
                    "p_0(Aurelia)",
                    "-p_2(Aurelia)",
                    "p_5(Aurelia) -> -(p_6(Aurelia) <-> p_14(Aurelia))",
                    "-(p_3(Aurelia) <-> p_15(Aurelia)) -> p_4(Aurelia)",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x))",
                    "p_13(Aurelia) -> -(p_12(Aurelia) <-> p_14(Aurelia))",
                    "-(p_10(Aurelia) <-> p_12(Aurelia))",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x))",
                    "all x (p_9(x) -> (p_10(x) & p_11(x)))",
                    "p_8(Aurelia) | p_9(Aurelia)",
                    "all x (p_7(x) -> p_8(x))",
                    "p_0(Aurelia) -> p_7(Aurelia)",
                    "p_7(Aurelia) | -p_7(Aurelia)",
                    "-p_7(Aurelia) -> -p_0(Aurelia)",
                    "p_8(Aurelia)",
                    "-p_8(Aurelia) -> p_9(Aurelia)",
                    "p_15(Aurelia) -> p_13(Aurelia)",
                    "p_13(Aurelia) -> ((p_12(Aurelia) | p_14(Aurelia)) & (-p_12(Aurelia) | -p_14(Aurelia)))",
                    "(p_10(Aurelia) | p_12(Aurelia)) & (-p_10(Aurelia) | -p_12(Aurelia))",
                    "((p_3(Aurelia) | p_15(Aurelia)) & (-p_3(Aurelia) | -p_15(Aurelia))) -> p_4(Aurelia)"
                ],
                "formulas(goals)": [
                    "p_7(Aurelia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Aurelia)",
                    "(p_10(Aurelia) \u2228 p_12(Aurelia)) \u2227 (\u00acp_10(Aurelia) \u2228 \u00acp_12(Aurelia))"
                ],
                "added_rules": [
                    "p_7(Aurelia) \u2228 \u00acp_7(Aurelia)",
                    "\u00acp_7(Aurelia) \u2192 \u00acp_0(Aurelia)",
                    "\u00acp_8(Aurelia) \u2192 p_9(Aurelia)",
                    "p_15(Aurelia) \u2192 p_13(Aurelia)",
                    "p_13(Aurelia) \u2192 ((p_12(Aurelia) \u2228 p_14(Aurelia)) \u2227 (\u00acp_12(Aurelia) \u2228 \u00acp_14(Aurelia)))",
                    "((p_3(Aurelia) \u2228 p_15(Aurelia)) \u2227 (\u00acp_3(Aurelia) \u2228 \u00acp_15(Aurelia))) \u2192 p_4(Aurelia)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))\n(p_0(Aurelia) \u2227 \u00acp_15(Aurelia)) \u2192 p_7(Aurelia)\np_7(Aurelia) \u2228 \u00acp_7(Aurelia)\n\u00acp_7(Aurelia) \u2192 \u00acp_0(Aurelia)\np_8(Aurelia)\n\u00acp_8(Aurelia) \u2192 p_9(Aurelia)\np_15(Aurelia) \u2192 p_13(Aurelia)\np_13(Aurelia) \u2192 ((p_12(Aurelia) \u2228 p_14(Aurelia)) \u2227 (\u00acp_12(Aurelia) \u2228 \u00acp_14(Aurelia)))\n(p_10(Aurelia) \u2228 p_12(Aurelia)) \u2227 (\u00acp_10(Aurelia) \u2228 \u00acp_12(Aurelia))\n((p_3(Aurelia) \u2228 p_15(Aurelia)) \u2227 (\u00acp_3(Aurelia) \u2228 \u00acp_15(Aurelia))) \u2192 p_4(Aurelia)\np_15(Aurelia) \u2192 \u00acp_7(Aurelia)",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia)",
                    "p_6(Aurelia)",
                    "p_3(Aurelia)",
                    "-p_4(Aurelia)",
                    "-p_1(Aurelia)",
                    "p_0(Aurelia)",
                    "-p_2(Aurelia)",
                    "p_5(Aurelia) -> (-(p_6(Aurelia) <-> p_14(Aurelia)))",
                    "(-(p_3(Aurelia) <-> p_15(Aurelia))) -> p_4(Aurelia)",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x))",
                    "p_13(Aurelia) -> (-(p_12(Aurelia) <-> p_14(Aurelia)))",
                    "-(p_10(Aurelia) <-> p_12(Aurelia))",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x))",
                    "all x (p_9(x) -> (p_10(x) & p_11(x)))",
                    "p_8(Aurelia) | p_9(Aurelia)",
                    "all x (p_7(x) -> p_8(x))",
                    "(p_0(Aurelia) & -p_15(Aurelia)) -> p_7(Aurelia)",
                    "p_7(Aurelia) | -p_7(Aurelia)",
                    "-p_7(Aurelia) -> -p_0(Aurelia)",
                    "p_8(Aurelia)",
                    "-p_8(Aurelia) -> p_9(Aurelia)",
                    "p_15(Aurelia) -> p_13(Aurelia)",
                    "p_13(Aurelia) -> ((p_12(Aurelia) | p_14(Aurelia)) & (-p_12(Aurelia) | -p_14(Aurelia)))",
                    "(p_10(Aurelia) | p_12(Aurelia)) & (-p_10(Aurelia) | -p_12(Aurelia))",
                    "((p_3(Aurelia) | p_15(Aurelia)) & (-p_3(Aurelia) | -p_15(Aurelia))) -> p_4(Aurelia)",
                    "p_15(Aurelia) -> -p_7(Aurelia)"
                ],
                "formulas(goals)": [
                    "-p_7(Aurelia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Aurelia) \u2192 p_7(Aurelia)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Aurelia) \u2227 \u00acp_15(Aurelia)) \u2192 p_7(Aurelia)",
                    "p_15(Aurelia) \u2192 \u00acp_7(Aurelia)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))\n(p_0(Aurelia) \u2227 \u00acp_15(Aurelia)) \u2192 p_7(Aurelia)\np_7(Aurelia) \u2228 \u00acp_7(Aurelia)\n\u00acp_7(Aurelia) \u2192 \u00acp_0(Aurelia)\np_8(Aurelia)\n\u00acp_8(Aurelia) \u2192 p_9(Aurelia)\np_15(Aurelia) \u2192 p_13(Aurelia)\np_13(Aurelia) \u2192 ((p_12(Aurelia) \u2228 p_14(Aurelia)) \u2227 (\u00acp_12(Aurelia) \u2228 \u00acp_14(Aurelia)))\n(p_10(Aurelia) \u2228 p_12(Aurelia)) \u2227 (\u00acp_10(Aurelia) \u2228 \u00acp_12(Aurelia))\n((p_3(Aurelia) \u2228 p_15(Aurelia)) \u2227 (\u00acp_3(Aurelia) \u2228 \u00acp_15(Aurelia))) \u2192 p_4(Aurelia)",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia)",
                    "p_6(Aurelia)",
                    "p_3(Aurelia)",
                    "-p_4(Aurelia)",
                    "-p_1(Aurelia)",
                    "p_0(Aurelia)",
                    "-p_2(Aurelia)",
                    "p_5(Aurelia) -> (-(p_6(Aurelia) <-> p_14(Aurelia)))",
                    "(-(p_3(Aurelia) <-> p_15(Aurelia))) -> p_4(Aurelia)",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x))",
                    "p_13(Aurelia) -> (-(p_12(Aurelia) <-> p_14(Aurelia)))",
                    "-(p_10(Aurelia) <-> p_12(Aurelia))",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x))",
                    "all x (p_9(x) -> (p_10(x) & p_11(x)))",
                    "p_8(Aurelia) | p_9(Aurelia)",
                    "all x (p_7(x) -> p_8(x))",
                    "(p_0(Aurelia) & -p_15(Aurelia)) -> p_7(Aurelia)",
                    "p_7(Aurelia) | -p_7(Aurelia)",
                    "-p_7(Aurelia) -> -p_0(Aurelia)",
                    "p_8(Aurelia)",
                    "-p_8(Aurelia) -> p_9(Aurelia)",
                    "p_15(Aurelia) -> p_13(Aurelia)",
                    "p_13(Aurelia) -> ((p_12(Aurelia) | p_14(Aurelia)) & (-p_12(Aurelia) | -p_14(Aurelia)))",
                    "(p_10(Aurelia) | p_12(Aurelia)) & (-p_10(Aurelia) | -p_12(Aurelia))",
                    "((p_3(Aurelia) | p_15(Aurelia)) & (-p_3(Aurelia) | -p_15(Aurelia))) -> p_4(Aurelia)"
                ],
                "formulas(goals)": [
                    "p_7(Aurelia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_15(Aurelia) \u2192 \u00acp_7(Aurelia)"
                ],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))\n(p_0(Aurelia) \u2227 \u00acp_15(Aurelia)) \u2192 p_7(Aurelia)\np_7(Aurelia) \u2228 \u00acp_7(Aurelia)\np_8(Aurelia)\n\u00acp_8(Aurelia) \u2192 p_9(Aurelia)\np_15(Aurelia) \u2192 p_13(Aurelia)\np_13(Aurelia) \u2192 ((p_12(Aurelia) \u2228 p_14(Aurelia)) \u2227 (\u00acp_12(Aurelia) \u2228 \u00acp_14(Aurelia)))\n(p_10(Aurelia) \u2228 p_12(Aurelia)) \u2227 (\u00acp_10(Aurelia) \u2228 \u00acp_12(Aurelia))\n((p_3(Aurelia) \u2228 p_15(Aurelia)) \u2227 (\u00acp_3(Aurelia) \u2228 \u00acp_15(Aurelia))) \u2192 p_4(Aurelia)\np_15(Aurelia) \u2192 \u00acp_7(Aurelia)",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia)",
                    "p_6(Aurelia)",
                    "p_3(Aurelia)",
                    "-p_4(Aurelia)",
                    "-p_1(Aurelia)",
                    "p_0(Aurelia)",
                    "-p_2(Aurelia)",
                    "p_5(Aurelia) -> -(p_6(Aurelia) <-> p_14(Aurelia))",
                    "(-(p_3(Aurelia) <-> p_15(Aurelia))) -> p_4(Aurelia)",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x))",
                    "p_13(Aurelia) -> -(p_12(Aurelia) <-> p_14(Aurelia))",
                    "-(p_10(Aurelia) <-> p_12(Aurelia))",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x))",
                    "all x (p_9(x) -> (p_10(x) & p_11(x)))",
                    "p_8(Aurelia) | p_9(Aurelia)",
                    "all x (p_7(x) -> p_8(x))",
                    "(p_0(Aurelia) & -p_15(Aurelia)) -> p_7(Aurelia)",
                    "p_7(Aurelia) | -p_7(Aurelia)",
                    "p_8(Aurelia)",
                    "-p_8(Aurelia) -> p_9(Aurelia)",
                    "p_15(Aurelia) -> p_13(Aurelia)",
                    "p_13(Aurelia) -> ((p_12(Aurelia) | p_14(Aurelia)) & (-p_12(Aurelia) | -p_14(Aurelia)))",
                    "(p_10(Aurelia) | p_12(Aurelia)) & (-p_10(Aurelia) | -p_12(Aurelia))",
                    "((p_3(Aurelia) | p_15(Aurelia)) & (-p_3(Aurelia) | -p_15(Aurelia))) -> p_4(Aurelia)",
                    "p_15(Aurelia) -> -p_7(Aurelia)"
                ],
                "formulas(goals)": [
                    "-p_7(Aurelia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_7(Aurelia) \u2192 \u00acp_0(Aurelia)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_15(Aurelia) \u2192 \u00acp_7(Aurelia)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Aurelia)\np_6(Aurelia)\np_3(Aurelia)\n\u00acp_4(Aurelia)\n\u00acp_1(Aurelia)\np_0(Aurelia)\n\u00acp_2(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2295 p_14(Aurelia))\n(p_3(Aurelia) \u2295 p_15(Aurelia)) \u2192 p_4(Aurelia)\n\u2200x ((p_1(x) \u2228 p_15(x)) \u2192 p_13(x))\np_13(Aurelia) \u2192 (p_12(Aurelia) \u2295 p_14(Aurelia))\np_10(Aurelia) \u2295 p_12(Aurelia)\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_2(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_11(x)))\np_8(Aurelia) \u2228 p_9(Aurelia)\n\u2200x (p_7(x) \u2192 p_8(x))\n(p_0(Aurelia) \u2227 \u00acp_15(Aurelia)) \u2192 p_7(Aurelia)\np_7(Aurelia) \u2228 \u00acp_7(Aurelia)\np_8(Aurelia)\n\u00acp_8(Aurelia) \u2192 p_9(Aurelia)\np_15(Aurelia) \u2192 p_13(Aurelia)\np_13(Aurelia) \u2192 ((p_12(Aurelia) \u2228 p_14(Aurelia)) \u2227 (\u00acp_12(Aurelia) \u2228 \u00acp_14(Aurelia)))\n(p_10(Aurelia) \u2228 p_12(Aurelia)) \u2227 (\u00acp_10(Aurelia) \u2228 \u00acp_12(Aurelia))\n((p_3(Aurelia) \u2228 p_15(Aurelia)) \u2227 (\u00acp_3(Aurelia) \u2228 \u00acp_15(Aurelia))) \u2192 p_4(Aurelia)\np_15(Aurelia) \u2192 \u00acp_7(Aurelia)\np_5(Aurelia) \u2192 (p_6(Aurelia) \u2228 p_14(Aurelia))\np_5(Aurelia) \u2192 (\u00acp_6(Aurelia) \u2228 \u00acp_14(Aurelia))",
            "Initial Goal": "\u00acp_7(Aurelia)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Aurelia)",
                    "p_6(Aurelia)",
                    "p_3(Aurelia)",
                    "-p_4(Aurelia)",
                    "-p_1(Aurelia)",
                    "p_0(Aurelia)",
                    "-p_2(Aurelia)",
                    "p_5(Aurelia) -> (-(p_6(Aurelia) <-> p_14(Aurelia)))",
                    "(-(p_3(Aurelia) <-> p_15(Aurelia))) -> p_4(Aurelia)",
                    "all x ((p_1(x) | p_15(x)) -> p_13(x))",
                    "p_13(Aurelia) -> (-(p_12(Aurelia) <-> p_14(Aurelia)))",
                    "-(p_10(Aurelia) <-> p_12(Aurelia))",
                    "all x ((p_11(x) & p_0(x)) -> p_2(x))",
                    "all x (p_9(x) -> (p_10(x) & p_11(x)))",
                    "p_8(Aurelia) | p_9(Aurelia)",
                    "all x (p_7(x) -> p_8(x))",
                    "(p_0(Aurelia) & -p_15(Aurelia)) -> p_7(Aurelia)",
                    "p_7(Aurelia) | -p_7(Aurelia)",
                    "p_8(Aurelia)",
                    "-p_8(Aurelia) -> p_9(Aurelia)",
                    "p_15(Aurelia) -> p_13(Aurelia)",
                    "p_13(Aurelia) -> ((p_12(Aurelia) | p_14(Aurelia)) & (-p_12(Aurelia) | -p_14(Aurelia)))",
                    "(p_10(Aurelia) | p_12(Aurelia)) & (-p_10(Aurelia) | -p_12(Aurelia))",
                    "((p_3(Aurelia) | p_15(Aurelia)) & (-p_3(Aurelia) | -p_15(Aurelia))) -> p_4(Aurelia)",
                    "p_15(Aurelia) -> -p_7(Aurelia)",
                    "p_5(Aurelia) -> (p_6(Aurelia) | p_14(Aurelia))",
                    "p_5(Aurelia) -> (-p_6(Aurelia) | -p_14(Aurelia))"
                ],
                "formulas(goals)": [
                    "-p_7(Aurelia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Aurelia) \u2192 (p_6(Aurelia) \u2228 p_14(Aurelia))",
                    "p_5(Aurelia) \u2192 (\u00acp_6(Aurelia) \u2228 \u00acp_14(Aurelia))"
                ]
            }
        }
    ]
}