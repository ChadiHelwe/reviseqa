{
    "background_story": "Lucian was a young musician from Stockton, California, who had a passion for hip-hop. Growing up in the city's vibrant music scene, he was inspired by the likes of local rappers who told stories of struggle and resilience. Lucian began writing his own lyrics, weaving tales of life in Stockton's streets, from the struggles of poverty to the beauty of community. His unique voice and perspective quickly gained attention, and he started performing at local venues. As his fan base grew, Lucian became a symbol of hope for the city, using his platform to promote positivity and unity. He remained true to his Stockton roots, always repping his city and giving back to the community that raised him.",
    "predicates": [
        {
            "id": 0,
            "name": "gives_back"
        },
        {
            "id": 1,
            "name": "listens_more"
        },
        {
            "id": 2,
            "name": "speaks_less"
        },
        {
            "id": 3,
            "name": "helps_others"
        },
        {
            "id": 4,
            "name": "pursues_dreams"
        },
        {
            "id": 5,
            "name": "stays_authentic"
        },
        {
            "id": 6,
            "name": "creates_music"
        },
        {
            "id": 7,
            "name": "inspires_others"
        },
        {
            "id": 8,
            "name": "has_passion"
        },
        {
            "id": 9,
            "name": "makes_difference"
        },
        {
            "id": 10,
            "name": "is_influential"
        },
        {
            "id": 11,
            "name": "has_power"
        },
        {
            "id": 12,
            "name": "is_respected"
        },
        {
            "id": 13,
            "name": "is_humble"
        },
        {
            "id": 14,
            "name": "shares_story"
        },
        {
            "id": 15,
            "name": "promotes_unity"
        },
        {
            "id": 16,
            "name": "speaks_truth"
        },
        {
            "id": 17,
            "name": "lifts_community"
        },
        {
            "id": 18,
            "name": "is_leader"
        },
        {
            "id": 19,
            "name": "is_charismatic"
        },
        {
            "id": 20,
            "name": "leads_by_example"
        },
        {
            "id": 21,
            "name": "stays_ground"
        },
        {
            "id": 22,
            "name": "roots_deep"
        },
        {
            "id": 23,
            "name": "tells_truth"
        },
        {
            "id": 24,
            "name": "pursues_goals"
        }
    ],
    "subject_name": "Lucian",
    "subject_category": "human",
    "keyword": "stockton",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lucian",
            "text": "Lucian does not give back to his community.",
            "fol": "\u00acp_0(Lucian)",
            "str_fol": "\u00acgives_back(Lucian)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lucian",
            "text": "Lucian listens more.",
            "fol": "p_1(Lucian)",
            "str_fol": "listens_more(Lucian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lucian",
            "text": "Lucian does not speak less.",
            "fol": "\u00acp_2(Lucian)",
            "str_fol": "\u00acspeaks_less(Lucian)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lucian",
            "text": "Lucian does not help others.",
            "fol": "\u00acp_3(Lucian)",
            "str_fol": "\u00achelps_others(Lucian)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lucian",
            "text": "Lucian pursues his dreams.",
            "fol": "p_4(Lucian)",
            "str_fol": "pursues_dreams(Lucian)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lucian",
            "text": "Lucian does not stay authentic.",
            "fol": "\u00acp_5(Lucian)",
            "str_fol": "\u00acstays_authentic(Lucian)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Lucian",
            "text": "Lucian has passion.",
            "fol": "p_8(Lucian)",
            "str_fol": "has_passion(Lucian)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lucian",
            "text": "Lucian is respected.",
            "fol": "p_12(Lucian)",
            "str_fol": "is_respected(Lucian)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Lucian",
            "text": "Lucian is humble.",
            "fol": "p_13(Lucian)",
            "str_fol": "is_humble(Lucian)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Lucian",
            "text": "Lucian does not have power.",
            "fol": "\u00acp_11(Lucian)",
            "str_fol": "\u00achas_power(Lucian)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Lucian",
            "text": "Lucian is not influential.",
            "fol": "\u00acp_10(Lucian)",
            "str_fol": "\u00acis_influential(Lucian)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Lucian",
            "text": "Lucian does not make a difference.",
            "fol": "\u00acp_9(Lucian)",
            "str_fol": "\u00acmakes_difference(Lucian)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Lucian",
            "text": "Lucian does not inspire others.",
            "fol": "\u00acp_7(Lucian)",
            "str_fol": "\u00acinspires_others(Lucian)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Lucian",
            "text": "Lucian does not create music.",
            "fol": "\u00acp_6(Lucian)",
            "str_fol": "\u00accreates_music(Lucian)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Lucian",
            "text": "Lucian pursues his dreams.",
            "fol": "p_4(Lucian)",
            "str_fol": "pursues_dreams(Lucian)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lucian",
            "text": "Lucian does not stay authentic.",
            "fol": "\u00acp_5(Lucian)",
            "str_fol": "\u00acstays_authentic(Lucian)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lucian",
            "text": "Lucian does not help others.",
            "fol": "\u00acp_3(Lucian)",
            "str_fol": "\u00achelps_others(Lucian)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lucian",
            "text": "Lucian listens more.",
            "fol": "p_1(Lucian)",
            "str_fol": "listens_more(Lucian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lucian",
            "text": "Lucian does not speak less.",
            "fol": "\u00acp_2(Lucian)",
            "str_fol": "\u00acspeaks_less(Lucian)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lucian",
            "text": "Lucian does not give back to his community.",
            "fol": "\u00acp_0(Lucian)",
            "str_fol": "\u00acgives_back(Lucian)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "Anyone who pursues their dreams either stays authentic or has passion (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (pursues_dreams(x) \u2192 (stays_authentic(x) \u2228 has_passion(x)))"
        },
        {
            "id": 6,
            "text": "Lucian either helps others or is respected.",
            "fol": "p_3(Lucian) \u2228 p_12(Lucian)",
            "str_fol": "helps_others(Lucian) \u2228 is_respected(Lucian)"
        },
        {
            "id": 5,
            "text": "If Lucian either listens more or speaks less (but not both), then he is humble.",
            "fol": "(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)",
            "str_fol": "(listens_more(Lucian) \u2295 speaks_less(Lucian)) \u2192 is_humble(Lucian)"
        },
        {
            "id": 4,
            "text": "If Lucian is respected, then he either has power or is humble, but not both.",
            "fol": "p_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))",
            "str_fol": "is_respected(Lucian) \u2192 (has_power(Lucian) \u2295 is_humble(Lucian))"
        },
        {
            "id": 3,
            "text": "Everyone who is influential has power.",
            "fol": "\u2200x (p_10(x) \u2192 p_11(x))",
            "str_fol": "\u2200x (is_influential(x) \u2192 has_power(x))"
        },
        {
            "id": 2,
            "text": "For all humans, if they either give back to their community or make a difference, then they are influential.",
            "fol": "\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((gives_back(x) \u2295 makes_difference(x)) \u2192 is_influential(x))"
        },
        {
            "id": 1,
            "text": "If someone inspires others and has passion, then they can make a difference.",
            "fol": "\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((inspires_others(x) \u2227 has_passion(x)) \u2192 makes_difference(x))"
        },
        {
            "id": 0,
            "text": "Lucian either creates music or inspires others (or both).",
            "fol": "p_6(Lucian) \u2228 p_7(Lucian)",
            "str_fol": "creates_music(Lucian) \u2228 inspires_others(Lucian)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Lucian",
            "text": "Lucian pursues his dreams.",
            "fol": "p_4(Lucian)",
            "str_fol": "pursues_dreams(Lucian)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lucian",
            "text": "Lucian does not stay authentic.",
            "fol": "\u00acp_5(Lucian)",
            "str_fol": "\u00acstays_authentic(Lucian)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Lucian",
            "text": "Lucian does not help others.",
            "fol": "\u00acp_3(Lucian)",
            "str_fol": "\u00achelps_others(Lucian)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lucian",
            "text": "Lucian listens more.",
            "fol": "p_1(Lucian)",
            "str_fol": "listens_more(Lucian)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lucian",
            "text": "Lucian does not speak less.",
            "fol": "\u00acp_2(Lucian)",
            "str_fol": "\u00acspeaks_less(Lucian)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lucian",
            "text": "Lucian does not give back to his community.",
            "fol": "\u00acp_0(Lucian)",
            "str_fol": "\u00acgives_back(Lucian)",
            "negation": true
        },
        {
            "id": 7,
            "text": "Anyone who pursues their dreams either stays authentic or has passion (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_8(x)))",
            "str_fol": "\u2200x (pursues_dreams(x) \u2192 (stays_authentic(x) \u2228 has_passion(x)))"
        },
        {
            "id": 6,
            "text": "Lucian either helps others or is respected.",
            "fol": "p_3(Lucian) \u2228 p_12(Lucian)",
            "str_fol": "helps_others(Lucian) \u2228 is_respected(Lucian)"
        },
        {
            "id": 5,
            "text": "If Lucian either listens more or speaks less (but not both), then he is humble.",
            "fol": "(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)",
            "str_fol": "(listens_more(Lucian) \u2295 speaks_less(Lucian)) \u2192 is_humble(Lucian)"
        },
        {
            "id": 4,
            "text": "If Lucian is respected, then he either has power or is humble, but not both.",
            "fol": "p_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))",
            "str_fol": "is_respected(Lucian) \u2192 (has_power(Lucian) \u2295 is_humble(Lucian))"
        },
        {
            "id": 3,
            "text": "Everyone who is influential has power.",
            "fol": "\u2200x (p_10(x) \u2192 p_11(x))",
            "str_fol": "\u2200x (is_influential(x) \u2192 has_power(x))"
        },
        {
            "id": 2,
            "text": "For all humans, if they either give back to their community or make a difference, then they are influential.",
            "fol": "\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))",
            "str_fol": "\u2200x ((gives_back(x) \u2295 makes_difference(x)) \u2192 is_influential(x))"
        },
        {
            "id": 1,
            "text": "If someone inspires others and has passion, then they can make a difference.",
            "fol": "\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((inspires_others(x) \u2227 has_passion(x)) \u2192 makes_difference(x))"
        },
        {
            "id": 0,
            "text": "Lucian either creates music or inspires others (or both).",
            "fol": "p_6(Lucian) \u2228 p_7(Lucian)",
            "str_fol": "creates_music(Lucian) \u2228 inspires_others(Lucian)"
        }
    ],
    "context_fol": "p_4(Lucian)\n\u00acp_5(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_8(x)))\np_3(Lucian) \u2228 p_12(Lucian)\n(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\n\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))\np_6(Lucian) \u2228 p_7(Lucian)",
    "conclusion": {
        "id": 13,
        "subject": "Lucian",
        "text": "Lucian does not create music.",
        "fol": "\u00acp_6(Lucian)",
        "str_fol": "\u00accreates_music(Lucian)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_6(Lucian)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Lucian",
                    "text": "Lucian pursues his dreams.",
                    "fol": "p_4(Lucian)",
                    "str_fol": "pursues_dreams(Lucian)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Lucian",
                    "text": "Lucian does not stay authentic.",
                    "fol": "\u00acp_5(Lucian)",
                    "str_fol": "\u00acstays_authentic(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who pursues their dreams either stays authentic or has passion (or both).",
                    "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_8(x)))",
                    "str_fol": "\u2200x (pursues_dreams(x) \u2192 (stays_authentic(x) \u2228 has_passion(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Lucian",
                "text": "Lucian has passion.",
                "fol": "p_8(Lucian)",
                "str_fol": "has_passion(Lucian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Lucian",
                    "text": "Lucian does not help others.",
                    "fol": "\u00acp_3(Lucian)",
                    "str_fol": "\u00achelps_others(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Lucian either helps others or is respected.",
                    "fol": "p_3(Lucian) \u2228 p_12(Lucian)",
                    "str_fol": "helps_others(Lucian) \u2228 is_respected(Lucian)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Lucian",
                "text": "Lucian is respected.",
                "fol": "p_12(Lucian)",
                "str_fol": "is_respected(Lucian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Lucian",
                    "text": "Lucian listens more.",
                    "fol": "p_1(Lucian)",
                    "str_fol": "listens_more(Lucian)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Lucian",
                    "text": "Lucian does not speak less.",
                    "fol": "\u00acp_2(Lucian)",
                    "str_fol": "\u00acspeaks_less(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Lucian either listens more or speaks less (but not both), then he is humble.",
                    "fol": "(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)",
                    "str_fol": "(listens_more(Lucian) \u2295 speaks_less(Lucian)) \u2192 is_humble(Lucian)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Lucian",
                "text": "Lucian is humble.",
                "fol": "p_13(Lucian)",
                "str_fol": "is_humble(Lucian)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Lucian",
                    "text": "Lucian is respected.",
                    "fol": "p_12(Lucian)",
                    "str_fol": "is_respected(Lucian)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Lucian",
                    "text": "Lucian is humble.",
                    "fol": "p_13(Lucian)",
                    "str_fol": "is_humble(Lucian)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Lucian is respected, then he either has power or is humble, but not both.",
                    "fol": "p_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))",
                    "str_fol": "is_respected(Lucian) \u2192 (has_power(Lucian) \u2295 is_humble(Lucian))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lucian",
                "text": "Lucian does not have power.",
                "fol": "\u00acp_11(Lucian)",
                "str_fol": "\u00achas_power(Lucian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Lucian",
                    "text": "Lucian does not have power.",
                    "fol": "\u00acp_11(Lucian)",
                    "str_fol": "\u00achas_power(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Everyone who is influential has power.",
                    "fol": "\u2200x (p_10(x) \u2192 p_11(x))",
                    "str_fol": "\u2200x (is_influential(x) \u2192 has_power(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lucian",
                "text": "Lucian is not influential.",
                "fol": "\u00acp_10(Lucian)",
                "str_fol": "\u00acis_influential(Lucian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Lucian",
                    "text": "Lucian does not give back to his community.",
                    "fol": "\u00acp_0(Lucian)",
                    "str_fol": "\u00acgives_back(Lucian)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Lucian",
                    "text": "Lucian is not influential.",
                    "fol": "\u00acp_10(Lucian)",
                    "str_fol": "\u00acis_influential(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For all humans, if they either give back to their community or make a difference, then they are influential.",
                    "fol": "\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))",
                    "str_fol": "\u2200x ((gives_back(x) \u2295 makes_difference(x)) \u2192 is_influential(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lucian",
                "text": "Lucian does not make a difference.",
                "fol": "\u00acp_9(Lucian)",
                "str_fol": "\u00acmakes_difference(Lucian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lucian",
                    "text": "Lucian has passion.",
                    "fol": "p_8(Lucian)",
                    "str_fol": "has_passion(Lucian)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Lucian",
                    "text": "Lucian does not make a difference.",
                    "fol": "\u00acp_9(Lucian)",
                    "str_fol": "\u00acmakes_difference(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone inspires others and has passion, then they can make a difference.",
                    "fol": "\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((inspires_others(x) \u2227 has_passion(x)) \u2192 makes_difference(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Lucian",
                "text": "Lucian does not inspire others.",
                "fol": "\u00acp_7(Lucian)",
                "str_fol": "\u00acinspires_others(Lucian)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Lucian",
                    "text": "Lucian does not inspire others.",
                    "fol": "\u00acp_7(Lucian)",
                    "str_fol": "\u00acinspires_others(Lucian)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Lucian either creates music or inspires others (or both).",
                    "fol": "p_6(Lucian) \u2228 p_7(Lucian)",
                    "str_fol": "creates_music(Lucian) \u2228 inspires_others(Lucian)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Lucian",
                "text": "Lucian does not create music.",
                "fol": "\u00acp_6(Lucian)",
                "str_fol": "\u00accreates_music(Lucian)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (p_4(x) -> p_5(x) | p_8(x))).  [assumption].\n2 -(p_1(Lucian) <-> p_2(Lucian)) -> p_13(Lucian).  [assumption].\n3 p_12(Lucian) -> -(p_11(Lucian) <-> p_13(Lucian)).  [assumption].\n4 (all x (p_10(x) -> p_11(x))).  [assumption].\n5 (all x (-(p_0(x) <-> p_9(x)) -> p_10(x))).  [assumption].\n6 (all x (p_7(x) & p_8(x) -> p_9(x))).  [assumption].\n7 --p_6(Lucian).  [goal].\n8 -p_4(x) | p_5(x) | p_8(x).  [clausify(1)].\n9 p_4(Lucian).  [assumption].\n10 p_5(Lucian) | p_8(Lucian).  [resolve(8,a,9,a)].\n11 -p_5(Lucian).  [assumption].\n12 p_3(Lucian) | p_12(Lucian).  [assumption].\n13 -p_3(Lucian).  [assumption].\n14 -p_1(Lucian) | p_2(Lucian) | p_13(Lucian).  [clausify(2)].\n15 p_1(Lucian).  [assumption].\n17 p_2(Lucian) | p_13(Lucian).  [resolve(14,a,15,a)].\n18 -p_2(Lucian).  [assumption].\n19 p_0(x) | -p_9(x) | p_10(x).  [clausify(5)].\n20 -p_0(Lucian).  [assumption].\n22 p_12(Lucian).  [resolve(12,a,13,a)].\n24 -p_12(Lucian) | -p_11(Lucian) | -p_13(Lucian).  [clausify(3)].\n25 -p_9(Lucian) | p_10(Lucian).  [resolve(19,a,20,a)].\n26 -p_10(x) | p_11(x).  [clausify(4)].\n27 p_6(Lucian) | p_7(Lucian).  [assumption].\n28 -p_7(x) | -p_8(x) | p_9(x).  [clausify(6)].\n29 p_6(Lucian) | -p_8(Lucian) | p_9(Lucian).  [resolve(27,b,28,a)].\n30 -p_6(Lucian).  [deny(7)].\n31 -p_8(Lucian) | p_9(Lucian).  [resolve(29,a,30,a)].\n32 p_8(Lucian).  [resolve(10,a,11,a)].\n33 -p_11(Lucian) | -p_13(Lucian).  [resolve(22,a,24,a)].\n34 p_13(Lucian).  [resolve(17,a,18,a)].\n35 p_9(Lucian).  [resolve(31,a,32,a)].\n36 -p_9(Lucian) | p_11(Lucian).  [resolve(25,b,26,a)].\n37 p_11(Lucian).  [resolve(35,a,36,a)].\n38 -p_11(Lucian).  [resolve(33,b,34,a)].\n39 $F.  [resolve(37,a,38,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_5(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\n\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_8(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian)",
                    "-p_5(Lucian)",
                    "-p_3(Lucian)",
                    "p_1(Lucian)",
                    "-p_2(Lucian)",
                    "-p_0(Lucian)",
                    "all x (-p_4(x) | p_5(x) | p_8(x))",
                    "p_3(Lucian) | p_12(Lucian)",
                    "(-(p_1(Lucian) <-> p_2(Lucian))) -> p_13(Lucian)",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian)))",
                    "all x (p_10(x) -> p_11(x))",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x))",
                    "all x ((p_7(x) & p_8(x)) -> p_9(x))",
                    "p_6(Lucian) | p_7(Lucian)",
                    "p_8(Lucian)",
                    "p_9(Lucian) -> p_10(Lucian)"
                ],
                "formulas(goals)": [
                    "p_6(Lucian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_8(x)))"
                ],
                "added_facts": [
                    "p_8(Lucian)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))",
                    "p_9(Lucian) \u2192 p_10(Lucian)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_5(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\n\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_8(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)\np_12(Lucian)\np_13(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian)",
                    "-p_5(Lucian)",
                    "-p_3(Lucian)",
                    "p_1(Lucian)",
                    "-p_2(Lucian)",
                    "-p_0(Lucian)",
                    "all x (-p_4(x) | p_5(x) | p_8(x))",
                    "p_3(Lucian) | p_12(Lucian)",
                    "(-(p_1(Lucian) <-> p_2(Lucian))) -> p_13(Lucian)",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian)))",
                    "all x (p_10(x) -> p_11(x))",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x))",
                    "all x ((p_7(x) & p_8(x)) -> p_9(x))",
                    "p_6(Lucian) | p_7(Lucian)",
                    "p_8(Lucian)",
                    "p_9(Lucian) -> p_10(Lucian)",
                    "p_12(Lucian)",
                    "p_13(Lucian)"
                ],
                "formulas(goals)": [
                    "p_6(Lucian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_12(Lucian)",
                    "p_13(Lucian)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_5(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_8(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)\np_12(Lucian)\np_13(Lucian)\np_7(Lucian)\np_6(Lucian) \u2192 p_5(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian)",
                    "-p_5(Lucian)",
                    "-p_3(Lucian)",
                    "p_1(Lucian)",
                    "-p_2(Lucian)",
                    "-p_0(Lucian)",
                    "all x (-p_4(x) | p_5(x) | p_8(x))",
                    "p_3(Lucian) | p_12(Lucian)",
                    "(-(p_1(Lucian) <-> p_2(Lucian))) -> p_13(Lucian)",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian)))",
                    "all x (p_10(x) -> p_11(x))",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x))",
                    "p_6(Lucian) | p_7(Lucian)",
                    "p_8(Lucian)",
                    "p_9(Lucian) -> p_10(Lucian)",
                    "p_12(Lucian)",
                    "p_13(Lucian)",
                    "p_7(Lucian)",
                    "p_6(Lucian) -> p_5(Lucian)"
                ],
                "formulas(goals)": [
                    "-p_6(Lucian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_7(x) \u2227 p_8(x)) \u2192 p_9(x))"
                ],
                "added_facts": [
                    "p_7(Lucian)"
                ],
                "added_rules": [
                    "p_6(Lucian) \u2192 p_5(Lucian)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n(p_1(Lucian) \u2295 p_2(Lucian)) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_8(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)\np_12(Lucian)\np_13(Lucian)\np_7(Lucian)\np_5(Lucian)\np_5(Lucian) \u2192 p_6(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian).",
                    "-p_3(Lucian).",
                    "p_1(Lucian).",
                    "-p_2(Lucian).",
                    "-p_0(Lucian).",
                    "all x (-p_4(x) | p_5(x) | p_8(x)).",
                    "p_3(Lucian) | p_12(Lucian).",
                    "(-(p_1(Lucian) <-> p_2(Lucian))) -> p_13(Lucian).",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian))).",
                    "all x (p_10(x) -> p_11(x)).",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x)).",
                    "p_6(Lucian) | p_7(Lucian).",
                    "p_8(Lucian).",
                    "p_9(Lucian) -> p_10(Lucian).",
                    "p_12(Lucian).",
                    "p_13(Lucian).",
                    "p_7(Lucian).",
                    "p_5(Lucian).",
                    "p_5(Lucian) -> p_6(Lucian)."
                ],
                "formulas(goals)": [
                    "p_6(Lucian)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_5(Lucian)"
                ],
                "removed_rules": [
                    "p_6(Lucian) \u2192 p_5(Lucian)"
                ],
                "added_facts": [
                    "p_5(Lucian)"
                ],
                "added_rules": [
                    "p_5(Lucian) \u2192 p_6(Lucian)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n((p_1(Lucian) \u2228 p_2(Lucian)) \u2227 (\u00acp_1(Lucian) \u2228 \u00acp_2(Lucian))) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_8(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)\np_12(Lucian)\np_13(Lucian)\np_7(Lucian)\np_5(Lucian)\np_5(Lucian) \u2192 p_6(Lucian)\n\u00acp_11(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian)",
                    "-p_3(Lucian)",
                    "p_1(Lucian)",
                    "-p_2(Lucian)",
                    "-p_0(Lucian)",
                    "all x (-p_4(x) | p_5(x) | p_8(x))",
                    "p_3(Lucian) | p_12(Lucian)",
                    "((p_1(Lucian) | p_2(Lucian)) & (-p_1(Lucian) | -p_2(Lucian))) -> p_13(Lucian)",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian)))",
                    "all x (p_10(x) -> p_11(x))",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x))",
                    "p_6(Lucian) | p_7(Lucian)",
                    "p_8(Lucian)",
                    "p_9(Lucian) -> p_10(Lucian)",
                    "p_12(Lucian)",
                    "p_13(Lucian)",
                    "p_7(Lucian)",
                    "p_5(Lucian)",
                    "p_5(Lucian) -> p_6(Lucian)",
                    "-p_11(Lucian)"
                ],
                "formulas(goals)": [
                    "p_6(Lucian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Lucian)"
                ],
                "added_rules": [
                    "((p_1(Lucian) \u2228 p_2(Lucian)) \u2227 (\u00acp_1(Lucian) \u2228 \u00acp_2(Lucian))) \u2192 p_13(Lucian)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n((p_1(Lucian) \u2228 p_2(Lucian)) \u2227 (\u00acp_1(Lucian) \u2228 \u00acp_2(Lucian))) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_8(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)\np_12(Lucian)\np_13(Lucian)\np_7(Lucian)\n\u00acp_5(Lucian)\n\u00acp_5(Lucian) \u2192 \u00acp_6(Lucian)\np_5(Lucian) \u2192 p_6(Lucian)\n\u00acp_11(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian).",
                    "-p_3(Lucian).",
                    "p_1(Lucian).",
                    "-p_2(Lucian).",
                    "-p_0(Lucian).",
                    "all x (-p_4(x) | p_5(x) | p_8(x)).",
                    "p_3(Lucian) | p_12(Lucian).",
                    "((p_1(Lucian) | p_2(Lucian)) & (-p_1(Lucian) | -p_2(Lucian))) -> p_13(Lucian).",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian))).",
                    "all x (p_10(x) -> p_11(x)).",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x)).",
                    "p_6(Lucian) | p_7(Lucian).",
                    "p_8(Lucian).",
                    "p_9(Lucian) -> p_10(Lucian).",
                    "p_12(Lucian).",
                    "p_13(Lucian).",
                    "p_7(Lucian).",
                    "-p_5(Lucian).",
                    "-p_5(Lucian) -> -p_6(Lucian).",
                    "p_5(Lucian) -> p_6(Lucian).",
                    "-p_11(Lucian)."
                ],
                "formulas(goals)": [
                    "-p_6(Lucian)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Lucian)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_5(Lucian)"
                ],
                "added_rules": [
                    "\u00acp_5(Lucian) \u2192 \u00acp_6(Lucian)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Lucian)\n\u00acp_3(Lucian)\np_1(Lucian)\n\u00acp_2(Lucian)\n\u00acp_0(Lucian)\n\u2200x (\u00acp_4(x) \u2228 p_5(x) \u2228 p_8(x))\np_3(Lucian) \u2228 p_12(Lucian)\n((p_1(Lucian) \u2228 p_2(Lucian)) \u2227 (\u00acp_1(Lucian) \u2228 \u00acp_2(Lucian))) \u2192 p_13(Lucian)\np_12(Lucian) \u2192 (p_11(Lucian) \u2295 p_13(Lucian))\n\u2200x (p_10(x) \u2192 p_11(x))\n\u2200x ((p_0(x) \u2295 p_9(x)) \u2192 p_10(x))\np_6(Lucian) \u2228 p_7(Lucian)\np_9(Lucian) \u2192 p_10(Lucian)\np_12(Lucian)\np_13(Lucian)\np_7(Lucian)\n\u00acp_5(Lucian) \u2192 \u00acp_6(Lucian)\np_5(Lucian) \u2192 p_6(Lucian)\n\u00acp_11(Lucian)\n\u00acp_4(Lucian) \u2228 p_5(Lucian)",
            "Initial Goal": "\u00acp_6(Lucian)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Lucian)",
                    "-p_3(Lucian)",
                    "p_1(Lucian)",
                    "-p_2(Lucian)",
                    "-p_0(Lucian)",
                    "all x (-p_4(x) | p_5(x) | p_8(x))",
                    "p_3(Lucian) | p_12(Lucian)",
                    "((p_1(Lucian) | p_2(Lucian)) & (-p_1(Lucian) | -p_2(Lucian))) -> p_13(Lucian)",
                    "p_12(Lucian) -> (-(p_11(Lucian) <-> p_13(Lucian)))",
                    "all x (p_10(x) -> p_11(x))",
                    "all x ((-(p_0(x) <-> p_9(x))) -> p_10(x))",
                    "p_6(Lucian) | p_7(Lucian)",
                    "p_9(Lucian) -> p_10(Lucian)",
                    "p_12(Lucian)",
                    "p_13(Lucian)",
                    "p_7(Lucian)",
                    "-p_5(Lucian) -> -p_6(Lucian)",
                    "p_5(Lucian) -> p_6(Lucian)",
                    "-p_11(Lucian)",
                    "-p_4(Lucian) | p_5(Lucian)"
                ],
                "formulas(goals)": [
                    "--p_6(Lucian)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_5(Lucian)",
                    "p_8(Lucian)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Lucian) \u2228 p_5(Lucian)"
                ]
            }
        }
    ]
}