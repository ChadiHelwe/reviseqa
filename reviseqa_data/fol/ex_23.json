{
    "background_story": "Tate was a young and ambitious aviator who had always been fascinated by the history of flight. Growing up in Dayton, Ohio, he was surrounded by the legacy of the Wright brothers, who pioneered the first powered flight. Inspired by their achievements, Tate spent countless hours at the Wright-Patterson Air Force Base, learning about the evolution of aviation. He became particularly interested in the Wright Brothers' workshop, where Orville and Wilbur brought their innovative ideas to life. Tate's passion for flight led him to enroll in the University of Dayton's aerospace engineering program, where he excelled and eventually landed a job at a leading aerospace firm. Today, Tate works on designing cutting-edge aircraft, paying tribute to the city of Dayton's rich aviation heritage.",
    "predicates": [
        {
            "id": 0,
            "name": "thinks_logically"
        },
        {
            "id": 1,
            "name": "learns_fast"
        },
        {
            "id": 2,
            "name": "achieves_success"
        },
        {
            "id": 3,
            "name": "inventive"
        },
        {
            "id": 4,
            "name": "adventurous"
        },
        {
            "id": 5,
            "name": "creative"
        },
        {
            "id": 6,
            "name": "innovator"
        },
        {
            "id": 7,
            "name": "is_methodical"
        },
        {
            "id": 8,
            "name": "solves_problems"
        },
        {
            "id": 9,
            "name": "works_diligently"
        },
        {
            "id": 10,
            "name": "excels"
        },
        {
            "id": 11,
            "name": "sets_goals"
        },
        {
            "id": 12,
            "name": "makes_discoveries"
        },
        {
            "id": 13,
            "name": "open_minded"
        },
        {
            "id": 14,
            "name": "think_outside"
        },
        {
            "id": 15,
            "name": "plans_carefully"
        },
        {
            "id": 16,
            "name": "organizes_tasks"
        },
        {
            "id": 17,
            "name": "uses_tools"
        },
        {
            "id": 18,
            "name": "finds_patterns"
        },
        {
            "id": 19,
            "name": "visionary"
        },
        {
            "id": 20,
            "name": "passionate"
        },
        {
            "id": 21,
            "name": "focused"
        },
        {
            "id": 22,
            "name": "has_passion"
        },
        {
            "id": 23,
            "name": "is_disciplined"
        },
        {
            "id": 24,
            "name": "is_focused"
        },
        {
            "id": 25,
            "name": "makes_plans"
        }
    ],
    "subject_name": "Tate",
    "subject_category": "human",
    "keyword": "dayton",
    "all_facts": [
        {
            "id": 0,
            "subject": "Tate",
            "text": "Tate thinks logically.",
            "fol": "p_0(Tate)",
            "str_fol": "thinks_logically(Tate)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Tate",
            "text": "Tate learns quickly.",
            "fol": "p_1(Tate)",
            "str_fol": "learns_fast(Tate)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Tate",
            "text": "Tate does not achieve success.",
            "fol": "\u00acp_2(Tate)",
            "str_fol": "\u00acachieves_success(Tate)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Tate",
            "text": "Tate sets goals.",
            "fol": "p_11(Tate)",
            "str_fol": "sets_goals(Tate)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Tate",
            "text": "Tate works diligently.",
            "fol": "p_9(Tate)",
            "str_fol": "works_diligently(Tate)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Tate",
            "text": "Tate does not excel.",
            "fol": "\u00acp_10(Tate)",
            "str_fol": "\u00acexcels(Tate)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Tate",
            "text": "Tate is not an innovator.",
            "fol": "\u00acp_6(Tate)",
            "str_fol": "\u00acinnovator(Tate)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Tate",
            "text": "Tate does not solve problems.",
            "fol": "\u00acp_8(Tate)",
            "str_fol": "\u00acsolves_problems(Tate)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Tate",
            "text": "Tate is methodical in his approach to designing aircraft.",
            "fol": "p_7(Tate)",
            "str_fol": "is_methodical(Tate)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Tate",
            "text": "Tate is not creative.",
            "fol": "\u00acp_5(Tate)",
            "str_fol": "\u00accreative(Tate)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Tate",
            "text": "Tate is not inventive.",
            "fol": "\u00acp_3(Tate)",
            "str_fol": "\u00acinventive(Tate)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Tate",
            "text": "Tate is not adventurous.",
            "fol": "\u00acp_4(Tate)",
            "str_fol": "\u00acadventurous(Tate)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Tate",
            "text": "Tate does not achieve success.",
            "fol": "\u00acp_2(Tate)",
            "str_fol": "\u00acachieves_success(Tate)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Tate",
            "text": "Tate learns quickly.",
            "fol": "p_1(Tate)",
            "str_fol": "learns_fast(Tate)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Tate",
            "text": "Tate thinks logically.",
            "fol": "p_0(Tate)",
            "str_fol": "thinks_logically(Tate)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Tate either sets goals or achieves success.",
            "fol": "p_11(Tate) \u2228 p_2(Tate)",
            "str_fol": "sets_goals(Tate) \u2228 achieves_success(Tate)"
        },
        {
            "id": 7,
            "text": "If Tate sets goals, then he works diligently.",
            "fol": "p_11(Tate) \u2192 p_9(Tate)",
            "str_fol": "sets_goals(Tate) \u2192 works_diligently(Tate)"
        },
        {
            "id": 6,
            "text": "Everyone either learns quickly or excels, but not necessarily both.",
            "fol": "\u2200x (p_1(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (learns_fast(x) \u2295 excels(x))"
        },
        {
            "id": 5,
            "text": "If Tate is an innovator, then he excels in aviation.",
            "fol": "p_6(Tate) \u2192 p_10(Tate)",
            "str_fol": "innovator(Tate) \u2192 excels(Tate)"
        },
        {
            "id": 4,
            "text": "Tate either works diligently or solves problems, but not both.",
            "fol": "p_9(Tate) \u2295 p_8(Tate)",
            "str_fol": "works_diligently(Tate) \u2295 solves_problems(Tate)"
        },
        {
            "id": 3,
            "text": "If Tate is either methodical or thinks logically (but not both), then he can solve problems.",
            "fol": "(p_7(Tate) \u2295 p_0(Tate)) \u2192 p_8(Tate)",
            "str_fol": "(is_methodical(Tate) \u2295 thinks_logically(Tate)) \u2192 solves_problems(Tate)"
        },
        {
            "id": 2,
            "text": "Tate is either methodical or creative, but not both, in his approach to designing aircraft.",
            "fol": "p_7(Tate) \u2295 p_5(Tate)",
            "str_fol": "is_methodical(Tate) \u2295 creative(Tate)"
        },
        {
            "id": 1,
            "text": "If Tate is either inventive or creative (but not both), then he is an innovator.",
            "fol": "(p_3(Tate) \u2295 p_5(Tate)) \u2192 p_6(Tate)",
            "str_fol": "(inventive(Tate) \u2295 creative(Tate)) \u2192 innovator(Tate)"
        },
        {
            "id": 0,
            "text": "Tate is either inventive or adventurous (or both).",
            "fol": "p_3(Tate) \u2228 p_4(Tate)",
            "str_fol": "inventive(Tate) \u2228 adventurous(Tate)"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Tate",
            "text": "Tate does not achieve success.",
            "fol": "\u00acp_2(Tate)",
            "str_fol": "\u00acachieves_success(Tate)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Tate",
            "text": "Tate learns quickly.",
            "fol": "p_1(Tate)",
            "str_fol": "learns_fast(Tate)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Tate",
            "text": "Tate thinks logically.",
            "fol": "p_0(Tate)",
            "str_fol": "thinks_logically(Tate)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Tate either sets goals or achieves success.",
            "fol": "p_11(Tate) \u2228 p_2(Tate)",
            "str_fol": "sets_goals(Tate) \u2228 achieves_success(Tate)"
        },
        {
            "id": 7,
            "text": "If Tate sets goals, then he works diligently.",
            "fol": "p_11(Tate) \u2192 p_9(Tate)",
            "str_fol": "sets_goals(Tate) \u2192 works_diligently(Tate)"
        },
        {
            "id": 6,
            "text": "Everyone either learns quickly or excels, but not necessarily both.",
            "fol": "\u2200x (p_1(x) \u2295 p_10(x))",
            "str_fol": "\u2200x (learns_fast(x) \u2295 excels(x))"
        },
        {
            "id": 5,
            "text": "If Tate is an innovator, then he excels in aviation.",
            "fol": "p_6(Tate) \u2192 p_10(Tate)",
            "str_fol": "innovator(Tate) \u2192 excels(Tate)"
        },
        {
            "id": 4,
            "text": "Tate either works diligently or solves problems, but not both.",
            "fol": "p_9(Tate) \u2295 p_8(Tate)",
            "str_fol": "works_diligently(Tate) \u2295 solves_problems(Tate)"
        },
        {
            "id": 3,
            "text": "If Tate is either methodical or thinks logically (but not both), then he can solve problems.",
            "fol": "(p_7(Tate) \u2295 p_0(Tate)) \u2192 p_8(Tate)",
            "str_fol": "(is_methodical(Tate) \u2295 thinks_logically(Tate)) \u2192 solves_problems(Tate)"
        },
        {
            "id": 2,
            "text": "Tate is either methodical or creative, but not both, in his approach to designing aircraft.",
            "fol": "p_7(Tate) \u2295 p_5(Tate)",
            "str_fol": "is_methodical(Tate) \u2295 creative(Tate)"
        },
        {
            "id": 1,
            "text": "If Tate is either inventive or creative (but not both), then he is an innovator.",
            "fol": "(p_3(Tate) \u2295 p_5(Tate)) \u2192 p_6(Tate)",
            "str_fol": "(inventive(Tate) \u2295 creative(Tate)) \u2192 innovator(Tate)"
        },
        {
            "id": 0,
            "text": "Tate is either inventive or adventurous (or both).",
            "fol": "p_3(Tate) \u2228 p_4(Tate)",
            "str_fol": "inventive(Tate) \u2228 adventurous(Tate)"
        }
    ],
    "context_fol": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\np_11(Tate) \u2192 p_9(Tate)\n\u2200x (p_1(x) \u2295 p_10(x))\np_6(Tate) \u2192 p_10(Tate)\np_9(Tate) \u2295 p_8(Tate)\n(p_7(Tate) \u2295 p_0(Tate)) \u2192 p_8(Tate)\np_7(Tate) \u2295 p_5(Tate)\n(p_3(Tate) \u2295 p_5(Tate)) \u2192 p_6(Tate)\np_3(Tate) \u2228 p_4(Tate)",
    "conclusion": {
        "id": 11,
        "subject": "Tate",
        "text": "Tate is not adventurous.",
        "fol": "\u00acp_4(Tate)",
        "str_fol": "\u00acadventurous(Tate)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_4(Tate)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Tate",
                    "text": "Tate does not achieve success.",
                    "fol": "\u00acp_2(Tate)",
                    "str_fol": "\u00acachieves_success(Tate)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Tate either sets goals or achieves success.",
                    "fol": "p_11(Tate) \u2228 p_2(Tate)",
                    "str_fol": "sets_goals(Tate) \u2228 achieves_success(Tate)"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Tate",
                "text": "Tate sets goals.",
                "fol": "p_11(Tate)",
                "str_fol": "sets_goals(Tate)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Tate",
                    "text": "Tate sets goals.",
                    "fol": "p_11(Tate)",
                    "str_fol": "sets_goals(Tate)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Tate sets goals, then he works diligently.",
                    "fol": "p_11(Tate) \u2192 p_9(Tate)",
                    "str_fol": "sets_goals(Tate) \u2192 works_diligently(Tate)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Tate",
                "text": "Tate works diligently.",
                "fol": "p_9(Tate)",
                "str_fol": "works_diligently(Tate)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Tate",
                    "text": "Tate learns quickly.",
                    "fol": "p_1(Tate)",
                    "str_fol": "learns_fast(Tate)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Everyone either learns quickly or excels, but not necessarily both.",
                    "fol": "\u2200x (p_1(x) \u2295 p_10(x))",
                    "str_fol": "\u2200x (learns_fast(x) \u2295 excels(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Tate",
                "text": "Tate does not excel.",
                "fol": "\u00acp_10(Tate)",
                "str_fol": "\u00acexcels(Tate)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Tate",
                    "text": "Tate does not excel.",
                    "fol": "\u00acp_10(Tate)",
                    "str_fol": "\u00acexcels(Tate)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Tate is an innovator, then he excels in aviation.",
                    "fol": "p_6(Tate) \u2192 p_10(Tate)",
                    "str_fol": "innovator(Tate) \u2192 excels(Tate)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Tate",
                "text": "Tate is not an innovator.",
                "fol": "\u00acp_6(Tate)",
                "str_fol": "\u00acinnovator(Tate)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Tate",
                    "text": "Tate works diligently.",
                    "fol": "p_9(Tate)",
                    "str_fol": "works_diligently(Tate)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Tate either works diligently or solves problems, but not both.",
                    "fol": "p_9(Tate) \u2295 p_8(Tate)",
                    "str_fol": "works_diligently(Tate) \u2295 solves_problems(Tate)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Tate",
                "text": "Tate does not solve problems.",
                "fol": "\u00acp_8(Tate)",
                "str_fol": "\u00acsolves_problems(Tate)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Tate",
                    "text": "Tate thinks logically.",
                    "fol": "p_0(Tate)",
                    "str_fol": "thinks_logically(Tate)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Tate",
                    "text": "Tate does not solve problems.",
                    "fol": "\u00acp_8(Tate)",
                    "str_fol": "\u00acsolves_problems(Tate)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Tate is either methodical or thinks logically (but not both), then he can solve problems.",
                    "fol": "(p_7(Tate) \u2295 p_0(Tate)) \u2192 p_8(Tate)",
                    "str_fol": "(is_methodical(Tate) \u2295 thinks_logically(Tate)) \u2192 solves_problems(Tate)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Tate",
                "text": "Tate is methodical in his approach to designing aircraft.",
                "fol": "p_7(Tate)",
                "str_fol": "is_methodical(Tate)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Tate",
                    "text": "Tate is methodical in his approach to designing aircraft.",
                    "fol": "p_7(Tate)",
                    "str_fol": "is_methodical(Tate)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Tate is either methodical or creative, but not both, in his approach to designing aircraft.",
                    "fol": "p_7(Tate) \u2295 p_5(Tate)",
                    "str_fol": "is_methodical(Tate) \u2295 creative(Tate)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Tate",
                "text": "Tate is not creative.",
                "fol": "\u00acp_5(Tate)",
                "str_fol": "\u00accreative(Tate)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Tate",
                    "text": "Tate is not creative.",
                    "fol": "\u00acp_5(Tate)",
                    "str_fol": "\u00accreative(Tate)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Tate",
                    "text": "Tate is not an innovator.",
                    "fol": "\u00acp_6(Tate)",
                    "str_fol": "\u00acinnovator(Tate)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Tate is either inventive or creative (but not both), then he is an innovator.",
                    "fol": "(p_3(Tate) \u2295 p_5(Tate)) \u2192 p_6(Tate)",
                    "str_fol": "(inventive(Tate) \u2295 creative(Tate)) \u2192 innovator(Tate)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Tate",
                "text": "Tate is not inventive.",
                "fol": "\u00acp_3(Tate)",
                "str_fol": "\u00acinventive(Tate)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Tate",
                    "text": "Tate is not inventive.",
                    "fol": "\u00acp_3(Tate)",
                    "str_fol": "\u00acinventive(Tate)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Tate is either inventive or adventurous (or both).",
                    "fol": "p_3(Tate) \u2228 p_4(Tate)",
                    "str_fol": "inventive(Tate) \u2228 adventurous(Tate)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Tate",
                "text": "Tate is not adventurous.",
                "fol": "\u00acp_4(Tate)",
                "str_fol": "\u00acadventurous(Tate)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 p_11(Tate) -> p_9(Tate).  [assumption].\n2 (all x -(p_1(x) <-> p_10(x))).  [assumption].\n3 p_6(Tate) -> p_10(Tate).  [assumption].\n4 -(p_9(Tate) <-> p_8(Tate)).  [assumption].\n5 -(p_7(Tate) <-> p_0(Tate)) -> p_8(Tate).  [assumption].\n6 -(p_7(Tate) <-> p_5(Tate)).  [assumption].\n7 -(p_3(Tate) <-> p_5(Tate)) -> p_6(Tate).  [assumption].\n8 --p_4(Tate).  [goal].\n9 p_11(Tate) | p_2(Tate).  [assumption].\n10 -p_2(Tate).  [assumption].\n11 -p_1(x) | -p_10(x).  [clausify(2)].\n12 p_1(Tate).  [assumption].\n14 p_7(Tate) | -p_0(Tate) | p_8(Tate).  [clausify(5)].\n15 p_0(Tate).  [assumption].\n17 p_11(Tate).  [resolve(9,b,10,a)].\n18 -p_11(Tate) | p_9(Tate).  [clausify(1)].\n19 -p_3(Tate) | p_5(Tate) | p_6(Tate).  [clausify(7)].\n20 -p_6(Tate) | p_10(Tate).  [clausify(3)].\n22 -p_9(Tate) | -p_8(Tate).  [clausify(4)].\n24 p_9(Tate).  [resolve(17,a,18,a)].\n25 -p_7(Tate) | -p_5(Tate).  [clausify(6)].\n27 p_7(Tate) | p_8(Tate).  [resolve(14,b,15,a)].\n28 -p_3(Tate) | p_5(Tate) | p_10(Tate).  [resolve(19,c,20,a)].\n29 p_3(Tate) | p_4(Tate).  [assumption].\n31 p_5(Tate) | p_10(Tate) | p_4(Tate).  [resolve(28,a,29,a)].\n32 -p_4(Tate).  [deny(8)].\n33 p_5(Tate) | p_10(Tate).  [resolve(31,c,32,a)].\n34 -p_10(Tate).  [resolve(11,a,12,a)].\n35 p_8(Tate) | -p_5(Tate).  [resolve(27,a,25,a)].\n36 -p_8(Tate).  [resolve(24,a,22,a)].\n37 -p_5(Tate).  [resolve(35,a,36,a)].\n38 p_5(Tate).  [resolve(33,b,34,a)].\n39 $F.  [resolve(37,a,38,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\np_11(Tate) \u2192 p_9(Tate)\n\u2200x (p_1(x) \u2295 p_10(x))\np_6(Tate) \u2192 p_10(Tate)\np_9(Tate) \u2295 p_8(Tate)\n(p_7(Tate) \u2295 p_0(Tate)) \u2192 p_8(Tate)\np_7(Tate) \u2295 p_5(Tate)\n(p_3(Tate) \u2295 p_5(Tate)) \u2192 p_6(Tate)\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\n\u00acp_10(Tate) \u2192 \u00acp_6(Tate)\np_3(Tate) \u2192 p_5(Tate)\np_5(Tate) \u2192 p_3(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Tate)",
                    "p_1(Tate)",
                    "p_0(Tate)",
                    "p_11(Tate) | p_2(Tate)",
                    "p_11(Tate) -> p_9(Tate)",
                    "all x (-(p_1(x) <-> p_10(x)))",
                    "p_6(Tate) -> p_10(Tate)",
                    "-(p_9(Tate) <-> p_8(Tate))",
                    "(-(p_7(Tate) <-> p_0(Tate))) -> p_8(Tate)",
                    "-(p_7(Tate) <-> p_5(Tate))",
                    "(-(p_3(Tate) <-> p_5(Tate))) -> p_6(Tate)",
                    "p_3(Tate) | p_4(Tate)",
                    "p_9(Tate) | p_8(Tate)",
                    "-p_9(Tate) | -p_8(Tate)",
                    "-p_10(Tate) -> -p_6(Tate)",
                    "p_3(Tate) -> p_5(Tate)",
                    "p_5(Tate) -> p_3(Tate)"
                ],
                "formulas(goals)": [
                    "p_4(Tate)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_9(Tate) \u2228 p_8(Tate)",
                    "\u00acp_9(Tate) \u2228 \u00acp_8(Tate)",
                    "\u00acp_10(Tate) \u2192 \u00acp_6(Tate)",
                    "p_3(Tate) \u2192 p_5(Tate)",
                    "p_5(Tate) \u2192 p_3(Tate)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\n\u00acp_11(Tate) \u2228 p_9(Tate)\n\u2200x (p_1(x) \u2194 \u00acp_10(x))\n\u00acp_6(Tate) \u2228 p_10(Tate)\n\u00ac(p_9(Tate) \u2194 p_8(Tate))\n(\u00ac(p_7(Tate) \u2194 p_0(Tate))) \u2228 p_8(Tate)\n\u00ac(p_7(Tate) \u2194 p_5(Tate))\n(\u00ac(p_3(Tate) \u2194 p_5(Tate))) \u2228 p_6(Tate)\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\np_10(Tate) \u2228 \u00acp_6(Tate)\n\u00acp_3(Tate) \u2228 p_5(Tate)\n\u00acp_5(Tate) \u2228 p_3(Tate)\n\u00acp_10(Tate)\n\u00acp_6(Tate)\np_3(Tate) \u2194 p_5(Tate)\n\u00ac(p_7(Tate) \u2194 p_3(Tate))\np_4(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Tate).",
                    "p_1(Tate).",
                    "p_0(Tate).",
                    "p_11(Tate) | p_2(Tate).",
                    "-p_11(Tate) | p_9(Tate).",
                    "all x (p_1(x) <-> -p_10(x)).",
                    "-p_6(Tate) | p_10(Tate).",
                    "-(p_9(Tate) <-> p_8(Tate)).",
                    "(-(p_7(Tate) <-> p_0(Tate))) | p_8(Tate).",
                    "-(p_7(Tate) <-> p_5(Tate)).",
                    "(-(p_3(Tate) <-> p_5(Tate))) | p_6(Tate).",
                    "p_3(Tate) | p_4(Tate).",
                    "p_9(Tate) | p_8(Tate).",
                    "-p_9(Tate) | -p_8(Tate).",
                    "p_10(Tate) | -p_6(Tate).",
                    "-p_3(Tate) | p_5(Tate).",
                    "-p_5(Tate) | p_3(Tate).",
                    "-p_10(Tate).",
                    "-p_6(Tate).",
                    "p_3(Tate) <-> p_5(Tate).",
                    "-(p_7(Tate) <-> p_3(Tate)).",
                    "p_4(Tate)."
                ],
                "formulas(goals)": [
                    "--p_4(Tate)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_10(Tate)",
                    "\u00acp_6(Tate)",
                    "p_4(Tate)"
                ],
                "added_rules": [
                    "p_3(Tate) \u2194 p_5(Tate)",
                    "\u00ac(p_7(Tate) \u2194 p_3(Tate))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\n\u00acp_11(Tate) \u2228 p_9(Tate)\n\u2200x (p_1(x) \u2194 \u00acp_10(x))\n\u00acp_6(Tate) \u2228 p_10(Tate)\n\u00ac(p_9(Tate) \u2194 p_8(Tate))\n(\u00ac(p_7(Tate) \u2194 p_0(Tate))) \u2228 p_8(Tate)\n\u00ac(p_7(Tate) \u2194 p_5(Tate))\n(\u00ac(p_3(Tate) \u2194 p_5(Tate))) \u2228 p_6(Tate) \u2228 p_4(Tate)\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\np_10(Tate) \u2228 \u00acp_6(Tate)\n\u00acp_3(Tate) \u2228 p_5(Tate)\n\u00acp_5(Tate) \u2228 p_3(Tate)\n\u00acp_10(Tate)\n\u00acp_6(Tate)\np_3(Tate) \u2194 p_5(Tate)\n\u00ac(p_7(Tate) \u2194 p_3(Tate))\np_4(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Tate)",
                    "p_1(Tate)",
                    "p_0(Tate)",
                    "p_11(Tate) | p_2(Tate)",
                    "-p_11(Tate) | p_9(Tate)",
                    "all x (p_1(x) <-> -p_10(x))",
                    "-p_6(Tate) | p_10(Tate)",
                    "-(p_9(Tate) <-> p_8(Tate))",
                    "(-(p_7(Tate) <-> p_0(Tate))) | p_8(Tate)",
                    "-(p_7(Tate) <-> p_5(Tate))",
                    "(-(p_3(Tate) <-> p_5(Tate))) | p_6(Tate) | p_4(Tate)",
                    "p_3(Tate) | p_4(Tate)",
                    "p_9(Tate) | p_8(Tate)",
                    "-p_9(Tate) | -p_8(Tate)",
                    "p_10(Tate) | -p_6(Tate)",
                    "-p_3(Tate) | p_5(Tate)",
                    "-p_5(Tate) | p_3(Tate)",
                    "-p_10(Tate)",
                    "-p_6(Tate)",
                    "p_3(Tate) <-> p_5(Tate)",
                    "-(p_7(Tate) <-> p_3(Tate))",
                    "p_4(Tate)"
                ],
                "formulas(goals)": [
                    "-(-p_4(Tate))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(\u00ac(p_3(Tate) \u2194 p_5(Tate))) \u2228 p_6(Tate) \u2228 p_4(Tate)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\n\u00acp_11(Tate) \u2228 p_9(Tate)\n\u2200x (p_1(x) \u2194 \u00acp_10(x))\n\u00acp_6(Tate) \u2228 p_10(Tate)\n\u00ac(p_9(Tate) \u2194 p_8(Tate))\n(\u00ac(p_7(Tate) \u2194 p_0(Tate))) \u2228 p_8(Tate)\n\u00ac(p_7(Tate) \u2194 p_5(Tate))\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\np_10(Tate) \u2228 \u00acp_6(Tate)\n\u00acp_3(Tate) \u2228 p_5(Tate)\n\u00acp_5(Tate) \u2228 p_3(Tate)\n\u00acp_10(Tate)\n\u00acp_6(Tate)\np_3(Tate) \u2194 p_5(Tate)\n\u00ac(p_7(Tate) \u2194 p_3(Tate))\n\u00acp_4(Tate) \u2228 p_6(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_2(Tate)",
                    "p_1(Tate)",
                    "p_0(Tate)",
                    "p_11(Tate) | p_2(Tate)",
                    "\u00acp_11(Tate) | p_9(Tate)",
                    "all x (p_1(x) <-> \u00acp_10(x))",
                    "\u00acp_6(Tate) | p_10(Tate)",
                    "\u00ac(p_9(Tate) <-> p_8(Tate))",
                    "(\u00ac(p_7(Tate) <-> p_0(Tate))) | p_8(Tate)",
                    "\u00ac(p_7(Tate) <-> p_5(Tate))",
                    "p_3(Tate) | p_4(Tate)",
                    "p_9(Tate) | p_8(Tate)",
                    "\u00acp_9(Tate) | \u00acp_8(Tate)",
                    "p_10(Tate) | \u00acp_6(Tate)",
                    "\u00acp_3(Tate) | p_5(Tate)",
                    "\u00acp_5(Tate) | p_3(Tate)",
                    "\u00acp_10(Tate)",
                    "\u00acp_6(Tate)",
                    "p_3(Tate) <-> p_5(Tate)",
                    "\u00ac(p_7(Tate) <-> p_3(Tate))",
                    "\u00acp_4(Tate) | p_6(Tate)"
                ],
                "formulas(goals)": [
                    "\u00acp_4(Tate)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Tate)"
                ],
                "removed_rules": [
                    "(\u00ac(p_3(Tate) \u2194 p_5(Tate))) \u2228 p_6(Tate) \u2228 p_4(Tate)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Tate) \u2228 p_6(Tate)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\n\u00acp_11(Tate) \u2228 p_9(Tate)\n\u2200x (p_1(x) \u2194 \u00acp_10(x))\n\u00ac(p_9(Tate) \u2194 p_8(Tate))\n(\u00ac(p_7(Tate) \u2194 p_0(Tate))) \u2228 p_8(Tate)\n\u00ac(p_7(Tate) \u2194 p_5(Tate))\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\n\u00acp_3(Tate) \u2228 p_5(Tate)\n\u00acp_5(Tate) \u2228 p_3(Tate)\n\u00acp_10(Tate)\n\u00acp_6(Tate)\np_3(Tate) \u2194 p_5(Tate)\n\u00ac(p_7(Tate) \u2194 p_3(Tate))\np_4(Tate) \u2228 p_6(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Tate)",
                    "p_1(Tate)",
                    "p_0(Tate)",
                    "p_11(Tate) | p_2(Tate)",
                    "-p_11(Tate) | p_9(Tate)",
                    "all x (p_1(x) <-> -p_10(x))",
                    "-(p_9(Tate) <-> p_8(Tate))",
                    "(-(p_7(Tate) <-> p_0(Tate))) | p_8(Tate)",
                    "-(p_7(Tate) <-> p_5(Tate))",
                    "p_3(Tate) | p_4(Tate)",
                    "p_9(Tate) | p_8(Tate)",
                    "-p_9(Tate) | -p_8(Tate)",
                    "-p_3(Tate) | p_5(Tate)",
                    "-p_5(Tate) | p_3(Tate)",
                    "-p_10(Tate)",
                    "-p_6(Tate)",
                    "p_3(Tate) <-> p_5(Tate)",
                    "-(p_7(Tate) <-> p_3(Tate))",
                    "p_4(Tate) | p_6(Tate)"
                ],
                "formulas(goals)": [
                    "-(-p_4(Tate))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Tate) \u2228 p_10(Tate)",
                    "p_10(Tate) \u2228 \u00acp_6(Tate)",
                    "\u00acp_4(Tate) \u2228 p_6(Tate)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Tate) \u2228 p_6(Tate)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\n\u00acp_11(Tate) \u2228 p_9(Tate)\n\u2200x (p_1(x) \u2194 \u00acp_10(x))\n\u00ac(p_9(Tate) \u2194 p_8(Tate))\n(\u00ac(p_7(Tate) \u2194 p_0(Tate))) \u2228 p_8(Tate)\n\u00ac(p_7(Tate) \u2194 p_5(Tate))\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\n\u00acp_3(Tate) \u2228 p_5(Tate)\n\u00acp_5(Tate) \u2228 p_3(Tate)\n\u00acp_10(Tate)\n\u00acp_6(Tate)\np_3(Tate) \u2194 p_5(Tate)\n\u00ac(p_7(Tate) \u2194 p_3(Tate))\np_4(Tate) \u2228 p_6(Tate)\np_11(Tate)\np_9(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Tate)",
                    "p_1(Tate)",
                    "p_0(Tate)",
                    "p_11(Tate) | p_2(Tate)",
                    "-p_11(Tate) | p_9(Tate)",
                    "all x (p_1(x) <-> -p_10(x))",
                    "-(p_9(Tate) <-> p_8(Tate))",
                    "(-(p_7(Tate) <-> p_0(Tate))) | p_8(Tate)",
                    "-(p_7(Tate) <-> p_5(Tate))",
                    "p_3(Tate) | p_4(Tate)",
                    "p_9(Tate) | p_8(Tate)",
                    "-p_9(Tate) | -p_8(Tate)",
                    "-p_3(Tate) | p_5(Tate)",
                    "-p_5(Tate) | p_3(Tate)",
                    "-p_10(Tate)",
                    "-p_6(Tate)",
                    "p_3(Tate) <-> p_5(Tate)",
                    "-(p_7(Tate) <-> p_3(Tate))",
                    "p_4(Tate) | p_6(Tate)",
                    "p_11(Tate)",
                    "p_9(Tate)"
                ],
                "formulas(goals)": [
                    "-(-p_4(Tate))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Tate)",
                    "p_9(Tate)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Tate)\np_1(Tate)\np_0(Tate)\np_11(Tate) \u2228 p_2(Tate)\n\u00acp_11(Tate) \u2228 p_9(Tate)\n\u2200x (p_1(x) \u2194 \u00acp_10(x))\n\u00ac(p_9(Tate) \u2194 p_8(Tate))\n(\u00ac(p_7(Tate) \u2194 p_0(Tate))) \u2228 p_8(Tate)\n\u00ac(p_7(Tate) \u2194 p_5(Tate))\np_3(Tate) \u2228 p_4(Tate)\np_9(Tate) \u2228 p_8(Tate)\n\u00acp_9(Tate) \u2228 \u00acp_8(Tate)\n\u00acp_3(Tate) \u2228 p_5(Tate)\n\u00acp_5(Tate) \u2228 p_3(Tate)\n\u00acp_10(Tate)\np_3(Tate) \u2194 p_5(Tate)\n\u00ac(p_7(Tate) \u2194 p_3(Tate))\np_11(Tate)\np_9(Tate)\n\u00acp_4(Tate) \u2228 p_6(Tate)\n\u00acp_6(Tate)",
            "Initial Goal": "\u00acp_4(Tate)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Tate)",
                    "p_1(Tate)",
                    "p_0(Tate)",
                    "p_11(Tate) | p_2(Tate)",
                    "-p_11(Tate) | p_9(Tate)",
                    "all x (p_1(x) <-> -p_10(x))",
                    "-(p_9(Tate) <-> p_8(Tate))",
                    "(-(p_7(Tate) <-> p_0(Tate))) | p_8(Tate)",
                    "-(p_7(Tate) <-> p_5(Tate))",
                    "p_3(Tate) | p_4(Tate)",
                    "p_9(Tate) | p_8(Tate)",
                    "-p_9(Tate) | -p_8(Tate)",
                    "-p_3(Tate) | p_5(Tate)",
                    "-p_5(Tate) | p_3(Tate)",
                    "-p_10(Tate)",
                    "p_3(Tate) <-> p_5(Tate)",
                    "-(p_7(Tate) <-> p_3(Tate))",
                    "p_11(Tate)",
                    "p_9(Tate)",
                    "-p_4(Tate) | p_6(Tate)",
                    "-p_6(Tate)"
                ],
                "formulas(goals)": [
                    "-p_4(Tate)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Tate)"
                ],
                "removed_rules": [
                    "p_4(Tate) \u2228 p_6(Tate)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Tate) \u2228 p_6(Tate)",
                    "\u00acp_6(Tate)"
                ]
            }
        }
    ]
}