{
    "background_story": "Juliana was the youngest daughter of the reigning monarch, King Edward. As a princeling, she was born into a life of luxury and duty. From a young age, Juliana was groomed to take on royal responsibilities, learning etiquette, diplomacy, and statecraft. Despite her privileged upbringing, she remained humble and kind, beloved by the people for her compassion and generosity. Juliana's parents encouraged her to pursue her passion for the arts, and she became an accomplished painter and patron of the royal academy. As she grew older, Juliana's role in the kingdom expanded, and she became a respected ambassador for her family and country, earning the admiration of her people and the respect of foreign dignitaries.",
    "predicates": [
        {
            "id": 0,
            "name": "support_charity"
        },
        {
            "id": 1,
            "name": "is_benevolent"
        },
        {
            "id": 2,
            "name": "donates_wealth"
        },
        {
            "id": 3,
            "name": "hold_royal_position"
        },
        {
            "id": 4,
            "name": "have_royal_responsibilities"
        },
        {
            "id": 5,
            "name": "pursue_artistic_interests"
        },
        {
            "id": 6,
            "name": "is_noble"
        },
        {
            "id": 7,
            "name": "show_compassion"
        },
        {
            "id": 8,
            "name": "is_generous"
        },
        {
            "id": 9,
            "name": "born_to_reign"
        },
        {
            "id": 10,
            "name": "serve_the_kingdom"
        },
        {
            "id": 11,
            "name": "enjoys_paintings"
        },
        {
            "id": 12,
            "name": "attends_exhibits"
        },
        {
            "id": 13,
            "name": "leads_by_example"
        },
        {
            "id": 14,
            "name": "is_wealthy"
        },
        {
            "id": 15,
            "name": "is_influential"
        },
        {
            "id": 16,
            "name": "has_influence"
        },
        {
            "id": 17,
            "name": "earn_respect"
        }
    ],
    "subject_name": "Juliana",
    "subject_category": "royalty",
    "keyword": "princeling",
    "all_facts": [
        {
            "id": 0,
            "subject": "Juliana",
            "text": "Juliana does not support charity.",
            "fol": "\u00acp_0(Juliana)",
            "str_fol": "\u00acsupport_charity(Juliana)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Juliana",
            "text": "Juliana is benevolent.",
            "fol": "p_1(Juliana)",
            "str_fol": "is_benevolent(Juliana)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Juliana",
            "text": "Juliana does not donate wealth.",
            "fol": "\u00acp_2(Juliana)",
            "str_fol": "\u00acdonates_wealth(Juliana)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Juliana",
            "text": "Juliana is generous.",
            "fol": "p_8(Juliana)",
            "str_fol": "is_generous(Juliana)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Juliana",
            "text": "Juliana does not show compassion.",
            "fol": "\u00acp_7(Juliana)",
            "str_fol": "\u00acshow_compassion(Juliana)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Juliana",
            "text": "Juliana is a noble.",
            "fol": "p_6(Juliana)",
            "str_fol": "is_noble(Juliana)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Juliana",
            "text": "Juliana pursues artistic interests.",
            "fol": "p_5(Juliana)",
            "str_fol": "pursue_artistic_interests(Juliana)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Juliana",
            "text": "Juliana does not have royal responsibilities.",
            "fol": "\u00acp_4(Juliana)",
            "str_fol": "\u00achave_royal_responsibilities(Juliana)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Juliana",
            "text": "Juliana holds a royal position.",
            "fol": "p_3(Juliana)",
            "str_fol": "hold_royal_position(Juliana)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Juliana",
            "text": "Juliana does not donate wealth.",
            "fol": "\u00acp_2(Juliana)",
            "str_fol": "\u00acdonates_wealth(Juliana)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Juliana",
            "text": "Juliana is benevolent.",
            "fol": "p_1(Juliana)",
            "str_fol": "is_benevolent(Juliana)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Juliana",
            "text": "Juliana does not support charity.",
            "fol": "\u00acp_0(Juliana)",
            "str_fol": "\u00acsupport_charity(Juliana)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Juliana is either generous or donates wealth.",
            "fol": "p_8(Juliana) \u2228 p_2(Juliana)",
            "str_fol": "is_generous(Juliana) \u2228 donates_wealth(Juliana)"
        },
        {
            "id": 4,
            "text": "If Juliana is benevolent, then she is either compassionate or generous, but not both.",
            "fol": "p_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))",
            "str_fol": "is_benevolent(Juliana) \u2192 (show_compassion(Juliana) \u2295 is_generous(Juliana))"
        },
        {
            "id": 3,
            "text": "Royals are either compassionate or of noble birth, but these traits are not necessarily intertwined.",
            "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
            "str_fol": "\u2200x (show_compassion(x) \u2295 is_noble(x))"
        },
        {
            "id": 2,
            "text": "If Juliana is a noble, then she either supports charity or pursues artistic interests, but not both.",
            "fol": "p_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))",
            "str_fol": "is_noble(Juliana) \u2192 (support_charity(Juliana) \u2295 pursue_artistic_interests(Juliana))"
        },
        {
            "id": 1,
            "text": "Juliana either has royal responsibilities or pursues artistic interests, but not both.",
            "fol": "p_4(Juliana) \u2295 p_5(Juliana)",
            "str_fol": "have_royal_responsibilities(Juliana) \u2295 pursue_artistic_interests(Juliana)"
        },
        {
            "id": 0,
            "text": "For all royalty, if they hold a royal position, then they have royal responsibilities.",
            "fol": "\u2200x (p_3(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (hold_royal_position(x) \u2192 have_royal_responsibilities(x))"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Juliana",
            "text": "Juliana does not donate wealth.",
            "fol": "\u00acp_2(Juliana)",
            "str_fol": "\u00acdonates_wealth(Juliana)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Juliana",
            "text": "Juliana is benevolent.",
            "fol": "p_1(Juliana)",
            "str_fol": "is_benevolent(Juliana)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Juliana",
            "text": "Juliana does not support charity.",
            "fol": "\u00acp_0(Juliana)",
            "str_fol": "\u00acsupport_charity(Juliana)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Juliana is either generous or donates wealth.",
            "fol": "p_8(Juliana) \u2228 p_2(Juliana)",
            "str_fol": "is_generous(Juliana) \u2228 donates_wealth(Juliana)"
        },
        {
            "id": 4,
            "text": "If Juliana is benevolent, then she is either compassionate or generous, but not both.",
            "fol": "p_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))",
            "str_fol": "is_benevolent(Juliana) \u2192 (show_compassion(Juliana) \u2295 is_generous(Juliana))"
        },
        {
            "id": 3,
            "text": "Royals are either compassionate or of noble birth, but these traits are not necessarily intertwined.",
            "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
            "str_fol": "\u2200x (show_compassion(x) \u2295 is_noble(x))"
        },
        {
            "id": 2,
            "text": "If Juliana is a noble, then she either supports charity or pursues artistic interests, but not both.",
            "fol": "p_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))",
            "str_fol": "is_noble(Juliana) \u2192 (support_charity(Juliana) \u2295 pursue_artistic_interests(Juliana))"
        },
        {
            "id": 1,
            "text": "Juliana either has royal responsibilities or pursues artistic interests, but not both.",
            "fol": "p_4(Juliana) \u2295 p_5(Juliana)",
            "str_fol": "have_royal_responsibilities(Juliana) \u2295 pursue_artistic_interests(Juliana)"
        },
        {
            "id": 0,
            "text": "For all royalty, if they hold a royal position, then they have royal responsibilities.",
            "fol": "\u2200x (p_3(x) \u2192 p_4(x))",
            "str_fol": "\u2200x (hold_royal_position(x) \u2192 have_royal_responsibilities(x))"
        }
    ],
    "context_fol": "\u00acp_2(Juliana)\np_1(Juliana)\n\u00acp_0(Juliana)\np_8(Juliana) \u2228 p_2(Juliana)\np_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))\n\u2200x (p_7(x) \u2295 p_6(x))\np_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))\np_4(Juliana) \u2295 p_5(Juliana)\n\u2200x (p_3(x) \u2192 p_4(x))",
    "conclusion": {
        "id": 8,
        "subject": "Juliana",
        "text": "Juliana holds a royal position.",
        "fol": "p_3(Juliana)",
        "str_fol": "hold_royal_position(Juliana)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_3(Juliana)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Juliana",
                    "text": "Juliana does not donate wealth.",
                    "fol": "\u00acp_2(Juliana)",
                    "str_fol": "\u00acdonates_wealth(Juliana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Juliana is either generous or donates wealth.",
                    "fol": "p_8(Juliana) \u2228 p_2(Juliana)",
                    "str_fol": "is_generous(Juliana) \u2228 donates_wealth(Juliana)"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Juliana",
                "text": "Juliana is generous.",
                "fol": "p_8(Juliana)",
                "str_fol": "is_generous(Juliana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Juliana",
                    "text": "Juliana is benevolent.",
                    "fol": "p_1(Juliana)",
                    "str_fol": "is_benevolent(Juliana)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Juliana",
                    "text": "Juliana is generous.",
                    "fol": "p_8(Juliana)",
                    "str_fol": "is_generous(Juliana)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Juliana is benevolent, then she is either compassionate or generous, but not both.",
                    "fol": "p_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))",
                    "str_fol": "is_benevolent(Juliana) \u2192 (show_compassion(Juliana) \u2295 is_generous(Juliana))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Juliana",
                "text": "Juliana does not show compassion.",
                "fol": "\u00acp_7(Juliana)",
                "str_fol": "\u00acshow_compassion(Juliana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Juliana",
                    "text": "Juliana does not show compassion.",
                    "fol": "\u00acp_7(Juliana)",
                    "str_fol": "\u00acshow_compassion(Juliana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Royals are either compassionate or of noble birth, but these traits are not necessarily intertwined.",
                    "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
                    "str_fol": "\u2200x (show_compassion(x) \u2295 is_noble(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Juliana",
                "text": "Juliana is a noble.",
                "fol": "p_6(Juliana)",
                "str_fol": "is_noble(Juliana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Juliana",
                    "text": "Juliana is a noble.",
                    "fol": "p_6(Juliana)",
                    "str_fol": "is_noble(Juliana)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Juliana",
                    "text": "Juliana does not support charity.",
                    "fol": "\u00acp_0(Juliana)",
                    "str_fol": "\u00acsupport_charity(Juliana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Juliana is a noble, then she either supports charity or pursues artistic interests, but not both.",
                    "fol": "p_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))",
                    "str_fol": "is_noble(Juliana) \u2192 (support_charity(Juliana) \u2295 pursue_artistic_interests(Juliana))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Juliana",
                "text": "Juliana pursues artistic interests.",
                "fol": "p_5(Juliana)",
                "str_fol": "pursue_artistic_interests(Juliana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Juliana",
                    "text": "Juliana pursues artistic interests.",
                    "fol": "p_5(Juliana)",
                    "str_fol": "pursue_artistic_interests(Juliana)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Juliana either has royal responsibilities or pursues artistic interests, but not both.",
                    "fol": "p_4(Juliana) \u2295 p_5(Juliana)",
                    "str_fol": "have_royal_responsibilities(Juliana) \u2295 pursue_artistic_interests(Juliana)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Juliana",
                "text": "Juliana does not have royal responsibilities.",
                "fol": "\u00acp_4(Juliana)",
                "str_fol": "\u00achave_royal_responsibilities(Juliana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Juliana",
                    "text": "Juliana does not have royal responsibilities.",
                    "fol": "\u00acp_4(Juliana)",
                    "str_fol": "\u00achave_royal_responsibilities(Juliana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all royalty, if they hold a royal position, then they have royal responsibilities.",
                    "fol": "\u2200x (p_3(x) \u2192 p_4(x))",
                    "str_fol": "\u2200x (hold_royal_position(x) \u2192 have_royal_responsibilities(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Juliana",
                "text": "Juliana holds a royal position.",
                "fol": "p_3(Juliana)",
                "str_fol": "hold_royal_position(Juliana)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_1(Juliana) -> -(p_7(Juliana) <-> p_8(Juliana)).  [assumption].\n2 (all x -(p_7(x) <-> p_6(x))).  [assumption].\n3 p_6(Juliana) -> -(p_0(Juliana) <-> p_5(Juliana)).  [assumption].\n4 -(p_4(Juliana) <-> p_5(Juliana)).  [assumption].\n5 (all x (p_3(x) -> p_4(x))).  [assumption].\n6 -p_3(Juliana).  [goal].\n7 p_8(Juliana) | p_2(Juliana).  [assumption].\n8 -p_2(Juliana).  [assumption].\n10 p_1(Juliana).  [assumption].\n11 -p_1(Juliana) | -p_7(Juliana) | -p_8(Juliana).  [clausify(1)].\n12 -p_6(Juliana) | p_0(Juliana) | p_5(Juliana).  [clausify(3)].\n13 -p_0(Juliana).  [assumption].\n16 p_7(x) | p_6(x).  [clausify(2)].\n17 -p_7(Juliana) | -p_8(Juliana).  [resolve(11,a,10,a)].\n18 -p_4(Juliana) | -p_5(Juliana).  [clausify(4)].\n20 -p_3(x) | p_4(x).  [clausify(5)].\n21 -p_3(Juliana) | -p_5(Juliana).  [resolve(20,b,18,a)].\n22 p_3(Juliana).  [deny(6)].\n23 -p_8(Juliana) | p_6(Juliana).  [resolve(17,a,16,a)].\n24 p_8(Juliana).  [resolve(7,b,8,a)].\n25 p_6(Juliana).  [resolve(23,a,24,a)].\n26 -p_6(Juliana) | p_5(Juliana).  [resolve(12,b,13,a)].\n27 p_5(Juliana).  [resolve(25,a,26,a)].\n28 -p_5(Juliana).  [resolve(21,a,22,a)].\n29 $F.  [resolve(27,a,28,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp\u2082(Juliana)\np\u2081(Juliana)\n\u00acp\u2080(Juliana)\np\u2088(Juliana) \u2228 p\u2082(Juliana)\np\u2081(Juliana) \u2192 (p\u2087(Juliana) \u2295 p\u2088(Juliana))\n\u2200x (p\u2087(x) \u2295 p\u2086(x))\np\u2086(Juliana) \u2192 (p\u2080(Juliana) \u2295 p\u2085(Juliana))\np\u2084(Juliana)\n\u2200x (p\u2083(x) \u2192 p\u2084(x))\np\u2084(Juliana) \u2192 p\u2083(Juliana)",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_2(Juliana)",
                    "p_1(Juliana)",
                    "\u00acp_0(Juliana)",
                    "p_8(Juliana) | p_2(Juliana)",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana)))",
                    "(all x (-(p_7(x) <-> p_6(x))))",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana)))",
                    "p_4(Juliana)",
                    "(all x (p_3(x) -> p_4(x)))",
                    "p_4(Juliana) -> p_3(Juliana)"
                ],
                "formulas(goals)": [
                    "p_3(Juliana)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Juliana) \u2295 p_5(Juliana)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Juliana)"
                ],
                "added_rules": [
                    "p_4(Juliana) \u2192 p_3(Juliana)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp\u2082(Juliana)\np\u2081(Juliana)\n\u00acp\u2080(Juliana)\np\u2088(Juliana) \u2228 p\u2082(Juliana)\np\u2081(Juliana) \u2192 (p\u2087(Juliana) \u2295 p\u2088(Juliana))\n\u2200x (p\u2087(x) \u2295 p\u2086(x))\np\u2086(Juliana) \u2192 (p\u2080(Juliana) \u2295 p\u2085(Juliana))\np\u2084(Juliana)\n\u2200x (p\u2083(x) \u2192 p\u2084(x))\np\u2084(Juliana) \u2192 p\u2083(Juliana)\np\u2083(Juliana)\n\u00acp\u2083(Juliana) \u2192 \u00acp\u2084(Juliana)\np\u2084(Juliana) \u2228 \u00acp\u2083(Juliana)\np\u2087(Juliana) \u2228 p\u2086(Juliana)\n\u00acp\u2087(Juliana) \u2228 \u00acp\u2086(Juliana)",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Juliana)",
                    "p_1(Juliana)",
                    "-p_0(Juliana)",
                    "p_8(Juliana) | p_2(Juliana)",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana)))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana)))",
                    "p_4(Juliana)",
                    "all x (p_3(x) -> p_4(x))",
                    "p_4(Juliana) -> p_3(Juliana)",
                    "p_3(Juliana)",
                    "-p_3(Juliana) -> -p_4(Juliana)",
                    "p_4(Juliana) | -p_3(Juliana)",
                    "p_7(Juliana) | p_6(Juliana)",
                    "-p_7(Juliana) | -p_6(Juliana)"
                ],
                "formulas(goals)": [
                    "p_3(Juliana)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p\u2083(Juliana)"
                ],
                "added_rules": [
                    "\u00acp\u2083(Juliana) \u2192 \u00acp\u2084(Juliana)",
                    "p\u2084(Juliana) \u2228 \u00acp\u2083(Juliana)",
                    "p\u2087(Juliana) \u2228 p\u2086(Juliana)",
                    "\u00acp\u2087(Juliana) \u2228 \u00acp\u2086(Juliana)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp\u2082(Juliana)\np\u2081(Juliana)\n\u00acp\u2080(Juliana)\np\u2088(Juliana) \u2228 p\u2082(Juliana)\np\u2081(Juliana) \u2192 (p\u2087(Juliana) \u2295 p\u2088(Juliana))\n\u2200x (p\u2087(x) \u2295 p\u2086(x))\np\u2086(Juliana) \u2192 (p\u2080(Juliana) \u2295 p\u2085(Juliana))\np\u2084(Juliana)\n\u2200x (p\u2083(x) \u2192 p\u2084(x))\np\u2084(Juliana) \u2192 p\u2083(Juliana)\np\u2083(Juliana)\n\u00acp\u2083(Juliana) \u2192 \u00acp\u2084(Juliana)\np\u2084(Juliana) \u2228 \u00acp\u2083(Juliana)\np\u2087(Juliana) \u2228 p\u2086(Juliana)\n\u00acp\u2087(Juliana) \u2228 \u00acp\u2086(Juliana)\np\u2088(Juliana)",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Juliana)",
                    "p_1(Juliana)",
                    "-p_0(Juliana)",
                    "p_8(Juliana) | p_2(Juliana)",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana)))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana)))",
                    "p_4(Juliana)",
                    "all x (p_3(x) -> p_4(x))",
                    "p_4(Juliana) -> p_3(Juliana)",
                    "p_3(Juliana)",
                    "-p_3(Juliana) -> -p_4(Juliana)",
                    "p_4(Juliana) | -p_3(Juliana)",
                    "p_7(Juliana) | p_6(Juliana)",
                    "-p_7(Juliana) | -p_6(Juliana)",
                    "p_8(Juliana)"
                ],
                "formulas(goals)": [
                    "p_3(Juliana)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p\u2088(Juliana)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Juliana).\np_1(Juliana).\n\u00acp_0(Juliana).\np_8(Juliana) \u2228 p_2(Juliana).\np_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana)).\n\u2200x (p_7(x) \u2295 p_6(x)).\np_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana)).\np_4(Juliana).\n\u2200x (\u00acp_3(x) \u2228 p_4(x)).\n\u00acp_4(Juliana) \u2228 p_3(Juliana).\np_3(Juliana).\n\u00acp_3(Juliana) \u2192 \u00acp_4(Juliana).\np_4(Juliana) \u2228 \u00acp_3(Juliana).\np_7(Juliana) \u2228 p_6(Juliana).\n\u00acp_7(Juliana) \u2228 \u00acp_6(Juliana).\np_8(Juliana).\np_3(Juliana) \u2228 p_4(Juliana).\np_5(Juliana) \u2228 \u00acp_5(Juliana).",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Juliana).",
                    "p_1(Juliana).",
                    "-p_0(Juliana).",
                    "p_8(Juliana) | p_2(Juliana).",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana))).",
                    "all x (-(p_7(x) <-> p_6(x))).",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana))).",
                    "p_4(Juliana).",
                    "all x (-p_3(x) | p_4(x)).",
                    "-p_4(Juliana) | p_3(Juliana).",
                    "p_3(Juliana).",
                    "-p_3(Juliana) -> -p_4(Juliana).",
                    "p_4(Juliana) | -p_3(Juliana).",
                    "p_7(Juliana) | p_6(Juliana).",
                    "-p_7(Juliana) | -p_6(Juliana).",
                    "p_8(Juliana).",
                    "p_3(Juliana) | p_4(Juliana).",
                    "p_5(Juliana) | -p_5(Juliana)."
                ],
                "formulas(goals)": [
                    "p_3(Juliana)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p\u2083(x) \u2192 p\u2084(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp\u2083(x) \u2228 p\u2084(x))",
                    "\u00acp\u2084(Juliana) \u2228 p\u2083(Juliana)",
                    "p\u2083(Juliana) \u2228 p\u2084(Juliana)",
                    "p\u2085(Juliana) \u2228 \u00acp\u2085(Juliana)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Juliana)\np_1(Juliana)\n\u00acp_0(Juliana)\np_8(Juliana) \u2228 p_2(Juliana)\np_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))\n\u2200x (p_7(x) \u2295 p_6(x))\np_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))\np_4(Juliana)\n\u2200x (\u00acp_3(x) \u2228 p_4(x))\n\u00acp_4(Juliana) \u2228 p_3(Juliana)\np_3(Juliana)\n\u00acp_3(Juliana) \u2192 \u00acp_4(Juliana)\np_4(Juliana) \u2228 \u00acp_3(Juliana)\np_7(Juliana) \u2228 p_6(Juliana)\n\u00acp_7(Juliana) \u2228 \u00acp_6(Juliana)\np_8(Juliana)\np_3(Juliana) \u2228 p_4(Juliana)\np_5(Juliana) \u2228 \u00acp_5(Juliana)\n\u00ac\u00acp_4(Juliana)\n\u00ac\u00acp_3(Juliana)\n\u2200x (p_3(x) \u2192 p_4(x))\np_4(Juliana) \u2192 p_3(Juliana)\np_7(Juliana) \u2295 p_6(Juliana)\np_0(Juliana) \u2295 p_5(Juliana)",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Juliana).",
                    "p_1(Juliana).",
                    "-p_0(Juliana).",
                    "p_8(Juliana) | p_2(Juliana).",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana))).",
                    "all x (-(p_7(x) <-> p_6(x))).",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana))).",
                    "p_4(Juliana).",
                    "all x (-p_3(x) | p_4(x)).",
                    "-p_4(Juliana) | p_3(Juliana).",
                    "p_3(Juliana).",
                    "-p_3(Juliana) -> -p_4(Juliana).",
                    "p_4(Juliana) | -p_3(Juliana).",
                    "p_7(Juliana) | p_6(Juliana).",
                    "-p_7(Juliana) | -p_6(Juliana).",
                    "p_8(Juliana).",
                    "p_3(Juliana) | p_4(Juliana).",
                    "p_5(Juliana) | -p_5(Juliana).",
                    "--p_4(Juliana).",
                    "--p_3(Juliana).",
                    "all x (p_3(x) -> p_4(x)).",
                    "p_4(Juliana) -> p_3(Juliana).",
                    "-(p_7(Juliana) <-> p_6(Juliana)).",
                    "-(p_0(Juliana) <-> p_5(Juliana))."
                ],
                "formulas(goals)": [
                    "p_3(Juliana)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac\u00acp_4(Juliana)",
                    "\u00ac\u00acp_3(Juliana)"
                ],
                "added_rules": [
                    "\u2200x (p_3(x) \u2192 p_4(x))",
                    "p_4(Juliana) \u2192 p_3(Juliana)",
                    "p_7(Juliana) \u2295 p_6(Juliana)",
                    "p_0(Juliana) \u2295 p_5(Juliana)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Juliana)\np_1(Juliana)\n\u00acp_0(Juliana)\np_8(Juliana) \u2228 p_2(Juliana)\np_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))\n\u2200x (p_7(x) \u2295 p_6(x))\np_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))\np_4(Juliana)\n\u2200x (\u00acp_3(x) \u2228 p_4(x))\n\u00acp_4(Juliana) \u2228 p_3(Juliana)\np_3(Juliana)\n\u00acp_3(Juliana) \u2192 \u00acp_4(Juliana)\np_4(Juliana) \u2228 \u00acp_3(Juliana)\np_7(Juliana) \u2228 p_6(Juliana)\n\u00acp_7(Juliana) \u2228 \u00acp_6(Juliana)\np_8(Juliana)\np_3(Juliana) \u2228 p_4(Juliana)\np_5(Juliana) \u2228 \u00acp_5(Juliana)\n\u00ac\u00acp_4(Juliana)\n\u00ac\u00acp_3(Juliana)\n\u2200x (p_3(x) \u2192 p_4(x))\np_4(Juliana) \u2192 p_3(Juliana)\np_7(Juliana) \u2295 p_6(Juliana)\np_0(Juliana) \u2295 p_5(Juliana)\n\u00acp_7(Juliana)\np_6(Juliana)",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Juliana)",
                    "p_1(Juliana)",
                    "-p_0(Juliana)",
                    "p_8(Juliana) | p_2(Juliana)",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana)))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana)))",
                    "p_4(Juliana)",
                    "all x (-p_3(x) | p_4(x))",
                    "-p_4(Juliana) | p_3(Juliana)",
                    "p_3(Juliana)",
                    "-p_3(Juliana) -> -p_4(Juliana)",
                    "p_4(Juliana) | -p_3(Juliana)",
                    "p_7(Juliana) | p_6(Juliana)",
                    "-p_7(Juliana) | -p_6(Juliana)",
                    "p_8(Juliana)",
                    "p_3(Juliana) | p_4(Juliana)",
                    "p_5(Juliana) | -p_5(Juliana)",
                    "--p_4(Juliana)",
                    "--p_3(Juliana)",
                    "all x (p_3(x) -> p_4(x))",
                    "p_4(Juliana) -> p_3(Juliana)",
                    "-(p_7(Juliana) <-> p_6(Juliana))",
                    "-(p_0(Juliana) <-> p_5(Juliana))",
                    "-p_7(Juliana)",
                    "p_6(Juliana)"
                ],
                "formulas(goals)": [
                    "p_3(Juliana)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Juliana)",
                    "p_6(Juliana)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Juliana)\np_1(Juliana)\n\u00acp_0(Juliana)\np_8(Juliana) \u2228 p_2(Juliana)\np_1(Juliana) \u2192 (p_7(Juliana) \u2295 p_8(Juliana))\n\u2200x (p_7(x) \u2295 p_6(x))\np_6(Juliana) \u2192 (p_0(Juliana) \u2295 p_5(Juliana))\np_4(Juliana)\n\u2200x (\u00acp_3(x) \u2228 p_4(x))\np_4(Juliana) \u2228 \u00acp_3(Juliana)\np_7(Juliana) \u2228 p_6(Juliana)\n\u00acp_7(Juliana) \u2228 \u00acp_6(Juliana)\np_8(Juliana)\np_3(Juliana) \u2228 p_4(Juliana)\np_5(Juliana) \u2228 \u00acp_5(Juliana)\n\u00ac\u00acp_4(Juliana)\n\u2200x (p_3(x) \u2192 p_4(x))\np_7(Juliana) \u2295 p_6(Juliana)\np_0(Juliana) \u2295 p_5(Juliana)\n\u00acp_7(Juliana)\np_6(Juliana)\np_4(Juliana) \u2192 \u00acp_3(Juliana)",
            "Initial Goal": "p_3(Juliana)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Juliana).",
                    "p_1(Juliana).",
                    "-p_0(Juliana).",
                    "p_8(Juliana) | p_2(Juliana).",
                    "p_1(Juliana) -> (-(p_7(Juliana) <-> p_8(Juliana))).",
                    "all x (-(p_7(x) <-> p_6(x))).",
                    "p_6(Juliana) -> (-(p_0(Juliana) <-> p_5(Juliana))).",
                    "p_4(Juliana).",
                    "all x (-p_3(x) | p_4(x)).",
                    "p_4(Juliana) | -p_3(Juliana).",
                    "p_7(Juliana) | p_6(Juliana).",
                    "-p_7(Juliana) | -p_6(Juliana).",
                    "p_8(Juliana).",
                    "p_3(Juliana) | p_4(Juliana).",
                    "p_5(Juliana) | -p_5(Juliana).",
                    "--p_4(Juliana).",
                    "all x (p_3(x) -> p_4(x)).",
                    "-(p_7(Juliana) <-> p_6(Juliana)).",
                    "-(p_0(Juliana) <-> p_5(Juliana)).",
                    "-p_7(Juliana).",
                    "p_6(Juliana).",
                    "p_4(Juliana) -> -p_3(Juliana)."
                ],
                "formulas(goals)": [
                    "-p_3(Juliana)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_3(Juliana)",
                    "\u00ac\u00acp_3(Juliana)"
                ],
                "removed_rules": [
                    "\u00acp_4(Juliana) \u2228 p_3(Juliana)",
                    "\u00acp_3(Juliana) \u2192 \u00acp_4(Juliana)",
                    "p_4(Juliana) \u2192 p_3(Juliana)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Juliana) \u2228 \u00acp_3(Juliana)",
                    "p_4(Juliana) \u2192 \u00acp_3(Juliana)"
                ]
            }
        }
    ]
}