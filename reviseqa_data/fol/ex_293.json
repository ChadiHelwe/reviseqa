{
    "background_story": "Julia was a talented and ambitious anatomist with a particular fascination for the human throat. Her area of expertise was the fauces, the narrow passageway connecting the mouth to the pharynx. Julia spent years studying the intricate structures of the fauces, publishing numerous papers on its anatomy and function. Her groundbreaking research led to a deeper understanding of swallowing disorders and paved the way for new treatments. Julia's passion for her work was contagious, inspiring a new generation of anatomists to explore the complexities of the human body. Her dedication to unraveling the secrets of the fauces earned her a prestigious award in the field of medicine, solidifying her reputation as a leading expert.",
    "predicates": [
        {
            "id": 0,
            "name": "conducts_research"
        },
        {
            "id": 1,
            "name": "solve_problems"
        },
        {
            "id": 2,
            "name": "publish_papers"
        },
        {
            "id": 3,
            "name": "seeks_answers"
        },
        {
            "id": 4,
            "name": "is_intelligent"
        },
        {
            "id": 5,
            "name": "has_knowledge"
        },
        {
            "id": 6,
            "name": "is_curious"
        },
        {
            "id": 7,
            "name": "reads_books"
        },
        {
            "id": 8,
            "name": "makes_discoveries"
        },
        {
            "id": 9,
            "name": "is_inquisitive"
        },
        {
            "id": 10,
            "name": "is_expert"
        },
        {
            "id": 11,
            "name": "asks_questions"
        },
        {
            "id": 12,
            "name": "studies_anatomy"
        },
        {
            "id": 13,
            "name": "understands_biology"
        },
        {
            "id": 14,
            "name": "writes_articles"
        },
        {
            "id": 15,
            "name": "attends_seminars"
        },
        {
            "id": 16,
            "name": "explores_data"
        },
        {
            "id": 17,
            "name": "examines_evidence"
        },
        {
            "id": 18,
            "name": "studies_hard"
        },
        {
            "id": 19,
            "name": "has_insight"
        },
        {
            "id": 20,
            "name": "explores_ideas"
        },
        {
            "id": 21,
            "name": "explores_subjects"
        },
        {
            "id": 22,
            "name": "gains_insight"
        }
    ],
    "subject_name": "Julia",
    "subject_category": "human",
    "keyword": "fauces",
    "all_facts": [
        {
            "id": 0,
            "subject": "Julia",
            "text": "Julia does not conduct research.",
            "fol": "\u00acp_0(Julia)",
            "str_fol": "\u00acconducts_research(Julia)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Julia",
            "text": "Julia cannot solve problems.",
            "fol": "\u00acp_1(Julia)",
            "str_fol": "\u00acsolve_problems(Julia)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Julia",
            "text": "Julia publishes papers.",
            "fol": "p_2(Julia)",
            "str_fol": "publish_papers(Julia)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Julia",
            "text": "Julia does not seek answers.",
            "fol": "\u00acp_3(Julia)",
            "str_fol": "\u00acseeks_answers(Julia)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Julia",
            "text": "Julia is not intelligent.",
            "fol": "\u00acp_4(Julia)",
            "str_fol": "\u00acis_intelligent(Julia)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Julia",
            "text": "Julia does not ask questions.",
            "fol": "\u00acp_11(Julia)",
            "str_fol": "\u00acasks_questions(Julia)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Julia",
            "text": "Julia is inquisitive.",
            "fol": "p_9(Julia)",
            "str_fol": "is_inquisitive(Julia)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Julia",
            "text": "Julia is not an expert.",
            "fol": "\u00acp_10(Julia)",
            "str_fol": "\u00acis_expert(Julia)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Julia",
            "text": "Julia does not make discoveries.",
            "fol": "\u00acp_8(Julia)",
            "str_fol": "\u00acmakes_discoveries(Julia)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Julia",
            "text": "Julia reads books.",
            "fol": "p_7(Julia)",
            "str_fol": "reads_books(Julia)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Julia",
            "text": "Julia is not curious.",
            "fol": "\u00acp_6(Julia)",
            "str_fol": "\u00acis_curious(Julia)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Julia",
            "text": "Julia has knowledge.",
            "fol": "p_5(Julia)",
            "str_fol": "has_knowledge(Julia)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Julia",
            "text": "Julia does not seek answers.",
            "fol": "\u00acp_3(Julia)",
            "str_fol": "\u00acseeks_answers(Julia)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Julia",
            "text": "Julia is not intelligent.",
            "fol": "\u00acp_4(Julia)",
            "str_fol": "\u00acis_intelligent(Julia)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Julia",
            "text": "Julia cannot solve problems.",
            "fol": "\u00acp_1(Julia)",
            "str_fol": "\u00acsolve_problems(Julia)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Julia",
            "text": "Julia publishes papers.",
            "fol": "p_2(Julia)",
            "str_fol": "publish_papers(Julia)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Julia",
            "text": "Julia does not conduct research.",
            "fol": "\u00acp_0(Julia)",
            "str_fol": "\u00acconducts_research(Julia)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
            "fol": "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
            "str_fol": "(seeks_answers(Julia) \u2295 asks_questions(Julia)) \u2192 is_intelligent(Julia)"
        },
        {
            "id": 5,
            "text": "Everyone is either inquisitive or asks questions.",
            "fol": "\u2200x (p_9(x) \u2228 p_11(x))",
            "str_fol": "\u2200x (is_inquisitive(x) \u2228 asks_questions(x))"
        },
        {
            "id": 4,
            "text": "If someone is an expert, then they can solve problems and publish papers.",
            "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
            "str_fol": "\u2200x (is_expert(x) \u2192 (solve_problems(x) \u2227 publish_papers(x)))"
        },
        {
            "id": 3,
            "text": "If Julia makes discoveries, then she is an expert.",
            "fol": "p_8(Julia) \u2192 p_10(Julia)",
            "str_fol": "makes_discoveries(Julia) \u2192 is_expert(Julia)"
        },
        {
            "id": 2,
            "text": "Anyone who is inquisitive either reads books or conducts research.",
            "fol": "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (is_inquisitive(x) \u2192 (reads_books(x) \u2228 conducts_research(x)))"
        },
        {
            "id": 1,
            "text": "If someone reads books and is curious, then they can make discoveries.",
            "fol": "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((reads_books(x) \u2227 is_curious(x)) \u2192 makes_discoveries(x))"
        },
        {
            "id": 0,
            "text": "Every human either has knowledge or is curious (or both).",
            "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
            "str_fol": "\u2200x (has_knowledge(x) \u2228 is_curious(x))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Julia",
            "text": "Julia does not seek answers.",
            "fol": "\u00acp_3(Julia)",
            "str_fol": "\u00acseeks_answers(Julia)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Julia",
            "text": "Julia is not intelligent.",
            "fol": "\u00acp_4(Julia)",
            "str_fol": "\u00acis_intelligent(Julia)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Julia",
            "text": "Julia cannot solve problems.",
            "fol": "\u00acp_1(Julia)",
            "str_fol": "\u00acsolve_problems(Julia)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Julia",
            "text": "Julia publishes papers.",
            "fol": "p_2(Julia)",
            "str_fol": "publish_papers(Julia)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Julia",
            "text": "Julia does not conduct research.",
            "fol": "\u00acp_0(Julia)",
            "str_fol": "\u00acconducts_research(Julia)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
            "fol": "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
            "str_fol": "(seeks_answers(Julia) \u2295 asks_questions(Julia)) \u2192 is_intelligent(Julia)"
        },
        {
            "id": 5,
            "text": "Everyone is either inquisitive or asks questions.",
            "fol": "\u2200x (p_9(x) \u2228 p_11(x))",
            "str_fol": "\u2200x (is_inquisitive(x) \u2228 asks_questions(x))"
        },
        {
            "id": 4,
            "text": "If someone is an expert, then they can solve problems and publish papers.",
            "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
            "str_fol": "\u2200x (is_expert(x) \u2192 (solve_problems(x) \u2227 publish_papers(x)))"
        },
        {
            "id": 3,
            "text": "If Julia makes discoveries, then she is an expert.",
            "fol": "p_8(Julia) \u2192 p_10(Julia)",
            "str_fol": "makes_discoveries(Julia) \u2192 is_expert(Julia)"
        },
        {
            "id": 2,
            "text": "Anyone who is inquisitive either reads books or conducts research.",
            "fol": "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (is_inquisitive(x) \u2192 (reads_books(x) \u2228 conducts_research(x)))"
        },
        {
            "id": 1,
            "text": "If someone reads books and is curious, then they can make discoveries.",
            "fol": "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((reads_books(x) \u2227 is_curious(x)) \u2192 makes_discoveries(x))"
        },
        {
            "id": 0,
            "text": "Every human either has knowledge or is curious (or both).",
            "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
            "str_fol": "\u2200x (has_knowledge(x) \u2228 is_curious(x))"
        }
    ],
    "context_fol": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))\np_8(Julia) \u2192 p_10(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\n\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))\n\u2200x (p_5(x) \u2228 p_6(x))",
    "conclusion": {
        "id": 11,
        "subject": "Julia",
        "text": "Julia has knowledge.",
        "fol": "p_5(Julia)",
        "str_fol": "has_knowledge(Julia)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Julia)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Julia",
                    "text": "Julia does not seek answers.",
                    "fol": "\u00acp_3(Julia)",
                    "str_fol": "\u00acseeks_answers(Julia)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Julia",
                    "text": "Julia is not intelligent.",
                    "fol": "\u00acp_4(Julia)",
                    "str_fol": "\u00acis_intelligent(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                    "fol": "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                    "str_fol": "(seeks_answers(Julia) \u2295 asks_questions(Julia)) \u2192 is_intelligent(Julia)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Julia",
                "text": "Julia does not ask questions.",
                "fol": "\u00acp_11(Julia)",
                "str_fol": "\u00acasks_questions(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Julia",
                    "text": "Julia does not ask questions.",
                    "fol": "\u00acp_11(Julia)",
                    "str_fol": "\u00acasks_questions(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone is either inquisitive or asks questions.",
                    "fol": "\u2200x (p_9(x) \u2228 p_11(x))",
                    "str_fol": "\u2200x (is_inquisitive(x) \u2228 asks_questions(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Julia",
                "text": "Julia is inquisitive.",
                "fol": "p_9(Julia)",
                "str_fol": "is_inquisitive(Julia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Julia",
                    "text": "Julia cannot solve problems.",
                    "fol": "\u00acp_1(Julia)",
                    "str_fol": "\u00acsolve_problems(Julia)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Julia",
                    "text": "Julia publishes papers.",
                    "fol": "p_2(Julia)",
                    "str_fol": "publish_papers(Julia)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone is an expert, then they can solve problems and publish papers.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
                    "str_fol": "\u2200x (is_expert(x) \u2192 (solve_problems(x) \u2227 publish_papers(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Julia",
                "text": "Julia is not an expert.",
                "fol": "\u00acp_10(Julia)",
                "str_fol": "\u00acis_expert(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Julia",
                    "text": "Julia is not an expert.",
                    "fol": "\u00acp_10(Julia)",
                    "str_fol": "\u00acis_expert(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Julia makes discoveries, then she is an expert.",
                    "fol": "p_8(Julia) \u2192 p_10(Julia)",
                    "str_fol": "makes_discoveries(Julia) \u2192 is_expert(Julia)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Julia",
                "text": "Julia does not make discoveries.",
                "fol": "\u00acp_8(Julia)",
                "str_fol": "\u00acmakes_discoveries(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Julia",
                    "text": "Julia is inquisitive.",
                    "fol": "p_9(Julia)",
                    "str_fol": "is_inquisitive(Julia)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Julia",
                    "text": "Julia does not conduct research.",
                    "fol": "\u00acp_0(Julia)",
                    "str_fol": "\u00acconducts_research(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who is inquisitive either reads books or conducts research.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                    "str_fol": "\u2200x (is_inquisitive(x) \u2192 (reads_books(x) \u2228 conducts_research(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Julia",
                "text": "Julia reads books.",
                "fol": "p_7(Julia)",
                "str_fol": "reads_books(Julia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Julia",
                    "text": "Julia reads books.",
                    "fol": "p_7(Julia)",
                    "str_fol": "reads_books(Julia)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Julia",
                    "text": "Julia does not make discoveries.",
                    "fol": "\u00acp_8(Julia)",
                    "str_fol": "\u00acmakes_discoveries(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone reads books and is curious, then they can make discoveries.",
                    "fol": "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((reads_books(x) \u2227 is_curious(x)) \u2192 makes_discoveries(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Julia",
                "text": "Julia is not curious.",
                "fol": "\u00acp_6(Julia)",
                "str_fol": "\u00acis_curious(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Julia",
                    "text": "Julia is not curious.",
                    "fol": "\u00acp_6(Julia)",
                    "str_fol": "\u00acis_curious(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Every human either has knowledge or is curious (or both).",
                    "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
                    "str_fol": "\u2200x (has_knowledge(x) \u2228 is_curious(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Julia",
                "text": "Julia has knowledge.",
                "fol": "p_5(Julia)",
                "str_fol": "has_knowledge(Julia)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_3(Julia) <-> p_11(Julia)) -> p_4(Julia).  [assumption].\n2 (all x (p_9(x) | p_11(x))).  [assumption].\n3 (all x (p_10(x) -> p_1(x) & p_2(x))).  [assumption].\n4 p_8(Julia) -> p_10(Julia).  [assumption].\n5 (all x (p_9(x) -> p_7(x) | p_0(x))).  [assumption].\n6 (all x (p_7(x) & p_6(x) -> p_8(x))).  [assumption].\n7 (all x (p_5(x) | p_6(x))).  [assumption].\n8 p_5(Julia).  [goal].\n9 p_3(Julia) | -p_11(Julia) | p_4(Julia).  [clausify(1)].\n10 -p_3(Julia).  [assumption].\n12 -p_11(Julia) | p_4(Julia).  [resolve(9,a,10,a)].\n13 -p_4(Julia).  [assumption].\n14 -p_10(x) | p_1(x).  [clausify(3)].\n15 -p_1(Julia).  [assumption].\n16 -p_9(x) | p_7(x) | p_0(x).  [clausify(5)].\n17 -p_0(Julia).  [assumption].\n18 -p_9(Julia) | p_7(Julia).  [resolve(16,c,17,a)].\n19 p_9(x) | p_11(x).  [clausify(2)].\n20 -p_7(x) | -p_6(x) | p_8(x).  [clausify(6)].\n21 -p_8(Julia) | p_10(Julia).  [clausify(4)].\n22 -p_5(Julia).  [deny(8)].\n23 p_5(x) | p_6(x).  [clausify(7)].\n24 p_7(Julia) | p_11(Julia).  [resolve(18,a,19,a)].\n25 -p_11(Julia).  [resolve(12,b,13,a)].\n26 -p_7(Julia) | -p_6(Julia) | p_10(Julia).  [resolve(20,c,21,a)].\n27 -p_10(Julia).  [resolve(14,b,15,a)].\n28 -p_7(Julia) | -p_6(Julia).  [resolve(26,c,27,a)].\n29 p_6(Julia).  [resolve(22,a,23,a)].\n30 -p_7(Julia).  [resolve(28,b,29,a)].\n31 p_7(Julia).  [resolve(24,b,25,a)].\n32 $F.  [resolve(30,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))\n\u00acp_6(Julia)\n\u2200x (p_5(x) \u2228 p_6(x))\np_5(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "(all x (p_9(x) | p_11(x)))",
                    "(all x (-p_10(x) | (p_1(x) & p_2(x))))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "(all x (p_9(x) -> (p_7(x) | p_0(x))))",
                    "p_7(Julia)",
                    "(all x ((p_7(x) & p_6(x)) -> p_8(x)))",
                    "-p_6(Julia)",
                    "(all x (p_5(x) | p_6(x)))",
                    "p_5(Julia)"
                ],
                "formulas(goals)": [
                    "p_5(Julia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Julia)",
                    "p_9(Julia)",
                    "\u00acp_10(Julia)",
                    "\u00acp_8(Julia)",
                    "p_7(Julia)",
                    "\u00acp_6(Julia)",
                    "p_5(Julia)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                    "\u00acp_8(Julia) \u2228 p_10(Julia)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Julia)\np_6(Julia) \u2192 \u00acp_5(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia).",
                    "-p_4(Julia).",
                    "-p_1(Julia).",
                    "p_2(Julia).",
                    "-p_0(Julia).",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia).",
                    "-p_11(Julia).",
                    "p_9(Julia).",
                    "all x (p_9(x) | p_11(x)).",
                    "all x (-p_10(x) | (p_1(x) & p_2(x))).",
                    "-p_10(Julia).",
                    "-p_8(Julia) | p_10(Julia).",
                    "-p_8(Julia).",
                    "all x (p_9(x) -> (p_7(x) | p_0(x))).",
                    "p_7(Julia).",
                    "all x ((p_7(x) & p_6(x)) -> p_8(x)).",
                    "all x (p_5(x) | p_6(x)).",
                    "p_6(Julia).",
                    "p_6(Julia) -> -p_5(Julia)."
                ],
                "formulas(goals)": [
                    "-p_5(Julia)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Julia)",
                    "\u00acp_6(Julia)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Julia)"
                ],
                "added_rules": [
                    "p_6(Julia) \u2192 \u00acp_5(Julia)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x ((p_7(x) \u2227 p_6(x) \u2227 p_5(x)) \u2192 p_8(x))\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Julia)\np_6(Julia) \u2192 \u00acp_5(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x ((p_7(x) & p_6(x) & p_5(x)) -> p_8(x))",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_6(Julia) -> -p_5(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_7(x) \u2227 p_6(x) \u2227 p_5(x)) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Julia)\np_6(Julia) \u2192 p_5(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_6(Julia) -> p_5(Julia)"
                ],
                "formulas(goals)": [
                    "p_5(Julia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Julia) \u2192 \u00acp_5(Julia)",
                    "\u2200x ((p_7(x) \u2227 p_6(x) \u2227 p_5(x)) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Julia) \u2192 p_5(Julia)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Julia)\np_7(Julia) \u2192 \u00acp_5(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_7(Julia) -> -p_5(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Julia) \u2192 p_5(Julia)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Julia) \u2192 \u00acp_5(Julia)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n((p_3(Julia) \u2228 p_11(Julia)) \u2227 \u00ac(p_3(Julia) \u2227 p_11(Julia))) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Julia)\np_7(Julia) \u2192 \u00acp_5(Julia)\np_5(Julia) \u2192 \u00acp_7(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "((p_3(Julia) | p_11(Julia)) & -(p_3(Julia) & p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_7(Julia) -> -p_5(Julia)",
                    "p_5(Julia) -> -p_7(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)"
                ],
                "added_facts": [],
                "added_rules": [
                    "((p_3(Julia) \u2228 p_11(Julia)) \u2227 \u00ac(p_3(Julia) \u2227 p_11(Julia))) \u2192 p_4(Julia)",
                    "p_5(Julia) \u2192 \u00acp_7(Julia)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Julia)\n\u00acp_4(Julia)\n\u00acp_1(Julia)\np_2(Julia)\n\u00acp_0(Julia)\n((p_3(Julia) \u2228 p_11(Julia)) \u2227 \u00ac(p_3(Julia) \u2227 p_11(Julia))) \u2192 p_4(Julia)\n\u00acp_11(Julia)\np_9(Julia)\n\u2200x (p_9(x) \u2228 p_11(x))\n\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))\n\u00acp_10(Julia)\n\u00acp_8(Julia) \u2228 p_10(Julia)\n\u00acp_8(Julia)\n\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))\np_7(Julia)\n\u2200x (p_5(x) \u2228 p_6(x))\np_6(Julia)\np_7(Julia) \u2192 \u00acp_5(Julia)\np_5(Julia) \u2192 \u00acp_7(Julia)\np_7(Julia) \u2228 \u00acp_7(Julia)\n\u2200x (\u00acp_11(x) \u2192 p_9(x))\n\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))\np_7(Julia) \u2228 p_0(Julia)\n\u00acp_3(Julia) \u2227 \u00acp_11(Julia)\np_9(Julia) \u2192 p_9(Julia)",
            "Initial Goal": "p_5(Julia)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "((p_3(Julia) | p_11(Julia)) & -(p_3(Julia) & p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_7(Julia) -> -p_5(Julia)",
                    "p_5(Julia) -> -p_7(Julia)",
                    "p_7(Julia) | -p_7(Julia)",
                    "all x (-p_11(x) -> p_9(x))",
                    "all x (p_10(x) -> (p_1(x) & p_2(x)))",
                    "p_7(Julia) | p_0(Julia)",
                    "-p_3(Julia) & -p_11(Julia)",
                    "p_9(Julia) -> p_9(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Julia) \u2228 \u00acp_7(Julia)",
                    "p_7(Julia) \u2228 p_0(Julia)",
                    "\u00acp_3(Julia) \u2227 \u00acp_11(Julia)",
                    "p_9(Julia) \u2192 p_9(Julia)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_11(x) \u2192 p_9(x))",
                    "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))"
                ]
            }
        }
    ]
}