{
    "background_story": "Sloan was a demigod, son of the Greek god Aeolus, keeper of the winds. Inheriting his father's powers, Sloan could control the breezes and gales with a mere thought. He used his abilities to aid sailors and ships, ensuring safe passages across the treacherous seas. As the guardian of the winds, Sloan was revered by the people of the coastal towns, who would often call upon him to calm the storms or bring gentle rains to their parched fields. With his wings as swift as the zephyr, Sloan would soar through the skies, his presence a symbol of hope and protection for those who lived and worked under the open sky.",
    "predicates": [
        {
            "id": 0,
            "name": "control_the_winds"
        },
        {
            "id": 1,
            "name": "son_of_god"
        },
        {
            "id": 2,
            "name": "calm_storms"
        },
        {
            "id": 3,
            "name": "rule_seas"
        },
        {
            "id": 4,
            "name": "mortal_hero"
        },
        {
            "id": 5,
            "name": "help_humans"
        },
        {
            "id": 6,
            "name": "soar_skies"
        },
        {
            "id": 7,
            "name": "protect_towns"
        },
        {
            "id": 8,
            "name": "aid_sailors"
        },
        {
            "id": 9,
            "name": "has_powers"
        },
        {
            "id": 10,
            "name": "is_demigod"
        },
        {
            "id": 11,
            "name": "guard_heaven"
        },
        {
            "id": 12,
            "name": "divine_origin"
        },
        {
            "id": 13,
            "name": "have_wings"
        },
        {
            "id": 14,
            "name": "master_elements"
        },
        {
            "id": 15,
            "name": "bring_rain"
        },
        {
            "id": 16,
            "name": "serve_others"
        },
        {
            "id": 17,
            "name": "bring_prosperity"
        },
        {
            "id": 18,
            "name": "is_legendary"
        },
        {
            "id": 19,
            "name": "heal_land"
        },
        {
            "id": 20,
            "name": "born_noble"
        },
        {
            "id": 21,
            "name": "inherit_godly"
        },
        {
            "id": 22,
            "name": "angelic_blood"
        },
        {
            "id": 23,
            "name": "mortal_form"
        },
        {
            "id": 24,
            "name": "heal_wounds"
        }
    ],
    "subject_name": "Sloan",
    "subject_category": "mythical figure",
    "keyword": "aeolus",
    "all_facts": [
        {
            "id": 0,
            "subject": "Sloan",
            "text": "Sloan cannot control the winds.",
            "fol": "\u00acp_0(Sloan)",
            "str_fol": "\u00accontrol_the_winds(Sloan)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Sloan",
            "text": "Sloan is a son of a god.",
            "fol": "p_1(Sloan)",
            "str_fol": "son_of_god(Sloan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Sloan",
            "text": "Sloan does not calm storms.",
            "fol": "\u00acp_2(Sloan)",
            "str_fol": "\u00accalm_storms(Sloan)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Sloan",
            "text": "Sloan does not rule the seas.",
            "fol": "\u00acp_3(Sloan)",
            "str_fol": "\u00acrule_seas(Sloan)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Sloan",
            "text": "Sloan is a mortal hero.",
            "fol": "p_4(Sloan)",
            "str_fol": "mortal_hero(Sloan)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Sloan",
            "text": "Sloan helps humans.",
            "fol": "p_5(Sloan)",
            "str_fol": "help_humans(Sloan)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Sloan",
            "text": "Sloan soars through the skies.",
            "fol": "p_6(Sloan)",
            "str_fol": "soar_skies(Sloan)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Sloan",
            "text": "Sloan has a divine origin.",
            "fol": "p_12(Sloan)",
            "str_fol": "divine_origin(Sloan)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Sloan",
            "text": "Sloan is not a guardian of heaven.",
            "fol": "\u00acp_11(Sloan)",
            "str_fol": "\u00acguard_heaven(Sloan)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Sloan",
            "text": "Sloan is a demigod.",
            "fol": "p_10(Sloan)",
            "str_fol": "is_demigod(Sloan)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Sloan",
            "text": "Sloan has powers.",
            "fol": "p_9(Sloan)",
            "str_fol": "has_powers(Sloan)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Sloan",
            "text": "Sloan protects towns.",
            "fol": "p_7(Sloan)",
            "str_fol": "protect_towns(Sloan)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Sloan",
            "text": "Sloan does not aid sailors.",
            "fol": "\u00acp_8(Sloan)",
            "str_fol": "\u00acaid_sailors(Sloan)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Sloan",
            "text": "Sloan helps humans.",
            "fol": "p_5(Sloan)",
            "str_fol": "help_humans(Sloan)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Sloan",
            "text": "Sloan soars through the skies.",
            "fol": "p_6(Sloan)",
            "str_fol": "soar_skies(Sloan)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Sloan",
            "text": "Sloan is a mortal hero.",
            "fol": "p_4(Sloan)",
            "str_fol": "mortal_hero(Sloan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Sloan",
            "text": "Sloan is a son of a god.",
            "fol": "p_1(Sloan)",
            "str_fol": "son_of_god(Sloan)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Sloan",
            "text": "Sloan does not rule the seas.",
            "fol": "\u00acp_3(Sloan)",
            "str_fol": "\u00acrule_seas(Sloan)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Sloan",
            "text": "Sloan does not calm storms.",
            "fol": "\u00acp_2(Sloan)",
            "str_fol": "\u00accalm_storms(Sloan)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Sloan",
            "text": "Sloan cannot control the winds.",
            "fol": "\u00acp_0(Sloan)",
            "str_fol": "\u00accontrol_the_winds(Sloan)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Sloan helps humans, then he has a divine origin and soars through the skies.",
            "fol": "p_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))",
            "str_fol": "help_humans(Sloan) \u2192 (divine_origin(Sloan) \u2227 soar_skies(Sloan))"
        },
        {
            "id": 4,
            "text": "If Sloan has a divine origin, then he is either a mortal hero or a guardian of heaven, but not both.",
            "fol": "p_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))",
            "str_fol": "divine_origin(Sloan) \u2192 (mortal_hero(Sloan) \u2295 guard_heaven(Sloan))"
        },
        {
            "id": 3,
            "text": "If Sloan is a son of a god, then he is either a demigod or a guardian of heaven, but not both.",
            "fol": "p_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))",
            "str_fol": "son_of_god(Sloan) \u2192 (is_demigod(Sloan) \u2295 guard_heaven(Sloan))"
        },
        {
            "id": 2,
            "text": "If Sloan is a demigod, then he either rules the seas or has powers, but not both.",
            "fol": "p_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))",
            "str_fol": "is_demigod(Sloan) \u2192 (rule_seas(Sloan) \u2295 has_powers(Sloan))"
        },
        {
            "id": 1,
            "text": "If Sloan has powers, then he either protects towns or calms storms, but not both.",
            "fol": "p_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))",
            "str_fol": "has_powers(Sloan) \u2192 (protect_towns(Sloan) \u2295 calm_storms(Sloan))"
        },
        {
            "id": 0,
            "text": "Sloan either protects towns or aids sailors, but not both.",
            "fol": "p_7(Sloan) \u2295 p_8(Sloan)",
            "str_fol": "protect_towns(Sloan) \u2295 aid_sailors(Sloan)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Sloan",
            "text": "Sloan helps humans.",
            "fol": "p_5(Sloan)",
            "str_fol": "help_humans(Sloan)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Sloan",
            "text": "Sloan soars through the skies.",
            "fol": "p_6(Sloan)",
            "str_fol": "soar_skies(Sloan)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Sloan",
            "text": "Sloan is a mortal hero.",
            "fol": "p_4(Sloan)",
            "str_fol": "mortal_hero(Sloan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Sloan",
            "text": "Sloan is a son of a god.",
            "fol": "p_1(Sloan)",
            "str_fol": "son_of_god(Sloan)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Sloan",
            "text": "Sloan does not rule the seas.",
            "fol": "\u00acp_3(Sloan)",
            "str_fol": "\u00acrule_seas(Sloan)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Sloan",
            "text": "Sloan does not calm storms.",
            "fol": "\u00acp_2(Sloan)",
            "str_fol": "\u00accalm_storms(Sloan)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Sloan",
            "text": "Sloan cannot control the winds.",
            "fol": "\u00acp_0(Sloan)",
            "str_fol": "\u00accontrol_the_winds(Sloan)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Sloan helps humans, then he has a divine origin and soars through the skies.",
            "fol": "p_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))",
            "str_fol": "help_humans(Sloan) \u2192 (divine_origin(Sloan) \u2227 soar_skies(Sloan))"
        },
        {
            "id": 4,
            "text": "If Sloan has a divine origin, then he is either a mortal hero or a guardian of heaven, but not both.",
            "fol": "p_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))",
            "str_fol": "divine_origin(Sloan) \u2192 (mortal_hero(Sloan) \u2295 guard_heaven(Sloan))"
        },
        {
            "id": 3,
            "text": "If Sloan is a son of a god, then he is either a demigod or a guardian of heaven, but not both.",
            "fol": "p_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))",
            "str_fol": "son_of_god(Sloan) \u2192 (is_demigod(Sloan) \u2295 guard_heaven(Sloan))"
        },
        {
            "id": 2,
            "text": "If Sloan is a demigod, then he either rules the seas or has powers, but not both.",
            "fol": "p_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))",
            "str_fol": "is_demigod(Sloan) \u2192 (rule_seas(Sloan) \u2295 has_powers(Sloan))"
        },
        {
            "id": 1,
            "text": "If Sloan has powers, then he either protects towns or calms storms, but not both.",
            "fol": "p_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))",
            "str_fol": "has_powers(Sloan) \u2192 (protect_towns(Sloan) \u2295 calm_storms(Sloan))"
        },
        {
            "id": 0,
            "text": "Sloan either protects towns or aids sailors, but not both.",
            "fol": "p_7(Sloan) \u2295 p_8(Sloan)",
            "str_fol": "protect_towns(Sloan) \u2295 aid_sailors(Sloan)"
        }
    ],
    "context_fol": "p_5(Sloan)\np_6(Sloan)\np_4(Sloan)\np_1(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))\np_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))\np_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))\np_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))\np_7(Sloan) \u2295 p_8(Sloan)",
    "conclusion": {
        "id": 12,
        "text": "If Sloan can control the winds or has wings, then he aids sailors.",
        "fol": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
        "str_fol": "(control_the_winds(Sloan) \u2228 have_wings(Sloan)) \u2192 aid_sailors(Sloan)"
    },
    "initial_answer": "Uncertain",
    "initial_goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Sloan",
                    "text": "Sloan helps humans.",
                    "fol": "p_5(Sloan)",
                    "str_fol": "help_humans(Sloan)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Sloan",
                    "text": "Sloan soars through the skies.",
                    "fol": "p_6(Sloan)",
                    "str_fol": "soar_skies(Sloan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Sloan helps humans, then he has a divine origin and soars through the skies.",
                    "fol": "p_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))",
                    "str_fol": "help_humans(Sloan) \u2192 (divine_origin(Sloan) \u2227 soar_skies(Sloan))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Sloan",
                "text": "Sloan has a divine origin.",
                "fol": "p_12(Sloan)",
                "str_fol": "divine_origin(Sloan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Sloan",
                    "text": "Sloan has a divine origin.",
                    "fol": "p_12(Sloan)",
                    "str_fol": "divine_origin(Sloan)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Sloan",
                    "text": "Sloan is a mortal hero.",
                    "fol": "p_4(Sloan)",
                    "str_fol": "mortal_hero(Sloan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Sloan has a divine origin, then he is either a mortal hero or a guardian of heaven, but not both.",
                    "fol": "p_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))",
                    "str_fol": "divine_origin(Sloan) \u2192 (mortal_hero(Sloan) \u2295 guard_heaven(Sloan))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Sloan",
                "text": "Sloan is not a guardian of heaven.",
                "fol": "\u00acp_11(Sloan)",
                "str_fol": "\u00acguard_heaven(Sloan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Sloan",
                    "text": "Sloan is a son of a god.",
                    "fol": "p_1(Sloan)",
                    "str_fol": "son_of_god(Sloan)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Sloan",
                    "text": "Sloan is not a guardian of heaven.",
                    "fol": "\u00acp_11(Sloan)",
                    "str_fol": "\u00acguard_heaven(Sloan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Sloan is a son of a god, then he is either a demigod or a guardian of heaven, but not both.",
                    "fol": "p_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))",
                    "str_fol": "son_of_god(Sloan) \u2192 (is_demigod(Sloan) \u2295 guard_heaven(Sloan))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Sloan",
                "text": "Sloan is a demigod.",
                "fol": "p_10(Sloan)",
                "str_fol": "is_demigod(Sloan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Sloan",
                    "text": "Sloan is a demigod.",
                    "fol": "p_10(Sloan)",
                    "str_fol": "is_demigod(Sloan)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Sloan",
                    "text": "Sloan does not rule the seas.",
                    "fol": "\u00acp_3(Sloan)",
                    "str_fol": "\u00acrule_seas(Sloan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Sloan is a demigod, then he either rules the seas or has powers, but not both.",
                    "fol": "p_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))",
                    "str_fol": "is_demigod(Sloan) \u2192 (rule_seas(Sloan) \u2295 has_powers(Sloan))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Sloan",
                "text": "Sloan has powers.",
                "fol": "p_9(Sloan)",
                "str_fol": "has_powers(Sloan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Sloan",
                    "text": "Sloan has powers.",
                    "fol": "p_9(Sloan)",
                    "str_fol": "has_powers(Sloan)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Sloan",
                    "text": "Sloan does not calm storms.",
                    "fol": "\u00acp_2(Sloan)",
                    "str_fol": "\u00accalm_storms(Sloan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Sloan has powers, then he either protects towns or calms storms, but not both.",
                    "fol": "p_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))",
                    "str_fol": "has_powers(Sloan) \u2192 (protect_towns(Sloan) \u2295 calm_storms(Sloan))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Sloan",
                "text": "Sloan protects towns.",
                "fol": "p_7(Sloan)",
                "str_fol": "protect_towns(Sloan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Sloan",
                    "text": "Sloan protects towns.",
                    "fol": "p_7(Sloan)",
                    "str_fol": "protect_towns(Sloan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Sloan either protects towns or aids sailors, but not both.",
                    "fol": "p_7(Sloan) \u2295 p_8(Sloan)",
                    "str_fol": "protect_towns(Sloan) \u2295 aid_sailors(Sloan)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Sloan",
                "text": "Sloan does not aid sailors.",
                "fol": "\u00acp_8(Sloan)",
                "str_fol": "\u00acaid_sailors(Sloan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Sloan",
                    "text": "Sloan cannot control the winds.",
                    "fol": "\u00acp_0(Sloan)",
                    "str_fol": "\u00accontrol_the_winds(Sloan)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Sloan",
                    "text": "Sloan does not aid sailors.",
                    "fol": "\u00acp_8(Sloan)",
                    "str_fol": "\u00acaid_sailors(Sloan)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": null
        }
    ],
    "proof_trace": null,
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "UNCERTAIN",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\np_4(Sloan)\np_1(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))\np_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))\np_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))\np_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))\np_7(Sloan) \u2295 p_8(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan)",
                    "p_6(Sloan)",
                    "p_4(Sloan)",
                    "p_1(Sloan)",
                    "-p_3(Sloan)",
                    "-p_2(Sloan)",
                    "-p_0(Sloan)",
                    "-p_13(Sloan)",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan))",
                    "p_12(Sloan) -> (-(p_4(Sloan) <-> p_11(Sloan)))",
                    "p_1(Sloan) -> (-(p_10(Sloan) <-> p_11(Sloan)))",
                    "p_10(Sloan) -> (-(p_3(Sloan) <-> p_9(Sloan)))",
                    "p_9(Sloan) -> (-(p_7(Sloan) <-> p_2(Sloan)))",
                    "-(p_7(Sloan) <-> p_8(Sloan))"
                ],
                "formulas(goals)": [
                    "(p_0(Sloan) | p_13(Sloan)) -> p_8(Sloan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_13(Sloan)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_1(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))\np_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))\np_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))\np_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))\np_7(Sloan) \u2295 p_8(Sloan)\np_12(Sloan) \u2192 p_13(Sloan)\np_12(Sloan) \u2192 \u00acp_8(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan)",
                    "p_6(Sloan)",
                    "-p_3(Sloan)",
                    "-p_2(Sloan)",
                    "-p_0(Sloan)",
                    "p_1(Sloan)",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan))",
                    "p_12(Sloan) -> (-(p_4(Sloan) <-> p_11(Sloan)))",
                    "p_1(Sloan) -> (-(p_10(Sloan) <-> p_11(Sloan)))",
                    "p_10(Sloan) -> (-(p_3(Sloan) <-> p_9(Sloan)))",
                    "p_9(Sloan) -> (-(p_7(Sloan) <-> p_2(Sloan)))",
                    "(-(p_7(Sloan) <-> p_8(Sloan)))",
                    "p_12(Sloan) -> p_13(Sloan)",
                    "p_12(Sloan) -> -p_8(Sloan)"
                ],
                "formulas(goals)": [
                    "-((p_0(Sloan) | p_13(Sloan)) -> p_8(Sloan))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Sloan)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_12(Sloan) \u2192 p_13(Sloan)",
                    "p_12(Sloan) \u2192 \u00acp_8(Sloan)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_1(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))\np_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))\np_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))\np_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))\np_7(Sloan) \u2295 p_8(Sloan)\np_12(Sloan) \u2192 p_13(Sloan)\np_12(Sloan) \u2192 \u00acp_8(Sloan)\np_5(Sloan) \u2192 p_13(Sloan)\np_8(Sloan) \u2192 \u00acp_12(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan).",
                    "p_6(Sloan).",
                    "-p_3(Sloan).",
                    "-p_2(Sloan).",
                    "-p_0(Sloan).",
                    "p_1(Sloan).",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan)).",
                    "p_12(Sloan) -> (-(p_4(Sloan) <-> p_11(Sloan))).",
                    "p_1(Sloan) -> (-(p_10(Sloan) <-> p_11(Sloan))).",
                    "p_10(Sloan) -> (-(p_3(Sloan) <-> p_9(Sloan))).",
                    "p_9(Sloan) -> (-(p_7(Sloan) <-> p_2(Sloan))).",
                    "-(p_7(Sloan) <-> p_8(Sloan)).",
                    "p_12(Sloan) -> p_13(Sloan).",
                    "p_12(Sloan) -> -p_8(Sloan).",
                    "p_5(Sloan) -> p_13(Sloan).",
                    "p_8(Sloan) -> -p_12(Sloan)."
                ],
                "formulas(goals)": [
                    "(p_0(Sloan) | p_13(Sloan)) & -p_8(Sloan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Sloan) \u2192 p_13(Sloan)",
                    "p_8(Sloan) \u2192 \u00acp_12(Sloan)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_1(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 (p_4(Sloan) \u2295 p_11(Sloan))\np_1(Sloan) \u2192 (p_10(Sloan) \u2295 p_11(Sloan))\np_10(Sloan) \u2192 (p_3(Sloan) \u2295 p_9(Sloan))\np_9(Sloan) \u2192 (p_7(Sloan) \u2295 p_2(Sloan))\np_7(Sloan) \u2295 p_8(Sloan)\np_12(Sloan) \u2192 p_13(Sloan)\np_5(Sloan) \u2192 p_13(Sloan)\n\u00acp_7(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan)",
                    "p_6(Sloan)",
                    "-p_3(Sloan)",
                    "-p_2(Sloan)",
                    "-p_0(Sloan)",
                    "p_1(Sloan)",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan))",
                    "p_12(Sloan) -> (-(p_4(Sloan) <-> p_11(Sloan)))",
                    "p_1(Sloan) -> (-(p_10(Sloan) <-> p_11(Sloan)))",
                    "p_10(Sloan) -> (-(p_3(Sloan) <-> p_9(Sloan)))",
                    "p_9(Sloan) -> (-(p_7(Sloan) <-> p_2(Sloan)))",
                    "-(p_7(Sloan) <-> p_8(Sloan))",
                    "p_12(Sloan) -> p_13(Sloan)",
                    "p_5(Sloan) -> p_13(Sloan)",
                    "-p_7(Sloan)"
                ],
                "formulas(goals)": [
                    "(p_0(Sloan) | p_13(Sloan)) -> p_8(Sloan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_12(Sloan) \u2192 \u00acp_8(Sloan)"
                ],
                "added_facts": [
                    "\u00acp_7(Sloan)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_1(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 ((p_4(Sloan) \u2228 p_11(Sloan)) \u2227 \u00ac(p_4(Sloan) \u2227 p_11(Sloan)))\np_1(Sloan) \u2192 ((p_10(Sloan) \u2228 p_11(Sloan)) \u2227 \u00ac(p_10(Sloan) \u2227 p_11(Sloan)))\np_10(Sloan) \u2192 ((p_3(Sloan) \u2228 p_9(Sloan)) \u2227 \u00ac(p_3(Sloan) \u2227 p_9(Sloan)))\np_9(Sloan) \u2192 ((p_7(Sloan) \u2228 p_2(Sloan)) \u2227 \u00ac(p_7(Sloan) \u2227 p_2(Sloan)))\n(p_7(Sloan) \u2228 p_8(Sloan)) \u2227 \u00ac(p_7(Sloan) \u2227 p_8(Sloan))\np_12(Sloan) \u2192 p_13(Sloan)\np_5(Sloan) \u2192 p_13(Sloan)\n\u00acp_7(Sloan)\n\u00acp_9(Sloan)\n\u00acp_10(Sloan)\np_11(Sloan)\n\u00acp_4(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan)",
                    "p_6(Sloan)",
                    "-p_3(Sloan)",
                    "-p_2(Sloan)",
                    "-p_0(Sloan)",
                    "p_1(Sloan)",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan))",
                    "p_12(Sloan) -> ((p_4(Sloan) | p_11(Sloan)) & -(p_4(Sloan) & p_11(Sloan)))",
                    "p_1(Sloan) -> ((p_10(Sloan) | p_11(Sloan)) & -(p_10(Sloan) & p_11(Sloan)))",
                    "p_10(Sloan) -> ( (p_3(Sloan) | p_9(Sloan)) & -(p_3(Sloan) & p_9(Sloan)) )",
                    "p_9(Sloan) -> ( (p_7(Sloan) | p_2(Sloan)) & -(p_7(Sloan) & p_2(Sloan)) )",
                    "(p_7(Sloan) | p_8(Sloan)) & -(p_7(Sloan) & p_8(Sloan))",
                    "p_12(Sloan) -> p_13(Sloan)",
                    "p_5(Sloan) -> p_13(Sloan)",
                    "-p_7(Sloan)",
                    "-p_9(Sloan)",
                    "-p_10(Sloan)",
                    "p_11(Sloan)",
                    "-p_4(Sloan)"
                ],
                "formulas(goals)": [
                    "(p_0(Sloan) | p_13(Sloan)) -> p_8(Sloan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_9(Sloan)",
                    "\u00acp_10(Sloan)",
                    "p_11(Sloan)",
                    "\u00acp_4(Sloan)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_1(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 ((p_4(Sloan) \u2228 p_11(Sloan)) \u2227 \u00ac(p_4(Sloan) \u2227 p_11(Sloan)))\np_1(Sloan) \u2192 ((p_10(Sloan) \u2228 p_11(Sloan)) \u2227 \u00ac(p_10(Sloan) \u2227 p_11(Sloan)))\np_10(Sloan) \u2192 ((p_3(Sloan) \u2228 p_9(Sloan)) \u2227 \u00ac(p_3(Sloan) \u2227 p_9(Sloan)))\np_9(Sloan) \u2192 ((p_7(Sloan) \u2228 p_2(Sloan)) \u2227 \u00ac(p_7(Sloan) \u2227 p_2(Sloan)))\n(p_7(Sloan) \u2228 p_8(Sloan)) \u2227 \u00ac(p_7(Sloan) \u2227 p_8(Sloan))\np_12(Sloan) \u2192 p_13(Sloan)\np_5(Sloan) \u2192 p_13(Sloan)\n\u00acp_7(Sloan)\n\u00acp_9(Sloan)\n\u00acp_10(Sloan)\np_11(Sloan)\n\u00acp_4(Sloan)\n(p_12(Sloan) \u2228 p_5(Sloan)) \u2192 p_13(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan)",
                    "p_6(Sloan)",
                    "-p_3(Sloan)",
                    "-p_2(Sloan)",
                    "-p_0(Sloan)",
                    "p_1(Sloan)",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan))",
                    "p_12(Sloan) -> ((p_4(Sloan) | p_11(Sloan)) & (- (p_4(Sloan) & p_11(Sloan))))",
                    "p_1(Sloan) -> ((p_10(Sloan) | p_11(Sloan)) & (- (p_10(Sloan) & p_11(Sloan))))",
                    "p_10(Sloan) -> ((p_3(Sloan) | p_9(Sloan)) & (- (p_3(Sloan) & p_9(Sloan))))",
                    "p_9(Sloan) -> ((p_7(Sloan) | p_2(Sloan)) & (- (p_7(Sloan) & p_2(Sloan))))",
                    "(p_7(Sloan) | p_8(Sloan)) & (- (p_7(Sloan) & p_8(Sloan)))",
                    "p_12(Sloan) -> p_13(Sloan)",
                    "p_5(Sloan) -> p_13(Sloan)",
                    "-p_7(Sloan)",
                    "-p_9(Sloan)",
                    "-p_10(Sloan)",
                    "p_11(Sloan)",
                    "-p_4(Sloan)",
                    "(p_12(Sloan) | p_5(Sloan)) -> p_13(Sloan)"
                ],
                "formulas(goals)": [
                    "(p_0(Sloan) | p_13(Sloan)) -> p_8(Sloan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_12(Sloan) \u2228 p_5(Sloan)) \u2192 p_13(Sloan)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Sloan)\np_6(Sloan)\n\u00acp_3(Sloan)\n\u00acp_2(Sloan)\n\u00acp_0(Sloan)\np_1(Sloan)\np_5(Sloan) \u2192 (p_12(Sloan) \u2227 p_6(Sloan))\np_12(Sloan) \u2192 ((p_4(Sloan) \u2228 p_11(Sloan)) \u2227 \u00ac(p_4(Sloan) \u2227 p_11(Sloan)))\np_1(Sloan) \u2192 ((p_10(Sloan) \u2228 p_11(Sloan)) \u2227 \u00ac(p_10(Sloan) \u2227 p_11(Sloan)))\np_10(Sloan) \u2192 ((p_3(Sloan) \u2228 p_9(Sloan)) \u2227 \u00ac(p_3(Sloan) \u2227 p_9(Sloan)))\np_9(Sloan) \u2192 ((p_7(Sloan) \u2228 p_2(Sloan)) \u2227 \u00ac(p_7(Sloan) \u2227 p_2(Sloan)))\n(p_7(Sloan) \u2228 p_8(Sloan)) \u2227 \u00ac(p_7(Sloan) \u2227 p_8(Sloan))\np_12(Sloan) \u2192 p_13(Sloan)\n\u00acp_5(Sloan) \u2228 p_13(Sloan)\n\u00acp_7(Sloan)\n\u00acp_9(Sloan)\n\u00acp_10(Sloan)\np_11(Sloan)\n\u00acp_4(Sloan)\n(p_12(Sloan) \u2228 p_5(Sloan)) \u2192 p_13(Sloan)\np_12(Sloan)\np_5(Sloan) \u2192 p_12(Sloan)\np_13(Sloan) \u2192 p_13(Sloan)",
            "Initial Goal": "(p_0(Sloan) \u2228 p_13(Sloan)) \u2192 p_8(Sloan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Sloan).",
                    "p_6(Sloan).",
                    "-p_3(Sloan).",
                    "-p_2(Sloan).",
                    "-p_0(Sloan).",
                    "p_1(Sloan).",
                    "p_5(Sloan) -> (p_12(Sloan) & p_6(Sloan)).",
                    "p_12(Sloan) -> ((p_4(Sloan) | p_11(Sloan)) & -(p_4(Sloan) & p_11(Sloan))).",
                    "p_1(Sloan) -> ((p_10(Sloan) | p_11(Sloan)) & -(p_10(Sloan) & p_11(Sloan))).",
                    "p_10(Sloan) -> ((p_3(Sloan) | p_9(Sloan)) & -(p_3(Sloan) & p_9(Sloan))).",
                    "p_9(Sloan) -> ((p_7(Sloan) | p_2(Sloan)) & -(p_7(Sloan) & p_2(Sloan))).",
                    "(p_7(Sloan) | p_8(Sloan)) & -(p_7(Sloan) & p_8(Sloan)).",
                    "p_12(Sloan) -> p_13(Sloan).",
                    "-p_5(Sloan) | p_13(Sloan).",
                    "-p_7(Sloan).",
                    "-p_9(Sloan).",
                    "-p_10(Sloan).",
                    "p_11(Sloan).",
                    "-p_4(Sloan).",
                    "(p_12(Sloan) | p_5(Sloan)) -> p_13(Sloan).",
                    "p_12(Sloan).",
                    "p_5(Sloan) -> p_12(Sloan).",
                    "p_13(Sloan) -> p_13(Sloan)."
                ],
                "formulas(goals)": [
                    "(p_0(Sloan) | p_13(Sloan)) -> p_8(Sloan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Sloan) \u2192 p_13(Sloan)"
                ],
                "added_facts": [
                    "p_12(Sloan)"
                ],
                "added_rules": [
                    "\u00acp_5(Sloan) \u2228 p_13(Sloan)",
                    "p_5(Sloan) \u2192 p_12(Sloan)",
                    "p_13(Sloan) \u2192 p_13(Sloan)"
                ]
            }
        }
    ]
}