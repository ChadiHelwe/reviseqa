{
    "original_context": [
        "Duncan carves wood.",
        "Duncan tans hides.",
        "Duncan does not dye fabrics.",
        "Duncan does not reuse materials.",
        "Duncan does not value simplicity.",
        "Duncan is not resourceful.",
        "Duncan is an elder.",
        "Duncan loves the outdoors.",
        "Duncan does not protect wildlife.",
        "If Duncan carves wood, then he either makes furniture or tans hides.",
        "If Duncan weaves baskets, then he either makes furniture or dyes fabrics.",
        "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
        "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
        "Duncan is either a hunter or crafts tools, but not both.",
        "If Duncan is a hunter, then he is either an outcast or an elder, but not both.",
        "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
        "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
        "If Duncan either respects nature or harms nature (but not both), then he would be shunned by his community if he harms nature, as his community values living in harmony with the land."
    ],
    "original_context_fol": [
        "p_7(Duncan)",
        "p_8(Duncan)",
        "\u00acp_6(Duncan)",
        "\u00acp_0(Duncan)",
        "\u00acp_5(Duncan)",
        "\u00acp_4(Duncan)",
        "p_3(Duncan)",
        "p_2(Duncan)",
        "\u00acp_1(Duncan)",
        "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
        "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
        "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
        "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
        "p_14(Duncan) \u2295 p_15(Duncan)",
        "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
        "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
        "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
        "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)"
    ],
    "conclusion": "Duncan respects nature.",
    "conclusion_fol": "p_9(Duncan)",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Duncan",
                    "text": "Duncan carves wood.",
                    "fol": "p_7(Duncan)",
                    "str_fol": "carves_wood(Duncan)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Duncan",
                    "text": "Duncan tans hides.",
                    "fol": "p_8(Duncan)",
                    "str_fol": "tans_hides(Duncan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Duncan carves wood, then he either makes furniture or tans hides.",
                    "fol": "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
                    "str_fol": "carves_wood(Duncan) \u2192 (tans_hides(Duncan) \u2295 makes_furniture(Duncan))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Duncan",
                "text": "Duncan does not make furniture.",
                "fol": "\u00acp_17(Duncan)",
                "str_fol": "\u00acmakes_furniture(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Duncan",
                    "text": "Duncan does not make furniture.",
                    "fol": "\u00acp_17(Duncan)",
                    "str_fol": "\u00acmakes_furniture(Duncan)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Duncan",
                    "text": "Duncan does not dye fabrics.",
                    "fol": "\u00acp_6(Duncan)",
                    "str_fol": "\u00acdyes_fabrics(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Duncan weaves baskets, then he either makes furniture or dyes fabrics.",
                    "fol": "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                    "str_fol": "weaves_baskets(Duncan) \u2192 (makes_furniture(Duncan) \u2228 dyes_fabrics(Duncan))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Duncan",
                "text": "Duncan does not weave baskets.",
                "fol": "\u00acp_16(Duncan)",
                "str_fol": "\u00acweaves_baskets(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Duncan",
                    "text": "Duncan does not reuse materials.",
                    "fol": "\u00acp_0(Duncan)",
                    "str_fol": "\u00acreuses_materials(Duncan)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Duncan",
                    "text": "Duncan does not value simplicity.",
                    "fol": "\u00acp_5(Duncan)",
                    "str_fol": "\u00acvalues_simplicity(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
                    "fol": "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
                    "str_fol": "(reuses_materials(Duncan) \u2295 conserves_resources(Duncan)) \u2192 values_simplicity(Duncan)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Duncan",
                "text": "Duncan does not conserve resources.",
                "fol": "\u00acp_13(Duncan)",
                "str_fol": "\u00acconserves_resources(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Duncan",
                    "text": "Duncan does not weave baskets.",
                    "fol": "\u00acp_16(Duncan)",
                    "str_fol": "\u00acweaves_baskets(Duncan)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Duncan",
                    "text": "Duncan is not resourceful.",
                    "fol": "\u00acp_4(Duncan)",
                    "str_fol": "\u00acis_resourceful(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                    "fol": "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                    "str_fol": "(crafts_tools(Duncan) \u2295 weaves_baskets(Duncan)) \u2192 is_resourceful(Duncan)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Duncan",
                "text": "Duncan does not craft tools.",
                "fol": "\u00acp_15(Duncan)",
                "str_fol": "\u00accrafts_tools(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Duncan",
                    "text": "Duncan does not craft tools.",
                    "fol": "\u00acp_15(Duncan)",
                    "str_fol": "\u00accrafts_tools(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Duncan is either a hunter or crafts tools, but not both.",
                    "fol": "p_14(Duncan) \u2295 p_15(Duncan)",
                    "str_fol": "hunter(Duncan) \u2295 crafts_tools(Duncan)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Duncan",
                "text": "Duncan is a hunter.",
                "fol": "p_14(Duncan)",
                "str_fol": "hunter(Duncan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Duncan",
                    "text": "Duncan is a hunter.",
                    "fol": "p_14(Duncan)",
                    "str_fol": "hunter(Duncan)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Duncan",
                    "text": "Duncan is an elder.",
                    "fol": "p_3(Duncan)",
                    "str_fol": "elder(Duncan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Duncan is a hunter, then he is either an outcast or an elder, but not both.",
                    "fol": "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
                    "str_fol": "hunter(Duncan) \u2192 (outcast(Duncan) \u2295 elder(Duncan))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Duncan",
                "text": "Duncan is not an outcast.",
                "fol": "\u00acp_11(Duncan)",
                "str_fol": "\u00acoutcast(Duncan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Duncan",
                    "text": "Duncan loves the outdoors.",
                    "fol": "p_2(Duncan)",
                    "str_fol": "loves_outdoors(Duncan)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Duncan",
                    "text": "Duncan does not conserve resources.",
                    "fol": "\u00acp_13(Duncan)",
                    "str_fol": "\u00acconserves_resources(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                    "fol": "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                    "str_fol": "loves_outdoors(Duncan) \u2192 (conserves_resources(Duncan) \u2228 lives_rurally(Duncan))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Duncan",
                "text": "Duncan lives rurally.",
                "fol": "p_12(Duncan)",
                "str_fol": "lives_rurally(Duncan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Duncan",
                    "text": "Duncan lives rurally.",
                    "fol": "p_12(Duncan)",
                    "str_fol": "lives_rurally(Duncan)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Duncan",
                    "text": "Duncan does not protect wildlife.",
                    "fol": "\u00acp_1(Duncan)",
                    "str_fol": "\u00acprotects_wildlife(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
                    "fol": "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
                    "str_fol": "lives_rurally(Duncan) \u2192 (harm_nature(Duncan) \u2295 protects_wildlife(Duncan))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Duncan",
                "text": "Duncan harms nature.",
                "fol": "p_10(Duncan)",
                "str_fol": "harm_nature(Duncan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 16,
                    "subject": "Duncan",
                    "text": "Duncan harms nature.",
                    "fol": "p_10(Duncan)",
                    "str_fol": "harm_nature(Duncan)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Duncan",
                    "text": "Duncan is not an outcast.",
                    "fol": "\u00acp_11(Duncan)",
                    "str_fol": "\u00acoutcast(Duncan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Duncan either respects nature or harms nature (but not both), then he would be shunned by his community if he harms nature, as his community values living in harmony with the land.",
                    "fol": "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                    "str_fol": "(respect_nature(Duncan) \u2295 harm_nature(Duncan)) \u2192 outcast(Duncan)"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Duncan",
                "text": "Duncan respects nature.",
                "fol": "p_9(Duncan)",
                "str_fol": "respect_nature(Duncan)",
                "negation": false
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then he either makes furniture or tans hides, but not both.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then he is either an outcast or an elder, but not both.",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "\u00acp_1(Duncan)",
                        "nl": "Duncan does not protect wildlife."
                    }
                ],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_1(Duncan)",
                        "nl": "Duncan protects wildlife."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan).",
                    "p_8(Duncan).",
                    "-p_6(Duncan).",
                    "-p_0(Duncan).",
                    "-p_5(Duncan).",
                    "-p_4(Duncan).",
                    "p_3(Duncan).",
                    "p_2(Duncan).",
                    "p_1(Duncan).",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan))).",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan)).",
                    "(-(p_0(Duncan) <-> p_13(Duncan))) -> p_5(Duncan).",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan).",
                    "-(p_14(Duncan) <-> p_15(Duncan)).",
                    "p_14(Duncan) -> (-(p_11(Duncan) <-> p_3(Duncan))).",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan)).",
                    "p_12(Duncan) -> (-(p_10(Duncan) <-> p_1(Duncan))).",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)."
                ],
                "formulas(goals)": [
                    "-p_9(Duncan)."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 \u00ac(p_11(Duncan) \u2295 p_3(Duncan))",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                "p_11(Duncan) \u2192 p_9(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then he either makes furniture or tans hides, but not both.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then it is not the case that he is either an outcast or an elder (but not both).",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast.",
                "If Duncan is an outcast, then he respects nature."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_14(Duncan) \u2192 (p_11(Duncan) \u2295 p_3(Duncan))",
                        "nl": "If Duncan is a hunter, then he is either an outcast or an elder, but not both."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_14(Duncan) \u2192 \u00ac(p_11(Duncan) \u2295 p_3(Duncan))",
                        "nl": "If Duncan is a hunter, then it is not the case that he is either an outcast or an elder (but not both)."
                    },
                    {
                        "fol": "p_11(Duncan) \u2192 p_9(Duncan)",
                        "nl": "If Duncan is an outcast, then he respects nature."
                    }
                ]
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan)))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "(-(p_0(Duncan) <-> p_13(Duncan))) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "-(p_14(Duncan) <-> p_15(Duncan))",
                    "p_14(Duncan) -> -(-(p_11(Duncan) <-> p_3(Duncan)))",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> (-(p_10(Duncan) <-> p_1(Duncan)))",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_11(Duncan) -> p_9(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 3,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 (p_8(Duncan) \u2295 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "p_13(Duncan) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 p_11(Duncan)",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 \u00acp_10(Duncan)",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                "p_11(Duncan) \u2192 p_9(Duncan)",
                "p_12(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then he either makes furniture or tans hides, but not both.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan conserves resources, then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then he is an outcast.",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he does not harm nature.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast.",
                "If Duncan is an outcast, then he respects nature.",
                "Duncan lives rurally."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "(p_0(Duncan) \u2295 p_13(Duncan)) \u2192 p_5(Duncan)",
                        "nl": "If Duncan either reuses materials or conserves resources (but not both), then he values simplicity."
                    },
                    {
                        "fol": "p_14(Duncan) \u2192 \u00ac(p_11(Duncan) \u2295 p_3(Duncan))",
                        "nl": "If Duncan is a hunter, then it is not the case that he is either an outcast or an elder (but not both)."
                    },
                    {
                        "fol": "p_12(Duncan) \u2192 (p_10(Duncan) \u2295 p_1(Duncan))",
                        "nl": "If Duncan lives rurally, then he either harms nature or protects wildlife, but not both."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "p_12(Duncan)",
                        "nl": "Duncan lives rurally."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "p_13(Duncan) \u2192 p_5(Duncan)",
                        "nl": "If Duncan conserves resources, then he values simplicity."
                    },
                    {
                        "fol": "p_14(Duncan) \u2192 p_11(Duncan)",
                        "nl": "If Duncan is a hunter, then he is an outcast."
                    },
                    {
                        "fol": "p_12(Duncan) \u2192 \u00acp_10(Duncan)",
                        "nl": "If Duncan lives rurally, then he does not harm nature."
                    }
                ]
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "-(p_15(Duncan) <-> p_16(Duncan)) -> p_4(Duncan)",
                    "-(p_14(Duncan) <-> p_15(Duncan))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "-(p_9(Duncan) <-> p_10(Duncan)) -> p_11(Duncan)",
                    "p_11(Duncan) -> p_9(Duncan)",
                    "p_12(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "p_13(Duncan) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 p_11(Duncan)",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 \u00acp_10(Duncan)",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                "p_12(Duncan)",
                "p_9(Duncan) \u2192 \u00acp_11(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then it is not the case that he both tans hides and makes furniture or neither tans hides nor makes furniture.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan conserves resources, then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then he is an outcast.",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he does not harm nature.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast.",
                "Duncan lives rurally.",
                "If Duncan respects nature, then he is not an outcast."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_11(Duncan) \u2192 p_9(Duncan)",
                        "nl": "If Duncan is an outcast, then he respects nature."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_9(Duncan) \u2192 \u00acp_11(Duncan)",
                        "nl": "If Duncan respects nature, then he is not an outcast."
                    }
                ]
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan)))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "(-(p_14(Duncan) <-> p_15(Duncan)))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> (-p_10(Duncan))",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_9(Duncan) -> (-p_11(Duncan))"
                ],
                "formulas(goals)": [
                    "-p_9(Duncan)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "p_13(Duncan) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 p_11(Duncan)",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 \u00acp_10(Duncan)",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                "p_12(Duncan)",
                "p_12(Duncan) \u2192 p_9(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then it is not the case that he both tans hides and makes furniture or neither tans hides nor makes furniture.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan conserves resources, then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then he is an outcast.",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he does not harm nature.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast.",
                "Duncan lives rurally.",
                "If Duncan lives rurally, then he respects nature."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_9(Duncan) \u2192 \u00acp_11(Duncan)",
                        "nl": "If Duncan respects nature, then he is not an outcast."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_12(Duncan) \u2192 p_9(Duncan)",
                        "nl": "If Duncan lives rurally, then he respects nature."
                    }
                ]
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "(-(p_14(Duncan) <-> p_15(Duncan)))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_12(Duncan) -> p_9(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "p_13(Duncan) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 p_11(Duncan)",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 \u00acp_10(Duncan)",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                "p_12(Duncan)",
                "p_12(Duncan) \u2192 p_9(Duncan)",
                "p_12(Duncan) \u2192 (\u00acp_10(Duncan) \u2227 p_9(Duncan))",
                "p_12(Duncan) \u2192 p_11(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then it is not the case that he both tans hides and makes furniture or neither tans hides nor makes furniture.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan conserves resources, then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then he is an outcast.",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he does not harm nature.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast.",
                "Duncan lives rurally.",
                "If Duncan lives rurally, then he respects nature.",
                "If Duncan lives rurally, then he does not harm nature and he respects nature.",
                "If Duncan lives rurally, then he is an outcast."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_12(Duncan) \u2192 (\u00acp_10(Duncan) \u2227 p_9(Duncan))",
                        "nl": "If Duncan lives rurally, then he does not harm nature and he respects nature."
                    },
                    {
                        "fol": "p_12(Duncan) \u2192 p_11(Duncan)",
                        "nl": "If Duncan lives rurally, then he is an outcast."
                    }
                ]
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> -(p_8(Duncan) <-> p_17(Duncan))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "-(p_14(Duncan) <-> p_15(Duncan))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_12(Duncan) -> p_9(Duncan)",
                    "p_12(Duncan) -> (-p_10(Duncan) & p_9(Duncan))",
                    "p_12(Duncan) -> p_11(Duncan)"
                ],
                "formulas(goals)": [
                    "p_9(Duncan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 7,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Duncan)",
                "p_8(Duncan)",
                "\u00acp_6(Duncan)",
                "\u00acp_0(Duncan)",
                "\u00acp_5(Duncan)",
                "\u00acp_4(Duncan)",
                "p_3(Duncan)",
                "p_2(Duncan)",
                "p_1(Duncan)",
                "p_7(Duncan) \u2192 \u00ac(p_8(Duncan) \u2194 p_17(Duncan))",
                "p_16(Duncan) \u2192 (p_17(Duncan) \u2228 p_6(Duncan))",
                "p_13(Duncan) \u2192 p_5(Duncan)",
                "(p_15(Duncan) \u2295 p_16(Duncan)) \u2192 p_4(Duncan)",
                "p_14(Duncan) \u2295 p_15(Duncan)",
                "p_14(Duncan) \u2192 p_11(Duncan)",
                "p_2(Duncan) \u2192 (p_13(Duncan) \u2228 p_12(Duncan))",
                "p_12(Duncan) \u2192 \u00acp_10(Duncan)",
                "(p_9(Duncan) \u2295 p_10(Duncan)) \u2192 p_11(Duncan)",
                "p_12(Duncan)",
                "p_12(Duncan) \u2192 p_11(Duncan)",
                "p_14(Duncan) \u2192 \u00acp_9(Duncan)"
            ],
            "edited_natural_language_context": [
                "Duncan carves wood.",
                "Duncan tans hides.",
                "Duncan does not dye fabrics.",
                "Duncan does not reuse materials.",
                "Duncan does not value simplicity.",
                "Duncan is not resourceful.",
                "Duncan is an elder.",
                "Duncan loves the outdoors.",
                "Duncan protects wildlife.",
                "If Duncan carves wood, then it is not the case that he both tans hides and makes furniture or neither tans hides nor makes furniture.",
                "If Duncan weaves baskets, then he either makes furniture or dyes fabrics (or both).",
                "If Duncan conserves resources, then he values simplicity.",
                "If Duncan either crafts tools or weaves baskets (but not both), then he is resourceful.",
                "Duncan is either a hunter or crafts tools, but not both.",
                "If Duncan is a hunter, then he is an outcast.",
                "If Duncan loves the outdoors, then he either conserves resources or lives rurally (or both).",
                "If Duncan lives rurally, then he does not harm nature.",
                "If Duncan either respects nature or harms nature (but not both), then he is an outcast.",
                "Duncan lives rurally.",
                "If Duncan lives rurally, then he is an outcast.",
                "If Duncan is a hunter, then he does not respect nature."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_12(Duncan) \u2192 p_9(Duncan)",
                        "nl": "If Duncan lives rurally, then he respects nature."
                    },
                    {
                        "fol": "p_12(Duncan) \u2192 (\u00acp_10(Duncan) \u2227 p_9(Duncan))",
                        "nl": "If Duncan lives rurally, then he does not harm nature and he respects nature."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_14(Duncan) \u2192 \u00acp_9(Duncan)",
                        "nl": "If Duncan is a hunter, then he does not respect nature."
                    }
                ]
            },
            "conclusion": "Duncan respects nature.",
            "conclusion_fol": "p_9(Duncan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Duncan)",
                    "p_8(Duncan)",
                    "-p_6(Duncan)",
                    "-p_0(Duncan)",
                    "-p_5(Duncan)",
                    "-p_4(Duncan)",
                    "p_3(Duncan)",
                    "p_2(Duncan)",
                    "p_1(Duncan)",
                    "p_7(Duncan) -> (-(p_8(Duncan) <-> p_17(Duncan)))",
                    "p_16(Duncan) -> (p_17(Duncan) | p_6(Duncan))",
                    "p_13(Duncan) -> p_5(Duncan)",
                    "(-(p_15(Duncan) <-> p_16(Duncan))) -> p_4(Duncan)",
                    "(-(p_14(Duncan) <-> p_15(Duncan)))",
                    "p_14(Duncan) -> p_11(Duncan)",
                    "p_2(Duncan) -> (p_13(Duncan) | p_12(Duncan))",
                    "p_12(Duncan) -> -p_10(Duncan)",
                    "(-(p_9(Duncan) <-> p_10(Duncan))) -> p_11(Duncan)",
                    "p_12(Duncan)",
                    "p_12(Duncan) -> p_11(Duncan)",
                    "p_14(Duncan) -> -p_9(Duncan)"
                ],
                "formulas(goals)": [
                    "-p_9(Duncan)"
                ]
            },
            "answer": "False"
        }
    ]
}