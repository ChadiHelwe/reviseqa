{
    "original_context": [
        "Chicken offers guidance.",
        "Chicken is not a caring animal.",
        "Chicken does not guide others.",
        "Chicken is a parent.",
        "Chicken defends his territory.",
        "Chicken is not a guardian.",
        "Chicken finds food.",
        "Chicken does not show affection.",
        "Any animal that either protects others from harm or offers guidance is a caring animal.",
        "Chicken either leads a group or guides others.",
        "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
        "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
        "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
        "If Chicken either cares for the young or provides shelter (but not both), then he shows affection."
    ],
    "original_context_fol": [
        "p_6(Chicken)",
        "\u00acp_7(Chicken)",
        "\u00acp_5(Chicken)",
        "p_0(Chicken)",
        "p_3(Chicken)",
        "\u00acp_4(Chicken)",
        "p_2(Chicken)",
        "\u00acp_1(Chicken)",
        "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
        "p_12(Chicken) \u2228 p_5(Chicken)",
        "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
        "(p_11(Chicken) \u2295 p_3(Chicken)) \u2192 p_4(Chicken)",
        "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
        "(p_8(Chicken) \u2295 p_9(Chicken)) \u2192 p_1(Chicken)"
    ],
    "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
    "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Chicken",
                    "text": "Chicken offers guidance.",
                    "fol": "p_6(Chicken)",
                    "str_fol": "offers_guidance(Chicken)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Chicken",
                    "text": "Chicken is not a caring animal.",
                    "fol": "\u00acp_7(Chicken)",
                    "str_fol": "\u00acis_caring(Chicken)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Any animal that either protects others from harm or offers guidance is a caring animal.",
                    "fol": "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((protect_from_harm(x) \u2295 offers_guidance(x)) \u2192 is_caring(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Chicken",
                "text": "Chicken protects the young from harm.",
                "fol": "p_13(Chicken)",
                "str_fol": "protect_from_harm(Chicken)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Chicken",
                    "text": "Chicken does not guide others.",
                    "fol": "\u00acp_5(Chicken)",
                    "str_fol": "\u00acguides_others(Chicken)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Chicken either leads a group or guides others.",
                    "fol": "p_12(Chicken) \u2228 p_5(Chicken)",
                    "str_fol": "leads_group(Chicken) \u2228 guides_others(Chicken)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Chicken",
                "text": "Chicken leads a group.",
                "fol": "p_12(Chicken)",
                "str_fol": "leads_group(Chicken)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Chicken",
                    "text": "Chicken is a parent.",
                    "fol": "p_0(Chicken)",
                    "str_fol": "is_parent(Chicken)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Chicken",
                    "text": "Chicken leads a group.",
                    "fol": "p_12(Chicken)",
                    "str_fol": "leads_group(Chicken)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
                    "fol": "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
                    "str_fol": "is_parent(Chicken) \u2192 (nurtures_others(Chicken) \u2295 leads_group(Chicken))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Chicken",
                "text": "Chicken does not nurture others.",
                "fol": "\u00acp_10(Chicken)",
                "str_fol": "\u00acnurtures_others(Chicken)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Chicken",
                    "text": "Chicken defends his territory.",
                    "fol": "p_3(Chicken)",
                    "str_fol": "defend_territory(Chicken)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Chicken",
                    "text": "Chicken is not a guardian.",
                    "fol": "\u00acp_4(Chicken)",
                    "str_fol": "\u00acis_guardian(Chicken)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                    "fol": "(p_11(Chicken) \u2295 p_3(Chicken)) \u2192 p_4(Chicken)",
                    "str_fol": "(teach_survival_skills(Chicken) \u2295 defend_territory(Chicken)) \u2192 is_guardian(Chicken)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Chicken",
                "text": "Chicken teaches the young ducklings survival skills.",
                "fol": "p_11(Chicken)",
                "str_fol": "teach_survival_skills(Chicken)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Chicken",
                    "text": "Chicken finds food.",
                    "fol": "p_2(Chicken)",
                    "str_fol": "finds_food(Chicken)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Chicken",
                    "text": "Chicken does not nurture others.",
                    "fol": "\u00acp_10(Chicken)",
                    "str_fol": "\u00acnurtures_others(Chicken)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                    "fol": "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                    "str_fol": "(provide_shelter(Chicken) \u2295 finds_food(Chicken)) \u2192 nurtures_others(Chicken)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Chicken",
                "text": "Chicken provides shelter.",
                "fol": "p_9(Chicken)",
                "str_fol": "provide_shelter(Chicken)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Chicken",
                    "text": "Chicken provides shelter.",
                    "fol": "p_9(Chicken)",
                    "str_fol": "provide_shelter(Chicken)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Chicken",
                    "text": "Chicken does not show affection.",
                    "fol": "\u00acp_1(Chicken)",
                    "str_fol": "\u00acshow_affection(Chicken)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Chicken either cares for the young or provides shelter (but not both), then he shows affection.",
                    "fol": "(p_8(Chicken) \u2295 p_9(Chicken)) \u2192 p_1(Chicken)",
                    "str_fol": "(care_for_young(Chicken) \u2295 provide_shelter(Chicken)) \u2192 show_affection(Chicken)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Chicken",
                "text": "Chicken cares for the young ducklings.",
                "fol": "p_8(Chicken)",
                "str_fol": "care_for_young(Chicken)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Chicken",
                    "text": "Chicken cares for the young ducklings.",
                    "fol": "p_8(Chicken)",
                    "str_fol": "care_for_young(Chicken)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Chicken",
                    "text": "Chicken protects the young from harm.",
                    "fol": "p_13(Chicken)",
                    "str_fol": "protect_from_harm(Chicken)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Chicken",
                    "text": "Chicken teaches the young ducklings survival skills.",
                    "fol": "p_11(Chicken)",
                    "str_fol": "teach_survival_skills(Chicken)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 12,
                "text": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
                "fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
                "str_fol": "care_for_young(Chicken) \u2227 (protect_from_harm(Chicken) \u2228 teach_survival_skills(Chicken))"
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
                "(p_11(Chicken) \u2295 p_3(Chicken)) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2192 p_1(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance is a caring animal.",
                "Chicken either leads a group or guides others.",
                "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "If Chicken cares for the young, then he shows affection."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "(p_8(Chicken) \u2295 p_9(Chicken)) \u2192 p_1(Chicken)",
                        "nl": "If Chicken either cares for the young or provides shelter (but not both), then he shows affection."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_8(Chicken) \u2192 p_1(Chicken)",
                        "nl": "If Chicken cares for the young, then he shows affection."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken)",
                    "-p_7(Chicken)",
                    "-p_5(Chicken)",
                    "p_0(Chicken)",
                    "p_3(Chicken)",
                    "-p_4(Chicken)",
                    "p_2(Chicken)",
                    "-p_1(Chicken)",
                    "all x (-(p_13(x) <-> p_6(x)) -> p_7(x))",
                    "p_12(Chicken) | p_5(Chicken)",
                    "p_0(Chicken) -> -(p_10(Chicken) <-> p_12(Chicken))",
                    "-(p_11(Chicken) <-> p_3(Chicken)) -> p_4(Chicken)",
                    "-(p_9(Chicken) <-> p_2(Chicken)) -> p_10(Chicken)",
                    "p_8(Chicken) -> p_1(Chicken)"
                ],
                "formulas(goals)": [
                    "-(p_8(Chicken) & (p_13(Chicken) | p_11(Chicken)))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x (((p_13(x) \u2228 p_6(x)) \u2227 \u00ac(p_13(x) \u2227 p_6(x))) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
                "(p_11(Chicken) \u2295 p_3(Chicken)) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2192 p_1(Chicken)",
                "\u00acp_8(Chicken)",
                "p_12(Chicken)",
                "\u00acp_10(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal.",
                "Chicken either leads a group or guides others.",
                "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "If Chicken cares for the young, then he shows affection.",
                "Chicken does not care for the young.",
                "Chicken leads a group.",
                "Chicken does not nurture others."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                        "nl": "Any animal that either protects others from harm or offers guidance is a caring animal."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "\u00acp_8(Chicken)",
                        "nl": "Chicken does not care for the young."
                    },
                    {
                        "fol": "p_12(Chicken)",
                        "nl": "Chicken leads a group."
                    },
                    {
                        "fol": "\u00acp_10(Chicken)",
                        "nl": "Chicken does not nurture others."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (((p_13(x) \u2228 p_6(x)) \u2227 \u00ac(p_13(x) \u2227 p_6(x))) \u2192 p_7(x))",
                        "nl": "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken).",
                    "-p_7(Chicken).",
                    "-p_5(Chicken).",
                    "p_0(Chicken).",
                    "p_3(Chicken).",
                    "-p_4(Chicken).",
                    "p_2(Chicken).",
                    "-p_1(Chicken).",
                    "all x (((p_13(x) | p_6(x)) & -(p_13(x) & p_6(x))) -> p_7(x)).",
                    "p_12(Chicken) | p_5(Chicken).",
                    "p_0(Chicken) -> (-(p_10(Chicken) <-> p_12(Chicken))).",
                    "(-(p_11(Chicken) <-> p_3(Chicken))) -> p_4(Chicken).",
                    "(-(p_9(Chicken) <-> p_2(Chicken))) -> p_10(Chicken).",
                    "p_8(Chicken) -> p_1(Chicken).",
                    "-p_8(Chicken).",
                    "p_12(Chicken).",
                    "-p_10(Chicken)."
                ],
                "formulas(goals)": [
                    "-(p_8(Chicken) & (p_13(Chicken) | p_11(Chicken)))."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 3,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
                "(p_11(Chicken) \u2295 p_3(Chicken)) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2192 p_1(Chicken)",
                "\u00acp_8(Chicken)",
                "p_12(Chicken)",
                "\u00acp_10(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal.",
                "Chicken either leads a group or guides others.",
                "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "If Chicken cares for the young, then he shows affection.",
                "Chicken does not care for the young.",
                "Chicken leads a group.",
                "Chicken does not nurture others."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x (((p_13(x) \u2228 p_6(x)) \u2227 \u00ac(p_13(x) \u2227 p_6(x))) \u2192 p_7(x))",
                        "nl": "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                        "nl": "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken)",
                    "-p_7(Chicken)",
                    "-p_5(Chicken)",
                    "p_0(Chicken)",
                    "p_3(Chicken)",
                    "-p_4(Chicken)",
                    "p_2(Chicken)",
                    "-p_1(Chicken)",
                    "all x ((-(p_13(x) <-> p_6(x))) -> p_7(x))",
                    "p_12(Chicken) | p_5(Chicken)",
                    "p_0(Chicken) -> (-(p_10(Chicken) <-> p_12(Chicken)))",
                    "(-(p_11(Chicken) <-> p_3(Chicken))) -> p_4(Chicken)",
                    "(-(p_9(Chicken) <-> p_2(Chicken))) -> p_10(Chicken)",
                    "p_8(Chicken) -> p_1(Chicken)",
                    "-p_8(Chicken)",
                    "p_12(Chicken)",
                    "-p_10(Chicken)"
                ],
                "formulas(goals)": [
                    "-(p_8(Chicken) & (p_13(Chicken) | p_11(Chicken)))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
                "(p_11(Chicken) \u2295 p_3(Chicken)) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2228 p_1(Chicken)",
                "p_12(Chicken)",
                "\u00acp_10(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal.",
                "Chicken either leads a group or guides others.",
                "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "Chicken either cares for the young or shows affection.",
                "Chicken leads a group.",
                "Chicken does not nurture others."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "\u00acp_8(Chicken)",
                        "nl": "Chicken does not care for the young."
                    }
                ],
                "removed_rules": [
                    {
                        "fol": "p_8(Chicken) \u2192 p_1(Chicken)",
                        "nl": "If Chicken cares for the young, then he shows affection."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_8(Chicken) \u2228 p_1(Chicken)",
                        "nl": "Chicken either cares for the young or shows affection."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken)",
                    "-p_7(Chicken)",
                    "-p_5(Chicken)",
                    "p_0(Chicken)",
                    "p_3(Chicken)",
                    "-p_4(Chicken)",
                    "p_2(Chicken)",
                    "-p_1(Chicken)",
                    "all x (-(p_13(x) <-> p_6(x)) -> p_7(x))",
                    "p_12(Chicken) | p_5(Chicken)",
                    "p_0(Chicken) -> (-(p_10(Chicken) <-> p_12(Chicken)))",
                    "(-(p_11(Chicken) <-> p_3(Chicken))) -> p_4(Chicken)",
                    "(-(p_9(Chicken) <-> p_2(Chicken))) -> p_10(Chicken)",
                    "p_8(Chicken) | p_1(Chicken)",
                    "p_12(Chicken)",
                    "-p_10(Chicken)"
                ],
                "formulas(goals)": [
                    "p_8(Chicken) & (p_13(Chicken) | p_11(Chicken))"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "p_0(Chicken) \u2192 (p_10(Chicken) \u2295 p_12(Chicken))",
                "((p_11(Chicken) \u2228 p_3(Chicken)) \u2227 (\u00acp_11(Chicken) \u2228 \u00acp_3(Chicken))) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2228 p_1(Chicken)",
                "p_12(Chicken)",
                "\u00acp_10(Chicken)",
                "p_13(Chicken)",
                "p_8(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal.",
                "Chicken either leads a group or guides others.",
                "If Chicken is a parent, then he either nurtures others or leads a group, but not both.",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "Chicken either cares for the young or shows affection.",
                "Chicken leads a group.",
                "Chicken does not nurture others.",
                "Chicken protects others from harm.",
                "Chicken cares for the young."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_13(Chicken)",
                        "nl": "Chicken protects others from harm."
                    },
                    {
                        "fol": "p_8(Chicken)",
                        "nl": "Chicken cares for the young."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "((p_11(Chicken) \u2228 p_3(Chicken)) \u2227 (\u00acp_11(Chicken) \u2228 \u00acp_3(Chicken))) \u2192 p_4(Chicken)",
                        "nl": "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken)",
                    "-p_7(Chicken)",
                    "-p_5(Chicken)",
                    "p_0(Chicken)",
                    "p_3(Chicken)",
                    "-p_4(Chicken)",
                    "p_2(Chicken)",
                    "-p_1(Chicken)",
                    "all x (-(p_13(x) <-> p_6(x)) -> p_7(x))",
                    "p_12(Chicken) | p_5(Chicken)",
                    "p_0(Chicken) -> (-(p_10(Chicken) <-> p_12(Chicken)))",
                    "((p_11(Chicken) | p_3(Chicken)) & (-p_11(Chicken) | -p_3(Chicken))) -> p_4(Chicken)",
                    "(-(p_9(Chicken) <-> p_2(Chicken))) -> p_10(Chicken)",
                    "p_8(Chicken) | p_1(Chicken)",
                    "p_12(Chicken)",
                    "-p_10(Chicken)",
                    "p_13(Chicken)",
                    "p_8(Chicken)"
                ],
                "formulas(goals)": [
                    "p_8(Chicken) & (p_13(Chicken) | p_11(Chicken))"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "\u00acp_0(Chicken) \u2228 ((p_10(Chicken) \u2228 p_12(Chicken)) \u2227 (\u00acp_10(Chicken) \u2228 \u00acp_12(Chicken)))",
                "((p_11(Chicken) \u2228 p_3(Chicken)) \u2227 (\u00acp_11(Chicken) \u2228 \u00acp_3(Chicken))) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2228 p_1(Chicken)",
                "p_12(Chicken)",
                "\u00acp_10(Chicken)",
                "p_13(Chicken)",
                "p_8(Chicken)",
                "p_9(Chicken)",
                "p_13(Chicken) \u2194 p_6(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal.",
                "Chicken either leads a group or guides others.",
                "Either Chicken is not a parent or (Chicken either nurtures others or leads a group, but not both).",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "Chicken either cares for the young or shows affection.",
                "Chicken leads a group.",
                "Chicken does not nurture others.",
                "Chicken protects others from harm.",
                "Chicken cares for the young.",
                "Chicken provides shelter.",
                "Chicken protects others from harm if and only if Chicken offers guidance."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_9(Chicken)",
                        "nl": "Chicken provides shelter."
                    },
                    {
                        "fol": "p_13(Chicken) \u2194 p_6(Chicken)",
                        "nl": "Chicken protects others from harm if and only if Chicken offers guidance."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u00acp_0(Chicken) \u2228 ((p_10(Chicken) \u2228 p_12(Chicken)) \u2227 (\u00acp_10(Chicken) \u2228 \u00acp_12(Chicken)))",
                        "nl": "Either Chicken is not a parent or (Chicken either nurtures others or leads a group, but not both)."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken)",
                    "-p_7(Chicken)",
                    "-p_5(Chicken)",
                    "p_0(Chicken)",
                    "p_3(Chicken)",
                    "-p_4(Chicken)",
                    "p_2(Chicken)",
                    "-p_1(Chicken)",
                    "all x (-(-(p_13(x) <-> p_6(x))) | p_7(x))",
                    "p_12(Chicken) | p_5(Chicken)",
                    "-p_0(Chicken) | ((p_10(Chicken) | p_12(Chicken)) & (-p_10(Chicken) | -p_12(Chicken)))",
                    "(-((p_11(Chicken) | p_3(Chicken)) & (-p_11(Chicken) | -p_3(Chicken)))) | p_4(Chicken)",
                    "(-(-(p_9(Chicken) <-> p_2(Chicken)))) | p_10(Chicken)",
                    "p_8(Chicken) | p_1(Chicken)",
                    "p_12(Chicken)",
                    "-p_10(Chicken)",
                    "p_13(Chicken)",
                    "p_8(Chicken)",
                    "p_9(Chicken)",
                    "p_13(Chicken) <-> p_6(Chicken)"
                ],
                "formulas(goals)": [
                    "p_8(Chicken) & (p_13(Chicken) | p_11(Chicken))"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 7,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_6(Chicken)",
                "\u00acp_7(Chicken)",
                "\u00acp_5(Chicken)",
                "p_0(Chicken)",
                "p_3(Chicken)",
                "\u00acp_4(Chicken)",
                "p_2(Chicken)",
                "\u00acp_1(Chicken)",
                "\u2200x ((p_13(x) \u2295 p_6(x)) \u2192 p_7(x))",
                "p_12(Chicken) \u2228 p_5(Chicken)",
                "\u00acp_0(Chicken) \u2228 ((p_10(Chicken) \u2228 p_12(Chicken)) \u2227 (\u00acp_10(Chicken) \u2228 \u00acp_12(Chicken)))",
                "((p_11(Chicken) \u2228 p_3(Chicken)) \u2227 (\u00acp_11(Chicken) \u2228 \u00acp_3(Chicken))) \u2192 p_4(Chicken)",
                "(p_9(Chicken) \u2295 p_2(Chicken)) \u2192 p_10(Chicken)",
                "p_8(Chicken) \u2228 p_1(Chicken)",
                "p_12(Chicken)",
                "\u00acp_10(Chicken)",
                "p_8(Chicken)",
                "p_9(Chicken)",
                "p_13(Chicken) \u2194 p_6(Chicken)",
                "(p_3(Chicken) \u2227 \u00acp_4(Chicken)) \u2192 \u00acp_11(Chicken)"
            ],
            "edited_natural_language_context": [
                "Chicken offers guidance.",
                "Chicken is not a caring animal.",
                "Chicken does not guide others.",
                "Chicken is a parent.",
                "Chicken defends his territory.",
                "Chicken is not a guardian.",
                "Chicken finds food.",
                "Chicken does not show affection.",
                "Any animal that either protects others from harm or offers guidance (but not both) is a caring animal.",
                "Chicken either leads a group or guides others.",
                "Either Chicken is not a parent or (Chicken either nurtures others or leads a group, but not both).",
                "If Chicken either teaches survival skills or defends his territory (but not both), then he is a guardian.",
                "If Chicken either provides shelter or finds food (but not both), then he nurtures others.",
                "Chicken either cares for the young or shows affection.",
                "Chicken leads a group.",
                "Chicken does not nurture others.",
                "Chicken cares for the young.",
                "Chicken provides shelter.",
                "Chicken protects others from harm if and only if Chicken offers guidance.",
                "If Chicken defends his territory and is not a guardian, then he does not teach survival skills."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "p_13(Chicken)",
                        "nl": "Chicken protects others from harm."
                    }
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "(p_3(Chicken) \u2227 \u00acp_4(Chicken)) \u2192 \u00acp_11(Chicken)",
                        "nl": "If Chicken defends his territory and is not a guardian, then he does not teach survival skills."
                    }
                ]
            },
            "conclusion": "Chicken cares for the young ducklings and either protects them from harm or teaches them survival skills (or both).",
            "conclusion_fol": "p_8(Chicken) \u2227 (p_13(Chicken) \u2228 p_11(Chicken))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chicken).",
                    "-p_7(Chicken).",
                    "-p_5(Chicken).",
                    "p_0(Chicken).",
                    "p_3(Chicken).",
                    "-p_4(Chicken).",
                    "p_2(Chicken).",
                    "-p_1(Chicken).",
                    "all x ((-(p_13(x) <-> p_6(x)) -> p_7(x))).",
                    "p_12(Chicken) | p_5(Chicken).",
                    "-p_0(Chicken) | ((p_10(Chicken) | p_12(Chicken)) & (-p_10(Chicken) | -p_12(Chicken))).",
                    "((p_11(Chicken) | p_3(Chicken)) & (-p_11(Chicken) | -p_3(Chicken))) -> p_4(Chicken).",
                    "(-(p_9(Chicken) <-> p_2(Chicken))) -> p_10(Chicken).",
                    "p_8(Chicken) | p_1(Chicken).",
                    "p_12(Chicken).",
                    "-p_10(Chicken).",
                    "p_8(Chicken).",
                    "p_9(Chicken).",
                    "p_13(Chicken) <-> p_6(Chicken).",
                    "(p_3(Chicken) & -p_4(Chicken)) -> -p_11(Chicken)."
                ],
                "formulas(goals)": [
                    "-(p_8(Chicken) & (p_13(Chicken) | p_11(Chicken)))."
                ]
            },
            "answer": "False"
        }
    ]
}