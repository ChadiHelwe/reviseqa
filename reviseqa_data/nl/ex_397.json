{
    "original_context": [
        "Eithan dyes fabrics.",
        "Eithan does not make clothes.",
        "Eithan is not an embroiderer.",
        "Eithan is a collector, gathering and preserving existing works.",
        "Eithan is a designer.",
        "Eithan is not a purist.",
        "For all humans, if someone is either a seamster or dyes fabrics, then they make clothes.",
        "If Eithan is a seamster, then he is either a tailor or an embroiderer, but not both.",
        "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
        "If Eithan is a designer, then he is either a weaver or a tailor, but not both.",
        "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
        "Eithan is either an artist or a craftsman, but not both.",
        "If Eithan is an artist, then he is either a traditionalist or a purist, but not both.",
        "Eithan is either a traditionalist or a modernist, but not both."
    ],
    "original_context_fol": [
        "p_4(Eithan)",
        "\u00acp_5(Eithan)",
        "\u00acp_2(Eithan)",
        "p_1(Eithan)",
        "p_0(Eithan)",
        "\u00acp_3(Eithan)",
        "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))",
        "p_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))",
        "p_11(Eithan) \u2295 p_1(Eithan)",
        "p_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))",
        "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
        "p_8(Eithan) \u2295 p_9(Eithan)",
        "p_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))",
        "p_6(Eithan) \u2295 p_7(Eithan)"
    ],
    "conclusion": "Eithan is not a modernist.",
    "conclusion_fol": "\u00acp_7(Eithan)",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Eithan",
                    "text": "Eithan dyes fabrics.",
                    "fol": "p_4(Eithan)",
                    "str_fol": "dyes_fabrics(Eithan)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Eithan",
                    "text": "Eithan does not make clothes.",
                    "fol": "\u00acp_5(Eithan)",
                    "str_fol": "\u00acmakes_clothes(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "For all humans, if someone is either a seamster or dyes fabrics, then they make clothes.",
                    "fol": "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((seamster(x) \u2295 dyes_fabrics(x)) \u2192 makes_clothes(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Eithan",
                "text": "Eithan is a seamster.",
                "fol": "p_13(Eithan)",
                "str_fol": "seamster(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Eithan",
                    "text": "Eithan is a seamster.",
                    "fol": "p_13(Eithan)",
                    "str_fol": "seamster(Eithan)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Eithan",
                    "text": "Eithan is not an embroiderer.",
                    "fol": "\u00acp_2(Eithan)",
                    "str_fol": "\u00acembroider(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Eithan is a seamster, then he is either a tailor or an embroiderer, but not both.",
                    "fol": "p_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))",
                    "str_fol": "seamster(Eithan) \u2192 (tailor(Eithan) \u2295 embroider(Eithan))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Eithan",
                "text": "Eithan is a tailor.",
                "fol": "p_12(Eithan)",
                "str_fol": "tailor(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Eithan",
                    "text": "Eithan is a collector, gathering and preserving existing works.",
                    "fol": "p_1(Eithan)",
                    "str_fol": "collector(Eithan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                    "fol": "p_11(Eithan) \u2295 p_1(Eithan)",
                    "str_fol": "creator(Eithan) \u2295 collector(Eithan)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Eithan",
                "text": "Eithan is not a creator.",
                "fol": "\u00acp_11(Eithan)",
                "str_fol": "\u00accreator(Eithan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Eithan",
                    "text": "Eithan is a designer.",
                    "fol": "p_0(Eithan)",
                    "str_fol": "designer(Eithan)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Eithan",
                    "text": "Eithan is a tailor.",
                    "fol": "p_12(Eithan)",
                    "str_fol": "tailor(Eithan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Eithan is a designer, then he is either a weaver or a tailor, but not both.",
                    "fol": "p_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))",
                    "str_fol": "designer(Eithan) \u2192 (weaver(Eithan) \u2295 tailor(Eithan))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Eithan",
                "text": "Eithan is not a weaver.",
                "fol": "\u00acp_10(Eithan)",
                "str_fol": "\u00acweaver(Eithan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Eithan",
                    "text": "Eithan is not a weaver.",
                    "fol": "\u00acp_10(Eithan)",
                    "str_fol": "\u00acweaver(Eithan)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Eithan",
                    "text": "Eithan is not a creator.",
                    "fol": "\u00acp_11(Eithan)",
                    "str_fol": "\u00accreator(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                    "fol": "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((craftsman(x) \u2295 weaver(x)) \u2192 creator(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Eithan",
                "text": "Eithan is not a craftsman.",
                "fol": "\u00acp_9(Eithan)",
                "str_fol": "\u00accraftsman(Eithan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Eithan",
                    "text": "Eithan is not a craftsman.",
                    "fol": "\u00acp_9(Eithan)",
                    "str_fol": "\u00accraftsman(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Eithan is either an artist or a craftsman, but not both.",
                    "fol": "p_8(Eithan) \u2295 p_9(Eithan)",
                    "str_fol": "artist(Eithan) \u2295 craftsman(Eithan)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Eithan",
                "text": "Eithan is an artist.",
                "fol": "p_8(Eithan)",
                "str_fol": "artist(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Eithan",
                    "text": "Eithan is an artist.",
                    "fol": "p_8(Eithan)",
                    "str_fol": "artist(Eithan)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Eithan",
                    "text": "Eithan is not a purist.",
                    "fol": "\u00acp_3(Eithan)",
                    "str_fol": "\u00acpurist(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Eithan is an artist, then he is either a traditionalist or a purist, but not both.",
                    "fol": "p_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))",
                    "str_fol": "artist(Eithan) \u2192 (traditionalist(Eithan) \u2295 purist(Eithan))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Eithan",
                "text": "Eithan is a traditionalist.",
                "fol": "p_6(Eithan)",
                "str_fol": "traditionalist(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Eithan",
                    "text": "Eithan is a traditionalist.",
                    "fol": "p_6(Eithan)",
                    "str_fol": "traditionalist(Eithan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Eithan is either a traditionalist or a modernist, but not both.",
                    "fol": "p_6(Eithan) \u2295 p_7(Eithan)",
                    "str_fol": "traditionalist(Eithan) \u2295 modernist(Eithan)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Eithan",
                "text": "Eithan is not a modernist.",
                "fol": "\u00acp_7(Eithan)",
                "str_fol": "\u00acmodernist(Eithan)",
                "negation": true
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "p_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "p_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan)"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "If Eithan is a seamster, then he is either a tailor or an embroiderer, but not both.",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "If Eithan is a designer, then he is either a weaver or a tailor, but not both.",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "If Eithan is an artist, then he is either a traditionalist or a purist, but not both.",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))",
                        "nl": "For all humans, if someone is either a seamster or dyes fabrics (but not both), then they make clothes."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "p_12(Eithan)",
                        "nl": "Eithan is a tailor."
                    },
                    {
                        "fol": "p_6(Eithan)",
                        "nl": "Eithan is a traditionalist."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                        "nl": "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes."
                    }
                ]
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "p_13(Eithan) -> (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "p_0(Eithan) -> (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "p_8(Eithan) -> (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan)"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 2,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan)",
                "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                "\u00acp_7(Eithan)",
                "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                "\u2200x (p_7(x) \u2192 \u00acp_6(x))"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "Either Eithan is not a seamster, or he is either a tailor or an embroiderer (but not both).",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "Either Eithan is not a designer, or he is either a weaver or a tailor (but not both).",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "Either Eithan is not an artist, or he is either a traditionalist or a purist (but not both).",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist.",
                "Eithan is a traditionalist or Eithan is not a traditionalist.",
                "Eithan is not a modernist.",
                "For all humans, if someone is a traditionalist, then they are not a modernist.",
                "Eithan is a tailor or Eithan is not a tailor.",
                "For all humans, if someone is a modernist, then they are not a traditionalist."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                        "nl": "Eithan is a traditionalist or Eithan is not a traditionalist."
                    },
                    {
                        "fol": "\u00acp_7(Eithan)",
                        "nl": "Eithan is not a modernist."
                    },
                    {
                        "fol": "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                        "nl": "Eithan is a tailor or Eithan is not a tailor."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                        "nl": "For all humans, if someone is a traditionalist, then they are not a modernist."
                    },
                    {
                        "fol": "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                        "nl": "For all humans, if someone is a modernist, then they are not a traditionalist."
                    }
                ]
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "-p_13(Eithan) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "-p_0(Eithan) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "-p_8(Eithan) | (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan)",
                    "p_6(Eithan) | -p_6(Eithan)",
                    "-p_7(Eithan)",
                    "all x (p_6(x) -> -p_7(x))",
                    "p_12(Eithan) | -p_12(Eithan)",
                    "all x (p_7(x) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 3,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 \u00acp_6(x))"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "Either Eithan is not a seamster, or he is either a tailor or an embroiderer (but not both).",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "Either Eithan is not a designer, or he is either a weaver or a tailor (but not both).",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "Either Eithan is not an artist, or he is either a traditionalist or a purist (but not both).",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist or Eithan is not a traditionalist.",
                "For all humans, if someone is a traditionalist, then they are not a modernist.",
                "Eithan is a tailor or Eithan is not a tailor.",
                "For all humans, if someone is a modernist, then they are not a traditionalist.",
                "For all humans, if someone is both a tailor and dyes fabrics, then they are not a traditionalist."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "p_6(Eithan)",
                        "nl": "Eithan is a traditionalist."
                    },
                    {
                        "fol": "\u00acp_7(Eithan)",
                        "nl": "Eithan is not a modernist."
                    }
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 \u00acp_6(x))",
                        "nl": "For all humans, if someone is both a tailor and dyes fabrics, then they are not a traditionalist."
                    }
                ]
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "(-p_13(Eithan) | (p_12(Eithan) <-> -p_2(Eithan)))",
                    "(p_11(Eithan) <-> -p_1(Eithan))",
                    "(-p_0(Eithan) | (p_10(Eithan) <-> -p_12(Eithan)))",
                    "all x ((p_9(x) <-> -p_10(x)) -> p_11(x))",
                    "(p_8(Eithan) <-> -p_9(Eithan))",
                    "(-p_8(Eithan) | (p_6(Eithan) <-> -p_3(Eithan)))",
                    "(p_6(Eithan) <-> -p_7(Eithan))",
                    "p_12(Eithan)",
                    "(p_6(Eithan) | -p_6(Eithan))",
                    "all x (p_6(x) -> -p_7(x))",
                    "(p_12(Eithan) | -p_12(Eithan))",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x ((p_12(x) & p_4(x)) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "--p_7(Eithan)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_6(x))"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "Either Eithan is not a seamster, or he is either a tailor or an embroiderer (but not both).",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "Either Eithan is not a designer, or he is either a weaver or a tailor (but not both).",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "Either Eithan is not an artist, or he is either a traditionalist or a purist (but not both).",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist or Eithan is not a traditionalist.",
                "For all humans, if someone is a traditionalist, then they are not a modernist.",
                "Eithan is a tailor or Eithan is not a tailor.",
                "For all humans, if someone is a modernist, then they are not a traditionalist.",
                "For all humans, if someone is both a tailor and dyes fabrics, then they are a traditionalist."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 \u00acp_6(x))",
                        "nl": "For all humans, if someone is both a tailor and dyes fabrics, then they are not a traditionalist."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_6(x))",
                        "nl": "For all humans, if someone is both a tailor and dyes fabrics, then they are a traditionalist."
                    }
                ]
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "(-p_13(Eithan)) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "(-(p_11(Eithan) <-> p_1(Eithan)))",
                    "(-p_0(Eithan)) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "(-(p_8(Eithan) <-> p_9(Eithan)))",
                    "(-p_8(Eithan)) | (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "(-(p_6(Eithan) <-> p_7(Eithan)))",
                    "p_12(Eithan)",
                    "(p_6(Eithan)) | (-p_6(Eithan))",
                    "all x (p_6(x) -> -p_7(x))",
                    "(p_12(Eithan)) | (-p_12(Eithan))",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x ((p_12(x) & p_4(x)) -> p_6(x))"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                "\u2200x (\u00acp_12(x) \u2228 \u00acp_4(x) \u2228 p_6(x))",
                "p_6(Eithan)"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "Either Eithan is not a seamster, or he is either a tailor or an embroiderer (but not both).",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "Either Eithan is not a designer, or he is either a weaver or a tailor (but not both).",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "Either Eithan is not an artist, or he is either a traditionalist or a purist (but not both).",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist or Eithan is not a traditionalist.",
                "For all humans, if someone is a traditionalist, then they are not a modernist.",
                "Eithan is a tailor or Eithan is not a tailor.",
                "For all humans, if someone is a modernist, then they are not a traditionalist.",
                "For all humans, either they are not a tailor, or they do not dye fabrics, or they are a traditionalist.",
                "Eithan is a traditionalist."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_6(x))",
                        "nl": "For all humans, if someone is both a tailor and dyes fabrics, then they are a traditionalist."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "p_6(Eithan)",
                        "nl": "Eithan is a traditionalist."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (\u00acp_12(x) \u2228 \u00acp_4(x) \u2228 p_6(x))",
                        "nl": "For all humans, either they are not a tailor, or they do not dye fabrics, or they are a traditionalist."
                    }
                ]
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "-p_13(Eithan) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "-p_0(Eithan) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "-p_8(Eithan) | (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan) | -p_6(Eithan)",
                    "all x (p_6(x) -> -p_7(x))",
                    "p_12(Eithan) | -p_12(Eithan)",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x (-p_12(x) | -p_4(x) | p_6(x))",
                    "p_6(Eithan)"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                "\u2200x (p_4(x) \u2192 \u00acp_6(x))"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "Either Eithan is not a seamster, or he is either a tailor or an embroiderer (but not both).",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "Either Eithan is not a designer, or he is either a weaver or a tailor (but not both).",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist or Eithan is not a traditionalist.",
                "For all humans, if someone is a traditionalist, then they are not a modernist.",
                "Eithan is a tailor or Eithan is not a tailor.",
                "For all humans, if someone is a modernist, then they are not a traditionalist.",
                "For all humans, if someone dyes fabrics, then they are not a traditionalist."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "p_6(Eithan)",
                        "nl": "Eithan is a traditionalist."
                    }
                ],
                "removed_rules": [
                    {
                        "fol": "\u2200x (\u00acp_12(x) \u2228 \u00acp_4(x) \u2228 p_6(x))",
                        "nl": "For all humans, either they are not a tailor, or they do not dye fabrics, or they are a traditionalist."
                    },
                    {
                        "fol": "\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))",
                        "nl": "Either Eithan is not an artist, or he is either a traditionalist or a purist (but not both)."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x (p_4(x) \u2192 \u00acp_6(x))",
                        "nl": "For all humans, if someone dyes fabrics, then they are not a traditionalist."
                    }
                ]
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "(-p_13(Eithan)) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "(-p_0(Eithan)) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan) | (-p_6(Eithan))",
                    "all x (p_6(x) -> (-p_7(x)))",
                    "p_12(Eithan) | (-p_12(Eithan))",
                    "all x (p_7(x) -> (-p_6(x)))",
                    "all x (p_4(x) -> (-p_6(x)))"
                ],
                "formulas(goals)": [
                    "-(-p_7(Eithan))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_4(Eithan)",
                "\u00acp_5(Eithan)",
                "\u00acp_2(Eithan)",
                "p_1(Eithan)",
                "p_0(Eithan)",
                "\u00acp_3(Eithan)",
                "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))",
                "p_11(Eithan) \u2295 p_1(Eithan)",
                "\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))",
                "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                "p_8(Eithan) \u2295 p_9(Eithan)",
                "p_6(Eithan) \u2295 p_7(Eithan)",
                "p_12(Eithan)",
                "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                "p_12(Eithan) \u2228 \u00acp_12(Eithan)",
                "\u2200x (p_7(x) \u2192 \u00acp_6(x))",
                "\u2200x (p_4(x) \u2192 \u00acp_6(x))",
                "p_7(Eithan)",
                "\u00acp_6(Eithan)",
                "\u00acp_13(Eithan)",
                "\u00acp_11(Eithan)",
                "\u00acp_10(Eithan)",
                "\u00acp_9(Eithan)",
                "p_8(Eithan)"
            ],
            "edited_natural_language_context": [
                "Eithan dyes fabrics.",
                "Eithan does not make clothes.",
                "Eithan is not an embroiderer.",
                "Eithan is a collector, gathering and preserving existing works.",
                "Eithan is a designer.",
                "Eithan is not a purist.",
                "For all humans, if someone is both a seamster and dyes fabrics, then they make clothes.",
                "Either Eithan is not a seamster, or he is either a tailor or an embroiderer (but not both).",
                "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                "Either Eithan is not a designer, or he is either a weaver or a tailor (but not both).",
                "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                "Eithan is either an artist or a craftsman, but not both.",
                "Eithan is either a traditionalist or a modernist, but not both.",
                "Eithan is a tailor.",
                "Eithan is a traditionalist or Eithan is not a traditionalist.",
                "For all humans, if someone is a traditionalist, then they are not a modernist.",
                "Eithan is a tailor or Eithan is not a tailor.",
                "For all humans, if someone is a modernist, then they are not a traditionalist.",
                "For all humans, if someone dyes fabrics, then they are not a traditionalist.",
                "Eithan is a modernist.",
                "Eithan is not a traditionalist.",
                "Eithan is not a seamster.",
                "Eithan is not a creator.",
                "Eithan is not a weaver.",
                "Eithan is not a craftsman.",
                "Eithan is an artist."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_7(Eithan)",
                        "nl": "Eithan is a modernist."
                    },
                    {
                        "fol": "\u00acp_6(Eithan)",
                        "nl": "Eithan is not a traditionalist."
                    },
                    {
                        "fol": "\u00acp_13(Eithan)",
                        "nl": "Eithan is not a seamster."
                    },
                    {
                        "fol": "\u00acp_11(Eithan)",
                        "nl": "Eithan is not a creator."
                    },
                    {
                        "fol": "\u00acp_10(Eithan)",
                        "nl": "Eithan is not a weaver."
                    },
                    {
                        "fol": "\u00acp_9(Eithan)",
                        "nl": "Eithan is not a craftsman."
                    },
                    {
                        "fol": "p_8(Eithan)",
                        "nl": "Eithan is an artist."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Eithan is not a modernist.",
            "conclusion_fol": "\u00acp_7(Eithan)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_4(Eithan).",
                    "-p_5(Eithan).",
                    "-p_2(Eithan).",
                    "p_1(Eithan).",
                    "p_0(Eithan).",
                    "-p_3(Eithan).",
                    "all x (-(p_13(x) & p_4(x)) | p_5(x)).",
                    "-p_13(Eithan) | (-(p_12(Eithan) <-> p_2(Eithan))).",
                    "-(p_11(Eithan) <-> p_1(Eithan)).",
                    "-p_0(Eithan) | (-(p_10(Eithan) <-> p_12(Eithan))).",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x)).",
                    "-(p_8(Eithan) <-> p_9(Eithan)).",
                    "-(p_6(Eithan) <-> p_7(Eithan)).",
                    "p_12(Eithan).",
                    "p_6(Eithan) | -p_6(Eithan).",
                    "all x (-p_6(x) | -p_7(x)).",
                    "p_12(Eithan) | -p_12(Eithan).",
                    "all x (-p_7(x) | -p_6(x)).",
                    "all x (-p_4(x) | -p_6(x)).",
                    "p_7(Eithan).",
                    "-p_6(Eithan).",
                    "-p_13(Eithan).",
                    "-p_11(Eithan).",
                    "-p_10(Eithan).",
                    "-p_9(Eithan).",
                    "p_8(Eithan)."
                ],
                "formulas(goals)": [
                    "p_7(Eithan)."
                ]
            },
            "answer": "False"
        }
    ]
}