{
  "original_context": [
    "Neo takes risks.",
    "Neo speaks the truth.",
    "Neo does not lead by example.",
    "Neo does not have honor.",
    "Neo does not earn a legacy.",
    "Neo does not mobilize troops.",
    "Neo is not strategically brilliant.",
    "If Neo takes risks, then he challenges authority and speaks the truth.",
    "Any legendary hero who breaks rules or challenges authority defies convention.",
    "Every legendary hero who fights for justice either becomes legendary or defies convention (or both).",
    "If Neo gains respect and leads by example, then he becomes legendary.",
    "If a legendary hero saves lives and has honor, then they gain respect.",
    "Any legendary hero who wins battles or saves lives earns a legacy.",
    "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
    "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant or an inspirational leader (or both)."
  ],
  "original_context_fol": [
    "p_5(Neo)",
    "p_6(Neo)",
    "\u00acp_4(Neo)",
    "\u00acp_1(Neo)",
    "\u00acp_3(Neo)",
    "\u00acp_0(Neo)",
    "\u00acp_2(Neo)",
    "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
    "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
    "\u2200x (p_13(x) \u2192 (p_12(x) \u2228 p_14(x)))",
    "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
    "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
    "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
    "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
    "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x)))"
  ],
  "conclusion": "Neo is fearless.",
  "conclusion_fol": "p_7(Neo)",
  "answer": "False",
  "reasoning_chain": [
    {
      "facts": [
        {
          "id": 5,
          "subject": "Neo",
          "text": "Neo takes risks.",
          "fol": "p_5(Neo)",
          "str_fol": "takes_risks(Neo)",
          "negation": false
        },
        {
          "id": 6,
          "subject": "Neo",
          "text": "Neo speaks the truth.",
          "fol": "p_6(Neo)",
          "str_fol": "speaks_truth(Neo)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 7,
          "text": "If Neo takes risks, then he challenges authority and speaks the truth.",
          "fol": "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
          "str_fol": "takes_risks(Neo) \u2192 (challenges_authority(Neo) \u2227 speaks_truth(Neo))"
        }
      ],
      "conclusion": {
        "id": 7,
        "subject": "Neo",
        "text": "Neo challenges authority.",
        "fol": "p_16(Neo)",
        "str_fol": "challenges_authority(Neo)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 7,
          "subject": "Neo",
          "text": "Neo challenges authority.",
          "fol": "p_16(Neo)",
          "str_fol": "challenges_authority(Neo)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 6,
          "text": "Any legendary hero who breaks rules or challenges authority defies convention.",
          "fol": "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
          "str_fol": "\u2200x ((breaks_rules(x) \u2228 challenges_authority(x)) \u2192 defies_convention(x))"
        }
      ],
      "conclusion": {
        "id": 8,
        "subject": "Neo",
        "text": "Neo defies convention.",
        "fol": "p_14(Neo)",
        "str_fol": "defies_convention(Neo)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 8,
          "subject": "Neo",
          "text": "Neo defies convention.",
          "fol": "p_14(Neo)",
          "str_fol": "defies_convention(Neo)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 5,
          "text": "Every legendary hero who fights for justice either becomes legendary or defies convention (or both).",
          "fol": "\u2200x (p_13(x) \u2192 (p_12(x) \u2228 p_14(x)))",
          "str_fol": "\u2200x (fights_for_justice(x) \u2192 (becomes_legendary(x) \u2228 defies_convention(x)))"
        }
      ],
      "conclusion": null
    },
    {
      "facts": [
        {
          "id": 4,
          "subject": "Neo",
          "text": "Neo does not lead by example.",
          "fol": "\u00acp_4(Neo)",
          "str_fol": "\u00acleads_by_example(Neo)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 4,
          "text": "If Neo gains respect and leads by example, then he becomes legendary.",
          "fol": "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
          "str_fol": "(gains_respect(Neo) \u2227 leads_by_example(Neo)) \u2192 becomes_legendary(Neo)"
        }
      ],
      "conclusion": null
    },
    {
      "facts": [
        {
          "id": 1,
          "subject": "Neo",
          "text": "Neo does not have honor.",
          "fol": "\u00acp_1(Neo)",
          "str_fol": "\u00achas_honor(Neo)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 3,
          "text": "If a legendary hero saves lives and has honor, then they gain respect.",
          "fol": "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
          "str_fol": "\u2200x ((saves_lives(x) \u2227 has_honor(x)) \u2192 gains_respect(x))"
        }
      ],
      "conclusion": null
    },
    {
      "facts": [
        {
          "id": 3,
          "subject": "Neo",
          "text": "Neo does not earn a legacy.",
          "fol": "\u00acp_3(Neo)",
          "str_fol": "\u00acearns_legacy(Neo)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 2,
          "text": "Any legendary hero who wins battles or saves lives earns a legacy.",
          "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
          "str_fol": "\u2200x ((wins_battles(x) \u2228 saves_lives(x)) \u2192 earns_legacy(x))"
        }
      ],
      "conclusion": {
        "id": 9,
        "subject": "Neo",
        "text": "Neo does not win battles.",
        "fol": "\u00acp_9(Neo)",
        "str_fol": "\u00acwins_battles(Neo)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 0,
          "subject": "Neo",
          "text": "Neo does not mobilize troops.",
          "fol": "\u00acp_0(Neo)",
          "str_fol": "\u00acmobilizes_troops(Neo)",
          "negation": true
        },
        {
          "id": 9,
          "subject": "Neo",
          "text": "Neo does not win battles.",
          "fol": "\u00acp_9(Neo)",
          "str_fol": "\u00acwins_battles(Neo)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 1,
          "text": "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
          "fol": "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
          "str_fol": "(mobilizes_troops(Neo) \u2295 inspirational_leader(Neo)) \u2192 wins_battles(Neo)"
        }
      ],
      "conclusion": {
        "id": 10,
        "subject": "Neo",
        "text": "Neo is not an inspirational leader.",
        "fol": "\u00acp_8(Neo)",
        "str_fol": "\u00acinspirational_leader(Neo)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 2,
          "subject": "Neo",
          "text": "Neo is not strategically brilliant.",
          "fol": "\u00acp_2(Neo)",
          "str_fol": "\u00acstrategically_brilliant(Neo)",
          "negation": true
        },
        {
          "id": 10,
          "subject": "Neo",
          "text": "Neo is not an inspirational leader.",
          "fol": "\u00acp_8(Neo)",
          "str_fol": "\u00acinspirational_leader(Neo)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 0,
          "text": "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant or an inspirational leader (or both).",
          "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x)))",
          "str_fol": "\u2200x (fearless(x) \u2192 (strategically_brilliant(x) \u2228 inspirational_leader(x)))"
        }
      ],
      "conclusion": {
        "id": 11,
        "subject": "Neo",
        "text": "Neo is fearless.",
        "fol": "p_7(Neo)",
        "str_fol": "fearless(Neo)",
        "negation": false
      }
    }
  ],
  "edits": [
    {
      "edit_number": 1,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_5(Neo)",
        "p_6(Neo)",
        "\u00acp_4(Neo)",
        "\u00acp_1(Neo)",
        "\u00acp_3(Neo)",
        "\u00acp_0(Neo)",
        "\u00acp_2(Neo)",
        "p_16(Neo)",
        "\u00acp_8(Neo)",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
        "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x)))"
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect and leads by example, then he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant or an inspirational leader (or both)."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_13(x) \u2192 (p_12(x) \u2228 p_14(x)))",
            "nl": "Every legendary hero who fights for justice either becomes legendary or defies convention (or both)."
          }
        ],
        "added_facts": [
          {
            "fol": "p_16(Neo)",
            "nl": "Neo challenges authority."
          },
          {
            "fol": "\u00acp_8(Neo)",
            "nl": "Neo is not an inspirational leader."
          }
        ],
        "added_rules": [
          {
            "fol": "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
            "nl": "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination)."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo)",
          "p_6(Neo)",
          "-p_4(Neo)",
          "-p_1(Neo)",
          "-p_3(Neo)",
          "-p_0(Neo)",
          "-p_2(Neo)",
          "p_16(Neo)",
          "-p_8(Neo)",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo))",
          "all x ((p_15(x) | p_16(x)) -> p_14(x))",
          "all x (-p_13(x) | p_12(x) | p_14(x))",
          "(p_11(Neo) & p_4(Neo)) -> p_12(Neo)",
          "all x ((p_10(x) & p_1(x)) -> p_11(x))",
          "all x ((p_9(x) | p_10(x)) -> p_3(x))",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo)",
          "all x (p_7(x) -> (p_2(x) | p_8(x)))"
        ],
        "formulas(goals)": [
          "-p_7(Neo)"
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None; all FOL statements correctly correspond to the natural language statements given the information provided."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 2,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_5(Neo)",
        "p_6(Neo)",
        "\u00acp_4(Neo)",
        "\u00acp_1(Neo)",
        "\u00acp_3(Neo)",
        "\u00acp_0(Neo)",
        "\u00acp_2(Neo)",
        "p_16(Neo)",
        "\u00acp_8(Neo)",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
        "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x)))",
        "\u2200x (p_16(x) \u2192 p_7(x))"
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect and leads by example, then he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination).",
        "For all legendary heroes, if they challenge authority, then they are fearless."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x)))",
            "nl": "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant or an inspirational leader (or both)."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x)))",
            "nl": "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination)."
          },
          {
            "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
            "nl": "For all legendary heroes, if they challenge authority, then they are fearless."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo)",
          "p_6(Neo)",
          "-p_4(Neo)",
          "-p_1(Neo)",
          "-p_3(Neo)",
          "-p_0(Neo)",
          "-p_2(Neo)",
          "p_16(Neo)",
          "-p_8(Neo)",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo))",
          "all x ((p_15(x) | p_16(x)) -> p_14(x))",
          "all x (-p_13(x) | p_12(x) | p_14(x))",
          "(p_11(Neo) & p_4(Neo)) -> p_12(Neo)",
          "all x ((p_10(x) & p_1(x)) -> p_11(x))",
          "all x ((p_9(x) | p_10(x)) -> p_3(x))",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo)",
          "all x (p_7(x) -> (p_2(x) | p_8(x) | p_16(x)))",
          "all x (p_16(x) -> p_7(x))"
        ],
        "formulas(goals)": [
          "p_7(Neo)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All mappings are correct."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 3,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_5(Neo)",
        "p_6(Neo)",
        "\u00acp_4(Neo)",
        "\u00acp_1(Neo)",
        "\u00acp_3(Neo)",
        "\u00acp_0(Neo)",
        "\u00acp_2(Neo)",
        "p_16(Neo)",
        "\u00acp_8(Neo)",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
        "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x)))",
        "\u2200x (p_5(x) \u2192 \u00acp_7(x))"
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect and leads by example, then he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination).",
        "For all legendary heroes, if they take risks, then they are not fearless."
      ],
      "edits_made": {
        "removed_facts": [
          {
            "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
            "nl": "For all legendary heroes, if they challenge authority, then they are fearless."
          }
        ],
        "removed_rules": [],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u2200x (p_5(x) \u2192 \u00acp_7(x))",
            "nl": "For all legendary heroes, if they take risks, then they are not fearless."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo)",
          "p_6(Neo)",
          "-p_4(Neo)",
          "-p_1(Neo)",
          "-p_3(Neo)",
          "-p_0(Neo)",
          "-p_2(Neo)",
          "p_16(Neo)",
          "-p_8(Neo)",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo))",
          "all x ((p_15(x) | p_16(x)) -> p_14(x))",
          "all x (-p_13(x) | p_12(x) | p_14(x))",
          "(p_11(Neo) & p_4(Neo)) -> p_12(Neo)",
          "all x ((p_10(x) & p_1(x)) -> p_11(x))",
          "all x ((p_9(x) | p_10(x)) -> p_3(x))",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo)",
          "all x (p_7(x) -> (p_2(x) | p_8(x) | p_16(x)))",
          "all x (p_5(x) -> -p_7(x))"
        ],
        "formulas(goals)": [
          "-p_7(Neo)"
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None"
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 4,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_5(Neo)",
        "p_6(Neo)",
        "\u00acp_4(Neo)",
        "\u00acp_1(Neo)",
        "\u00acp_3(Neo)",
        "\u00acp_0(Neo)",
        "\u00acp_2(Neo)",
        "p_16(Neo)",
        "\u00acp_8(Neo)",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
        "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x)))",
        "\u2200x (p_16(x) \u2192 p_7(x))"
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect and leads by example, then he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination).",
        "For all legendary heroes, if they challenge authority, then they are fearless."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_5(x) \u2192 \u00acp_7(x))",
            "nl": "For all legendary heroes, if they take risks, then they are not fearless."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
            "nl": "For all legendary heroes, if they challenge authority, then they are fearless."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo)",
          "p_6(Neo)",
          "-p_4(Neo)",
          "-p_1(Neo)",
          "-p_3(Neo)",
          "-p_0(Neo)",
          "-p_2(Neo)",
          "p_16(Neo)",
          "-p_8(Neo)",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo))",
          "all x ((p_15(x) | p_16(x)) -> p_14(x))",
          "all x (-p_13(x) | p_12(x) | p_14(x))",
          "(p_11(Neo) & p_4(Neo)) -> p_12(Neo)",
          "all x ((p_10(x) & p_1(x)) -> p_11(x))",
          "all x ((p_9(x) | p_10(x)) -> p_3(x))",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo)",
          "all x (p_7(x) -> (p_2(x) | p_8(x) | p_16(x)))",
          "all x (p_16(x) -> p_7(x))"
        ],
        "formulas(goals)": [
          "p_7(Neo)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All mappings are correct between FOL and natural language statements."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 5,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_5(Neo)",
        "p_6(Neo)",
        "\u00acp_4(Neo)",
        "\u00acp_1(Neo)",
        "\u00acp_3(Neo)",
        "\u00acp_0(Neo)",
        "\u00acp_2(Neo)",
        "p_16(Neo)",
        "\u00acp_8(Neo)",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
        "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x)))",
        "\u2200x (\u00acp_16(x) \u2228 p_7(x))",
        "p_16(Neo) \u2192 p_14(Neo)"
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect and leads by example, then he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination).",
        "For all legendary heroes, either they do not challenge authority or they are fearless.",
        "If Neo challenges authority, then he defies convention."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_16(x) \u2192 p_7(x))",
            "nl": "For all legendary heroes, if they challenge authority, then they are fearless."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u2200x (\u00acp_16(x) \u2228 p_7(x))",
            "nl": "For all legendary heroes, either they do not challenge authority or they are fearless."
          },
          {
            "fol": "p_16(Neo) \u2192 p_14(Neo)",
            "nl": "If Neo challenges authority, then he defies convention."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo)",
          "p_6(Neo)",
          "-p_4(Neo)",
          "-p_1(Neo)",
          "-p_3(Neo)",
          "-p_0(Neo)",
          "-p_2(Neo)",
          "p_16(Neo)",
          "-p_8(Neo)",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo))",
          "all x ((p_15(x) | p_16(x)) -> p_14(x))",
          "all x (-p_13(x) | p_12(x) | p_14(x))",
          "(p_11(Neo) & p_4(Neo)) -> p_12(Neo)",
          "all x ((p_10(x) & p_1(x)) -> p_11(x))",
          "all x ((p_9(x) | p_10(x)) -> p_3(x))",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo)",
          "all x (p_7(x) -> (p_2(x) | p_8(x) | p_16(x)))",
          "all x (-p_16(x) | p_7(x))",
          "p_16(Neo) -> p_14(Neo)"
        ],
        "formulas(goals)": [
          "p_7(Neo)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None, the FOL matches the NL in all given pairs."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 6,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_5(Neo)",
        "p_6(Neo)",
        "\u00acp_4(Neo)",
        "\u00acp_1(Neo)",
        "\u00acp_3(Neo)",
        "\u00acp_0(Neo)",
        "\u00acp_2(Neo)",
        "p_16(Neo)",
        "\u00acp_8(Neo)",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo))",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x))",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x))",
        "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x))",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x))",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo)",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x)))",
        "\u2200x (\u00acp_16(x) \u2228 p_7(x))",
        "p_16(Neo) \u2192 p_14(Neo)",
        "p_16(Neo) \u2192 p_7(Neo)",
        "p_14(Neo)",
        "p_16(Neo) \u2228 \u00acp_16(Neo)"
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect and leads by example, then he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination).",
        "For all legendary heroes, either they do not challenge authority or they are fearless.",
        "If Neo challenges authority, then he defies convention.",
        "If Neo challenges authority, then he is fearless.",
        "Neo defies convention.",
        "Either Neo challenges authority or Neo does not challenge authority."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_14(Neo)",
            "nl": "Neo defies convention."
          },
          {
            "fol": "p_16(Neo) \u2228 \u00acp_16(Neo)",
            "nl": "Either Neo challenges authority or Neo does not challenge authority."
          }
        ],
        "added_rules": [
          {
            "fol": "p_16(Neo) \u2192 p_7(Neo)",
            "nl": "If Neo challenges authority, then he is fearless."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo).",
          "p_6(Neo).",
          "-p_4(Neo).",
          "-p_1(Neo).",
          "-p_3(Neo).",
          "-p_0(Neo).",
          "-p_2(Neo).",
          "p_16(Neo).",
          "-p_8(Neo).",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo)).",
          "all x ((p_15(x) | p_16(x)) -> p_14(x)).",
          "all x (-p_13(x) | p_12(x) | p_14(x)).",
          "(p_11(Neo) & p_4(Neo)) -> p_12(Neo).",
          "all x ((p_10(x) & p_1(x)) -> p_11(x)).",
          "all x ((p_9(x) | p_10(x)) -> p_3(x)).",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo).",
          "all x (p_7(x) -> (p_2(x) | p_8(x) | p_16(x))).",
          "all x (-p_16(x) | p_7(x)).",
          "p_16(Neo) -> p_14(Neo).",
          "p_16(Neo) -> p_7(Neo).",
          "p_14(Neo).",
          "p_16(Neo) | -p_16(Neo)."
        ],
        "formulas(goals)": [
          "p_7(Neo)."
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All FOL statements correctly match their corresponding natural language statements."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 7,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_5(Neo).",
        "p_6(Neo).",
        "\u00acp_4(Neo).",
        "\u00acp_1(Neo).",
        "\u00acp_3(Neo).",
        "\u00acp_0(Neo).",
        "\u00acp_2(Neo).",
        "p_16(Neo).",
        "\u00acp_8(Neo).",
        "p_5(Neo) \u2192 (p_16(Neo) \u2227 p_6(Neo)).",
        "\u2200x ((p_15(x) \u2228 p_16(x)) \u2192 p_14(x)).",
        "\u2200x (\u00acp_13(x) \u2228 p_12(x) \u2228 p_14(x)).",
        "p_11(Neo) \u2192 (p_4(Neo) \u2192 p_12(Neo)).",
        "\u2200x ((p_10(x) \u2227 p_1(x)) \u2192 p_11(x)).",
        "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_3(x)).",
        "(p_0(Neo) \u2295 p_8(Neo)) \u2192 p_9(Neo).",
        "\u2200x (p_7(x) \u2192 (p_2(x) \u2228 p_8(x) \u2228 p_16(x))).",
        "\u2200x (\u00acp_16(x) \u2228 p_7(x)).",
        "p_16(Neo) \u2192 p_14(Neo).",
        "p_16(Neo) \u2192 p_7(Neo).",
        "p_14(Neo).",
        "p_16(Neo) \u2228 \u00acp_16(Neo).",
        "p_7(Neo) \u2228 \u00acp_7(Neo).",
        "\u00acp_7(Neo) \u2192 \u00acp_16(Neo).",
        "p_7(Neo) \u2192 p_7(Neo).",
        "p_14(Neo) \u2228 p_7(Neo)."
      ],
      "edited_natural_language_context": [
        "Neo takes risks.",
        "Neo speaks the truth.",
        "Neo does not lead by example.",
        "Neo does not have honor.",
        "Neo does not earn a legacy.",
        "Neo does not mobilize troops.",
        "Neo is not strategically brilliant.",
        "Neo challenges authority.",
        "Neo is not an inspirational leader.",
        "If Neo takes risks, then he challenges authority and speaks the truth.",
        "Any legendary hero who breaks rules or challenges authority defies convention.",
        "Every legendary hero either does not fight for justice, becomes legendary, or defies convention (or a combination).",
        "If Neo gains respect, then if he leads by example, he becomes legendary.",
        "If a legendary hero saves lives and has honor, then they gain respect.",
        "Any legendary hero who wins battles or saves lives earns a legacy.",
        "If Neo either mobilizes troops or is an inspirational leader (but not both), then he wins battles.",
        "For all legendary heroes, if a hero is fearless, then they are either strategically brilliant, an inspirational leader, or challenge authority (or a combination).",
        "For all legendary heroes, either they do not challenge authority or they are fearless.",
        "If Neo challenges authority, then he defies convention.",
        "If Neo challenges authority, then he is fearless.",
        "Neo defies convention.",
        "Either Neo challenges authority or Neo does not challenge authority.",
        "Either Neo is fearless or Neo is not fearless.",
        "If Neo is not fearless, then Neo does not challenge authority.",
        "If Neo is fearless, then Neo is fearless.",
        "Either Neo defies convention or Neo is fearless."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "(p_11(Neo) \u2227 p_4(Neo)) \u2192 p_12(Neo)",
            "nl": "If Neo gains respect and leads by example, then he becomes legendary."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "p_7(Neo) \u2228 \u00acp_7(Neo)",
            "nl": "Either Neo is fearless or Neo is not fearless."
          },
          {
            "fol": "\u00acp_7(Neo) \u2192 \u00acp_16(Neo)",
            "nl": "If Neo is not fearless, then Neo does not challenge authority."
          },
          {
            "fol": "p_7(Neo) \u2192 p_7(Neo)",
            "nl": "If Neo is fearless, then Neo is fearless."
          },
          {
            "fol": "p_14(Neo) \u2228 p_7(Neo)",
            "nl": "Either Neo defies convention or Neo is fearless."
          },
          {
            "fol": "p_11(Neo) \u2192 (p_4(Neo) \u2192 p_12(Neo))",
            "nl": "If Neo gains respect, then if he leads by example, he becomes legendary."
          }
        ]
      },
      "conclusion": "Neo is fearless.",
      "conclusion_fol": "p_7(Neo)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_5(Neo).",
          "p_6(Neo).",
          "-p_4(Neo).",
          "-p_1(Neo).",
          "-p_3(Neo).",
          "-p_0(Neo).",
          "-p_2(Neo).",
          "p_16(Neo).",
          "-p_8(Neo).",
          "p_5(Neo) -> (p_16(Neo) & p_6(Neo)).",
          "all x ((p_15(x) | p_16(x)) -> p_14(x)).",
          "all x (-p_13(x) | p_12(x) | p_14(x)).",
          "p_11(Neo) -> (p_4(Neo) -> p_12(Neo)).",
          "all x ((p_10(x) & p_1(x)) -> p_11(x)).",
          "all x ((p_9(x) | p_10(x)) -> p_3(x)).",
          "(-(p_0(Neo) <-> p_8(Neo))) -> p_9(Neo).",
          "all x (p_7(x) -> (p_2(x) | p_8(x) | p_16(x))).",
          "all x (-p_16(x) | p_7(x)).",
          "p_16(Neo) -> p_14(Neo).",
          "p_16(Neo) -> p_7(Neo).",
          "p_14(Neo).",
          "p_16(Neo) | -p_16(Neo).",
          "p_7(Neo) | -p_7(Neo).",
          "-p_7(Neo) -> -p_16(Neo).",
          "p_7(Neo) -> p_7(Neo).",
          "p_14(Neo) | p_7(Neo)."
        ],
        "formulas(goals)": [
          "p_7(Neo)."
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    }
  ]
}