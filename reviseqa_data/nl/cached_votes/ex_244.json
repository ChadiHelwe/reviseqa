{
  "original_context": [
    "Mariam leads teams.",
    "Mariam does not become a leader.",
    "Mariam does not visit hospitals.",
    "Mariam does not aid communities.",
    "Mariam works tirelessly.",
    "Mariam nurses patients.",
    "Mariam listens actively.",
    "Mariam cannot ease pain.",
    "Mariam helps people.",
    "If someone leads teams and gains respect, then they become a leader.",
    "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
    "If someone works tirelessly and inspires others, then they gain respect.",
    "Anyone who nurses patients either cares for others or supports families.",
    "If someone shows compassion and listens actively, then they can ease pain.",
    "Mariam either helps people or earns admiration.",
    "Anyone who cares for others is either selfless or shows compassion."
  ],
  "original_context_fol": [
    "p_7(Mariam)",
    "\u00acp_8(Mariam)",
    "\u00acp_5(Mariam)",
    "\u00acp_6(Mariam)",
    "p_4(Mariam)",
    "p_1(Mariam)",
    "p_2(Mariam)",
    "\u00acp_3(Mariam)",
    "p_0(Mariam)",
    "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
    "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
    "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
    "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
    "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
    "p_0(Mariam) \u2228 p_12(Mariam)",
    "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))"
  ],
  "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
  "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
  "answer": "False",
  "reasoning_chain": [
    {
      "facts": [
        {
          "id": 7,
          "subject": "Mariam",
          "text": "Mariam leads teams.",
          "fol": "p_7(Mariam)",
          "str_fol": "leads_teams(Mariam)",
          "negation": false
        },
        {
          "id": 8,
          "subject": "Mariam",
          "text": "Mariam does not become a leader.",
          "fol": "\u00acp_8(Mariam)",
          "str_fol": "\u00acbecome_leader(Mariam)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 6,
          "text": "If someone leads teams and gains respect, then they become a leader.",
          "fol": "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
          "str_fol": "\u2200x ((leads_teams(x) \u2227 gain_respect(x)) \u2192 become_leader(x))"
        }
      ],
      "conclusion": {
        "id": 9,
        "subject": "Mariam",
        "text": "Mariam does not gain respect.",
        "fol": "\u00acp_15(Mariam)",
        "str_fol": "\u00acgain_respect(Mariam)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 5,
          "subject": "Mariam",
          "text": "Mariam does not visit hospitals.",
          "fol": "\u00acp_5(Mariam)",
          "str_fol": "\u00acvisit_hospitals(Mariam)",
          "negation": true
        },
        {
          "id": 6,
          "subject": "Mariam",
          "text": "Mariam does not aid communities.",
          "fol": "\u00acp_6(Mariam)",
          "str_fol": "\u00acaid_communities(Mariam)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 5,
          "text": "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
          "fol": "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
          "str_fol": "(visit_hospitals(Mariam) \u2295 support_families(Mariam)) \u2192 aid_communities(Mariam)"
        }
      ],
      "conclusion": {
        "id": 10,
        "subject": "Mariam",
        "text": "Mariam does not support families.",
        "fol": "\u00acp_13(Mariam)",
        "str_fol": "\u00acsupport_families(Mariam)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 4,
          "subject": "Mariam",
          "text": "Mariam works tirelessly.",
          "fol": "p_4(Mariam)",
          "str_fol": "works_tirelessly(Mariam)",
          "negation": false
        },
        {
          "id": 9,
          "subject": "Mariam",
          "text": "Mariam does not gain respect.",
          "fol": "\u00acp_15(Mariam)",
          "str_fol": "\u00acgain_respect(Mariam)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 4,
          "text": "If someone works tirelessly and inspires others, then they gain respect.",
          "fol": "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
          "str_fol": "\u2200x ((works_tirelessly(x) \u2227 inspire_others(x)) \u2192 gain_respect(x))"
        }
      ],
      "conclusion": {
        "id": 11,
        "subject": "Mariam",
        "text": "Mariam does not inspire others.",
        "fol": "\u00acp_14(Mariam)",
        "str_fol": "\u00acinspire_others(Mariam)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 1,
          "subject": "Mariam",
          "text": "Mariam nurses patients.",
          "fol": "p_1(Mariam)",
          "str_fol": "nurse_patients(Mariam)",
          "negation": false
        },
        {
          "id": 10,
          "subject": "Mariam",
          "text": "Mariam does not support families.",
          "fol": "\u00acp_13(Mariam)",
          "str_fol": "\u00acsupport_families(Mariam)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 3,
          "text": "Anyone who nurses patients either cares for others or supports families.",
          "fol": "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
          "str_fol": "\u2200x (nurse_patients(x) \u2192 (care_for_others(x) \u2228 support_families(x)))"
        }
      ],
      "conclusion": {
        "id": 12,
        "subject": "Mariam",
        "text": "Mariam cares for others.",
        "fol": "p_9(Mariam)",
        "str_fol": "care_for_others(Mariam)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 2,
          "subject": "Mariam",
          "text": "Mariam listens actively.",
          "fol": "p_2(Mariam)",
          "str_fol": "listen_actively(Mariam)",
          "negation": false
        },
        {
          "id": 3,
          "subject": "Mariam",
          "text": "Mariam cannot ease pain.",
          "fol": "\u00acp_3(Mariam)",
          "str_fol": "\u00acease_pain(Mariam)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 2,
          "text": "If someone shows compassion and listens actively, then they can ease pain.",
          "fol": "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
          "str_fol": "\u2200x ((show_compassion(x) \u2227 listen_actively(x)) \u2192 ease_pain(x))"
        }
      ],
      "conclusion": {
        "id": 13,
        "subject": "Mariam",
        "text": "Mariam does not show compassion.",
        "fol": "\u00acp_11(Mariam)",
        "str_fol": "\u00acshow_compassion(Mariam)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 0,
          "subject": "Mariam",
          "text": "Mariam helps people.",
          "fol": "p_0(Mariam)",
          "str_fol": "help_people(Mariam)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 1,
          "text": "Mariam either helps people or earns admiration.",
          "fol": "p_0(Mariam) \u2228 p_12(Mariam)",
          "str_fol": "help_people(Mariam) \u2228 earn_admiration(Mariam)"
        }
      ],
      "conclusion": null
    },
    {
      "facts": [
        {
          "id": 12,
          "subject": "Mariam",
          "text": "Mariam cares for others.",
          "fol": "p_9(Mariam)",
          "str_fol": "care_for_others(Mariam)",
          "negation": false
        },
        {
          "id": 13,
          "subject": "Mariam",
          "text": "Mariam does not show compassion.",
          "fol": "\u00acp_11(Mariam)",
          "str_fol": "\u00acshow_compassion(Mariam)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 0,
          "text": "Anyone who cares for others is either selfless or shows compassion.",
          "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
          "str_fol": "\u2200x (care_for_others(x) \u2192 (selfless(x) \u2228 show_compassion(x)))"
        }
      ],
      "conclusion": {
        "id": 14,
        "subject": "Mariam",
        "text": "Mariam is selfless.",
        "fol": "p_10(Mariam)",
        "str_fol": "selfless(Mariam)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 14,
          "subject": "Mariam",
          "text": "Mariam is selfless.",
          "fol": "p_10(Mariam)",
          "str_fol": "selfless(Mariam)",
          "negation": false
        },
        {
          "id": 11,
          "subject": "Mariam",
          "text": "Mariam does not inspire others.",
          "fol": "\u00acp_14(Mariam)",
          "str_fol": "\u00acinspire_others(Mariam)",
          "negation": true
        }
      ],
      "rules": [],
      "conclusion": {
        "id": 14,
        "text": "If Mariam is selfless, then she inspires others and earns admiration.",
        "fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
        "str_fol": "selfless(Mariam) \u2192 (inspire_others(Mariam) \u2227 earn_admiration(Mariam))"
      }
    }
  ],
  "edits": [
    {
      "edit_number": 1,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_8(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
        "\u2200x (p_1(x) \u2192 (p_13(x) \u2228 p_9(x)))",
        "\u2200x (p_9(x) \u2192 (p_11(x) \u2228 p_10(x)))"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not become a leader.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly, then either they don't inspire others or they gain respect.",
        "Anyone who nurses patients either supports families or cares for others.",
        "Anyone who cares for others either shows compassion or is selfless."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
            "nl": "If someone works tirelessly, then either they don't inspire others or they gain respect."
          },
          {
            "fol": "\u2200x (p_1(x) \u2192 (p_13(x) \u2228 p_9(x)))",
            "nl": "Anyone who nurses patients either supports families or cares for others."
          },
          {
            "fol": "\u2200x (p_9(x) \u2192 (p_11(x) \u2228 p_10(x)))",
            "nl": "Anyone who cares for others either shows compassion or is selfless."
          }
        ]
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam)",
          "-p_8(Mariam)",
          "-p_5(Mariam)",
          "-p_6(Mariam)",
          "p_4(Mariam)",
          "p_1(Mariam)",
          "p_2(Mariam)",
          "-p_3(Mariam)",
          "p_0(Mariam)",
          "all x ((p_7(x) & p_15(x)) -> p_8(x))",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_4(x) & p_14(x)) -> p_15(x))",
          "all x (p_1(x) -> (p_9(x) | p_13(x)))",
          "all x ((p_11(x) & p_2(x)) -> p_3(x))",
          "p_0(Mariam) | p_12(Mariam)",
          "all x (p_9(x) -> (p_10(x) | p_11(x)))",
          "all x (p_4(x) -> (-p_14(x) | p_15(x)))",
          "all x (p_1(x) -> (p_13(x) | p_9(x)))",
          "all x (p_9(x) -> (p_11(x) | p_10(x)))"
        ],
        "formulas(goals)": [
          "- (p_10(Mariam) -> (p_14(Mariam) & p_12(Mariam)))"
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None; all FOL statements correctly match the NL statements they are paired with."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 2,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
        "p_14(Mariam)",
        "p_12(Mariam)"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly, then either they don't inspire others or they gain respect.",
        "Mariam inspires others.",
        "Mariam earns admiration."
      ],
      "edits_made": {
        "removed_facts": [
          {
            "fol": "\u00acp_8(Mariam)",
            "nl": "Mariam does not become a leader."
          }
        ],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_14(Mariam)",
            "nl": "Mariam inspires others."
          },
          {
            "fol": "p_12(Mariam)",
            "nl": "Mariam earns admiration."
          }
        ],
        "added_rules": []
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam).",
          "-p_5(Mariam).",
          "-p_6(Mariam).",
          "p_4(Mariam).",
          "p_1(Mariam).",
          "p_2(Mariam).",
          "-p_3(Mariam).",
          "p_0(Mariam).",
          "all x ((p_7(x) & p_15(x)) -> p_8(x)).",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam).",
          "all x ((p_4(x) & p_14(x)) -> p_15(x)).",
          "all x (p_1(x) -> (p_9(x) | p_13(x))).",
          "all x ((p_11(x) & p_2(x)) -> p_3(x)).",
          "p_0(Mariam) | p_12(Mariam).",
          "all x (p_9(x) -> (p_10(x) | p_11(x))).",
          "all x (p_4(x) -> (-p_14(x) | p_15(x))).",
          "p_14(Mariam).",
          "p_12(Mariam)."
        ],
        "formulas(goals)": [
          "p_10(Mariam) -> (p_14(Mariam) & p_12(Mariam))."
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None; all FOL statements match the natural language statements correctly."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 3,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
        "\u00acp_14(Mariam)",
        "p_12(Mariam)"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly, then either they don't inspire others or they gain respect.",
        "Mariam does not inspire others.",
        "Mariam earns admiration."
      ],
      "edits_made": {
        "removed_facts": [
          {
            "fol": "p_14(Mariam)",
            "nl": "Mariam inspires others."
          }
        ],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "\u00acp_14(Mariam)",
            "nl": "Mariam does not inspire others."
          }
        ],
        "added_rules": []
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam)",
          "-p_5(Mariam)",
          "-p_6(Mariam)",
          "p_4(Mariam)",
          "p_1(Mariam)",
          "p_2(Mariam)",
          "-p_3(Mariam)",
          "p_0(Mariam)",
          "all x ((p_7(x) & p_15(x)) -> p_8(x))",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_4(x) & p_14(x)) -> p_15(x))",
          "all x (p_1(x) -> (p_9(x) | p_13(x)))",
          "all x ((p_11(x) & p_2(x)) -> p_3(x))",
          "p_0(Mariam) | p_12(Mariam)",
          "all x (p_9(x) -> (p_10(x) | p_11(x)))",
          "all x (p_4(x) -> (-p_14(x) | p_15(x)))",
          "-p_14(Mariam)",
          "p_12(Mariam)"
        ],
        "formulas(goals)": [
          "- (p_10(Mariam) -> (p_14(Mariam) & p_12(Mariam)))"
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. Each FOL statement is an accurate translation of the associated natural language statement."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 4,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
        "\u00acp_14(Mariam)",
        "p_12(Mariam)",
        "p_9(Mariam)",
        "p_10(Mariam)"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly, then either they don't inspire others or they gain respect.",
        "Mariam does not inspire others.",
        "Mariam earns admiration.",
        "Mariam cares for others.",
        "Mariam is selfless."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_9(Mariam)",
            "nl": "Mariam cares for others."
          },
          {
            "fol": "p_10(Mariam)",
            "nl": "Mariam is selfless."
          }
        ],
        "added_rules": []
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam)",
          "-p_5(Mariam)",
          "-p_6(Mariam)",
          "p_4(Mariam)",
          "p_1(Mariam)",
          "p_2(Mariam)",
          "-p_3(Mariam)",
          "p_0(Mariam)",
          "all x ((p_7(x) & p_15(x)) -> p_8(x))",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_4(x) & p_14(x)) -> p_15(x))",
          "all x (p_1(x) -> (p_9(x) | p_13(x)))",
          "all x ((p_11(x) & p_2(x)) -> p_3(x))",
          "p_0(Mariam) | p_12(Mariam)",
          "all x (p_9(x) -> (p_10(x) | p_11(x)))",
          "all x (p_4(x) -> (-p_14(x) | p_15(x)))",
          "-p_14(Mariam)",
          "p_12(Mariam)",
          "p_9(Mariam)",
          "p_10(Mariam)"
        ],
        "formulas(goals)": [
          "-(-p_10(Mariam) | (p_14(Mariam) & p_12(Mariam)))"
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 5,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
        "p_12(Mariam)",
        "p_9(Mariam)",
        "p_10(Mariam)",
        "\u2200x (p_10(x) \u2192 p_14(x))"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly, then either they don't inspire others or they gain respect.",
        "Mariam earns admiration.",
        "Mariam cares for others.",
        "Mariam is selfless.",
        "Anyone who is selfless inspires others."
      ],
      "edits_made": {
        "removed_facts": [
          {
            "fol": "\u00acp_14(Mariam)",
            "nl": "Mariam does not inspire others."
          }
        ],
        "removed_rules": [],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u2200x (p_10(x) \u2192 p_14(x))",
            "nl": "Anyone who is selfless inspires others."
          }
        ]
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam)",
          "-p_5(Mariam)",
          "-p_6(Mariam)",
          "p_4(Mariam)",
          "p_1(Mariam)",
          "p_2(Mariam)",
          "-p_3(Mariam)",
          "p_0(Mariam)",
          "all x ((p_7(x) & p_15(x)) -> p_8(x))",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_4(x) & p_14(x)) -> p_15(x))",
          "all x (p_1(x) -> (p_9(x) | p_13(x)))",
          "all x ((p_11(x) & p_2(x)) -> p_3(x))",
          "p_0(Mariam) | p_12(Mariam)",
          "all x (p_9(x) -> (p_10(x) | p_11(x)))",
          "all x (p_4(x) -> (-p_14(x) | p_15(x)))",
          "p_12(Mariam)",
          "p_9(Mariam)",
          "p_10(Mariam)",
          "all x (p_10(x) -> p_14(x))"
        ],
        "formulas(goals)": [
          "p_10(Mariam) -> (p_14(Mariam) & p_12(Mariam))"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None, all FOL statements correctly correspond to the natural language statements according to the provided context and variable meanings."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 6,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (p_14(x) \u2192 p_15(x)))",
        "p_12(Mariam)",
        "p_9(Mariam)",
        "p_10(Mariam)",
        "\u2200x (p_10(x) \u2192 p_14(x))",
        "p_14(Mariam)",
        "p_15(Mariam)"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Mariam earns admiration.",
        "Mariam cares for others.",
        "Mariam is selfless.",
        "Anyone who is selfless inspires others.",
        "Mariam inspires others.",
        "Mariam gains respect."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_4(x) \u2192 (\u00acp_14(x) \u2228 p_15(x)))",
            "nl": "If someone works tirelessly, then either they don't inspire others or they gain respect."
          }
        ],
        "added_facts": [
          {
            "fol": "p_14(Mariam)",
            "nl": "Mariam inspires others."
          },
          {
            "fol": "p_15(Mariam)",
            "nl": "Mariam gains respect."
          }
        ],
        "added_rules": [
          {
            "fol": "\u2200x (p_4(x) \u2192 (p_14(x) \u2192 p_15(x)))",
            "nl": "If someone works tirelessly and inspires others, then they gain respect."
          }
        ]
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam)",
          "-p_5(Mariam)",
          "-p_6(Mariam)",
          "p_4(Mariam)",
          "p_1(Mariam)",
          "p_2(Mariam)",
          "-p_3(Mariam)",
          "p_0(Mariam)",
          "all x ((p_7(x) & p_15(x)) -> p_8(x))",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_4(x) & p_14(x)) -> p_15(x))",
          "all x (p_1(x) -> (p_9(x) | p_13(x)))",
          "all x ((p_11(x) & p_2(x)) -> p_3(x))",
          "p_0(Mariam) | p_12(Mariam)",
          "all x (p_9(x) -> (p_10(x) | p_11(x)))",
          "all x (p_4(x) -> (p_14(x) -> p_15(x)))",
          "p_12(Mariam)",
          "p_9(Mariam)",
          "p_10(Mariam)",
          "all x (p_10(x) -> p_14(x))",
          "p_14(Mariam)",
          "p_15(Mariam)"
        ],
        "formulas(goals)": [
          "p_10(Mariam) -> (p_14(Mariam) & p_12(Mariam))"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All FOL statements match their natural language counterparts."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 7,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_7(Mariam)",
        "\u00acp_5(Mariam)",
        "\u00acp_6(Mariam)",
        "p_4(Mariam)",
        "p_1(Mariam)",
        "p_2(Mariam)",
        "\u00acp_3(Mariam)",
        "p_0(Mariam)",
        "\u2200x ((p_7(x) \u2227 p_15(x)) \u2192 p_8(x))",
        "(p_5(Mariam) \u2295 p_13(Mariam)) \u2192 p_6(Mariam)",
        "\u2200x ((p_4(x) \u2227 p_14(x)) \u2192 p_15(x))",
        "\u2200x (p_1(x) \u2192 (p_9(x) \u2228 p_13(x)))",
        "\u2200x ((p_11(x) \u2227 p_2(x)) \u2192 p_3(x))",
        "p_0(Mariam) \u2228 p_12(Mariam)",
        "\u2200x (p_9(x) \u2192 (p_10(x) \u2228 p_11(x)))",
        "\u2200x (p_4(x) \u2192 (p_14(x) \u2192 p_15(x)))",
        "p_12(Mariam)",
        "p_9(Mariam)",
        "p_10(Mariam)",
        "\u2200x (p_10(x) \u2192 p_14(x))",
        "p_14(Mariam)",
        "p_15(Mariam)",
        "((p_5(Mariam) \u2228 p_13(Mariam)) \u2227 (\u00acp_5(Mariam) \u2228 \u00acp_13(Mariam))) \u2192 p_6(Mariam)",
        "\u2200x ((p_1(x) \u2227 \u00acp_9(x)) \u2192 p_13(x))",
        "\u2200x ((p_9(x) \u2227 \u00acp_10(x)) \u2192 p_11(x))",
        "\u2200x (p_11(x) \u2192 (p_2(x) \u2192 p_3(x)))",
        "p_12(Mariam) \u2192 (p_0(Mariam) \u2228 p_12(Mariam))"
      ],
      "edited_natural_language_context": [
        "Mariam leads teams.",
        "Mariam does not visit hospitals.",
        "Mariam does not aid communities.",
        "Mariam works tirelessly.",
        "Mariam nurses patients.",
        "Mariam listens actively.",
        "Mariam cannot ease pain.",
        "Mariam helps people.",
        "If someone leads teams and gains respect, then they become a leader.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Anyone who nurses patients either cares for others or supports families.",
        "If someone shows compassion and listens actively, then they can ease pain.",
        "Mariam either helps people or earns admiration.",
        "Anyone who cares for others is either selfless or shows compassion.",
        "If someone works tirelessly and inspires others, then they gain respect.",
        "Mariam earns admiration.",
        "Mariam cares for others.",
        "Mariam is selfless.",
        "Anyone who is selfless inspires others.",
        "Mariam inspires others.",
        "Mariam gains respect.",
        "If Mariam either visits hospitals or supports families (but not both), then she aids communities.",
        "If someone nurses patients and does not care for others, then they support families.",
        "If someone cares for others and is not selfless, then they show compassion.",
        "If someone shows compassion, then if they listen actively, they can ease pain.",
        "If Mariam earns admiration, then Mariam either helps people or earns admiration."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "((p_5(Mariam) \u2228 p_13(Mariam)) \u2227 (\u00acp_5(Mariam) \u2228 \u00acp_13(Mariam))) \u2192 p_6(Mariam)",
            "nl": "If Mariam either visits hospitals or supports families (but not both), then she aids communities."
          },
          {
            "fol": "\u2200x ((p_1(x) \u2227 \u00acp_9(x)) \u2192 p_13(x))",
            "nl": "If someone nurses patients and does not care for others, then they support families."
          },
          {
            "fol": "\u2200x ((p_9(x) \u2227 \u00acp_10(x)) \u2192 p_11(x))",
            "nl": "If someone cares for others and is not selfless, then they show compassion."
          },
          {
            "fol": "\u2200x (p_11(x) \u2192 (p_2(x) \u2192 p_3(x)))",
            "nl": "If someone shows compassion, then if they listen actively, they can ease pain."
          },
          {
            "fol": "p_12(Mariam) \u2192 (p_0(Mariam) \u2228 p_12(Mariam))",
            "nl": "If Mariam earns admiration, then Mariam either helps people or earns admiration."
          }
        ]
      },
      "conclusion": "If Mariam is selfless, then she inspires others and earns admiration.",
      "conclusion_fol": "p_10(Mariam) \u2192 (p_14(Mariam) \u2227 p_12(Mariam))",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_7(Mariam)",
          "-p_5(Mariam)",
          "-p_6(Mariam)",
          "p_4(Mariam)",
          "p_1(Mariam)",
          "p_2(Mariam)",
          "-p_3(Mariam)",
          "p_0(Mariam)",
          "all x ((p_7(x) & p_15(x)) -> p_8(x))",
          "(-(p_5(Mariam) <-> p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_4(x) & p_14(x)) -> p_15(x))",
          "all x (p_1(x) -> (p_9(x) | p_13(x)))",
          "all x ((p_11(x) & p_2(x)) -> p_3(x))",
          "p_0(Mariam) | p_12(Mariam)",
          "all x (p_9(x) -> (p_10(x) | p_11(x)))",
          "all x (p_4(x) -> (p_14(x) -> p_15(x)))",
          "p_12(Mariam)",
          "p_9(Mariam)",
          "p_10(Mariam)",
          "all x (p_10(x) -> p_14(x))",
          "p_14(Mariam)",
          "p_15(Mariam)",
          "((p_5(Mariam) | p_13(Mariam)) & (-p_5(Mariam) | -p_13(Mariam))) -> p_6(Mariam)",
          "all x ((p_1(x) & -p_9(x)) -> p_13(x))",
          "all x ((p_9(x) & -p_10(x)) -> p_11(x))",
          "all x (p_11(x) -> (p_2(x) -> p_3(x)))",
          "p_12(Mariam) -> (p_0(Mariam) | p_12(Mariam))"
        ],
        "formulas(goals)": [
          "p_10(Mariam) -> (p_14(Mariam) & p_12(Mariam))"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. The FOL and natural language match perfectly."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    }
  ]
}