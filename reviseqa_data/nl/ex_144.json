{
    "original_context": [
        "Hailey is nurturing.",
        "Hailey does not lose patients.",
        "Hailey does not create fear.",
        "Hailey does not lose the trust of her patients.",
        "All nurturing humans give support and show empathy.",
        "Hailey is either insensitive or shows empathy, but not both.",
        "Any person who lacks empathy or is insensitive will lose patients.",
        "Anyone who causes pain or creates fear will lose the trust of others.",
        "If someone either hurts others or causes pain, then they lack empathy.",
        "Anyone who is uncaring will hurt others.",
        "Hailey is either caring or uncaring, but not both."
    ],
    "original_context_fol": [
        "p_3(Hailey)",
        "\u00acp_0(Hailey)",
        "\u00acp_2(Hailey)",
        "\u00acp_1(Hailey)",
        "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
        "p_9(Hailey) \u2295 p_10(Hailey)",
        "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
        "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
        "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
        "\u2200x (unp_4(x) \u2192 p_6(x))",
        "p_4(Hailey) \u2295 unp_4(Hailey)"
    ],
    "conclusion": "Hailey is caring.",
    "conclusion_fol": "p_4(Hailey)",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Hailey",
                    "text": "Hailey is nurturing.",
                    "fol": "p_3(Hailey)",
                    "str_fol": "be_nurturing(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "All nurturing humans give support and show empathy.",
                    "fol": "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (be_nurturing(x) \u2192 (give_support(x) \u2227 show_empathy(x)))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Hailey",
                "text": "Hailey shows empathy.",
                "fol": "p_10(Hailey)",
                "str_fol": "show_empathy(Hailey)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Hailey",
                    "text": "Hailey shows empathy.",
                    "fol": "p_10(Hailey)",
                    "str_fol": "show_empathy(Hailey)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Hailey is either insensitive or shows empathy, but not both.",
                    "fol": "p_9(Hailey) \u2295 p_10(Hailey)",
                    "str_fol": "be_insensitive(Hailey) \u2295 show_empathy(Hailey)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Hailey",
                "text": "Hailey is not insensitive.",
                "fol": "\u00acp_9(Hailey)",
                "str_fol": "\u00acbe_insensitive(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Hailey",
                    "text": "Hailey is not insensitive.",
                    "fol": "\u00acp_9(Hailey)",
                    "str_fol": "\u00acbe_insensitive(Hailey)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Hailey",
                    "text": "Hailey does not lose patients.",
                    "fol": "\u00acp_0(Hailey)",
                    "str_fol": "\u00aclose_patients(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any person who lacks empathy or is insensitive will lose patients.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                    "str_fol": "\u2200x ((lack_empathy(x) \u2228 be_insensitive(x)) \u2192 lose_patients(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Hailey",
                "text": "Hailey does not lack empathy.",
                "fol": "\u00acp_8(Hailey)",
                "str_fol": "\u00aclack_empathy(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Hailey",
                    "text": "Hailey does not create fear.",
                    "fol": "\u00acp_2(Hailey)",
                    "str_fol": "\u00accreate_fear(Hailey)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Hailey",
                    "text": "Hailey does not lose the trust of her patients.",
                    "fol": "\u00acp_1(Hailey)",
                    "str_fol": "\u00aclose_trust(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who causes pain or creates fear will lose the trust of others.",
                    "fol": "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((cause_pain(x) \u2228 create_fear(x)) \u2192 lose_trust(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Hailey",
                "text": "Hailey does not cause pain.",
                "fol": "\u00acp_7(Hailey)",
                "str_fol": "\u00accause_pain(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Hailey",
                    "text": "Hailey does not cause pain.",
                    "fol": "\u00acp_7(Hailey)",
                    "str_fol": "\u00accause_pain(Hailey)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Hailey",
                    "text": "Hailey does not lack empathy.",
                    "fol": "\u00acp_8(Hailey)",
                    "str_fol": "\u00aclack_empathy(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone either hurts others or causes pain, then they lack empathy.",
                    "fol": "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((hurt_others(x) \u2295 cause_pain(x)) \u2192 lack_empathy(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Hailey",
                "text": "Hailey does not hurt others.",
                "fol": "\u00acp_6(Hailey)",
                "str_fol": "\u00achurt_others(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Hailey",
                    "text": "Hailey does not hurt others.",
                    "fol": "\u00acp_6(Hailey)",
                    "str_fol": "\u00achurt_others(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who is uncaring will hurt others.",
                    "fol": "\u2200x (unp_4(x) \u2192 p_6(x))",
                    "str_fol": "\u2200x (uncaring(x) \u2192 hurt_others(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Hailey",
                "text": "Hailey is not uncaring.",
                "fol": "\u00acunp_4(Hailey)",
                "str_fol": "\u00acuncaring(Hailey)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Hailey",
                    "text": "Hailey is not uncaring.",
                    "fol": "\u00acunp_4(Hailey)",
                    "str_fol": "\u00acuncaring(Hailey)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Hailey is either caring or uncaring, but not both.",
                    "fol": "p_4(Hailey) \u2295 unp_4(Hailey)",
                    "str_fol": "caring(Hailey) \u2295 uncaring(Hailey)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Hailey",
                "text": "Hailey is caring.",
                "fol": "p_4(Hailey)",
                "str_fol": "caring(Hailey)",
                "negation": false
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
                "p_9(Hailey) \u2295 p_10(Hailey)",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
                "\u2200x (unp_4(x) \u2192 p_6(x))",
                "p_4(Hailey) \u2295 unp_4(Hailey)",
                "\u00acp_6(Hailey)",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All nurturing humans give support and show empathy.",
                "Hailey is either insensitive or shows empathy, but not both.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "If someone either hurts others or causes pain, then they lack empathy.",
                "Anyone who is uncaring will hurt others.",
                "Hailey is either caring or uncaring, but not both.",
                "Hailey does not hurt others.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00acp_6(Hailey)",
                        "nl": "Hailey does not hurt others."
                    },
                    {
                        "fol": "\u00acp_7(Hailey)",
                        "nl": "Hailey does not cause pain."
                    },
                    {
                        "fol": "\u00acp_8(Hailey)",
                        "nl": "Hailey does not lack empathy."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> (p_11(x) & p_10(x)))",
                    "-(p_9(Hailey) <-> p_10(Hailey))",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_8(x))",
                    "all x (unp_4(x) -> p_6(x))",
                    "-(p_4(Hailey) <-> unp_4(Hailey))",
                    "-p_6(Hailey)",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 2,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
                "p_9(Hailey) \u2295 p_10(Hailey)",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x ((p_6(x) \u2295 p_7(x)) \u2192 p_8(x))",
                "p_4(Hailey) \u2295 unp_4(Hailey)",
                "\u00acp_6(Hailey)",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 unp_4(x))"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All nurturing humans give support and show empathy.",
                "Hailey is either insensitive or shows empathy, but not both.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "If someone either hurts others or causes pain, then they lack empathy.",
                "Hailey is either caring or uncaring, but not both.",
                "Hailey does not hurt others.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy.",
                "Anyone who does not hurt others is uncaring."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x (unp_4(x) \u2192 p_6(x))",
                        "nl": "Anyone who is uncaring will hurt others."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
                        "nl": "Anyone who does not hurt others is uncaring."
                    }
                ]
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> (p_11(x) & p_10(x)))",
                    "-(p_9(Hailey) <-> p_10(Hailey))",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (-(p_6(x) <-> p_7(x)) -> p_8(x))",
                    "-(p_4(Hailey) <-> unp_4(Hailey))",
                    "-p_6(Hailey)",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))"
                ],
                "formulas(goals)": [
                    "-p_4(Hailey)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 3,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (p_3(x) \u2192 (p_11(x) \u2227 p_10(x)))",
                "p_9(Hailey) \u2228 p_10(Hailey)",
                "\u00ac(p_9(Hailey) \u2227 p_10(Hailey))",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
                "\u00ac(p_6(x) \u2227 p_7(x))",
                "p_4(Hailey) \u2228 unp_4(Hailey)",
                "\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
                "\u2200x (p_3(x) \u2192 p_6(x))",
                "\u2200x (p_6(x) \u2192 p_4(x))"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All nurturing humans give support and show empathy.",
                "Hailey is insensitive or shows empathy.",
                "Hailey is not both insensitive and showing empathy.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "Anyone who hurts others or causes pain lacks empathy.",
                "No one both hurts others and causes pain.",
                "Hailey is caring or uncaring.",
                "Hailey is not both caring and uncaring.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy.",
                "Anyone who does not hurt others is uncaring.",
                "All nurturing humans hurt others.",
                "Anyone who hurts others is caring."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "\u00acp_6(Hailey)",
                        "nl": "Hailey does not hurt others."
                    }
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x (p_3(x) \u2192 p_6(x))",
                        "nl": "All nurturing humans hurt others."
                    },
                    {
                        "fol": "\u2200x (p_6(x) \u2192 p_4(x))",
                        "nl": "Anyone who hurts others is caring."
                    }
                ]
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey).",
                    "-p_0(Hailey).",
                    "-p_2(Hailey).",
                    "-p_1(Hailey).",
                    "all x (p_3(x) -> (p_11(x) & p_10(x))).",
                    "p_9(Hailey) | p_10(Hailey).",
                    "-(p_9(Hailey) & p_10(Hailey)).",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x)).",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x)).",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x)).",
                    "-(p_6(x) & p_7(x)).",
                    "p_4(Hailey) | unp_4(Hailey).",
                    "-(p_4(Hailey) & unp_4(Hailey)).",
                    "-p_7(Hailey).",
                    "-p_8(Hailey).",
                    "all x (-p_6(x) -> unp_4(x)).",
                    "all x (p_3(x) -> p_6(x)).",
                    "all x (p_6(x) -> p_4(x))."
                ],
                "formulas(goals)": [
                    "p_4(Hailey)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (p_3(x) \u2192 p_11(x))",
                "\u2200x (p_3(x) \u2192 p_10(x))",
                "p_9(Hailey) \u2228 p_10(Hailey)",
                "\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
                "\u00ac(p_6(x) \u2227 p_7(x))",
                "p_4(Hailey) \u2228 unp_4(Hailey)",
                "\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
                "\u2200x (p_3(x) \u2192 p_6(x))",
                "\u2200x (p_6(x) \u2192 p_4(x))",
                "p_6(Hailey)",
                "p_10(Hailey)",
                "p_11(Hailey)",
                "\u00acp_9(Hailey)",
                "unp_4(Hailey) \u2192 \u00acp_4(Hailey)",
                "p_4(Hailey) \u2192 \u00acunp_4(Hailey)"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All nurturing humans give support.",
                "All nurturing humans show empathy.",
                "Hailey is insensitive or shows empathy.",
                "Hailey is not insensitive or she does not show empathy.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "Anyone who hurts others or causes pain lacks empathy.",
                "No one both hurts others and causes pain.",
                "Hailey is caring or uncaring.",
                "Hailey is not both caring and uncaring.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy.",
                "Anyone who does not hurt others is uncaring.",
                "All nurturing humans hurt others.",
                "Anyone who hurts others is caring.",
                "Hailey hurts others.",
                "Hailey shows empathy.",
                "Hailey gives support.",
                "Hailey is not insensitive.",
                "If Hailey is uncaring, then she is not caring.",
                "If Hailey is caring, then she is not uncaring."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_6(Hailey)",
                        "nl": "Hailey hurts others."
                    },
                    {
                        "fol": "p_10(Hailey)",
                        "nl": "Hailey shows empathy."
                    },
                    {
                        "fol": "p_11(Hailey)",
                        "nl": "Hailey gives support."
                    },
                    {
                        "fol": "\u00acp_9(Hailey)",
                        "nl": "Hailey is not insensitive."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (p_3(x) \u2192 p_11(x))",
                        "nl": "All nurturing humans give support."
                    },
                    {
                        "fol": "\u2200x (p_3(x) \u2192 p_10(x))",
                        "nl": "All nurturing humans show empathy."
                    },
                    {
                        "fol": "\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)",
                        "nl": "Hailey is not insensitive or she does not show empathy."
                    },
                    {
                        "fol": "unp_4(Hailey) \u2192 \u00acp_4(Hailey)",
                        "nl": "If Hailey is uncaring, then she is not caring."
                    },
                    {
                        "fol": "p_4(Hailey) \u2192 \u00acunp_4(Hailey)",
                        "nl": "If Hailey is caring, then she is not uncaring."
                    }
                ]
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey).",
                    "-p_0(Hailey).",
                    "-p_2(Hailey).",
                    "-p_1(Hailey).",
                    "all x (p_3(x) -> p_11(x)).",
                    "all x (p_3(x) -> p_10(x)).",
                    "p_9(Hailey) | p_10(Hailey).",
                    "-p_9(Hailey) | -p_10(Hailey).",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x)).",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x)).",
                    "all x ((p_6(x) | p_7(x)) -> p_8(x)).",
                    "-(p_6(x) & p_7(x)).",
                    "p_4(Hailey) | unp_4(Hailey).",
                    "-(p_4(Hailey) & unp_4(Hailey)).",
                    "-p_7(Hailey).",
                    "-p_8(Hailey).",
                    "all x (-p_6(x) -> unp_4(x)).",
                    "all x (p_3(x) -> p_6(x)).",
                    "all x (p_6(x) -> p_4(x)).",
                    "p_6(Hailey).",
                    "p_10(Hailey).",
                    "p_11(Hailey).",
                    "-p_9(Hailey).",
                    "unp_4(Hailey) -> -p_4(Hailey).",
                    "p_4(Hailey) -> -unp_4(Hailey)."
                ],
                "formulas(goals)": [
                    "p_4(Hailey)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (p_3(x) \u2192 p_11(x))",
                "\u2200x (p_3(x) \u2192 p_10(x))",
                "p_9(Hailey) \u2228 p_10(Hailey)",
                "\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x (p_7(x) \u2192 p_8(x))",
                "\u00ac(p_6(x) \u2227 p_7(x))",
                "p_4(Hailey) \u2228 unp_4(Hailey)",
                "\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
                "\u2200x (p_3(x) \u2192 p_6(x))",
                "\u2200x (p_6(x) \u2192 p_4(x))",
                "p_6(Hailey)",
                "p_10(Hailey)",
                "p_11(Hailey)",
                "\u00acp_9(Hailey)",
                "unp_4(Hailey) \u2192 \u00acp_4(Hailey)",
                "p_4(Hailey) \u2192 \u00acunp_4(Hailey)"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All nurturing humans give support.",
                "All nurturing humans show empathy.",
                "Hailey is insensitive or shows empathy.",
                "Hailey is not insensitive or she does not show empathy.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "Anyone who causes pain lacks empathy.",
                "No one both hurts others and causes pain.",
                "Hailey is caring or uncaring.",
                "Hailey is not both caring and uncaring.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy.",
                "Anyone who does not hurt others is uncaring.",
                "All nurturing humans hurt others.",
                "Anyone who hurts others is caring.",
                "Hailey hurts others.",
                "Hailey shows empathy.",
                "Hailey gives support.",
                "Hailey is not insensitive.",
                "If Hailey is uncaring, then she is not caring.",
                "If Hailey is caring, then she is not uncaring."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_6(x) \u2228 p_7(x)) \u2192 p_8(x))",
                        "nl": "Anyone who hurts others or causes pain lacks empathy."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x (p_7(x) \u2192 p_8(x))",
                        "nl": "Anyone who causes pain lacks empathy."
                    }
                ]
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> p_11(x))",
                    "all x (p_3(x) -> p_10(x))",
                    "p_9(Hailey) | p_10(Hailey)",
                    "-p_9(Hailey) | -p_10(Hailey)",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "-(p_6(x) & p_7(x))",
                    "p_4(Hailey) | unp_4(Hailey)",
                    "-(p_4(Hailey) & unp_4(Hailey))",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))",
                    "all x (p_3(x) -> p_6(x))",
                    "all x (p_6(x) -> p_4(x))",
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "-p_9(Hailey)",
                    "unp_4(Hailey) -> -p_4(Hailey)",
                    "p_4(Hailey) -> -unp_4(Hailey)"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (p_3(x) \u2192 p_11(x))",
                "\u2200x (p_3(x) \u2192 p_10(x))",
                "p_9(Hailey) \u2228 p_10(Hailey)",
                "\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x (p_7(x) \u2192 p_8(x))",
                "\u2200x (\u00acp_6(x) \u2228 \u00acp_7(x))",
                "p_4(Hailey) \u2228 unp_4(Hailey)",
                "\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
                "\u2200x (p_3(x) \u2192 p_6(x))",
                "\u2200x (p_6(x) \u2192 p_4(x))",
                "p_6(Hailey)",
                "p_10(Hailey)",
                "p_11(Hailey)",
                "\u00acp_9(Hailey)",
                "unp_4(Hailey) \u2192 \u00acp_4(Hailey)",
                "p_4(Hailey) \u2192 \u00acunp_4(Hailey)",
                "p_4(Hailey)",
                "p_6(Hailey) \u2192 p_4(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 \u00acp_3(x))",
                "\u2200x (\u00acp_4(x) \u2192 \u00acp_6(x))"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All nurturing humans give support.",
                "All nurturing humans show empathy.",
                "Hailey is insensitive or shows empathy.",
                "Hailey is not insensitive or she does not show empathy.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "Anyone who causes pain lacks empathy.",
                "For all x, either x does not hurt others or x does not cause pain.",
                "Hailey is caring or uncaring.",
                "Hailey is not both caring and uncaring.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy.",
                "Anyone who does not hurt others is uncaring.",
                "All nurturing humans hurt others.",
                "Anyone who hurts others is caring.",
                "Hailey hurts others.",
                "Hailey shows empathy.",
                "Hailey gives support.",
                "Hailey is not insensitive.",
                "If Hailey is uncaring, then she is not caring.",
                "If Hailey is caring, then she is not uncaring.",
                "Hailey is caring.",
                "If Hailey hurts others, then she is caring.",
                "Anyone who does not hurt others is not nurturing.",
                "Anyone who is not caring does not hurt others."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_4(Hailey)",
                        "nl": "Hailey is caring."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (\u00acp_6(x) \u2228 \u00acp_7(x))",
                        "nl": "For all x, either x does not hurt others or x does not cause pain."
                    },
                    {
                        "fol": "p_6(Hailey) \u2192 p_4(Hailey)",
                        "nl": "If Hailey hurts others, then she is caring."
                    },
                    {
                        "fol": "\u2200x (\u00acp_6(x) \u2192 \u00acp_3(x))",
                        "nl": "Anyone who does not hurt others is not nurturing."
                    },
                    {
                        "fol": "\u2200x (\u00acp_4(x) \u2192 \u00acp_6(x))",
                        "nl": "Anyone who is not caring does not hurt others."
                    }
                ]
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (p_3(x) -> p_11(x))",
                    "all x (p_3(x) -> p_10(x))",
                    "p_9(Hailey) | p_10(Hailey)",
                    "-p_9(Hailey) | -p_10(Hailey)",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (-p_6(x) | -p_7(x))",
                    "p_4(Hailey) | unp_4(Hailey)",
                    "-(p_4(Hailey) & unp_4(Hailey))",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))",
                    "all x (p_3(x) -> p_6(x))",
                    "all x (p_6(x) -> p_4(x))",
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "-p_9(Hailey)",
                    "unp_4(Hailey) -> -p_4(Hailey)",
                    "p_4(Hailey) -> -unp_4(Hailey)",
                    "p_4(Hailey)",
                    "p_6(Hailey) -> p_4(Hailey)",
                    "all x (-p_6(x) -> -p_3(x))",
                    "all x (-p_4(x) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Hailey)",
                "\u00acp_0(Hailey)",
                "\u00acp_2(Hailey)",
                "\u00acp_1(Hailey)",
                "\u2200x (\u00acp_3(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_3(x) \u2228 p_10(x))",
                "p_9(Hailey) \u2228 p_10(Hailey)",
                "\u00acp_9(Hailey) \u2228 \u00acp_10(Hailey)",
                "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_0(x))",
                "\u2200x ((p_7(x) \u2228 p_2(x)) \u2192 p_1(x))",
                "\u2200x (p_7(x) \u2192 p_8(x))",
                "\u2200x (\u00acp_6(x) \u2228 \u00acp_7(x))",
                "p_4(Hailey) \u2228 unp_4(Hailey)",
                "\u00ac(p_4(Hailey) \u2227 unp_4(Hailey))",
                "\u00acp_7(Hailey)",
                "\u00acp_8(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 unp_4(x))",
                "\u2200x (p_3(x) \u2192 p_6(x))",
                "\u2200x (p_6(x) \u2192 p_4(x))",
                "p_6(Hailey)",
                "p_10(Hailey)",
                "p_11(Hailey)",
                "\u00acp_9(Hailey)",
                "unp_4(Hailey) \u2192 \u00acp_4(Hailey)",
                "p_4(Hailey) \u2192 \u00acunp_4(Hailey)",
                "p_4(Hailey)",
                "\u00acp_6(Hailey) \u2228 p_4(Hailey)",
                "\u2200x (\u00acp_6(x) \u2192 \u00acp_3(x))",
                "\u2200x (\u00acp_4(x) \u2192 \u00acp_6(x))",
                "p_4(Hailey) \u2228 \u00acp_4(Hailey)",
                "\u00acunp_4(Hailey)"
            ],
            "edited_natural_language_context": [
                "Hailey is nurturing.",
                "Hailey does not lose patients.",
                "Hailey does not create fear.",
                "Hailey does not lose the trust of her patients.",
                "All humans who are not nurturing give support.",
                "All humans who are not nurturing show empathy.",
                "Hailey is insensitive or shows empathy.",
                "Hailey is not insensitive or she does not show empathy.",
                "Any person who lacks empathy or is insensitive will lose patients.",
                "Anyone who causes pain or creates fear will lose the trust of others.",
                "Anyone who causes pain lacks empathy.",
                "For all x, either x does not hurt others or x does not cause pain.",
                "Hailey is caring or uncaring.",
                "Hailey is not both caring and uncaring.",
                "Hailey does not cause pain.",
                "Hailey does not lack empathy.",
                "Anyone who does not hurt others is uncaring.",
                "All nurturing humans hurt others.",
                "Anyone who hurts others is caring.",
                "Hailey hurts others.",
                "Hailey shows empathy.",
                "Hailey gives support.",
                "Hailey is not insensitive.",
                "If Hailey is uncaring, then she is not caring.",
                "If Hailey is caring, then she is not uncaring.",
                "Hailey is caring.",
                "Hailey does not hurt others or Hailey is caring.",
                "Anyone who does not hurt others is not nurturing.",
                "Anyone who is not caring does not hurt others.",
                "Hailey is caring or Hailey is not caring.",
                "Hailey is not uncaring."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_4(Hailey) \u2228 \u00acp_4(Hailey)",
                        "nl": "Hailey is caring or Hailey is not caring."
                    },
                    {
                        "fol": "\u00acunp_4(Hailey)",
                        "nl": "Hailey is not uncaring."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Hailey is caring.",
            "conclusion_fol": "p_4(Hailey)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Hailey)",
                    "-p_0(Hailey)",
                    "-p_2(Hailey)",
                    "-p_1(Hailey)",
                    "all x (-p_3(x) | p_11(x))",
                    "all x (-p_3(x) | p_10(x))",
                    "p_9(Hailey) | p_10(Hailey)",
                    "-p_9(Hailey) | -p_10(Hailey)",
                    "all x ((p_8(x) | p_9(x)) -> p_0(x))",
                    "all x ((p_7(x) | p_2(x)) -> p_1(x))",
                    "all x (p_7(x) -> p_8(x))",
                    "all x (-p_6(x) | -p_7(x))",
                    "p_4(Hailey) | unp_4(Hailey)",
                    "-(p_4(Hailey) & unp_4(Hailey))",
                    "-p_7(Hailey)",
                    "-p_8(Hailey)",
                    "all x (-p_6(x) -> unp_4(x))",
                    "all x (p_3(x) -> p_6(x))",
                    "all x (p_6(x) -> p_4(x))",
                    "p_6(Hailey)",
                    "p_10(Hailey)",
                    "p_11(Hailey)",
                    "-p_9(Hailey)",
                    "unp_4(Hailey) -> -p_4(Hailey)",
                    "p_4(Hailey) -> -unp_4(Hailey)",
                    "p_4(Hailey)",
                    "-p_6(Hailey) | p_4(Hailey)",
                    "all x (-p_6(x) -> -p_3(x))",
                    "all x (-p_4(x) -> -p_6(x))",
                    "p_4(Hailey) | -p_4(Hailey)",
                    "-unp_4(Hailey)"
                ],
                "formulas(goals)": [
                    "p_4(Hailey)"
                ]
            },
            "answer": "True"
        }
    ]
}