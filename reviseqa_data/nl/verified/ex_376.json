{
  "original_context": [
    "Imran is motivated.",
    "Imran creates plans.",
    "Imran does not work hard.",
    "Imran tracks progress.",
    "If someone is motivated, then they create plans and set goals.",
    "Imran either has discipline or works hard.",
    "If Imran sets goals and tracks progress, then he gets results.",
    "If Imran stays fit, then he either has discipline or gets results, but not both.",
    "If a person eats healthy, then they stay fit.",
    "Imran either eats healthy or exercises regularly (or both)."
  ],
  "original_context_fol": [
    "p_2(Imran)",
    "p_3(Imran)",
    "\u00acp_1(Imran)",
    "p_0(Imran)",
    "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))",
    "p_7(Imran) \u2228 p_1(Imran)",
    "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
    "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
    "\u2200x (p_4(x) \u2192 p_6(x))",
    "p_4(Imran) \u2228 p_5(Imran)"
  ],
  "conclusion": "Imran exercises regularly.",
  "conclusion_fol": "p_5(Imran)",
  "answer": "True",
  "reasoning_chain": [
    {
      "facts": [
        {
          "id": 2,
          "subject": "Imran",
          "text": "Imran is motivated.",
          "fol": "p_2(Imran)",
          "str_fol": "is_motivated(Imran)",
          "negation": false
        },
        {
          "id": 3,
          "subject": "Imran",
          "text": "Imran creates plans.",
          "fol": "p_3(Imran)",
          "str_fol": "creates_plans(Imran)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 5,
          "text": "If someone is motivated, then they create plans and set goals.",
          "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))",
          "str_fol": "\u2200x (is_motivated(x) \u2192 (creates_plans(x) \u2227 sets_goals(x)))"
        }
      ],
      "conclusion": {
        "id": 4,
        "subject": "Imran",
        "text": "Imran sets goals.",
        "fol": "p_9(Imran)",
        "str_fol": "sets_goals(Imran)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 1,
          "subject": "Imran",
          "text": "Imran does not work hard.",
          "fol": "\u00acp_1(Imran)",
          "str_fol": "\u00acworks_hard(Imran)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 4,
          "text": "Imran either has discipline or works hard.",
          "fol": "p_7(Imran) \u2228 p_1(Imran)",
          "str_fol": "has_discipline(Imran) \u2228 works_hard(Imran)"
        }
      ],
      "conclusion": {
        "id": 5,
        "subject": "Imran",
        "text": "Imran has discipline.",
        "fol": "p_7(Imran)",
        "str_fol": "has_discipline(Imran)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 4,
          "subject": "Imran",
          "text": "Imran sets goals.",
          "fol": "p_9(Imran)",
          "str_fol": "sets_goals(Imran)",
          "negation": false
        },
        {
          "id": 0,
          "subject": "Imran",
          "text": "Imran tracks progress.",
          "fol": "p_0(Imran)",
          "str_fol": "tracks_progress(Imran)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 3,
          "text": "If Imran sets goals and tracks progress, then he gets results.",
          "fol": "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
          "str_fol": "(sets_goals(Imran) \u2227 tracks_progress(Imran)) \u2192 gets_results(Imran)"
        }
      ],
      "conclusion": {
        "id": 6,
        "subject": "Imran",
        "text": "Imran gets results.",
        "fol": "p_8(Imran)",
        "str_fol": "gets_results(Imran)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 5,
          "subject": "Imran",
          "text": "Imran has discipline.",
          "fol": "p_7(Imran)",
          "str_fol": "has_discipline(Imran)",
          "negation": false
        },
        {
          "id": 6,
          "subject": "Imran",
          "text": "Imran gets results.",
          "fol": "p_8(Imran)",
          "str_fol": "gets_results(Imran)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 2,
          "text": "If Imran stays fit, then he either has discipline or gets results, but not both.",
          "fol": "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
          "str_fol": "stays_fit(Imran) \u2192 (has_discipline(Imran) \u2295 gets_results(Imran))"
        }
      ],
      "conclusion": {
        "id": 7,
        "subject": "Imran",
        "text": "Imran does not stay fit.",
        "fol": "\u00acp_6(Imran)",
        "str_fol": "\u00acstays_fit(Imran)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 7,
          "subject": "Imran",
          "text": "Imran does not stay fit.",
          "fol": "\u00acp_6(Imran)",
          "str_fol": "\u00acstays_fit(Imran)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 1,
          "text": "If a person eats healthy, then they stay fit.",
          "fol": "\u2200x (p_4(x) \u2192 p_6(x))",
          "str_fol": "\u2200x (eats_healthy(x) \u2192 stays_fit(x))"
        }
      ],
      "conclusion": {
        "id": 8,
        "subject": "Imran",
        "text": "Imran does not eat healthy.",
        "fol": "\u00acp_4(Imran)",
        "str_fol": "\u00aceats_healthy(Imran)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 8,
          "subject": "Imran",
          "text": "Imran does not eat healthy.",
          "fol": "\u00acp_4(Imran)",
          "str_fol": "\u00aceats_healthy(Imran)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 0,
          "text": "Imran either eats healthy or exercises regularly (or both).",
          "fol": "p_4(Imran) \u2228 p_5(Imran)",
          "str_fol": "eats_healthy(Imran) \u2228 exercises_regularly(Imran)"
        }
      ],
      "conclusion": {
        "id": 9,
        "subject": "Imran",
        "text": "Imran exercises regularly.",
        "fol": "p_5(Imran)",
        "str_fol": "exercises_regularly(Imran)",
        "negation": false
      }
    }
  ],
  "edits": [
    {
      "edit_number": 1,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
        "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u2200x (p_4(x) \u2192 \u00acp_5(x))"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals and tracks progress, then he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "If someone eats healthy, then they do not exercise regularly."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 p_9(x)))",
            "nl": "If someone is motivated, then they create plans and set goals."
          }
        ],
        "added_facts": [
          {
            "fol": "p_4(Imran)",
            "nl": "Imran eats healthy."
          }
        ],
        "added_rules": [
          {
            "fol": "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
            "nl": "If someone is motivated, then they create plans and do not set goals."
          },
          {
            "fol": "\u2200x (p_4(x) \u2192 \u00acp_5(x))",
            "nl": "If someone eats healthy, then they do not exercise regularly."
          }
        ]
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran)",
          "p_3(Imran)",
          "-p_1(Imran)",
          "p_0(Imran)",
          "all x (p_2(x) -> (p_3(x) & -p_9(x)))",
          "p_7(Imran) | p_1(Imran)",
          "(p_9(Imran) & p_0(Imran)) -> p_8(Imran)",
          "p_6(Imran) -> (-(p_7(Imran) <-> p_8(Imran)))",
          "all x (p_4(x) -> p_6(x))",
          "p_4(Imran) | p_5(Imran)",
          "p_4(Imran)",
          "all x (p_4(x) -> -p_5(x))"
        ],
        "formulas(goals)": [
          "-p_5(Imran)"
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All FOL statements correspond accurately to their English statements."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 2,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
        "p_6(Imran) \u2192 (p_7(Imran) \u2295 p_8(Imran))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u2200x (p_4(x) \u2192 \u00acp_5(x))",
        "\u00acp_9(Imran)",
        "p_0(Imran) \u2228 \u00acp_0(Imran)",
        "\u2200x (p_5(x) \u2192 \u00acp_4(x))",
        "p_4(Imran) \u2228 p_9(Imran)"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals, then if he tracks progress, he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "If someone eats healthy, then they do not exercise regularly.",
        "Imran does not set goals.",
        "Either Imran tracks progress or Imran does not track progress.",
        "If someone exercises regularly, then they do not eat healthy.",
        "Either Imran eats healthy or Imran sets goals."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "(p_9(Imran) \u2227 p_0(Imran)) \u2192 p_8(Imran)",
            "nl": "If Imran sets goals and tracks progress, then he gets results."
          }
        ],
        "added_facts": [
          {
            "fol": "\u00acp_9(Imran)",
            "nl": "Imran does not set goals."
          },
          {
            "fol": "p_0(Imran) \u2228 \u00acp_0(Imran)",
            "nl": "Either Imran tracks progress or Imran does not track progress."
          },
          {
            "fol": "p_4(Imran) \u2228 p_9(Imran)",
            "nl": "Either Imran eats healthy or Imran sets goals."
          }
        ],
        "added_rules": [
          {
            "fol": "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
            "nl": "If Imran sets goals, then if he tracks progress, he gets results."
          },
          {
            "fol": "\u2200x (p_5(x) \u2192 \u00acp_4(x))",
            "nl": "If someone exercises regularly, then they do not eat healthy."
          }
        ]
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran).",
          "p_3(Imran).",
          "-p_1(Imran).",
          "p_0(Imran).",
          "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
          "p_7(Imran) | p_1(Imran).",
          "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
          "p_6(Imran) -> (-(p_7(Imran) <-> p_8(Imran))).",
          "all x (p_4(x) -> p_6(x)).",
          "p_4(Imran) | p_5(Imran).",
          "p_4(Imran).",
          "all x (p_4(x) -> -p_5(x)).",
          "-p_9(Imran).",
          "p_0(Imran) | -p_0(Imran).",
          "all x (p_5(x) -> -p_4(x)).",
          "p_4(Imran) | p_9(Imran)."
        ],
        "formulas(goals)": [
          "-p_5(Imran)."
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None of the mappings are incorrect; all FOL statements correctly correspond to their associated natural language statements."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 3,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
        "p_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u2200x (p_4(x) \u2192 \u00acp_5(x))",
        "\u00acp_9(Imran)",
        "p_0(Imran) \u2228 \u00acp_0(Imran)",
        "\u2200x (p_5(x) \u2192 \u00acp_4(x))",
        "p_4(Imran) \u2228 p_9(Imran)",
        "p_7(Imran)",
        "p_6(Imran)",
        "\u00acp_8(Imran)"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals, then if he tracks progress, he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "If someone eats healthy, then they do not exercise regularly.",
        "Imran does not set goals.",
        "Either Imran tracks progress or Imran does not track progress.",
        "If someone exercises regularly, then they do not eat healthy.",
        "Either Imran eats healthy or Imran sets goals.",
        "Imran has discipline.",
        "Imran stays fit.",
        "Imran does not get results."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_7(Imran)",
            "nl": "Imran has discipline."
          },
          {
            "fol": "p_6(Imran)",
            "nl": "Imran stays fit."
          },
          {
            "fol": "\u00acp_8(Imran)",
            "nl": "Imran does not get results."
          }
        ],
        "added_rules": []
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran).",
          "p_3(Imran).",
          "-p_1(Imran).",
          "p_0(Imran).",
          "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
          "p_7(Imran) | p_1(Imran).",
          "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
          "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & (-(p_7(Imran) & p_8(Imran)))).",
          "all x (p_4(x) -> p_6(x)).",
          "p_4(Imran) | p_5(Imran).",
          "p_4(Imran).",
          "all x (p_4(x) -> -p_5(x)).",
          "-p_9(Imran).",
          "p_0(Imran) | -p_0(Imran).",
          "all x (p_5(x) -> -p_4(x)).",
          "p_4(Imran) | p_9(Imran).",
          "p_7(Imran).",
          "p_6(Imran).",
          "-p_8(Imran)."
        ],
        "formulas(goals)": [
          "-p_5(Imran)."
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. Every FOL statement corresponds correctly to its natural language equivalent, according to the variable mappings provided."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 4,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
        "p_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u00acp_9(Imran)",
        "p_0(Imran) \u2228 \u00acp_0(Imran)",
        "p_4(Imran) \u2228 p_9(Imran)",
        "p_7(Imran)",
        "p_6(Imran)",
        "\u00acp_8(Imran)",
        "\u00acp_4(Imran) \u2228 p_5(Imran)"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals, then if he tracks progress, he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "Imran does not set goals.",
        "Either Imran tracks progress or Imran does not track progress.",
        "Either Imran eats healthy or Imran sets goals.",
        "Imran has discipline.",
        "Imran stays fit.",
        "Imran does not get results.",
        "Either Imran does not eat healthy or Imran exercises regularly."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "\u2200x (p_4(x) \u2192 \u00acp_5(x))",
            "nl": "If someone eats healthy, then they do not exercise regularly."
          },
          {
            "fol": "\u2200x (p_5(x) \u2192 \u00acp_4(x))",
            "nl": "If someone exercises regularly, then they do not eat healthy."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "\u00acp_4(Imran) \u2228 p_5(Imran)",
            "nl": "Either Imran does not eat healthy or Imran exercises regularly."
          }
        ]
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran).",
          "p_3(Imran).",
          "-p_1(Imran).",
          "p_0(Imran).",
          "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
          "p_7(Imran) | p_1(Imran).",
          "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
          "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & -(p_7(Imran) & p_8(Imran))).",
          "all x (p_4(x) -> p_6(x)).",
          "p_4(Imran) | p_5(Imran).",
          "p_4(Imran).",
          "-p_9(Imran).",
          "p_0(Imran) | -p_0(Imran).",
          "p_4(Imran) | p_9(Imran).",
          "p_7(Imran).",
          "p_6(Imran).",
          "-p_8(Imran).",
          "-p_4(Imran) | p_5(Imran)."
        ],
        "formulas(goals)": [
          "p_5(Imran)."
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None."
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None found; all FOL statements match the natural language statements correctly."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 5,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
        "p_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u00acp_9(Imran)",
        "p_0(Imran) \u2228 \u00acp_0(Imran)",
        "p_4(Imran) \u2228 p_9(Imran)",
        "p_7(Imran)",
        "p_6(Imran)",
        "\u00acp_8(Imran)",
        "\u00acp_4(Imran) \u2228 p_5(Imran)",
        "p_5(Imran)",
        "p_2(Imran) \u2192 p_3(Imran)",
        "p_2(Imran) \u2192 \u00acp_9(Imran)",
        "p_4(Imran) \u2192 p_6(Imran)",
        "p_5(Imran) \u2228 p_9(Imran)"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals, then if he tracks progress, he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "Imran does not set goals.",
        "Either Imran tracks progress or Imran does not track progress.",
        "Either Imran eats healthy or Imran sets goals.",
        "Imran has discipline.",
        "Imran stays fit.",
        "Imran does not get results.",
        "Either Imran does not eat healthy or Imran exercises regularly.",
        "Imran exercises regularly.",
        "If Imran is motivated, then he creates plans.",
        "If Imran is motivated, then he does not set goals.",
        "If Imran eats healthy, then he stays fit.",
        "Either Imran exercises regularly or Imran sets goals."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_5(Imran)",
            "nl": "Imran exercises regularly."
          }
        ],
        "added_rules": [
          {
            "fol": "p_2(Imran) \u2192 p_3(Imran)",
            "nl": "If Imran is motivated, then he creates plans."
          },
          {
            "fol": "p_2(Imran) \u2192 \u00acp_9(Imran)",
            "nl": "If Imran is motivated, then he does not set goals."
          },
          {
            "fol": "p_4(Imran) \u2192 p_6(Imran)",
            "nl": "If Imran eats healthy, then he stays fit."
          },
          {
            "fol": "p_5(Imran) \u2228 p_9(Imran)",
            "nl": "Either Imran exercises regularly or Imran sets goals."
          }
        ]
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran)",
          "p_3(Imran)",
          "-p_1(Imran)",
          "p_0(Imran)",
          "all x (p_2(x) -> (p_3(x) & -p_9(x)))",
          "p_7(Imran) | p_1(Imran)",
          "p_9(Imran) -> (p_0(Imran) -> p_8(Imran))",
          "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & -(p_7(Imran) & p_8(Imran)))",
          "all x (p_4(x) -> p_6(x))",
          "p_4(Imran) | p_5(Imran)",
          "p_4(Imran)",
          "-p_9(Imran)",
          "p_0(Imran) | -p_0(Imran)",
          "p_4(Imran) | p_9(Imran)",
          "p_7(Imran)",
          "p_6(Imran)",
          "-p_8(Imran)",
          "-p_4(Imran) | p_5(Imran)",
          "p_5(Imran)",
          "p_2(Imran) -> p_3(Imran)",
          "p_2(Imran) -> -p_9(Imran)",
          "p_4(Imran) -> p_6(Imran)",
          "p_5(Imran) | p_9(Imran)"
        ],
        "formulas(goals)": [
          "p_5(Imran)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None: All FOL statements correctly represent the corresponding natural language statements."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 6,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
        "p_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u00acp_9(Imran)",
        "p_0(Imran) \u2228 \u00acp_0(Imran)",
        "p_4(Imran) \u2228 p_9(Imran)",
        "p_7(Imran)",
        "p_6(Imran)",
        "\u00acp_8(Imran)",
        "\u00acp_4(Imran) \u2228 p_5(Imran)",
        "p_5(Imran)",
        "p_2(Imran) \u2192 p_3(Imran)",
        "p_2(Imran) \u2192 \u00acp_9(Imran)",
        "p_4(Imran) \u2192 p_6(Imran)",
        "p_5(Imran) \u2228 p_9(Imran)",
        "p_6(Imran) \u2228 \u00acp_4(Imran)",
        "\u00acp_9(Imran) \u2228 \u00acp_0(Imran) \u2228 p_8(Imran)",
        "p_3(Imran) \u2227 \u00acp_9(Imran)",
        "p_3(Imran)"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals, then if he tracks progress, he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "Imran does not set goals.",
        "Either Imran tracks progress or Imran does not track progress.",
        "Either Imran eats healthy or Imran sets goals.",
        "Imran has discipline.",
        "Imran stays fit.",
        "Imran does not get results.",
        "Either Imran does not eat healthy or Imran exercises regularly.",
        "Imran exercises regularly.",
        "If Imran is motivated, then he creates plans.",
        "If Imran is motivated, then he does not set goals.",
        "If Imran eats healthy, then he stays fit.",
        "Either Imran exercises regularly or Imran sets goals.",
        "Either Imran stays fit or Imran does not eat healthy.",
        "Either Imran does not set goals, or Imran does not track progress, or Imran gets results.",
        "Imran creates plans and does not set goals.",
        "Imran creates plans."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_6(Imran) \u2228 \u00acp_4(Imran)",
            "nl": "Either Imran stays fit or Imran does not eat healthy."
          },
          {
            "fol": "\u00acp_9(Imran) \u2228 \u00acp_0(Imran) \u2228 p_8(Imran)",
            "nl": "Either Imran does not set goals, or Imran does not track progress, or Imran gets results."
          },
          {
            "fol": "p_3(Imran) \u2227 \u00acp_9(Imran)",
            "nl": "Imran creates plans and does not set goals."
          },
          {
            "fol": "p_3(Imran)",
            "nl": "Imran creates plans."
          }
        ],
        "added_rules": []
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran)",
          "p_3(Imran)",
          "-p_1(Imran)",
          "p_0(Imran)",
          "all x (p_2(x) -> (p_3(x) & -p_9(x)))",
          "p_7(Imran) | p_1(Imran)",
          "p_9(Imran) -> (p_0(Imran) -> p_8(Imran))",
          "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & -(p_7(Imran) & p_8(Imran)))",
          "all x (p_4(x) -> p_6(x))",
          "p_4(Imran) | p_5(Imran)",
          "p_4(Imran)",
          "-p_9(Imran)",
          "p_0(Imran) | -p_0(Imran)",
          "p_4(Imran) | p_9(Imran)",
          "p_7(Imran)",
          "p_6(Imran)",
          "-p_8(Imran)",
          "-p_4(Imran) | p_5(Imran)",
          "p_5(Imran)",
          "p_2(Imran) -> p_3(Imran)",
          "p_2(Imran) -> -p_9(Imran)",
          "p_4(Imran) -> p_6(Imran)",
          "p_5(Imran) | p_9(Imran)",
          "p_6(Imran) | -p_4(Imran)",
          "-p_9(Imran) | -p_0(Imran) | p_8(Imran)",
          "p_3(Imran) & -p_9(Imran)",
          "p_3(Imran)"
        ],
        "formulas(goals)": [
          "p_5(Imran)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. Each mapping is correct per the provided facts."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 7,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_2(Imran)",
        "p_3(Imran)",
        "\u00acp_1(Imran)",
        "p_0(Imran)",
        "\u2200x (p_2(x) \u2192 (p_3(x) \u2227 \u00acp_9(x)))",
        "p_7(Imran) \u2228 p_1(Imran)",
        "p_9(Imran) \u2192 (p_0(Imran) \u2192 p_8(Imran))",
        "p_6(Imran) \u2192 ((p_7(Imran) \u2228 p_8(Imran)) \u2227 \u00ac(p_7(Imran) \u2227 p_8(Imran)))",
        "\u2200x (p_4(x) \u2192 p_6(x))",
        "p_4(Imran) \u2228 p_5(Imran)",
        "p_4(Imran)",
        "\u00acp_9(Imran)",
        "p_0(Imran) \u2228 \u00acp_0(Imran)",
        "p_4(Imran) \u2228 p_9(Imran)",
        "p_7(Imran)",
        "p_6(Imran)",
        "\u00acp_8(Imran)",
        "p_5(Imran) \u2228 p_9(Imran)",
        "p_6(Imran) \u2228 \u00acp_4(Imran)",
        "\u00acp_9(Imran) \u2228 \u00acp_0(Imran) \u2228 p_8(Imran)",
        "p_3(Imran) \u2227 \u00acp_9(Imran)",
        "p_3(Imran)",
        "p_4(Imran) \u2192 \u00acp_5(Imran)"
      ],
      "edited_natural_language_context": [
        "Imran is motivated.",
        "Imran creates plans.",
        "Imran does not work hard.",
        "Imran tracks progress.",
        "If someone is motivated, then they create plans and do not set goals.",
        "Imran either has discipline or works hard.",
        "If Imran sets goals, then if he tracks progress, he gets results.",
        "If Imran stays fit, then he either has discipline or gets results, but not both.",
        "If a person eats healthy, then they stay fit.",
        "Imran either eats healthy or exercises regularly (or both).",
        "Imran eats healthy.",
        "Imran does not set goals.",
        "Either Imran tracks progress or Imran does not track progress.",
        "Either Imran eats healthy or Imran sets goals.",
        "Imran has discipline.",
        "Imran stays fit.",
        "Imran does not get results.",
        "Either Imran exercises regularly or Imran sets goals.",
        "Either Imran stays fit or Imran does not eat healthy.",
        "Either Imran does not set goals, or Imran does not track progress, or Imran gets results.",
        "Imran creates plans and does not set goals.",
        "Imran creates plans.",
        "If Imran eats healthy, then he does not exercise regularly."
      ],
      "edits_made": {
        "removed_facts": [
          {
            "fol": "p_5(Imran)",
            "nl": "Imran exercises regularly."
          }
        ],
        "removed_rules": [
          {
            "fol": "\u00acp_4(Imran) \u2228 p_5(Imran)",
            "nl": "Either Imran does not eat healthy or Imran exercises regularly."
          },
          {
            "fol": "p_2(Imran) \u2192 p_3(Imran)",
            "nl": "If Imran is motivated, then he creates plans."
          },
          {
            "fol": "p_2(Imran) \u2192 \u00acp_9(Imran)",
            "nl": "If Imran is motivated, then he does not set goals."
          },
          {
            "fol": "p_4(Imran) \u2192 p_6(Imran)",
            "nl": "If Imran eats healthy, then he stays fit."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "p_4(Imran) \u2192 \u00acp_5(Imran)",
            "nl": "If Imran eats healthy, then he does not exercise regularly."
          }
        ]
      },
      "conclusion": "Imran exercises regularly.",
      "conclusion_fol": "p_5(Imran)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_2(Imran).",
          "p_3(Imran).",
          "-p_1(Imran).",
          "p_0(Imran).",
          "all x (p_2(x) -> (p_3(x) & -p_9(x))).",
          "p_7(Imran) | p_1(Imran).",
          "p_9(Imran) -> (p_0(Imran) -> p_8(Imran)).",
          "p_6(Imran) -> ((p_7(Imran) | p_8(Imran)) & (-(p_7(Imran) & p_8(Imran)))).",
          "all x (p_4(x) -> p_6(x)).",
          "p_4(Imran) | p_5(Imran).",
          "p_4(Imran).",
          "-p_9(Imran).",
          "p_0(Imran) | -p_0(Imran).",
          "p_4(Imran) | p_9(Imran).",
          "p_7(Imran).",
          "p_6(Imran).",
          "-p_8(Imran).",
          "p_5(Imran) | p_9(Imran).",
          "p_6(Imran) | -p_4(Imran).",
          "-p_9(Imran) | -p_0(Imran) | p_8(Imran).",
          "p_3(Imran) & -p_9(Imran).",
          "p_3(Imran).",
          "p_4(Imran) -> -p_5(Imran)."
        ],
        "formulas(goals)": [
          "-p_5(Imran)."
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. The mapping is correct."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    }
  ]
}