{
  "original_context": [
    "Amanda is patient.",
    "Amanda is attentive.",
    "Amanda is dedicated.",
    "Amanda sets high standards.",
    "Amanda does not respect tradition.",
    "Amanda is a perfectionist.",
    "If Amanda works hard, then she is either patient or attentive (but not both).",
    "Amanda either works hard or is precise in her work.",
    "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
    "If Amanda sets high standards and pursues excellence, then she achieves success.",
    "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
    "Amanda is either creative or a perfectionist, but not both.",
    "If Amanda is either creative or devout (but not both), then she is fulfilled."
  ],
  "original_context_fol": [
    "p_4(Amanda)",
    "p_5(Amanda)",
    "p_3(Amanda)",
    "p_2(Amanda)",
    "\u00acp_0(Amanda)",
    "p_1(Amanda)",
    "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda))",
    "p_12(Amanda) \u2228 p_11(Amanda)",
    "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
    "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
    "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
    "p_6(Amanda) \u2295 p_1(Amanda)",
    "(p_6(Amanda) \u2295 p_7(Amanda)) \u2192 p_8(Amanda)"
  ],
  "conclusion": "Amanda is devout.",
  "conclusion_fol": "p_7(Amanda)",
  "answer": "False",
  "reasoning_chain": [
    {
      "facts": [
        {
          "id": 4,
          "subject": "Amanda",
          "text": "Amanda is patient.",
          "fol": "p_4(Amanda)",
          "str_fol": "is_patient(Amanda)",
          "negation": false
        },
        {
          "id": 5,
          "subject": "Amanda",
          "text": "Amanda is attentive.",
          "fol": "p_5(Amanda)",
          "str_fol": "is_attentive(Amanda)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 6,
          "text": "If Amanda works hard, then she is either patient or attentive (but not both).",
          "fol": "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda))",
          "str_fol": "works_hard(Amanda) \u2192 (is_patient(Amanda) \u2295 is_attentive(Amanda))"
        }
      ],
      "conclusion": {
        "id": 6,
        "subject": "Amanda",
        "text": "Amanda does not work hard.",
        "fol": "\u00acp_12(Amanda)",
        "str_fol": "\u00acworks_hard(Amanda)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 6,
          "subject": "Amanda",
          "text": "Amanda does not work hard.",
          "fol": "\u00acp_12(Amanda)",
          "str_fol": "\u00acworks_hard(Amanda)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 5,
          "text": "Amanda either works hard or is precise in her work.",
          "fol": "p_12(Amanda) \u2228 p_11(Amanda)",
          "str_fol": "works_hard(Amanda) \u2228 is_precise(Amanda)"
        }
      ],
      "conclusion": {
        "id": 7,
        "subject": "Amanda",
        "text": "Amanda is precise in her work.",
        "fol": "p_11(Amanda)",
        "str_fol": "is_precise(Amanda)",
        "negation": false
      }
    },
    {
      "facts": [
        {
          "id": 3,
          "subject": "Amanda",
          "text": "Amanda is dedicated.",
          "fol": "p_3(Amanda)",
          "str_fol": "is_dedicated(Amanda)",
          "negation": false
        },
        {
          "id": 7,
          "subject": "Amanda",
          "text": "Amanda is precise in her work.",
          "fol": "p_11(Amanda)",
          "str_fol": "is_precise(Amanda)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 4,
          "text": "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
          "fol": "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
          "str_fol": "is_dedicated(Amanda) \u2192 (achieves_success(Amanda) \u2295 is_precise(Amanda))"
        }
      ],
      "conclusion": {
        "id": 8,
        "subject": "Amanda",
        "text": "Amanda does not achieve success.",
        "fol": "\u00acp_10(Amanda)",
        "str_fol": "\u00acachieves_success(Amanda)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 2,
          "subject": "Amanda",
          "text": "Amanda sets high standards.",
          "fol": "p_2(Amanda)",
          "str_fol": "sets_high_standards(Amanda)",
          "negation": false
        },
        {
          "id": 8,
          "subject": "Amanda",
          "text": "Amanda does not achieve success.",
          "fol": "\u00acp_10(Amanda)",
          "str_fol": "\u00acachieves_success(Amanda)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 3,
          "text": "If Amanda sets high standards and pursues excellence, then she achieves success.",
          "fol": "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
          "str_fol": "(sets_high_standards(Amanda) \u2227 pursue_excellence(Amanda)) \u2192 achieves_success(Amanda)"
        }
      ],
      "conclusion": {
        "id": 9,
        "subject": "Amanda",
        "text": "Amanda does not pursue excellence.",
        "fol": "\u00acp_9(Amanda)",
        "str_fol": "\u00acpursue_excellence(Amanda)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 0,
          "subject": "Amanda",
          "text": "Amanda does not respect tradition.",
          "fol": "\u00acp_0(Amanda)",
          "str_fol": "\u00acrespect_tradition(Amanda)",
          "negation": true
        },
        {
          "id": 9,
          "subject": "Amanda",
          "text": "Amanda does not pursue excellence.",
          "fol": "\u00acp_9(Amanda)",
          "str_fol": "\u00acpursue_excellence(Amanda)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 2,
          "text": "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
          "fol": "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
          "str_fol": "fulfilled(Amanda) \u2192 (respect_tradition(Amanda) \u2227 pursue_excellence(Amanda))"
        }
      ],
      "conclusion": {
        "id": 10,
        "subject": "Amanda",
        "text": "Amanda is not fulfilled.",
        "fol": "\u00acp_8(Amanda)",
        "str_fol": "\u00acfulfilled(Amanda)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 1,
          "subject": "Amanda",
          "text": "Amanda is a perfectionist.",
          "fol": "p_1(Amanda)",
          "str_fol": "perfectionist(Amanda)",
          "negation": false
        }
      ],
      "rules": [
        {
          "id": 1,
          "text": "Amanda is either creative or a perfectionist, but not both.",
          "fol": "p_6(Amanda) \u2295 p_1(Amanda)",
          "str_fol": "creative(Amanda) \u2295 perfectionist(Amanda)"
        }
      ],
      "conclusion": {
        "id": 11,
        "subject": "Amanda",
        "text": "Amanda is not creative.",
        "fol": "\u00acp_6(Amanda)",
        "str_fol": "\u00accreative(Amanda)",
        "negation": true
      }
    },
    {
      "facts": [
        {
          "id": 11,
          "subject": "Amanda",
          "text": "Amanda is not creative.",
          "fol": "\u00acp_6(Amanda)",
          "str_fol": "\u00accreative(Amanda)",
          "negation": true
        },
        {
          "id": 10,
          "subject": "Amanda",
          "text": "Amanda is not fulfilled.",
          "fol": "\u00acp_8(Amanda)",
          "str_fol": "\u00acfulfilled(Amanda)",
          "negation": true
        }
      ],
      "rules": [
        {
          "id": 0,
          "text": "If Amanda is either creative or devout (but not both), then she is fulfilled.",
          "fol": "(p_6(Amanda) \u2295 p_7(Amanda)) \u2192 p_8(Amanda)",
          "str_fol": "(creative(Amanda) \u2295 devout(Amanda)) \u2192 fulfilled(Amanda)"
        }
      ],
      "conclusion": {
        "id": 12,
        "subject": "Amanda",
        "text": "Amanda is devout.",
        "fol": "p_7(Amanda)",
        "str_fol": "devout(Amanda)",
        "negation": false
      }
    }
  ],
  "edits": [
    {
      "edit_number": 1,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_4(Amanda)",
        "p_5(Amanda)",
        "p_3(Amanda)",
        "p_2(Amanda)",
        "\u00acp_0(Amanda)",
        "p_1(Amanda)",
        "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda))",
        "p_12(Amanda) \u2228 p_11(Amanda)",
        "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
        "p_6(Amanda) \u2295 p_1(Amanda)",
        "p_11(Amanda) \u2192 p_7(Amanda)"
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive (but not both).",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "(p_6(Amanda) \u2295 p_7(Amanda)) \u2192 p_8(Amanda)",
            "nl": "If Amanda is either creative or devout (but not both), then she is fulfilled."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "p_11(Amanda) \u2192 p_7(Amanda)",
            "nl": "If Amanda is precise in her work, then she is devout."
          }
        ]
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda)",
          "p_5(Amanda)",
          "p_3(Amanda)",
          "p_2(Amanda)",
          "-p_0(Amanda)",
          "p_1(Amanda)",
          "p_12(Amanda) -> (-(p_4(Amanda) <-> p_5(Amanda)))",
          "p_12(Amanda) | p_11(Amanda)",
          "p_3(Amanda) -> (-(p_10(Amanda) <-> p_11(Amanda)))",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda)",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda))",
          "-(p_6(Amanda) <-> p_1(Amanda))",
          "p_11(Amanda) -> p_7(Amanda)"
        ],
        "formulas(goals)": [
          "p_7(Amanda)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "None."
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None of the mappings are incorrect."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 2,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_4(Amanda).",
        "p_5(Amanda).",
        "p_3(Amanda).",
        "p_2(Amanda).",
        "\u00acp_0(Amanda).",
        "p_1(Amanda).",
        "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda)).",
        "p_12(Amanda) \u2228 p_11(Amanda).",
        "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda)).",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda).",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda)).",
        "p_6(Amanda) \u2295 p_1(Amanda).",
        "p_11(Amanda) \u2192 p_7(Amanda).",
        "\u00acp_12(Amanda).",
        "p_11(Amanda).",
        "p_7(Amanda).",
        "\u00acp_9(Amanda).",
        "\u00acp_8(Amanda).",
        "\u00acp_6(Amanda)."
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive (but not both).",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout.",
        "Amanda does not work hard.",
        "Amanda is precise in her work.",
        "Amanda is devout.",
        "Amanda does not pursue excellence.",
        "Amanda is not fulfilled.",
        "Amanda is not creative."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "\u00acp_12(Amanda)",
            "nl": "Amanda does not work hard."
          },
          {
            "fol": "p_11(Amanda)",
            "nl": "Amanda is precise in her work."
          },
          {
            "fol": "p_7(Amanda)",
            "nl": "Amanda is devout."
          },
          {
            "fol": "\u00acp_9(Amanda)",
            "nl": "Amanda does not pursue excellence."
          },
          {
            "fol": "\u00acp_8(Amanda)",
            "nl": "Amanda is not fulfilled."
          },
          {
            "fol": "\u00acp_6(Amanda)",
            "nl": "Amanda is not creative."
          }
        ],
        "added_rules": []
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda).",
          "p_5(Amanda).",
          "p_3(Amanda).",
          "p_2(Amanda).",
          "-p_0(Amanda).",
          "p_1(Amanda).",
          "p_12(Amanda) -> (-(p_4(Amanda) <-> p_5(Amanda))).",
          "p_12(Amanda) | p_11(Amanda).",
          "p_3(Amanda) -> (-(p_10(Amanda) <-> p_11(Amanda))).",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda).",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda)).",
          "-(p_6(Amanda) <-> p_1(Amanda)).",
          "p_11(Amanda) -> p_7(Amanda).",
          "-p_12(Amanda).",
          "p_11(Amanda).",
          "p_7(Amanda).",
          "-p_9(Amanda).",
          "-p_8(Amanda).",
          "-p_6(Amanda)."
        ],
        "formulas(goals)": [
          "p_7(Amanda)."
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None; all FOL statements correspond accurately to the natural language descriptions."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 3,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_4(Amanda).",
        "p_5(Amanda).",
        "p_3(Amanda).",
        "p_2(Amanda).",
        "\u00acp_0(Amanda).",
        "p_1(Amanda).",
        "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda)).",
        "p_12(Amanda) \u2228 p_11(Amanda).",
        "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda)).",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda).",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda)).",
        "p_6(Amanda) \u2295 p_1(Amanda).",
        "p_11(Amanda) \u2192 p_7(Amanda).",
        "\u00acp_12(Amanda).",
        "\u00acp_9(Amanda).",
        "\u00acp_8(Amanda).",
        "\u00acp_6(Amanda).",
        "p_4(Amanda) \u2192 \u00acp_7(Amanda)."
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive (but not both).",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout.",
        "Amanda does not work hard.",
        "Amanda does not pursue excellence.",
        "Amanda is not fulfilled.",
        "Amanda is not creative.",
        "If Amanda is patient, then she is not devout."
      ],
      "edits_made": {
        "removed_facts": [
          {
            "fol": "p_11(Amanda)",
            "nl": "Amanda is precise in her work."
          },
          {
            "fol": "p_7(Amanda)",
            "nl": "Amanda is devout."
          }
        ],
        "removed_rules": [],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "p_4(Amanda) \u2192 \u00acp_7(Amanda)",
            "nl": "If Amanda is patient, then she is not devout."
          }
        ]
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda).",
          "p_5(Amanda).",
          "p_3(Amanda).",
          "p_2(Amanda).",
          "-p_0(Amanda).",
          "p_1(Amanda).",
          "p_12(Amanda) -> (-(p_4(Amanda) <-> p_5(Amanda))).",
          "p_12(Amanda) | p_11(Amanda).",
          "p_3(Amanda) -> (-(p_10(Amanda) <-> p_11(Amanda))).",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda).",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda)).",
          "-(p_6(Amanda) <-> p_1(Amanda)).",
          "p_11(Amanda) -> p_7(Amanda).",
          "-p_12(Amanda).",
          "-p_9(Amanda).",
          "-p_8(Amanda).",
          "-p_6(Amanda).",
          "p_4(Amanda) -> -p_7(Amanda)."
        ],
        "formulas(goals)": [
          "-p_7(Amanda)."
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All FOL statements correctly map to their respective natural language statements."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "None"
          }
        ]
      }
    },
    {
      "edit_number": 4,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_4(Amanda)",
        "p_5(Amanda)",
        "p_3(Amanda)",
        "p_2(Amanda)",
        "\u00acp_0(Amanda)",
        "p_1(Amanda)",
        "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda))",
        "p_12(Amanda) \u2228 p_11(Amanda)",
        "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
        "p_6(Amanda) \u2295 p_1(Amanda)",
        "p_11(Amanda) \u2192 p_7(Amanda)",
        "\u00acp_12(Amanda)",
        "\u00acp_9(Amanda)",
        "\u00acp_8(Amanda)",
        "\u00acp_6(Amanda)",
        "p_4(Amanda) \u2192 \u00acp_7(Amanda)",
        "p_11(Amanda)",
        "\u00acp_10(Amanda)"
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive (but not both).",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout.",
        "Amanda does not work hard.",
        "Amanda does not pursue excellence.",
        "Amanda is not fulfilled.",
        "Amanda is not creative.",
        "If Amanda is patient, then she is not devout.",
        "Amanda is precise in her work.",
        "Amanda does not achieve success."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [],
        "added_facts": [
          {
            "fol": "p_11(Amanda)",
            "nl": "Amanda is precise in her work."
          },
          {
            "fol": "\u00acp_10(Amanda)",
            "nl": "Amanda does not achieve success."
          }
        ],
        "added_rules": []
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda).",
          "p_5(Amanda).",
          "p_3(Amanda).",
          "p_2(Amanda).",
          "-p_0(Amanda).",
          "p_1(Amanda).",
          "p_12(Amanda) -> (-(p_4(Amanda) <-> p_5(Amanda))).",
          "p_12(Amanda) | p_11(Amanda).",
          "p_3(Amanda) -> (-(p_10(Amanda) <-> p_11(Amanda))).",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda).",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda)).",
          "-(p_6(Amanda) <-> p_1(Amanda)).",
          "p_11(Amanda) -> p_7(Amanda).",
          "-p_12(Amanda).",
          "-p_9(Amanda).",
          "-p_8(Amanda).",
          "-p_6(Amanda).",
          "p_4(Amanda) -> -p_7(Amanda).",
          "p_11(Amanda).",
          "-p_10(Amanda)."
        ],
        "formulas(goals)": [
          "-p_7(Amanda)."
        ]
      },
      "answer": "False",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. All FOL statements match the stated NL sentences, given the context definitions of the predicates."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 5,
      "modification_type": "FLIP",
      "edited_context_fol": [
        "p_4(Amanda)",
        "p_5(Amanda)",
        "p_3(Amanda)",
        "p_2(Amanda)",
        "\u00acp_0(Amanda)",
        "p_1(Amanda)",
        "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda))",
        "p_12(Amanda) \u2228 p_11(Amanda)",
        "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
        "p_6(Amanda) \u2295 p_1(Amanda)",
        "p_11(Amanda) \u2192 p_7(Amanda)",
        "\u00acp_12(Amanda)",
        "\u00acp_9(Amanda)",
        "\u00acp_8(Amanda)",
        "\u00acp_6(Amanda)",
        "p_4(Amanda) \u2192 p_7(Amanda)",
        "p_11(Amanda)",
        "\u00acp_10(Amanda)"
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive (but not both).",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout.",
        "Amanda does not work hard.",
        "Amanda does not pursue excellence.",
        "Amanda is not fulfilled.",
        "Amanda is not creative.",
        "If Amanda is patient, then she is devout.",
        "Amanda is precise in her work.",
        "Amanda does not achieve success."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "p_4(Amanda) \u2192 \u00acp_7(Amanda)",
            "nl": "If Amanda is patient, then she is not devout."
          }
        ],
        "added_facts": [],
        "added_rules": [
          {
            "fol": "p_4(Amanda) \u2192 p_7(Amanda)",
            "nl": "If Amanda is patient, then she is devout."
          }
        ]
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda)",
          "p_5(Amanda)",
          "p_3(Amanda)",
          "p_2(Amanda)",
          "-p_0(Amanda)",
          "p_1(Amanda)",
          "p_12(Amanda) -> (-(p_4(Amanda) <-> p_5(Amanda)))",
          "p_12(Amanda) | p_11(Amanda)",
          "p_3(Amanda) -> (-(p_10(Amanda) <-> p_11(Amanda)))",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda)",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda))",
          "(-(p_6(Amanda) <-> p_1(Amanda)))",
          "p_11(Amanda) -> p_7(Amanda)",
          "-p_12(Amanda)",
          "-p_9(Amanda)",
          "-p_8(Amanda)",
          "-p_6(Amanda)",
          "p_4(Amanda) -> p_7(Amanda)",
          "p_11(Amanda)",
          "-p_10(Amanda)"
        ],
        "formulas(goals)": [
          "p_7(Amanda)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": true,
            "mistake": "None. Every FOL statement matches the respective natural language statement both in logical structure and predicate meaning."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 6,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_4(Amanda)",
        "p_5(Amanda)",
        "p_3(Amanda)",
        "p_2(Amanda)",
        "\u00acp_0(Amanda)",
        "p_1(Amanda)",
        "p_12(Amanda) \u2192 ((p_4(Amanda) \u2228 p_5(Amanda)) \u2227 \u00ac(p_4(Amanda) \u2227 p_5(Amanda)))",
        "p_12(Amanda) \u2228 p_11(Amanda)",
        "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
        "p_6(Amanda) \u2295 p_1(Amanda)",
        "p_11(Amanda) \u2192 p_7(Amanda)",
        "\u00acp_12(Amanda)",
        "\u00acp_9(Amanda)",
        "\u00acp_8(Amanda)",
        "\u00acp_6(Amanda)",
        "p_4(Amanda) \u2192 p_7(Amanda)",
        "p_11(Amanda)",
        "\u00acp_10(Amanda)",
        "(p_4(Amanda) \u2228 p_11(Amanda)) \u2192 p_7(Amanda)",
        "p_4(Amanda) \u2227 p_5(Amanda)"
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive or both, but not both patient and attentive simultaneously.",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout.",
        "Amanda does not work hard.",
        "Amanda does not pursue excellence.",
        "Amanda is not fulfilled.",
        "Amanda is not creative.",
        "If Amanda is patient, then she is devout.",
        "Amanda is precise in her work.",
        "Amanda does not achieve success.",
        "If Amanda is patient or precise in her work, then she is devout.",
        "Amanda is both patient and attentive."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "p_12(Amanda) \u2192 (p_4(Amanda) \u2295 p_5(Amanda))",
            "nl": "If Amanda works hard, then she is either patient or attentive (but not both)."
          }
        ],
        "added_facts": [
          {
            "fol": "p_4(Amanda) \u2227 p_5(Amanda)",
            "nl": "Amanda is both patient and attentive."
          }
        ],
        "added_rules": [
          {
            "fol": "p_12(Amanda) \u2192 ((p_4(Amanda) \u2228 p_5(Amanda)) \u2227 \u00ac(p_4(Amanda) \u2227 p_5(Amanda)))",
            "nl": "If Amanda works hard, then she is either patient or attentive or both, but not both patient and attentive simultaneously."
          },
          {
            "fol": "(p_4(Amanda) \u2228 p_11(Amanda)) \u2192 p_7(Amanda)",
            "nl": "If Amanda is patient or precise in her work, then she is devout."
          }
        ]
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda)",
          "p_5(Amanda)",
          "p_3(Amanda)",
          "p_2(Amanda)",
          "-p_0(Amanda)",
          "p_1(Amanda)",
          "p_12(Amanda) -> ((p_4(Amanda) | p_5(Amanda)) & (-(p_4(Amanda) & p_5(Amanda))))",
          "p_12(Amanda) | p_11(Amanda)",
          "p_3(Amanda) -> (-(p_10(Amanda) <-> p_11(Amanda)))",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda)",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda))",
          "-(p_6(Amanda) <-> p_1(Amanda))",
          "p_11(Amanda) -> p_7(Amanda)",
          "-p_12(Amanda)",
          "-p_9(Amanda)",
          "-p_8(Amanda)",
          "-p_6(Amanda)",
          "p_4(Amanda) -> p_7(Amanda)",
          "p_11(Amanda)",
          "-p_10(Amanda)",
          "(p_4(Amanda) | p_11(Amanda)) -> p_7(Amanda)",
          "p_4(Amanda) & p_5(Amanda)"
        ],
        "formulas(goals)": [
          "p_7(Amanda)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": false,
            "mistake": "The NL for 'p_12(Amanda) \u2192 ((p_4(Amanda) \u2228 p_5(Amanda)) \u2227 \u00ac(p_4(Amanda) \u2227 p_5(Amanda)))' is self-contradictory and not logically coherent with the FOL. All other mappings are correct."
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    },
    {
      "edit_number": 7,
      "modification_type": "INVARIANT",
      "edited_context_fol": [
        "p_4(Amanda)",
        "p_5(Amanda)",
        "p_3(Amanda)",
        "p_2(Amanda)",
        "\u00acp_0(Amanda)",
        "p_1(Amanda)",
        "p_12(Amanda) \u2192 ((p_4(Amanda) \u2228 p_5(Amanda)) \u2227 \u00ac(p_4(Amanda) \u2227 p_5(Amanda)))",
        "p_12(Amanda) \u2228 p_11(Amanda)",
        "p_3(Amanda) \u2192 ((p_10(Amanda) \u2228 p_11(Amanda)) \u2227 \u00ac(p_10(Amanda) \u2227 p_11(Amanda)))",
        "(p_2(Amanda) \u2227 p_9(Amanda)) \u2192 p_10(Amanda)",
        "p_8(Amanda) \u2192 (p_0(Amanda) \u2227 p_9(Amanda))",
        "p_6(Amanda) \u2295 p_1(Amanda)",
        "p_11(Amanda) \u2192 p_7(Amanda)",
        "\u00acp_12(Amanda)",
        "\u00acp_9(Amanda)",
        "\u00acp_8(Amanda)",
        "\u00acp_6(Amanda)",
        "p_4(Amanda) \u2192 p_7(Amanda)",
        "p_11(Amanda)",
        "\u00acp_10(Amanda)",
        "(p_4(Amanda) \u2228 p_11(Amanda)) \u2192 p_7(Amanda)",
        "p_4(Amanda) \u2227 p_5(Amanda)",
        "p_11(Amanda) \u2227 \u00acp_10(Amanda)"
      ],
      "edited_natural_language_context": [
        "Amanda is patient.",
        "Amanda is attentive.",
        "Amanda is dedicated.",
        "Amanda sets high standards.",
        "Amanda does not respect tradition.",
        "Amanda is a perfectionist.",
        "If Amanda works hard, then she is either patient or attentive or both, but not both patient and attentive simultaneously.",
        "Amanda either works hard or is precise in her work.",
        "If Amanda is dedicated, then she either achieves success or is precise in her work or both, but not both achieving success and being precise simultaneously.",
        "If Amanda sets high standards and pursues excellence, then she achieves success.",
        "If Amanda is fulfilled, then she respects tradition and pursues excellence.",
        "Amanda is either creative or a perfectionist, but not both.",
        "If Amanda is precise in her work, then she is devout.",
        "Amanda does not work hard.",
        "Amanda does not pursue excellence.",
        "Amanda is not fulfilled.",
        "Amanda is not creative.",
        "If Amanda is patient, then she is devout.",
        "Amanda is precise in her work.",
        "Amanda does not achieve success.",
        "If Amanda is patient or precise in her work, then she is devout.",
        "Amanda is both patient and attentive.",
        "Amanda is precise in her work and does not achieve success."
      ],
      "edits_made": {
        "removed_facts": [],
        "removed_rules": [
          {
            "fol": "p_3(Amanda) \u2192 (p_10(Amanda) \u2295 p_11(Amanda))",
            "nl": "If Amanda is dedicated, then she either achieves success or is precise in her work, but not both."
          }
        ],
        "added_facts": [
          {
            "fol": "p_11(Amanda) \u2227 \u00acp_10(Amanda)",
            "nl": "Amanda is precise in her work and does not achieve success."
          }
        ],
        "added_rules": [
          {
            "fol": "p_3(Amanda) \u2192 ((p_10(Amanda) \u2228 p_11(Amanda)) \u2227 \u00ac(p_10(Amanda) \u2227 p_11(Amanda)))",
            "nl": "If Amanda is dedicated, then she either achieves success or is precise in her work or both, but not both achieving success and being precise simultaneously."
          }
        ]
      },
      "conclusion": "Amanda is devout.",
      "conclusion_fol": "p_7(Amanda)",
      "prover9_input": {
        "formulas(assumptions)": [
          "p_4(Amanda)",
          "p_5(Amanda)",
          "p_3(Amanda)",
          "p_2(Amanda)",
          "-p_0(Amanda)",
          "p_1(Amanda)",
          "p_12(Amanda) -> ((p_4(Amanda) | p_5(Amanda)) & -(p_4(Amanda) & p_5(Amanda)))",
          "p_12(Amanda) | p_11(Amanda)",
          "p_3(Amanda) -> ((p_10(Amanda) | p_11(Amanda)) & -(p_10(Amanda) & p_11(Amanda)))",
          "(p_2(Amanda) & p_9(Amanda)) -> p_10(Amanda)",
          "p_8(Amanda) -> (p_0(Amanda) & p_9(Amanda))",
          "-(p_6(Amanda) <-> p_1(Amanda))",
          "p_11(Amanda) -> p_7(Amanda)",
          "-p_12(Amanda)",
          "-p_9(Amanda)",
          "-p_8(Amanda)",
          "-p_6(Amanda)",
          "p_4(Amanda) -> p_7(Amanda)",
          "p_11(Amanda)",
          "-p_10(Amanda)",
          "(p_4(Amanda) | p_11(Amanda)) -> p_7(Amanda)",
          "p_4(Amanda) & p_5(Amanda)",
          "p_11(Amanda) & -p_10(Amanda)"
        ],
        "formulas(goals)": [
          "p_7(Amanda)"
        ]
      },
      "answer": "True",
      "model_results": {
        "google/gemini-2.5-pro-preview": [
          {
            "verified": true,
            "mistake": "none"
          }
        ],
        "openai/gpt-4.1": [
          {
            "verified": false,
            "mistake": "The English translation for the two cases involving exclusive or (FOL: p_12(Amanda) \u2192 ... and FOL: p_3(Amanda) \u2192 ... ) is self-contradictory, saying 'or both, but not both.' The correct formulation should be 'either ... or ... , but not both.'"
          }
        ],
        "openai/o4-mini-high": [
          {
            "verified": true,
            "mistake": "none"
          }
        ]
      }
    }
  ]
}