{
    "original_context": [
        "Jaxx cares deeply about others.",
        "Jaxx does not support her community.",
        "Jaxx is not respected.",
        "Jaxx is not reserved.",
        "Jaxx is outgoing.",
        "Jaxx is adventurous.",
        "Jaxx does not emote deeply.",
        "Jaxx is not artistic.",
        "Jaxx is passionate.",
        "Everyone who cares deeply about others either supports their community or loves others.",
        "If someone is humble and loves others, then they are respected.",
        "Jaxx is either creative or reserved, but not both.",
        "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
        "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
        "Everyone who is creative is either expressive or talented (or both).",
        "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
        "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
        "If Jaxx is either confident or authentic (but not both), then she is inspiring."
    ],
    "original_context_fol": [
        "p_7(Jaxx)",
        "\u00acp_8(Jaxx)",
        "\u00acp_6(Jaxx)",
        "\u00acp_5(Jaxx)",
        "p_4(Jaxx)",
        "p_0(Jaxx)",
        "\u00acp_1(Jaxx)",
        "\u00acp_3(Jaxx)",
        "p_2(Jaxx)",
        "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
        "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
        "p_15(Jaxx) \u2295 p_5(Jaxx)",
        "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
        "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
        "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
        "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
        "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
        "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)"
    ],
    "conclusion": "Jaxx is confident.",
    "conclusion_fol": "p_9(Jaxx)",
    "answer": "False",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Jaxx",
                    "text": "Jaxx cares deeply about others.",
                    "fol": "p_7(Jaxx)",
                    "str_fol": "cares_deeply(Jaxx)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Jaxx",
                    "text": "Jaxx does not support her community.",
                    "fol": "\u00acp_8(Jaxx)",
                    "str_fol": "\u00acsupports_community(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Everyone who cares deeply about others either supports their community or loves others.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                    "str_fol": "\u2200x (cares_deeply(x) \u2192 (supports_community(x) \u2228 loves_others(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Jaxx",
                "text": "Jaxx loves others.",
                "fol": "p_17(Jaxx)",
                "str_fol": "loves_others(Jaxx)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Jaxx",
                    "text": "Jaxx loves others.",
                    "fol": "p_17(Jaxx)",
                    "str_fol": "loves_others(Jaxx)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Jaxx",
                    "text": "Jaxx is not respected.",
                    "fol": "\u00acp_6(Jaxx)",
                    "str_fol": "\u00acis_respected(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If someone is humble and loves others, then they are respected.",
                    "fol": "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((humble(x) \u2227 loves_others(x)) \u2192 is_respected(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Jaxx",
                "text": "Jaxx is not humble.",
                "fol": "\u00acp_13(Jaxx)",
                "str_fol": "\u00achumble(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Jaxx",
                    "text": "Jaxx is not reserved.",
                    "fol": "\u00acp_5(Jaxx)",
                    "str_fol": "\u00acis_reserved(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Jaxx is either creative or reserved, but not both.",
                    "fol": "p_15(Jaxx) \u2295 p_5(Jaxx)",
                    "str_fol": "creative(Jaxx) \u2295 is_reserved(Jaxx)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Jaxx",
                "text": "Jaxx is creative.",
                "fol": "p_15(Jaxx)",
                "str_fol": "creative(Jaxx)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Jaxx",
                    "text": "Jaxx is outgoing.",
                    "fol": "p_4(Jaxx)",
                    "str_fol": "is_outgoing(Jaxx)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Jaxx",
                    "text": "Jaxx is adventurous.",
                    "fol": "p_0(Jaxx)",
                    "str_fol": "is_adventurous(Jaxx)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                    "fol": "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                    "str_fol": "vibrant(Jaxx) \u2192 (is_outgoing(Jaxx) \u2295 is_adventurous(Jaxx))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Jaxx",
                "text": "Jaxx is not vibrant.",
                "fol": "\u00acp_14(Jaxx)",
                "str_fol": "\u00acvibrant(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Jaxx",
                    "text": "Jaxx does not emote deeply.",
                    "fol": "\u00acp_1(Jaxx)",
                    "str_fol": "\u00acemotes_deeply(Jaxx)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Jaxx",
                    "text": "Jaxx is not artistic.",
                    "fol": "\u00acp_3(Jaxx)",
                    "str_fol": "\u00acis_artistic(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                    "fol": "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                    "str_fol": "(expressive(Jaxx) \u2295 emotes_deeply(Jaxx)) \u2192 is_artistic(Jaxx)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Jaxx",
                "text": "Jaxx is not expressive.",
                "fol": "\u00acp_16(Jaxx)",
                "str_fol": "\u00acexpressive(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Jaxx",
                    "text": "Jaxx is creative.",
                    "fol": "p_15(Jaxx)",
                    "str_fol": "creative(Jaxx)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Jaxx",
                    "text": "Jaxx is not expressive.",
                    "fol": "\u00acp_16(Jaxx)",
                    "str_fol": "\u00acexpressive(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Everyone who is creative is either expressive or talented (or both).",
                    "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (creative(x) \u2192 (expressive(x) \u2228 talented(x)))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Jaxx",
                "text": "Jaxx is talented.",
                "fol": "p_12(Jaxx)",
                "str_fol": "talented(Jaxx)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Jaxx",
                    "text": "Jaxx is not humble.",
                    "fol": "\u00acp_13(Jaxx)",
                    "str_fol": "\u00achumble(Jaxx)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Jaxx",
                    "text": "Jaxx is not vibrant.",
                    "fol": "\u00acp_14(Jaxx)",
                    "str_fol": "\u00acvibrant(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                    "fol": "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                    "str_fol": "authentic(Jaxx) \u2192 (humble(Jaxx) \u2295 vibrant(Jaxx))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Jaxx",
                "text": "Jaxx is not authentic.",
                "fol": "\u00acp_10(Jaxx)",
                "str_fol": "\u00acauthentic(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Jaxx",
                    "text": "Jaxx is talented.",
                    "fol": "p_12(Jaxx)",
                    "str_fol": "talented(Jaxx)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Jaxx",
                    "text": "Jaxx is passionate.",
                    "fol": "p_2(Jaxx)",
                    "str_fol": "passionate(Jaxx)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                    "fol": "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                    "str_fol": "talented(Jaxx) \u2192 (passionate(Jaxx) \u2295 inspiring(Jaxx))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Jaxx",
                "text": "Jaxx is not inspiring.",
                "fol": "\u00acp_11(Jaxx)",
                "str_fol": "\u00acinspiring(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Jaxx",
                    "text": "Jaxx is not authentic.",
                    "fol": "\u00acp_10(Jaxx)",
                    "str_fol": "\u00acauthentic(Jaxx)",
                    "negation": true
                },
                {
                    "id": 16,
                    "subject": "Jaxx",
                    "text": "Jaxx is not inspiring.",
                    "fol": "\u00acp_11(Jaxx)",
                    "str_fol": "\u00acinspiring(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                    "fol": "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                    "str_fol": "(confident(Jaxx) \u2295 authentic(Jaxx)) \u2192 inspiring(Jaxx)"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Jaxx",
                "text": "Jaxx is confident.",
                "fol": "p_9(Jaxx)",
                "str_fol": "confident(Jaxx)",
                "negation": false
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "If someone is humble and loves others, then they are respected.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "Everyone who is creative is either expressive or talented (or both).",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                        "nl": "Either Jaxx cares deeply about others or she does not care deeply about others."
                    },
                    {
                        "fol": "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                        "nl": "Either Jaxx is confident or Jaxx is not confident."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                        "nl": "For everyone, if they neither support their community nor love others, then they do not care deeply about others."
                    },
                    {
                        "fol": "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                        "nl": "For everyone, either they do not care deeply about others, or they support their community, or they love others."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "all x ((p_13(x) & p_17(x)) -> p_6(x)).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx)).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx)).",
                    "p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx)).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx)."
                ],
                "formulas(goals)": [
                    "-p_9(Jaxx)."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                "p_2(Jaxx) \u2192 p_9(Jaxx)"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "Everyone who is creative is either expressive or talented (or both).",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident.",
                "If Jaxx is passionate, then she is confident."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
                        "nl": "If someone is humble and loves others, then they are respected."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_2(Jaxx) \u2192 p_9(Jaxx)",
                        "nl": "If Jaxx is passionate, then she is confident."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "(all x (p_7(x) -> (p_8(x) | p_17(x)))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "(p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx))).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx)) -> p_3(Jaxx)).",
                    "(all x (p_15(x) -> (p_16(x) | p_12(x)))).",
                    "(p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx))).",
                    "(p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx))).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx)) -> p_11(Jaxx)).",
                    "(p_7(Jaxx) | -p_7(Jaxx)).",
                    "(all x ((-p_8(x) & -p_17(x)) -> -p_7(x))).",
                    "(all x (-p_7(x) | p_8(x) | p_17(x))).",
                    "(p_9(Jaxx) | -p_9(Jaxx)).",
                    "(p_2(Jaxx) -> p_9(Jaxx))."
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 3,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                "p_2(Jaxx) \u2192 p_9(Jaxx)",
                "p_15(Jaxx)",
                "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "Everyone who is creative is either expressive or talented (or both).",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident.",
                "If Jaxx is passionate, then she is confident.",
                "Jaxx is creative.",
                "If Jaxx is not authentic, then she is inspiring."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_15(Jaxx)",
                        "nl": "Jaxx is creative."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)",
                        "nl": "If Jaxx is not authentic, then she is inspiring."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx)).",
                    "-(p_16(Jaxx) <-> p_1(Jaxx)) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx)).",
                    "p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx)).",
                    "-(p_9(Jaxx) <-> p_10(Jaxx)) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx).",
                    "p_2(Jaxx) -> p_9(Jaxx).",
                    "p_15(Jaxx).",
                    "-p_10(Jaxx) -> p_11(Jaxx)."
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                "p_15(Jaxx)",
                "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)",
                "p_2(Jaxx) \u2192 (p_9(Jaxx) \u2295 p_17(Jaxx))"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "Everyone who is creative is either expressive or talented (or both).",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident.",
                "Jaxx is creative.",
                "If Jaxx is not authentic, then she is inspiring.",
                "If Jaxx is passionate, then she is either confident or loves others, but not both."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_2(Jaxx) \u2192 p_9(Jaxx)",
                        "nl": "If Jaxx is passionate, then she is confident."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_2(Jaxx) \u2192 (p_9(Jaxx) \u2295 p_17(Jaxx))",
                        "nl": "If Jaxx is passionate, then she is either confident or loves others, but not both."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx))).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx))).",
                    "p_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx))).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx).",
                    "p_15(Jaxx).",
                    "-p_10(Jaxx) -> p_11(Jaxx).",
                    "p_2(Jaxx) -> (-(p_9(Jaxx) <-> p_17(Jaxx)))."
                ],
                "formulas(goals)": [
                    "-p_9(Jaxx)."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                "p_15(Jaxx)",
                "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)",
                "p_2(Jaxx) \u2192 p_9(Jaxx)"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "Everyone who is creative is either expressive or talented (or both).",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident.",
                "Jaxx is creative.",
                "If Jaxx is not authentic, then she is inspiring.",
                "If Jaxx is passionate, then she is confident."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_2(Jaxx) \u2192 (p_9(Jaxx) \u2295 p_17(Jaxx))",
                        "nl": "If Jaxx is passionate, then she is either confident or loves others, but not both."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_2(Jaxx) \u2192 p_9(Jaxx)",
                        "nl": "If Jaxx is passionate, then she is confident."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx))).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx))).",
                    "p_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx))).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx).",
                    "p_15(Jaxx).",
                    "-p_10(Jaxx) -> p_11(Jaxx).",
                    "p_2(Jaxx) -> p_9(Jaxx)."
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x ((p_15(x) \u2227 \u00acp_16(x)) \u2192 p_12(x))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                "p_15(Jaxx)",
                "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)",
                "p_2(Jaxx) \u2192 p_9(Jaxx)",
                "\u00acp_9(Jaxx) \u2192 \u00acp_2(Jaxx)"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "For everyone, if they are creative and not expressive, then they are talented.",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident.",
                "Jaxx is creative.",
                "If Jaxx is not authentic, then she is inspiring.",
                "If Jaxx is passionate, then she is confident.",
                "If Jaxx is not confident, then she is not passionate."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                        "nl": "Everyone who is creative is either expressive or talented (or both)."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_15(x) \u2227 \u00acp_16(x)) \u2192 p_12(x))",
                        "nl": "For everyone, if they are creative and not expressive, then they are talented."
                    },
                    {
                        "fol": "\u00acp_9(Jaxx) \u2192 \u00acp_2(Jaxx)",
                        "nl": "If Jaxx is not confident, then she is not passionate."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": "p_7(Jaxx).\n-p_8(Jaxx).\n-p_6(Jaxx).\n-p_5(Jaxx).\np_4(Jaxx).\np_0(Jaxx).\n-p_1(Jaxx).\n-p_3(Jaxx).\np_2(Jaxx).\nall x (p_7(x) -> (p_8(x) | p_17(x))).\n-(p_15(Jaxx) <-> p_5(Jaxx)).\np_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx))).\n(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).\nall x ((p_15(x) & -p_16(x)) -> p_12(x)).\np_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx))).\np_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx))).\n(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).\np_7(Jaxx) | -p_7(Jaxx).\nall x ((-p_8(x) & -p_17(x)) -> -p_7(x)).\nall x (-p_7(x) | p_8(x) | p_17(x)).\np_9(Jaxx) | -p_9(Jaxx).\np_15(Jaxx).\n-p_10(Jaxx) -> p_11(Jaxx).\np_2(Jaxx) -> p_9(Jaxx).\n-p_9(Jaxx) -> -p_2(Jaxx).",
                "formulas(goals)": "p_9(Jaxx)."
            },
            "answer": "True"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_7(Jaxx)",
                "\u00acp_8(Jaxx)",
                "\u00acp_6(Jaxx)",
                "\u00acp_5(Jaxx)",
                "p_4(Jaxx)",
                "p_0(Jaxx)",
                "\u00acp_1(Jaxx)",
                "\u00acp_3(Jaxx)",
                "p_2(Jaxx)",
                "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                "p_15(Jaxx) \u2295 p_5(Jaxx)",
                "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                "\u2200x ((p_15(x) \u2227 \u00acp_16(x)) \u2192 p_12(x))",
                "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))",
                "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
                "p_15(Jaxx)",
                "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)",
                "\u00acp_2(Jaxx) \u2228 p_9(Jaxx)",
                "\u00acp_9(Jaxx) \u2192 \u00acp_2(Jaxx)",
                "p_17(Jaxx)",
                "p_10(Jaxx) \u2228 p_11(Jaxx)",
                "p_2(Jaxx) \u2228 \u00acp_2(Jaxx)"
            ],
            "edited_natural_language_context": [
                "Jaxx cares deeply about others.",
                "Jaxx does not support her community.",
                "Jaxx is not respected.",
                "Jaxx is not reserved.",
                "Jaxx is outgoing.",
                "Jaxx is adventurous.",
                "Jaxx does not emote deeply.",
                "Jaxx is not artistic.",
                "Jaxx is passionate.",
                "Everyone who cares deeply about others either supports their community or loves others.",
                "Jaxx is either creative or reserved, but not both.",
                "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                "For everyone, if they are creative and not expressive, then they are talented.",
                "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                "Either Jaxx cares deeply about others or she does not care deeply about others.",
                "For everyone, if they neither support their community nor love others, then they do not care deeply about others.",
                "For everyone, either they do not care deeply about others, or they support their community, or they love others.",
                "Either Jaxx is confident or Jaxx is not confident.",
                "Jaxx is creative.",
                "If Jaxx is not authentic, then she is inspiring.",
                "Either Jaxx is not passionate or Jaxx is confident.",
                "If Jaxx is not confident, then she is not passionate.",
                "Jaxx loves others.",
                "Either Jaxx is authentic or Jaxx is inspiring.",
                "Either Jaxx is passionate or Jaxx is not passionate."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_17(Jaxx)",
                        "nl": "Jaxx loves others."
                    },
                    {
                        "fol": "p_10(Jaxx) \u2228 p_11(Jaxx)",
                        "nl": "Either Jaxx is authentic or Jaxx is inspiring."
                    },
                    {
                        "fol": "p_2(Jaxx) \u2228 \u00acp_2(Jaxx)",
                        "nl": "Either Jaxx is passionate or Jaxx is not passionate."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u00acp_2(Jaxx) \u2228 p_9(Jaxx)",
                        "nl": "Either Jaxx is not passionate or Jaxx is confident."
                    }
                ]
            },
            "conclusion": "Jaxx is confident.",
            "conclusion_fol": "p_9(Jaxx)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx)",
                    "-p_8(Jaxx)",
                    "-p_6(Jaxx)",
                    "-p_5(Jaxx)",
                    "p_4(Jaxx)",
                    "p_0(Jaxx)",
                    "-p_1(Jaxx)",
                    "-p_3(Jaxx)",
                    "p_2(Jaxx)",
                    "all x (p_7(x) -> (p_8(x) | p_17(x)))",
                    "-(p_15(Jaxx) <-> p_5(Jaxx))",
                    "p_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx)))",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx)",
                    "all x ((p_15(x) & -p_16(x)) -> p_12(x))",
                    "p_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx)))",
                    "p_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx)))",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx)",
                    "p_7(Jaxx) | -p_7(Jaxx)",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x))",
                    "all x (-p_7(x) | p_8(x) | p_17(x))",
                    "p_9(Jaxx) | -p_9(Jaxx)",
                    "p_15(Jaxx)",
                    "-p_10(Jaxx) -> p_11(Jaxx)",
                    "-p_2(Jaxx) | p_9(Jaxx)",
                    "-p_9(Jaxx) -> -p_2(Jaxx)",
                    "p_17(Jaxx)",
                    "p_10(Jaxx) | p_11(Jaxx)",
                    "p_2(Jaxx) | -p_2(Jaxx)"
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)"
                ]
            },
            "answer": "True"
        }
    ]
}