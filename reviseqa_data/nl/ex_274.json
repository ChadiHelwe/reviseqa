{
    "original_context": [
        "Mitchell defies oppressive power.",
        "Mitchell challenges authority.",
        "Mitchell does not inspire others.",
        "Mitchell does not tell his story.",
        "Mitchell does not reveal the truth.",
        "Mitchell does not expose injustice.",
        "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
        "All historical figures who challenge authority face risk.",
        "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
        "If Mitchell faces risk and speaks out, then he tells his story.",
        "Mitchell either speaks out or is truthful.",
        "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
        "If Mitchell is truthful, then he either seeks justice or records history, but not both.",
        "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
        "If Mitchell documents atrocities, then he leaves a lasting legacy."
    ],
    "original_context_fol": [
        "p_5(Mitchell)",
        "p_4(Mitchell)",
        "\u00acp_3(Mitchell)",
        "\u00acp_2(Mitchell)",
        "\u00acp_1(Mitchell)",
        "\u00acp_0(Mitchell)",
        "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
        "\u2200x (p_4(x) \u2192 p_13(x))",
        "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
        "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
        "p_12(Mitchell) \u2228 p_9(Mitchell)",
        "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
        "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))",
        "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
        "p_6(Mitchell) \u2192 p_7(Mitchell)"
    ],
    "conclusion": "Mitchell leaves a lasting legacy.",
    "conclusion_fol": "p_7(Mitchell)",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Mitchell",
                    "text": "Mitchell defies oppressive power.",
                    "fol": "p_5(Mitchell)",
                    "str_fol": "defies_power(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                    "fol": "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((stands_up(x) \u2228 defies_power(x)) \u2192 resists_tyranny(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Mitchell",
                "text": "Mitchell resists tyranny.",
                "fol": "p_14(Mitchell)",
                "str_fol": "resists_tyranny(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Mitchell",
                    "text": "Mitchell challenges authority.",
                    "fol": "p_4(Mitchell)",
                    "str_fol": "challenges_authority(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "All historical figures who challenge authority face risk.",
                    "fol": "\u2200x (p_4(x) \u2192 p_13(x))",
                    "str_fol": "\u2200x (challenges_authority(x) \u2192 faces_risk(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Mitchell",
                "text": "Mitchell faces risk.",
                "fol": "p_13(Mitchell)",
                "str_fol": "faces_risk(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Mitchell",
                    "text": "Mitchell resists tyranny.",
                    "fol": "p_14(Mitchell)",
                    "str_fol": "resists_tyranny(Mitchell)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Mitchell",
                    "text": "Mitchell does not inspire others.",
                    "fol": "\u00acp_3(Mitchell)",
                    "str_fol": "\u00acinspires_others(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                    "fol": "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((fight_oppression(x) \u2227 resists_tyranny(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Mitchell",
                "text": "Mitchell does not fight against oppression.",
                "fol": "\u00acp_11(Mitchell)",
                "str_fol": "\u00acfight_oppression(Mitchell)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Mitchell",
                    "text": "Mitchell faces risk.",
                    "fol": "p_13(Mitchell)",
                    "str_fol": "faces_risk(Mitchell)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Mitchell",
                    "text": "Mitchell does not tell his story.",
                    "fol": "\u00acp_2(Mitchell)",
                    "str_fol": "\u00actells_story(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Mitchell faces risk and speaks out, then he tells his story.",
                    "fol": "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                    "str_fol": "(faces_risk(Mitchell) \u2227 speaks_out(Mitchell)) \u2192 tells_story(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Mitchell",
                "text": "Mitchell does not speak out.",
                "fol": "\u00acp_12(Mitchell)",
                "str_fol": "\u00acspeaks_out(Mitchell)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Mitchell",
                    "text": "Mitchell does not speak out.",
                    "fol": "\u00acp_12(Mitchell)",
                    "str_fol": "\u00acspeaks_out(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Mitchell either speaks out or is truthful.",
                    "fol": "p_12(Mitchell) \u2228 p_9(Mitchell)",
                    "str_fol": "speaks_out(Mitchell) \u2228 is_truthful(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Mitchell",
                "text": "Mitchell is truthful.",
                "fol": "p_9(Mitchell)",
                "str_fol": "is_truthful(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Mitchell",
                    "text": "Mitchell does not reveal the truth.",
                    "fol": "\u00acp_1(Mitchell)",
                    "str_fol": "\u00acreveal_truth(Mitchell)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Mitchell",
                    "text": "Mitchell does not fight against oppression.",
                    "fol": "\u00acp_11(Mitchell)",
                    "str_fol": "\u00acfight_oppression(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                    "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                    "str_fol": "\u2200x (seek_justice(x) \u2192 (reveal_truth(x) \u2228 fight_oppression(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Mitchell",
                "text": "Mitchell does not seek justice.",
                "fol": "\u00acp_10(Mitchell)",
                "str_fol": "\u00acseek_justice(Mitchell)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Mitchell",
                    "text": "Mitchell is truthful.",
                    "fol": "p_9(Mitchell)",
                    "str_fol": "is_truthful(Mitchell)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Mitchell",
                    "text": "Mitchell does not seek justice.",
                    "fol": "\u00acp_10(Mitchell)",
                    "str_fol": "\u00acseek_justice(Mitchell)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Mitchell is truthful, then he either seeks justice or records history, but not both.",
                    "fol": "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))",
                    "str_fol": "is_truthful(Mitchell) \u2192 (seek_justice(Mitchell) \u2295 record_history(Mitchell))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Mitchell",
                "text": "Mitchell records history.",
                "fol": "p_8(Mitchell)",
                "str_fol": "record_history(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Mitchell",
                    "text": "Mitchell does not expose injustice.",
                    "fol": "\u00acp_0(Mitchell)",
                    "str_fol": "\u00acexpose_injustice(Mitchell)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Mitchell",
                    "text": "Mitchell records history.",
                    "fol": "p_8(Mitchell)",
                    "str_fol": "record_history(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                    "fol": "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                    "str_fol": "(expose_injustice(Mitchell) \u2295 record_history(Mitchell)) \u2192 document_atrocities(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Mitchell",
                "text": "Mitchell documents atrocities.",
                "fol": "p_6(Mitchell)",
                "str_fol": "document_atrocities(Mitchell)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Mitchell",
                    "text": "Mitchell documents atrocities.",
                    "fol": "p_6(Mitchell)",
                    "str_fol": "document_atrocities(Mitchell)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                    "fol": "p_6(Mitchell) \u2192 p_7(Mitchell)",
                    "str_fol": "document_atrocities(Mitchell) \u2192 leave_lasting_legacy(Mitchell)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Mitchell",
                "text": "Mitchell leaves a lasting legacy.",
                "fol": "p_7(Mitchell)",
                "str_fol": "leave_lasting_legacy(Mitchell)",
                "negation": false
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "p_12(Mitchell) \u2228 p_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "\u00acp_8(Mitchell) \u2192 \u00acp_7(Mitchell)"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell either speaks out or is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell does not record history, then he does not leave a lasting legacy."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2295 p_8(Mitchell))",
                        "nl": "If Mitchell is truthful, then he either seeks justice or records history, but not both."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                        "nl": "If Mitchell is truthful, then he seeks justice if and only if he records history."
                    },
                    {
                        "fol": "\u00acp_8(Mitchell) \u2192 \u00acp_7(Mitchell)",
                        "nl": "If Mitchell does not record history, then he does not leave a lasting legacy."
                    }
                ]
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "p_12(Mitchell) | p_9(Mitchell)",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "-p_8(Mitchell) -> -p_7(Mitchell)"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "p_12(Mitchell) \u2228 p_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "p_8(Mitchell) \u2192 p_7(Mitchell)",
                "p_9(Mitchell) \u2192 p_8(Mitchell)"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell either speaks out or is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell records history, then he leaves a lasting legacy.",
                "If Mitchell is truthful, then he records history."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u00acp_8(Mitchell) \u2192 \u00acp_7(Mitchell)",
                        "nl": "If Mitchell does not record history, then he does not leave a lasting legacy."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_8(Mitchell) \u2192 p_7(Mitchell)",
                        "nl": "If Mitchell records history, then he leaves a lasting legacy."
                    },
                    {
                        "fol": "p_9(Mitchell) \u2192 p_8(Mitchell)",
                        "nl": "If Mitchell is truthful, then he records history."
                    }
                ]
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell).",
                    "p_4(Mitchell).",
                    "-p_3(Mitchell).",
                    "-p_2(Mitchell).",
                    "-p_1(Mitchell).",
                    "-p_0(Mitchell).",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x)).",
                    "all x (p_4(x) -> p_13(x)).",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x)).",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell).",
                    "p_12(Mitchell) | p_9(Mitchell).",
                    "all x (p_10(x) -> (p_1(x) | p_11(x))).",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell)).",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell).",
                    "p_6(Mitchell) -> p_7(Mitchell).",
                    "p_8(Mitchell) -> p_7(Mitchell).",
                    "p_9(Mitchell) -> p_8(Mitchell)."
                ],
                "formulas(goals)": [
                    "p_7(Mitchell)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 3,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "p_8(Mitchell) \u2192 p_7(Mitchell)",
                "p_9(Mitchell) \u2192 p_8(Mitchell)",
                "\u00acp_8(Mitchell)",
                "\u00acp_6(Mitchell)",
                "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell neither speaks out nor is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell records history, then he leaves a lasting legacy.",
                "If Mitchell is truthful, then he records history.",
                "Mitchell does not record history.",
                "Mitchell does not document atrocities.",
                "If Mitchell neither documents atrocities nor records history, then he does not leave a lasting legacy."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_12(Mitchell) \u2228 p_9(Mitchell)",
                        "nl": "Mitchell either speaks out or is truthful."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                        "nl": "Mitchell neither speaks out nor is truthful."
                    },
                    {
                        "fol": "\u00acp_8(Mitchell)",
                        "nl": "Mitchell does not record history."
                    },
                    {
                        "fol": "\u00acp_6(Mitchell)",
                        "nl": "Mitchell does not document atrocities."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)",
                        "nl": "If Mitchell neither documents atrocities nor records history, then he does not leave a lasting legacy."
                    }
                ]
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "-p_12(Mitchell) & -p_9(Mitchell)",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "p_8(Mitchell) -> p_7(Mitchell)",
                    "p_9(Mitchell) -> p_8(Mitchell)",
                    "-p_8(Mitchell)",
                    "-p_6(Mitchell)",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell)"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "p_8(Mitchell) \u2192 p_7(Mitchell)",
                "p_9(Mitchell) \u2192 p_8(Mitchell)",
                "\u00acp_6(Mitchell)",
                "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)",
                "p_8(Mitchell)"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell neither speaks out nor is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell records history, then he leaves a lasting legacy.",
                "If Mitchell is truthful, then he records history.",
                "Mitchell does not document atrocities.",
                "If Mitchell neither documents atrocities nor records history, then he does not leave a lasting legacy.",
                "Mitchell records history."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "\u00acp_8(Mitchell)",
                        "nl": "Mitchell does not record history."
                    }
                ],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_8(Mitchell)",
                        "nl": "Mitchell records history."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell).",
                    "p_4(Mitchell).",
                    "-p_3(Mitchell).",
                    "-p_2(Mitchell).",
                    "-p_1(Mitchell).",
                    "-p_0(Mitchell).",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x)).",
                    "all x (p_4(x) -> p_13(x)).",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x)).",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell).",
                    "-p_12(Mitchell) & -p_9(Mitchell).",
                    "all x (p_10(x) -> (p_1(x) | p_11(x))).",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell)).",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell).",
                    "p_6(Mitchell) -> p_7(Mitchell).",
                    "p_8(Mitchell) -> p_7(Mitchell).",
                    "p_9(Mitchell) -> p_8(Mitchell).",
                    "-p_6(Mitchell).",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell).",
                    "p_8(Mitchell)."
                ],
                "formulas(goals)": [
                    "p_7(Mitchell)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "p_8(Mitchell) \u2192 p_7(Mitchell)",
                "p_9(Mitchell) \u2192 p_8(Mitchell)",
                "\u00acp_6(Mitchell)",
                "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)",
                "p_4(Mitchell) \u2192 \u00acp_8(Mitchell)"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell neither speaks out nor is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell records history, then he leaves a lasting legacy.",
                "If Mitchell is truthful, then he records history.",
                "Mitchell does not document atrocities.",
                "If Mitchell neither documents atrocities nor records history, then he does not leave a lasting legacy.",
                "If Mitchell challenges authority, then he does not record history."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "p_8(Mitchell)",
                        "nl": "Mitchell records history."
                    }
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_4(Mitchell) \u2192 \u00acp_8(Mitchell)",
                        "nl": "If Mitchell challenges authority, then he does not record history."
                    }
                ]
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "-p_12(Mitchell) & -p_9(Mitchell)",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "p_8(Mitchell) -> p_7(Mitchell)",
                    "p_9(Mitchell) -> p_8(Mitchell)",
                    "-p_6(Mitchell)",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell)",
                    "p_4(Mitchell) -> -p_8(Mitchell)"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "p_8(Mitchell) \u2192 p_7(Mitchell)",
                "p_9(Mitchell) \u2192 p_8(Mitchell)",
                "\u00acp_6(Mitchell)",
                "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)",
                "p_4(Mitchell) \u2192 \u00acp_8(Mitchell)",
                "p_14(Mitchell)",
                "p_13(Mitchell)",
                "\u00acp_9(Mitchell)",
                "p_10(Mitchell) \u2192 (p_1(Mitchell) \u2228 p_11(Mitchell))"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell neither speaks out nor is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell records history, then he leaves a lasting legacy.",
                "If Mitchell is truthful, then he records history.",
                "Mitchell does not document atrocities.",
                "If Mitchell neither documents atrocities nor records history, then he does not leave a lasting legacy.",
                "If Mitchell challenges authority, then he does not record history.",
                "Mitchell resists tyranny.",
                "Mitchell faces risk.",
                "Mitchell is not truthful.",
                "If Mitchell seeks justice, then he either reveals the truth or fights against oppression."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_14(Mitchell)",
                        "nl": "Mitchell resists tyranny."
                    },
                    {
                        "fol": "p_13(Mitchell)",
                        "nl": "Mitchell faces risk."
                    },
                    {
                        "fol": "\u00acp_9(Mitchell)",
                        "nl": "Mitchell is not truthful."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "p_10(Mitchell) \u2192 (p_1(Mitchell) \u2228 p_11(Mitchell))",
                        "nl": "If Mitchell seeks justice, then he either reveals the truth or fights against oppression."
                    }
                ]
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell)",
                    "p_4(Mitchell)",
                    "-p_3(Mitchell)",
                    "-p_2(Mitchell)",
                    "-p_1(Mitchell)",
                    "-p_0(Mitchell)",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x))",
                    "all x (p_4(x) -> p_13(x))",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x))",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell)",
                    "(-p_12(Mitchell)) & (-p_9(Mitchell))",
                    "all x (p_10(x) -> (p_1(x) | p_11(x)))",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell))",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell)",
                    "p_6(Mitchell) -> p_7(Mitchell)",
                    "p_8(Mitchell) -> p_7(Mitchell)",
                    "p_9(Mitchell) -> p_8(Mitchell)",
                    "-p_6(Mitchell)",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell)",
                    "p_4(Mitchell) -> -p_8(Mitchell)",
                    "p_14(Mitchell)",
                    "p_13(Mitchell)",
                    "-p_9(Mitchell)",
                    "p_10(Mitchell) -> (p_1(Mitchell) | p_11(Mitchell))"
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_5(Mitchell)",
                "p_4(Mitchell)",
                "\u00acp_3(Mitchell)",
                "\u00acp_2(Mitchell)",
                "\u00acp_1(Mitchell)",
                "\u00acp_0(Mitchell)",
                "\u2200x ((p_15(x) \u2228 p_5(x)) \u2192 p_14(x))",
                "\u2200x (p_4(x) \u2192 p_13(x))",
                "\u2200x ((p_11(x) \u2227 p_14(x)) \u2192 p_3(x))",
                "(p_13(Mitchell) \u2227 p_12(Mitchell)) \u2192 p_2(Mitchell)",
                "\u00acp_12(Mitchell) \u2227 \u00acp_9(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2228 p_11(x)))",
                "p_9(Mitchell) \u2192 (p_10(Mitchell) \u2194 p_8(Mitchell))",
                "(p_0(Mitchell) \u2295 p_8(Mitchell)) \u2192 p_6(Mitchell)",
                "p_6(Mitchell) \u2192 p_7(Mitchell)",
                "p_8(Mitchell) \u2192 p_7(Mitchell)",
                "p_9(Mitchell) \u2192 p_8(Mitchell)",
                "\u00acp_6(Mitchell)",
                "(\u00acp_6(Mitchell) \u2227 \u00acp_8(Mitchell)) \u2192 \u00acp_7(Mitchell)",
                "p_4(Mitchell) \u2192 \u00acp_8(Mitchell)",
                "p_14(Mitchell)",
                "p_13(Mitchell)",
                "\u00acp_9(Mitchell)",
                "p_10(Mitchell) \u2192 (p_1(Mitchell) \u2228 p_11(Mitchell))",
                "\u00acp_8(Mitchell)",
                "(p_6(Mitchell) \u2228 p_8(Mitchell)) \u2192 p_7(Mitchell)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_1(x)))"
            ],
            "edited_natural_language_context": [
                "Mitchell defies oppressive power.",
                "Mitchell challenges authority.",
                "Mitchell does not inspire others.",
                "Mitchell does not tell his story.",
                "Mitchell does not reveal the truth.",
                "Mitchell does not expose injustice.",
                "Any historical figure who stands up for what is right or defies oppressive power resists tyranny.",
                "All historical figures who challenge authority face risk.",
                "If a historical figure fights against oppression and resists tyranny, then they inspire others.",
                "If Mitchell faces risk and speaks out, then he tells his story.",
                "Mitchell neither speaks out nor is truthful.",
                "Every historical figure who seeks justice either reveals the truth or fights against oppression (or both).",
                "If Mitchell is truthful, then he seeks justice if and only if he records history.",
                "If Mitchell either exposes injustice or records history (but not both), then he documents atrocities.",
                "If Mitchell documents atrocities, then he leaves a lasting legacy.",
                "If Mitchell records history, then he leaves a lasting legacy.",
                "If Mitchell is truthful, then he records history.",
                "Mitchell does not document atrocities.",
                "If Mitchell neither documents atrocities nor records history, then he does not leave a lasting legacy.",
                "If Mitchell challenges authority, then he does not record history.",
                "Mitchell resists tyranny.",
                "Mitchell faces risk.",
                "Mitchell is not truthful.",
                "If Mitchell seeks justice, then he either reveals the truth or fights against oppression.",
                "Mitchell does not record history.",
                "If Mitchell either documents atrocities or records history, then he leaves a lasting legacy.",
                "Every historical figure who seeks justice either fights against oppression or reveals the truth (or both)."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00acp_8(Mitchell)",
                        "nl": "Mitchell does not record history."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "(p_6(Mitchell) \u2228 p_8(Mitchell)) \u2192 p_7(Mitchell)",
                        "nl": "If Mitchell either documents atrocities or records history, then he leaves a lasting legacy."
                    },
                    {
                        "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2228 p_1(x)))",
                        "nl": "Every historical figure who seeks justice either fights against oppression or reveals the truth (or both)."
                    }
                ]
            },
            "conclusion": "Mitchell leaves a lasting legacy.",
            "conclusion_fol": "p_7(Mitchell)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_5(Mitchell).",
                    "p_4(Mitchell).",
                    "-p_3(Mitchell).",
                    "-p_2(Mitchell).",
                    "-p_1(Mitchell).",
                    "-p_0(Mitchell).",
                    "all x ((p_15(x) | p_5(x)) -> p_14(x)).",
                    "all x (p_4(x) -> p_13(x)).",
                    "all x ((p_11(x) & p_14(x)) -> p_3(x)).",
                    "(p_13(Mitchell) & p_12(Mitchell)) -> p_2(Mitchell).",
                    "-p_12(Mitchell) & -p_9(Mitchell).",
                    "all x (p_10(x) -> (p_1(x) | p_11(x))).",
                    "p_9(Mitchell) -> (p_10(Mitchell) <-> p_8(Mitchell)).",
                    "(-(p_0(Mitchell) <-> p_8(Mitchell))) -> p_6(Mitchell).",
                    "p_6(Mitchell) -> p_7(Mitchell).",
                    "p_8(Mitchell) -> p_7(Mitchell).",
                    "p_9(Mitchell) -> p_8(Mitchell).",
                    "-p_6(Mitchell).",
                    "(-p_6(Mitchell) & -p_8(Mitchell)) -> -p_7(Mitchell).",
                    "p_4(Mitchell) -> -p_8(Mitchell).",
                    "p_14(Mitchell).",
                    "p_13(Mitchell).",
                    "-p_9(Mitchell).",
                    "p_10(Mitchell) -> (p_1(Mitchell) | p_11(Mitchell)).",
                    "-p_8(Mitchell).",
                    "(p_6(Mitchell) | p_8(Mitchell)) -> p_7(Mitchell).",
                    "all x (p_10(x) -> (p_11(x) | p_1(x)))."
                ],
                "formulas(goals)": [
                    "-p_7(Mitchell)."
                ]
            },
            "answer": "False"
        }
    ]
}