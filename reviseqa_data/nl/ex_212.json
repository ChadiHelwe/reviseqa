{
    "original_context": [
        "Shepard reveals facts.",
        "Shepard solves puzzles.",
        "Shepard does not uncover the truth.",
        "Shepard explores his community.",
        "Shepard does not show passion.",
        "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
        "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
        "If Shepard explores his community and has curiosity, then he discovers secrets.",
        "Anyone who tells tales has curiosity or shows passion (or both).",
        "Either Shepard tells tales or writes articles, but he does not do both.",
        "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
        "If Shepard lives in Springfield, then he knows the local stories."
    ],
    "original_context_fol": [
        "p_3(Shepard)",
        "p_4(Shepard)",
        "\u00acp_2(Shepard)",
        "p_1(Shepard)",
        "\u00acp_0(Shepard)",
        "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
        "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
        "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
        "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
        "p_8(Shepard) \u2295 p_7(Shepard)",
        "\u2200x (p_7(x) \u2295 p_6(x))",
        "p_5(Shepard) \u2192 p_6(Shepard)"
    ],
    "conclusion": "Shepard does not live in Springfield.",
    "conclusion_fol": "\u00acp_5(Shepard)",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Shepard",
                    "text": "Shepard reveals facts.",
                    "fol": "p_3(Shepard)",
                    "str_fol": "reveal_facts(Shepard)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Shepard",
                    "text": "Shepard solves puzzles.",
                    "fol": "p_4(Shepard)",
                    "str_fol": "solve_puzzles(Shepard)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                    "fol": "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
                    "str_fol": "expose_mysteries(Shepard) \u2192 (reveal_facts(Shepard) \u2295 solve_puzzles(Shepard))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Shepard",
                "text": "Shepard does not expose mysteries.",
                "fol": "\u00acp_11(Shepard)",
                "str_fol": "\u00acexpose_mysteries(Shepard)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Shepard",
                    "text": "Shepard does not uncover the truth.",
                    "fol": "\u00acp_2(Shepard)",
                    "str_fol": "\u00acuncover_truth(Shepard)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Shepard",
                    "text": "Shepard does not expose mysteries.",
                    "fol": "\u00acp_11(Shepard)",
                    "str_fol": "\u00acexpose_mysteries(Shepard)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                    "str_fol": "\u2200x (discovers_secrets(x) \u2192 (uncover_truth(x) \u2228 expose_mysteries(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Shepard",
                "text": "Shepard does not discover secrets.",
                "fol": "\u00acp_10(Shepard)",
                "str_fol": "\u00acdiscovers_secrets(Shepard)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Shepard",
                    "text": "Shepard explores his community.",
                    "fol": "p_1(Shepard)",
                    "str_fol": "explores_community(Shepard)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Shepard",
                    "text": "Shepard does not discover secrets.",
                    "fol": "\u00acp_10(Shepard)",
                    "str_fol": "\u00acdiscovers_secrets(Shepard)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Shepard explores his community and has curiosity, then he discovers secrets.",
                    "fol": "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                    "str_fol": "(explores_community(Shepard) \u2227 has_curiosity(Shepard)) \u2192 discovers_secrets(Shepard)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Shepard",
                "text": "Shepard does not have curiosity.",
                "fol": "\u00acp_9(Shepard)",
                "str_fol": "\u00achas_curiosity(Shepard)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Shepard",
                    "text": "Shepard does not have curiosity.",
                    "fol": "\u00acp_9(Shepard)",
                    "str_fol": "\u00achas_curiosity(Shepard)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Shepard",
                    "text": "Shepard does not show passion.",
                    "fol": "\u00acp_0(Shepard)",
                    "str_fol": "\u00acshows_passion(Shepard)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who tells tales has curiosity or shows passion (or both).",
                    "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                    "str_fol": "\u2200x (tells_tales(x) \u2192 (has_curiosity(x) \u2228 shows_passion(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Shepard",
                "text": "Shepard does not tell tales.",
                "fol": "\u00acp_8(Shepard)",
                "str_fol": "\u00actells_tales(Shepard)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Shepard",
                    "text": "Shepard does not tell tales.",
                    "fol": "\u00acp_8(Shepard)",
                    "str_fol": "\u00actells_tales(Shepard)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Either Shepard tells tales or writes articles, but he does not do both.",
                    "fol": "p_8(Shepard) \u2295 p_7(Shepard)",
                    "str_fol": "tells_tales(Shepard) \u2295 writes_articles(Shepard)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Shepard",
                "text": "Shepard writes articles.",
                "fol": "p_7(Shepard)",
                "str_fol": "writes_articles(Shepard)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Shepard",
                    "text": "Shepard writes articles.",
                    "fol": "p_7(Shepard)",
                    "str_fol": "writes_articles(Shepard)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                    "fol": "\u2200x (p_7(x) \u2295 p_6(x))",
                    "str_fol": "\u2200x (writes_articles(x) \u2295 knows_local_stories(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Shepard",
                "text": "Shepard does not know the local stories.",
                "fol": "\u00acp_6(Shepard)",
                "str_fol": "\u00acknows_local_stories(Shepard)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Shepard",
                    "text": "Shepard does not know the local stories.",
                    "fol": "\u00acp_6(Shepard)",
                    "str_fol": "\u00acknows_local_stories(Shepard)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Shepard lives in Springfield, then he knows the local stories.",
                    "fol": "p_5(Shepard) \u2192 p_6(Shepard)",
                    "str_fol": "lives_in_Springfield(Shepard) \u2192 knows_local_stories(Shepard)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Shepard",
                "text": "Shepard does not live in Springfield.",
                "fol": "\u00acp_5(Shepard)",
                "str_fol": "\u00aclives_in_Springfield(Shepard)",
                "negation": true
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "p_8(Shepard) \u2295 p_7(Shepard)",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "p_5(Shepard) \u2192 p_6(Shepard)",
                "\u00acp_6(Shepard)"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "If Shepard lives in Springfield, then he knows the local stories.",
                "Shepard does not know the local stories."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00acp_6(Shepard)",
                        "nl": "Shepard does not know the local stories."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard)",
                    "p_4(Shepard)",
                    "-p_2(Shepard)",
                    "p_1(Shepard)",
                    "-p_0(Shepard)",
                    "p_11(Shepard) -> (-(p_3(Shepard) <-> p_4(Shepard)))",
                    "all x (p_10(x) -> (p_2(x) | p_11(x)))",
                    "(p_1(Shepard) & p_9(Shepard)) -> p_10(Shepard)",
                    "all x (p_8(x) -> (p_9(x) | p_0(x)))",
                    "-(p_8(Shepard) <-> p_7(Shepard))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "p_5(Shepard) -> p_6(Shepard)",
                    "-p_6(Shepard)"
                ],
                "formulas(goals)": [
                    "-p_5(Shepard)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 2,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "p_8(Shepard) \u2295 p_7(Shepard)",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "p_5(Shepard) \u2192 p_6(Shepard)",
                "\u00acp_6(Shepard)",
                "p_3(Shepard) \u2227 p_4(Shepard)",
                "\u00acp_11(Shepard)",
                "p_7(Shepard)",
                "\u00acp_8(Shepard)",
                "\u00acp_10(Shepard)",
                "\u00acp_9(Shepard)"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "If Shepard lives in Springfield, then he knows the local stories.",
                "Shepard does not know the local stories.",
                "Shepard both reveals facts and solves puzzles.",
                "Shepard does not expose mysteries.",
                "Shepard writes articles.",
                "Shepard does not tell tales.",
                "Shepard does not discover secrets.",
                "Shepard does not have curiosity."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_3(Shepard) \u2227 p_4(Shepard)",
                        "nl": "Shepard both reveals facts and solves puzzles."
                    },
                    {
                        "fol": "\u00acp_11(Shepard)",
                        "nl": "Shepard does not expose mysteries."
                    },
                    {
                        "fol": "p_7(Shepard)",
                        "nl": "Shepard writes articles."
                    },
                    {
                        "fol": "\u00acp_8(Shepard)",
                        "nl": "Shepard does not tell tales."
                    },
                    {
                        "fol": "\u00acp_10(Shepard)",
                        "nl": "Shepard does not discover secrets."
                    },
                    {
                        "fol": "\u00acp_9(Shepard)",
                        "nl": "Shepard does not have curiosity."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard)",
                    "p_4(Shepard)",
                    "-p_2(Shepard)",
                    "p_1(Shepard)",
                    "-p_0(Shepard)",
                    "p_11(Shepard) -> (-(p_3(Shepard) <-> p_4(Shepard)))",
                    "all x (p_10(x) -> (p_2(x) | p_11(x)))",
                    "(p_1(Shepard) & p_9(Shepard)) -> p_10(Shepard)",
                    "all x (p_8(x) -> (p_9(x) | p_0(x)))",
                    "-(p_8(Shepard) <-> p_7(Shepard))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "p_5(Shepard) -> p_6(Shepard)",
                    "-p_6(Shepard)",
                    "(p_3(Shepard) & p_4(Shepard))",
                    "-p_11(Shepard)",
                    "p_7(Shepard)",
                    "-p_8(Shepard)",
                    "-p_10(Shepard)",
                    "-p_9(Shepard)"
                ],
                "formulas(goals)": [
                    "-p_5(Shepard)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 3,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "p_8(Shepard) \u2295 p_7(Shepard)",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "p_5(Shepard) \u2192 p_6(Shepard)",
                "\u00acp_6(Shepard)",
                "p_3(Shepard) \u2227 p_4(Shepard)",
                "\u00acp_11(Shepard)",
                "p_7(Shepard)",
                "\u00acp_8(Shepard)",
                "\u00acp_10(Shepard)",
                "\u00acp_9(Shepard)",
                "\u00acp_6(Shepard) \u2192 \u00acp_5(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_6(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_8(Shepard)"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "If Shepard lives in Springfield, then he knows the local stories.",
                "Shepard does not know the local stories.",
                "Shepard both reveals facts and solves puzzles.",
                "Shepard does not expose mysteries.",
                "Shepard writes articles.",
                "Shepard does not tell tales.",
                "Shepard does not discover secrets.",
                "Shepard does not have curiosity.",
                "If Shepard does not know the local stories, then he does not live in Springfield.",
                "Shepard writes articles if and only if he does not know the local stories.",
                "Shepard writes articles if and only if he does not tell tales."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00acp_6(Shepard) \u2192 \u00acp_5(Shepard)",
                        "nl": "If Shepard does not know the local stories, then he does not live in Springfield."
                    },
                    {
                        "fol": "p_7(Shepard) \u2194 \u00acp_6(Shepard)",
                        "nl": "Shepard writes articles if and only if he does not know the local stories."
                    },
                    {
                        "fol": "p_7(Shepard) \u2194 \u00acp_8(Shepard)",
                        "nl": "Shepard writes articles if and only if he does not tell tales."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard).",
                    "p_4(Shepard).",
                    "-p_2(Shepard).",
                    "p_1(Shepard).",
                    "-p_0(Shepard).",
                    "-p_11(Shepard) | (-p_3(Shepard) | -p_4(Shepard)) & (p_3(Shepard) | p_4(Shepard)).",
                    "all x (-p_10(x) | p_2(x) | p_11(x)).",
                    "-(p_1(Shepard) & p_9(Shepard)) | p_10(Shepard).",
                    "all x (-p_8(x) | p_9(x) | p_0(x)).",
                    "(-p_8(Shepard) | -p_7(Shepard)) & (p_8(Shepard) | p_7(Shepard)).",
                    "all x ((-p_7(x) | -p_6(x)) & (p_7(x) | p_6(x))).",
                    "-p_5(Shepard) | p_6(Shepard).",
                    "-p_6(Shepard).",
                    "p_3(Shepard) & p_4(Shepard).",
                    "-p_11(Shepard).",
                    "p_7(Shepard).",
                    "-p_8(Shepard).",
                    "-p_10(Shepard).",
                    "-p_9(Shepard).",
                    "p_6(Shepard) | -p_5(Shepard).",
                    "(-p_7(Shepard) | -p_6(Shepard)) & (p_7(Shepard) | p_6(Shepard)).",
                    "(-p_7(Shepard) | -p_8(Shepard)) & (p_7(Shepard) | p_8(Shepard))."
                ],
                "formulas(goals)": [
                    "-p_5(Shepard)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "p_8(Shepard) \u2295 p_7(Shepard)",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "p_5(Shepard) \u2192 p_6(Shepard)",
                "\u00acp_6(Shepard)",
                "p_3(Shepard) \u2227 p_4(Shepard)",
                "\u00acp_11(Shepard)",
                "p_7(Shepard)",
                "\u00acp_8(Shepard)",
                "\u00acp_10(Shepard)",
                "\u00acp_9(Shepard)",
                "\u00acp_6(Shepard) \u2192 \u00acp_5(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_6(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_8(Shepard)",
                "\u00ac(p_3(Shepard) \u2295 p_4(Shepard))",
                "\u00acp_10(Shepard) \u2192 \u00ac(p_1(Shepard) \u2227 p_9(Shepard))"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "If Shepard lives in Springfield, then he knows the local stories.",
                "Shepard does not know the local stories.",
                "Shepard both reveals facts and solves puzzles.",
                "Shepard does not expose mysteries.",
                "Shepard writes articles.",
                "Shepard does not tell tales.",
                "Shepard does not discover secrets.",
                "Shepard does not have curiosity.",
                "If Shepard does not know the local stories, then he does not live in Springfield.",
                "Shepard writes articles if and only if he does not know the local stories.",
                "Shepard writes articles if and only if he does not tell tales.",
                "It is not the case that Shepard either reveals facts or solves puzzles but not both.",
                "If Shepard does not discover secrets, then it is not the case that he both explores his community and has curiosity."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00ac(p_3(Shepard) \u2295 p_4(Shepard))",
                        "nl": "It is not the case that Shepard either reveals facts or solves puzzles but not both."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u00acp_10(Shepard) \u2192 \u00ac(p_1(Shepard) \u2227 p_9(Shepard))",
                        "nl": "If Shepard does not discover secrets, then it is not the case that he both explores his community and has curiosity."
                    }
                ]
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard)",
                    "p_4(Shepard)",
                    "-p_2(Shepard)",
                    "p_1(Shepard)",
                    "-p_0(Shepard)",
                    "p_11(Shepard) -> (-(p_3(Shepard) <-> p_4(Shepard)))",
                    "all x (p_10(x) -> (p_2(x) | p_11(x)))",
                    "(p_1(Shepard) & p_9(Shepard)) -> p_10(Shepard)",
                    "all x (p_8(x) -> (p_9(x) | p_0(x)))",
                    "-(p_8(Shepard) <-> p_7(Shepard))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "p_5(Shepard) -> p_6(Shepard)",
                    "-p_6(Shepard)",
                    "p_3(Shepard) & p_4(Shepard)",
                    "-p_11(Shepard)",
                    "p_7(Shepard)",
                    "-p_8(Shepard)",
                    "-p_10(Shepard)",
                    "-p_9(Shepard)",
                    "-p_6(Shepard) -> -p_5(Shepard)",
                    "p_7(Shepard) <-> -p_6(Shepard)",
                    "p_7(Shepard) <-> -p_8(Shepard)",
                    "p_3(Shepard) <-> p_4(Shepard)",
                    "-p_10(Shepard) -> -(p_1(Shepard) & p_9(Shepard))"
                ],
                "formulas(goals)": [
                    "-p_5(Shepard)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 (p_3(Shepard) \u2295 p_4(Shepard))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "p_8(Shepard) \u2295 p_7(Shepard)",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "\u00acp_6(Shepard)",
                "p_3(Shepard) \u2227 p_4(Shepard)",
                "\u00acp_11(Shepard)",
                "p_7(Shepard)",
                "\u00acp_8(Shepard)",
                "\u00acp_10(Shepard)",
                "\u00acp_9(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_6(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_8(Shepard)",
                "\u00ac(p_3(Shepard) \u2295 p_4(Shepard))",
                "\u00acp_10(Shepard) \u2192 \u00ac(p_1(Shepard) \u2227 p_9(Shepard))",
                "(p_3(Shepard) \u2227 p_4(Shepard)) \u2192 p_5(Shepard)"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "Shepard does not know the local stories.",
                "Shepard both reveals facts and solves puzzles.",
                "Shepard does not expose mysteries.",
                "Shepard writes articles.",
                "Shepard does not tell tales.",
                "Shepard does not discover secrets.",
                "Shepard does not have curiosity.",
                "Shepard writes articles if and only if he does not know the local stories.",
                "Shepard writes articles if and only if he does not tell tales.",
                "It is not the case that Shepard either reveals facts or solves puzzles but not both.",
                "If Shepard does not discover secrets, then it is not the case that he both explores his community and has curiosity.",
                "If Shepard both reveals facts and solves puzzles, then he lives in Springfield."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_5(Shepard) \u2192 p_6(Shepard)",
                        "nl": "If Shepard lives in Springfield, then he knows the local stories."
                    },
                    {
                        "fol": "\u00acp_6(Shepard) \u2192 \u00acp_5(Shepard)",
                        "nl": "If Shepard does not know the local stories, then he does not live in Springfield."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "(p_3(Shepard) \u2227 p_4(Shepard)) \u2192 p_5(Shepard)",
                        "nl": "If Shepard both reveals facts and solves puzzles, then he lives in Springfield."
                    }
                ]
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard)",
                    "p_4(Shepard)",
                    "-p_2(Shepard)",
                    "p_1(Shepard)",
                    "-p_0(Shepard)",
                    "p_11(Shepard) -> (-(p_3(Shepard) <-> p_4(Shepard)))",
                    "all x (p_10(x) -> (p_2(x) | p_11(x)))",
                    "(p_1(Shepard) & p_9(Shepard)) -> p_10(Shepard)",
                    "all x (p_8(x) -> (p_9(x) | p_0(x)))",
                    "-(p_8(Shepard) <-> p_7(Shepard))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "-p_6(Shepard)",
                    "p_3(Shepard) & p_4(Shepard)",
                    "-p_11(Shepard)",
                    "p_7(Shepard)",
                    "-p_8(Shepard)",
                    "-p_10(Shepard)",
                    "-p_9(Shepard)",
                    "p_7(Shepard) <-> -p_6(Shepard)",
                    "p_7(Shepard) <-> -p_8(Shepard)",
                    "-(-(p_3(Shepard) <-> p_4(Shepard)))",
                    "-p_10(Shepard) -> -(p_1(Shepard) & p_9(Shepard))",
                    "(p_3(Shepard) & p_4(Shepard)) -> p_5(Shepard)"
                ],
                "formulas(goals)": [
                    "- -p_5(Shepard)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 ((p_3(Shepard) \u2228 p_4(Shepard)) \u2227 \u00ac(p_3(Shepard) \u2227 p_4(Shepard)))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "(p_8(Shepard) \u2228 p_7(Shepard)) \u2227 \u00ac(p_8(Shepard) \u2227 p_7(Shepard))",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "\u00acp_6(Shepard)",
                "p_3(Shepard) \u2227 p_4(Shepard)",
                "\u00acp_11(Shepard)",
                "p_7(Shepard)",
                "\u00acp_8(Shepard)",
                "\u00acp_10(Shepard)",
                "\u00acp_9(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_6(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_8(Shepard)",
                "\u00ac((p_3(Shepard) \u2228 p_4(Shepard)) \u2227 \u00ac(p_3(Shepard) \u2227 p_4(Shepard)))",
                "\u00acp_10(Shepard) \u2192 \u00ac(p_1(Shepard) \u2227 p_9(Shepard))",
                "(p_3(Shepard) \u2227 p_4(Shepard)) \u2192 p_5(Shepard)",
                "p_5(Shepard)",
                "\u2200x (\u00acp_7(x) \u2192 p_6(x))",
                "p_8(Shepard) \u2192 (p_9(Shepard) \u2228 p_0(Shepard))",
                "p_10(Shepard) \u2192 (p_2(Shepard) \u2228 p_11(Shepard))"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles (or both), but not both at the same time.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "Shepard does not know the local stories.",
                "Shepard both reveals facts and solves puzzles.",
                "Shepard does not expose mysteries.",
                "Shepard writes articles.",
                "Shepard does not tell tales.",
                "Shepard does not discover secrets.",
                "Shepard does not have curiosity.",
                "Shepard writes articles if and only if he does not know the local stories.",
                "Shepard writes articles if and only if he does not tell tales.",
                "It is not the case that Shepard either reveals facts or solves puzzles (or both), but not both at the same time.",
                "If Shepard does not discover secrets, then it is not the case that he both explores his community and has curiosity.",
                "If Shepard both reveals facts and solves puzzles, then he lives in Springfield.",
                "Shepard lives in Springfield.",
                "Anyone who does not write articles knows the local stories.",
                "If Shepard tells tales, then he either has curiosity or shows passion (or both).",
                "If Shepard discovers secrets, then he either uncovers the truth or exposes mysteries."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_5(Shepard)",
                        "nl": "Shepard lives in Springfield."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (\u00acp_7(x) \u2192 p_6(x))",
                        "nl": "Anyone who does not write articles knows the local stories."
                    },
                    {
                        "fol": "p_8(Shepard) \u2192 (p_9(Shepard) \u2228 p_0(Shepard))",
                        "nl": "If Shepard tells tales, then he either has curiosity or shows passion (or both)."
                    },
                    {
                        "fol": "p_10(Shepard) \u2192 (p_2(Shepard) \u2228 p_11(Shepard))",
                        "nl": "If Shepard discovers secrets, then he either uncovers the truth or exposes mysteries."
                    }
                ]
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard)",
                    "p_4(Shepard)",
                    "-p_2(Shepard)",
                    "p_1(Shepard)",
                    "-p_0(Shepard)",
                    "p_11(Shepard) -> ((p_3(Shepard) | p_4(Shepard)) & (-(p_3(Shepard) & p_4(Shepard))))",
                    "all x (p_10(x) -> (p_2(x) | p_11(x)))",
                    "(p_1(Shepard) & p_9(Shepard)) -> p_10(Shepard)",
                    "all x (p_8(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Shepard) | p_7(Shepard)) & (-(p_8(Shepard) & p_7(Shepard)))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "-p_6(Shepard)",
                    "p_3(Shepard) & p_4(Shepard)",
                    "-p_11(Shepard)",
                    "p_7(Shepard)",
                    "-p_8(Shepard)",
                    "-p_10(Shepard)",
                    "-p_9(Shepard)",
                    "p_7(Shepard) <-> (-p_6(Shepard))",
                    "p_7(Shepard) <-> (-p_8(Shepard))",
                    "-((p_3(Shepard) | p_4(Shepard)) & (-(p_3(Shepard) & p_4(Shepard))))",
                    "-p_10(Shepard) -> (-(p_1(Shepard) & p_9(Shepard)))",
                    "(p_3(Shepard) & p_4(Shepard)) -> p_5(Shepard)",
                    "p_5(Shepard)",
                    "all x ((-p_7(x)) -> p_6(x))",
                    "p_8(Shepard) -> (p_9(Shepard) | p_0(Shepard))",
                    "p_10(Shepard) -> (p_2(Shepard) | p_11(Shepard))"
                ],
                "formulas(goals)": [
                    "-(-p_5(Shepard))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_3(Shepard)",
                "p_4(Shepard)",
                "\u00acp_2(Shepard)",
                "p_1(Shepard)",
                "\u00acp_0(Shepard)",
                "p_11(Shepard) \u2192 ((p_3(Shepard) \u2228 p_4(Shepard)) \u2227 (\u00acp_3(Shepard) \u2228 \u00acp_4(Shepard)))",
                "\u2200x (p_10(x) \u2192 (p_2(x) \u2228 p_11(x)))",
                "(p_1(Shepard) \u2227 p_9(Shepard)) \u2192 p_10(Shepard)",
                "\u2200x (p_8(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                "(p_8(Shepard) \u2228 p_7(Shepard)) \u2227 \u00ac(p_8(Shepard) \u2227 p_7(Shepard))",
                "\u2200x (p_7(x) \u2295 p_6(x))",
                "\u00acp_6(Shepard)",
                "p_3(Shepard) \u2227 p_4(Shepard)",
                "\u00acp_11(Shepard)",
                "p_7(Shepard)",
                "\u00acp_8(Shepard)",
                "\u00acp_10(Shepard)",
                "\u00acp_9(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_6(Shepard)",
                "p_7(Shepard) \u2194 \u00acp_8(Shepard)",
                "\u00ac((p_3(Shepard) \u2228 p_4(Shepard)) \u2227 \u00ac(p_3(Shepard) \u2227 p_4(Shepard)))",
                "\u00acp_10(Shepard) \u2192 \u00ac(p_1(Shepard) \u2227 p_9(Shepard))",
                "(p_3(Shepard) \u2227 p_4(Shepard)) \u2192 p_5(Shepard)",
                "p_5(Shepard)",
                "\u2200x (\u00acp_7(x) \u2192 p_6(x))",
                "p_8(Shepard) \u2192 (p_9(Shepard) \u2228 p_0(Shepard))",
                "p_10(Shepard) \u2192 (p_2(Shepard) \u2228 p_11(Shepard))",
                "p_3(Shepard) \u2228 p_5(Shepard)",
                "p_4(Shepard) \u2228 p_5(Shepard)"
            ],
            "edited_natural_language_context": [
                "Shepard reveals facts.",
                "Shepard solves puzzles.",
                "Shepard does not uncover the truth.",
                "Shepard explores his community.",
                "Shepard does not show passion.",
                "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both.",
                "Anyone who discovers secrets either uncovers the truth or exposes mysteries.",
                "If Shepard explores his community and has curiosity, then he discovers secrets.",
                "Anyone who tells tales has curiosity or shows passion (or both).",
                "Either Shepard tells tales or writes articles, but he does not do both.",
                "If someone writes articles, they may not necessarily know local stories, and if someone knows local stories, they may not necessarily write articles.",
                "Shepard does not know the local stories.",
                "Shepard both reveals facts and solves puzzles.",
                "Shepard does not expose mysteries.",
                "Shepard writes articles.",
                "Shepard does not tell tales.",
                "Shepard does not discover secrets.",
                "Shepard does not have curiosity.",
                "Shepard writes articles if and only if he does not know the local stories.",
                "Shepard writes articles if and only if he does not tell tales.",
                "It is not the case that Shepard either reveals facts or solves puzzles, but not both.",
                "If Shepard does not discover secrets, then it is not the case that he both explores his community and has curiosity.",
                "If Shepard both reveals facts and solves puzzles, then he lives in Springfield.",
                "Shepard lives in Springfield.",
                "Anyone who does not write articles knows the local stories.",
                "If Shepard tells tales, then he either has curiosity or shows passion (or both).",
                "If Shepard discovers secrets, then he either uncovers the truth or exposes mysteries.",
                "Either Shepard reveals facts or he lives in Springfield (or both).",
                "Either Shepard solves puzzles or he lives in Springfield (or both)."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_3(Shepard) \u2228 p_5(Shepard)",
                        "nl": "Either Shepard reveals facts or he lives in Springfield (or both)."
                    },
                    {
                        "fol": "p_4(Shepard) \u2228 p_5(Shepard)",
                        "nl": "Either Shepard solves puzzles or he lives in Springfield (or both)."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "p_11(Shepard) \u2192 ((p_3(Shepard) \u2228 p_4(Shepard)) \u2227 (\u00acp_3(Shepard) \u2228 \u00acp_4(Shepard)))",
                        "nl": "If Shepard exposes mysteries, then he either reveals facts or solves puzzles, but not both."
                    }
                ]
            },
            "conclusion": "Shepard does not live in Springfield.",
            "conclusion_fol": "\u00acp_5(Shepard)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_3(Shepard)",
                    "p_4(Shepard)",
                    "-p_2(Shepard)",
                    "p_1(Shepard)",
                    "-p_0(Shepard)",
                    "p_11(Shepard) -> ((p_3(Shepard) | p_4(Shepard)) & (-p_3(Shepard) | -p_4(Shepard)))",
                    "all x (p_10(x) -> (p_2(x) | p_11(x)))",
                    "(p_1(Shepard) & p_9(Shepard)) -> p_10(Shepard)",
                    "all x (p_8(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Shepard) | p_7(Shepard)) & -(p_8(Shepard) & p_7(Shepard))",
                    "all x (-(p_7(x) <-> p_6(x)))",
                    "-p_6(Shepard)",
                    "p_3(Shepard) & p_4(Shepard)",
                    "-p_11(Shepard)",
                    "p_7(Shepard)",
                    "-p_8(Shepard)",
                    "-p_10(Shepard)",
                    "-p_9(Shepard)",
                    "p_7(Shepard) <-> -p_6(Shepard)",
                    "p_7(Shepard) <-> -p_8(Shepard)",
                    "-((p_3(Shepard) | p_4(Shepard)) & -(p_3(Shepard) & p_4(Shepard)))",
                    "-p_10(Shepard) -> -(p_1(Shepard) & p_9(Shepard))",
                    "(p_3(Shepard) & p_4(Shepard)) -> p_5(Shepard)",
                    "p_5(Shepard)",
                    "all x (-p_7(x) -> p_6(x))",
                    "p_8(Shepard) -> (p_9(Shepard) | p_0(Shepard))",
                    "p_10(Shepard) -> (p_2(Shepard) | p_11(Shepard))",
                    "p_3(Shepard) | p_5(Shepard)",
                    "p_4(Shepard) | p_5(Shepard)"
                ],
                "formulas(goals)": [
                    "-(-p_5(Shepard))"
                ]
            },
            "answer": "False"
        }
    ]
}