{
    "original_context": [
        "Mariam does not check passports.",
        "Mariam handles baggage.",
        "Mariam does not coordinate flights.",
        "Mariam is a mechanic.",
        "Mariam has wings.",
        "Mariam does not manage an airfield.",
        "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
        "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
        "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
        "Mariam either flies solo or is part of a crew, but not both.",
        "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
        "If Mariam is a licensed pilot, then she can either instruct others or manage an airfield, but not both."
    ],
    "original_context_fol": [
        "\u00acp_4(Mariam)",
        "p_5(Mariam)",
        "\u00acp_3(Mariam)",
        "p_2(Mariam)",
        "p_1(Mariam)",
        "\u00acp_0(Mariam)",
        "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
        "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
        "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
        "p_8(Mariam) \u2295 p_9(Mariam)",
        "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
        "p_6(Mariam) \u2192 (p_7(Mariam) \u2295 p_0(Mariam))"
    ],
    "conclusion": "Mariam is a licensed pilot.",
    "conclusion_fol": "p_6(Mariam)",
    "answer": "False",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Mariam",
                    "text": "Mariam does not check passports.",
                    "fol": "\u00acp_4(Mariam)",
                    "str_fol": "\u00accheck_passports(Mariam)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Mariam",
                    "text": "Mariam handles baggage.",
                    "fol": "p_5(Mariam)",
                    "str_fol": "handle_baggage(Mariam)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                    "fol": "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((check_passports(x) \u2295 handle_baggage(x)) \u2192 work_airport(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Mariam",
                "text": "Mariam works at an airport.",
                "fol": "p_11(Mariam)",
                "str_fol": "work_airport(Mariam)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Mariam",
                    "text": "Mariam works at an airport.",
                    "fol": "p_11(Mariam)",
                    "str_fol": "work_airport(Mariam)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Mariam",
                    "text": "Mariam does not coordinate flights.",
                    "fol": "\u00acp_3(Mariam)",
                    "str_fol": "\u00accoordinate_flights(Mariam)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                    "fol": "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                    "str_fol": "work_airport(Mariam) \u2192 (coordinate_flights(Mariam) \u2228 air_traffic_controller(Mariam))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Mariam",
                "text": "Mariam is an air traffic controller.",
                "fol": "p_10(Mariam)",
                "str_fol": "air_traffic_controller(Mariam)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Mariam",
                    "text": "Mariam is an air traffic controller.",
                    "fol": "p_10(Mariam)",
                    "str_fol": "air_traffic_controller(Mariam)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Mariam",
                    "text": "Mariam is a mechanic.",
                    "fol": "p_2(Mariam)",
                    "str_fol": "mechanic(Mariam)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                    "fol": "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                    "str_fol": "crew_member(Mariam) \u2192 (air_traffic_controller(Mariam) \u2295 mechanic(Mariam))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Mariam",
                "text": "Mariam is not a crew member.",
                "fol": "\u00acp_9(Mariam)",
                "str_fol": "\u00accrew_member(Mariam)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Mariam",
                    "text": "Mariam is not a crew member.",
                    "fol": "\u00acp_9(Mariam)",
                    "str_fol": "\u00accrew_member(Mariam)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Mariam either flies solo or is part of a crew, but not both.",
                    "fol": "p_8(Mariam) \u2295 p_9(Mariam)",
                    "str_fol": "fly_solo(Mariam) \u2295 crew_member(Mariam)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Mariam",
                "text": "Mariam flies solo.",
                "fol": "p_8(Mariam)",
                "str_fol": "fly_solo(Mariam)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Mariam",
                    "text": "Mariam has wings.",
                    "fol": "p_1(Mariam)",
                    "str_fol": "has_wings(Mariam)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Mariam",
                    "text": "Mariam flies solo.",
                    "fol": "p_8(Mariam)",
                    "str_fol": "fly_solo(Mariam)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                    "fol": "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                    "str_fol": "has_wings(Mariam) \u2192 (fly_solo(Mariam) \u2295 instruct_others(Mariam))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Mariam",
                "text": "Mariam does not instruct others.",
                "fol": "\u00acp_7(Mariam)",
                "str_fol": "\u00acinstruct_others(Mariam)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Mariam",
                    "text": "Mariam does not instruct others.",
                    "fol": "\u00acp_7(Mariam)",
                    "str_fol": "\u00acinstruct_others(Mariam)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Mariam",
                    "text": "Mariam does not manage an airfield.",
                    "fol": "\u00acp_0(Mariam)",
                    "str_fol": "\u00acmanage_airfield(Mariam)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Mariam is a licensed pilot, then she can either instruct others or manage an airfield, but not both.",
                    "fol": "p_6(Mariam) \u2192 (p_7(Mariam) \u2295 p_0(Mariam))",
                    "str_fol": "licensed_pilot(Mariam) \u2192 (instruct_others(Mariam) \u2295 manage_airfield(Mariam))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Mariam",
                "text": "Mariam is a licensed pilot.",
                "fol": "p_6(Mariam)",
                "str_fol": "licensed_pilot(Mariam)",
                "negation": false
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_6(Mariam) \u2192 (p_7(Mariam) \u2295 p_0(Mariam))",
                "p_11(Mariam)"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "If Mariam is a licensed pilot, then she can either instruct others or manage an airfield, but not both.",
                "Mariam works at an airport."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_11(Mariam)",
                        "nl": "Mariam works at an airport."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_11(x))",
                    "p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam))",
                    "p_9(Mariam) -> (-(p_10(Mariam) <-> p_2(Mariam)))",
                    "-(p_8(Mariam) <-> p_9(Mariam))",
                    "p_1(Mariam) -> (-(p_8(Mariam) <-> p_7(Mariam)))",
                    "p_6(Mariam) -> (-(p_7(Mariam) <-> p_0(Mariam)))",
                    "p_11(Mariam)"
                ],
                "formulas(goals)": [
                    "-p_6(Mariam)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_6(Mariam) \u2192 (p_7(Mariam) \u2295 p_0(Mariam))",
                "p_11(Mariam)",
                "\u00ac(p_7(Mariam) \u2295 p_0(Mariam)) \u2192 \u00acp_6(Mariam)",
                "\u00acp_7(Mariam)"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "If Mariam is a licensed pilot, then she can either instruct others or manage an airfield, but not both.",
                "Mariam works at an airport.",
                "If Mariam neither instructs others nor manages an airfield (or if she does both), then she is not a licensed pilot.",
                "Mariam does not instruct others."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00acp_7(Mariam)",
                        "nl": "Mariam does not instruct others."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u00ac(p_7(Mariam) \u2295 p_0(Mariam)) \u2192 \u00acp_6(Mariam)",
                        "nl": "If Mariam neither instructs others nor manages an airfield (or if she does both), then she is not a licensed pilot."
                    }
                ]
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "all x ((-(p_4(x) <-> p_5(x))) -> p_11(x))",
                    "p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam))",
                    "p_9(Mariam) -> (-(p_10(Mariam) <-> p_2(Mariam)))",
                    "-(p_8(Mariam) <-> p_9(Mariam))",
                    "p_1(Mariam) -> (-(p_8(Mariam) <-> p_7(Mariam)))",
                    "p_6(Mariam) -> (-(p_7(Mariam) <-> p_0(Mariam)))",
                    "p_11(Mariam)",
                    "(-(-(p_7(Mariam) <-> p_0(Mariam))) -> -p_6(Mariam))",
                    "-p_7(Mariam)"
                ],
                "formulas(goals)": [
                    "-p_6(Mariam)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 3,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_11(Mariam)",
                "\u00acp_7(Mariam)",
                "p_11(Mariam) \u2192 p_6(Mariam)"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "Mariam works at an airport.",
                "Mariam does not instruct others.",
                "If Mariam works at an airport, then she is a licensed pilot."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_11(x))",
                    "p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam))",
                    "p_9(Mariam) -> (-(p_10(Mariam) <-> p_2(Mariam)))",
                    "-(p_8(Mariam) <-> p_9(Mariam))",
                    "p_1(Mariam) -> (-(p_8(Mariam) <-> p_7(Mariam)))",
                    "p_11(Mariam)",
                    "-p_7(Mariam)",
                    "p_11(Mariam) -> p_6(Mariam)"
                ],
                "formulas(goals)": [
                    "p_6(Mariam)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_11(Mariam)",
                "\u00acp_7(Mariam)",
                "p_11(Mariam) \u2192 \u00acp_6(Mariam)"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "Mariam works at an airport.",
                "Mariam does not instruct others.",
                "If Mariam works at an airport, then she is not a licensed pilot."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_11(Mariam) \u2192 p_6(Mariam)",
                        "nl": "If Mariam works at an airport, then she is a licensed pilot."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_11(Mariam) \u2192 \u00acp_6(Mariam)",
                        "nl": "If Mariam works at an airport, then she is not a licensed pilot."
                    }
                ]
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "(all x (-(p_4(x) <-> p_5(x)) -> p_11(x)))",
                    "(p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam)))",
                    "(p_9(Mariam) -> (-(p_10(Mariam) <-> p_2(Mariam))))",
                    "(-(p_8(Mariam) <-> p_9(Mariam)))",
                    "(p_1(Mariam) -> (-(p_8(Mariam) <-> p_7(Mariam))))",
                    "p_11(Mariam)",
                    "-p_7(Mariam)",
                    "(p_11(Mariam) -> -p_6(Mariam))"
                ],
                "formulas(goals)": [
                    "-p_6(Mariam)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_11(Mariam)",
                "\u00acp_7(Mariam)",
                "p_11(Mariam) \u2192 p_6(Mariam)"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "Mariam works at an airport.",
                "Mariam does not instruct others.",
                "If Mariam works at an airport, then she is a licensed pilot."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_11(Mariam) \u2192 \u00acp_6(Mariam)",
                        "nl": "If Mariam works at an airport, then she is not a licensed pilot."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_11(Mariam) \u2192 p_6(Mariam)",
                        "nl": "If Mariam works at an airport, then she is a licensed pilot."
                    }
                ]
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "all x ((-(p_4(x) <-> p_5(x))) -> p_11(x))",
                    "p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam))",
                    "p_9(Mariam) -> (-(p_10(Mariam) <-> p_2(Mariam)))",
                    "-(p_8(Mariam) <-> p_9(Mariam))",
                    "p_1(Mariam) -> (-(p_8(Mariam) <-> p_7(Mariam)))",
                    "p_11(Mariam)",
                    "-p_7(Mariam)",
                    "p_11(Mariam) -> p_6(Mariam)"
                ],
                "formulas(goals)": [
                    "p_6(Mariam)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_11(Mariam)",
                "\u00acp_7(Mariam)",
                "p_11(Mariam) \u2192 p_6(Mariam)",
                "p_6(Mariam)",
                "p_10(Mariam)",
                "p_8(Mariam) \u2228 p_9(Mariam)",
                "\u00ac(p_8(Mariam) \u2227 p_9(Mariam))"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "Mariam works at an airport.",
                "Mariam does not instruct others.",
                "If Mariam works at an airport, then she is a licensed pilot.",
                "Mariam is a licensed pilot.",
                "Mariam is an air traffic controller.",
                "Mariam flies solo or is part of a crew.",
                "Mariam is not both flying solo and part of a crew."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_6(Mariam)",
                        "nl": "Mariam is a licensed pilot."
                    },
                    {
                        "fol": "p_10(Mariam)",
                        "nl": "Mariam is an air traffic controller."
                    },
                    {
                        "fol": "p_8(Mariam) \u2228 p_9(Mariam)",
                        "nl": "Mariam flies solo or is part of a crew."
                    },
                    {
                        "fol": "\u00ac(p_8(Mariam) \u2227 p_9(Mariam))",
                        "nl": "Mariam is not both flying solo and part of a crew."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_11(x))",
                    "p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam))",
                    "p_9(Mariam) -> -(p_10(Mariam) <-> p_2(Mariam))",
                    "-(p_8(Mariam) <-> p_9(Mariam))",
                    "p_1(Mariam) -> -(p_8(Mariam) <-> p_7(Mariam))",
                    "p_11(Mariam)",
                    "-p_7(Mariam)",
                    "p_11(Mariam) -> p_6(Mariam)",
                    "p_6(Mariam)",
                    "p_10(Mariam)",
                    "p_8(Mariam) | p_9(Mariam)",
                    "-(p_8(Mariam) & p_9(Mariam))"
                ],
                "formulas(goals)": [
                    "p_6(Mariam)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_4(Mariam)",
                "p_5(Mariam)",
                "\u00acp_3(Mariam)",
                "p_2(Mariam)",
                "p_1(Mariam)",
                "\u00acp_0(Mariam)",
                "\u2200x ((p_4(x) \u2295 p_5(x)) \u2192 p_11(x))",
                "p_11(Mariam) \u2192 (p_3(Mariam) \u2228 p_10(Mariam))",
                "p_9(Mariam) \u2192 (p_10(Mariam) \u2295 p_2(Mariam))",
                "p_8(Mariam) \u2295 p_9(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2295 p_7(Mariam))",
                "p_11(Mariam)",
                "\u00acp_7(Mariam)",
                "p_11(Mariam) \u2192 p_6(Mariam)",
                "p_6(Mariam)",
                "p_10(Mariam)",
                "p_8(Mariam) \u2228 p_9(Mariam)",
                "\u00ac(p_8(Mariam) \u2227 p_9(Mariam))",
                "p_6(Mariam) \u2192 p_6(Mariam)",
                "p_10(Mariam) \u2228 \u00acp_10(Mariam)",
                "p_8(Mariam) \u2192 \u00acp_9(Mariam)",
                "(\u00acp_4(Mariam) \u2227 p_5(Mariam)) \u2192 p_11(Mariam)",
                "p_1(Mariam) \u2192 (p_8(Mariam) \u2228 p_7(Mariam))"
            ],
            "edited_natural_language_context": [
                "Mariam does not check passports.",
                "Mariam handles baggage.",
                "Mariam does not coordinate flights.",
                "Mariam is a mechanic.",
                "Mariam has wings.",
                "Mariam does not manage an airfield.",
                "If someone either checks passports or handles baggage (but not both), then they work at an airport.",
                "If Mariam works at an airport, then she either coordinates flights or is an air traffic controller (or both).",
                "If Mariam is a crew member, then she is either an air traffic controller or a mechanic, but not both.",
                "Mariam either flies solo or is part of a crew, but not both.",
                "If Mariam has wings, then she can either fly solo or instruct others, but not both.",
                "Mariam works at an airport.",
                "Mariam does not instruct others.",
                "If Mariam works at an airport, then she is a licensed pilot.",
                "Mariam is a licensed pilot.",
                "Mariam is an air traffic controller.",
                "Mariam flies solo or is part of a crew.",
                "Mariam is not both flying solo and part of a crew.",
                "If Mariam is a licensed pilot, then Mariam is a licensed pilot.",
                "Mariam is an air traffic controller or Mariam is not an air traffic controller.",
                "If Mariam flies solo, then she is not part of a crew.",
                "If Mariam does not check passports and handles baggage, then she works at an airport.",
                "If Mariam has wings, then she either flies solo or instructs others."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_6(Mariam) \u2192 p_6(Mariam)",
                        "nl": "If Mariam is a licensed pilot, then Mariam is a licensed pilot."
                    },
                    {
                        "fol": "p_10(Mariam) \u2228 \u00acp_10(Mariam)",
                        "nl": "Mariam is an air traffic controller or Mariam is not an air traffic controller."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "p_8(Mariam) \u2192 \u00acp_9(Mariam)",
                        "nl": "If Mariam flies solo, then she is not part of a crew."
                    },
                    {
                        "fol": "(\u00acp_4(Mariam) \u2227 p_5(Mariam)) \u2192 p_11(Mariam)",
                        "nl": "If Mariam does not check passports and handles baggage, then she works at an airport."
                    },
                    {
                        "fol": "p_1(Mariam) \u2192 (p_8(Mariam) \u2228 p_7(Mariam))",
                        "nl": "If Mariam has wings, then she either flies solo or instructs others."
                    }
                ]
            },
            "conclusion": "Mariam is a licensed pilot.",
            "conclusion_fol": "p_6(Mariam)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Mariam)",
                    "p_5(Mariam)",
                    "-p_3(Mariam)",
                    "p_2(Mariam)",
                    "p_1(Mariam)",
                    "-p_0(Mariam)",
                    "all x (-(p_4(x) <-> p_5(x)) -> p_11(x))",
                    "p_11(Mariam) -> (p_3(Mariam) | p_10(Mariam))",
                    "p_9(Mariam) -> (-(p_10(Mariam) <-> p_2(Mariam)))",
                    "-(p_8(Mariam) <-> p_9(Mariam))",
                    "p_1(Mariam) -> (-(p_8(Mariam) <-> p_7(Mariam)))",
                    "p_11(Mariam)",
                    "-p_7(Mariam)",
                    "p_11(Mariam) -> p_6(Mariam)",
                    "p_6(Mariam)",
                    "p_10(Mariam)",
                    "p_8(Mariam) | p_9(Mariam)",
                    "-(p_8(Mariam) & p_9(Mariam))",
                    "p_6(Mariam) -> p_6(Mariam)",
                    "p_10(Mariam) | -p_10(Mariam)",
                    "p_8(Mariam) -> -p_9(Mariam)",
                    "(-p_4(Mariam) & p_5(Mariam)) -> p_11(Mariam)",
                    "p_1(Mariam) -> (p_8(Mariam) | p_7(Mariam))"
                ],
                "formulas(goals)": [
                    "p_6(Mariam)"
                ]
            },
            "answer": "True"
        }
    ]
}