{
    "original_context": [
        "Julia does not seek answers.",
        "Julia is not intelligent.",
        "Julia cannot solve problems.",
        "Julia publishes papers.",
        "Julia does not conduct research.",
        "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
        "Everyone is either inquisitive or asks questions.",
        "If someone is an expert, then they can solve problems and publish papers.",
        "If Julia makes discoveries, then she is an expert.",
        "Anyone who is inquisitive either reads books or conducts research.",
        "If someone reads books and is curious, then they can make discoveries.",
        "Every human either has knowledge or is curious (or both)."
    ],
    "original_context_fol": [
        "\u00acp_3(Julia)",
        "\u00acp_4(Julia)",
        "\u00acp_1(Julia)",
        "p_2(Julia)",
        "\u00acp_0(Julia)",
        "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
        "\u2200x (p_9(x) \u2228 p_11(x))",
        "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
        "p_8(Julia) \u2192 p_10(Julia)",
        "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
        "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
        "\u2200x (p_5(x) \u2228 p_6(x))"
    ],
    "conclusion": "Julia has knowledge.",
    "conclusion_fol": "p_5(Julia)",
    "answer": "True",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Julia",
                    "text": "Julia does not seek answers.",
                    "fol": "\u00acp_3(Julia)",
                    "str_fol": "\u00acseeks_answers(Julia)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Julia",
                    "text": "Julia is not intelligent.",
                    "fol": "\u00acp_4(Julia)",
                    "str_fol": "\u00acis_intelligent(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                    "fol": "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                    "str_fol": "(seeks_answers(Julia) \u2295 asks_questions(Julia)) \u2192 is_intelligent(Julia)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Julia",
                "text": "Julia does not ask questions.",
                "fol": "\u00acp_11(Julia)",
                "str_fol": "\u00acasks_questions(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Julia",
                    "text": "Julia does not ask questions.",
                    "fol": "\u00acp_11(Julia)",
                    "str_fol": "\u00acasks_questions(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone is either inquisitive or asks questions.",
                    "fol": "\u2200x (p_9(x) \u2228 p_11(x))",
                    "str_fol": "\u2200x (is_inquisitive(x) \u2228 asks_questions(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Julia",
                "text": "Julia is inquisitive.",
                "fol": "p_9(Julia)",
                "str_fol": "is_inquisitive(Julia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Julia",
                    "text": "Julia cannot solve problems.",
                    "fol": "\u00acp_1(Julia)",
                    "str_fol": "\u00acsolve_problems(Julia)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Julia",
                    "text": "Julia publishes papers.",
                    "fol": "p_2(Julia)",
                    "str_fol": "publish_papers(Julia)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone is an expert, then they can solve problems and publish papers.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
                    "str_fol": "\u2200x (is_expert(x) \u2192 (solve_problems(x) \u2227 publish_papers(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Julia",
                "text": "Julia is not an expert.",
                "fol": "\u00acp_10(Julia)",
                "str_fol": "\u00acis_expert(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Julia",
                    "text": "Julia is not an expert.",
                    "fol": "\u00acp_10(Julia)",
                    "str_fol": "\u00acis_expert(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Julia makes discoveries, then she is an expert.",
                    "fol": "p_8(Julia) \u2192 p_10(Julia)",
                    "str_fol": "makes_discoveries(Julia) \u2192 is_expert(Julia)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Julia",
                "text": "Julia does not make discoveries.",
                "fol": "\u00acp_8(Julia)",
                "str_fol": "\u00acmakes_discoveries(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Julia",
                    "text": "Julia is inquisitive.",
                    "fol": "p_9(Julia)",
                    "str_fol": "is_inquisitive(Julia)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Julia",
                    "text": "Julia does not conduct research.",
                    "fol": "\u00acp_0(Julia)",
                    "str_fol": "\u00acconducts_research(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who is inquisitive either reads books or conducts research.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                    "str_fol": "\u2200x (is_inquisitive(x) \u2192 (reads_books(x) \u2228 conducts_research(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Julia",
                "text": "Julia reads books.",
                "fol": "p_7(Julia)",
                "str_fol": "reads_books(Julia)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Julia",
                    "text": "Julia reads books.",
                    "fol": "p_7(Julia)",
                    "str_fol": "reads_books(Julia)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Julia",
                    "text": "Julia does not make discoveries.",
                    "fol": "\u00acp_8(Julia)",
                    "str_fol": "\u00acmakes_discoveries(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone reads books and is curious, then they can make discoveries.",
                    "fol": "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((reads_books(x) \u2227 is_curious(x)) \u2192 makes_discoveries(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Julia",
                "text": "Julia is not curious.",
                "fol": "\u00acp_6(Julia)",
                "str_fol": "\u00acis_curious(Julia)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Julia",
                    "text": "Julia is not curious.",
                    "fol": "\u00acp_6(Julia)",
                    "str_fol": "\u00acis_curious(Julia)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Every human either has knowledge or is curious (or both).",
                    "fol": "\u2200x (p_5(x) \u2228 p_6(x))",
                    "str_fol": "\u2200x (has_knowledge(x) \u2228 is_curious(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Julia",
                "text": "Julia has knowledge.",
                "fol": "p_5(Julia)",
                "str_fol": "has_knowledge(Julia)",
                "negation": false
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
                "\u00acp_6(Julia)",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_5(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "If someone reads books and is curious, then they can make discoveries.",
                "Julia is not curious.",
                "Every human either has knowledge or is curious (or both).",
                "Julia has knowledge."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "\u00acp_11(Julia)",
                        "nl": "Julia does not ask questions."
                    },
                    {
                        "fol": "p_9(Julia)",
                        "nl": "Julia is inquisitive."
                    },
                    {
                        "fol": "\u00acp_10(Julia)",
                        "nl": "Julia is not an expert."
                    },
                    {
                        "fol": "\u00acp_8(Julia)",
                        "nl": "Julia does not make discoveries."
                    },
                    {
                        "fol": "p_7(Julia)",
                        "nl": "Julia reads books."
                    },
                    {
                        "fol": "\u00acp_6(Julia)",
                        "nl": "Julia is not curious."
                    },
                    {
                        "fol": "p_5(Julia)",
                        "nl": "Julia has knowledge."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                        "nl": "If someone is not an expert, then they can solve problems and publish papers, or neither."
                    },
                    {
                        "fol": "\u00acp_8(Julia) \u2228 p_10(Julia)",
                        "nl": "Either Julia does not make discoveries or she is an expert."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "(all x (p_9(x) | p_11(x)))",
                    "(all x (-p_10(x) | (p_1(x) & p_2(x))))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "(all x (p_9(x) -> (p_7(x) | p_0(x))))",
                    "p_7(Julia)",
                    "(all x ((p_7(x) & p_6(x)) -> p_8(x)))",
                    "-p_6(Julia)",
                    "(all x (p_5(x) | p_6(x)))",
                    "p_5(Julia)"
                ],
                "formulas(goals)": [
                    "p_5(Julia)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 2,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_6(Julia)",
                "p_6(Julia) \u2192 \u00acp_5(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "If someone reads books and is curious, then they can make discoveries.",
                "Every human either has knowledge or is curious (or both).",
                "Julia is curious.",
                "If Julia is curious, then she does not have knowledge."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "p_5(Julia)",
                        "nl": "Julia has knowledge."
                    },
                    {
                        "fol": "\u00acp_6(Julia)",
                        "nl": "Julia is not curious."
                    }
                ],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_6(Julia)",
                        "nl": "Julia is curious."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "p_6(Julia) \u2192 \u00acp_5(Julia)",
                        "nl": "If Julia is curious, then she does not have knowledge."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia).",
                    "-p_4(Julia).",
                    "-p_1(Julia).",
                    "p_2(Julia).",
                    "-p_0(Julia).",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia).",
                    "-p_11(Julia).",
                    "p_9(Julia).",
                    "all x (p_9(x) | p_11(x)).",
                    "all x (-p_10(x) | (p_1(x) & p_2(x))).",
                    "-p_10(Julia).",
                    "-p_8(Julia) | p_10(Julia).",
                    "-p_8(Julia).",
                    "all x (p_9(x) -> (p_7(x) | p_0(x))).",
                    "p_7(Julia).",
                    "all x ((p_7(x) & p_6(x)) -> p_8(x)).",
                    "all x (p_5(x) | p_6(x)).",
                    "p_6(Julia).",
                    "p_6(Julia) -> -p_5(Julia)."
                ],
                "formulas(goals)": [
                    "-p_5(Julia)."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 3,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x ((p_7(x) \u2227 p_6(x) \u2227 p_5(x)) \u2192 p_8(x))",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_6(Julia)",
                "p_6(Julia) \u2192 \u00acp_5(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "If someone reads books, is curious, and has knowledge, then they can make discoveries.",
                "Every human either has knowledge or is curious (or both).",
                "Julia is curious.",
                "If Julia is curious, then she does not have knowledge."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_7(x) \u2227 p_6(x)) \u2192 p_8(x))",
                        "nl": "If someone reads books and is curious, then they can make discoveries."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_7(x) \u2227 p_6(x) \u2227 p_5(x)) \u2192 p_8(x))",
                        "nl": "If someone reads books, is curious, and has knowledge, then they can make discoveries."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x ((p_7(x) & p_6(x) & p_5(x)) -> p_8(x))",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_6(Julia) -> -p_5(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_6(Julia)",
                "p_6(Julia) \u2192 p_5(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "Every human either has knowledge or is curious (or both).",
                "Julia is curious.",
                "If Julia is curious, then she has knowledge."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_6(Julia) \u2192 \u00acp_5(Julia)",
                        "nl": "If Julia is curious, then she does not have knowledge."
                    },
                    {
                        "fol": "\u2200x ((p_7(x) \u2227 p_6(x) \u2227 p_5(x)) \u2192 p_8(x))",
                        "nl": "If someone reads books, is curious, and has knowledge, then they can make discoveries."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_6(Julia) \u2192 p_5(Julia)",
                        "nl": "If Julia is curious, then she has knowledge."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_6(Julia) -> p_5(Julia)"
                ],
                "formulas(goals)": [
                    "p_5(Julia)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_6(Julia)",
                "p_7(Julia) \u2192 \u00acp_5(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (but not both), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "Every human either has knowledge or is curious (or both).",
                "Julia is curious.",
                "If Julia reads books, then she does not have knowledge."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_6(Julia) \u2192 p_5(Julia)",
                        "nl": "If Julia is curious, then she has knowledge."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_7(Julia) \u2192 \u00acp_5(Julia)",
                        "nl": "If Julia reads books, then she does not have knowledge."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "(-(p_3(Julia) <-> p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_7(Julia) -> -p_5(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "((p_3(Julia) \u2228 p_11(Julia)) \u2227 \u00ac(p_3(Julia) \u2227 p_11(Julia))) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_6(Julia)",
                "p_7(Julia) \u2192 \u00acp_5(Julia)",
                "p_5(Julia) \u2192 \u00acp_7(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (and not both simultaneously), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "Every human either has knowledge or is curious (or both).",
                "Julia is curious.",
                "If Julia reads books, then she does not have knowledge.",
                "If Julia has knowledge, then she does not read books."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "(p_3(Julia) \u2295 p_11(Julia)) \u2192 p_4(Julia)",
                        "nl": "If Julia either seeks answers or asks questions (but not both), then she is intelligent."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "((p_3(Julia) \u2228 p_11(Julia)) \u2227 \u00ac(p_3(Julia) \u2227 p_11(Julia))) \u2192 p_4(Julia)",
                        "nl": "If Julia either seeks answers or asks questions (and not both simultaneously), then she is intelligent."
                    },
                    {
                        "fol": "p_5(Julia) \u2192 \u00acp_7(Julia)",
                        "nl": "If Julia has knowledge, then she does not read books."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "((p_3(Julia) | p_11(Julia)) & -(p_3(Julia) & p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_7(Julia) -> -p_5(Julia)",
                    "p_5(Julia) -> -p_7(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_3(Julia)",
                "\u00acp_4(Julia)",
                "\u00acp_1(Julia)",
                "p_2(Julia)",
                "\u00acp_0(Julia)",
                "((p_3(Julia) \u2228 p_11(Julia)) \u2227 \u00ac(p_3(Julia) \u2227 p_11(Julia))) \u2192 p_4(Julia)",
                "\u00acp_11(Julia)",
                "p_9(Julia)",
                "\u2200x (p_9(x) \u2228 p_11(x))",
                "\u2200x (\u00acp_10(x) \u2228 (p_1(x) \u2227 p_2(x)))",
                "\u00acp_10(Julia)",
                "\u00acp_8(Julia) \u2228 p_10(Julia)",
                "\u00acp_8(Julia)",
                "\u2200x (p_9(x) \u2192 (p_7(x) \u2228 p_0(x)))",
                "p_7(Julia)",
                "\u2200x (p_5(x) \u2228 p_6(x))",
                "p_6(Julia)",
                "p_7(Julia) \u2192 \u00acp_5(Julia)",
                "p_5(Julia) \u2192 \u00acp_7(Julia)",
                "p_7(Julia) \u2228 \u00acp_7(Julia)",
                "\u2200x (\u00acp_11(x) \u2192 p_9(x))",
                "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
                "p_7(Julia) \u2228 p_0(Julia)",
                "\u00acp_3(Julia) \u2227 \u00acp_11(Julia)",
                "p_9(Julia) \u2192 p_9(Julia)"
            ],
            "edited_natural_language_context": [
                "Julia does not seek answers.",
                "Julia is not intelligent.",
                "Julia cannot solve problems.",
                "Julia publishes papers.",
                "Julia does not conduct research.",
                "If Julia either seeks answers or asks questions (and not both simultaneously), then she is intelligent.",
                "Julia does not ask questions.",
                "Julia is inquisitive.",
                "Everyone is either inquisitive or asks questions.",
                "If someone is not an expert, then they can solve problems and publish papers, or neither.",
                "Julia is not an expert.",
                "Either Julia does not make discoveries or she is an expert.",
                "Julia does not make discoveries.",
                "Anyone who is inquisitive either reads books or conducts research.",
                "Julia reads books.",
                "Every human either has knowledge or is curious (or both).",
                "Julia is curious.",
                "If Julia reads books, then she does not have knowledge.",
                "If Julia has knowledge, then she does not read books.",
                "Julia either reads books or does not read books.",
                "If someone does not ask questions, then they are inquisitive.",
                "If someone is an expert, then they can solve problems and publish papers.",
                "Julia either reads books or conducts research.",
                "Julia neither seeks answers nor asks questions.",
                "If Julia is inquisitive, then she is inquisitive."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_7(Julia) \u2228 \u00acp_7(Julia)",
                        "nl": "Julia either reads books or does not read books."
                    },
                    {
                        "fol": "p_7(Julia) \u2228 p_0(Julia)",
                        "nl": "Julia either reads books or conducts research."
                    },
                    {
                        "fol": "\u00acp_3(Julia) \u2227 \u00acp_11(Julia)",
                        "nl": "Julia neither seeks answers nor asks questions."
                    },
                    {
                        "fol": "p_9(Julia) \u2192 p_9(Julia)",
                        "nl": "If Julia is inquisitive, then she is inquisitive."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x (\u00acp_11(x) \u2192 p_9(x))",
                        "nl": "If someone does not ask questions, then they are inquisitive."
                    },
                    {
                        "fol": "\u2200x (p_10(x) \u2192 (p_1(x) \u2227 p_2(x)))",
                        "nl": "If someone is an expert, then they can solve problems and publish papers."
                    }
                ]
            },
            "conclusion": "Julia has knowledge.",
            "conclusion_fol": "p_5(Julia)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_3(Julia)",
                    "-p_4(Julia)",
                    "-p_1(Julia)",
                    "p_2(Julia)",
                    "-p_0(Julia)",
                    "((p_3(Julia) | p_11(Julia)) & -(p_3(Julia) & p_11(Julia))) -> p_4(Julia)",
                    "-p_11(Julia)",
                    "p_9(Julia)",
                    "all x (p_9(x) | p_11(x))",
                    "all x (-p_10(x) | (p_1(x) & p_2(x)))",
                    "-p_10(Julia)",
                    "-p_8(Julia) | p_10(Julia)",
                    "-p_8(Julia)",
                    "all x (p_9(x) -> (p_7(x) | p_0(x)))",
                    "p_7(Julia)",
                    "all x (p_5(x) | p_6(x))",
                    "p_6(Julia)",
                    "p_7(Julia) -> -p_5(Julia)",
                    "p_5(Julia) -> -p_7(Julia)",
                    "p_7(Julia) | -p_7(Julia)",
                    "all x (-p_11(x) -> p_9(x))",
                    "all x (p_10(x) -> (p_1(x) & p_2(x)))",
                    "p_7(Julia) | p_0(Julia)",
                    "-p_3(Julia) & -p_11(Julia)",
                    "p_9(Julia) -> p_9(Julia)"
                ],
                "formulas(goals)": [
                    "-p_5(Julia)"
                ]
            },
            "answer": "False"
        }
    ]
}