{
    "original_context": [
        "Anna does not donate her time.",
        "Anna does not earn respect.",
        "Anna takes risks.",
        "Anna does not achieve success.",
        "Anna makes chocolate.",
        "Anna pursues her dream.",
        "Anyone who helps others or donates their time earns respect.",
        "If Anna is innovative and takes risks, then she achieves success.",
        "If Anna either makes chocolate or sells candy (but not both), then she is innovative.",
        "If Anna sells candy, then she owns a business.",
        "If Anna pursues her dream, then she is a passionate entrepreneur.",
        "If Anna owns a business, then she either makes people happy or helps others, but not both.",
        "Anna either builds a loyal customer base or makes people happy.",
        "If Anna is a passionate entrepreneur, then she creates unique products and builds a loyal customer base."
    ],
    "original_context_fol": [
        "\u00acp_4(Anna)",
        "\u00acp_5(Anna)",
        "p_2(Anna)",
        "\u00acp_3(Anna)",
        "p_1(Anna)",
        "p_0(Anna)",
        "\u2200x ((p_11(x) \u2228 p_4(x)) \u2192 p_5(x))",
        "(p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna)",
        "(p_1(Anna) \u2295 p_12(Anna)) \u2192 p_13(Anna)",
        "p_12(Anna) \u2192 p_10(Anna)",
        "p_0(Anna) \u2192 p_6(Anna)",
        "p_10(Anna) \u2192 (p_9(Anna) \u2295 p_11(Anna))",
        "p_8(Anna) \u2228 p_9(Anna)",
        "p_6(Anna) \u2192 (p_7(Anna) \u2227 p_8(Anna))"
    ],
    "conclusion": "Anna does not create unique products.",
    "conclusion_fol": "\u00acp_7(Anna)",
    "answer": "False",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Anna",
                    "text": "Anna does not donate her time.",
                    "fol": "\u00acp_4(Anna)",
                    "str_fol": "\u00acdonates_time(Anna)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Anna",
                    "text": "Anna does not earn respect.",
                    "fol": "\u00acp_5(Anna)",
                    "str_fol": "\u00acearns_respect(Anna)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who helps others or donates their time earns respect.",
                    "fol": "\u2200x ((p_11(x) \u2228 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((helps_others(x) \u2228 donates_time(x)) \u2192 earns_respect(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Anna",
                "text": "Anna does not help others.",
                "fol": "\u00acp_11(Anna)",
                "str_fol": "\u00achelps_others(Anna)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Anna",
                    "text": "Anna takes risks.",
                    "fol": "p_2(Anna)",
                    "str_fol": "takes_risks(Anna)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Anna",
                    "text": "Anna does not achieve success.",
                    "fol": "\u00acp_3(Anna)",
                    "str_fol": "\u00acachieves_success(Anna)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Anna is innovative and takes risks, then she achieves success.",
                    "fol": "(p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna)",
                    "str_fol": "(is_innovative(Anna) \u2227 takes_risks(Anna)) \u2192 achieves_success(Anna)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Anna",
                "text": "Anna is not innovative.",
                "fol": "\u00acp_13(Anna)",
                "str_fol": "\u00acis_innovative(Anna)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Anna",
                    "text": "Anna makes chocolate.",
                    "fol": "p_1(Anna)",
                    "str_fol": "makes_chocolate(Anna)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Anna",
                    "text": "Anna is not innovative.",
                    "fol": "\u00acp_13(Anna)",
                    "str_fol": "\u00acis_innovative(Anna)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Anna either makes chocolate or sells candy (but not both), then she is innovative.",
                    "fol": "(p_1(Anna) \u2295 p_12(Anna)) \u2192 p_13(Anna)",
                    "str_fol": "(makes_chocolate(Anna) \u2295 sells_candy(Anna)) \u2192 is_innovative(Anna)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Anna",
                "text": "Anna sells candy.",
                "fol": "p_12(Anna)",
                "str_fol": "sells_candy(Anna)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Anna",
                    "text": "Anna sells candy.",
                    "fol": "p_12(Anna)",
                    "str_fol": "sells_candy(Anna)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Anna sells candy, then she owns a business.",
                    "fol": "p_12(Anna) \u2192 p_10(Anna)",
                    "str_fol": "sells_candy(Anna) \u2192 owns_business(Anna)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Anna",
                "text": "Anna owns a business.",
                "fol": "p_10(Anna)",
                "str_fol": "owns_business(Anna)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Anna",
                    "text": "Anna pursues her dream.",
                    "fol": "p_0(Anna)",
                    "str_fol": "pursues_dream(Anna)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Anna pursues her dream, then she is a passionate entrepreneur.",
                    "fol": "p_0(Anna) \u2192 p_6(Anna)",
                    "str_fol": "pursues_dream(Anna) \u2192 passionate_entrepreneur(Anna)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Anna",
                "text": "Anna is a passionate entrepreneur.",
                "fol": "p_6(Anna)",
                "str_fol": "passionate_entrepreneur(Anna)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Anna",
                    "text": "Anna owns a business.",
                    "fol": "p_10(Anna)",
                    "str_fol": "owns_business(Anna)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Anna",
                    "text": "Anna does not help others.",
                    "fol": "\u00acp_11(Anna)",
                    "str_fol": "\u00achelps_others(Anna)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Anna owns a business, then she either makes people happy or helps others, but not both.",
                    "fol": "p_10(Anna) \u2192 (p_9(Anna) \u2295 p_11(Anna))",
                    "str_fol": "owns_business(Anna) \u2192 (makes_people_happy(Anna) \u2295 helps_others(Anna))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Anna",
                "text": "Anna makes people happy.",
                "fol": "p_9(Anna)",
                "str_fol": "makes_people_happy(Anna)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Anna",
                    "text": "Anna makes people happy.",
                    "fol": "p_9(Anna)",
                    "str_fol": "makes_people_happy(Anna)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anna either builds a loyal customer base or makes people happy.",
                    "fol": "p_8(Anna) \u2228 p_9(Anna)",
                    "str_fol": "build_loyal_customer_base(Anna) \u2228 makes_people_happy(Anna)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Anna",
                    "text": "Anna is a passionate entrepreneur.",
                    "fol": "p_6(Anna)",
                    "str_fol": "passionate_entrepreneur(Anna)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Anna is a passionate entrepreneur, then she creates unique products and builds a loyal customer base.",
                    "fol": "p_6(Anna) \u2192 (p_7(Anna) \u2227 p_8(Anna))",
                    "str_fol": "passionate_entrepreneur(Anna) \u2192 (create_unique_products(Anna) \u2227 build_loyal_customer_base(Anna))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Anna",
                "text": "Anna does not create unique products.",
                "fol": "\u00acp_7(Anna)",
                "str_fol": "\u00accreate_unique_products(Anna)",
                "negation": true
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_4(Anna)",
                "\u00acp_5(Anna)",
                "p_2(Anna)",
                "\u00acp_3(Anna)",
                "p_1(Anna)",
                "p_0(Anna)",
                "\u00acp_13(Anna)",
                "p_8(Anna)",
                "p_7(Anna) \u2228 p_12(Anna)",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                "(p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna)",
                "\u00ac(p_1(Anna) \u2194 p_12(Anna)) \u2192 p_13(Anna)",
                "\u00acp_10(Anna) \u2192 \u00acp_12(Anna)",
                "p_0(Anna) \u2192 p_6(Anna)",
                "p_10(Anna) \u2192 \u00ac(p_9(Anna) \u2194 p_11(Anna))",
                "p_8(Anna) \u2228 p_9(Anna)",
                "p_6(Anna) \u2192 (p_7(Anna) \u2227 p_8(Anna))"
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "Anna either creates unique products or sells candy.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna makes chocolate and sells candy are not equivalent (one is true and one is false), then Anna is innovative.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then making people happy and helping others are not equivalent (one is true and one is false).",
                "Anna either builds a loyal customer base or makes people happy.",
                "If Anna is a passionate entrepreneur, then she creates unique products and builds a loyal customer base."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_11(x) \u2228 p_4(x)) \u2192 p_5(x))",
                        "nl": "Anyone who helps others or donates their time earns respect."
                    },
                    {
                        "fol": "p_12(Anna) \u2192 p_10(Anna)",
                        "nl": "If Anna sells candy, then she owns a business."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "\u00acp_13(Anna)",
                        "nl": "Anna is not innovative."
                    },
                    {
                        "fol": "p_8(Anna)",
                        "nl": "Anna builds a loyal customer base."
                    },
                    {
                        "fol": "p_7(Anna) \u2228 p_12(Anna)",
                        "nl": "Anna either creates unique products or sells candy."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                        "nl": "For any person, if they help others then they earn respect, and if they donate their time then they earn respect."
                    },
                    {
                        "fol": "\u00acp_10(Anna) \u2192 \u00acp_12(Anna)",
                        "nl": "If Anna does not own a business, then she does not sell candy."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Anna)",
                    "-p_5(Anna)",
                    "p_2(Anna)",
                    "-p_3(Anna)",
                    "p_1(Anna)",
                    "p_0(Anna)",
                    "-p_13(Anna)",
                    "p_8(Anna)",
                    "p_7(Anna) | p_12(Anna)",
                    "all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "(p_13(Anna) & p_2(Anna)) -> p_3(Anna)",
                    "(-(p_1(Anna) <-> p_12(Anna))) -> p_13(Anna)",
                    "-p_10(Anna) -> -p_12(Anna)",
                    "p_0(Anna) -> p_6(Anna)",
                    "p_10(Anna) -> (-(p_9(Anna) <-> p_11(Anna)))",
                    "p_8(Anna) | p_9(Anna)",
                    "p_6(Anna) -> (p_7(Anna) & p_8(Anna))"
                ],
                "formulas(goals)": [
                    "p_7(Anna)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "\u00acp_4(Anna)",
                "\u00acp_5(Anna)",
                "p_2(Anna)",
                "\u00acp_3(Anna)",
                "p_1(Anna)",
                "p_0(Anna)",
                "\u00acp_13(Anna)",
                "p_8(Anna)",
                "\u00acp_7(Anna) \u2192 p_12(Anna)",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                "(p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna)",
                "\u00ac(p_1(Anna) \u2194 p_12(Anna)) \u2192 p_13(Anna)",
                "\u00acp_10(Anna) \u2192 \u00acp_12(Anna)",
                "p_0(Anna) \u2192 p_6(Anna)",
                "p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna)))",
                "p_8(Anna) \u2228 p_9(Anna)",
                "p_6(Anna) \u2192 (p_7(Anna) \u2227 p_8(Anna))",
                "p_6(Anna)",
                "p_7(Anna) \u2227 p_8(Anna)"
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "If Anna does not create unique products, then she sells candy.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna makes chocolate and sells candy are not equivalent (one is true and one is false), then Anna is innovative.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others.",
                "Anna either builds a loyal customer base or makes people happy.",
                "If Anna is a passionate entrepreneur, then she creates unique products and builds a loyal customer base.",
                "Anna is a passionate entrepreneur.",
                "Anna creates unique products and builds a loyal customer base."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_7(Anna) \u2228 p_12(Anna)",
                        "nl": "Anna either creates unique products or sells candy."
                    },
                    {
                        "fol": "p_10(Anna) \u2192 \u00ac(p_9(Anna) \u2194 p_11(Anna))",
                        "nl": "If Anna owns a business, then making people happy and helping others are not equivalent (one is true and one is false)."
                    }
                ],
                "added_facts": [
                    {
                        "fol": "p_6(Anna)",
                        "nl": "Anna is a passionate entrepreneur."
                    },
                    {
                        "fol": "p_7(Anna) \u2227 p_8(Anna)",
                        "nl": "Anna creates unique products and builds a loyal customer base."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "\u00acp_7(Anna) \u2192 p_12(Anna)",
                        "nl": "If Anna does not create unique products, then she sells candy."
                    },
                    {
                        "fol": "p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna)))",
                        "nl": "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Anna)",
                    "-p_5(Anna)",
                    "p_2(Anna)",
                    "-p_3(Anna)",
                    "p_1(Anna)",
                    "p_0(Anna)",
                    "-p_13(Anna)",
                    "p_8(Anna)",
                    "(-p_7(Anna) -> p_12(Anna))",
                    "(all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x))))",
                    "((p_13(Anna) & p_2(Anna)) -> p_3(Anna))",
                    "(-(p_1(Anna) <-> p_12(Anna)) -> p_13(Anna))",
                    "(-p_10(Anna) -> -p_12(Anna))",
                    "(p_0(Anna) -> p_6(Anna))",
                    "(p_10(Anna) -> ((p_9(Anna) & -p_11(Anna)) | (-p_9(Anna) & p_11(Anna))))",
                    "(p_8(Anna) | p_9(Anna))",
                    "(p_6(Anna) -> (p_7(Anna) & p_8(Anna)))",
                    "p_6(Anna)",
                    "(p_7(Anna) & p_8(Anna))"
                ],
                "formulas(goals)": [
                    "- -p_7(Anna)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 3,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Anna).",
                "\u00acp_5(Anna).",
                "p_2(Anna).",
                "\u00acp_3(Anna).",
                "p_1(Anna).",
                "p_0(Anna).",
                "\u00acp_13(Anna).",
                "p_8(Anna).",
                "(\u00acp_7(Anna)) \u2192 p_12(Anna).",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x))).",
                "((p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna)).",
                "(\u00ac(p_1(Anna) \u2194 p_12(Anna))) \u2192 p_13(Anna).",
                "(\u00acp_10(Anna)) \u2192 (\u00acp_12(Anna)).",
                "p_0(Anna) \u2192 p_6(Anna).",
                "p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna))).",
                "p_8(Anna) \u2228 p_9(Anna).",
                "p_6(Anna).",
                "p_6(Anna) \u2192 \u00acp_7(Anna)."
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "If Anna does not create unique products, then she sells candy.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna makes chocolate and sells candy are not equivalent (one is true and one is false), then Anna is innovative.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others.",
                "Anna either builds a loyal customer base or makes people happy.",
                "Anna is a passionate entrepreneur.",
                "If Anna is a passionate entrepreneur, then she does not create unique products."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "p_7(Anna) \u2227 p_8(Anna)",
                        "nl": "Anna creates unique products and builds a loyal customer base."
                    }
                ],
                "removed_rules": [
                    {
                        "fol": "p_6(Anna) \u2192 (p_7(Anna) \u2227 p_8(Anna))",
                        "nl": "If Anna is a passionate entrepreneur, then she creates unique products and builds a loyal customer base."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_6(Anna) \u2192 \u00acp_7(Anna)",
                        "nl": "If Anna is a passionate entrepreneur, then she does not create unique products."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "- p_4(Anna).",
                    "- p_5(Anna).",
                    "p_2(Anna).",
                    "- p_3(Anna).",
                    "p_1(Anna).",
                    "p_0(Anna).",
                    "- p_13(Anna).",
                    "p_8(Anna).",
                    "(- p_7(Anna)) -> p_12(Anna).",
                    "(all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x)))).",
                    "((p_13(Anna) & p_2(Anna)) -> p_3(Anna)).",
                    "(-(p_1(Anna) <-> p_12(Anna))) -> p_13(Anna).",
                    "(- p_10(Anna)) -> (- p_12(Anna)).",
                    "p_0(Anna) -> p_6(Anna).",
                    "p_10(Anna) -> ((p_9(Anna) & - p_11(Anna)) | (- p_9(Anna) & p_11(Anna))).",
                    "p_8(Anna) | p_9(Anna).",
                    "p_6(Anna).",
                    "p_6(Anna) -> (- p_7(Anna))."
                ],
                "formulas(goals)": [
                    "- p_7(Anna)."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Anna)",
                "\u00acp_5(Anna)",
                "p_2(Anna)",
                "\u00acp_3(Anna)",
                "p_1(Anna)",
                "p_0(Anna)",
                "\u00acp_13(Anna)",
                "p_8(Anna)",
                "(\u00acp_7(Anna)) \u2192 p_12(Anna)",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                "((p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna))",
                "(\u00acp_10(Anna)) \u2192 (\u00acp_12(Anna))",
                "p_0(Anna) \u2192 p_6(Anna)",
                "p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna)))",
                "p_8(Anna) \u2228 p_9(Anna)",
                "p_6(Anna)",
                "p_8(Anna) \u2192 \u00acp_9(Anna)"
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "If Anna does not create unique products, then she sells candy.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others.",
                "Anna either builds a loyal customer base or makes people happy.",
                "Anna is a passionate entrepreneur.",
                "If Anna builds a loyal customer base, then she does not make people happy."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "(\u00ac(p_1(Anna) \u2194 p_12(Anna))) \u2192 p_13(Anna)",
                        "nl": "If Anna makes chocolate and sells candy are not equivalent (one is true and one is false), then Anna is innovative."
                    },
                    {
                        "fol": "p_6(Anna) \u2192 \u00acp_7(Anna)",
                        "nl": "If Anna is a passionate entrepreneur, then she does not create unique products."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_8(Anna) \u2192 \u00acp_9(Anna)",
                        "nl": "If Anna builds a loyal customer base, then she does not make people happy."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Anna)",
                    "-p_5(Anna)",
                    "p_2(Anna)",
                    "-p_3(Anna)",
                    "p_1(Anna)",
                    "p_0(Anna)",
                    "-p_13(Anna)",
                    "p_8(Anna)",
                    "(-p_7(Anna)) -> p_12(Anna)",
                    "all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "((p_13(Anna) & p_2(Anna)) -> p_3(Anna))",
                    "(-p_10(Anna)) -> (-p_12(Anna))",
                    "p_0(Anna) -> p_6(Anna)",
                    "p_10(Anna) -> ((p_9(Anna) & -p_11(Anna)) | (-p_9(Anna) & p_11(Anna)))",
                    "p_8(Anna) | p_9(Anna)",
                    "p_6(Anna)",
                    "p_8(Anna) -> -p_9(Anna)"
                ],
                "formulas(goals)": [
                    "p_7(Anna)"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Anna)",
                "\u00acp_5(Anna)",
                "p_2(Anna)",
                "\u00acp_3(Anna)",
                "p_1(Anna)",
                "p_0(Anna)",
                "\u00acp_13(Anna)",
                "p_8(Anna)",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                "((p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna))",
                "(\u00acp_10(Anna)) \u2192 (\u00acp_12(Anna))",
                "p_0(Anna) \u2192 p_6(Anna)",
                "p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna)))",
                "p_8(Anna) \u2228 p_9(Anna)",
                "p_6(Anna)",
                "p_8(Anna) \u2192 \u00acp_9(Anna)",
                "p_7(Anna) \u2192 p_12(Anna)"
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others.",
                "Anna either builds a loyal customer base or makes people happy.",
                "Anna is a passionate entrepreneur.",
                "If Anna builds a loyal customer base, then she does not make people happy.",
                "If Anna creates unique products, then she sells candy."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "(\u00acp_7(Anna)) \u2192 p_12(Anna)",
                        "nl": "If Anna does not create unique products, then she sells candy."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_7(Anna) \u2192 p_12(Anna)",
                        "nl": "If Anna creates unique products, then she sells candy."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Anna)",
                    "-p_5(Anna)",
                    "p_2(Anna)",
                    "-p_3(Anna)",
                    "p_1(Anna)",
                    "p_0(Anna)",
                    "-p_13(Anna)",
                    "p_8(Anna)",
                    "all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "(p_13(Anna) & p_2(Anna)) -> p_3(Anna)",
                    "(-p_10(Anna)) -> (-p_12(Anna))",
                    "p_0(Anna) -> p_6(Anna)",
                    "p_10(Anna) -> ((p_9(Anna) & -p_11(Anna)) | (-p_9(Anna) & p_11(Anna)))",
                    "p_8(Anna) | p_9(Anna)",
                    "p_6(Anna)",
                    "p_8(Anna) -> -p_9(Anna)",
                    "p_7(Anna) -> p_12(Anna)"
                ],
                "formulas(goals)": [
                    "-p_7(Anna)"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 6,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Anna)",
                "\u00acp_5(Anna)",
                "p_2(Anna)",
                "\u00acp_3(Anna)",
                "p_1(Anna)",
                "p_0(Anna)",
                "\u00acp_13(Anna)",
                "p_8(Anna)",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                "((p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna))",
                "(\u00acp_10(Anna)) \u2192 (\u00acp_12(Anna))",
                "p_0(Anna) \u2192 p_6(Anna)",
                "p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna)))",
                "p_8(Anna) \u2228 p_9(Anna)",
                "p_6(Anna)",
                "p_8(Anna) \u2192 \u00acp_9(Anna)",
                "\u00acp_12(Anna) \u2192 p_7(Anna)"
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others.",
                "Anna either builds a loyal customer base or makes people happy.",
                "Anna is a passionate entrepreneur.",
                "If Anna builds a loyal customer base, then she does not make people happy.",
                "If Anna does not sell candy, then she creates unique products."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "p_7(Anna) \u2192 p_12(Anna)",
                        "nl": "If Anna creates unique products, then she sells candy."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "\u00acp_12(Anna) \u2192 p_7(Anna)",
                        "nl": "If Anna does not sell candy, then she creates unique products."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Anna)",
                    "-p_5(Anna)",
                    "p_2(Anna)",
                    "-p_3(Anna)",
                    "p_1(Anna)",
                    "p_0(Anna)",
                    "-p_13(Anna)",
                    "p_8(Anna)",
                    "all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "((p_13(Anna) & p_2(Anna)) -> p_3(Anna))",
                    "(-p_10(Anna) -> -p_12(Anna))",
                    "(p_0(Anna) -> p_6(Anna))",
                    "(p_10(Anna) -> ((p_9(Anna) & -p_11(Anna)) | (-p_9(Anna) & p_11(Anna))))",
                    "(p_8(Anna) | p_9(Anna))",
                    "p_6(Anna)",
                    "(p_8(Anna) -> -p_9(Anna))",
                    "(-p_12(Anna) -> p_7(Anna))"
                ],
                "formulas(goals)": [
                    "-(-p_7(Anna))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 7,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "\u00acp_4(Anna)",
                "\u00acp_5(Anna)",
                "p_2(Anna)",
                "\u00acp_3(Anna)",
                "p_1(Anna)",
                "p_0(Anna)",
                "\u00acp_13(Anna)",
                "p_8(Anna)",
                "\u2200x ((p_11(x) \u2192 p_5(x)) \u2227 (p_4(x) \u2192 p_5(x)))",
                "((p_13(Anna) \u2227 p_2(Anna)) \u2192 p_3(Anna))",
                "(\u00acp_10(Anna) \u2192 \u00acp_12(Anna))",
                "(p_0(Anna) \u2192 p_6(Anna))",
                "(p_10(Anna) \u2192 ((p_9(Anna) \u2227 \u00acp_11(Anna)) \u2228 (\u00acp_9(Anna) \u2227 p_11(Anna))))",
                "(p_8(Anna) \u2228 p_9(Anna))",
                "p_6(Anna)",
                "(p_8(Anna) \u2192 \u00acp_9(Anna))",
                "(p_8(Anna) \u2192 \u00acp_7(Anna))"
            ],
            "edited_natural_language_context": [
                "Anna does not donate her time.",
                "Anna does not earn respect.",
                "Anna takes risks.",
                "Anna does not achieve success.",
                "Anna makes chocolate.",
                "Anna pursues her dream.",
                "Anna is not innovative.",
                "Anna builds a loyal customer base.",
                "For any person, if they help others then they earn respect, and if they donate their time then they earn respect.",
                "If Anna is innovative and takes risks, then she achieves success.",
                "If Anna does not own a business, then she does not sell candy.",
                "If Anna pursues her dream, then she is a passionate entrepreneur.",
                "If Anna owns a business, then either she makes people happy and does not help others, or she does not make people happy and helps others.",
                "Anna either builds a loyal customer base or makes people happy.",
                "Anna is a passionate entrepreneur.",
                "If Anna builds a loyal customer base, then she does not make people happy.",
                "If Anna builds a loyal customer base, then she does not create unique products."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [
                    {
                        "fol": "\u00acp_12(Anna) \u2192 p_7(Anna)",
                        "nl": "If Anna does not sell candy, then she creates unique products."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_8(Anna) \u2192 \u00acp_7(Anna)",
                        "nl": "If Anna builds a loyal customer base, then she does not create unique products."
                    }
                ]
            },
            "conclusion": "Anna does not create unique products.",
            "conclusion_fol": "\u00acp_7(Anna)",
            "prover9_input": {
                "formulas(assumptions)": [
                    "-p_4(Anna)",
                    "-p_5(Anna)",
                    "p_2(Anna)",
                    "-p_3(Anna)",
                    "p_1(Anna)",
                    "p_0(Anna)",
                    "-p_13(Anna)",
                    "p_8(Anna)",
                    "all x ((p_11(x) -> p_5(x)) & (p_4(x) -> p_5(x)))",
                    "((p_13(Anna) & p_2(Anna)) -> p_3(Anna))",
                    "(-p_10(Anna) -> -p_12(Anna))",
                    "(p_0(Anna) -> p_6(Anna))",
                    "(p_10(Anna) -> ((p_9(Anna) & -p_11(Anna)) | (-p_9(Anna) & p_11(Anna))))",
                    "(p_8(Anna) | p_9(Anna))",
                    "p_6(Anna)",
                    "(p_8(Anna) -> -p_9(Anna))",
                    "(p_8(Anna) -> -p_7(Anna))"
                ],
                "formulas(goals)": [
                    "-p_7(Anna)"
                ]
            },
            "answer": "True"
        }
    ]
}