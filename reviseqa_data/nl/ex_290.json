{
    "original_context": [
        "Chana sees opportunities.",
        "Chana builds models.",
        "Chana learns quickly.",
        "Chana does not make breakthroughs.",
        "Chana tests prototypes.",
        "Chana does not create solutions.",
        "Chana is not innovative.",
        "Chana is successful.",
        "If Chana sees opportunities, then she builds models and designs systems.",
        "If an inventor solves problems and learns quickly, then they make breakthroughs.",
        "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
        "If Chana achieves her goals, then she is reliable.",
        "If Chana thinks critically, then she achieves her goals.",
        "All persistent inventors think critically and solve problems.",
        "Chana is either thorough or persistent, but not necessarily both, in her approach to developing new encryption methods.",
        "If an inventor is meticulous and thorough, then they create solutions."
    ],
    "original_context_fol": [
        "p_6(Chana)",
        "p_7(Chana)",
        "p_4(Chana)",
        "\u00acp_5(Chana)",
        "p_3(Chana)",
        "\u00acp_2(Chana)",
        "\u00acp_0(Chana)",
        "p_1(Chana)",
        "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
        "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
        "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
        "p_13(Chana) \u2192 p_14(Chana)",
        "p_11(Chana) \u2192 p_13(Chana)",
        "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
        "p_9(Chana) \u2295 p_10(Chana)",
        "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))"
    ],
    "conclusion": "Chana is innovative, or she is both meticulous and successful.",
    "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
    "answer": "False",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Chana",
                    "text": "Chana sees opportunities.",
                    "fol": "p_6(Chana)",
                    "str_fol": "sees_opportunities(Chana)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Chana",
                    "text": "Chana builds models.",
                    "fol": "p_7(Chana)",
                    "str_fol": "builds_models(Chana)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Chana sees opportunities, then she builds models and designs systems.",
                    "fol": "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                    "str_fol": "sees_opportunities(Chana) \u2192 (builds_models(Chana) \u2227 designs_systems(Chana))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Chana",
                "text": "Chana designs systems.",
                "fol": "p_15(Chana)",
                "str_fol": "designs_systems(Chana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Chana",
                    "text": "Chana learns quickly.",
                    "fol": "p_4(Chana)",
                    "str_fol": "learns_fast(Chana)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Chana",
                    "text": "Chana does not make breakthroughs.",
                    "fol": "\u00acp_5(Chana)",
                    "str_fol": "\u00acmakes_breakthroughs(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                    "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((solve_problems(x) \u2227 learns_fast(x)) \u2192 makes_breakthroughs(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Chana",
                "text": "Chana does not solve problems.",
                "fol": "\u00acp_12(Chana)",
                "str_fol": "\u00acsolve_problems(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Chana",
                    "text": "Chana designs systems.",
                    "fol": "p_15(Chana)",
                    "str_fol": "designs_systems(Chana)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Chana",
                    "text": "Chana tests prototypes.",
                    "fol": "p_3(Chana)",
                    "str_fol": "tests_prototypes(Chana)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                    "fol": "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                    "str_fol": "designs_systems(Chana) \u2192 (is_reliable(Chana) \u2295 tests_prototypes(Chana))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Chana",
                "text": "Chana is not reliable.",
                "fol": "\u00acp_14(Chana)",
                "str_fol": "\u00acis_reliable(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Chana",
                    "text": "Chana is not reliable.",
                    "fol": "\u00acp_14(Chana)",
                    "str_fol": "\u00acis_reliable(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Chana achieves her goals, then she is reliable.",
                    "fol": "p_13(Chana) \u2192 p_14(Chana)",
                    "str_fol": "achieves_goals(Chana) \u2192 is_reliable(Chana)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Chana",
                "text": "Chana does not achieve her goals.",
                "fol": "\u00acp_13(Chana)",
                "str_fol": "\u00acachieves_goals(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Chana",
                    "text": "Chana does not achieve her goals.",
                    "fol": "\u00acp_13(Chana)",
                    "str_fol": "\u00acachieves_goals(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Chana thinks critically, then she achieves her goals.",
                    "fol": "p_11(Chana) \u2192 p_13(Chana)",
                    "str_fol": "think_critically(Chana) \u2192 achieves_goals(Chana)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Chana",
                "text": "Chana does not think critically.",
                "fol": "\u00acp_11(Chana)",
                "str_fol": "\u00acthink_critically(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Chana",
                    "text": "Chana does not think critically.",
                    "fol": "\u00acp_11(Chana)",
                    "str_fol": "\u00acthink_critically(Chana)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Chana",
                    "text": "Chana does not solve problems.",
                    "fol": "\u00acp_12(Chana)",
                    "str_fol": "\u00acsolve_problems(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "All persistent inventors think critically and solve problems.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                    "str_fol": "\u2200x (is_persistent(x) \u2192 (think_critically(x) \u2227 solve_problems(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Chana",
                "text": "Chana is not persistent in her approach to developing new encryption methods.",
                "fol": "\u00acp_10(Chana)",
                "str_fol": "\u00acis_persistent(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Chana",
                    "text": "Chana is not persistent in her approach to developing new encryption methods.",
                    "fol": "\u00acp_10(Chana)",
                    "str_fol": "\u00acis_persistent(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Chana is either thorough or persistent, but not necessarily both, in her approach to developing new encryption methods.",
                    "fol": "p_9(Chana) \u2295 p_10(Chana)",
                    "str_fol": "thorough(Chana) \u2295 is_persistent(Chana)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Chana",
                "text": "Chana is thorough.",
                "fol": "p_9(Chana)",
                "str_fol": "thorough(Chana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Chana",
                    "text": "Chana is thorough.",
                    "fol": "p_9(Chana)",
                    "str_fol": "thorough(Chana)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Chana",
                    "text": "Chana does not create solutions.",
                    "fol": "\u00acp_2(Chana)",
                    "str_fol": "\u00accreates_solutions(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If an inventor is meticulous and thorough, then they create solutions.",
                    "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((meticulous(x) \u2227 thorough(x)) \u2192 creates_solutions(x))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Chana",
                "text": "Chana is not meticulous.",
                "fol": "\u00acp_8(Chana)",
                "str_fol": "\u00acmeticulous(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Chana",
                    "text": "Chana is not innovative.",
                    "fol": "\u00acp_0(Chana)",
                    "str_fol": "\u00acinnovative(Chana)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Chana",
                    "text": "Chana is not meticulous.",
                    "fol": "\u00acp_8(Chana)",
                    "str_fol": "\u00acmeticulous(Chana)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Chana",
                    "text": "Chana is successful.",
                    "fol": "p_1(Chana)",
                    "str_fol": "successful(Chana)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 16,
                "text": "Chana is innovative, or she is both meticulous and successful.",
                "fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
                "str_fol": "innovative(Chana) \u2228 (meticulous(Chana) \u2227 successful(Chana))"
            }
        }
    ],
    "edits": [
        {
            "edit_number": 1,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chana)",
                "p_7(Chana)",
                "p_4(Chana)",
                "\u00acp_5(Chana)",
                "p_3(Chana)",
                "\u00acp_2(Chana)",
                "\u00acp_0(Chana)",
                "p_1(Chana)",
                "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                "p_13(Chana) \u2192 p_14(Chana)",
                "p_11(Chana) \u2192 p_13(Chana)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                "p_9(Chana) \u2295 p_10(Chana)",
                "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                "(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)",
                "p_6(Chana) \u2192 p_15(Chana)",
                "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))"
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and designs systems.",
                "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If an inventor is meticulous and thorough, then they create solutions.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is meticulous and thorough, then she creates solutions.",
                "If Chana sees opportunities, then she designs systems.",
                "If Chana designs systems, then she is reliable or tests prototypes."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                        "nl": "If Chana is persistent, then she thinks critically and solves problems."
                    },
                    {
                        "fol": "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                        "nl": "Chana is either thorough or persistent, but not both."
                    },
                    {
                        "fol": "(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)",
                        "nl": "If Chana is meticulous and thorough, then she creates solutions."
                    },
                    {
                        "fol": "p_6(Chana) \u2192 p_15(Chana)",
                        "nl": "If Chana sees opportunities, then she designs systems."
                    },
                    {
                        "fol": "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
                        "nl": "If Chana designs systems, then she is reliable or tests prototypes."
                    }
                ]
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana)",
                    "p_7(Chana)",
                    "p_4(Chana)",
                    "-p_5(Chana)",
                    "p_3(Chana)",
                    "-p_2(Chana)",
                    "-p_0(Chana)",
                    "p_1(Chana)",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana))",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x))",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana)))",
                    "p_13(Chana) -> p_14(Chana)",
                    "p_11(Chana) -> p_13(Chana)",
                    "all x (p_10(x) -> (p_11(x) & p_12(x)))",
                    "(-(p_9(Chana) <-> p_10(Chana)))",
                    "all x ((p_8(x) & p_9(x)) -> p_2(x))",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana))",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana)))",
                    "(p_8(Chana) & p_9(Chana)) -> p_2(Chana)",
                    "p_6(Chana) -> p_15(Chana)",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana))"
                ],
                "formulas(goals)": [
                    "- (p_0(Chana) | (p_8(Chana) & p_1(Chana)))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 2,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chana)",
                "p_7(Chana)",
                "p_4(Chana)",
                "\u00acp_5(Chana)",
                "p_3(Chana)",
                "\u00acp_2(Chana)",
                "\u00acp_0(Chana)",
                "p_1(Chana)",
                "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                "p_13(Chana) \u2192 p_14(Chana)",
                "p_11(Chana) \u2192 p_13(Chana)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                "p_9(Chana) \u2295 p_10(Chana)",
                "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                "(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)",
                "p_6(Chana) \u2192 p_15(Chana)",
                "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
                "p_7(Chana)",
                "p_15(Chana)",
                "\u00acp_10(Chana)",
                "p_9(Chana)",
                "\u00acp_8(Chana)"
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and designs systems.",
                "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If an inventor is meticulous and thorough, then they create solutions.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is meticulous and thorough, then she creates solutions.",
                "If Chana sees opportunities, then she designs systems.",
                "If Chana designs systems, then she is reliable or tests prototypes.",
                "Chana builds models.",
                "Chana designs systems.",
                "Chana is not persistent.",
                "Chana is thorough.",
                "Chana is not meticulous."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_7(Chana)",
                        "nl": "Chana builds models."
                    },
                    {
                        "fol": "p_15(Chana)",
                        "nl": "Chana designs systems."
                    },
                    {
                        "fol": "\u00acp_10(Chana)",
                        "nl": "Chana is not persistent."
                    },
                    {
                        "fol": "p_9(Chana)",
                        "nl": "Chana is thorough."
                    },
                    {
                        "fol": "\u00acp_8(Chana)",
                        "nl": "Chana is not meticulous."
                    }
                ],
                "added_rules": []
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana)",
                    "p_7(Chana)",
                    "p_4(Chana)",
                    "-p_5(Chana)",
                    "p_3(Chana)",
                    "-p_2(Chana)",
                    "-p_0(Chana)",
                    "p_1(Chana)",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana))",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x))",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana)))",
                    "p_13(Chana) -> p_14(Chana)",
                    "p_11(Chana) -> p_13(Chana)",
                    "all x (p_10(x) -> (p_11(x) & p_12(x)))",
                    "-(p_9(Chana) <-> p_10(Chana))",
                    "all x ((p_8(x) & p_9(x)) -> p_2(x))",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana))",
                    "(p_9(Chana) | p_10(Chana)) & -(p_9(Chana) & p_10(Chana))",
                    "(p_8(Chana) & p_9(Chana)) -> p_2(Chana)",
                    "p_6(Chana) -> p_15(Chana)",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana))",
                    "p_7(Chana)",
                    "p_15(Chana)",
                    "-p_10(Chana)",
                    "p_9(Chana)",
                    "-p_8(Chana)"
                ],
                "formulas(goals)": [
                    "-(p_0(Chana) | (p_8(Chana) & p_1(Chana)))"
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 3,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_6(Chana)",
                "p_7(Chana)",
                "p_4(Chana)",
                "\u00acp_5(Chana)",
                "p_3(Chana)",
                "\u00acp_2(Chana)",
                "\u00acp_0(Chana)",
                "p_1(Chana)",
                "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                "p_13(Chana) \u2192 p_14(Chana)",
                "p_11(Chana) \u2192 p_13(Chana)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                "p_9(Chana) \u2295 p_10(Chana)",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                "p_6(Chana) \u2192 p_15(Chana)",
                "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
                "p_7(Chana)",
                "p_15(Chana)",
                "\u00acp_10(Chana)",
                "p_9(Chana)",
                "p_9(Chana) \u2192 p_8(Chana)"
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and designs systems.",
                "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana sees opportunities, then she designs systems.",
                "If Chana designs systems, then she is reliable or tests prototypes.",
                "Chana builds models.",
                "Chana designs systems.",
                "Chana is not persistent.",
                "Chana is thorough.",
                "If Chana is thorough, then she is meticulous."
            ],
            "edits_made": {
                "removed_facts": [
                    {
                        "fol": "\u00acp_8(Chana)",
                        "nl": "Chana is not meticulous."
                    }
                ],
                "removed_rules": [
                    {
                        "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
                        "nl": "If an inventor is meticulous and thorough, then they create solutions."
                    },
                    {
                        "fol": "(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)",
                        "nl": "If Chana is meticulous and thorough, then she creates solutions."
                    }
                ],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_9(Chana) \u2192 p_8(Chana)",
                        "nl": "If Chana is thorough, then she is meticulous."
                    }
                ]
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana)).",
                    "(all x ((p_12(x) & p_4(x)) -> p_5(x))).",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "(all x (p_10(x) -> (p_11(x) & p_12(x)))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana))).",
                    "p_6(Chana) -> p_15(Chana).",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana)).",
                    "p_7(Chana).",
                    "p_15(Chana).",
                    "-p_10(Chana).",
                    "p_9(Chana).",
                    "p_9(Chana) -> p_8(Chana)."
                ],
                "formulas(goals)": [
                    "p_0(Chana) | (p_8(Chana) & p_1(Chana))."
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 4,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chana)",
                "p_7(Chana)",
                "p_4(Chana)",
                "\u00acp_5(Chana)",
                "p_3(Chana)",
                "\u00acp_2(Chana)",
                "\u00acp_0(Chana)",
                "p_1(Chana)",
                "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                "p_13(Chana) \u2192 p_14(Chana)",
                "p_11(Chana) \u2192 p_13(Chana)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                "p_9(Chana) \u2295 p_10(Chana)",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                "p_6(Chana) \u2192 p_15(Chana)",
                "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
                "p_7(Chana)",
                "p_15(Chana)",
                "\u00acp_10(Chana)",
                "p_9(Chana)",
                "p_9(Chana) \u2192 p_8(Chana)",
                "p_4(Chana) \u2192 \u00acp_12(Chana)"
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and designs systems.",
                "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana sees opportunities, then she designs systems.",
                "If Chana designs systems, then she is reliable or tests prototypes.",
                "Chana builds models.",
                "Chana designs systems.",
                "Chana is not persistent.",
                "Chana is thorough.",
                "If Chana is thorough, then she is meticulous.",
                "If Chana learns quickly, then she does not solve problems."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "p_4(Chana) \u2192 \u00acp_12(Chana)",
                        "nl": "If Chana learns quickly, then she does not solve problems."
                    }
                ]
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana)",
                    "p_7(Chana)",
                    "p_4(Chana)",
                    "-p_5(Chana)",
                    "p_3(Chana)",
                    "-p_2(Chana)",
                    "-p_0(Chana)",
                    "p_1(Chana)",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana))",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x))",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana)))",
                    "p_13(Chana) -> p_14(Chana)",
                    "p_11(Chana) -> p_13(Chana)",
                    "all x (p_10(x) -> (p_11(x) & p_12(x)))",
                    "-(p_9(Chana) <-> p_10(Chana))",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana))",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana)))",
                    "p_6(Chana) -> p_15(Chana)",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana))",
                    "p_7(Chana)",
                    "p_15(Chana)",
                    "-p_10(Chana)",
                    "p_9(Chana)",
                    "p_9(Chana) -> p_8(Chana)",
                    "p_4(Chana) -> -p_12(Chana)"
                ],
                "formulas(goals)": [
                    "p_0(Chana) | (p_8(Chana) & p_1(Chana))"
                ]
            },
            "answer": "True"
        },
        {
            "edit_number": 5,
            "modification_type": "FLIP",
            "edited_context_fol": [
                "p_6(Chana)",
                "p_7(Chana)",
                "p_4(Chana)",
                "\u00acp_5(Chana)",
                "p_3(Chana)",
                "\u00acp_2(Chana)",
                "\u00acp_0(Chana)",
                "p_1(Chana)",
                "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                "p_13(Chana) \u2192 p_14(Chana)",
                "p_11(Chana) \u2192 p_13(Chana)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                "p_9(Chana) \u2295 p_10(Chana)",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                "p_6(Chana) \u2192 p_15(Chana)",
                "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
                "p_7(Chana)",
                "p_15(Chana)",
                "\u00acp_10(Chana)",
                "p_9(Chana)",
                "p_9(Chana) \u2192 p_8(Chana)",
                "p_4(Chana) \u2192 \u00acp_12(Chana)",
                "(p_9(Chana) \u2227 p_1(Chana)) \u2192 \u00acp_8(Chana)"
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and designs systems.",
                "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana sees opportunities, then she designs systems.",
                "If Chana designs systems, then she is reliable or tests prototypes.",
                "Chana builds models.",
                "Chana designs systems.",
                "Chana is not persistent.",
                "Chana is thorough.",
                "If Chana is thorough, then she is meticulous.",
                "If Chana learns quickly, then she does not solve problems.",
                "If Chana is thorough and successful, then she is not meticulous."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "(p_9(Chana) \u2227 p_1(Chana)) \u2192 \u00acp_8(Chana)",
                        "nl": "If Chana is thorough and successful, then she is not meticulous."
                    }
                ]
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana)).",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x)).",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "all x (p_10(x) -> (p_11(x) & p_12(x))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & -(p_9(Chana) & p_10(Chana)).",
                    "p_6(Chana) -> p_15(Chana).",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana)).",
                    "p_7(Chana).",
                    "p_15(Chana).",
                    "-p_10(Chana).",
                    "p_9(Chana).",
                    "p_9(Chana) -> p_8(Chana).",
                    "p_4(Chana) -> -p_12(Chana).",
                    "(p_9(Chana) & p_1(Chana)) -> -p_8(Chana)."
                ],
                "formulas(goals)": [
                    "- (p_0(Chana) | (p_8(Chana) & p_1(Chana)))."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 6,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chana)",
                "p_7(Chana)",
                "p_4(Chana)",
                "\u00acp_5(Chana)",
                "p_3(Chana)",
                "\u00acp_2(Chana)",
                "\u00acp_0(Chana)",
                "p_1(Chana)",
                "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                "p_15(Chana) \u2192 ((p_14(Chana) \u2228 p_3(Chana)) \u2227 \u00ac(p_14(Chana) \u2227 p_3(Chana)))",
                "p_13(Chana) \u2192 p_14(Chana)",
                "p_11(Chana) \u2192 p_13(Chana)",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                "p_9(Chana) \u2295 p_10(Chana)",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                "p_6(Chana) \u2192 p_15(Chana)",
                "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
                "p_7(Chana)",
                "p_15(Chana)",
                "\u00acp_10(Chana)",
                "p_9(Chana)",
                "p_9(Chana) \u2192 p_8(Chana)",
                "p_4(Chana) \u2192 \u00acp_12(Chana)",
                "(p_9(Chana) \u2227 p_1(Chana)) \u2192 \u00acp_8(Chana)",
                "p_8(Chana)",
                "p_9(Chana) \u2227 p_1(Chana)"
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and designs systems.",
                "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana sees opportunities, then she designs systems.",
                "If Chana designs systems, then she is reliable or tests prototypes.",
                "Chana builds models.",
                "Chana designs systems.",
                "Chana is not persistent.",
                "Chana is thorough.",
                "If Chana is thorough, then she is meticulous.",
                "If Chana learns quickly, then she does not solve problems.",
                "If Chana is thorough and successful, then she is not meticulous.",
                "Chana is meticulous.",
                "Chana is thorough and successful."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    {
                        "fol": "p_8(Chana)",
                        "nl": "Chana is meticulous."
                    },
                    {
                        "fol": "p_9(Chana) \u2227 p_1(Chana)",
                        "nl": "Chana is thorough and successful."
                    }
                ],
                "added_rules": [
                    {
                        "fol": "p_15(Chana) \u2192 ((p_14(Chana) \u2228 p_3(Chana)) \u2227 \u00ac(p_14(Chana) \u2227 p_3(Chana)))",
                        "nl": "If Chana designs systems, then she is either reliable or tests prototypes, but not both."
                    }
                ]
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana)).",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x)).",
                    "p_15(Chana) -> ((p_14(Chana) | p_3(Chana)) & (-(p_14(Chana) & p_3(Chana)))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "all x (p_10(x) -> (p_11(x) & p_12(x))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana))).",
                    "p_6(Chana) -> p_15(Chana).",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana)).",
                    "p_7(Chana).",
                    "p_15(Chana).",
                    "-p_10(Chana).",
                    "p_9(Chana).",
                    "p_9(Chana) -> p_8(Chana).",
                    "p_4(Chana) -> -p_12(Chana).",
                    "(p_9(Chana) & p_1(Chana)) -> -p_8(Chana).",
                    "p_8(Chana).",
                    "p_9(Chana) & p_1(Chana)."
                ],
                "formulas(goals)": [
                    "-((p_0(Chana) | (p_8(Chana) & p_1(Chana))))."
                ]
            },
            "answer": "False"
        },
        {
            "edit_number": 7,
            "modification_type": "INVARIANT",
            "edited_context_fol": [
                "p_6(Chana).",
                "p_7(Chana).",
                "p_4(Chana).",
                "\u00acp_5(Chana).",
                "p_3(Chana).",
                "\u00acp_2(Chana).",
                "\u00acp_0(Chana).",
                "p_1(Chana).",
                "(p_6(Chana) \u2192 p_7(Chana)) \u2227 (p_6(Chana) \u2192 p_15(Chana)).",
                "\u2200x (p_12(x) \u2192 (p_4(x) \u2192 p_5(x))).",
                "(p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))) \u2227 (p_15(Chana) \u2192 \u00ac(p_14(Chana) \u2227 p_3(Chana))).",
                "p_13(Chana) \u2192 p_14(Chana).",
                "p_11(Chana) \u2192 p_13(Chana).",
                "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x))).",
                "p_9(Chana) \u2295 p_10(Chana).",
                "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana)).",
                "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana)).",
                "p_15(Chana) \u2228 \u00acp_6(Chana).",
                "(p_14(Chana) \u2228 p_3(Chana)) \u2228 \u00acp_15(Chana).",
                "p_7(Chana) \u2228 p_7(Chana).",
                "p_15(Chana) \u2228 p_15(Chana).",
                "\u00acp_10(Chana) \u2228 \u00acp_10(Chana).",
                "p_9(Chana) \u2228 p_9(Chana).",
                "\u00acp_9(Chana) \u2228 p_8(Chana).",
                "\u00acp_4(Chana) \u2228 \u00acp_12(Chana).",
                "\u00ac(p_9(Chana) \u2227 p_1(Chana)) \u2228 \u00acp_8(Chana).",
                "p_8(Chana).",
                "p_9(Chana) \u2227 p_1(Chana).",
                "p_6(Chana) \u2192 p_6(Chana).",
                "p_7(Chana) \u2192 p_7(Chana).",
                "p_4(Chana) \u2192 p_4(Chana).",
                "\u00acp_5(Chana) \u2192 \u00acp_5(Chana).",
                "p_3(Chana) \u2192 p_3(Chana).",
                "\u00acp_2(Chana) \u2192 \u00acp_2(Chana).",
                "\u00acp_0(Chana) \u2192 \u00acp_0(Chana).",
                "p_1(Chana) \u2192 p_1(Chana)."
            ],
            "edited_natural_language_context": [
                "Chana sees opportunities.",
                "Chana builds models.",
                "Chana learns quickly.",
                "Chana does not make breakthroughs.",
                "Chana tests prototypes.",
                "Chana does not create solutions.",
                "Chana is not innovative.",
                "Chana is successful.",
                "If Chana sees opportunities, then she builds models and she designs systems.",
                "For any person, if they solve problems, then if they learn quickly, they make breakthroughs.",
                "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                "If Chana achieves her goals, then she is reliable.",
                "If Chana thinks critically, then she achieves her goals.",
                "All persistent inventors think critically and solve problems.",
                "Chana is either thorough or persistent, but not both.",
                "If Chana is persistent, then she thinks critically and solves problems.",
                "Chana is either thorough or persistent, but not both.",
                "Either Chana designs systems or she doesn't see opportunities.",
                "Either Chana is reliable or she tests prototypes or she doesn't design systems.",
                "Chana builds models.",
                "Chana designs systems.",
                "Chana is not persistent.",
                "Chana is thorough.",
                "If Chana is not thorough, then she is meticulous.",
                "Either Chana doesn't learn quickly or she doesn't solve problems.",
                "Either Chana is not both thorough and successful, or she is not meticulous.",
                "Chana is meticulous.",
                "Chana is thorough and successful.",
                "If Chana sees opportunities, then she sees opportunities.",
                "If Chana builds models, then she builds models.",
                "If Chana learns quickly, then she learns quickly.",
                "If Chana does not make breakthroughs, then she does not make breakthroughs.",
                "If Chana tests prototypes, then she tests prototypes.",
                "If Chana does not create solutions, then she does not create solutions.",
                "If Chana is not innovative, then she is not innovative.",
                "If Chana is successful, then she is successful."
            ],
            "edits_made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    {
                        "fol": "(p_6(Chana) \u2192 p_7(Chana)) \u2227 (p_6(Chana) \u2192 p_15(Chana))",
                        "nl": "If Chana sees opportunities, then she builds models and she designs systems."
                    },
                    {
                        "fol": "\u2200x (p_12(x) \u2192 (p_4(x) \u2192 p_5(x)))",
                        "nl": "For any person, if they solve problems, then if they learn quickly, they make breakthroughs."
                    },
                    {
                        "fol": "(p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))) \u2227 (p_15(Chana) \u2192 \u00ac(p_14(Chana) \u2227 p_3(Chana)))",
                        "nl": "If Chana designs systems, then she is either reliable or tests prototypes, but not both."
                    },
                    {
                        "fol": "p_15(Chana) \u2228 \u00acp_6(Chana)",
                        "nl": "Either Chana designs systems or she doesn't see opportunities."
                    },
                    {
                        "fol": "(p_14(Chana) \u2228 p_3(Chana)) \u2228 \u00acp_15(Chana)",
                        "nl": "Either Chana is reliable or she tests prototypes or she doesn't design systems."
                    },
                    {
                        "fol": "p_7(Chana) \u2228 p_7(Chana)",
                        "nl": "Chana builds models."
                    },
                    {
                        "fol": "p_15(Chana) \u2228 p_15(Chana)",
                        "nl": "Chana designs systems."
                    },
                    {
                        "fol": "\u00acp_10(Chana) \u2228 \u00acp_10(Chana)",
                        "nl": "Chana is not persistent."
                    },
                    {
                        "fol": "p_9(Chana) \u2228 p_9(Chana)",
                        "nl": "Chana is thorough."
                    },
                    {
                        "fol": "\u00acp_9(Chana) \u2228 p_8(Chana)",
                        "nl": "If Chana is not thorough, then she is meticulous."
                    },
                    {
                        "fol": "\u00acp_4(Chana) \u2228 \u00acp_12(Chana)",
                        "nl": "Either Chana doesn't learn quickly or she doesn't solve problems."
                    },
                    {
                        "fol": "\u00ac(p_9(Chana) \u2227 p_1(Chana)) \u2228 \u00acp_8(Chana)",
                        "nl": "Either Chana is not both thorough and successful, or she is not meticulous."
                    },
                    {
                        "fol": "p_6(Chana) \u2192 p_6(Chana)",
                        "nl": "If Chana sees opportunities, then she sees opportunities."
                    },
                    {
                        "fol": "p_7(Chana) \u2192 p_7(Chana)",
                        "nl": "If Chana builds models, then she builds models."
                    },
                    {
                        "fol": "p_4(Chana) \u2192 p_4(Chana)",
                        "nl": "If Chana learns quickly, then she learns quickly."
                    },
                    {
                        "fol": "\u00acp_5(Chana) \u2192 \u00acp_5(Chana)",
                        "nl": "If Chana does not make breakthroughs, then she does not make breakthroughs."
                    },
                    {
                        "fol": "p_3(Chana) \u2192 p_3(Chana)",
                        "nl": "If Chana tests prototypes, then she tests prototypes."
                    },
                    {
                        "fol": "\u00acp_2(Chana) \u2192 \u00acp_2(Chana)",
                        "nl": "If Chana does not create solutions, then she does not create solutions."
                    },
                    {
                        "fol": "\u00acp_0(Chana) \u2192 \u00acp_0(Chana)",
                        "nl": "If Chana is not innovative, then she is not innovative."
                    },
                    {
                        "fol": "p_1(Chana) \u2192 p_1(Chana)",
                        "nl": "If Chana is successful, then she is successful."
                    }
                ]
            },
            "conclusion": "Chana is innovative, or she is both meticulous and successful.",
            "conclusion_fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "prover9_input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "(p_6(Chana) -> p_7(Chana)) & (p_6(Chana) -> p_15(Chana)).",
                    "all x (p_12(x) -> (p_4(x) -> p_5(x))).",
                    "(p_15(Chana) -> (p_14(Chana) | p_3(Chana))) & (p_15(Chana) -> -(p_14(Chana) & p_3(Chana))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "all x (p_10(x) -> (p_11(x) & p_12(x))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana))).",
                    "p_15(Chana) | -p_6(Chana).",
                    "(p_14(Chana) | p_3(Chana)) | -p_15(Chana).",
                    "p_7(Chana) | p_7(Chana).",
                    "p_15(Chana) | p_15(Chana).",
                    "-p_10(Chana) | -p_10(Chana).",
                    "p_9(Chana) | p_9(Chana).",
                    "-p_9(Chana) | p_8(Chana).",
                    "-p_4(Chana) | -p_12(Chana).",
                    "(-(p_9(Chana) & p_1(Chana))) | -p_8(Chana).",
                    "p_8(Chana).",
                    "p_9(Chana) & p_1(Chana).",
                    "p_6(Chana) -> p_6(Chana).",
                    "p_7(Chana) -> p_7(Chana).",
                    "p_4(Chana) -> p_4(Chana).",
                    "-p_5(Chana) -> -p_5(Chana).",
                    "p_3(Chana) -> p_3(Chana).",
                    "-p_2(Chana) -> -p_2(Chana).",
                    "-p_0(Chana) -> -p_0(Chana).",
                    "p_1(Chana) -> p_1(Chana)."
                ],
                "formulas(goals)": [
                    "- (p_0(Chana) | (p_8(Chana) & p_1(Chana)))."
                ]
            },
            "answer": "False"
        }
    ]
}