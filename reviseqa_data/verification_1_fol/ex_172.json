{
    "background_story": "Birdie was a shrewd and ambitious financial analyst with a keen eye for market trends. She spent most of her days studying the bourse, predicting fluctuations and advising her clients on lucrative investments. Birdie's fascination with the stock exchange began when she was a teenager, watching her father navigate the ups and downs of the market. She quickly proved to have a natural talent, earning her a coveted position at a prestigious brokerage firm. As her reputation grew, so did her client list, including several high-profile celebrities and business moguls. Birdie's success was not just about making money; it was about understanding the intricate dance of the bourse and using that knowledge to secure her clients' financial futures.",
    "predicates": [
        {
            "id": 0,
            "name": "is_experienced"
        },
        {
            "id": 1,
            "name": "study_finances"
        },
        {
            "id": 2,
            "name": "makes_strategic_decisions"
        },
        {
            "id": 3,
            "name": "gains_recognition"
        },
        {
            "id": 4,
            "name": "acts_honestly"
        },
        {
            "id": 5,
            "name": "is_transparent"
        },
        {
            "id": 6,
            "name": "achieves_success"
        },
        {
            "id": 7,
            "name": "skilled_analyst"
        },
        {
            "id": 8,
            "name": "understand_market_trends"
        },
        {
            "id": 9,
            "name": "secure_client_success"
        },
        {
            "id": 10,
            "name": "make_smart_investments"
        },
        {
            "id": 11,
            "name": "build_trust"
        },
        {
            "id": 12,
            "name": "has_knowledge"
        },
        {
            "id": 13,
            "name": "is_reliable"
        },
        {
            "id": 14,
            "name": "keeps_promises"
        },
        {
            "id": 15,
            "name": "is_dependable"
        },
        {
            "id": 16,
            "name": "takes_risks"
        },
        {
            "id": 17,
            "name": "thinks_critically"
        },
        {
            "id": 18,
            "name": "tracks_fluctuations"
        },
        {
            "id": 19,
            "name": "predicts_outcomes"
        },
        {
            "id": 20,
            "name": "caring_advisor"
        },
        {
            "id": 21,
            "name": "has_expertise"
        },
        {
            "id": 22,
            "name": "fosters_loyalty"
        },
        {
            "id": 23,
            "name": "provide_advice"
        },
        {
            "id": 24,
            "name": "offer_guidance"
        },
        {
            "id": 25,
            "name": "meets_deadlines"
        },
        {
            "id": 26,
            "name": "honors_obligations"
        },
        {
            "id": 27,
            "name": "reads_books"
        },
        {
            "id": 28,
            "name": "learns_quickly"
        },
        {
            "id": 29,
            "name": "listens_well"
        },
        {
            "id": 30,
            "name": "works_hard"
        },
        {
            "id": 31,
            "name": "seeks_rewards"
        },
        {
            "id": 32,
            "name": "faces_challenges"
        }
    ],
    "subject_name": "Birdie",
    "subject_category": "human",
    "keyword": "bourse",
    "all_facts": [
        {
            "id": 0,
            "subject": "Birdie",
            "text": "Birdie is experienced.",
            "fol": "p_0(Birdie)",
            "str_fol": "is_experienced(Birdie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Birdie",
            "text": "Birdie studies finances.",
            "fol": "p_1(Birdie)",
            "str_fol": "study_finances(Birdie)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Birdie",
            "text": "Birdie makes strategic decisions.",
            "fol": "p_2(Birdie)",
            "str_fol": "makes_strategic_decisions(Birdie)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Birdie",
            "text": "Birdie does not gain recognition.",
            "fol": "\u00acp_3(Birdie)",
            "str_fol": "\u00acgains_recognition(Birdie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Birdie",
            "text": "Birdie acts honestly.",
            "fol": "p_4(Birdie)",
            "str_fol": "acts_honestly(Birdie)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Birdie",
            "text": "Birdie is not transparent.",
            "fol": "\u00acp_5(Birdie)",
            "str_fol": "\u00acis_transparent(Birdie)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Birdie",
            "text": "Birdie does not achieve success.",
            "fol": "\u00acp_6(Birdie)",
            "str_fol": "\u00acachieves_success(Birdie)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Birdie",
            "text": "Birdie does not take risks.",
            "fol": "\u00acp_16(Birdie)",
            "str_fol": "\u00actakes_risks(Birdie)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Birdie",
            "text": "Birdie is dependable.",
            "fol": "p_15(Birdie)",
            "str_fol": "is_dependable(Birdie)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Birdie",
            "text": "Birdie has knowledge.",
            "fol": "p_12(Birdie)",
            "str_fol": "has_knowledge(Birdie)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Birdie",
            "text": "Birdie keeps promises.",
            "fol": "p_14(Birdie)",
            "str_fol": "keeps_promises(Birdie)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Birdie",
            "text": "Birdie is reliable.",
            "fol": "p_13(Birdie)",
            "str_fol": "is_reliable(Birdie)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Birdie",
            "text": "Birdie builds trust with her clients.",
            "fol": "p_11(Birdie)",
            "str_fol": "build_trust(Birdie)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Birdie",
            "text": "Birdie does not secure her clients' success.",
            "fol": "\u00acp_9(Birdie)",
            "str_fol": "\u00acsecure_client_success(Birdie)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Birdie",
            "text": "Birdie understands market trends.",
            "fol": "p_8(Birdie)",
            "str_fol": "understand_market_trends(Birdie)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Birdie",
            "text": "Birdie is not a skilled analyst.",
            "fol": "\u00acp_7(Birdie)",
            "str_fol": "\u00acskilled_analyst(Birdie)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Birdie",
            "text": "Birdie does not achieve success.",
            "fol": "\u00acp_6(Birdie)",
            "str_fol": "\u00acachieves_success(Birdie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Birdie",
            "text": "Birdie makes strategic decisions.",
            "fol": "p_2(Birdie)",
            "str_fol": "makes_strategic_decisions(Birdie)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Birdie",
            "text": "Birdie does not gain recognition.",
            "fol": "\u00acp_3(Birdie)",
            "str_fol": "\u00acgains_recognition(Birdie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Birdie",
            "text": "Birdie is not transparent.",
            "fol": "\u00acp_5(Birdie)",
            "str_fol": "\u00acis_transparent(Birdie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Birdie",
            "text": "Birdie acts honestly.",
            "fol": "p_4(Birdie)",
            "str_fol": "acts_honestly(Birdie)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Birdie",
            "text": "Birdie is experienced.",
            "fol": "p_0(Birdie)",
            "str_fol": "is_experienced(Birdie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Birdie",
            "text": "Birdie studies finances.",
            "fol": "p_1(Birdie)",
            "str_fol": "study_finances(Birdie)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Birdie thinks critically or takes risks, then she achieves success.",
            "fol": "(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)",
            "str_fol": "(thinks_critically(Birdie) \u2228 takes_risks(Birdie)) \u2192 achieves_success(Birdie)"
        },
        {
            "id": 7,
            "text": "Birdie is either dependable or takes risks, but not both.",
            "fol": "p_15(Birdie) \u2295 p_16(Birdie)",
            "str_fol": "is_dependable(Birdie) \u2295 takes_risks(Birdie)"
        },
        {
            "id": 6,
            "text": "If Birdie either has knowledge or makes strategic decisions (but not both), then she gains recognition.",
            "fol": "(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)",
            "str_fol": "(has_knowledge(Birdie) \u2295 makes_strategic_decisions(Birdie)) \u2192 gains_recognition(Birdie)"
        },
        {
            "id": 5,
            "text": "If Birdie is dependable, then she is either transparent or keeps promises (but not both).",
            "fol": "p_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))",
            "str_fol": "is_dependable(Birdie) \u2192 (is_transparent(Birdie) \u2295 keeps_promises(Birdie))"
        },
        {
            "id": 4,
            "text": "For all humans, if they keep promises and act honestly, then they are reliable.",
            "fol": "\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((keeps_promises(x) \u2227 acts_honestly(x)) \u2192 is_reliable(x))"
        },
        {
            "id": 3,
            "text": "If someone has knowledge and is reliable, then they can build trust.",
            "fol": "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((has_knowledge(x) \u2227 is_reliable(x)) \u2192 build_trust(x))"
        },
        {
            "id": 2,
            "text": "If Birdie is experienced, then she either builds trust with her clients or secures their success, but not both.",
            "fol": "p_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))",
            "str_fol": "is_experienced(Birdie) \u2192 (build_trust(Birdie) \u2295 secure_client_success(Birdie))"
        },
        {
            "id": 1,
            "text": "If Birdie studies finances, then she makes smart investments and understands market trends.",
            "fol": "p_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))",
            "str_fol": "study_finances(Birdie) \u2192 (make_smart_investments(Birdie) \u2227 understand_market_trends(Birdie))"
        },
        {
            "id": 0,
            "text": "If Birdie is a skilled analyst, then she understands market trends and secures her clients' success.",
            "fol": "p_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))",
            "str_fol": "skilled_analyst(Birdie) \u2192 (understand_market_trends(Birdie) \u2227 secure_client_success(Birdie))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Birdie",
            "text": "Birdie does not achieve success.",
            "fol": "\u00acp_6(Birdie)",
            "str_fol": "\u00acachieves_success(Birdie)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Birdie",
            "text": "Birdie makes strategic decisions.",
            "fol": "p_2(Birdie)",
            "str_fol": "makes_strategic_decisions(Birdie)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Birdie",
            "text": "Birdie does not gain recognition.",
            "fol": "\u00acp_3(Birdie)",
            "str_fol": "\u00acgains_recognition(Birdie)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Birdie",
            "text": "Birdie is not transparent.",
            "fol": "\u00acp_5(Birdie)",
            "str_fol": "\u00acis_transparent(Birdie)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Birdie",
            "text": "Birdie acts honestly.",
            "fol": "p_4(Birdie)",
            "str_fol": "acts_honestly(Birdie)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Birdie",
            "text": "Birdie is experienced.",
            "fol": "p_0(Birdie)",
            "str_fol": "is_experienced(Birdie)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Birdie",
            "text": "Birdie studies finances.",
            "fol": "p_1(Birdie)",
            "str_fol": "study_finances(Birdie)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Birdie thinks critically or takes risks, then she achieves success.",
            "fol": "(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)",
            "str_fol": "(thinks_critically(Birdie) \u2228 takes_risks(Birdie)) \u2192 achieves_success(Birdie)"
        },
        {
            "id": 7,
            "text": "Birdie is either dependable or takes risks, but not both.",
            "fol": "p_15(Birdie) \u2295 p_16(Birdie)",
            "str_fol": "is_dependable(Birdie) \u2295 takes_risks(Birdie)"
        },
        {
            "id": 6,
            "text": "If Birdie either has knowledge or makes strategic decisions (but not both), then she gains recognition.",
            "fol": "(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)",
            "str_fol": "(has_knowledge(Birdie) \u2295 makes_strategic_decisions(Birdie)) \u2192 gains_recognition(Birdie)"
        },
        {
            "id": 5,
            "text": "If Birdie is dependable, then she is either transparent or keeps promises (but not both).",
            "fol": "p_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))",
            "str_fol": "is_dependable(Birdie) \u2192 (is_transparent(Birdie) \u2295 keeps_promises(Birdie))"
        },
        {
            "id": 4,
            "text": "For all humans, if they keep promises and act honestly, then they are reliable.",
            "fol": "\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((keeps_promises(x) \u2227 acts_honestly(x)) \u2192 is_reliable(x))"
        },
        {
            "id": 3,
            "text": "If someone has knowledge and is reliable, then they can build trust.",
            "fol": "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((has_knowledge(x) \u2227 is_reliable(x)) \u2192 build_trust(x))"
        },
        {
            "id": 2,
            "text": "If Birdie is experienced, then she either builds trust with her clients or secures their success, but not both.",
            "fol": "p_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))",
            "str_fol": "is_experienced(Birdie) \u2192 (build_trust(Birdie) \u2295 secure_client_success(Birdie))"
        },
        {
            "id": 1,
            "text": "If Birdie studies finances, then she makes smart investments and understands market trends.",
            "fol": "p_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))",
            "str_fol": "study_finances(Birdie) \u2192 (make_smart_investments(Birdie) \u2227 understand_market_trends(Birdie))"
        },
        {
            "id": 0,
            "text": "If Birdie is a skilled analyst, then she understands market trends and secures her clients' success.",
            "fol": "p_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))",
            "str_fol": "skilled_analyst(Birdie) \u2192 (understand_market_trends(Birdie) \u2227 secure_client_success(Birdie))"
        }
    ],
    "context_fol": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))",
    "conclusion": {
        "id": 15,
        "subject": "Birdie",
        "text": "Birdie is not a skilled analyst.",
        "fol": "\u00acp_7(Birdie)",
        "str_fol": "\u00acskilled_analyst(Birdie)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_7(Birdie)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Birdie",
                    "text": "Birdie does not achieve success.",
                    "fol": "\u00acp_6(Birdie)",
                    "str_fol": "\u00acachieves_success(Birdie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Birdie thinks critically or takes risks, then she achieves success.",
                    "fol": "(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)",
                    "str_fol": "(thinks_critically(Birdie) \u2228 takes_risks(Birdie)) \u2192 achieves_success(Birdie)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Birdie",
                "text": "Birdie does not take risks.",
                "fol": "\u00acp_16(Birdie)",
                "str_fol": "\u00actakes_risks(Birdie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Birdie",
                    "text": "Birdie does not take risks.",
                    "fol": "\u00acp_16(Birdie)",
                    "str_fol": "\u00actakes_risks(Birdie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Birdie is either dependable or takes risks, but not both.",
                    "fol": "p_15(Birdie) \u2295 p_16(Birdie)",
                    "str_fol": "is_dependable(Birdie) \u2295 takes_risks(Birdie)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Birdie",
                "text": "Birdie is dependable.",
                "fol": "p_15(Birdie)",
                "str_fol": "is_dependable(Birdie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Birdie",
                    "text": "Birdie makes strategic decisions.",
                    "fol": "p_2(Birdie)",
                    "str_fol": "makes_strategic_decisions(Birdie)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Birdie",
                    "text": "Birdie does not gain recognition.",
                    "fol": "\u00acp_3(Birdie)",
                    "str_fol": "\u00acgains_recognition(Birdie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Birdie either has knowledge or makes strategic decisions (but not both), then she gains recognition.",
                    "fol": "(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)",
                    "str_fol": "(has_knowledge(Birdie) \u2295 makes_strategic_decisions(Birdie)) \u2192 gains_recognition(Birdie)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Birdie",
                "text": "Birdie has knowledge.",
                "fol": "p_12(Birdie)",
                "str_fol": "has_knowledge(Birdie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Birdie",
                    "text": "Birdie is dependable.",
                    "fol": "p_15(Birdie)",
                    "str_fol": "is_dependable(Birdie)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Birdie",
                    "text": "Birdie is not transparent.",
                    "fol": "\u00acp_5(Birdie)",
                    "str_fol": "\u00acis_transparent(Birdie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Birdie is dependable, then she is either transparent or keeps promises (but not both).",
                    "fol": "p_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))",
                    "str_fol": "is_dependable(Birdie) \u2192 (is_transparent(Birdie) \u2295 keeps_promises(Birdie))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Birdie",
                "text": "Birdie keeps promises.",
                "fol": "p_14(Birdie)",
                "str_fol": "keeps_promises(Birdie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Birdie",
                    "text": "Birdie keeps promises.",
                    "fol": "p_14(Birdie)",
                    "str_fol": "keeps_promises(Birdie)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Birdie",
                    "text": "Birdie acts honestly.",
                    "fol": "p_4(Birdie)",
                    "str_fol": "acts_honestly(Birdie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all humans, if they keep promises and act honestly, then they are reliable.",
                    "fol": "\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((keeps_promises(x) \u2227 acts_honestly(x)) \u2192 is_reliable(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Birdie",
                "text": "Birdie is reliable.",
                "fol": "p_13(Birdie)",
                "str_fol": "is_reliable(Birdie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Birdie",
                    "text": "Birdie has knowledge.",
                    "fol": "p_12(Birdie)",
                    "str_fol": "has_knowledge(Birdie)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Birdie",
                    "text": "Birdie is reliable.",
                    "fol": "p_13(Birdie)",
                    "str_fol": "is_reliable(Birdie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone has knowledge and is reliable, then they can build trust.",
                    "fol": "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((has_knowledge(x) \u2227 is_reliable(x)) \u2192 build_trust(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Birdie",
                "text": "Birdie builds trust with her clients.",
                "fol": "p_11(Birdie)",
                "str_fol": "build_trust(Birdie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Birdie",
                    "text": "Birdie is experienced.",
                    "fol": "p_0(Birdie)",
                    "str_fol": "is_experienced(Birdie)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Birdie",
                    "text": "Birdie builds trust with her clients.",
                    "fol": "p_11(Birdie)",
                    "str_fol": "build_trust(Birdie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Birdie is experienced, then she either builds trust with her clients or secures their success, but not both.",
                    "fol": "p_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))",
                    "str_fol": "is_experienced(Birdie) \u2192 (build_trust(Birdie) \u2295 secure_client_success(Birdie))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Birdie",
                "text": "Birdie does not secure her clients' success.",
                "fol": "\u00acp_9(Birdie)",
                "str_fol": "\u00acsecure_client_success(Birdie)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Birdie",
                    "text": "Birdie studies finances.",
                    "fol": "p_1(Birdie)",
                    "str_fol": "study_finances(Birdie)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Birdie studies finances, then she makes smart investments and understands market trends.",
                    "fol": "p_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))",
                    "str_fol": "study_finances(Birdie) \u2192 (make_smart_investments(Birdie) \u2227 understand_market_trends(Birdie))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Birdie",
                "text": "Birdie understands market trends.",
                "fol": "p_8(Birdie)",
                "str_fol": "understand_market_trends(Birdie)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Birdie",
                    "text": "Birdie understands market trends.",
                    "fol": "p_8(Birdie)",
                    "str_fol": "understand_market_trends(Birdie)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Birdie",
                    "text": "Birdie does not secure her clients' success.",
                    "fol": "\u00acp_9(Birdie)",
                    "str_fol": "\u00acsecure_client_success(Birdie)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Birdie is a skilled analyst, then she understands market trends and secures her clients' success.",
                    "fol": "p_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))",
                    "str_fol": "skilled_analyst(Birdie) \u2192 (understand_market_trends(Birdie) \u2227 secure_client_success(Birdie))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Birdie",
                "text": "Birdie is not a skilled analyst.",
                "fol": "\u00acp_7(Birdie)",
                "str_fol": "\u00acskilled_analyst(Birdie)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 p_17(Birdie) | p_16(Birdie) -> p_6(Birdie).  [assumption].\n2 -(p_15(Birdie) <-> p_16(Birdie)).  [assumption].\n3 -(p_12(Birdie) <-> p_2(Birdie)) -> p_3(Birdie).  [assumption].\n4 p_15(Birdie) -> -(p_5(Birdie) <-> p_14(Birdie)).  [assumption].\n5 (all x (p_14(x) & p_4(x) -> p_13(x))).  [assumption].\n6 (all x (p_12(x) & p_13(x) -> p_11(x))).  [assumption].\n7 p_0(Birdie) -> -(p_11(Birdie) <-> p_9(Birdie)).  [assumption].\n9 p_7(Birdie) -> p_8(Birdie) & p_9(Birdie).  [assumption].\n10 -p_7(Birdie).  [goal].\n12 -p_6(Birdie).  [assumption].\n13 -p_16(Birdie) | p_6(Birdie).  [clausify(1)].\n14 p_12(Birdie) | -p_2(Birdie) | p_3(Birdie).  [clausify(3)].\n15 p_2(Birdie).  [assumption].\n17 p_12(Birdie) | p_3(Birdie).  [resolve(14,b,15,a)].\n18 -p_3(Birdie).  [assumption].\n19 -p_15(Birdie) | p_5(Birdie) | p_14(Birdie).  [clausify(4)].\n20 -p_5(Birdie).  [assumption].\n22 -p_14(x) | -p_4(x) | p_13(x).  [clausify(5)].\n23 p_4(Birdie).  [assumption].\n25 p_0(Birdie).  [assumption].\n26 -p_0(Birdie) | -p_11(Birdie) | -p_9(Birdie).  [clausify(7)].\n31 p_15(Birdie) | p_16(Birdie).  [clausify(2)].\n32 -p_15(Birdie) | p_14(Birdie).  [resolve(19,b,20,a)].\n33 p_12(Birdie).  [resolve(17,b,18,a)].\n34 -p_12(x) | -p_13(x) | p_11(x).  [clausify(6)].\n35 p_7(Birdie).  [deny(10)].\n37 -p_7(Birdie) | p_9(Birdie).  [clausify(9)].\n38 p_14(Birdie) | p_16(Birdie).  [resolve(32,a,31,a)].\n39 -p_16(Birdie).  [resolve(13,b,12,a)].\n40 p_14(Birdie).  [resolve(38,b,39,a)].\n41 -p_14(Birdie) | p_13(Birdie).  [resolve(22,b,23,a)].\n42 -p_11(Birdie) | -p_9(Birdie).  [resolve(26,a,25,a)].\n44 -p_13(Birdie) | p_11(Birdie).  [resolve(33,a,34,a)].\n45 -p_13(Birdie) | -p_9(Birdie).  [resolve(44,b,42,a)].\n46 p_9(Birdie).  [resolve(35,a,37,a)].\n47 -p_13(Birdie).  [resolve(45,b,46,a)].\n48 p_13(Birdie).  [resolve(40,a,41,a)].\n49 $F.  [resolve(47,a,48,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_15(Birdie)\np_14(Birdie)\np_13(Birdie)\np_12(Birdie)",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Birdie)",
                    "p_2(Birdie)",
                    "-p_3(Birdie)",
                    "-p_5(Birdie)",
                    "p_4(Birdie)",
                    "p_0(Birdie)",
                    "p_1(Birdie)",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie)",
                    "-(p_15(Birdie) <-> p_16(Birdie))",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie)",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie)))",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x)) -> p_11(x))",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie)))",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie))",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie))",
                    "p_15(Birdie)",
                    "p_14(Birdie)",
                    "p_13(Birdie)",
                    "p_12(Birdie)"
                ],
                "formulas(goals)": [
                    "-p_7(Birdie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_15(Birdie)",
                    "p_14(Birdie)",
                    "p_13(Birdie)",
                    "p_12(Birdie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_15(Birdie)\np_14(Birdie)\np_13(Birdie)\np_12(Birdie)\np_15(Birdie) \u2192 p_9(Birdie)\np_15(Birdie) \u2192 p_7(Birdie)",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Birdie)",
                    "p_2(Birdie)",
                    "-p_3(Birdie)",
                    "-p_5(Birdie)",
                    "p_4(Birdie)",
                    "p_0(Birdie)",
                    "p_1(Birdie)",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie)",
                    "-(p_15(Birdie) <-> p_16(Birdie))",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie)",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie)))",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x) & -p_15(x)) -> p_11(x))",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie)))",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie))",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie))",
                    "p_15(Birdie)",
                    "p_14(Birdie)",
                    "p_13(Birdie)",
                    "p_12(Birdie)",
                    "p_15(Birdie) -> p_9(Birdie)",
                    "p_15(Birdie) -> p_7(Birdie)"
                ],
                "formulas(goals)": [
                    "p_7(Birdie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_11(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x))",
                    "p_15(Birdie) \u2192 p_9(Birdie)",
                    "p_15(Birdie) \u2192 p_7(Birdie)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_15(Birdie)\np_14(Birdie)\np_13(Birdie)\np_12(Birdie)\np_15(Birdie) \u2192 p_9(Birdie)\np_15(Birdie) \u2192 p_7(Birdie)\np_15(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Birdie)",
                    "p_2(Birdie)",
                    "-p_3(Birdie)",
                    "-p_5(Birdie)",
                    "p_4(Birdie)",
                    "p_0(Birdie)",
                    "p_1(Birdie)",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie)",
                    "-(p_15(Birdie) <-> p_16(Birdie))",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie)",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie)))",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x) & -p_15(x)) -> p_11(x))",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie)))",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie))",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie))",
                    "p_15(Birdie)",
                    "p_14(Birdie)",
                    "p_13(Birdie)",
                    "p_12(Birdie)",
                    "p_15(Birdie) -> p_9(Birdie)",
                    "p_15(Birdie) -> p_7(Birdie)",
                    "p_15(Birdie) -> (p_8(Birdie) & p_9(Birdie))"
                ],
                "formulas(goals)": [
                    "p_7(Birdie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_15(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_15(Birdie)\np_14(Birdie)\np_13(Birdie)\np_12(Birdie)\np_15(Birdie) \u2192 p_9(Birdie)\np_15(Birdie) \u2192 p_7(Birdie)\np_15(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_8(Birdie)\np_9(Birdie)\np_10(Birdie)\n\u00acp_11(Birdie)\n\u00acp_16(Birdie)\np_17(Birdie) \u2192 p_6(Birdie)",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Birdie).",
                    "p_2(Birdie).",
                    "-p_3(Birdie).",
                    "-p_5(Birdie).",
                    "p_4(Birdie).",
                    "p_0(Birdie).",
                    "p_1(Birdie).",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie).",
                    "-(p_15(Birdie) <-> p_16(Birdie)).",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie).",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie))).",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x)).",
                    "all x ((p_12(x) & p_13(x) & -p_15(x)) -> p_11(x)).",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie))).",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie)).",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie)).",
                    "p_15(Birdie).",
                    "p_14(Birdie).",
                    "p_13(Birdie).",
                    "p_12(Birdie).",
                    "p_15(Birdie) -> p_9(Birdie).",
                    "p_15(Birdie) -> p_7(Birdie).",
                    "p_15(Birdie) -> (p_8(Birdie) & p_9(Birdie)).",
                    "p_8(Birdie).",
                    "p_9(Birdie).",
                    "p_10(Birdie).",
                    "-p_11(Birdie).",
                    "-p_16(Birdie).",
                    "p_17(Birdie) -> p_6(Birdie)."
                ],
                "formulas(goals)": [
                    "p_7(Birdie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Birdie)",
                    "p_9(Birdie)",
                    "p_10(Birdie)",
                    "\u00acp_11(Birdie)",
                    "\u00acp_16(Birdie)"
                ],
                "added_rules": [
                    "p_17(Birdie) \u2192 p_6(Birdie)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Birdie).\np_2(Birdie).\n\u00acp_3(Birdie).\n\u00acp_5(Birdie).\np_4(Birdie).\np_0(Birdie).\np_1(Birdie).\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie).\np_15(Birdie) \u2295 p_16(Birdie).\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie).\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie)).\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x)).\n\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x)).\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie)).\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie)).\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie)).\np_15(Birdie).\np_14(Birdie).\np_13(Birdie).\np_12(Birdie).\np_15(Birdie) \u2192 p_9(Birdie).\np_15(Birdie) \u2192 p_7(Birdie).\np_15(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie)).\np_8(Birdie).\np_9(Birdie).\np_10(Birdie).\n\u00acp_11(Birdie).\n\u00acp_16(Birdie).\np_17(Birdie) \u2192 p_6(Birdie).\n\u00acp_17(Birdie).",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Birdie).",
                    "p_2(Birdie).",
                    "-p_3(Birdie).",
                    "-p_5(Birdie).",
                    "p_4(Birdie).",
                    "p_0(Birdie).",
                    "p_1(Birdie).",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie).",
                    "-(p_15(Birdie) <-> p_16(Birdie)).",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie).",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie))).",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x)).",
                    "all x ((p_12(x) & p_13(x) & -p_15(x)) -> p_11(x)).",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie))).",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie)).",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie)).",
                    "p_15(Birdie).",
                    "p_14(Birdie).",
                    "p_13(Birdie).",
                    "p_12(Birdie).",
                    "p_15(Birdie) -> p_9(Birdie).",
                    "p_15(Birdie) -> p_7(Birdie).",
                    "p_15(Birdie) -> (p_8(Birdie) & p_9(Birdie)).",
                    "p_8(Birdie).",
                    "p_9(Birdie).",
                    "p_10(Birdie).",
                    "-p_11(Birdie).",
                    "-p_16(Birdie).",
                    "p_17(Birdie) -> p_6(Birdie).",
                    "-p_17(Birdie)."
                ],
                "formulas(goals)": [
                    "p_7(Birdie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_17(Birdie)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_15(Birdie)\np_14(Birdie)\np_13(Birdie)\np_12(Birdie)\np_15(Birdie) \u2192 p_9(Birdie)\np_15(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_8(Birdie)\np_9(Birdie)\np_10(Birdie)\n\u00acp_11(Birdie)\n\u00acp_16(Birdie)\np_17(Birdie) \u2192 p_6(Birdie)\n\u00acp_17(Birdie)\np_14(Birdie) \u2192 \u00acp_7(Birdie)",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_6(Birdie)",
                    "p_2(Birdie)",
                    "\u00acp_3(Birdie)",
                    "\u00acp_5(Birdie)",
                    "p_4(Birdie)",
                    "p_0(Birdie)",
                    "p_1(Birdie)",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie)",
                    "-(p_15(Birdie) <-> p_16(Birdie))",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie)",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie)))",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x) & \u00acp_15(x)) -> p_11(x))",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie)))",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie))",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie))",
                    "p_15(Birdie)",
                    "p_14(Birdie)",
                    "p_13(Birdie)",
                    "p_12(Birdie)",
                    "p_15(Birdie) -> p_9(Birdie)",
                    "p_15(Birdie) -> (p_8(Birdie) & p_9(Birdie))",
                    "p_8(Birdie)",
                    "p_9(Birdie)",
                    "p_10(Birdie)",
                    "\u00acp_11(Birdie)",
                    "\u00acp_16(Birdie)",
                    "p_17(Birdie) -> p_6(Birdie)",
                    "\u00acp_17(Birdie)",
                    "p_14(Birdie) -> \u00acp_7(Birdie)"
                ],
                "formulas(goals)": [
                    "\u00acp_7(Birdie)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_15(Birdie) \u2192 p_7(Birdie)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_14(Birdie) \u2192 \u00acp_7(Birdie)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Birdie)\np_2(Birdie)\n\u00acp_3(Birdie)\n\u00acp_5(Birdie)\np_4(Birdie)\np_0(Birdie)\np_1(Birdie)\n(p_17(Birdie) \u2228 p_16(Birdie)) \u2192 p_6(Birdie)\np_15(Birdie) \u2295 p_16(Birdie)\n(p_12(Birdie) \u2295 p_2(Birdie)) \u2192 p_3(Birdie)\np_15(Birdie) \u2192 (p_5(Birdie) \u2295 p_14(Birdie))\n\u2200x ((p_14(x) \u2227 p_4(x)) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x) \u2227 \u00acp_15(x)) \u2192 p_11(x))\np_0(Birdie) \u2192 (p_11(Birdie) \u2295 p_9(Birdie))\np_1(Birdie) \u2192 (p_10(Birdie) \u2227 p_8(Birdie))\np_7(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_15(Birdie)\np_14(Birdie)\np_13(Birdie)\np_12(Birdie)\np_15(Birdie) \u2192 p_9(Birdie)\np_15(Birdie) \u2192 (p_8(Birdie) \u2227 p_9(Birdie))\np_8(Birdie)\np_9(Birdie)\np_10(Birdie)\n\u00acp_11(Birdie)\n\u00acp_16(Birdie)\np_17(Birdie) \u2192 p_6(Birdie)\n\u00acp_17(Birdie)\np_14(Birdie) \u2192 \u00acp_7(Birdie)\n\u00acp_7(Birdie)\np_7(Birdie) \u2192 false",
            "Initial Goal": "\u00acp_7(Birdie)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Birdie).",
                    "p_2(Birdie).",
                    "-p_3(Birdie).",
                    "-p_5(Birdie).",
                    "p_4(Birdie).",
                    "p_0(Birdie).",
                    "p_1(Birdie).",
                    "(p_17(Birdie) | p_16(Birdie)) -> p_6(Birdie).",
                    "-(p_15(Birdie) <-> p_16(Birdie)).",
                    "(-(p_12(Birdie) <-> p_2(Birdie))) -> p_3(Birdie).",
                    "p_15(Birdie) -> (-(p_5(Birdie) <-> p_14(Birdie))).",
                    "all x ((p_14(x) & p_4(x)) -> p_13(x)).",
                    "all x ((p_12(x) & p_13(x) & -p_15(x)) -> p_11(x)).",
                    "p_0(Birdie) -> (-(p_11(Birdie) <-> p_9(Birdie))).",
                    "p_1(Birdie) -> (p_10(Birdie) & p_8(Birdie)).",
                    "p_7(Birdie) -> (p_8(Birdie) & p_9(Birdie)).",
                    "p_15(Birdie).",
                    "p_14(Birdie).",
                    "p_13(Birdie).",
                    "p_12(Birdie).",
                    "p_15(Birdie) -> p_9(Birdie).",
                    "p_15(Birdie) -> (p_8(Birdie) & p_9(Birdie)).",
                    "p_8(Birdie).",
                    "p_9(Birdie).",
                    "p_10(Birdie).",
                    "-p_11(Birdie).",
                    "-p_16(Birdie).",
                    "p_17(Birdie) -> p_6(Birdie).",
                    "-p_17(Birdie).",
                    "p_14(Birdie) -> -p_7(Birdie).",
                    "-p_7(Birdie).",
                    "p_7(Birdie) -> $F."
                ],
                "formulas(goals)": [
                    "-p_7(Birdie)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Birdie)"
                ],
                "added_rules": [
                    "p_7(Birdie) \u2192 false"
                ]
            }
        }
    ]
}