{
    "background_story": "Laila, a skilled sailor, had spent her entire life at sea. She was known for her ability to unfasten even the most stubborn knots and repair damaged sails with ease. During a particularly fierce storm, Laila's boat was hit by a strong gust, causing the main sail to tear loose. As the crew struggled to regain control, Laila sprang into action, quickly unfastening the tangled ropes and expertly retying them to secure the sail. Her swift thinking and agility saved the boat from certain destruction, earning her the respect and admiration of her crew. From that day on, Laila was known as the sailor who could unfasten any problem that came her way, no matter how tangled or complex.",
    "predicates": [
        {
            "id": 0,
            "name": "saves_lives"
        },
        {
            "id": 1,
            "name": "thinks_quickly"
        },
        {
            "id": 2,
            "name": "seeks_exploration"
        },
        {
            "id": 3,
            "name": "leads_crew"
        },
        {
            "id": 4,
            "name": "earns_respect"
        },
        {
            "id": 5,
            "name": "has_initiative"
        },
        {
            "id": 6,
            "name": "tries_hard"
        },
        {
            "id": 7,
            "name": "experienced_sailor"
        },
        {
            "id": 8,
            "name": "skilled_problem_solver"
        },
        {
            "id": 9,
            "name": "handle_emergencies"
        },
        {
            "id": 10,
            "name": "stays_calm"
        },
        {
            "id": 11,
            "name": "faces_challenges"
        },
        {
            "id": 12,
            "name": "is_adventurous"
        },
        {
            "id": 13,
            "name": "takes_risks"
        },
        {
            "id": 14,
            "name": "fixes_fast"
        },
        {
            "id": 15,
            "name": "fearless"
        },
        {
            "id": 16,
            "name": "makes_good_decisions"
        },
        {
            "id": 17,
            "name": "is_resourceful"
        },
        {
            "id": 18,
            "name": "has_expertise"
        },
        {
            "id": 19,
            "name": "meets_obstacles"
        },
        {
            "id": 20,
            "name": "finds_solutions"
        },
        {
            "id": 21,
            "name": "is_brave"
        },
        {
            "id": 22,
            "name": "is_ambitious"
        },
        {
            "id": 23,
            "name": "is_curious"
        },
        {
            "id": 24,
            "name": "is_cautious"
        }
    ],
    "subject_name": "Laila",
    "subject_category": "human",
    "keyword": "unfasten",
    "all_facts": [
        {
            "id": 0,
            "subject": "Laila",
            "text": "Laila does not save lives.",
            "fol": "\u00acp_0(Laila)",
            "str_fol": "\u00acsaves_lives(Laila)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Laila",
            "text": "Laila does not think quickly when she faces challenges, so she stays calm.",
            "fol": "\u00acp_1(Laila)",
            "str_fol": "\u00acthinks_quickly(Laila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Laila",
            "text": "Laila seeks exploration.",
            "fol": "p_2(Laila)",
            "str_fol": "seeks_exploration(Laila)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Laila",
            "text": "Laila leads a crew.",
            "fol": "p_3(Laila)",
            "str_fol": "leads_crew(Laila)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Laila",
            "text": "Laila does not earn respect.",
            "fol": "\u00acp_4(Laila)",
            "str_fol": "\u00acearns_respect(Laila)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Laila",
            "text": "Laila has initiative.",
            "fol": "p_5(Laila)",
            "str_fol": "has_initiative(Laila)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Laila",
            "text": "Laila does not try hard.",
            "fol": "\u00acp_6(Laila)",
            "str_fol": "\u00actries_hard(Laila)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Laila",
            "text": "Laila takes risks.",
            "fol": "p_13(Laila)",
            "str_fol": "takes_risks(Laila)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Laila",
            "text": "Laila is adventurous.",
            "fol": "p_12(Laila)",
            "str_fol": "is_adventurous(Laila)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Laila",
            "text": "Laila faces challenges.",
            "fol": "p_11(Laila)",
            "str_fol": "faces_challenges(Laila)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Laila",
            "text": "Laila cannot handle emergencies.",
            "fol": "\u00acp_9(Laila)",
            "str_fol": "\u00achandle_emergencies(Laila)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Laila",
            "text": "Laila stays calm.",
            "fol": "p_10(Laila)",
            "str_fol": "stays_calm(Laila)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Laila",
            "text": "Laila is not a skilled problem solver.",
            "fol": "\u00acp_8(Laila)",
            "str_fol": "\u00acskilled_problem_solver(Laila)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Laila",
            "text": "Laila is not an experienced sailor.",
            "fol": "\u00acp_7(Laila)",
            "str_fol": "\u00acexperienced_sailor(Laila)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Laila",
            "text": "Laila does not try hard.",
            "fol": "\u00acp_6(Laila)",
            "str_fol": "\u00actries_hard(Laila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Laila",
            "text": "Laila seeks exploration.",
            "fol": "p_2(Laila)",
            "str_fol": "seeks_exploration(Laila)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Laila",
            "text": "Laila has initiative.",
            "fol": "p_5(Laila)",
            "str_fol": "has_initiative(Laila)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Laila",
            "text": "Laila leads a crew.",
            "fol": "p_3(Laila)",
            "str_fol": "leads_crew(Laila)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Laila",
            "text": "Laila does not earn respect.",
            "fol": "\u00acp_4(Laila)",
            "str_fol": "\u00acearns_respect(Laila)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Laila",
            "text": "Laila does not think quickly when she faces challenges, so she stays calm.",
            "fol": "\u00acp_1(Laila)",
            "str_fol": "\u00acthinks_quickly(Laila)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Laila",
            "text": "Laila does not save lives.",
            "fol": "\u00acp_0(Laila)",
            "str_fol": "\u00acsaves_lives(Laila)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Laila tries hard or takes risks.",
            "fol": "p_6(Laila) \u2228 p_13(Laila)",
            "str_fol": "tries_hard(Laila) \u2228 takes_risks(Laila)"
        },
        {
            "id": 5,
            "text": "If Laila seeks exploration, then she is adventurous and takes risks.",
            "fol": "p_2(Laila) \u2192 (p_12(Laila) \u2227 p_13(Laila))",
            "str_fol": "seeks_exploration(Laila) \u2192 (is_adventurous(Laila) \u2227 takes_risks(Laila))"
        },
        {
            "id": 4,
            "text": "All adventurous humans face challenges and have initiative.",
            "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_5(x)))",
            "str_fol": "\u2200x (is_adventurous(x) \u2192 (faces_challenges(x) \u2227 has_initiative(x)))"
        },
        {
            "id": 3,
            "text": "If someone can handle emergencies and lead a crew, then they earn respect.",
            "fol": "\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((handle_emergencies(x) \u2227 leads_crew(x)) \u2192 earns_respect(x))"
        },
        {
            "id": 2,
            "text": "Anyone who faces challenges either thinks quickly or stays calm (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (faces_challenges(x) \u2192 (thinks_quickly(x) \u2228 stays_calm(x)))"
        },
        {
            "id": 1,
            "text": "If Laila stays calm and is a skilled problem solver, then she can save lives.",
            "fol": "(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)",
            "str_fol": "(stays_calm(Laila) \u2227 skilled_problem_solver(Laila)) \u2192 saves_lives(Laila)"
        },
        {
            "id": 0,
            "text": "For all humans, if they are an experienced sailor or a skilled problem solver (or both), then they can handle emergencies.",
            "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((experienced_sailor(x) \u2228 skilled_problem_solver(x)) \u2192 handle_emergencies(x))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Laila",
            "text": "Laila does not try hard.",
            "fol": "\u00acp_6(Laila)",
            "str_fol": "\u00actries_hard(Laila)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Laila",
            "text": "Laila seeks exploration.",
            "fol": "p_2(Laila)",
            "str_fol": "seeks_exploration(Laila)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Laila",
            "text": "Laila has initiative.",
            "fol": "p_5(Laila)",
            "str_fol": "has_initiative(Laila)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Laila",
            "text": "Laila leads a crew.",
            "fol": "p_3(Laila)",
            "str_fol": "leads_crew(Laila)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Laila",
            "text": "Laila does not earn respect.",
            "fol": "\u00acp_4(Laila)",
            "str_fol": "\u00acearns_respect(Laila)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Laila",
            "text": "Laila does not think quickly when she faces challenges, so she stays calm.",
            "fol": "\u00acp_1(Laila)",
            "str_fol": "\u00acthinks_quickly(Laila)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Laila",
            "text": "Laila does not save lives.",
            "fol": "\u00acp_0(Laila)",
            "str_fol": "\u00acsaves_lives(Laila)",
            "negation": true
        },
        {
            "id": 6,
            "text": "Laila tries hard or takes risks.",
            "fol": "p_6(Laila) \u2228 p_13(Laila)",
            "str_fol": "tries_hard(Laila) \u2228 takes_risks(Laila)"
        },
        {
            "id": 5,
            "text": "If Laila seeks exploration, then she is adventurous and takes risks.",
            "fol": "p_2(Laila) \u2192 (p_12(Laila) \u2227 p_13(Laila))",
            "str_fol": "seeks_exploration(Laila) \u2192 (is_adventurous(Laila) \u2227 takes_risks(Laila))"
        },
        {
            "id": 4,
            "text": "All adventurous humans face challenges and have initiative.",
            "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_5(x)))",
            "str_fol": "\u2200x (is_adventurous(x) \u2192 (faces_challenges(x) \u2227 has_initiative(x)))"
        },
        {
            "id": 3,
            "text": "If someone can handle emergencies and lead a crew, then they earn respect.",
            "fol": "\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))",
            "str_fol": "\u2200x ((handle_emergencies(x) \u2227 leads_crew(x)) \u2192 earns_respect(x))"
        },
        {
            "id": 2,
            "text": "Anyone who faces challenges either thinks quickly or stays calm (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (faces_challenges(x) \u2192 (thinks_quickly(x) \u2228 stays_calm(x)))"
        },
        {
            "id": 1,
            "text": "If Laila stays calm and is a skilled problem solver, then she can save lives.",
            "fol": "(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)",
            "str_fol": "(stays_calm(Laila) \u2227 skilled_problem_solver(Laila)) \u2192 saves_lives(Laila)"
        },
        {
            "id": 0,
            "text": "For all humans, if they are an experienced sailor or a skilled problem solver (or both), then they can handle emergencies.",
            "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((experienced_sailor(x) \u2228 skilled_problem_solver(x)) \u2192 handle_emergencies(x))"
        }
    ],
    "context_fol": "\u00acp_6(Laila)\np_2(Laila)\np_5(Laila)\np_3(Laila)\n\u00acp_4(Laila)\n\u00acp_1(Laila)\n\u00acp_0(Laila)\np_6(Laila) \u2228 p_13(Laila)\np_2(Laila) \u2192 (p_12(Laila) \u2227 p_13(Laila))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_5(x)))\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))\n\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_10(x)))\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
    "conclusion": {
        "id": 13,
        "subject": "Laila",
        "text": "Laila is not an experienced sailor.",
        "fol": "\u00acp_7(Laila)",
        "str_fol": "\u00acexperienced_sailor(Laila)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_7(Laila)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Laila",
                    "text": "Laila does not try hard.",
                    "fol": "\u00acp_6(Laila)",
                    "str_fol": "\u00actries_hard(Laila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Laila tries hard or takes risks.",
                    "fol": "p_6(Laila) \u2228 p_13(Laila)",
                    "str_fol": "tries_hard(Laila) \u2228 takes_risks(Laila)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Laila",
                "text": "Laila takes risks.",
                "fol": "p_13(Laila)",
                "str_fol": "takes_risks(Laila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Laila",
                    "text": "Laila seeks exploration.",
                    "fol": "p_2(Laila)",
                    "str_fol": "seeks_exploration(Laila)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Laila",
                    "text": "Laila takes risks.",
                    "fol": "p_13(Laila)",
                    "str_fol": "takes_risks(Laila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Laila seeks exploration, then she is adventurous and takes risks.",
                    "fol": "p_2(Laila) \u2192 (p_12(Laila) \u2227 p_13(Laila))",
                    "str_fol": "seeks_exploration(Laila) \u2192 (is_adventurous(Laila) \u2227 takes_risks(Laila))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Laila",
                "text": "Laila is adventurous.",
                "fol": "p_12(Laila)",
                "str_fol": "is_adventurous(Laila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Laila",
                    "text": "Laila is adventurous.",
                    "fol": "p_12(Laila)",
                    "str_fol": "is_adventurous(Laila)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Laila",
                    "text": "Laila has initiative.",
                    "fol": "p_5(Laila)",
                    "str_fol": "has_initiative(Laila)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "All adventurous humans face challenges and have initiative.",
                    "fol": "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_5(x)))",
                    "str_fol": "\u2200x (is_adventurous(x) \u2192 (faces_challenges(x) \u2227 has_initiative(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Laila",
                "text": "Laila faces challenges.",
                "fol": "p_11(Laila)",
                "str_fol": "faces_challenges(Laila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Laila",
                    "text": "Laila leads a crew.",
                    "fol": "p_3(Laila)",
                    "str_fol": "leads_crew(Laila)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Laila",
                    "text": "Laila does not earn respect.",
                    "fol": "\u00acp_4(Laila)",
                    "str_fol": "\u00acearns_respect(Laila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone can handle emergencies and lead a crew, then they earn respect.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))",
                    "str_fol": "\u2200x ((handle_emergencies(x) \u2227 leads_crew(x)) \u2192 earns_respect(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Laila",
                "text": "Laila cannot handle emergencies.",
                "fol": "\u00acp_9(Laila)",
                "str_fol": "\u00achandle_emergencies(Laila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Laila",
                    "text": "Laila faces challenges.",
                    "fol": "p_11(Laila)",
                    "str_fol": "faces_challenges(Laila)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Laila",
                    "text": "Laila does not think quickly when she faces challenges, so she stays calm.",
                    "fol": "\u00acp_1(Laila)",
                    "str_fol": "\u00acthinks_quickly(Laila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who faces challenges either thinks quickly or stays calm (or both).",
                    "fol": "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (faces_challenges(x) \u2192 (thinks_quickly(x) \u2228 stays_calm(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Laila",
                "text": "Laila stays calm.",
                "fol": "p_10(Laila)",
                "str_fol": "stays_calm(Laila)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Laila",
                    "text": "Laila stays calm.",
                    "fol": "p_10(Laila)",
                    "str_fol": "stays_calm(Laila)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Laila",
                    "text": "Laila does not save lives.",
                    "fol": "\u00acp_0(Laila)",
                    "str_fol": "\u00acsaves_lives(Laila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Laila stays calm and is a skilled problem solver, then she can save lives.",
                    "fol": "(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)",
                    "str_fol": "(stays_calm(Laila) \u2227 skilled_problem_solver(Laila)) \u2192 saves_lives(Laila)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Laila",
                "text": "Laila is not a skilled problem solver.",
                "fol": "\u00acp_8(Laila)",
                "str_fol": "\u00acskilled_problem_solver(Laila)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Laila",
                    "text": "Laila is not a skilled problem solver.",
                    "fol": "\u00acp_8(Laila)",
                    "str_fol": "\u00acskilled_problem_solver(Laila)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Laila",
                    "text": "Laila cannot handle emergencies.",
                    "fol": "\u00acp_9(Laila)",
                    "str_fol": "\u00achandle_emergencies(Laila)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if they are an experienced sailor or a skilled problem solver (or both), then they can handle emergencies.",
                    "fol": "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((experienced_sailor(x) \u2228 skilled_problem_solver(x)) \u2192 handle_emergencies(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Laila",
                "text": "Laila is not an experienced sailor.",
                "fol": "\u00acp_7(Laila)",
                "str_fol": "\u00acexperienced_sailor(Laila)",
                "negation": true
            }
        }
    ],
    "proof_trace": "3 (all x (p_9(x) & p_3(x) -> p_4(x))).  [assumption].\n6 (all x (p_7(x) | p_8(x) -> p_9(x))).  [assumption].\n7 -p_7(Laila).  [goal].\n13 -p_9(x) | -p_3(x) | p_4(x).  [clausify(3)].\n14 p_3(Laila).  [assumption].\n15 -p_9(Laila) | p_4(Laila).  [resolve(13,b,14,a)].\n16 -p_4(Laila).  [assumption].\n23 p_7(Laila).  [deny(7)].\n24 -p_7(x) | p_9(x).  [clausify(6)].\n25 p_9(Laila).  [resolve(23,a,24,a)].\n26 -p_9(Laila).  [resolve(15,b,16,a)].\n29 $F.  [resolve(25,a,26,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Laila)\np_2(Laila)\np_5(Laila)\np_3(Laila)\n\u00acp_4(Laila)\n\u00acp_1(Laila)\n\u00acp_0(Laila)\np_6(Laila) \u2228 p_13(Laila)\np_2(Laila) \u2192 (p_12(Laila) \u2227 p_13(Laila))\n\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_5(x)))\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))\n\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_10(x)))\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\np_10(Laila) \u2192 p_7(Laila)",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Laila).",
                    "p_2(Laila).",
                    "p_5(Laila).",
                    "p_3(Laila).",
                    "-p_4(Laila).",
                    "-p_1(Laila).",
                    "-p_0(Laila).",
                    "p_6(Laila) | p_13(Laila).",
                    "p_2(Laila) -> (p_12(Laila) & p_13(Laila)).",
                    "all x (p_12(x) -> (p_11(x) & p_5(x))).",
                    "all x ((p_9(x) & p_3(x)) -> p_4(x)).",
                    "all x (p_11(x) -> (p_1(x) | p_10(x))).",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila).",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x)).",
                    "p_10(Laila) -> p_7(Laila)."
                ],
                "formulas(goals)": [
                    "p_7(Laila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Laila) \u2192 p_7(Laila)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Laila)\np_2(Laila)\np_5(Laila)\np_3(Laila)\n\u00acp_4(Laila)\n\u00acp_1(Laila)\n\u00acp_0(Laila)\np_6(Laila) \u2228 p_13(Laila)\np_2(Laila) \u2192 p_12(Laila)\np_2(Laila) \u2192 p_13(Laila)\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_5(x))\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))\n\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x)))\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\np_10(Laila) \u2192 p_7(Laila)\np_13(Laila)\np_12(Laila)\np_11(Laila)\np_10(Laila)",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "- p_6(Laila).",
                    "p_2(Laila).",
                    "p_5(Laila).",
                    "p_3(Laila).",
                    "- p_4(Laila).",
                    "- p_1(Laila).",
                    "- p_0(Laila).",
                    "p_6(Laila) | p_13(Laila).",
                    "p_2(Laila) -> p_12(Laila).",
                    "p_2(Laila) -> p_13(Laila).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_5(x)).",
                    "all x ((p_9(x) & p_3(x)) -> p_4(x)).",
                    "all x (p_11(x) -> (-p_1(x) -> p_10(x))).",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila).",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x)).",
                    "p_10(Laila) -> p_7(Laila).",
                    "p_13(Laila).",
                    "p_12(Laila).",
                    "p_11(Laila).",
                    "p_10(Laila)."
                ],
                "formulas(goals)": [
                    "- - p_7(Laila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Laila) \u2192 (p_12(Laila) \u2227 p_13(Laila))",
                    "\u2200x (p_12(x) \u2192 (p_11(x) \u2227 p_5(x)))",
                    "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_10(x)))"
                ],
                "added_facts": [
                    "p_13(Laila)",
                    "p_12(Laila)",
                    "p_11(Laila)",
                    "p_10(Laila)"
                ],
                "added_rules": [
                    "p_2(Laila) \u2192 p_12(Laila)",
                    "p_2(Laila) \u2192 p_13(Laila)",
                    "\u2200x (p_12(x) \u2192 p_11(x))",
                    "\u2200x (p_12(x) \u2192 p_5(x))",
                    "\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x)))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Laila)\np_2(Laila)\np_5(Laila)\np_3(Laila)\n\u00acp_4(Laila)\n\u00acp_1(Laila)\n\u00acp_0(Laila)\np_6(Laila) \u2228 p_13(Laila)\np_2(Laila) \u2192 p_12(Laila)\np_2(Laila) \u2192 p_13(Laila)\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_5(x))\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 (p_4(x) \u2228 p_10(x)))\n\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x)))\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\np_10(Laila) \u2192 p_7(Laila)\np_13(Laila)\np_12(Laila)\np_11(Laila)\np_10(Laila)",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Laila)",
                    "p_2(Laila)",
                    "p_5(Laila)",
                    "p_3(Laila)",
                    "-p_4(Laila)",
                    "-p_1(Laila)",
                    "-p_0(Laila)",
                    "p_6(Laila) | p_13(Laila)",
                    "p_2(Laila) -> p_12(Laila)",
                    "p_2(Laila) -> p_13(Laila)",
                    "all x (p_12(x) -> p_11(x))",
                    "all x (p_12(x) -> p_5(x))",
                    "all x ((p_9(x) & p_3(x)) -> (p_4(x) | p_10(x)))",
                    "all x (p_11(x) -> (-p_1(x) -> p_10(x)))",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "p_10(Laila) -> p_7(Laila)",
                    "p_13(Laila)",
                    "p_12(Laila)",
                    "p_11(Laila)",
                    "p_10(Laila)"
                ],
                "formulas(goals)": [
                    "-(-p_7(Laila))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 p_4(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 (p_4(x) \u2228 p_10(x)))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Laila)\np_2(Laila)\np_5(Laila)\np_3(Laila)\n\u00acp_4(Laila)\n\u00acp_1(Laila)\n\u00acp_0(Laila)\np_6(Laila) \u2228 p_13(Laila)\np_2(Laila) \u2192 p_12(Laila)\np_2(Laila) \u2192 p_13(Laila)\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_5(x))\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 (p_4(x) \u2228 p_10(x)))\n\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x)))\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)\n\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))\np_13(Laila)\np_12(Laila)\np_11(Laila)\np_10(Laila)\np_13(Laila) \u2192 \u00acp_7(Laila)",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Laila)",
                    "p_2(Laila)",
                    "p_5(Laila)",
                    "p_3(Laila)",
                    "-p_4(Laila)",
                    "-p_1(Laila)",
                    "-p_0(Laila)",
                    "p_6(Laila) | p_13(Laila)",
                    "p_2(Laila) -> p_12(Laila)",
                    "p_2(Laila) -> p_13(Laila)",
                    "all x (p_12(x) -> p_11(x))",
                    "all x (p_12(x) -> p_5(x))",
                    "all x ((p_9(x) & p_3(x)) -> (p_4(x) | p_10(x)))",
                    "all x (p_11(x) -> (-p_1(x) -> p_10(x)))",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila)",
                    "all x ((p_7(x) | p_8(x)) -> p_9(x))",
                    "p_13(Laila)",
                    "p_12(Laila)",
                    "p_11(Laila)",
                    "p_10(Laila)",
                    "p_13(Laila) -> -p_7(Laila)"
                ],
                "formulas(goals)": [
                    "-p_7(Laila)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Laila) \u2192 p_7(Laila)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_13(Laila) \u2192 \u00acp_7(Laila)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Laila).\np_2(Laila).\np_5(Laila).\np_3(Laila).\n\u00acp_4(Laila).\n\u00acp_1(Laila).\n\u00acp_0(Laila).\np_6(Laila) \u2228 p_13(Laila).\np_2(Laila) \u2192 p_12(Laila).\np_2(Laila) \u2192 p_13(Laila).\n\u2200x (p_12(x) \u2192 p_11(x)).\n\u2200x (p_12(x) \u2192 p_5(x)).\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 (p_4(x) \u2228 p_10(x))).\n\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x))).\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila).\n\u2200x (\u00acp_9(x) \u2192 (\u00acp_7(x) \u2227 \u00acp_8(x))).\np_13(Laila).\np_12(Laila).\np_11(Laila).\np_10(Laila).\np_13(Laila) \u2192 \u00acp_7(Laila).\np_12(Laila) \u2192 p_5(Laila).\np_11(Laila) \u2192 (\u00acp_1(Laila) \u2192 p_10(Laila)).",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Laila).",
                    "p_2(Laila).",
                    "p_5(Laila).",
                    "p_3(Laila).",
                    "-p_4(Laila).",
                    "-p_1(Laila).",
                    "-p_0(Laila).",
                    "p_6(Laila) | p_13(Laila).",
                    "p_2(Laila) -> p_12(Laila).",
                    "p_2(Laila) -> p_13(Laila).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_5(x)).",
                    "all x ((p_9(x) & p_3(x)) -> (p_4(x) | p_10(x))).",
                    "all x (p_11(x) -> (-p_1(x) -> p_10(x))).",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila).",
                    "all x (-p_9(x) -> (-p_7(x) & -p_8(x))).",
                    "p_13(Laila).",
                    "p_12(Laila).",
                    "p_11(Laila).",
                    "p_10(Laila).",
                    "p_13(Laila) -> -p_7(Laila).",
                    "p_12(Laila) -> p_5(Laila).",
                    "p_11(Laila) -> (-p_1(Laila) -> p_10(Laila))."
                ],
                "formulas(goals)": [
                    "-p_7(Laila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_7(x) \u2228 p_8(x)) \u2192 p_9(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_9(x) \u2192 (\u00acp_7(x) \u2227 \u00acp_8(x)))",
                    "p_12(Laila) \u2192 p_5(Laila)",
                    "p_11(Laila) \u2192 (\u00acp_1(Laila) \u2192 p_10(Laila))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Laila).\np_2(Laila).\np_5(Laila).\np_3(Laila).\n\u00acp_4(Laila).\n\u00acp_1(Laila).\n\u00acp_0(Laila).\np_6(Laila) \u2228 p_13(Laila).\np_2(Laila) \u2192 p_12(Laila).\np_2(Laila) \u2192 p_13(Laila).\n\u2200x (p_12(x) \u2192 p_11(x)).\n\u2200x (p_12(x) \u2192 p_5(x)).\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 (p_4(x) \u2228 p_10(x))).\n\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x))).\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila).\n\u2200x (\u00acp_9(x) \u2192 (\u00acp_7(x) \u2227 \u00acp_8(x))).\np_13(Laila).\np_12(Laila).\np_11(Laila).\np_10(Laila).\np_13(Laila) \u2192 \u00acp_7(Laila).\np_12(Laila) \u2192 p_5(Laila).\np_11(Laila) \u2192 (\u00acp_1(Laila) \u2192 p_10(Laila)).\np_7(Laila) \u2192 \u00acp_13(Laila).\np_11(Laila) \u2192 (p_1(Laila) \u2228 p_10(Laila)).",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Laila).",
                    "p_2(Laila).",
                    "p_5(Laila).",
                    "p_3(Laila).",
                    "-p_4(Laila).",
                    "-p_1(Laila).",
                    "-p_0(Laila).",
                    "p_6(Laila) | p_13(Laila).",
                    "p_2(Laila) -> p_12(Laila).",
                    "p_2(Laila) -> p_13(Laila).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_5(x)).",
                    "all x ((p_9(x) & p_3(x)) -> (p_4(x) | p_10(x))).",
                    "all x (p_11(x) -> (-p_1(x) -> p_10(x))).",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila).",
                    "all x (-p_9(x) -> (-p_7(x) & -p_8(x))).",
                    "p_13(Laila).",
                    "p_12(Laila).",
                    "p_11(Laila).",
                    "p_10(Laila).",
                    "p_13(Laila) -> -p_7(Laila).",
                    "p_12(Laila) -> p_5(Laila).",
                    "p_11(Laila) -> (-p_1(Laila) -> p_10(Laila)).",
                    "p_7(Laila) -> -p_13(Laila).",
                    "p_11(Laila) -> (p_1(Laila) | p_10(Laila))."
                ],
                "formulas(goals)": [
                    "-p_7(Laila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_7(Laila) \u2192 \u00acp_13(Laila)",
                    "p_11(Laila) \u2192 (p_1(Laila) \u2228 p_10(Laila))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Laila)\np_2(Laila)\np_5(Laila)\np_3(Laila)\n\u00acp_4(Laila)\n\u00acp_1(Laila)\n\u00acp_0(Laila)\np_6(Laila) \u2228 p_13(Laila)\n\u00acp_2(Laila) \u2228 p_12(Laila)\np_2(Laila) \u2192 p_13(Laila)\n\u2200x (p_12(x) \u2192 p_11(x))\n\u2200x (p_12(x) \u2192 p_5(x))\n\u2200x ((p_9(x) \u2227 p_3(x)) \u2192 (p_4(x) \u2228 p_10(x)))\n\u2200x (p_11(x) \u2192 (\u00acp_1(x) \u2192 p_10(x)))\n(p_10(Laila) \u2227 p_8(Laila)) \u2192 p_0(Laila)\n\u2200x (\u00acp_9(x) \u2192 (\u00acp_7(x) \u2227 \u00acp_8(x)))\np_13(Laila)\np_12(Laila)\np_11(Laila)\np_10(Laila)\np_7(Laila) \u2228 \u00acp_13(Laila)\np_12(Laila) \u2192 p_5(Laila)\np_11(Laila) \u2192 (\u00acp_1(Laila) \u2192 p_10(Laila))\np_7(Laila) \u2192 \u00acp_13(Laila)\np_11(Laila) \u2192 (p_1(Laila) \u2228 p_10(Laila))\np_13(Laila) \u2228 \u00acp_13(Laila)\np_5(Laila)",
            "Initial Goal": "\u00acp_7(Laila)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Laila).",
                    "p_2(Laila).",
                    "p_5(Laila).",
                    "p_3(Laila).",
                    "-p_4(Laila).",
                    "-p_1(Laila).",
                    "-p_0(Laila).",
                    "p_6(Laila) | p_13(Laila).",
                    "-p_2(Laila) | p_12(Laila).",
                    "p_2(Laila) -> p_13(Laila).",
                    "all x (p_12(x) -> p_11(x)).",
                    "all x (p_12(x) -> p_5(x)).",
                    "all x ((p_9(x) & p_3(x)) -> (p_4(x) | p_10(x))).",
                    "all x (p_11(x) -> (-p_1(x) -> p_10(x))).",
                    "(p_10(Laila) & p_8(Laila)) -> p_0(Laila).",
                    "all x (-p_9(x) -> (-p_7(x) & -p_8(x))).",
                    "p_13(Laila).",
                    "p_12(Laila).",
                    "p_11(Laila).",
                    "p_10(Laila).",
                    "p_7(Laila) | -p_13(Laila).",
                    "p_12(Laila) -> p_5(Laila).",
                    "p_11(Laila) -> (-p_1(Laila) -> p_10(Laila)).",
                    "p_7(Laila) -> -p_13(Laila).",
                    "p_11(Laila) -> (p_1(Laila) | p_10(Laila)).",
                    "p_13(Laila) | -p_13(Laila).",
                    "p_5(Laila)."
                ],
                "formulas(goals)": [
                    "-p_7(Laila)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Laila) \u2192 p_12(Laila)",
                    "p_13(Laila) \u2192 \u00acp_7(Laila)"
                ],
                "added_facts": [
                    "p_13(Laila) \u2228 \u00acp_13(Laila)"
                ],
                "added_rules": [
                    "\u00acp_2(Laila) \u2228 p_12(Laila)",
                    "p_7(Laila) \u2228 \u00acp_13(Laila)"
                ]
            }
        }
    ]
}