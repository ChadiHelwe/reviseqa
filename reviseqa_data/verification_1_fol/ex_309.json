{
    "background_story": "Ander was a renowned astronaut known for his daring missions to the Moon. His most notable achievement was commanding the lunar module during a historic flyby at perigee, the closest point to the Moon's surface. As the module soared just 15 kilometers above the craters, Ander and his crew collected invaluable data on the Moon's gravitational field and geology. The perigee passage was a nail-biting experience, requiring precision navigation to avoid collision with the lunar surface. Ander's exceptional skills and calm demeanor under pressure ensured the success of the mission. Upon return to Earth, he was hailed as a hero and a pioneer in space exploration, his name becoming synonymous with bravery and expertise in the field of astronautics.",
    "predicates": [
        {
            "id": 0,
            "name": "achieve_objectives"
        },
        {
            "id": 1,
            "name": "pilot_spaceship"
        },
        {
            "id": 2,
            "name": "explore_space"
        },
        {
            "id": 3,
            "name": "make_quick_decisions"
        },
        {
            "id": 4,
            "name": "undergo_rigorous_training"
        },
        {
            "id": 5,
            "name": "perform_critical_missions"
        },
        {
            "id": 6,
            "name": "operate_equipment"
        },
        {
            "id": 7,
            "name": "ensure_success"
        },
        {
            "id": 8,
            "name": "analyze_data"
        },
        {
            "id": 9,
            "name": "stay_calm"
        },
        {
            "id": 10,
            "name": "lead_crews"
        },
        {
            "id": 11,
            "name": "navigate_orbits"
        },
        {
            "id": 12,
            "name": "reads_manuals"
        },
        {
            "id": 13,
            "name": "collect_samples"
        },
        {
            "id": 14,
            "name": "study_charts"
        },
        {
            "id": 15,
            "name": "navigates_safely"
        },
        {
            "id": 16,
            "name": "face_challenges"
        },
        {
            "id": 17,
            "name": "think_clearly"
        }
    ],
    "subject_name": "Ander",
    "subject_category": "astronaut",
    "keyword": "perigee",
    "all_facts": [
        {
            "id": 0,
            "subject": "Ander",
            "text": "Ander does not achieve objectives.",
            "fol": "\u00acp_0(Ander)",
            "str_fol": "\u00acachieve_objectives(Ander)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Ander",
            "text": "Ander pilots a spaceship.",
            "fol": "p_1(Ander)",
            "str_fol": "pilot_spaceship(Ander)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Ander",
            "text": "Ander does not explore space.",
            "fol": "\u00acp_2(Ander)",
            "str_fol": "\u00acexplore_space(Ander)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Ander",
            "text": "Ander makes quick decisions.",
            "fol": "p_3(Ander)",
            "str_fol": "make_quick_decisions(Ander)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Ander",
            "text": "Ander does not stay calm.",
            "fol": "\u00acp_9(Ander)",
            "str_fol": "\u00acstay_calm(Ander)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Ander",
            "text": "Ander cannot ensure success.",
            "fol": "\u00acp_7(Ander)",
            "str_fol": "\u00acensure_success(Ander)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Ander",
            "text": "Ander does not analyze data.",
            "fol": "\u00acp_8(Ander)",
            "str_fol": "\u00acanalyze_data(Ander)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Ander",
            "text": "Ander does not operate equipment.",
            "fol": "\u00acp_6(Ander)",
            "str_fol": "\u00acoperate_equipment(Ander)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Ander",
            "text": "Ander cannot perform critical missions.",
            "fol": "\u00acp_5(Ander)",
            "str_fol": "\u00acperform_critical_missions(Ander)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Ander",
            "text": "Ander undergoes rigorous training.",
            "fol": "p_4(Ander)",
            "str_fol": "undergo_rigorous_training(Ander)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Ander",
            "text": "Ander makes quick decisions.",
            "fol": "p_3(Ander)",
            "str_fol": "make_quick_decisions(Ander)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Ander",
            "text": "Ander pilots a spaceship.",
            "fol": "p_1(Ander)",
            "str_fol": "pilot_spaceship(Ander)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Ander",
            "text": "Ander does not explore space.",
            "fol": "\u00acp_2(Ander)",
            "str_fol": "\u00acexplore_space(Ander)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Ander",
            "text": "Ander does not achieve objectives.",
            "fol": "\u00acp_0(Ander)",
            "str_fol": "\u00acachieve_objectives(Ander)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Ander either stays calm or makes quick decisions, but not both at the same time, in order to navigate the challenges of space exploration.",
            "fol": "p_9(Ander) \u2295 p_3(Ander)",
            "str_fol": "stay_calm(Ander) \u2295 make_quick_decisions(Ander)"
        },
        {
            "id": 4,
            "text": "If Ander ensures the success of his mission, then he stays calm.",
            "fol": "p_7(Ander) \u2192 p_9(Ander)",
            "str_fol": "ensure_success(Ander) \u2192 stay_calm(Ander)"
        },
        {
            "id": 3,
            "text": "If an astronaut pilots a spaceship and analyzes data, then they can explore space.",
            "fol": "\u2200x ((p_1(x) \u2227 p_8(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((pilot_spaceship(x) \u2227 analyze_data(x)) \u2192 explore_space(x))"
        },
        {
            "id": 2,
            "text": "If Ander either operates equipment or analyzes data (but not both), then he can achieve objectives.",
            "fol": "(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)",
            "str_fol": "(operate_equipment(Ander) \u2295 analyze_data(Ander)) \u2192 achieve_objectives(Ander)"
        },
        {
            "id": 1,
            "text": "If Ander either operates equipment or performs critical missions (but not both), then he can ensure success.",
            "fol": "(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)",
            "str_fol": "(operate_equipment(Ander) \u2295 perform_critical_missions(Ander)) \u2192 ensure_success(Ander)"
        },
        {
            "id": 0,
            "text": "For all astronauts, if they undergo rigorous training, then they can perform critical missions.",
            "fol": "\u2200x (p_4(x) \u2192 p_5(x))",
            "str_fol": "\u2200x (undergo_rigorous_training(x) \u2192 perform_critical_missions(x))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Ander",
            "text": "Ander makes quick decisions.",
            "fol": "p_3(Ander)",
            "str_fol": "make_quick_decisions(Ander)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Ander",
            "text": "Ander pilots a spaceship.",
            "fol": "p_1(Ander)",
            "str_fol": "pilot_spaceship(Ander)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Ander",
            "text": "Ander does not explore space.",
            "fol": "\u00acp_2(Ander)",
            "str_fol": "\u00acexplore_space(Ander)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Ander",
            "text": "Ander does not achieve objectives.",
            "fol": "\u00acp_0(Ander)",
            "str_fol": "\u00acachieve_objectives(Ander)",
            "negation": true
        },
        {
            "id": 5,
            "text": "Ander either stays calm or makes quick decisions, but not both at the same time, in order to navigate the challenges of space exploration.",
            "fol": "p_9(Ander) \u2295 p_3(Ander)",
            "str_fol": "stay_calm(Ander) \u2295 make_quick_decisions(Ander)"
        },
        {
            "id": 4,
            "text": "If Ander ensures the success of his mission, then he stays calm.",
            "fol": "p_7(Ander) \u2192 p_9(Ander)",
            "str_fol": "ensure_success(Ander) \u2192 stay_calm(Ander)"
        },
        {
            "id": 3,
            "text": "If an astronaut pilots a spaceship and analyzes data, then they can explore space.",
            "fol": "\u2200x ((p_1(x) \u2227 p_8(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((pilot_spaceship(x) \u2227 analyze_data(x)) \u2192 explore_space(x))"
        },
        {
            "id": 2,
            "text": "If Ander either operates equipment or analyzes data (but not both), then he can achieve objectives.",
            "fol": "(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)",
            "str_fol": "(operate_equipment(Ander) \u2295 analyze_data(Ander)) \u2192 achieve_objectives(Ander)"
        },
        {
            "id": 1,
            "text": "If Ander either operates equipment or performs critical missions (but not both), then he can ensure success.",
            "fol": "(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)",
            "str_fol": "(operate_equipment(Ander) \u2295 perform_critical_missions(Ander)) \u2192 ensure_success(Ander)"
        },
        {
            "id": 0,
            "text": "For all astronauts, if they undergo rigorous training, then they can perform critical missions.",
            "fol": "\u2200x (p_4(x) \u2192 p_5(x))",
            "str_fol": "\u2200x (undergo_rigorous_training(x) \u2192 perform_critical_missions(x))"
        }
    ],
    "context_fol": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_9(Ander) \u2295 p_3(Ander)\np_7(Ander) \u2192 p_9(Ander)\n\u2200x ((p_1(x) \u2227 p_8(x)) \u2192 p_2(x))\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))",
    "conclusion": {
        "id": 9,
        "subject": "Ander",
        "text": "Ander undergoes rigorous training.",
        "fol": "p_4(Ander)",
        "str_fol": "undergo_rigorous_training(Ander)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_4(Ander)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Ander",
                    "text": "Ander makes quick decisions.",
                    "fol": "p_3(Ander)",
                    "str_fol": "make_quick_decisions(Ander)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Ander either stays calm or makes quick decisions, but not both at the same time, in order to navigate the challenges of space exploration.",
                    "fol": "p_9(Ander) \u2295 p_3(Ander)",
                    "str_fol": "stay_calm(Ander) \u2295 make_quick_decisions(Ander)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Ander",
                "text": "Ander does not stay calm.",
                "fol": "\u00acp_9(Ander)",
                "str_fol": "\u00acstay_calm(Ander)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Ander",
                    "text": "Ander does not stay calm.",
                    "fol": "\u00acp_9(Ander)",
                    "str_fol": "\u00acstay_calm(Ander)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Ander ensures the success of his mission, then he stays calm.",
                    "fol": "p_7(Ander) \u2192 p_9(Ander)",
                    "str_fol": "ensure_success(Ander) \u2192 stay_calm(Ander)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Ander",
                "text": "Ander cannot ensure success.",
                "fol": "\u00acp_7(Ander)",
                "str_fol": "\u00acensure_success(Ander)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Ander",
                    "text": "Ander pilots a spaceship.",
                    "fol": "p_1(Ander)",
                    "str_fol": "pilot_spaceship(Ander)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Ander",
                    "text": "Ander does not explore space.",
                    "fol": "\u00acp_2(Ander)",
                    "str_fol": "\u00acexplore_space(Ander)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If an astronaut pilots a spaceship and analyzes data, then they can explore space.",
                    "fol": "\u2200x ((p_1(x) \u2227 p_8(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((pilot_spaceship(x) \u2227 analyze_data(x)) \u2192 explore_space(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Ander",
                "text": "Ander does not analyze data.",
                "fol": "\u00acp_8(Ander)",
                "str_fol": "\u00acanalyze_data(Ander)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Ander",
                    "text": "Ander does not analyze data.",
                    "fol": "\u00acp_8(Ander)",
                    "str_fol": "\u00acanalyze_data(Ander)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Ander",
                    "text": "Ander does not achieve objectives.",
                    "fol": "\u00acp_0(Ander)",
                    "str_fol": "\u00acachieve_objectives(Ander)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Ander either operates equipment or analyzes data (but not both), then he can achieve objectives.",
                    "fol": "(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)",
                    "str_fol": "(operate_equipment(Ander) \u2295 analyze_data(Ander)) \u2192 achieve_objectives(Ander)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Ander",
                "text": "Ander does not operate equipment.",
                "fol": "\u00acp_6(Ander)",
                "str_fol": "\u00acoperate_equipment(Ander)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Ander",
                    "text": "Ander does not operate equipment.",
                    "fol": "\u00acp_6(Ander)",
                    "str_fol": "\u00acoperate_equipment(Ander)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Ander",
                    "text": "Ander cannot ensure success.",
                    "fol": "\u00acp_7(Ander)",
                    "str_fol": "\u00acensure_success(Ander)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Ander either operates equipment or performs critical missions (but not both), then he can ensure success.",
                    "fol": "(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)",
                    "str_fol": "(operate_equipment(Ander) \u2295 perform_critical_missions(Ander)) \u2192 ensure_success(Ander)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Ander",
                "text": "Ander cannot perform critical missions.",
                "fol": "\u00acp_5(Ander)",
                "str_fol": "\u00acperform_critical_missions(Ander)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Ander",
                    "text": "Ander cannot perform critical missions.",
                    "fol": "\u00acp_5(Ander)",
                    "str_fol": "\u00acperform_critical_missions(Ander)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all astronauts, if they undergo rigorous training, then they can perform critical missions.",
                    "fol": "\u2200x (p_4(x) \u2192 p_5(x))",
                    "str_fol": "\u2200x (undergo_rigorous_training(x) \u2192 perform_critical_missions(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Ander",
                "text": "Ander undergoes rigorous training.",
                "fol": "p_4(Ander)",
                "str_fol": "undergo_rigorous_training(Ander)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_9(Ander) <-> p_3(Ander)).  [assumption].\n2 p_7(Ander) -> p_9(Ander).  [assumption].\n3 (all x (p_1(x) & p_8(x) -> p_2(x))).  [assumption].\n4 -(p_6(Ander) <-> p_8(Ander)) -> p_0(Ander).  [assumption].\n5 -(p_6(Ander) <-> p_5(Ander)) -> p_7(Ander).  [assumption].\n6 (all x (p_4(x) -> p_5(x))).  [assumption].\n7 -p_4(Ander).  [goal].\n8 -p_9(Ander) | -p_3(Ander).  [clausify(1)].\n9 p_3(Ander).  [assumption].\n11 -p_1(x) | -p_8(x) | p_2(x).  [clausify(3)].\n12 p_1(Ander).  [assumption].\n13 -p_8(Ander) | p_2(Ander).  [resolve(11,a,12,a)].\n14 -p_2(Ander).  [assumption].\n15 -p_6(Ander) | p_8(Ander) | p_0(Ander).  [clausify(4)].\n16 -p_0(Ander).  [assumption].\n19 -p_7(Ander) | p_9(Ander).  [clausify(2)].\n20 p_6(Ander) | -p_5(Ander) | p_7(Ander).  [clausify(5)].\n21 p_4(Ander).  [deny(7)].\n22 -p_4(x) | p_5(x).  [clausify(6)].\n24 -p_9(Ander).  [resolve(8,b,9,a)].\n25 p_6(Ander) | -p_5(Ander) | p_9(Ander).  [resolve(20,c,19,a)].\n26 -p_6(Ander) | p_8(Ander).  [resolve(15,c,16,a)].\n27 -p_8(Ander).  [resolve(13,b,14,a)].\n28 p_6(Ander) | -p_5(Ander).  [resolve(25,c,24,a)].\n29 p_5(Ander).  [resolve(21,a,22,a)].\n30 p_6(Ander).  [resolve(28,b,29,a)].\n31 -p_6(Ander).  [resolve(26,b,27,a)].\n32 $F.  [resolve(30,a,31,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_9(Ander) \u2295 p_3(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\n\u00acp_9(Ander) \u2192 p_4(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander)",
                    "p_1(Ander)",
                    "-p_2(Ander)",
                    "-p_0(Ander)",
                    "-(p_9(Ander) <-> p_3(Ander))",
                    "p_7(Ander) -> p_9(Ander)",
                    "(-(p_6(Ander) <-> p_8(Ander))) -> p_0(Ander)",
                    "(-(p_6(Ander) <-> p_5(Ander))) -> p_7(Ander)",
                    "all x (p_4(x) -> p_5(x))",
                    "(-p_9(Ander)) -> p_4(Ander)"
                ],
                "formulas(goals)": [
                    "p_4(Ander)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_1(x) \u2227 p_8(x)) \u2192 p_2(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_9(Ander) \u2192 p_4(Ander)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_9(Ander) \u2295 p_3(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\n\u00acp_9(Ander) \u2192 p_4(Ander)\n\u00acp_4(Ander) \u2192 p_9(Ander)\n\u00acp_9(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander).",
                    "p_1(Ander).",
                    "-p_2(Ander).",
                    "-p_0(Ander).",
                    "-(p_9(Ander) <-> p_3(Ander)).",
                    "p_7(Ander) -> p_9(Ander).",
                    "(-(p_6(Ander) <-> p_8(Ander))) -> p_0(Ander).",
                    "(-(p_6(Ander) <-> p_5(Ander))) -> p_7(Ander).",
                    "all x (p_4(x) -> p_5(x)).",
                    "-p_9(Ander) -> p_4(Ander).",
                    "-p_4(Ander) -> p_9(Ander).",
                    "-p_9(Ander)."
                ],
                "formulas(goals)": [
                    "p_4(Ander)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_9(Ander)"
                ],
                "added_rules": [
                    "\u00acp_4(Ander) \u2192 p_9(Ander)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\n\u00acp_4(Ander) \u2192 p_9(Ander)\np_9(Ander) \u2192 \u00acp_4(Ander)\np_9(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander)",
                    "p_1(Ander)",
                    "-p_2(Ander)",
                    "-p_0(Ander)",
                    "p_7(Ander) -> p_9(Ander)",
                    "(-(p_6(Ander) <-> p_8(Ander))) -> p_0(Ander)",
                    "(-(p_6(Ander) <-> p_5(Ander))) -> p_7(Ander)",
                    "all x (p_4(x) -> p_5(x))",
                    "-p_4(Ander) -> p_9(Ander)",
                    "p_9(Ander) -> -p_4(Ander)",
                    "p_9(Ander)"
                ],
                "formulas(goals)": [
                    "-p_4(Ander)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_9(Ander)",
                    "p_9(Ander) \u2295 p_3(Ander)"
                ],
                "removed_rules": [
                    "\u00acp_9(Ander) \u2192 p_4(Ander)"
                ],
                "added_facts": [
                    "p_9(Ander)"
                ],
                "added_rules": [
                    "p_9(Ander) \u2192 \u00acp_4(Ander)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\n\u00acp_4(Ander) \u2192 p_9(Ander)\np_9(Ander) \u2192 p_4(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander)",
                    "p_1(Ander)",
                    "-p_2(Ander)",
                    "-p_0(Ander)",
                    "p_7(Ander) -> p_9(Ander)",
                    "(-(p_6(Ander) <-> p_8(Ander))) -> p_0(Ander)",
                    "(-(p_6(Ander) <-> p_5(Ander))) -> p_7(Ander)",
                    "all x (p_4(x) -> p_5(x))",
                    "-p_4(Ander) -> p_9(Ander)",
                    "p_9(Ander) -> p_4(Ander)"
                ],
                "formulas(goals)": [
                    "p_4(Ander)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_9(Ander)",
                    "\u00acp_4(Ander)"
                ],
                "removed_rules": [
                    "p_9(Ander) \u2192 \u00acp_4(Ander)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Ander) \u2192 p_4(Ander)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\np_4(Ander) \u2228 p_9(Ander)\np_9(Ander) \u2192 p_4(Ander)\np_5(Ander)\n\u00acp_9(Ander) \u2192 p_4(Ander)\n\u00acp_9(Ander) \u2192 \u00acp_7(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander).",
                    "p_1(Ander).",
                    "-(p_2(Ander)).",
                    "-(p_0(Ander)).",
                    "p_7(Ander) -> p_9(Ander).",
                    "(-(p_6(Ander) <-> p_8(Ander))) -> p_0(Ander).",
                    "(-(p_6(Ander) <-> p_5(Ander))) -> p_7(Ander).",
                    "all x (p_4(x) -> p_5(x)).",
                    "p_4(Ander) | p_9(Ander).",
                    "p_9(Ander) -> p_4(Ander).",
                    "p_5(Ander).",
                    "-(p_9(Ander)) -> p_4(Ander).",
                    "-(p_9(Ander)) -> -(p_7(Ander))."
                ],
                "formulas(goals)": [
                    "p_4(Ander)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_5(Ander)"
                ],
                "added_rules": [
                    "p_4(Ander) \u2228 p_9(Ander)",
                    "\u00acp_9(Ander) \u2192 p_4(Ander)",
                    "\u00acp_9(Ander) \u2192 \u00acp_7(Ander)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\np_4(Ander) \u2228 p_9(Ander)\np_5(Ander)\n\u00acp_9(Ander) \u2192 p_4(Ander)\n\u00acp_9(Ander) \u2192 \u00acp_7(Ander)\np_5(Ander) \u2192 \u00acp_4(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander)",
                    "p_1(Ander)",
                    "-p_2(Ander)",
                    "-p_0(Ander)",
                    "p_7(Ander) -> p_9(Ander)",
                    "(-(p_6(Ander) <-> p_8(Ander))) -> p_0(Ander)",
                    "(-(p_6(Ander) <-> p_5(Ander))) -> p_7(Ander)",
                    "all x (p_4(x) -> p_5(x))",
                    "p_4(Ander) | p_9(Ander)",
                    "p_5(Ander)",
                    "-p_9(Ander) -> p_4(Ander)",
                    "-p_9(Ander) -> -p_7(Ander)",
                    "p_5(Ander) -> -p_4(Ander)"
                ],
                "formulas(goals)": [
                    "-p_4(Ander)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Ander) \u2192 p_4(Ander)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Ander) \u2192 \u00acp_4(Ander)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Ander)\np_1(Ander)\n\u00acp_2(Ander)\n\u00acp_0(Ander)\np_7(Ander) \u2192 p_9(Ander)\n(p_6(Ander) \u2295 p_8(Ander)) \u2192 p_0(Ander)\n(p_6(Ander) \u2295 p_5(Ander)) \u2192 p_7(Ander)\n\u2200x (p_4(x) \u2192 p_5(x))\np_4(Ander) \u2228 p_9(Ander)\np_5(Ander)\n\u00acp_9(Ander) \u2192 p_4(Ander)\n\u00acp_9(Ander) \u2192 \u00acp_7(Ander)\np_5(Ander) \u2192 p_4(Ander)",
            "Initial Goal": "p_4(Ander)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Ander)",
                    "p_1(Ander)",
                    "-p_2(Ander)",
                    "-p_0(Ander)",
                    "p_7(Ander) -> p_9(Ander)",
                    "(- (p_6(Ander) <-> p_8(Ander))) -> p_0(Ander)",
                    "(- (p_6(Ander) <-> p_5(Ander))) -> p_7(Ander)",
                    "all x (p_4(x) -> p_5(x))",
                    "p_4(Ander) | p_9(Ander)",
                    "p_5(Ander)",
                    "-p_9(Ander) -> p_4(Ander)",
                    "-p_9(Ander) -> -p_7(Ander)",
                    "p_5(Ander) -> p_4(Ander)"
                ],
                "formulas(goals)": [
                    "p_4(Ander)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Ander) \u2192 \u00acp_4(Ander)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Ander) \u2192 p_4(Ander)"
                ]
            }
        }
    ]
}