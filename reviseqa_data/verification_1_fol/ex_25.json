{
    "background_story": "Adelynn appeared to be a typical high school student, but secretly she was a talented artist. By day, she attended classes and participated in extracurricular activities, but by night, she transformed into a prolific painter. Her room was a studio, filled with canvases, paints, and half-finished masterpieces. Adelynn's passion for art was her escape, a way to express emotions she couldn't verbalize. She kept her talent hidden from her peers, fearing criticism or ridicule. Only her family knew of her secret life, and they encouraged her to pursue her dreams. As Adelynn's skills improved, she began to secretly showcase her work in local galleries, using a pseudonym to maintain her anonymity. Her art gained recognition, and soon, her secret would be out, revealing a talented artist who had been hiding in plain sight.",
    "predicates": [
        {
            "id": 0,
            "name": "plays_music"
        },
        {
            "id": 1,
            "name": "has_confidence"
        },
        {
            "id": 2,
            "name": "sets_goals"
        },
        {
            "id": 3,
            "name": "gets_recognition"
        },
        {
            "id": 4,
            "name": "stay_motivated"
        },
        {
            "id": 5,
            "name": "keeps_secret"
        },
        {
            "id": 6,
            "name": "grows_anonymously"
        },
        {
            "id": 7,
            "name": "creative"
        },
        {
            "id": 8,
            "name": "talented"
        },
        {
            "id": 9,
            "name": "express_emotions"
        },
        {
            "id": 10,
            "name": "pursue_passions"
        },
        {
            "id": 11,
            "name": "find_happiness"
        },
        {
            "id": 12,
            "name": "makes_art"
        },
        {
            "id": 13,
            "name": "feels_fulfilled"
        },
        {
            "id": 14,
            "name": "feel_content"
        },
        {
            "id": 15,
            "name": "be_successful"
        },
        {
            "id": 16,
            "name": "faces_challenges"
        },
        {
            "id": 17,
            "name": "draws_well"
        },
        {
            "id": 18,
            "name": "has_vision"
        },
        {
            "id": 19,
            "name": "takes_risks"
        },
        {
            "id": 20,
            "name": "paints_masterpieces"
        },
        {
            "id": 21,
            "name": "tries_hard"
        },
        {
            "id": 22,
            "name": "loves_what_she_does"
        },
        {
            "id": 23,
            "name": "has_imagination"
        },
        {
            "id": 24,
            "name": "writes_stories"
        },
        {
            "id": 25,
            "name": "shows_work"
        },
        {
            "id": 26,
            "name": "works_hard"
        },
        {
            "id": 27,
            "name": "has_ambition"
        },
        {
            "id": 28,
            "name": "meets_obstacles"
        }
    ],
    "subject_name": "Adelynn",
    "subject_category": "human",
    "keyword": "secretly",
    "all_facts": [
        {
            "id": 0,
            "subject": "Adelynn",
            "text": "Adelynn does not play music.",
            "fol": "\u00acp_0(Adelynn)",
            "str_fol": "\u00acplays_music(Adelynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Adelynn",
            "text": "Adelynn does not have confidence.",
            "fol": "\u00acp_1(Adelynn)",
            "str_fol": "\u00achas_confidence(Adelynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adelynn",
            "text": "Adelynn does not set goals.",
            "fol": "\u00acp_2(Adelynn)",
            "str_fol": "\u00acsets_goals(Adelynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adelynn",
            "text": "Adelynn does not get recognition.",
            "fol": "\u00acp_3(Adelynn)",
            "str_fol": "\u00acgets_recognition(Adelynn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Adelynn",
            "text": "Adelynn does not stay motivated.",
            "fol": "\u00acp_4(Adelynn)",
            "str_fol": "\u00acstay_motivated(Adelynn)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Adelynn",
            "text": "Adelynn keeps her secret.",
            "fol": "p_5(Adelynn)",
            "str_fol": "keeps_secret(Adelynn)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Adelynn",
            "text": "Adelynn does not grow anonymously.",
            "fol": "\u00acp_6(Adelynn)",
            "str_fol": "\u00acgrows_anonymously(Adelynn)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Adelynn",
            "text": "Adelynn faces challenges.",
            "fol": "p_16(Adelynn)",
            "str_fol": "faces_challenges(Adelynn)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Adelynn",
            "text": "Adelynn is not successful.",
            "fol": "\u00acp_15(Adelynn)",
            "str_fol": "\u00acbe_successful(Adelynn)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Adelynn",
            "text": "Adelynn feels fulfilled.",
            "fol": "p_13(Adelynn)",
            "str_fol": "feels_fulfilled(Adelynn)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Adelynn",
            "text": "Adelynn does not make art.",
            "fol": "\u00acp_12(Adelynn)",
            "str_fol": "\u00acmakes_art(Adelynn)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Adelynn",
            "text": "Adelynn does not find happiness.",
            "fol": "\u00acp_11(Adelynn)",
            "str_fol": "\u00acfind_happiness(Adelynn)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Adelynn",
            "text": "Adelynn does not pursue her passions.",
            "fol": "\u00acp_10(Adelynn)",
            "str_fol": "\u00acpursue_passions(Adelynn)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Adelynn",
            "text": "Adelynn is not creative.",
            "fol": "\u00acp_7(Adelynn)",
            "str_fol": "\u00accreative(Adelynn)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Adelynn",
            "text": "Adelynn is not talented.",
            "fol": "\u00acp_8(Adelynn)",
            "str_fol": "\u00actalented(Adelynn)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Adelynn",
            "text": "Adelynn keeps her secret.",
            "fol": "p_5(Adelynn)",
            "str_fol": "keeps_secret(Adelynn)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Adelynn",
            "text": "Adelynn does not grow anonymously.",
            "fol": "\u00acp_6(Adelynn)",
            "str_fol": "\u00acgrows_anonymously(Adelynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adelynn",
            "text": "Adelynn does not get recognition.",
            "fol": "\u00acp_3(Adelynn)",
            "str_fol": "\u00acgets_recognition(Adelynn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Adelynn",
            "text": "Adelynn does not stay motivated.",
            "fol": "\u00acp_4(Adelynn)",
            "str_fol": "\u00acstay_motivated(Adelynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adelynn",
            "text": "Adelynn does not set goals.",
            "fol": "\u00acp_2(Adelynn)",
            "str_fol": "\u00acsets_goals(Adelynn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Adelynn",
            "text": "Adelynn does not play music.",
            "fol": "\u00acp_0(Adelynn)",
            "str_fol": "\u00acplays_music(Adelynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Adelynn",
            "text": "Adelynn does not have confidence.",
            "fol": "\u00acp_1(Adelynn)",
            "str_fol": "\u00achas_confidence(Adelynn)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Adelynn keeps her secret, then she either faces challenges or grows anonymously.",
            "fol": "p_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))",
            "str_fol": "keeps_secret(Adelynn) \u2192 (faces_challenges(Adelynn) \u2228 grows_anonymously(Adelynn))"
        },
        {
            "id": 7,
            "text": "If Adelynn either gets recognition or is successful (but not both), then she stays motivated.",
            "fol": "(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)",
            "str_fol": "(gets_recognition(Adelynn) \u2295 be_successful(Adelynn)) \u2192 stay_motivated(Adelynn)"
        },
        {
            "id": 6,
            "text": "If Adelynn faces challenges, then she either sets goals or feels fulfilled, but not both.",
            "fol": "p_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))",
            "str_fol": "faces_challenges(Adelynn) \u2192 (sets_goals(Adelynn) \u2295 feels_fulfilled(Adelynn))"
        },
        {
            "id": 5,
            "text": "If Adelynn either plays music or makes art (but not both), then she has confidence.",
            "fol": "(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)",
            "str_fol": "(plays_music(Adelynn) \u2295 makes_art(Adelynn)) \u2192 has_confidence(Adelynn)"
        },
        {
            "id": 4,
            "text": "If Adelynn finds happiness or feels content, then she will be successful.",
            "fol": "(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)",
            "str_fol": "(find_happiness(Adelynn) \u2228 feel_content(Adelynn)) \u2192 be_successful(Adelynn)"
        },
        {
            "id": 3,
            "text": "If someone expresses emotions and makes art, then they feel fulfilled.",
            "fol": "\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((express_emotions(x) \u2227 makes_art(x)) \u2192 feels_fulfilled(x))"
        },
        {
            "id": 2,
            "text": "If Adelynn pursues her passions, then she will find happiness.",
            "fol": "p_10(Adelynn) \u2192 p_11(Adelynn)",
            "str_fol": "pursue_passions(Adelynn) \u2192 find_happiness(Adelynn)"
        },
        {
            "id": 1,
            "text": "If someone is creative, then they express emotions and pursue passions.",
            "fol": "\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (creative(x) \u2192 (express_emotions(x) \u2227 pursue_passions(x)))"
        },
        {
            "id": 0,
            "text": "Adelynn is either creative or talented (or both).",
            "fol": "p_7(Adelynn) \u2228 p_8(Adelynn)",
            "str_fol": "creative(Adelynn) \u2228 talented(Adelynn)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Adelynn",
            "text": "Adelynn keeps her secret.",
            "fol": "p_5(Adelynn)",
            "str_fol": "keeps_secret(Adelynn)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Adelynn",
            "text": "Adelynn does not grow anonymously.",
            "fol": "\u00acp_6(Adelynn)",
            "str_fol": "\u00acgrows_anonymously(Adelynn)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adelynn",
            "text": "Adelynn does not get recognition.",
            "fol": "\u00acp_3(Adelynn)",
            "str_fol": "\u00acgets_recognition(Adelynn)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Adelynn",
            "text": "Adelynn does not stay motivated.",
            "fol": "\u00acp_4(Adelynn)",
            "str_fol": "\u00acstay_motivated(Adelynn)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adelynn",
            "text": "Adelynn does not set goals.",
            "fol": "\u00acp_2(Adelynn)",
            "str_fol": "\u00acsets_goals(Adelynn)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Adelynn",
            "text": "Adelynn does not play music.",
            "fol": "\u00acp_0(Adelynn)",
            "str_fol": "\u00acplays_music(Adelynn)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Adelynn",
            "text": "Adelynn does not have confidence.",
            "fol": "\u00acp_1(Adelynn)",
            "str_fol": "\u00achas_confidence(Adelynn)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Adelynn keeps her secret, then she either faces challenges or grows anonymously.",
            "fol": "p_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))",
            "str_fol": "keeps_secret(Adelynn) \u2192 (faces_challenges(Adelynn) \u2228 grows_anonymously(Adelynn))"
        },
        {
            "id": 7,
            "text": "If Adelynn either gets recognition or is successful (but not both), then she stays motivated.",
            "fol": "(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)",
            "str_fol": "(gets_recognition(Adelynn) \u2295 be_successful(Adelynn)) \u2192 stay_motivated(Adelynn)"
        },
        {
            "id": 6,
            "text": "If Adelynn faces challenges, then she either sets goals or feels fulfilled, but not both.",
            "fol": "p_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))",
            "str_fol": "faces_challenges(Adelynn) \u2192 (sets_goals(Adelynn) \u2295 feels_fulfilled(Adelynn))"
        },
        {
            "id": 5,
            "text": "If Adelynn either plays music or makes art (but not both), then she has confidence.",
            "fol": "(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)",
            "str_fol": "(plays_music(Adelynn) \u2295 makes_art(Adelynn)) \u2192 has_confidence(Adelynn)"
        },
        {
            "id": 4,
            "text": "If Adelynn finds happiness or feels content, then she will be successful.",
            "fol": "(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)",
            "str_fol": "(find_happiness(Adelynn) \u2228 feel_content(Adelynn)) \u2192 be_successful(Adelynn)"
        },
        {
            "id": 3,
            "text": "If someone expresses emotions and makes art, then they feel fulfilled.",
            "fol": "\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((express_emotions(x) \u2227 makes_art(x)) \u2192 feels_fulfilled(x))"
        },
        {
            "id": 2,
            "text": "If Adelynn pursues her passions, then she will find happiness.",
            "fol": "p_10(Adelynn) \u2192 p_11(Adelynn)",
            "str_fol": "pursue_passions(Adelynn) \u2192 find_happiness(Adelynn)"
        },
        {
            "id": 1,
            "text": "If someone is creative, then they express emotions and pursue passions.",
            "fol": "\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (creative(x) \u2192 (express_emotions(x) \u2227 pursue_passions(x)))"
        },
        {
            "id": 0,
            "text": "Adelynn is either creative or talented (or both).",
            "fol": "p_7(Adelynn) \u2228 p_8(Adelynn)",
            "str_fol": "creative(Adelynn) \u2228 talented(Adelynn)"
        }
    ],
    "context_fol": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_3(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_7(Adelynn) \u2228 p_8(Adelynn)",
    "conclusion": {
        "id": 14,
        "subject": "Adelynn",
        "text": "Adelynn is not talented.",
        "fol": "\u00acp_8(Adelynn)",
        "str_fol": "\u00actalented(Adelynn)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_8(Adelynn)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Adelynn",
                    "text": "Adelynn keeps her secret.",
                    "fol": "p_5(Adelynn)",
                    "str_fol": "keeps_secret(Adelynn)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Adelynn",
                    "text": "Adelynn does not grow anonymously.",
                    "fol": "\u00acp_6(Adelynn)",
                    "str_fol": "\u00acgrows_anonymously(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Adelynn keeps her secret, then she either faces challenges or grows anonymously.",
                    "fol": "p_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))",
                    "str_fol": "keeps_secret(Adelynn) \u2192 (faces_challenges(Adelynn) \u2228 grows_anonymously(Adelynn))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Adelynn",
                "text": "Adelynn faces challenges.",
                "fol": "p_16(Adelynn)",
                "str_fol": "faces_challenges(Adelynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Adelynn",
                    "text": "Adelynn does not get recognition.",
                    "fol": "\u00acp_3(Adelynn)",
                    "str_fol": "\u00acgets_recognition(Adelynn)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Adelynn",
                    "text": "Adelynn does not stay motivated.",
                    "fol": "\u00acp_4(Adelynn)",
                    "str_fol": "\u00acstay_motivated(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Adelynn either gets recognition or is successful (but not both), then she stays motivated.",
                    "fol": "(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)",
                    "str_fol": "(gets_recognition(Adelynn) \u2295 be_successful(Adelynn)) \u2192 stay_motivated(Adelynn)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Adelynn",
                "text": "Adelynn is not successful.",
                "fol": "\u00acp_15(Adelynn)",
                "str_fol": "\u00acbe_successful(Adelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Adelynn",
                    "text": "Adelynn faces challenges.",
                    "fol": "p_16(Adelynn)",
                    "str_fol": "faces_challenges(Adelynn)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Adelynn",
                    "text": "Adelynn does not set goals.",
                    "fol": "\u00acp_2(Adelynn)",
                    "str_fol": "\u00acsets_goals(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Adelynn faces challenges, then she either sets goals or feels fulfilled, but not both.",
                    "fol": "p_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))",
                    "str_fol": "faces_challenges(Adelynn) \u2192 (sets_goals(Adelynn) \u2295 feels_fulfilled(Adelynn))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Adelynn",
                "text": "Adelynn feels fulfilled.",
                "fol": "p_13(Adelynn)",
                "str_fol": "feels_fulfilled(Adelynn)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Adelynn",
                    "text": "Adelynn does not play music.",
                    "fol": "\u00acp_0(Adelynn)",
                    "str_fol": "\u00acplays_music(Adelynn)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Adelynn",
                    "text": "Adelynn does not have confidence.",
                    "fol": "\u00acp_1(Adelynn)",
                    "str_fol": "\u00achas_confidence(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Adelynn either plays music or makes art (but not both), then she has confidence.",
                    "fol": "(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)",
                    "str_fol": "(plays_music(Adelynn) \u2295 makes_art(Adelynn)) \u2192 has_confidence(Adelynn)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Adelynn",
                "text": "Adelynn does not make art.",
                "fol": "\u00acp_12(Adelynn)",
                "str_fol": "\u00acmakes_art(Adelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Adelynn",
                    "text": "Adelynn is not successful.",
                    "fol": "\u00acp_15(Adelynn)",
                    "str_fol": "\u00acbe_successful(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Adelynn finds happiness or feels content, then she will be successful.",
                    "fol": "(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)",
                    "str_fol": "(find_happiness(Adelynn) \u2228 feel_content(Adelynn)) \u2192 be_successful(Adelynn)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Adelynn",
                "text": "Adelynn does not find happiness.",
                "fol": "\u00acp_11(Adelynn)",
                "str_fol": "\u00acfind_happiness(Adelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Adelynn",
                    "text": "Adelynn does not make art.",
                    "fol": "\u00acp_12(Adelynn)",
                    "str_fol": "\u00acmakes_art(Adelynn)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Adelynn",
                    "text": "Adelynn feels fulfilled.",
                    "fol": "p_13(Adelynn)",
                    "str_fol": "feels_fulfilled(Adelynn)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone expresses emotions and makes art, then they feel fulfilled.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((express_emotions(x) \u2227 makes_art(x)) \u2192 feels_fulfilled(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Adelynn",
                    "text": "Adelynn does not find happiness.",
                    "fol": "\u00acp_11(Adelynn)",
                    "str_fol": "\u00acfind_happiness(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Adelynn pursues her passions, then she will find happiness.",
                    "fol": "p_10(Adelynn) \u2192 p_11(Adelynn)",
                    "str_fol": "pursue_passions(Adelynn) \u2192 find_happiness(Adelynn)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Adelynn",
                "text": "Adelynn does not pursue her passions.",
                "fol": "\u00acp_10(Adelynn)",
                "str_fol": "\u00acpursue_passions(Adelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Adelynn",
                    "text": "Adelynn does not pursue her passions.",
                    "fol": "\u00acp_10(Adelynn)",
                    "str_fol": "\u00acpursue_passions(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone is creative, then they express emotions and pursue passions.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (creative(x) \u2192 (express_emotions(x) \u2227 pursue_passions(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Adelynn",
                "text": "Adelynn is not creative.",
                "fol": "\u00acp_7(Adelynn)",
                "str_fol": "\u00accreative(Adelynn)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Adelynn",
                    "text": "Adelynn is not creative.",
                    "fol": "\u00acp_7(Adelynn)",
                    "str_fol": "\u00accreative(Adelynn)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Adelynn is either creative or talented (or both).",
                    "fol": "p_7(Adelynn) \u2228 p_8(Adelynn)",
                    "str_fol": "creative(Adelynn) \u2228 talented(Adelynn)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Adelynn",
                "text": "Adelynn is not talented.",
                "fol": "\u00acp_8(Adelynn)",
                "str_fol": "\u00actalented(Adelynn)",
                "negation": true
            }
        }
    ],
    "proof_trace": "2 -(p_3(Adelynn) <-> p_15(Adelynn)) -> p_4(Adelynn).  [assumption].\n5 p_11(Adelynn) | p_14(Adelynn) -> p_15(Adelynn).  [assumption].\n7 p_10(Adelynn) -> p_11(Adelynn).  [assumption].\n8 (all x (p_7(x) -> p_9(x) & p_10(x))).  [assumption].\n9 --p_8(Adelynn).  [goal].\n14 p_3(Adelynn) | -p_15(Adelynn) | p_4(Adelynn).  [clausify(2)].\n15 -p_3(Adelynn).  [assumption].\n17 -p_15(Adelynn) | p_4(Adelynn).  [resolve(14,a,15,a)].\n18 -p_4(Adelynn).  [assumption].\n27 -p_10(Adelynn) | p_11(Adelynn).  [clausify(7)].\n28 -p_11(Adelynn) | p_15(Adelynn).  [clausify(5)].\n31 p_7(Adelynn) | p_8(Adelynn).  [assumption].\n32 -p_7(x) | p_10(x).  [clausify(8)].\n34 p_8(Adelynn) | p_10(Adelynn).  [resolve(31,a,32,a)].\n35 -p_8(Adelynn).  [deny(9)].\n39 -p_10(Adelynn) | p_15(Adelynn).  [resolve(27,b,28,a)].\n40 -p_15(Adelynn).  [resolve(17,b,18,a)].\n41 -p_10(Adelynn).  [resolve(39,b,40,a)].\n42 p_10(Adelynn).  [resolve(34,a,35,a)].\n43 $F.  [resolve(41,a,42,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_3(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn)",
                    "-p_6(Adelynn)",
                    "-p_3(Adelynn)",
                    "-p_4(Adelynn)",
                    "-p_2(Adelynn)",
                    "-p_0(Adelynn)",
                    "-p_1(Adelynn)",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn))",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn)",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn)))",
                    "(-(p_0(Adelynn) <-> p_12(Adelynn))) -> p_1(Adelynn)",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn)",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x))",
                    "p_10(Adelynn) -> p_11(Adelynn)",
                    "all x (p_7(x) -> (p_9(x) & p_10(x)))",
                    "p_8(Adelynn) -> p_3(Adelynn)"
                ],
                "formulas(goals)": [
                    "-p_8(Adelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Adelynn) \u2228 p_8(Adelynn)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Adelynn) \u2192 p_3(Adelynn)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_3(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)\np_5(Adelynn) \u2228 \u00acp_5(Adelynn)\n\u00acp_3(Adelynn) \u2192 \u00acp_8(Adelynn)\n\u00acp_8(Adelynn)\n(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)\n(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn).",
                    "-p_6(Adelynn).",
                    "-p_3(Adelynn).",
                    "-p_4(Adelynn).",
                    "-p_2(Adelynn).",
                    "-p_0(Adelynn).",
                    "-p_1(Adelynn).",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn)).",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn).",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn))).",
                    "(-(p_0(Adelynn) <-> p_12(Adelynn))) -> p_1(Adelynn).",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn).",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x)).",
                    "p_10(Adelynn) -> p_11(Adelynn).",
                    "all x (p_7(x) -> (p_9(x) & p_10(x))).",
                    "p_8(Adelynn) -> p_3(Adelynn).",
                    "p_5(Adelynn) | -p_5(Adelynn).",
                    "-p_3(Adelynn) -> -p_8(Adelynn).",
                    "-p_8(Adelynn).",
                    "(p_5(Adelynn) & -p_6(Adelynn)) -> p_16(Adelynn).",
                    "(p_9(Adelynn) & p_12(Adelynn)) -> p_13(Adelynn)."
                ],
                "formulas(goals)": [
                    "-p_8(Adelynn)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Adelynn)"
                ],
                "added_rules": [
                    "p_5(Adelynn) \u2228 \u00acp_5(Adelynn)",
                    "\u00acp_3(Adelynn) \u2192 \u00acp_8(Adelynn)",
                    "(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)",
                    "(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)\np_5(Adelynn) \u2228 \u00acp_5(Adelynn)\n(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)\n(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)\np_16(Adelynn) \u2192 p_8(Adelynn)\np_16(Adelynn) \u2192 p_3(Adelynn)",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn)",
                    "-p_6(Adelynn)",
                    "-p_4(Adelynn)",
                    "-p_2(Adelynn)",
                    "-p_0(Adelynn)",
                    "-p_1(Adelynn)",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn))",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn)",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn)))",
                    "(-(p_0(Adelynn) <-> p_12(Adelynn))) -> p_1(Adelynn)",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn)",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x))",
                    "p_10(Adelynn) -> p_11(Adelynn)",
                    "all x (p_7(x) -> (p_9(x) & p_10(x)))",
                    "p_8(Adelynn) -> p_3(Adelynn)",
                    "p_5(Adelynn) | -p_5(Adelynn)",
                    "(p_5(Adelynn) & -p_6(Adelynn)) -> p_16(Adelynn)",
                    "(p_9(Adelynn) & p_12(Adelynn)) -> p_13(Adelynn)",
                    "p_16(Adelynn) -> p_8(Adelynn)",
                    "p_16(Adelynn) -> p_3(Adelynn)"
                ],
                "formulas(goals)": [
                    "--p_8(Adelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_3(Adelynn)",
                    "\u00acp_8(Adelynn)"
                ],
                "removed_rules": [
                    "\u00acp_3(Adelynn) \u2192 \u00acp_8(Adelynn)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_16(Adelynn) \u2192 p_8(Adelynn)",
                    "p_16(Adelynn) \u2192 p_3(Adelynn)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)\np_5(Adelynn) \u2228 \u00acp_5(Adelynn)\n(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)\n(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)\np_16(Adelynn) \u2192 p_8(Adelynn)\np_16(Adelynn) \u2192 p_3(Adelynn)\n(\u00acp_16(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 \u00acp_5(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2228 p_3(Adelynn))\np_16(Adelynn) \u2192 (p_3(Adelynn) \u2228 p_8(Adelynn))",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn)",
                    "-p_6(Adelynn)",
                    "-p_4(Adelynn)",
                    "-p_2(Adelynn)",
                    "-p_0(Adelynn)",
                    "-p_1(Adelynn)",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn))",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn)",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn)))",
                    "(p_0(Adelynn) <-> p_12(Adelynn)) -> p_1(Adelynn)",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn)",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x))",
                    "p_10(Adelynn) -> p_11(Adelynn)",
                    "all x (p_7(x) -> (p_9(x) & p_10(x)))",
                    "p_8(Adelynn) -> p_3(Adelynn)",
                    "p_5(Adelynn) | -p_5(Adelynn)",
                    "(p_5(Adelynn) & -p_6(Adelynn)) -> p_16(Adelynn)",
                    "(p_9(Adelynn) & p_12(Adelynn)) -> p_13(Adelynn)",
                    "p_16(Adelynn) -> p_8(Adelynn)",
                    "p_16(Adelynn) -> p_3(Adelynn)",
                    "(-p_16(Adelynn) & -p_6(Adelynn)) -> -p_5(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) | p_3(Adelynn))",
                    "p_16(Adelynn) -> (p_3(Adelynn) | p_8(Adelynn))"
                ],
                "formulas(goals)": [
                    "--p_8(Adelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(\u00acp_16(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 \u00acp_5(Adelynn)",
                    "p_16(Adelynn) \u2192 (p_8(Adelynn) \u2228 p_3(Adelynn))",
                    "p_16(Adelynn) \u2192 (p_3(Adelynn) \u2228 p_8(Adelynn))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)\np_5(Adelynn) \u2228 \u00acp_5(Adelynn)\n(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)\n(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)\np_16(Adelynn) \u2192 p_8(Adelynn)\np_16(Adelynn) \u2192 p_3(Adelynn)\n(\u00acp_16(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 \u00acp_5(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2228 p_3(Adelynn))\np_16(Adelynn) \u2192 (p_3(Adelynn) \u2228 p_8(Adelynn))\np_8(Adelynn) \u2228 \u00acp_8(Adelynn)\n\u00acp_8(Adelynn) \u2192 \u00acp_16(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2227 p_3(Adelynn))\n\u00acp_5(Adelynn) \u2228 p_6(Adelynn) \u2228 p_16(Adelynn)\np_16(Adelynn) \u2192 (\u00acp_2(Adelynn) \u2192 p_13(Adelynn))",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn)",
                    "-p_6(Adelynn)",
                    "-p_4(Adelynn)",
                    "-p_2(Adelynn)",
                    "-p_0(Adelynn)",
                    "-p_1(Adelynn)",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn))",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn)",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn)))",
                    "(-(p_0(Adelynn) <-> p_12(Adelynn))) -> p_1(Adelynn)",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn)",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x))",
                    "p_10(Adelynn) -> p_11(Adelynn)",
                    "all x (p_7(x) -> (p_9(x) & p_10(x)))",
                    "p_8(Adelynn) -> p_3(Adelynn)",
                    "p_5(Adelynn) | -p_5(Adelynn)",
                    "(p_5(Adelynn) & -p_6(Adelynn)) -> p_16(Adelynn)",
                    "(p_9(Adelynn) & p_12(Adelynn)) -> p_13(Adelynn)",
                    "p_16(Adelynn) -> p_8(Adelynn)",
                    "p_16(Adelynn) -> p_3(Adelynn)",
                    "(-p_16(Adelynn) & -p_6(Adelynn)) -> -p_5(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) | p_3(Adelynn))",
                    "p_16(Adelynn) -> (p_3(Adelynn) | p_8(Adelynn))",
                    "p_8(Adelynn) | -p_8(Adelynn)",
                    "-p_8(Adelynn) -> -p_16(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) & p_3(Adelynn))",
                    "-p_5(Adelynn) | p_6(Adelynn) | p_16(Adelynn)",
                    "p_16(Adelynn) -> (-p_2(Adelynn) -> p_13(Adelynn))"
                ],
                "formulas(goals)": [
                    "p_8(Adelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Adelynn) \u2228 \u00acp_8(Adelynn)",
                    "\u00acp_8(Adelynn) \u2192 \u00acp_16(Adelynn)",
                    "p_16(Adelynn) \u2192 (p_8(Adelynn) \u2227 p_3(Adelynn))",
                    "\u00acp_5(Adelynn) \u2228 p_6(Adelynn) \u2228 p_16(Adelynn)",
                    "p_16(Adelynn) \u2192 (\u00acp_2(Adelynn) \u2192 p_13(Adelynn))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)\np_5(Adelynn) \u2228 \u00acp_5(Adelynn)\n(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)\n(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)\np_16(Adelynn) \u2192 p_8(Adelynn)\np_16(Adelynn) \u2192 p_3(Adelynn)\n(\u00acp_16(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 \u00acp_5(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2228 p_3(Adelynn))\np_16(Adelynn) \u2192 (p_3(Adelynn) \u2228 p_8(Adelynn))\np_8(Adelynn) \u2228 \u00acp_8(Adelynn)\n\u00acp_8(Adelynn) \u2192 \u00acp_16(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2227 p_3(Adelynn))\n\u00acp_5(Adelynn) \u2228 p_6(Adelynn) \u2228 p_16(Adelynn)\np_16(Adelynn) \u2192 (\u00acp_2(Adelynn) \u2192 p_13(Adelynn))\np_5(Adelynn) \u2192 \u00acp_8(Adelynn)",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn)",
                    "-p_6(Adelynn)",
                    "-p_4(Adelynn)",
                    "-p_2(Adelynn)",
                    "-p_0(Adelynn)",
                    "-p_1(Adelynn)",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn))",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn)",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn)))",
                    "(-(p_0(Adelynn) <-> p_12(Adelynn))) -> p_1(Adelynn)",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn)",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x))",
                    "p_10(Adelynn) -> p_11(Adelynn)",
                    "all x (p_7(x) -> (p_9(x) & p_10(x)))",
                    "p_8(Adelynn) -> p_3(Adelynn)",
                    "p_5(Adelynn) | -p_5(Adelynn)",
                    "(p_5(Adelynn) & -p_6(Adelynn)) -> p_16(Adelynn)",
                    "(p_9(Adelynn) & p_12(Adelynn)) -> p_13(Adelynn)",
                    "p_16(Adelynn) -> p_8(Adelynn)",
                    "p_16(Adelynn) -> p_3(Adelynn)",
                    "(-p_16(Adelynn) & -p_6(Adelynn)) -> -p_5(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) | p_3(Adelynn))",
                    "p_16(Adelynn) -> (p_3(Adelynn) | p_8(Adelynn))",
                    "p_8(Adelynn) | -p_8(Adelynn)",
                    "-p_8(Adelynn) -> -p_16(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) & p_3(Adelynn))",
                    "-p_5(Adelynn) | p_6(Adelynn) | p_16(Adelynn)",
                    "p_16(Adelynn) -> (-p_2(Adelynn) -> p_13(Adelynn))",
                    "p_5(Adelynn) -> -p_8(Adelynn)"
                ],
                "formulas(goals)": [
                    "-p_8(Adelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Adelynn) \u2192 \u00acp_8(Adelynn)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Adelynn)\n\u00acp_6(Adelynn)\n\u00acp_4(Adelynn)\n\u00acp_2(Adelynn)\n\u00acp_0(Adelynn)\n\u00acp_1(Adelynn)\np_5(Adelynn) \u2192 (p_16(Adelynn) \u2228 p_6(Adelynn))\n(p_3(Adelynn) \u2295 p_15(Adelynn)) \u2192 p_4(Adelynn)\np_16(Adelynn) \u2192 (p_2(Adelynn) \u2295 p_13(Adelynn))\n(p_0(Adelynn) \u2295 p_12(Adelynn)) \u2192 p_1(Adelynn)\n(p_11(Adelynn) \u2228 p_14(Adelynn)) \u2192 p_15(Adelynn)\n\u2200x ((p_9(x) \u2227 p_12(x)) \u2192 p_13(x))\np_10(Adelynn) \u2192 p_11(Adelynn)\n\u2200x (p_7(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_8(Adelynn) \u2192 p_3(Adelynn)\np_5(Adelynn) \u2228 \u00acp_5(Adelynn)\n(p_5(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 p_16(Adelynn)\n(p_9(Adelynn) \u2227 p_12(Adelynn)) \u2192 p_13(Adelynn)\np_16(Adelynn) \u2192 p_8(Adelynn)\np_16(Adelynn) \u2192 p_3(Adelynn)\n(\u00acp_16(Adelynn) \u2227 \u00acp_6(Adelynn)) \u2192 \u00acp_5(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2228 p_3(Adelynn))\np_16(Adelynn) \u2192 (p_3(Adelynn) \u2228 p_8(Adelynn))\np_8(Adelynn) \u2228 \u00acp_8(Adelynn)\n\u00acp_8(Adelynn) \u2192 \u00acp_16(Adelynn)\np_16(Adelynn) \u2192 (p_8(Adelynn) \u2227 p_3(Adelynn))\n\u00acp_5(Adelynn) \u2228 p_6(Adelynn) \u2228 p_16(Adelynn)\np_16(Adelynn) \u2192 (\u00acp_2(Adelynn) \u2192 p_13(Adelynn))\np_5(Adelynn) \u2192 \u00acp_8(Adelynn)",
            "Initial Goal": "\u00acp_8(Adelynn)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Adelynn)",
                    "-p_6(Adelynn)",
                    "-p_4(Adelynn)",
                    "-p_2(Adelynn)",
                    "-p_0(Adelynn)",
                    "-p_1(Adelynn)",
                    "p_5(Adelynn) -> (p_16(Adelynn) | p_6(Adelynn))",
                    "(-(p_3(Adelynn) <-> p_15(Adelynn))) -> p_4(Adelynn)",
                    "p_16(Adelynn) -> (-(p_2(Adelynn) <-> p_13(Adelynn)))",
                    "(-(p_0(Adelynn) <-> p_12(Adelynn))) -> p_1(Adelynn)",
                    "(p_11(Adelynn) | p_14(Adelynn)) -> p_15(Adelynn)",
                    "all x ((p_9(x) & p_12(x)) -> p_13(x))",
                    "p_10(Adelynn) -> p_11(Adelynn)",
                    "all x (p_7(x) -> (p_9(x) & p_10(x)))",
                    "p_8(Adelynn) -> p_3(Adelynn)",
                    "p_5(Adelynn) | -p_5(Adelynn)",
                    "(p_5(Adelynn) & -p_6(Adelynn)) -> p_16(Adelynn)",
                    "(p_9(Adelynn) & p_12(Adelynn)) -> p_13(Adelynn)",
                    "p_16(Adelynn) -> p_8(Adelynn)",
                    "p_16(Adelynn) -> p_3(Adelynn)",
                    "(-p_16(Adelynn) & -p_6(Adelynn)) -> -p_5(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) | p_3(Adelynn))",
                    "p_16(Adelynn) -> (p_3(Adelynn) | p_8(Adelynn))",
                    "p_8(Adelynn) | -p_8(Adelynn)",
                    "-p_8(Adelynn) -> -p_16(Adelynn)",
                    "p_16(Adelynn) -> (p_8(Adelynn) & p_3(Adelynn))",
                    "-p_5(Adelynn) | p_6(Adelynn) | p_16(Adelynn)",
                    "p_16(Adelynn) -> (-p_2(Adelynn) -> p_13(Adelynn))",
                    "p_5(Adelynn) -> -p_8(Adelynn)"
                ],
                "formulas(goals)": [
                    "-p_8(Adelynn)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        }
    ]
}