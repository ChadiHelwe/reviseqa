{
    "background_story": "Carla was a beloved grandmother who was remembered fondly by her family and friends. She had a way of making everyone feel welcome and loved, always with a warm smile and a fresh-baked cookie. Her grandchildren adored her storytelling sessions, where she would regale them with tales of her childhood adventures and the history of their family. Years after she passed away, her family still speaks fondly of her, recalling her kindness, generosity, and the countless memories she created for them. Carla's legacy lives on through the recipes, stories, and traditions she left behind, and her loved ones continue to cherish the time they had with her, remembering her fondly as a pillar of love and strength in their lives.",
    "predicates": [
        {
            "id": 0,
            "name": "keeps_traditions"
        },
        {
            "id": 1,
            "name": "generous"
        },
        {
            "id": 2,
            "name": "creates_memories"
        },
        {
            "id": 3,
            "name": "offers_guidance"
        },
        {
            "id": 4,
            "name": "shows_empathy"
        },
        {
            "id": 5,
            "name": "bakes_cookies"
        },
        {
            "id": 6,
            "name": "kind"
        },
        {
            "id": 7,
            "name": "beloved"
        },
        {
            "id": 8,
            "name": "helps_others"
        },
        {
            "id": 9,
            "name": "is_caring"
        },
        {
            "id": 10,
            "name": "listens_well"
        },
        {
            "id": 11,
            "name": "supports_family"
        },
        {
            "id": 12,
            "name": "nurtures_others"
        },
        {
            "id": 13,
            "name": "tells_stories"
        },
        {
            "id": 14,
            "name": "shares_wisdom"
        },
        {
            "id": 15,
            "name": "smiles_frequently"
        },
        {
            "id": 16,
            "name": "gives_hugs"
        },
        {
            "id": 17,
            "name": "donates_time"
        },
        {
            "id": 18,
            "name": "gives_advice"
        },
        {
            "id": 19,
            "name": "gives_time"
        },
        {
            "id": 20,
            "name": "shows_concern"
        },
        {
            "id": 21,
            "name": "shows_affection"
        },
        {
            "id": 22,
            "name": "hears_all"
        },
        {
            "id": 23,
            "name": "loves_children"
        },
        {
            "id": 24,
            "name": "has_patience"
        },
        {
            "id": 25,
            "name": "cooks_meals"
        },
        {
            "id": 26,
            "name": "has_experience"
        },
        {
            "id": 27,
            "name": "is_insightful"
        }
    ],
    "subject_name": "Carla",
    "subject_category": "human",
    "keyword": "fondly",
    "all_facts": [
        {
            "id": 0,
            "subject": "Carla",
            "text": "Carla keeps traditions.",
            "fol": "p_0(Carla)",
            "str_fol": "keeps_traditions(Carla)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Carla",
            "text": "Carla is not generous.",
            "fol": "\u00acp_1(Carla)",
            "str_fol": "\u00acgenerous(Carla)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Carla",
            "text": "Carla does not create memories.",
            "fol": "\u00acp_2(Carla)",
            "str_fol": "\u00accreates_memories(Carla)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Carla",
            "text": "Carla offers guidance.",
            "fol": "p_3(Carla)",
            "str_fol": "offers_guidance(Carla)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Carla",
            "text": "Carla does not show empathy.",
            "fol": "\u00acp_4(Carla)",
            "str_fol": "\u00acshows_empathy(Carla)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Carla",
            "text": "Carla bakes cookies.",
            "fol": "p_5(Carla)",
            "str_fol": "bakes_cookies(Carla)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Carla",
            "text": "Carla does not share wisdom.",
            "fol": "\u00acp_14(Carla)",
            "str_fol": "\u00acshares_wisdom(Carla)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Carla",
            "text": "Carla nurtures others.",
            "fol": "p_12(Carla)",
            "str_fol": "nurtures_others(Carla)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Carla",
            "text": "Carla does not tell stories.",
            "fol": "\u00acp_13(Carla)",
            "str_fol": "\u00actells_stories(Carla)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Carla",
            "text": "Carla listens well.",
            "fol": "p_10(Carla)",
            "str_fol": "listens_well(Carla)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Carla",
            "text": "Carla does not support her family.",
            "fol": "\u00acp_11(Carla)",
            "str_fol": "\u00acsupports_family(Carla)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Carla",
            "text": "Carla is not caring.",
            "fol": "\u00acp_9(Carla)",
            "str_fol": "\u00acis_caring(Carla)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Carla",
            "text": "Carla does not help others.",
            "fol": "\u00acp_8(Carla)",
            "str_fol": "\u00achelps_others(Carla)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Carla",
            "text": "Carla is kind.",
            "fol": "p_6(Carla)",
            "str_fol": "kind(Carla)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Carla",
            "text": "Carla is beloved.",
            "fol": "p_7(Carla)",
            "str_fol": "beloved(Carla)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Carla",
            "text": "Carla bakes cookies.",
            "fol": "p_5(Carla)",
            "str_fol": "bakes_cookies(Carla)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Carla",
            "text": "Carla offers guidance.",
            "fol": "p_3(Carla)",
            "str_fol": "offers_guidance(Carla)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Carla",
            "text": "Carla does not show empathy.",
            "fol": "\u00acp_4(Carla)",
            "str_fol": "\u00acshows_empathy(Carla)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Carla",
            "text": "Carla does not create memories.",
            "fol": "\u00acp_2(Carla)",
            "str_fol": "\u00accreates_memories(Carla)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Carla",
            "text": "Carla keeps traditions.",
            "fol": "p_0(Carla)",
            "str_fol": "keeps_traditions(Carla)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Carla",
            "text": "Carla is not generous.",
            "fol": "\u00acp_1(Carla)",
            "str_fol": "\u00acgenerous(Carla)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "A person either shares wisdom or bakes cookies, but not necessarily both.",
            "fol": "\u2200x (p_14(x) \u2295 p_5(x))",
            "str_fol": "\u2200x (shares_wisdom(x) \u2295 bakes_cookies(x))"
        },
        {
            "id": 7,
            "text": "If Carla either nurtures others or offers guidance (but not both), then she shows empathy.",
            "fol": "(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)",
            "str_fol": "(nurtures_others(Carla) \u2295 offers_guidance(Carla)) \u2192 shows_empathy(Carla)"
        },
        {
            "id": 6,
            "text": "Everyone who tells stories either shares wisdom or creates memories (or both).",
            "fol": "\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))",
            "str_fol": "\u2200x (tells_stories(x) \u2192 (shares_wisdom(x) \u2228 creates_memories(x)))"
        },
        {
            "id": 5,
            "text": "Everyone who nurtures others either tells stories or listens well (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (nurtures_others(x) \u2192 (tells_stories(x) \u2228 listens_well(x)))"
        },
        {
            "id": 4,
            "text": "Carla either supports her family or keeps traditions, but not necessarily both.",
            "fol": "p_11(Carla) \u2295 p_0(Carla)",
            "str_fol": "supports_family(Carla) \u2295 keeps_traditions(Carla)"
        },
        {
            "id": 3,
            "text": "If someone is caring and listens well, then they support their family.",
            "fol": "\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((is_caring(x) \u2227 listens_well(x)) \u2192 supports_family(x))"
        },
        {
            "id": 2,
            "text": "If someone helps others, then they are caring.",
            "fol": "\u2200x (p_8(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (helps_others(x) \u2192 is_caring(x))"
        },
        {
            "id": 1,
            "text": "Carla is either kind or helps others.",
            "fol": "p_6(Carla) \u2228 p_8(Carla)",
            "str_fol": "kind(Carla) \u2228 helps_others(Carla)"
        },
        {
            "id": 0,
            "text": "If Carla is either kind or generous (but not both), then she is beloved.",
            "fol": "(p_6(Carla) \u2295 p_1(Carla)) \u2192 p_7(Carla)",
            "str_fol": "(kind(Carla) \u2295 generous(Carla)) \u2192 beloved(Carla)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Carla",
            "text": "Carla bakes cookies.",
            "fol": "p_5(Carla)",
            "str_fol": "bakes_cookies(Carla)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Carla",
            "text": "Carla offers guidance.",
            "fol": "p_3(Carla)",
            "str_fol": "offers_guidance(Carla)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Carla",
            "text": "Carla does not show empathy.",
            "fol": "\u00acp_4(Carla)",
            "str_fol": "\u00acshows_empathy(Carla)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Carla",
            "text": "Carla does not create memories.",
            "fol": "\u00acp_2(Carla)",
            "str_fol": "\u00accreates_memories(Carla)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Carla",
            "text": "Carla keeps traditions.",
            "fol": "p_0(Carla)",
            "str_fol": "keeps_traditions(Carla)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Carla",
            "text": "Carla is not generous.",
            "fol": "\u00acp_1(Carla)",
            "str_fol": "\u00acgenerous(Carla)",
            "negation": true
        },
        {
            "id": 8,
            "text": "A person either shares wisdom or bakes cookies, but not necessarily both.",
            "fol": "\u2200x (p_14(x) \u2295 p_5(x))",
            "str_fol": "\u2200x (shares_wisdom(x) \u2295 bakes_cookies(x))"
        },
        {
            "id": 7,
            "text": "If Carla either nurtures others or offers guidance (but not both), then she shows empathy.",
            "fol": "(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)",
            "str_fol": "(nurtures_others(Carla) \u2295 offers_guidance(Carla)) \u2192 shows_empathy(Carla)"
        },
        {
            "id": 6,
            "text": "Everyone who tells stories either shares wisdom or creates memories (or both).",
            "fol": "\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))",
            "str_fol": "\u2200x (tells_stories(x) \u2192 (shares_wisdom(x) \u2228 creates_memories(x)))"
        },
        {
            "id": 5,
            "text": "Everyone who nurtures others either tells stories or listens well (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))",
            "str_fol": "\u2200x (nurtures_others(x) \u2192 (tells_stories(x) \u2228 listens_well(x)))"
        },
        {
            "id": 4,
            "text": "Carla either supports her family or keeps traditions, but not necessarily both.",
            "fol": "p_11(Carla) \u2295 p_0(Carla)",
            "str_fol": "supports_family(Carla) \u2295 keeps_traditions(Carla)"
        },
        {
            "id": 3,
            "text": "If someone is caring and listens well, then they support their family.",
            "fol": "\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((is_caring(x) \u2227 listens_well(x)) \u2192 supports_family(x))"
        },
        {
            "id": 2,
            "text": "If someone helps others, then they are caring.",
            "fol": "\u2200x (p_8(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (helps_others(x) \u2192 is_caring(x))"
        },
        {
            "id": 1,
            "text": "Carla is either kind or helps others.",
            "fol": "p_6(Carla) \u2228 p_8(Carla)",
            "str_fol": "kind(Carla) \u2228 helps_others(Carla)"
        },
        {
            "id": 0,
            "text": "If Carla is either kind or generous (but not both), then she is beloved.",
            "fol": "(p_6(Carla) \u2295 p_1(Carla)) \u2192 p_7(Carla)",
            "str_fol": "(kind(Carla) \u2295 generous(Carla)) \u2192 beloved(Carla)"
        }
    ],
    "context_fol": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (p_14(x) \u2295 p_5(x))\n(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\np_11(Carla) \u2295 p_0(Carla)\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\n(p_6(Carla) \u2295 p_1(Carla)) \u2192 p_7(Carla)",
    "conclusion": {
        "id": 14,
        "subject": "Carla",
        "text": "Carla is beloved.",
        "fol": "p_7(Carla)",
        "str_fol": "beloved(Carla)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_7(Carla)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Carla",
                    "text": "Carla bakes cookies.",
                    "fol": "p_5(Carla)",
                    "str_fol": "bakes_cookies(Carla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "A person either shares wisdom or bakes cookies, but not necessarily both.",
                    "fol": "\u2200x (p_14(x) \u2295 p_5(x))",
                    "str_fol": "\u2200x (shares_wisdom(x) \u2295 bakes_cookies(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Carla",
                "text": "Carla does not share wisdom.",
                "fol": "\u00acp_14(Carla)",
                "str_fol": "\u00acshares_wisdom(Carla)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Carla",
                    "text": "Carla offers guidance.",
                    "fol": "p_3(Carla)",
                    "str_fol": "offers_guidance(Carla)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Carla",
                    "text": "Carla does not show empathy.",
                    "fol": "\u00acp_4(Carla)",
                    "str_fol": "\u00acshows_empathy(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Carla either nurtures others or offers guidance (but not both), then she shows empathy.",
                    "fol": "(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)",
                    "str_fol": "(nurtures_others(Carla) \u2295 offers_guidance(Carla)) \u2192 shows_empathy(Carla)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Carla",
                "text": "Carla nurtures others.",
                "fol": "p_12(Carla)",
                "str_fol": "nurtures_others(Carla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Carla",
                    "text": "Carla does not share wisdom.",
                    "fol": "\u00acp_14(Carla)",
                    "str_fol": "\u00acshares_wisdom(Carla)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Carla",
                    "text": "Carla does not create memories.",
                    "fol": "\u00acp_2(Carla)",
                    "str_fol": "\u00accreates_memories(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Everyone who tells stories either shares wisdom or creates memories (or both).",
                    "fol": "\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))",
                    "str_fol": "\u2200x (tells_stories(x) \u2192 (shares_wisdom(x) \u2228 creates_memories(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Carla",
                "text": "Carla does not tell stories.",
                "fol": "\u00acp_13(Carla)",
                "str_fol": "\u00actells_stories(Carla)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Carla",
                    "text": "Carla nurtures others.",
                    "fol": "p_12(Carla)",
                    "str_fol": "nurtures_others(Carla)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Carla",
                    "text": "Carla does not tell stories.",
                    "fol": "\u00acp_13(Carla)",
                    "str_fol": "\u00actells_stories(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Everyone who nurtures others either tells stories or listens well (or both).",
                    "fol": "\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))",
                    "str_fol": "\u2200x (nurtures_others(x) \u2192 (tells_stories(x) \u2228 listens_well(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Carla",
                "text": "Carla listens well.",
                "fol": "p_10(Carla)",
                "str_fol": "listens_well(Carla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Carla",
                    "text": "Carla keeps traditions.",
                    "fol": "p_0(Carla)",
                    "str_fol": "keeps_traditions(Carla)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Carla either supports her family or keeps traditions, but not necessarily both.",
                    "fol": "p_11(Carla) \u2295 p_0(Carla)",
                    "str_fol": "supports_family(Carla) \u2295 keeps_traditions(Carla)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Carla",
                "text": "Carla does not support her family.",
                "fol": "\u00acp_11(Carla)",
                "str_fol": "\u00acsupports_family(Carla)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Carla",
                    "text": "Carla listens well.",
                    "fol": "p_10(Carla)",
                    "str_fol": "listens_well(Carla)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Carla",
                    "text": "Carla does not support her family.",
                    "fol": "\u00acp_11(Carla)",
                    "str_fol": "\u00acsupports_family(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone is caring and listens well, then they support their family.",
                    "fol": "\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((is_caring(x) \u2227 listens_well(x)) \u2192 supports_family(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Carla",
                "text": "Carla is not caring.",
                "fol": "\u00acp_9(Carla)",
                "str_fol": "\u00acis_caring(Carla)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Carla",
                    "text": "Carla is not caring.",
                    "fol": "\u00acp_9(Carla)",
                    "str_fol": "\u00acis_caring(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone helps others, then they are caring.",
                    "fol": "\u2200x (p_8(x) \u2192 p_9(x))",
                    "str_fol": "\u2200x (helps_others(x) \u2192 is_caring(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Carla",
                "text": "Carla does not help others.",
                "fol": "\u00acp_8(Carla)",
                "str_fol": "\u00achelps_others(Carla)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Carla",
                    "text": "Carla does not help others.",
                    "fol": "\u00acp_8(Carla)",
                    "str_fol": "\u00achelps_others(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Carla is either kind or helps others.",
                    "fol": "p_6(Carla) \u2228 p_8(Carla)",
                    "str_fol": "kind(Carla) \u2228 helps_others(Carla)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Carla",
                "text": "Carla is kind.",
                "fol": "p_6(Carla)",
                "str_fol": "kind(Carla)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Carla",
                    "text": "Carla is kind.",
                    "fol": "p_6(Carla)",
                    "str_fol": "kind(Carla)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Carla",
                    "text": "Carla is not generous.",
                    "fol": "\u00acp_1(Carla)",
                    "str_fol": "\u00acgenerous(Carla)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Carla is either kind or generous (but not both), then she is beloved.",
                    "fol": "(p_6(Carla) \u2295 p_1(Carla)) \u2192 p_7(Carla)",
                    "str_fol": "(kind(Carla) \u2295 generous(Carla)) \u2192 beloved(Carla)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Carla",
                "text": "Carla is beloved.",
                "fol": "p_7(Carla)",
                "str_fol": "beloved(Carla)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x -(p_14(x) <-> p_5(x))).  [assumption].\n2 -(p_12(Carla) <-> p_3(Carla)) -> p_4(Carla).  [assumption].\n3 (all x (p_13(x) -> p_14(x) | p_2(x))).  [assumption].\n4 (all x (p_12(x) -> p_13(x) | p_10(x))).  [assumption].\n5 -(p_11(Carla) <-> p_0(Carla)).  [assumption].\n6 (all x (p_9(x) & p_10(x) -> p_11(x))).  [assumption].\n7 (all x (p_8(x) -> p_9(x))).  [assumption].\n8 -(p_6(Carla) <-> p_1(Carla)) -> p_7(Carla).  [assumption].\n9 p_7(Carla).  [goal].\n10 -p_14(x) | -p_5(x).  [clausify(1)].\n11 p_5(Carla).  [assumption].\n13 p_12(Carla) | -p_3(Carla) | p_4(Carla).  [clausify(2)].\n14 p_3(Carla).  [assumption].\n16 p_12(Carla) | p_4(Carla).  [resolve(13,b,14,a)].\n17 -p_4(Carla).  [assumption].\n18 -p_13(x) | p_14(x) | p_2(x).  [clausify(3)].\n19 -p_2(Carla).  [assumption].\n20 -p_11(Carla) | -p_0(Carla).  [clausify(5)].\n21 p_0(Carla).  [assumption].\n23 -p_6(Carla) | p_1(Carla) | p_7(Carla).  [clausify(8)].\n24 -p_1(Carla).  [assumption].\n26 p_12(Carla).  [resolve(16,b,17,a)].\n27 -p_12(x) | p_13(x) | p_10(x).  [clausify(4)].\n28 -p_8(x) | p_9(x).  [clausify(7)].\n29 -p_9(x) | -p_10(x) | p_11(x).  [clausify(6)].\n30 -p_6(Carla) | p_7(Carla).  [resolve(23,b,24,a)].\n31 p_6(Carla) | p_8(Carla).  [assumption].\n32 p_7(Carla) | p_8(Carla).  [resolve(30,a,31,a)].\n33 -p_7(Carla).  [deny(9)].\n34 -p_13(Carla) | p_14(Carla).  [resolve(18,c,19,a)].\n35 -p_14(Carla).  [resolve(10,b,11,a)].\n36 -p_8(x) | -p_10(x) | p_11(x).  [resolve(28,b,29,a)].\n37 -p_11(Carla).  [resolve(20,b,21,a)].\n38 -p_13(Carla).  [resolve(34,b,35,a)].\n39 p_13(Carla) | p_10(Carla).  [resolve(26,a,27,a)].\n40 -p_8(Carla) | -p_10(Carla).  [resolve(36,c,37,a)].\n41 p_8(Carla).  [resolve(32,a,33,a)].\n42 -p_10(Carla).  [resolve(40,a,41,a)].\n43 p_10(Carla).  [resolve(38,a,39,a)].\n44 $F.  [resolve(42,a,43,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (p_14(x) \u2295 p_5(x))\n(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\np_11(Carla) \u2295 p_0(Carla)\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\np_5(Carla) \u2192 \u00acp_7(Carla)",
            "Initial Goal": "p_7(Carla)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Carla)",
                    "p_3(Carla)",
                    "-p_4(Carla)",
                    "-p_2(Carla)",
                    "p_0(Carla)",
                    "-p_1(Carla)",
                    "all x (-(p_14(x) <-> p_5(x)))",
                    "(-(p_12(Carla) <-> p_3(Carla))) -> p_4(Carla)",
                    "all x (p_13(x) -> (p_14(x) | p_2(x)))",
                    "all x (p_12(x) -> (p_13(x) | p_10(x)))",
                    "-(p_11(Carla) <-> p_0(Carla))",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "p_6(Carla) | p_8(Carla)",
                    "p_5(Carla) -> -p_7(Carla)"
                ],
                "formulas(goals)": [
                    "-p_7(Carla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Carla) \u2295 p_1(Carla)) \u2192 p_7(Carla)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Carla) \u2192 \u00acp_7(Carla)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (p_14(x) \u2295 p_5(x))\n(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\np_11(Carla) \u2295 p_0(Carla)\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\np_5(Carla) \u2192 p_7(Carla)",
            "Initial Goal": "p_7(Carla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Carla)",
                    "p_3(Carla)",
                    "-p_4(Carla)",
                    "-p_2(Carla)",
                    "p_0(Carla)",
                    "-p_1(Carla)",
                    "all x (-(p_14(x) <-> p_5(x)))",
                    "(-(p_12(Carla) <-> p_3(Carla))) -> p_4(Carla)",
                    "all x (p_13(x) -> (p_14(x) | p_2(x)))",
                    "all x (p_12(x) -> (p_13(x) | p_10(x)))",
                    "-(p_11(Carla) <-> p_0(Carla))",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "p_6(Carla) | p_8(Carla)",
                    "p_5(Carla) -> p_7(Carla)"
                ],
                "formulas(goals)": [
                    "p_7(Carla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Carla) \u2192 \u00acp_7(Carla)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Carla) \u2192 p_7(Carla)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (p_14(x) \u2295 p_5(x))\n(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\np_11(Carla) \u2295 p_0(Carla)\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\np_5(Carla) \u2192 \u00acp_7(Carla)",
            "Initial Goal": "p_7(Carla)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Carla)",
                    "p_3(Carla)",
                    "-p_4(Carla)",
                    "-p_2(Carla)",
                    "p_0(Carla)",
                    "-p_1(Carla)",
                    "all x (-(p_14(x) <-> p_5(x)))",
                    "(-(p_12(Carla) <-> p_3(Carla))) -> p_4(Carla)",
                    "all x (p_13(x) -> (p_14(x) | p_2(x)))",
                    "all x (p_12(x) -> (p_13(x) | p_10(x)))",
                    "-(p_11(Carla) <-> p_0(Carla))",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "p_6(Carla) | p_8(Carla)",
                    "p_5(Carla) -> -p_7(Carla)"
                ],
                "formulas(goals)": [
                    "-p_7(Carla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Carla) \u2192 p_7(Carla)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Carla) \u2192 \u00acp_7(Carla)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (p_14(x) \u2295 p_5(x))\n(p_12(Carla) \u2295 p_3(Carla)) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\np_11(Carla) \u2295 p_0(Carla)\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\np_5(Carla) \u2192 \u00acp_7(Carla)\n\u00acp_14(Carla)\n\u00ac(p_5(Carla) \u2227 p_7(Carla))",
            "Initial Goal": "p_7(Carla)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Carla)",
                    "p_3(Carla)",
                    "-p_4(Carla)",
                    "-p_2(Carla)",
                    "p_0(Carla)",
                    "-p_1(Carla)",
                    "all x (-(p_14(x) <-> p_5(x)))",
                    "(-(p_12(Carla) <-> p_3(Carla))) -> p_4(Carla)",
                    "all x (p_13(x) -> (p_14(x) | p_2(x)))",
                    "all x (p_12(x) -> (p_13(x) | p_10(x)))",
                    "-(p_11(Carla) <-> p_0(Carla))",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "p_6(Carla) | p_8(Carla)",
                    "p_5(Carla) -> -p_7(Carla)",
                    "-p_14(Carla)",
                    "-(p_5(Carla) & p_7(Carla))"
                ],
                "formulas(goals)": [
                    "-p_7(Carla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_14(Carla)"
                ],
                "added_rules": [
                    "\u00ac(p_5(Carla) \u2227 p_7(Carla))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (\u00ac(p_14(x) \u2194 p_5(x)))\n(\u00ac(p_12(Carla) \u2194 p_3(Carla))) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\n\u00ac(p_11(Carla) \u2194 p_0(Carla))\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\n\u00acp_14(Carla)\np_6(Carla) \u2192 p_7(Carla)",
            "Initial Goal": "p_7(Carla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Carla).",
                    "p_3(Carla).",
                    "-p_4(Carla).",
                    "-p_2(Carla).",
                    "p_0(Carla).",
                    "-p_1(Carla).",
                    "all x (-(p_14(x) <-> p_5(x))).",
                    "(-(p_12(Carla) <-> p_3(Carla))) -> p_4(Carla).",
                    "all x (p_13(x) -> (p_14(x) | p_2(x))).",
                    "all x (p_12(x) -> (p_13(x) | p_10(x))).",
                    "-(p_11(Carla) <-> p_0(Carla)).",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x)).",
                    "all x (p_8(x) -> p_9(x)).",
                    "p_6(Carla) | p_8(Carla).",
                    "-p_14(Carla).",
                    "p_6(Carla) -> p_7(Carla)."
                ],
                "formulas(goals)": [
                    "p_7(Carla)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00ac(p_5(Carla) \u2227 p_7(Carla))"
                ],
                "removed_rules": [
                    "p_5(Carla) \u2192 \u00acp_7(Carla)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Carla) \u2192 p_7(Carla)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (\u00ac(p_14(x) \u2194 p_5(x)))\n(\u00ac(p_12(Carla) \u2194 p_3(Carla))) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\n\u00ac(p_11(Carla) \u2194 p_0(Carla))\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\n\u00acp_14(Carla)\np_6(Carla) \u2192 p_7(Carla)\n\u2200x ((p_12(x) \u2227 \u00acp_14(x) \u2227 \u00acp_2(x)) \u2192 \u00acp_13(x))",
            "Initial Goal": "p_7(Carla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(carla).",
                    "p_3(carla).",
                    "-p_4(carla).",
                    "-p_2(carla).",
                    "p_0(carla).",
                    "-p_1(carla).",
                    "all x (-(p_14(x) <-> p_5(x))).",
                    "(-(p_12(carla) <-> p_3(carla))) -> p_4(carla).",
                    "all x (p_13(x) -> (p_14(x) | p_2(x))).",
                    "all x (p_12(x) -> (p_13(x) | p_10(x))).",
                    "-(p_11(carla) <-> p_0(carla)).",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x)).",
                    "all x (p_8(x) -> p_9(x)).",
                    "p_6(carla) | p_8(carla).",
                    "-p_14(carla).",
                    "p_6(carla) -> p_7(carla).",
                    "all x ((p_12(x) & -p_14(x) & -p_2(x)) -> -p_13(x))."
                ],
                "formulas(goals)": [
                    "p_7(carla)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_12(x) \u2227 \u00acp_14(x) \u2227 \u00acp_2(x)) \u2192 \u00acp_13(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_5(Carla)\np_3(Carla)\n\u00acp_4(Carla)\n\u00acp_2(Carla)\np_0(Carla)\n\u00acp_1(Carla)\n\u2200x (\u00ac(p_14(x) \u2194 p_5(x)))\n(\u00ac(p_12(Carla) \u2194 p_3(Carla))) \u2192 p_4(Carla)\n\u2200x (p_13(x) \u2192 (p_14(x) \u2228 p_2(x)))\n\u2200x (p_12(x) \u2192 (p_13(x) \u2228 p_10(x)))\n\u00ac(p_11(Carla) \u2194 p_0(Carla))\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_8(x) \u2192 p_9(x))\np_6(Carla) \u2228 p_8(Carla)\n\u00acp_14(Carla)\np_6(Carla) \u2192 p_7(Carla)\n\u2200x ((p_12(x) \u2227 \u00acp_14(x) \u2227 \u00acp_2(x)) \u2192 \u00acp_13(x))\np_12(Carla) \u2192 p_10(Carla)",
            "Initial Goal": "p_7(Carla)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_5(Carla)",
                    "p_3(Carla)",
                    "-p_4(Carla)",
                    "-p_2(Carla)",
                    "p_0(Carla)",
                    "-p_1(Carla)",
                    "all x (-(p_14(x) <-> p_5(x)))",
                    "(-(p_12(Carla) <-> p_3(Carla))) -> p_4(Carla)",
                    "all x (p_13(x) -> (p_14(x) | p_2(x)))",
                    "all x (p_12(x) -> (p_13(x) | p_10(x)))",
                    "-(p_11(Carla) <-> p_0(Carla))",
                    "all x ((p_9(x) & p_10(x)) -> p_11(x))",
                    "all x (p_8(x) -> p_9(x))",
                    "p_6(Carla) | p_8(Carla)",
                    "-p_14(Carla)",
                    "p_6(Carla) -> p_7(Carla)",
                    "all x ((p_12(x) & -p_14(x) & -p_2(x)) -> -p_13(x))",
                    "p_12(Carla) -> p_10(Carla)"
                ],
                "formulas(goals)": [
                    "p_7(Carla)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_12(Carla) \u2192 p_10(Carla)"
                ]
            }
        }
    ]
}