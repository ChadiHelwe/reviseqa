{
    "background_story": "Lorenzo, affectionately known as 'Pudge' to his friends, was a lovable and charismatic chef from Italy. His nickname didn't just refer to his rounded physique, but also to his passion for rich, decadent desserts. Pudge's bakery in the heart of the city was famous for its mouthwatering pastries and cakes. Despite his own struggles with weight, Lorenzo never lost his zest for life or his love for cooking. His warmth and generosity made his bakery a community hub, where locals gathered not just for his delectable treats, but for his warm smile and listening ear. Pudge's story is one of self-acceptance and the joy of sharing love through food, proving that a little extra padding can come with a heart of gold.",
    "predicates": [
        {
            "id": 0,
            "name": "loves_cooking"
        },
        {
            "id": 1,
            "name": "is_genuine"
        },
        {
            "id": 2,
            "name": "earns_respect"
        },
        {
            "id": 3,
            "name": "makes_people_laugh"
        },
        {
            "id": 4,
            "name": "listens_actively"
        },
        {
            "id": 5,
            "name": "is_empathetic"
        },
        {
            "id": 6,
            "name": "owns_bakery"
        },
        {
            "id": 7,
            "name": "offers_smiles"
        },
        {
            "id": 8,
            "name": "is_generous"
        },
        {
            "id": 9,
            "name": "brings_people_joy"
        },
        {
            "id": 10,
            "name": "is_humble"
        },
        {
            "id": 11,
            "name": "shares_food"
        },
        {
            "id": 12,
            "name": "wins_hearts"
        },
        {
            "id": 13,
            "name": "has_warm_personality"
        },
        {
            "id": 14,
            "name": "speaks_kindly"
        },
        {
            "id": 15,
            "name": "makes_delights"
        },
        {
            "id": 16,
            "name": "caring"
        },
        {
            "id": 17,
            "name": "seeks_no_fame"
        },
        {
            "id": 18,
            "name": "is_charismatic"
        },
        {
            "id": 19,
            "name": "tells_stories"
        },
        {
            "id": 20,
            "name": "has_patience"
        },
        {
            "id": 21,
            "name": "shows_emotion"
        },
        {
            "id": 22,
            "name": "cooks_meals"
        },
        {
            "id": 23,
            "name": "helps_others"
        }
    ],
    "subject_name": "Lorenzo",
    "subject_category": "human",
    "keyword": "pudge",
    "all_facts": [
        {
            "id": 0,
            "subject": "Lorenzo",
            "text": "Lorenzo does not love cooking.",
            "fol": "\u00acp_0(Lorenzo)",
            "str_fol": "\u00acloves_cooking(Lorenzo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Lorenzo",
            "text": "Lorenzo is genuine.",
            "fol": "p_1(Lorenzo)",
            "str_fol": "is_genuine(Lorenzo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lorenzo",
            "text": "Lorenzo earns respect.",
            "fol": "p_2(Lorenzo)",
            "str_fol": "earns_respect(Lorenzo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lorenzo",
            "text": "Lorenzo does not make people laugh.",
            "fol": "\u00acp_3(Lorenzo)",
            "str_fol": "\u00acmakes_people_laugh(Lorenzo)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Lorenzo",
            "text": "Lorenzo listens actively.",
            "fol": "p_4(Lorenzo)",
            "str_fol": "listens_actively(Lorenzo)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Lorenzo",
            "text": "Lorenzo is empathetic.",
            "fol": "p_5(Lorenzo)",
            "str_fol": "is_empathetic(Lorenzo)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Lorenzo",
            "text": "Lorenzo owns a bakery.",
            "fol": "p_6(Lorenzo)",
            "str_fol": "owns_bakery(Lorenzo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lorenzo",
            "text": "Lorenzo does not offer smiles.",
            "fol": "\u00acp_7(Lorenzo)",
            "str_fol": "\u00acoffers_smiles(Lorenzo)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Lorenzo",
            "text": "Lorenzo shares food.",
            "fol": "p_11(Lorenzo)",
            "str_fol": "shares_food(Lorenzo)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Lorenzo",
            "text": "Lorenzo does not speak kindly.",
            "fol": "\u00acp_14(Lorenzo)",
            "str_fol": "\u00acspeaks_kindly(Lorenzo)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Lorenzo",
            "text": "Lorenzo does not win hearts.",
            "fol": "\u00acp_12(Lorenzo)",
            "str_fol": "\u00acwins_hearts(Lorenzo)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Lorenzo",
            "text": "Lorenzo is humble.",
            "fol": "p_10(Lorenzo)",
            "str_fol": "is_humble(Lorenzo)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Lorenzo",
            "text": "Lorenzo has a warm personality.",
            "fol": "p_13(Lorenzo)",
            "str_fol": "has_warm_personality(Lorenzo)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Lorenzo",
            "text": "Lorenzo is generous.",
            "fol": "p_8(Lorenzo)",
            "str_fol": "is_generous(Lorenzo)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Lorenzo",
            "text": "Lorenzo does not bring people joy.",
            "fol": "\u00acp_9(Lorenzo)",
            "str_fol": "\u00acbrings_people_joy(Lorenzo)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Lorenzo",
            "text": "If Lorenzo loves cooking, then he brings people joy and has a warm personality.",
            "fol": "p_0(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2227 has_warm_personality(Lorenzo))",
            "str_fol": "loves_cooking(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2227 has_warm_personality(Lorenzo))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Lorenzo",
            "text": "Lorenzo owns a bakery.",
            "fol": "p_6(Lorenzo)",
            "str_fol": "owns_bakery(Lorenzo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lorenzo",
            "text": "Lorenzo does not offer smiles.",
            "fol": "\u00acp_7(Lorenzo)",
            "str_fol": "\u00acoffers_smiles(Lorenzo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lorenzo",
            "text": "Lorenzo is empathetic.",
            "fol": "p_5(Lorenzo)",
            "str_fol": "is_empathetic(Lorenzo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lorenzo",
            "text": "Lorenzo is genuine.",
            "fol": "p_1(Lorenzo)",
            "str_fol": "is_genuine(Lorenzo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lorenzo",
            "text": "Lorenzo earns respect.",
            "fol": "p_2(Lorenzo)",
            "str_fol": "earns_respect(Lorenzo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lorenzo",
            "text": "Lorenzo listens actively.",
            "fol": "p_4(Lorenzo)",
            "str_fol": "listens_actively(Lorenzo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lorenzo",
            "text": "Lorenzo does not make people laugh.",
            "fol": "\u00acp_3(Lorenzo)",
            "str_fol": "\u00acmakes_people_laugh(Lorenzo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lorenzo",
            "text": "Lorenzo does not love cooking.",
            "fol": "\u00acp_0(Lorenzo)",
            "str_fol": "\u00acloves_cooking(Lorenzo)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Lorenzo owns a bakery, then he either shares food or offers smiles.",
            "fol": "p_6(Lorenzo) \u2192 (p_11(Lorenzo) \u2228 p_7(Lorenzo))",
            "str_fol": "owns_bakery(Lorenzo) \u2192 (shares_food(Lorenzo) \u2228 offers_smiles(Lorenzo))"
        },
        {
            "id": 5,
            "text": "If Lorenzo is empathetic, then he either speaks kindly or is genuine, but not both.",
            "fol": "p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo))",
            "str_fol": "is_empathetic(Lorenzo) \u2192 (speaks_kindly(Lorenzo) \u2295 is_genuine(Lorenzo))"
        },
        {
            "id": 4,
            "text": "Lorenzo either wins hearts or earns respect, but not both.",
            "fol": "p_12(Lorenzo) \u2295 p_2(Lorenzo)",
            "str_fol": "wins_hearts(Lorenzo) \u2295 earns_respect(Lorenzo)"
        },
        {
            "id": 3,
            "text": "If Lorenzo either listens actively or speaks kindly (but not both), then he is humble.",
            "fol": "(p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo)",
            "str_fol": "(listens_actively(Lorenzo) \u2295 speaks_kindly(Lorenzo)) \u2192 is_humble(Lorenzo)"
        },
        {
            "id": 2,
            "text": "A person either has a warm personality or can make people laugh, but not necessarily both.",
            "fol": "\u2200x (p_3(x) \u2295 p_13(x))",
            "str_fol": "\u2200x (makes_people_laugh(x) \u2295 has_warm_personality(x))"
        },
        {
            "id": 1,
            "text": "If Lorenzo either shares food or is generous (but not both), then he wins hearts.",
            "fol": "(p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo)",
            "str_fol": "(shares_food(Lorenzo) \u2295 is_generous(Lorenzo)) \u2192 wins_hearts(Lorenzo)"
        },
        {
            "id": 0,
            "text": "If Lorenzo is generous, then he either brings people joy or is humble, but not both.",
            "fol": "p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo))",
            "str_fol": "is_generous(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2295 is_humble(Lorenzo))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Lorenzo",
            "text": "Lorenzo owns a bakery.",
            "fol": "p_6(Lorenzo)",
            "str_fol": "owns_bakery(Lorenzo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Lorenzo",
            "text": "Lorenzo does not offer smiles.",
            "fol": "\u00acp_7(Lorenzo)",
            "str_fol": "\u00acoffers_smiles(Lorenzo)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Lorenzo",
            "text": "Lorenzo is empathetic.",
            "fol": "p_5(Lorenzo)",
            "str_fol": "is_empathetic(Lorenzo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Lorenzo",
            "text": "Lorenzo is genuine.",
            "fol": "p_1(Lorenzo)",
            "str_fol": "is_genuine(Lorenzo)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Lorenzo",
            "text": "Lorenzo earns respect.",
            "fol": "p_2(Lorenzo)",
            "str_fol": "earns_respect(Lorenzo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Lorenzo",
            "text": "Lorenzo listens actively.",
            "fol": "p_4(Lorenzo)",
            "str_fol": "listens_actively(Lorenzo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Lorenzo",
            "text": "Lorenzo does not make people laugh.",
            "fol": "\u00acp_3(Lorenzo)",
            "str_fol": "\u00acmakes_people_laugh(Lorenzo)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Lorenzo",
            "text": "Lorenzo does not love cooking.",
            "fol": "\u00acp_0(Lorenzo)",
            "str_fol": "\u00acloves_cooking(Lorenzo)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Lorenzo owns a bakery, then he either shares food or offers smiles.",
            "fol": "p_6(Lorenzo) \u2192 (p_11(Lorenzo) \u2228 p_7(Lorenzo))",
            "str_fol": "owns_bakery(Lorenzo) \u2192 (shares_food(Lorenzo) \u2228 offers_smiles(Lorenzo))"
        },
        {
            "id": 5,
            "text": "If Lorenzo is empathetic, then he either speaks kindly or is genuine, but not both.",
            "fol": "p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo))",
            "str_fol": "is_empathetic(Lorenzo) \u2192 (speaks_kindly(Lorenzo) \u2295 is_genuine(Lorenzo))"
        },
        {
            "id": 4,
            "text": "Lorenzo either wins hearts or earns respect, but not both.",
            "fol": "p_12(Lorenzo) \u2295 p_2(Lorenzo)",
            "str_fol": "wins_hearts(Lorenzo) \u2295 earns_respect(Lorenzo)"
        },
        {
            "id": 3,
            "text": "If Lorenzo either listens actively or speaks kindly (but not both), then he is humble.",
            "fol": "(p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo)",
            "str_fol": "(listens_actively(Lorenzo) \u2295 speaks_kindly(Lorenzo)) \u2192 is_humble(Lorenzo)"
        },
        {
            "id": 2,
            "text": "A person either has a warm personality or can make people laugh, but not necessarily both.",
            "fol": "\u2200x (p_3(x) \u2295 p_13(x))",
            "str_fol": "\u2200x (makes_people_laugh(x) \u2295 has_warm_personality(x))"
        },
        {
            "id": 1,
            "text": "If Lorenzo either shares food or is generous (but not both), then he wins hearts.",
            "fol": "(p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo)",
            "str_fol": "(shares_food(Lorenzo) \u2295 is_generous(Lorenzo)) \u2192 wins_hearts(Lorenzo)"
        },
        {
            "id": 0,
            "text": "If Lorenzo is generous, then he either brings people joy or is humble, but not both.",
            "fol": "p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo))",
            "str_fol": "is_generous(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2295 is_humble(Lorenzo))"
        }
    ],
    "context_fol": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n\u00acp_0(Lorenzo)\np_6(Lorenzo) \u2192 (p_11(Lorenzo) \u2228 p_7(Lorenzo))\np_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo))\np_12(Lorenzo) \u2295 p_2(Lorenzo)\n(p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo)\n\u2200x (p_3(x) \u2295 p_13(x))\n(p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo)\np_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo))",
    "conclusion": {
        "id": 14,
        "text": "If Lorenzo loves cooking, then he brings people joy and has a warm personality.",
        "fol": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
        "str_fol": "loves_cooking(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2227 has_warm_personality(Lorenzo))"
    },
    "initial_answer": "True",
    "initial_goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Lorenzo",
                    "text": "Lorenzo owns a bakery.",
                    "fol": "p_6(Lorenzo)",
                    "str_fol": "owns_bakery(Lorenzo)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Lorenzo",
                    "text": "Lorenzo does not offer smiles.",
                    "fol": "\u00acp_7(Lorenzo)",
                    "str_fol": "\u00acoffers_smiles(Lorenzo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Lorenzo owns a bakery, then he either shares food or offers smiles.",
                    "fol": "p_6(Lorenzo) \u2192 (p_11(Lorenzo) \u2228 p_7(Lorenzo))",
                    "str_fol": "owns_bakery(Lorenzo) \u2192 (shares_food(Lorenzo) \u2228 offers_smiles(Lorenzo))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Lorenzo",
                "text": "Lorenzo shares food.",
                "fol": "p_11(Lorenzo)",
                "str_fol": "shares_food(Lorenzo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Lorenzo",
                    "text": "Lorenzo is empathetic.",
                    "fol": "p_5(Lorenzo)",
                    "str_fol": "is_empathetic(Lorenzo)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Lorenzo",
                    "text": "Lorenzo is genuine.",
                    "fol": "p_1(Lorenzo)",
                    "str_fol": "is_genuine(Lorenzo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Lorenzo is empathetic, then he either speaks kindly or is genuine, but not both.",
                    "fol": "p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo))",
                    "str_fol": "is_empathetic(Lorenzo) \u2192 (speaks_kindly(Lorenzo) \u2295 is_genuine(Lorenzo))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Lorenzo",
                "text": "Lorenzo does not speak kindly.",
                "fol": "\u00acp_14(Lorenzo)",
                "str_fol": "\u00acspeaks_kindly(Lorenzo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Lorenzo",
                    "text": "Lorenzo earns respect.",
                    "fol": "p_2(Lorenzo)",
                    "str_fol": "earns_respect(Lorenzo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Lorenzo either wins hearts or earns respect, but not both.",
                    "fol": "p_12(Lorenzo) \u2295 p_2(Lorenzo)",
                    "str_fol": "wins_hearts(Lorenzo) \u2295 earns_respect(Lorenzo)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Lorenzo",
                "text": "Lorenzo does not win hearts.",
                "fol": "\u00acp_12(Lorenzo)",
                "str_fol": "\u00acwins_hearts(Lorenzo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Lorenzo",
                    "text": "Lorenzo listens actively.",
                    "fol": "p_4(Lorenzo)",
                    "str_fol": "listens_actively(Lorenzo)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Lorenzo",
                    "text": "Lorenzo does not speak kindly.",
                    "fol": "\u00acp_14(Lorenzo)",
                    "str_fol": "\u00acspeaks_kindly(Lorenzo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Lorenzo either listens actively or speaks kindly (but not both), then he is humble.",
                    "fol": "(p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo)",
                    "str_fol": "(listens_actively(Lorenzo) \u2295 speaks_kindly(Lorenzo)) \u2192 is_humble(Lorenzo)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Lorenzo",
                "text": "Lorenzo is humble.",
                "fol": "p_10(Lorenzo)",
                "str_fol": "is_humble(Lorenzo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Lorenzo",
                    "text": "Lorenzo does not make people laugh.",
                    "fol": "\u00acp_3(Lorenzo)",
                    "str_fol": "\u00acmakes_people_laugh(Lorenzo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "A person either has a warm personality or can make people laugh, but not necessarily both.",
                    "fol": "\u2200x (p_3(x) \u2295 p_13(x))",
                    "str_fol": "\u2200x (makes_people_laugh(x) \u2295 has_warm_personality(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Lorenzo",
                "text": "Lorenzo has a warm personality.",
                "fol": "p_13(Lorenzo)",
                "str_fol": "has_warm_personality(Lorenzo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Lorenzo",
                    "text": "Lorenzo shares food.",
                    "fol": "p_11(Lorenzo)",
                    "str_fol": "shares_food(Lorenzo)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Lorenzo",
                    "text": "Lorenzo does not win hearts.",
                    "fol": "\u00acp_12(Lorenzo)",
                    "str_fol": "\u00acwins_hearts(Lorenzo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Lorenzo either shares food or is generous (but not both), then he wins hearts.",
                    "fol": "(p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo)",
                    "str_fol": "(shares_food(Lorenzo) \u2295 is_generous(Lorenzo)) \u2192 wins_hearts(Lorenzo)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Lorenzo",
                "text": "Lorenzo is generous.",
                "fol": "p_8(Lorenzo)",
                "str_fol": "is_generous(Lorenzo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Lorenzo",
                    "text": "Lorenzo is generous.",
                    "fol": "p_8(Lorenzo)",
                    "str_fol": "is_generous(Lorenzo)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Lorenzo",
                    "text": "Lorenzo is humble.",
                    "fol": "p_10(Lorenzo)",
                    "str_fol": "is_humble(Lorenzo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Lorenzo is generous, then he either brings people joy or is humble, but not both.",
                    "fol": "p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo))",
                    "str_fol": "is_generous(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2295 is_humble(Lorenzo))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Lorenzo",
                "text": "Lorenzo does not bring people joy.",
                "fol": "\u00acp_9(Lorenzo)",
                "str_fol": "\u00acbrings_people_joy(Lorenzo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Lorenzo",
                    "text": "Lorenzo does not love cooking.",
                    "fol": "\u00acp_0(Lorenzo)",
                    "str_fol": "\u00acloves_cooking(Lorenzo)",
                    "negation": true
                },
                {
                    "id": 14,
                    "subject": "Lorenzo",
                    "text": "Lorenzo does not bring people joy.",
                    "fol": "\u00acp_9(Lorenzo)",
                    "str_fol": "\u00acbrings_people_joy(Lorenzo)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Lorenzo",
                    "text": "Lorenzo has a warm personality.",
                    "fol": "p_13(Lorenzo)",
                    "str_fol": "has_warm_personality(Lorenzo)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 14,
                "text": "If Lorenzo loves cooking, then he brings people joy and has a warm personality.",
                "fol": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
                "str_fol": "loves_cooking(Lorenzo) \u2192 (brings_people_joy(Lorenzo) \u2227 has_warm_personality(Lorenzo))"
            }
        }
    ],
    "proof_trace": "8 p_0(Lorenzo) -> p_9(Lorenzo) & p_13(Lorenzo).  [goal].\n28 p_0(Lorenzo).  [deny(8)].\n29 -p_0(Lorenzo).  [assumption].\n35 $F.  [resolve(28,a,29,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n\u00acp_0(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo)",
                    "-p_7(Lorenzo)",
                    "p_5(Lorenzo)",
                    "p_1(Lorenzo)",
                    "p_2(Lorenzo)",
                    "p_4(Lorenzo)",
                    "-p_3(Lorenzo)",
                    "-p_0(Lorenzo)",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo))",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo))))",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo)))",
                    "((-(p_4(Lorenzo) <-> p_14(Lorenzo))) -> p_10(Lorenzo))",
                    "all x (-(p_3(x) <-> p_13(x)))",
                    "((-(p_11(Lorenzo) <-> p_8(Lorenzo))) -> p_12(Lorenzo))",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo))))",
                    "p_13(Lorenzo)",
                    "p_11(Lorenzo)"
                ],
                "formulas(goals)": [
                    "(p_0(Lorenzo) -> (p_9(Lorenzo) & p_13(Lorenzo)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Lorenzo)",
                    "p_11(Lorenzo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n\u00acp_0(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)\n\u00acp_14(Lorenzo)\n\u00acp_12(Lorenzo)\np_10(Lorenzo)\np_8(Lorenzo)\n\u00acp_9(Lorenzo)",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo).",
                    "-p_7(Lorenzo).",
                    "p_5(Lorenzo).",
                    "p_1(Lorenzo).",
                    "p_2(Lorenzo).",
                    "p_4(Lorenzo).",
                    "-p_3(Lorenzo).",
                    "-p_0(Lorenzo).",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo)).",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo)))).",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo))).",
                    "((-(p_4(Lorenzo) <-> p_14(Lorenzo))) -> p_10(Lorenzo)).",
                    "all x (-(p_3(x) <-> p_13(x))).",
                    "((-(p_11(Lorenzo) <-> p_8(Lorenzo))) -> p_12(Lorenzo)).",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo)))).",
                    "p_13(Lorenzo).",
                    "p_11(Lorenzo).",
                    "-p_14(Lorenzo).",
                    "-p_12(Lorenzo).",
                    "p_10(Lorenzo).",
                    "p_8(Lorenzo).",
                    "-p_9(Lorenzo)."
                ],
                "formulas(goals)": [
                    "(p_0(Lorenzo) -> (p_9(Lorenzo) & p_13(Lorenzo)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_14(Lorenzo)",
                    "\u00acp_12(Lorenzo)",
                    "p_10(Lorenzo)",
                    "p_8(Lorenzo)",
                    "\u00acp_9(Lorenzo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)\n\u00acp_14(Lorenzo)\n\u00acp_12(Lorenzo)\np_10(Lorenzo)\np_8(Lorenzo)\n\u00acp_9(Lorenzo)\n(p_5(Lorenzo) \u2192 p_0(Lorenzo))",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo)",
                    "-p_7(Lorenzo)",
                    "p_5(Lorenzo)",
                    "p_1(Lorenzo)",
                    "p_2(Lorenzo)",
                    "p_4(Lorenzo)",
                    "-p_3(Lorenzo)",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo))",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo))))",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo)))",
                    "(-(p_4(Lorenzo) <-> p_14(Lorenzo)) -> p_10(Lorenzo))",
                    "all x (-(p_3(x) <-> p_13(x)))",
                    "(-(p_11(Lorenzo) <-> p_8(Lorenzo)) -> p_12(Lorenzo))",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo))))",
                    "p_13(Lorenzo)",
                    "p_11(Lorenzo)",
                    "-p_14(Lorenzo)",
                    "-p_12(Lorenzo)",
                    "p_10(Lorenzo)",
                    "p_8(Lorenzo)",
                    "-p_9(Lorenzo)",
                    "(p_5(Lorenzo) -> p_0(Lorenzo))"
                ],
                "formulas(goals)": [
                    "-(-p_0(Lorenzo) | (p_9(Lorenzo) & p_13(Lorenzo)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_0(Lorenzo)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_5(Lorenzo) \u2192 p_0(Lorenzo)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)\n\u00acp_14(Lorenzo)\n\u00acp_12(Lorenzo)\np_10(Lorenzo)\np_8(Lorenzo)\n\u00acp_9(Lorenzo)\n(p_5(Lorenzo) \u2192 (p_0(Lorenzo) \u2295 p_1(Lorenzo)))",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo)",
                    "-p_7(Lorenzo)",
                    "p_5(Lorenzo)",
                    "p_1(Lorenzo)",
                    "p_2(Lorenzo)",
                    "p_4(Lorenzo)",
                    "-p_3(Lorenzo)",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo))",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo))))",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo)))",
                    "((-(p_4(Lorenzo) <-> p_14(Lorenzo))) -> p_10(Lorenzo))",
                    "all x (-(p_3(x) <-> p_13(x)))",
                    "((-(p_11(Lorenzo) <-> p_8(Lorenzo))) -> p_12(Lorenzo))",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo))))",
                    "p_13(Lorenzo)",
                    "p_11(Lorenzo)",
                    "-p_14(Lorenzo)",
                    "-p_12(Lorenzo)",
                    "p_10(Lorenzo)",
                    "p_8(Lorenzo)",
                    "-p_9(Lorenzo)",
                    "(p_5(Lorenzo) -> (-(p_0(Lorenzo) <-> p_1(Lorenzo))))"
                ],
                "formulas(goals)": [
                    "(p_0(Lorenzo) -> (p_9(Lorenzo) & p_13(Lorenzo)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_5(Lorenzo) \u2192 p_0(Lorenzo))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Lorenzo) \u2192 (p_0(Lorenzo) \u2295 p_1(Lorenzo)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\n\u00acp_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)\n\u00acp_14(Lorenzo)\n\u00acp_12(Lorenzo)\np_10(Lorenzo)\np_8(Lorenzo)\n\u00acp_9(Lorenzo)\n(p_5(Lorenzo) \u2192 (p_0(Lorenzo) \u2295 p_1(Lorenzo)))",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo).",
                    "-p_7(Lorenzo).",
                    "p_5(Lorenzo).",
                    "-p_1(Lorenzo).",
                    "p_2(Lorenzo).",
                    "p_4(Lorenzo).",
                    "-p_3(Lorenzo).",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo)).",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo)))).",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo))).",
                    "((-(p_4(Lorenzo) <-> p_14(Lorenzo))) -> p_10(Lorenzo)).",
                    "all x (-(p_3(x) <-> p_13(x))).",
                    "((-(p_11(Lorenzo) <-> p_8(Lorenzo))) -> p_12(Lorenzo)).",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo)))).",
                    "p_13(Lorenzo).",
                    "p_11(Lorenzo).",
                    "-p_14(Lorenzo).",
                    "-p_12(Lorenzo).",
                    "p_10(Lorenzo).",
                    "p_8(Lorenzo).",
                    "-p_9(Lorenzo).",
                    "(p_5(Lorenzo) -> (-(p_0(Lorenzo) <-> p_1(Lorenzo))))."
                ],
                "formulas(goals)": [
                    "-((p_0(Lorenzo) -> (p_9(Lorenzo) & p_13(Lorenzo))))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_1(Lorenzo)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_1(Lorenzo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)\n\u00acp_14(Lorenzo)\n\u00acp_12(Lorenzo)\np_10(Lorenzo)\np_8(Lorenzo)\n\u00acp_9(Lorenzo)\n(p_5(Lorenzo) \u2192 (p_0(Lorenzo) \u2295 p_1(Lorenzo)))",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo)",
                    "-p_7(Lorenzo)",
                    "p_5(Lorenzo)",
                    "p_1(Lorenzo)",
                    "p_2(Lorenzo)",
                    "p_4(Lorenzo)",
                    "-p_3(Lorenzo)",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo))",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo))))",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo)))",
                    "((-(p_4(Lorenzo) <-> p_14(Lorenzo))) -> p_10(Lorenzo))",
                    "all x (-(p_3(x) <-> p_13(x)))",
                    "((-(p_11(Lorenzo) <-> p_8(Lorenzo))) -> p_12(Lorenzo))",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo))))",
                    "p_13(Lorenzo)",
                    "p_11(Lorenzo)",
                    "-p_14(Lorenzo)",
                    "-p_12(Lorenzo)",
                    "p_10(Lorenzo)",
                    "p_8(Lorenzo)",
                    "-p_9(Lorenzo)",
                    "(p_5(Lorenzo) -> (-(p_0(Lorenzo) <-> p_1(Lorenzo))))"
                ],
                "formulas(goals)": [
                    "(p_0(Lorenzo) -> (p_9(Lorenzo) & p_13(Lorenzo)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Lorenzo)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Lorenzo)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Lorenzo)\n\u00acp_7(Lorenzo)\np_5(Lorenzo)\np_1(Lorenzo)\np_2(Lorenzo)\np_4(Lorenzo)\n\u00acp_3(Lorenzo)\n(\u00acp_6(Lorenzo) \u2228 p_11(Lorenzo) \u2228 p_7(Lorenzo))\n(p_5(Lorenzo) \u2192 (p_14(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_12(Lorenzo) \u2295 p_2(Lorenzo))\n((p_4(Lorenzo) \u2295 p_14(Lorenzo)) \u2192 p_10(Lorenzo))\n\u2200x (p_3(x) \u2295 p_13(x))\n((p_11(Lorenzo) \u2295 p_8(Lorenzo)) \u2192 p_12(Lorenzo))\n(p_8(Lorenzo) \u2192 (p_9(Lorenzo) \u2295 p_10(Lorenzo)))\np_13(Lorenzo)\np_11(Lorenzo)\n\u00acp_14(Lorenzo)\n\u00acp_12(Lorenzo)\np_10(Lorenzo)\np_8(Lorenzo)\n\u00acp_9(Lorenzo)\n(p_5(Lorenzo) \u2192 (p_0(Lorenzo) \u2295 p_1(Lorenzo)))\n(p_5(Lorenzo) \u2192 \u00acp_0(Lorenzo))",
            "Initial Goal": "p_0(Lorenzo) \u2192 (p_9(Lorenzo) \u2227 p_13(Lorenzo))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Lorenzo)",
                    "-p_7(Lorenzo)",
                    "p_5(Lorenzo)",
                    "p_1(Lorenzo)",
                    "p_2(Lorenzo)",
                    "p_4(Lorenzo)",
                    "-p_3(Lorenzo)",
                    "(-p_6(Lorenzo) | p_11(Lorenzo) | p_7(Lorenzo))",
                    "(p_5(Lorenzo) -> (-(p_14(Lorenzo) <-> p_1(Lorenzo))))",
                    "(-(p_12(Lorenzo) <-> p_2(Lorenzo)))",
                    "((-(p_4(Lorenzo) <-> p_14(Lorenzo))) -> p_10(Lorenzo))",
                    "(all x (-(p_3(x) <-> p_13(x))))",
                    "((-(p_11(Lorenzo) <-> p_8(Lorenzo))) -> p_12(Lorenzo))",
                    "(p_8(Lorenzo) -> (-(p_9(Lorenzo) <-> p_10(Lorenzo))))",
                    "p_13(Lorenzo)",
                    "p_11(Lorenzo)",
                    "-p_14(Lorenzo)",
                    "-p_12(Lorenzo)",
                    "p_10(Lorenzo)",
                    "p_8(Lorenzo)",
                    "-p_9(Lorenzo)",
                    "(p_5(Lorenzo) -> (-(p_0(Lorenzo) <-> p_1(Lorenzo))))",
                    "(p_5(Lorenzo) -> -p_0(Lorenzo))"
                ],
                "formulas(goals)": [
                    "(p_0(Lorenzo) -> (p_9(Lorenzo) & p_13(Lorenzo)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_5(Lorenzo) \u2192 \u00acp_0(Lorenzo))"
                ]
            }
        }
    ]
}