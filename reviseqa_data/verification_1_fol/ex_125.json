{
    "background_story": "Case was a professional racing driver known for his lightning-fast reflexes and strategic thinking on the track. He had spent years honing his skills, starting from local go-kart competitions to eventually joining a prestigious racing team. Case's specialty was navigating the challenging turns and lanes of the iconic Monaco Grand Prix circuit. His ability to stay focused and maintain his lane position, even under intense pressure, earned him the respect of his peers. In a career-defining moment, Case executed a daring pass on the narrow lane of the Monaco tunnel, overtaking two cars to secure a podium finish. This move cemented his reputation as a daring and skilled driver, always ready to push the limits on the racing lane.",
    "predicates": [
        {
            "id": 0,
            "name": "good_focus"
        },
        {
            "id": 1,
            "name": "races_pro"
        },
        {
            "id": 2,
            "name": "wins_trophies"
        },
        {
            "id": 3,
            "name": "excels_competition"
        },
        {
            "id": 4,
            "name": "anticipates_turns"
        },
        {
            "id": 5,
            "name": "aggressive"
        },
        {
            "id": 6,
            "name": "strategic"
        },
        {
            "id": 7,
            "name": "quick_reflex"
        },
        {
            "id": 8,
            "name": "drives_fast"
        },
        {
            "id": 9,
            "name": "shifts_gears"
        },
        {
            "id": 10,
            "name": "takes_risks"
        },
        {
            "id": 11,
            "name": "reads_tracks"
        },
        {
            "id": 12,
            "name": "competes_racing"
        },
        {
            "id": 13,
            "name": "stays_calm"
        },
        {
            "id": 14,
            "name": "reacts_fast"
        },
        {
            "id": 15,
            "name": "thinks_ahead"
        },
        {
            "id": 16,
            "name": "experienced_driver"
        },
        {
            "id": 17,
            "name": "maintains_control"
        },
        {
            "id": 18,
            "name": "is_experienced"
        },
        {
            "id": 19,
            "name": "uses_clutch"
        },
        {
            "id": 20,
            "name": "masters_manual"
        },
        {
            "id": 21,
            "name": "studies_circuit"
        },
        {
            "id": 22,
            "name": "analyzes_opponents"
        }
    ],
    "subject_name": "Case",
    "subject_category": "human",
    "keyword": "lane",
    "all_facts": [
        {
            "id": 0,
            "subject": "Case",
            "text": "Case does not have good focus.",
            "fol": "\u00acp_0(Case)",
            "str_fol": "\u00acgood_focus(Case)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Case",
            "text": "Case is a professional racer.",
            "fol": "p_1(Case)",
            "str_fol": "races_pro(Case)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Case",
            "text": "Case does not win trophies.",
            "fol": "\u00acp_2(Case)",
            "str_fol": "\u00acwins_trophies(Case)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Case",
            "text": "Case does not excel in competition.",
            "fol": "\u00acp_3(Case)",
            "str_fol": "\u00acexcels_competition(Case)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Case",
            "text": "Case anticipates turns in order to excel in racing competitions.",
            "fol": "p_4(Case)",
            "str_fol": "anticipates_turns(Case)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Case",
            "text": "Case does not read tracks effectively.",
            "fol": "\u00acp_11(Case)",
            "str_fol": "\u00acreads_tracks(Case)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Case",
            "text": "Case does not shift gears well.",
            "fol": "\u00acp_9(Case)",
            "str_fol": "\u00acshifts_gears(Case)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Case",
            "text": "Case takes risks on the track.",
            "fol": "p_10(Case)",
            "str_fol": "takes_risks(Case)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Case",
            "text": "Case can drive fast.",
            "fol": "p_8(Case)",
            "str_fol": "drives_fast(Case)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Case",
            "text": "Case is not strategic on the track.",
            "fol": "\u00acp_6(Case)",
            "str_fol": "\u00acstrategic(Case)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Case",
            "text": "Case is aggressive on the track.",
            "fol": "p_5(Case)",
            "str_fol": "aggressive(Case)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Case",
            "text": "Case anticipates turns in order to excel in racing competitions.",
            "fol": "p_4(Case)",
            "str_fol": "anticipates_turns(Case)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Case",
            "text": "Case does not excel in competition.",
            "fol": "\u00acp_3(Case)",
            "str_fol": "\u00acexcels_competition(Case)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Case",
            "text": "Case is a professional racer.",
            "fol": "p_1(Case)",
            "str_fol": "races_pro(Case)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Case",
            "text": "Case does not win trophies.",
            "fol": "\u00acp_2(Case)",
            "str_fol": "\u00acwins_trophies(Case)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Case",
            "text": "Case does not have good focus.",
            "fol": "\u00acp_0(Case)",
            "str_fol": "\u00acgood_focus(Case)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Case either reads tracks or anticipates turns, but not both, in order to excel in racing competitions.",
            "fol": "p_11(Case) \u2295 p_4(Case)",
            "str_fol": "reads_tracks(Case) \u2295 anticipates_turns(Case)"
        },
        {
            "id": 5,
            "text": "If Case either shifts gears well or reads tracks effectively (but not both), then he excels in competition.",
            "fol": "(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)",
            "str_fol": "(shifts_gears(Case) \u2295 reads_tracks(Case)) \u2192 excels_competition(Case)"
        },
        {
            "id": 4,
            "text": "Every professional racer either takes risks or wins trophies (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))",
            "str_fol": "\u2200x (races_pro(x) \u2192 (takes_risks(x) \u2228 wins_trophies(x)))"
        },
        {
            "id": 3,
            "text": "If Case either shifts gears well or takes risks on the track (but not both), then he can drive fast.",
            "fol": "(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)",
            "str_fol": "(shifts_gears(Case) \u2295 takes_risks(Case)) \u2192 drives_fast(Case)"
        },
        {
            "id": 2,
            "text": "If Case has quick reflexes, then he can drive fast.",
            "fol": "p_7(Case) \u2192 p_8(Case)",
            "str_fol": "quick_reflex(Case) \u2192 drives_fast(Case)"
        },
        {
            "id": 1,
            "text": "If Case is strategic, then he has quick reflexes and good focus.",
            "fol": "p_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))",
            "str_fol": "strategic(Case) \u2192 (quick_reflex(Case) \u2227 good_focus(Case))"
        },
        {
            "id": 0,
            "text": "Case is either aggressive or strategic (or both) on the track.",
            "fol": "p_5(Case) \u2228 p_6(Case)",
            "str_fol": "aggressive(Case) \u2228 strategic(Case)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Case",
            "text": "Case anticipates turns in order to excel in racing competitions.",
            "fol": "p_4(Case)",
            "str_fol": "anticipates_turns(Case)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Case",
            "text": "Case does not excel in competition.",
            "fol": "\u00acp_3(Case)",
            "str_fol": "\u00acexcels_competition(Case)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Case",
            "text": "Case is a professional racer.",
            "fol": "p_1(Case)",
            "str_fol": "races_pro(Case)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Case",
            "text": "Case does not win trophies.",
            "fol": "\u00acp_2(Case)",
            "str_fol": "\u00acwins_trophies(Case)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Case",
            "text": "Case does not have good focus.",
            "fol": "\u00acp_0(Case)",
            "str_fol": "\u00acgood_focus(Case)",
            "negation": true
        },
        {
            "id": 6,
            "text": "Case either reads tracks or anticipates turns, but not both, in order to excel in racing competitions.",
            "fol": "p_11(Case) \u2295 p_4(Case)",
            "str_fol": "reads_tracks(Case) \u2295 anticipates_turns(Case)"
        },
        {
            "id": 5,
            "text": "If Case either shifts gears well or reads tracks effectively (but not both), then he excels in competition.",
            "fol": "(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)",
            "str_fol": "(shifts_gears(Case) \u2295 reads_tracks(Case)) \u2192 excels_competition(Case)"
        },
        {
            "id": 4,
            "text": "Every professional racer either takes risks or wins trophies (or both).",
            "fol": "\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))",
            "str_fol": "\u2200x (races_pro(x) \u2192 (takes_risks(x) \u2228 wins_trophies(x)))"
        },
        {
            "id": 3,
            "text": "If Case either shifts gears well or takes risks on the track (but not both), then he can drive fast.",
            "fol": "(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)",
            "str_fol": "(shifts_gears(Case) \u2295 takes_risks(Case)) \u2192 drives_fast(Case)"
        },
        {
            "id": 2,
            "text": "If Case has quick reflexes, then he can drive fast.",
            "fol": "p_7(Case) \u2192 p_8(Case)",
            "str_fol": "quick_reflex(Case) \u2192 drives_fast(Case)"
        },
        {
            "id": 1,
            "text": "If Case is strategic, then he has quick reflexes and good focus.",
            "fol": "p_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))",
            "str_fol": "strategic(Case) \u2192 (quick_reflex(Case) \u2227 good_focus(Case))"
        },
        {
            "id": 0,
            "text": "Case is either aggressive or strategic (or both) on the track.",
            "fol": "p_5(Case) \u2228 p_6(Case)",
            "str_fol": "aggressive(Case) \u2228 strategic(Case)"
        }
    ],
    "context_fol": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\np_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))\np_5(Case) \u2228 p_6(Case)",
    "conclusion": {
        "id": 10,
        "subject": "Case",
        "text": "Case is aggressive on the track.",
        "fol": "p_5(Case)",
        "str_fol": "aggressive(Case)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Case)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Case",
                    "text": "Case anticipates turns in order to excel in racing competitions.",
                    "fol": "p_4(Case)",
                    "str_fol": "anticipates_turns(Case)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Case either reads tracks or anticipates turns, but not both, in order to excel in racing competitions.",
                    "fol": "p_11(Case) \u2295 p_4(Case)",
                    "str_fol": "reads_tracks(Case) \u2295 anticipates_turns(Case)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Case",
                "text": "Case does not read tracks effectively.",
                "fol": "\u00acp_11(Case)",
                "str_fol": "\u00acreads_tracks(Case)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Case",
                    "text": "Case does not read tracks effectively.",
                    "fol": "\u00acp_11(Case)",
                    "str_fol": "\u00acreads_tracks(Case)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Case",
                    "text": "Case does not excel in competition.",
                    "fol": "\u00acp_3(Case)",
                    "str_fol": "\u00acexcels_competition(Case)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Case either shifts gears well or reads tracks effectively (but not both), then he excels in competition.",
                    "fol": "(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)",
                    "str_fol": "(shifts_gears(Case) \u2295 reads_tracks(Case)) \u2192 excels_competition(Case)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Case",
                "text": "Case does not shift gears well.",
                "fol": "\u00acp_9(Case)",
                "str_fol": "\u00acshifts_gears(Case)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Case",
                    "text": "Case is a professional racer.",
                    "fol": "p_1(Case)",
                    "str_fol": "races_pro(Case)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Case",
                    "text": "Case does not win trophies.",
                    "fol": "\u00acp_2(Case)",
                    "str_fol": "\u00acwins_trophies(Case)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Every professional racer either takes risks or wins trophies (or both).",
                    "fol": "\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))",
                    "str_fol": "\u2200x (races_pro(x) \u2192 (takes_risks(x) \u2228 wins_trophies(x)))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Case",
                "text": "Case takes risks on the track.",
                "fol": "p_10(Case)",
                "str_fol": "takes_risks(Case)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Case",
                    "text": "Case does not shift gears well.",
                    "fol": "\u00acp_9(Case)",
                    "str_fol": "\u00acshifts_gears(Case)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Case",
                    "text": "Case takes risks on the track.",
                    "fol": "p_10(Case)",
                    "str_fol": "takes_risks(Case)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Case either shifts gears well or takes risks on the track (but not both), then he can drive fast.",
                    "fol": "(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)",
                    "str_fol": "(shifts_gears(Case) \u2295 takes_risks(Case)) \u2192 drives_fast(Case)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Case",
                "text": "Case can drive fast.",
                "fol": "p_8(Case)",
                "str_fol": "drives_fast(Case)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Case",
                    "text": "Case can drive fast.",
                    "fol": "p_8(Case)",
                    "str_fol": "drives_fast(Case)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Case has quick reflexes, then he can drive fast.",
                    "fol": "p_7(Case) \u2192 p_8(Case)",
                    "str_fol": "quick_reflex(Case) \u2192 drives_fast(Case)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Case",
                    "text": "Case does not have good focus.",
                    "fol": "\u00acp_0(Case)",
                    "str_fol": "\u00acgood_focus(Case)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Case is strategic, then he has quick reflexes and good focus.",
                    "fol": "p_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))",
                    "str_fol": "strategic(Case) \u2192 (quick_reflex(Case) \u2227 good_focus(Case))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Case",
                "text": "Case is not strategic on the track.",
                "fol": "\u00acp_6(Case)",
                "str_fol": "\u00acstrategic(Case)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Case",
                    "text": "Case is not strategic on the track.",
                    "fol": "\u00acp_6(Case)",
                    "str_fol": "\u00acstrategic(Case)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Case is either aggressive or strategic (or both) on the track.",
                    "fol": "p_5(Case) \u2228 p_6(Case)",
                    "str_fol": "aggressive(Case) \u2228 strategic(Case)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Case",
                "text": "Case is aggressive on the track.",
                "fol": "p_5(Case)",
                "str_fol": "aggressive(Case)",
                "negation": false
            }
        }
    ],
    "proof_trace": "6 p_6(Case) -> p_7(Case) & p_0(Case).  [assumption].\n7 p_5(Case).  [goal].\n18 -p_6(Case) | p_0(Case).  [clausify(6)].\n19 -p_0(Case).  [assumption].\n25 -p_5(Case).  [deny(7)].\n26 p_5(Case) | p_6(Case).  [assumption].\n31 p_6(Case).  [resolve(25,a,26,a)].\n32 -p_6(Case).  [resolve(18,b,19,a)].\n33 $F.  [resolve(31,a,32,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\np_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))\np_5(Case) \u2228 p_6(Case)\np_9(Case) \u2194 p_11(Case)\np_10(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case)",
                    "-p_3(Case)",
                    "p_1(Case)",
                    "-p_2(Case)",
                    "-p_0(Case)",
                    "-(p_11(Case) <-> p_4(Case))",
                    "(-(p_9(Case) <-> p_11(Case))) -> p_3(Case)",
                    "all x (p_1(x) -> (p_10(x) | p_2(x)))",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case)",
                    "p_7(Case) -> p_8(Case)",
                    "p_6(Case) -> (p_7(Case) & p_0(Case))",
                    "p_5(Case) | p_6(Case)",
                    "p_9(Case) <-> p_11(Case)",
                    "p_10(Case)"
                ],
                "formulas(goals)": [
                    "p_5(Case)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Case)"
                ],
                "added_rules": [
                    "p_9(Case) \u2194 p_11(Case)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\n(p_6(Case) \u2192 p_7(Case)) \u2227 (p_6(Case) \u2192 p_0(Case))\np_5(Case) \u2228 p_6(Case)\n(p_9(Case) \u2192 p_11(Case)) \u2227 (p_11(Case) \u2192 p_9(Case))\np_10(Case)\n\u00acp_11(Case)\np_8(Case)\n\u00acp_6(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case)",
                    "-p_3(Case)",
                    "p_1(Case)",
                    "-p_2(Case)",
                    "-p_0(Case)",
                    "-(p_11(Case) <-> p_4(Case))",
                    "(-(p_9(Case) <-> p_11(Case))) -> p_3(Case)",
                    "all x (p_1(x) -> (p_10(x) | p_2(x)))",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case)",
                    "p_7(Case) -> p_8(Case)",
                    "(p_6(Case) -> p_7(Case)) & (p_6(Case) -> p_0(Case))",
                    "p_5(Case) | p_6(Case)",
                    "(p_9(Case) -> p_11(Case)) & (p_11(Case) -> p_9(Case))",
                    "p_10(Case)",
                    "-p_11(Case)",
                    "p_8(Case)",
                    "-p_6(Case)"
                ],
                "formulas(goals)": [
                    "p_5(Case)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))",
                    "p_9(Case) \u2194 p_11(Case)"
                ],
                "added_facts": [
                    "\u00acp_11(Case)",
                    "p_8(Case)",
                    "\u00acp_6(Case)"
                ],
                "added_rules": [
                    "(p_6(Case) \u2192 p_7(Case)) \u2227 (p_6(Case) \u2192 p_0(Case))",
                    "(p_9(Case) \u2192 p_11(Case)) \u2227 (p_11(Case) \u2192 p_9(Case))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\n(p_6(Case) \u2192 p_7(Case)) \u2227 (p_6(Case) \u2192 p_0(Case))\n(p_9(Case) \u2192 p_11(Case)) \u2227 (p_11(Case) \u2192 p_9(Case))\np_10(Case)\n\u00acp_11(Case)\np_8(Case)\n\u00acp_6(Case)\np_10(Case) \u2192 \u00acp_5(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case)",
                    "-p_3(Case)",
                    "p_1(Case)",
                    "-p_2(Case)",
                    "-p_0(Case)",
                    "-(p_11(Case) <-> p_4(Case))",
                    "(-(p_9(Case) <-> p_11(Case))) -> p_3(Case)",
                    "all x (p_1(x) -> (p_10(x) | p_2(x)))",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case)",
                    "p_7(Case) -> p_8(Case)",
                    "(p_6(Case) -> p_7(Case)) & (p_6(Case) -> p_0(Case))",
                    "(p_9(Case) -> p_11(Case)) & (p_11(Case) -> p_9(Case))",
                    "p_10(Case)",
                    "-p_11(Case)",
                    "p_8(Case)",
                    "-p_6(Case)",
                    "p_10(Case) -> -p_5(Case)"
                ],
                "formulas(goals)": [
                    "-p_5(Case)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Case) \u2228 p_6(Case)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Case) \u2192 \u00acp_5(Case)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n((p_9(Case) \u2228 p_11(Case)) \u2227 \u00ac(p_9(Case) \u2227 p_11(Case))) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\np_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))\n(p_9(Case) \u2192 p_11(Case)) \u2227 (p_11(Case) \u2192 p_9(Case))\np_10(Case)\n\u00acp_11(Case)\np_8(Case)\n\u00acp_6(Case)\np_10(Case) \u2192 \u00acp_5(Case)\np_10(Case) \u2228 p_2(Case)\n\u00acp_11(Case) \u2227 p_4(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case)",
                    "-p_3(Case)",
                    "p_1(Case)",
                    "-p_2(Case)",
                    "-p_0(Case)",
                    "-(p_11(Case) <-> p_4(Case))",
                    "((p_9(Case) | p_11(Case)) & -(p_9(Case) & p_11(Case))) -> p_3(Case)",
                    "all x (p_1(x) -> (p_10(x) | p_2(x)))",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case)",
                    "p_7(Case) -> p_8(Case)",
                    "p_6(Case) -> (p_7(Case) & p_0(Case))",
                    "(p_9(Case) -> p_11(Case)) & (p_11(Case) -> p_9(Case))",
                    "p_10(Case)",
                    "-p_11(Case)",
                    "p_8(Case)",
                    "-p_6(Case)",
                    "p_10(Case) -> -p_5(Case)",
                    "p_10(Case) | p_2(Case)",
                    "-p_11(Case) & p_4(Case)"
                ],
                "formulas(goals)": [
                    "-p_5(Case)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Case) \u2192 p_7(Case)) \u2227 (p_6(Case) \u2192 p_0(Case))",
                    "(p_9(Case) \u2295 p_11(Case)) \u2192 p_3(Case)"
                ],
                "added_facts": [
                    "p_10(Case) \u2228 p_2(Case)",
                    "\u00acp_11(Case) \u2227 p_4(Case)"
                ],
                "added_rules": [
                    "p_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))",
                    "((p_9(Case) \u2228 p_11(Case)) \u2227 \u00ac(p_9(Case) \u2227 p_11(Case))) \u2192 p_3(Case)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n((p_9(Case) \u2228 p_11(Case)) \u2227 \u00ac(p_9(Case) \u2227 p_11(Case))) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\np_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))\n(p_9(Case) \u2194 p_11(Case))\np_10(Case)\n\u00acp_11(Case)\np_8(Case)\n\u00acp_6(Case)\np_10(Case) \u2228 p_2(Case)\n(\u00acp_11(Case) \u2227 p_4(Case))\np_8(Case) \u2192 p_5(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case)",
                    "-p_3(Case)",
                    "p_1(Case)",
                    "-p_2(Case)",
                    "-p_0(Case)",
                    "-(p_11(Case) <-> p_4(Case))",
                    "((p_9(Case) | p_11(Case)) & -(p_9(Case) & p_11(Case))) -> p_3(Case)",
                    "all x (p_1(x) -> (p_10(x) | p_2(x)))",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case)",
                    "p_7(Case) -> p_8(Case)",
                    "p_6(Case) -> (p_7(Case) & p_0(Case))",
                    "(p_9(Case) <-> p_11(Case))",
                    "p_10(Case)",
                    "-p_11(Case)",
                    "p_8(Case)",
                    "-p_6(Case)",
                    "p_10(Case) | p_2(Case)",
                    "(-p_11(Case) & p_4(Case))",
                    "p_8(Case) -> p_5(Case)"
                ],
                "formulas(goals)": [
                    "p_5(Case)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Case) \u2192 \u00acp_5(Case)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Case) \u2192 p_5(Case)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n((p_9(Case) \u2228 p_11(Case)) \u2227 \u00ac(p_9(Case) \u2227 p_11(Case))) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\np_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))\n(p_9(Case) \u2194 p_11(Case))\np_10(Case)\n\u00acp_11(Case)\np_8(Case)\n\u00acp_6(Case)\np_10(Case) \u2228 p_2(Case)\n(\u00acp_11(Case) \u2227 p_4(Case))\n(p_11(Case) \u2295 p_4(Case)) \u2192 \u00acp_5(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case)",
                    "-p_3(Case)",
                    "p_1(Case)",
                    "-p_2(Case)",
                    "-p_0(Case)",
                    "-(p_11(Case) <-> p_4(Case))",
                    "((p_9(Case) | p_11(Case)) & -(p_9(Case) & p_11(Case))) -> p_3(Case)",
                    "all x (p_1(x) -> (p_10(x) | p_2(x)))",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case)",
                    "p_7(Case) -> p_8(Case)",
                    "p_6(Case) -> (p_7(Case) & p_0(Case))",
                    "(p_9(Case) <-> p_11(Case))",
                    "p_10(Case)",
                    "-p_11(Case)",
                    "p_8(Case)",
                    "-p_6(Case)",
                    "p_10(Case) | p_2(Case)",
                    "(-p_11(Case) & p_4(Case))",
                    "(-(p_11(Case) <-> p_4(Case))) -> -p_5(Case)"
                ],
                "formulas(goals)": [
                    "-p_5(Case)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Case) \u2192 p_5(Case)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_11(Case) \u2295 p_4(Case)) \u2192 \u00acp_5(Case)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Case)\n\u00acp_3(Case)\np_1(Case)\n\u00acp_2(Case)\n\u00acp_0(Case)\np_11(Case) \u2295 p_4(Case)\n((p_9(Case) \u2228 p_11(Case)) \u2227 \u00ac(p_9(Case) \u2227 p_11(Case))) \u2192 p_3(Case)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2228 p_2(x)))\n(p_9(Case) \u2295 p_10(Case)) \u2192 p_8(Case)\np_7(Case) \u2192 p_8(Case)\np_6(Case) \u2192 (p_7(Case) \u2227 p_0(Case))\n(p_9(Case) \u2192 p_11(Case)) \u2227 (p_11(Case) \u2192 p_9(Case))\np_10(Case)\n\u00acp_11(Case)\np_8(Case)\n\u00acp_6(Case)\np_10(Case) \u2228 p_2(Case)\n(\u00acp_11(Case) \u2227 p_4(Case))\n(p_11(Case) \u2295 p_4(Case)) \u2192 \u00acp_5(Case)\np_4(Case) \u2227 \u00acp_11(Case)\n\u00acp_9(Case)\np_4(Case) \u2228 p_11(Case)",
            "Initial Goal": "p_5(Case)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Case).",
                    "-p_3(Case).",
                    "p_1(Case).",
                    "-p_2(Case).",
                    "-p_0(Case).",
                    "-(p_11(Case) <-> p_4(Case)).",
                    "(((p_9(Case) | p_11(Case)) & (-(p_9(Case) & p_11(Case))))) -> p_3(Case).",
                    "all x (p_1(x) -> (p_10(x) | p_2(x))).",
                    "(-(p_9(Case) <-> p_10(Case))) -> p_8(Case).",
                    "p_7(Case) -> p_8(Case).",
                    "p_6(Case) -> (p_7(Case) & p_0(Case)).",
                    "(p_9(Case) -> p_11(Case)) & (p_11(Case) -> p_9(Case)).",
                    "p_10(Case).",
                    "-p_11(Case).",
                    "p_8(Case).",
                    "-p_6(Case).",
                    "p_10(Case) | p_2(Case).",
                    "(-p_11(Case) & p_4(Case)).",
                    "(-(p_11(Case) <-> p_4(Case))) -> -p_5(Case).",
                    "p_4(Case) & -p_11(Case).",
                    "-p_9(Case).",
                    "p_4(Case) | p_11(Case)."
                ],
                "formulas(goals)": [
                    "-p_5(Case)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Case) \u2227 \u00acp_11(Case)",
                    "\u00acp_9(Case)",
                    "p_4(Case) \u2228 p_11(Case)"
                ],
                "added_rules": []
            }
        }
    ]
}