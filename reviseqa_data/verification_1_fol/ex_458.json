{
    "background_story": "Paisley was a free-spirited rock climber who spent most of her days scaling vertical walls and exploring the outdoors. Despite her active lifestyle, she struggled with excessive sweating, which often left her feeling self-conscious and uncomfortable. One day, she discovered a revolutionary new antiperspirant that changed her life. The powerful formula kept her dry and confident, even during the most grueling climbs. With her newfound freedom from sweat, Paisley tackled more challenging routes and even started competing in local climbing competitions. She became known for her fearless attitude and her trusty antiperspirant, which she swore by and recommended to all her fellow adventurers. Paisley's story spread, and she became a brand ambassador for the antiperspirant company, inspiring others to push beyond their limits.",
    "predicates": [
        {
            "id": 0,
            "name": "climbs_fearless"
        },
        {
            "id": 1,
            "name": "faces_challenges"
        },
        {
            "id": 2,
            "name": "inspires_others"
        },
        {
            "id": 3,
            "name": "plays_sports"
        },
        {
            "id": 4,
            "name": "enjoys_hiking"
        },
        {
            "id": 5,
            "name": "values_freedom"
        },
        {
            "id": 6,
            "name": "uses_antiperspirant"
        },
        {
            "id": 7,
            "name": "does_not_use_antiperspirant"
        },
        {
            "id": 8,
            "name": "is_active"
        },
        {
            "id": 9,
            "name": "stays_dry"
        },
        {
            "id": 10,
            "name": "feels_confident"
        },
        {
            "id": 11,
            "name": "takes_risks"
        },
        {
            "id": 12,
            "name": "is_adventurous"
        },
        {
            "id": 13,
            "name": "has_passion"
        },
        {
            "id": 14,
            "name": "loves_nature"
        },
        {
            "id": 15,
            "name": "lives_simply"
        },
        {
            "id": 16,
            "name": "eats_healthily"
        },
        {
            "id": 17,
            "name": "applies_product"
        },
        {
            "id": 18,
            "name": "has_support"
        },
        {
            "id": 19,
            "name": "finds_success"
        },
        {
            "id": 20,
            "name": "eats_healthy"
        },
        {
            "id": 21,
            "name": "exercises_regularly"
        },
        {
            "id": 22,
            "name": "seeks_thrills"
        },
        {
            "id": 23,
            "name": "travels_widely"
        },
        {
            "id": 24,
            "name": "sets_goals"
        },
        {
            "id": 25,
            "name": "makes_plans"
        },
        {
            "id": 26,
            "name": "hikes_trails"
        },
        {
            "id": 27,
            "name": "explores_outdoors"
        }
    ],
    "subject_name": "Paisley",
    "subject_category": "human",
    "keyword": "antiperspirant",
    "all_facts": [
        {
            "id": 0,
            "subject": "Paisley",
            "text": "Paisley does not climb fearlessly.",
            "fol": "\u00acp_0(Paisley)",
            "str_fol": "\u00acclimbs_fearless(Paisley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Paisley",
            "text": "Paisley faces challenges.",
            "fol": "p_1(Paisley)",
            "str_fol": "faces_challenges(Paisley)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Paisley",
            "text": "Paisley does not inspire others.",
            "fol": "\u00acp_2(Paisley)",
            "str_fol": "\u00acinspires_others(Paisley)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Paisley",
            "text": "Paisley does not play sports.",
            "fol": "\u00acp_3(Paisley)",
            "str_fol": "\u00acplays_sports(Paisley)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Paisley",
            "text": "Paisley enjoys hiking.",
            "fol": "p_4(Paisley)",
            "str_fol": "enjoys_hiking(Paisley)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Paisley",
            "text": "Paisley does not value freedom.",
            "fol": "\u00acp_5(Paisley)",
            "str_fol": "\u00acvalues_freedom(Paisley)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Paisley",
            "text": "Paisley loves nature.",
            "fol": "p_14(Paisley)",
            "str_fol": "loves_nature(Paisley)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Paisley",
            "text": "Paisley has passion.",
            "fol": "p_13(Paisley)",
            "str_fol": "has_passion(Paisley)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Paisley",
            "text": "Paisley is not adventurous.",
            "fol": "\u00acp_12(Paisley)",
            "str_fol": "\u00acis_adventurous(Paisley)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Paisley",
            "text": "Paisley takes risks.",
            "fol": "p_11(Paisley)",
            "str_fol": "takes_risks(Paisley)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Paisley",
            "text": "Paisley is active.",
            "fol": "p_8(Paisley)",
            "str_fol": "is_active(Paisley)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Paisley",
            "text": "Paisley does not feel confident.",
            "fol": "\u00acp_10(Paisley)",
            "str_fol": "\u00acfeels_confident(Paisley)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Paisley",
            "text": "Paisley does not stay dry.",
            "fol": "\u00acp_9(Paisley)",
            "str_fol": "\u00acstays_dry(Paisley)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Paisley",
            "text": "Paisley does not use antiperspirant.",
            "fol": "p_7(Paisley)",
            "str_fol": "does_not_use_antiperspirant(Paisley)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Paisley",
            "text": "Paisley does not use antiperspirant.",
            "fol": "\u00acp_6(Paisley)",
            "str_fol": "\u00acuses_antiperspirant(Paisley)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Paisley",
            "text": "Paisley enjoys hiking.",
            "fol": "p_4(Paisley)",
            "str_fol": "enjoys_hiking(Paisley)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Paisley",
            "text": "Paisley does not value freedom.",
            "fol": "\u00acp_5(Paisley)",
            "str_fol": "\u00acvalues_freedom(Paisley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Paisley",
            "text": "Paisley does not inspire others.",
            "fol": "\u00acp_2(Paisley)",
            "str_fol": "\u00acinspires_others(Paisley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Paisley",
            "text": "Paisley faces challenges.",
            "fol": "p_1(Paisley)",
            "str_fol": "faces_challenges(Paisley)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Paisley",
            "text": "Paisley does not play sports.",
            "fol": "\u00acp_3(Paisley)",
            "str_fol": "\u00acplays_sports(Paisley)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Paisley",
            "text": "Paisley does not climb fearlessly.",
            "fol": "\u00acp_0(Paisley)",
            "str_fol": "\u00acclimbs_fearless(Paisley)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Paisley either enjoys hiking or loves nature (but not both), then she values freedom.",
            "fol": "(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)",
            "str_fol": "(enjoys_hiking(Paisley) \u2295 loves_nature(Paisley)) \u2192 values_freedom(Paisley)"
        },
        {
            "id": 7,
            "text": "Everyone who loves nature has passion.",
            "fol": "\u2200x (p_14(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (loves_nature(x) \u2192 has_passion(x))"
        },
        {
            "id": 6,
            "text": "If someone is adventurous and has passion, then they inspire others.",
            "fol": "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((is_adventurous(x) \u2227 has_passion(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 5,
            "text": "If Paisley either takes risks or faces challenges (but not both), then she is adventurous.",
            "fol": "(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)",
            "str_fol": "(takes_risks(Paisley) \u2295 faces_challenges(Paisley)) \u2192 is_adventurous(Paisley)"
        },
        {
            "id": 4,
            "text": "Paisley is either active or plays sports.",
            "fol": "p_8(Paisley) \u2228 p_3(Paisley)",
            "str_fol": "is_active(Paisley) \u2228 plays_sports(Paisley)"
        },
        {
            "id": 3,
            "text": "For Paisley, either she takes risks or feels confident, but not necessarily both.",
            "fol": "p_11(Paisley) \u2295 p_10(Paisley)",
            "str_fol": "takes_risks(Paisley) \u2295 feels_confident(Paisley)"
        },
        {
            "id": 2,
            "text": "If Paisley stays dry, then she feels confident or climbs fearlessly (or both).",
            "fol": "p_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))",
            "str_fol": "stays_dry(Paisley) \u2192 (feels_confident(Paisley) \u2228 climbs_fearless(Paisley))"
        },
        {
            "id": 1,
            "text": "If Paisley is active, then she either does not use antiperspirant or stays dry, but not both.",
            "fol": "p_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))",
            "str_fol": "is_active(Paisley) \u2192 (does_not_use_antiperspirant(Paisley) \u2295 stays_dry(Paisley))"
        },
        {
            "id": 0,
            "text": "For every human, they either use antiperspirant or do not use antiperspirant, but not both.",
            "fol": "\u2200x (p_6(x) \u2295 p_7(x))",
            "str_fol": "\u2200x (uses_antiperspirant(x) \u2295 does_not_use_antiperspirant(x))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Paisley",
            "text": "Paisley enjoys hiking.",
            "fol": "p_4(Paisley)",
            "str_fol": "enjoys_hiking(Paisley)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Paisley",
            "text": "Paisley does not value freedom.",
            "fol": "\u00acp_5(Paisley)",
            "str_fol": "\u00acvalues_freedom(Paisley)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Paisley",
            "text": "Paisley does not inspire others.",
            "fol": "\u00acp_2(Paisley)",
            "str_fol": "\u00acinspires_others(Paisley)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Paisley",
            "text": "Paisley faces challenges.",
            "fol": "p_1(Paisley)",
            "str_fol": "faces_challenges(Paisley)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Paisley",
            "text": "Paisley does not play sports.",
            "fol": "\u00acp_3(Paisley)",
            "str_fol": "\u00acplays_sports(Paisley)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Paisley",
            "text": "Paisley does not climb fearlessly.",
            "fol": "\u00acp_0(Paisley)",
            "str_fol": "\u00acclimbs_fearless(Paisley)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Paisley either enjoys hiking or loves nature (but not both), then she values freedom.",
            "fol": "(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)",
            "str_fol": "(enjoys_hiking(Paisley) \u2295 loves_nature(Paisley)) \u2192 values_freedom(Paisley)"
        },
        {
            "id": 7,
            "text": "Everyone who loves nature has passion.",
            "fol": "\u2200x (p_14(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (loves_nature(x) \u2192 has_passion(x))"
        },
        {
            "id": 6,
            "text": "If someone is adventurous and has passion, then they inspire others.",
            "fol": "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((is_adventurous(x) \u2227 has_passion(x)) \u2192 inspires_others(x))"
        },
        {
            "id": 5,
            "text": "If Paisley either takes risks or faces challenges (but not both), then she is adventurous.",
            "fol": "(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)",
            "str_fol": "(takes_risks(Paisley) \u2295 faces_challenges(Paisley)) \u2192 is_adventurous(Paisley)"
        },
        {
            "id": 4,
            "text": "Paisley is either active or plays sports.",
            "fol": "p_8(Paisley) \u2228 p_3(Paisley)",
            "str_fol": "is_active(Paisley) \u2228 plays_sports(Paisley)"
        },
        {
            "id": 3,
            "text": "For Paisley, either she takes risks or feels confident, but not necessarily both.",
            "fol": "p_11(Paisley) \u2295 p_10(Paisley)",
            "str_fol": "takes_risks(Paisley) \u2295 feels_confident(Paisley)"
        },
        {
            "id": 2,
            "text": "If Paisley stays dry, then she feels confident or climbs fearlessly (or both).",
            "fol": "p_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))",
            "str_fol": "stays_dry(Paisley) \u2192 (feels_confident(Paisley) \u2228 climbs_fearless(Paisley))"
        },
        {
            "id": 1,
            "text": "If Paisley is active, then she either does not use antiperspirant or stays dry, but not both.",
            "fol": "p_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))",
            "str_fol": "is_active(Paisley) \u2192 (does_not_use_antiperspirant(Paisley) \u2295 stays_dry(Paisley))"
        },
        {
            "id": 0,
            "text": "For every human, they either use antiperspirant or do not use antiperspirant, but not both.",
            "fol": "\u2200x (p_6(x) \u2295 p_7(x))",
            "str_fol": "\u2200x (uses_antiperspirant(x) \u2295 does_not_use_antiperspirant(x))"
        }
    ],
    "context_fol": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)\np_8(Paisley) \u2228 p_3(Paisley)\np_11(Paisley) \u2295 p_10(Paisley)\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))\n\u2200x (p_6(x) \u2295 p_7(x))",
    "conclusion": {
        "id": 13,
        "subject": "Paisley",
        "text": "Paisley does not use antiperspirant.",
        "fol": "p_7(Paisley)",
        "str_fol": "does_not_use_antiperspirant(Paisley)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_7(Paisley)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Paisley",
                    "text": "Paisley enjoys hiking.",
                    "fol": "p_4(Paisley)",
                    "str_fol": "enjoys_hiking(Paisley)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Paisley",
                    "text": "Paisley does not value freedom.",
                    "fol": "\u00acp_5(Paisley)",
                    "str_fol": "\u00acvalues_freedom(Paisley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Paisley either enjoys hiking or loves nature (but not both), then she values freedom.",
                    "fol": "(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)",
                    "str_fol": "(enjoys_hiking(Paisley) \u2295 loves_nature(Paisley)) \u2192 values_freedom(Paisley)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Paisley",
                "text": "Paisley loves nature.",
                "fol": "p_14(Paisley)",
                "str_fol": "loves_nature(Paisley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Paisley",
                    "text": "Paisley loves nature.",
                    "fol": "p_14(Paisley)",
                    "str_fol": "loves_nature(Paisley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Everyone who loves nature has passion.",
                    "fol": "\u2200x (p_14(x) \u2192 p_13(x))",
                    "str_fol": "\u2200x (loves_nature(x) \u2192 has_passion(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Paisley",
                "text": "Paisley has passion.",
                "fol": "p_13(Paisley)",
                "str_fol": "has_passion(Paisley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Paisley",
                    "text": "Paisley has passion.",
                    "fol": "p_13(Paisley)",
                    "str_fol": "has_passion(Paisley)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Paisley",
                    "text": "Paisley does not inspire others.",
                    "fol": "\u00acp_2(Paisley)",
                    "str_fol": "\u00acinspires_others(Paisley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If someone is adventurous and has passion, then they inspire others.",
                    "fol": "\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((is_adventurous(x) \u2227 has_passion(x)) \u2192 inspires_others(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Paisley",
                "text": "Paisley is not adventurous.",
                "fol": "\u00acp_12(Paisley)",
                "str_fol": "\u00acis_adventurous(Paisley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Paisley",
                    "text": "Paisley faces challenges.",
                    "fol": "p_1(Paisley)",
                    "str_fol": "faces_challenges(Paisley)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Paisley",
                    "text": "Paisley is not adventurous.",
                    "fol": "\u00acp_12(Paisley)",
                    "str_fol": "\u00acis_adventurous(Paisley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Paisley either takes risks or faces challenges (but not both), then she is adventurous.",
                    "fol": "(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)",
                    "str_fol": "(takes_risks(Paisley) \u2295 faces_challenges(Paisley)) \u2192 is_adventurous(Paisley)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Paisley",
                "text": "Paisley takes risks.",
                "fol": "p_11(Paisley)",
                "str_fol": "takes_risks(Paisley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Paisley",
                    "text": "Paisley does not play sports.",
                    "fol": "\u00acp_3(Paisley)",
                    "str_fol": "\u00acplays_sports(Paisley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Paisley is either active or plays sports.",
                    "fol": "p_8(Paisley) \u2228 p_3(Paisley)",
                    "str_fol": "is_active(Paisley) \u2228 plays_sports(Paisley)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Paisley",
                "text": "Paisley is active.",
                "fol": "p_8(Paisley)",
                "str_fol": "is_active(Paisley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Paisley",
                    "text": "Paisley takes risks.",
                    "fol": "p_11(Paisley)",
                    "str_fol": "takes_risks(Paisley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "For Paisley, either she takes risks or feels confident, but not necessarily both.",
                    "fol": "p_11(Paisley) \u2295 p_10(Paisley)",
                    "str_fol": "takes_risks(Paisley) \u2295 feels_confident(Paisley)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Paisley",
                "text": "Paisley does not feel confident.",
                "fol": "\u00acp_10(Paisley)",
                "str_fol": "\u00acfeels_confident(Paisley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Paisley",
                    "text": "Paisley does not feel confident.",
                    "fol": "\u00acp_10(Paisley)",
                    "str_fol": "\u00acfeels_confident(Paisley)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Paisley",
                    "text": "Paisley does not climb fearlessly.",
                    "fol": "\u00acp_0(Paisley)",
                    "str_fol": "\u00acclimbs_fearless(Paisley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Paisley stays dry, then she feels confident or climbs fearlessly (or both).",
                    "fol": "p_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))",
                    "str_fol": "stays_dry(Paisley) \u2192 (feels_confident(Paisley) \u2228 climbs_fearless(Paisley))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Paisley",
                "text": "Paisley does not stay dry.",
                "fol": "\u00acp_9(Paisley)",
                "str_fol": "\u00acstays_dry(Paisley)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Paisley",
                    "text": "Paisley is active.",
                    "fol": "p_8(Paisley)",
                    "str_fol": "is_active(Paisley)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Paisley",
                    "text": "Paisley does not stay dry.",
                    "fol": "\u00acp_9(Paisley)",
                    "str_fol": "\u00acstays_dry(Paisley)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Paisley is active, then she either does not use antiperspirant or stays dry, but not both.",
                    "fol": "p_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))",
                    "str_fol": "is_active(Paisley) \u2192 (does_not_use_antiperspirant(Paisley) \u2295 stays_dry(Paisley))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Paisley",
                "text": "Paisley does not use antiperspirant.",
                "fol": "p_7(Paisley)",
                "str_fol": "does_not_use_antiperspirant(Paisley)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Paisley",
                    "text": "Paisley does not use antiperspirant.",
                    "fol": "p_7(Paisley)",
                    "str_fol": "does_not_use_antiperspirant(Paisley)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For every human, they either use antiperspirant or do not use antiperspirant, but not both.",
                    "fol": "\u2200x (p_6(x) \u2295 p_7(x))",
                    "str_fol": "\u2200x (uses_antiperspirant(x) \u2295 does_not_use_antiperspirant(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Paisley",
                "text": "Paisley does not use antiperspirant.",
                "fol": "p_7(Paisley)",
                "str_fol": "does_not_use_antiperspirant(Paisley)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_4(Paisley) <-> p_14(Paisley)) -> p_5(Paisley).  [assumption].\n2 (all x (p_14(x) -> p_13(x))).  [assumption].\n3 (all x (p_12(x) & p_13(x) -> p_2(x))).  [assumption].\n4 -(p_11(Paisley) <-> p_1(Paisley)) -> p_12(Paisley).  [assumption].\n5 -(p_11(Paisley) <-> p_10(Paisley)).  [assumption].\n6 p_9(Paisley) -> p_10(Paisley) | p_0(Paisley).  [assumption].\n7 p_8(Paisley) -> -(p_7(Paisley) <-> p_9(Paisley)).  [assumption].\n9 p_7(Paisley).  [goal].\n10 -p_4(Paisley) | p_14(Paisley) | p_5(Paisley).  [clausify(1)].\n11 p_4(Paisley).  [assumption].\n13 p_14(Paisley) | p_5(Paisley).  [resolve(10,a,11,a)].\n14 -p_5(Paisley).  [assumption].\n15 -p_12(x) | -p_13(x) | p_2(x).  [clausify(3)].\n16 -p_2(Paisley).  [assumption].\n17 p_11(Paisley) | -p_1(Paisley) | p_12(Paisley).  [clausify(4)].\n18 p_1(Paisley).  [assumption].\n20 p_8(Paisley) | p_3(Paisley).  [assumption].\n21 -p_3(Paisley).  [assumption].\n22 -p_9(Paisley) | p_10(Paisley) | p_0(Paisley).  [clausify(6)].\n23 -p_0(Paisley).  [assumption].\n24 p_14(Paisley).  [resolve(13,b,14,a)].\n25 -p_14(x) | p_13(x).  [clausify(2)].\n26 -p_11(Paisley) | -p_10(Paisley).  [clausify(5)].\n28 p_11(Paisley) | p_12(Paisley).  [resolve(17,b,18,a)].\n29 p_8(Paisley).  [resolve(20,b,21,a)].\n30 -p_8(Paisley) | p_7(Paisley) | p_9(Paisley).  [clausify(7)].\n34 p_7(Paisley) | p_9(Paisley).  [resolve(29,a,30,a)].\n35 -p_7(Paisley).  [deny(9)].\n37 p_12(Paisley) | -p_10(Paisley).  [resolve(28,a,26,a)].\n38 -p_12(Paisley) | -p_13(Paisley).  [resolve(15,c,16,a)].\n39 p_9(Paisley).  [resolve(34,a,35,a)].\n40 -p_9(Paisley) | p_10(Paisley).  [resolve(22,c,23,a)].\n41 -p_10(Paisley) | -p_13(Paisley).  [resolve(37,a,38,a)].\n42 p_13(Paisley).  [resolve(24,a,25,a)].\n43 -p_10(Paisley).  [resolve(41,b,42,a)].\n44 p_10(Paisley).  [resolve(39,a,40,a)].\n45 $F.  [resolve(43,a,44,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)\np_8(Paisley) \u2228 p_3(Paisley)\np_11(Paisley) \u2295 p_10(Paisley)\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))\n\u2200x (p_6(x) \u2295 p_7(x))",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley).",
                    "-p_5(Paisley).",
                    "-p_2(Paisley).",
                    "p_1(Paisley).",
                    "-p_3(Paisley).",
                    "-p_0(Paisley).",
                    "(-(p_4(Paisley) <-> p_14(Paisley))) -> p_5(Paisley).",
                    "all x (p_14(x) -> p_13(x)).",
                    "all x ((p_12(x) & p_13(x)) -> p_2(x)).",
                    "(-(p_11(Paisley) <-> p_1(Paisley))) -> p_12(Paisley).",
                    "p_8(Paisley) | p_3(Paisley).",
                    "-(p_11(Paisley) <-> p_10(Paisley)).",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley)).",
                    "p_8(Paisley) -> (-(p_7(Paisley) <-> p_9(Paisley))).",
                    "all x (-(p_6(x) <-> p_7(x)))."
                ],
                "formulas(goals)": [
                    "p_7(Paisley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)\n\u00acp_3(Paisley) \u2192 p_8(Paisley)\np_11(Paisley) \u2295 p_10(Paisley)\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))\n\u2200x (p_6(x) \u2295 p_7(x))\np_7(Paisley)\n\u00acp_6(Paisley)",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley)",
                    "-p_5(Paisley)",
                    "-p_2(Paisley)",
                    "p_1(Paisley)",
                    "-p_3(Paisley)",
                    "-p_0(Paisley)",
                    "(-(p_4(Paisley) <-> p_14(Paisley))) -> p_5(Paisley)",
                    "all x (p_14(x) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x)) -> p_2(x))",
                    "(-(p_11(Paisley) <-> p_1(Paisley))) -> p_12(Paisley)",
                    "(-p_3(Paisley)) -> p_8(Paisley)",
                    "-(p_11(Paisley) <-> p_10(Paisley))",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley))",
                    "p_8(Paisley) -> (-(p_7(Paisley) <-> p_9(Paisley)))",
                    "all x (-(p_6(x) <-> p_7(x)))",
                    "p_7(Paisley)",
                    "-p_6(Paisley)"
                ],
                "formulas(goals)": [
                    "p_7(Paisley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Paisley) \u2228 p_3(Paisley)"
                ],
                "added_facts": [
                    "p_7(Paisley)",
                    "\u00acp_6(Paisley)"
                ],
                "added_rules": [
                    "\u00acp_3(Paisley) \u2192 p_8(Paisley)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)\n\u00acp_3(Paisley) \u2192 p_8(Paisley)\np_11(Paisley) \u2295 p_10(Paisley)\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))\n\u2200x (p_6(x) \u2295 p_7(x))\np_6(Paisley)",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley).",
                    "-p_5(Paisley).",
                    "-p_2(Paisley).",
                    "p_1(Paisley).",
                    "-p_3(Paisley).",
                    "-p_0(Paisley).",
                    "(-(p_4(Paisley) <-> p_14(Paisley))) -> p_5(Paisley).",
                    "all x (p_14(x) -> p_13(x)).",
                    "all x ((p_12(x) & p_13(x)) -> p_2(x)).",
                    "(-(p_11(Paisley) <-> p_1(Paisley))) -> p_12(Paisley).",
                    "-p_3(Paisley) -> p_8(Paisley).",
                    "(-(p_11(Paisley) <-> p_10(Paisley))).",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley)).",
                    "p_8(Paisley) -> (-(p_7(Paisley) <-> p_9(Paisley))).",
                    "all x (-(p_6(x) <-> p_7(x))).",
                    "p_6(Paisley)."
                ],
                "formulas(goals)": [
                    "-p_7(Paisley)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_7(Paisley)",
                    "\u00acp_6(Paisley)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Paisley)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n(p_4(Paisley) \u2295 p_14(Paisley)) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)\n\u00acp_3(Paisley) \u2192 p_8(Paisley)\np_11(Paisley) \u2295 p_10(Paisley)\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 (p_7(Paisley) \u2295 p_9(Paisley))\n\u2200x (p_6(x) \u2295 p_7(x))\np_1(Paisley) \u2192 p_7(Paisley)",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley)",
                    "-p_5(Paisley)",
                    "-p_2(Paisley)",
                    "p_1(Paisley)",
                    "-p_3(Paisley)",
                    "-p_0(Paisley)",
                    "(-(p_4(Paisley) <-> p_14(Paisley))) -> p_5(Paisley)",
                    "all x (p_14(x) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x)) -> p_2(x))",
                    "(-(p_11(Paisley) <-> p_1(Paisley))) -> p_12(Paisley)",
                    "-p_3(Paisley) -> p_8(Paisley)",
                    "-(p_11(Paisley) <-> p_10(Paisley))",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley))",
                    "p_8(Paisley) -> (-(p_7(Paisley) <-> p_9(Paisley)))",
                    "all x (-(p_6(x) <-> p_7(x)))",
                    "p_1(Paisley) -> p_7(Paisley)"
                ],
                "formulas(goals)": [
                    "p_7(Paisley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Paisley)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_1(Paisley) \u2192 p_7(Paisley)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n((p_4(Paisley) \u2228 p_14(Paisley)) \u2227 \u00ac(p_4(Paisley) \u2227 p_14(Paisley))) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)\n\u00acp_3(Paisley) \u2192 p_8(Paisley)\n(p_11(Paisley) \u2228 p_10(Paisley)) \u2227 \u00ac(p_11(Paisley) \u2227 p_10(Paisley))\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 ((p_7(Paisley) \u2228 p_9(Paisley)) \u2227 \u00ac(p_7(Paisley) \u2227 p_9(Paisley)))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2227 \u00ac(p_6(x) \u2227 p_7(x)))\np_1(Paisley) \u2192 p_7(Paisley)\n\u00acp_7(Paisley) \u2192 \u00acp_1(Paisley)\np_8(Paisley)",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley)",
                    "-p_5(Paisley)",
                    "-p_2(Paisley)",
                    "p_1(Paisley)",
                    "-p_3(Paisley)",
                    "-p_0(Paisley)",
                    "((p_4(Paisley) | p_14(Paisley)) & (-(p_4(Paisley) & p_14(Paisley)))) -> p_5(Paisley)",
                    "all x (p_14(x) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x)) -> p_2(x))",
                    "(-(p_11(Paisley) <-> p_1(Paisley))) -> p_12(Paisley)",
                    "-p_3(Paisley) -> p_8(Paisley)",
                    "(p_11(Paisley) | p_10(Paisley)) & (-(p_11(Paisley) & p_10(Paisley)))",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley))",
                    "p_8(Paisley) -> ((p_7(Paisley) | p_9(Paisley)) & (-(p_7(Paisley) & p_9(Paisley))))",
                    "all x ((p_6(x) | p_7(x)) & (-(p_6(x) & p_7(x))))",
                    "p_1(Paisley) -> p_7(Paisley)",
                    "-p_7(Paisley) -> -p_1(Paisley)",
                    "p_8(Paisley)"
                ],
                "formulas(goals)": [
                    "p_7(Paisley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Paisley)"
                ],
                "added_rules": [
                    "((p_4(Paisley) \u2228 p_14(Paisley)) \u2227 \u00ac(p_4(Paisley) \u2227 p_14(Paisley))) \u2192 p_5(Paisley)",
                    "(p_11(Paisley) \u2228 p_10(Paisley)) \u2227 \u00ac(p_11(Paisley) \u2227 p_10(Paisley))",
                    "p_8(Paisley) \u2192 ((p_7(Paisley) \u2228 p_9(Paisley)) \u2227 \u00ac(p_7(Paisley) \u2227 p_9(Paisley)))",
                    "\u2200x ((p_6(x) \u2228 p_7(x)) \u2227 \u00ac(p_6(x) \u2227 p_7(x)))",
                    "\u00acp_7(Paisley) \u2192 \u00acp_1(Paisley)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n((p_4(Paisley) \u2228 p_14(Paisley)) \u2227 \u00ac(p_4(Paisley) \u2227 p_14(Paisley))) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n\u00acp_3(Paisley) \u2192 p_8(Paisley)\n(p_11(Paisley) \u2228 p_10(Paisley)) \u2227 \u00ac(p_11(Paisley) \u2227 p_10(Paisley))\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 ((p_7(Paisley) \u2228 p_9(Paisley)) \u2227 \u00ac(p_7(Paisley) \u2227 p_9(Paisley)))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2227 \u00ac(p_6(x) \u2227 p_7(x)))\np_8(Paisley)\np_1(Paisley) \u2192 p_6(Paisley)\np_8(Paisley) \u2192 p_6(Paisley)",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley)",
                    "-p_5(Paisley)",
                    "-p_2(Paisley)",
                    "p_1(Paisley)",
                    "-p_3(Paisley)",
                    "-p_0(Paisley)",
                    "((p_4(Paisley) | p_14(Paisley)) & -(p_4(Paisley) & p_14(Paisley))) -> p_5(Paisley)",
                    "all x (p_14(x) -> p_13(x))",
                    "all x ((p_12(x) & p_13(x)) -> p_2(x))",
                    "-p_3(Paisley) -> p_8(Paisley)",
                    "(p_11(Paisley) | p_10(Paisley)) & -(p_11(Paisley) & p_10(Paisley))",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley))",
                    "p_8(Paisley) -> ((p_7(Paisley) | p_9(Paisley)) & -(p_7(Paisley) & p_9(Paisley)))",
                    "all x ((p_6(x) | p_7(x)) & -(p_6(x) & p_7(x)))",
                    "p_8(Paisley)",
                    "p_1(Paisley) -> p_6(Paisley)",
                    "p_8(Paisley) -> p_6(Paisley)"
                ],
                "formulas(goals)": [
                    "-p_7(Paisley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_11(Paisley) \u2295 p_1(Paisley)) \u2192 p_12(Paisley)",
                    "p_1(Paisley) \u2192 p_7(Paisley)",
                    "\u00acp_7(Paisley) \u2192 \u00acp_1(Paisley)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Paisley) \u2192 p_6(Paisley)",
                    "p_1(Paisley) \u2192 p_6(Paisley)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Paisley)\n\u00acp_5(Paisley)\n\u00acp_2(Paisley)\np_1(Paisley)\n\u00acp_3(Paisley)\n\u00acp_0(Paisley)\n((p_4(Paisley) \u2228 p_14(Paisley)) \u2227 \u00ac(p_4(Paisley) \u2227 p_14(Paisley))) \u2192 p_5(Paisley)\n\u2200x (p_14(x) \u2192 p_13(x))\n\u2200x ((p_12(x) \u2227 p_13(x)) \u2192 p_2(x))\n\u00acp_3(Paisley) \u2192 p_8(Paisley)\n(p_11(Paisley) \u2228 p_10(Paisley)) \u2227 \u00ac(p_11(Paisley) \u2227 p_10(Paisley))\np_9(Paisley) \u2192 (p_10(Paisley) \u2228 p_0(Paisley))\np_8(Paisley) \u2192 ((p_7(Paisley) \u2228 p_9(Paisley)) \u2227 \u00ac(p_7(Paisley) \u2227 p_9(Paisley)))\n\u2200x ((p_6(x) \u2228 p_7(x)) \u2227 \u00ac(p_6(x) \u2227 p_7(x)))\np_8(Paisley)\np_1(Paisley) \u2192 \u00acp_6(Paisley)",
            "Initial Goal": "p_7(Paisley)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Paisley)",
                    "-p_5(Paisley)",
                    "-p_2(Paisley)",
                    "p_1(Paisley)",
                    "-p_3(Paisley)",
                    "-p_0(Paisley)",
                    "( (p_4(Paisley) | p_14(Paisley)) & -(p_4(Paisley) & p_14(Paisley)) ) -> p_5(Paisley)",
                    "all x (p_14(x) -> p_13(x))",
                    "all x ( (p_12(x) & p_13(x)) -> p_2(x) )",
                    "-p_3(Paisley) -> p_8(Paisley)",
                    "(p_11(Paisley) | p_10(Paisley)) & -(p_11(Paisley) & p_10(Paisley))",
                    "p_9(Paisley) -> (p_10(Paisley) | p_0(Paisley))",
                    "p_8(Paisley) -> ( (p_7(Paisley) | p_9(Paisley)) & -(p_7(Paisley) & p_9(Paisley)) )",
                    "all x ( (p_6(x) | p_7(x)) & -(p_6(x) & p_7(x)) )",
                    "p_8(Paisley)",
                    "p_1(Paisley) -> -p_6(Paisley)"
                ],
                "formulas(goals)": [
                    "p_7(Paisley)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_1(Paisley) \u2192 p_6(Paisley)",
                    "p_8(Paisley) \u2192 p_6(Paisley)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_1(Paisley) \u2192 \u00acp_6(Paisley)"
                ]
            }
        }
    ]
}