{
    "background_story": "Raina, a 35-year-old nurse, had been experiencing persistent fatigue and unexplained weight gain. After a series of tests, she was diagnosed with a pituitary adenoma, a type of non-cancerous tumor that affects hormone production. Despite the initial shock, Raina faced her condition with courage and determination. She underwent surgery to remove the tumor and began a long journey of recovery. With the support of her loved ones and medical team, Raina learned to manage her condition and adapt to the changes in her body. She became an advocate for awareness about pituitary adenomas, using her experience to help others navigate the challenges of living with this condition. Raina's resilience and strength inspired those around her, and she continued to thrive, both personally and professionally.",
    "predicates": [
        {
            "id": 0,
            "name": "helps_others"
        },
        {
            "id": 1,
            "name": "faces_challenges"
        },
        {
            "id": 2,
            "name": "copes_well"
        },
        {
            "id": 3,
            "name": "eats_well"
        },
        {
            "id": 4,
            "name": "active_lifestyle"
        },
        {
            "id": 5,
            "name": "has_support"
        },
        {
            "id": 6,
            "name": "is_relaxed"
        },
        {
            "id": 7,
            "name": "healthy"
        },
        {
            "id": 8,
            "name": "injured"
        },
        {
            "id": 9,
            "name": "resilient"
        },
        {
            "id": 10,
            "name": "thrives"
        },
        {
            "id": 11,
            "name": "strong_will"
        },
        {
            "id": 12,
            "name": "feels_happy"
        },
        {
            "id": 13,
            "name": "exercises_regularly"
        },
        {
            "id": 14,
            "name": "manages_stress"
        },
        {
            "id": 15,
            "name": "adapts_quickly"
        },
        {
            "id": 16,
            "name": "bounces_back"
        },
        {
            "id": 17,
            "name": "stays_positive"
        },
        {
            "id": 18,
            "name": "gets_enough_sleep"
        },
        {
            "id": 19,
            "name": "lives_stressfree"
        },
        {
            "id": 20,
            "name": "has_balance"
        }
    ],
    "subject_name": "Raina",
    "subject_category": "human",
    "keyword": "adenoma",
    "all_facts": [
        {
            "id": 0,
            "subject": "Raina",
            "text": "Raina does not help others.",
            "fol": "\u00acp_0(Raina)",
            "str_fol": "\u00achelps_others(Raina)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Raina",
            "text": "Raina does not face challenges head-on.",
            "fol": "\u00acp_1(Raina)",
            "str_fol": "\u00acfaces_challenges(Raina)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Raina",
            "text": "Raina copes well with challenges.",
            "fol": "p_2(Raina)",
            "str_fol": "copes_well(Raina)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Raina",
            "text": "Raina eats well.",
            "fol": "p_3(Raina)",
            "str_fol": "eats_well(Raina)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Raina",
            "text": "Raina does not have an active lifestyle.",
            "fol": "\u00acp_4(Raina)",
            "str_fol": "\u00acactive_lifestyle(Raina)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Raina",
            "text": "Raina does not have support.",
            "fol": "\u00acp_5(Raina)",
            "str_fol": "\u00achas_support(Raina)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Raina",
            "text": "Raina is not relaxed.",
            "fol": "\u00acp_6(Raina)",
            "str_fol": "\u00acis_relaxed(Raina)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Raina",
            "text": "Raina does not feel happy.",
            "fol": "\u00acp_12(Raina)",
            "str_fol": "\u00acfeels_happy(Raina)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Raina",
            "text": "Raina does not thrive.",
            "fol": "\u00acp_10(Raina)",
            "str_fol": "\u00acthrives(Raina)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Raina",
            "text": "Raina does not have a strong will.",
            "fol": "\u00acp_11(Raina)",
            "str_fol": "\u00acstrong_will(Raina)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Raina",
            "text": "Raina is not resilient.",
            "fol": "\u00acp_9(Raina)",
            "str_fol": "\u00acresilient(Raina)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Raina",
            "text": "Raina is not healthy.",
            "fol": "\u00acp_7(Raina)",
            "str_fol": "\u00achealthy(Raina)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Raina",
            "text": "Raina is not injured.",
            "fol": "\u00acp_8(Raina)",
            "str_fol": "\u00acinjured(Raina)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Raina",
            "text": "Raina does not have support.",
            "fol": "\u00acp_5(Raina)",
            "str_fol": "\u00achas_support(Raina)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Raina",
            "text": "Raina is not relaxed.",
            "fol": "\u00acp_6(Raina)",
            "str_fol": "\u00acis_relaxed(Raina)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Raina",
            "text": "Raina eats well.",
            "fol": "p_3(Raina)",
            "str_fol": "eats_well(Raina)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Raina",
            "text": "Raina does not face challenges head-on.",
            "fol": "\u00acp_1(Raina)",
            "str_fol": "\u00acfaces_challenges(Raina)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Raina",
            "text": "Raina does not help others.",
            "fol": "\u00acp_0(Raina)",
            "str_fol": "\u00achelps_others(Raina)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Raina",
            "text": "Raina copes well with challenges.",
            "fol": "p_2(Raina)",
            "str_fol": "copes_well(Raina)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Raina",
            "text": "Raina does not have an active lifestyle.",
            "fol": "\u00acp_4(Raina)",
            "str_fol": "\u00acactive_lifestyle(Raina)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Raina feels happy, then she either has support or is relaxed, but not both.",
            "fol": "p_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))",
            "str_fol": "feels_happy(Raina) \u2192 (has_support(Raina) \u2295 is_relaxed(Raina))"
        },
        {
            "id": 4,
            "text": "If a person eats well and thrives, then they feel happy.",
            "fol": "\u2200x ((p_3(x) \u2227 p_10(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((eats_well(x) \u2227 thrives(x)) \u2192 feels_happy(x))"
        },
        {
            "id": 3,
            "text": "Anyone with a strong will either faces challenges head-on or helps others (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (strong_will(x) \u2192 (faces_challenges(x) \u2228 helps_others(x)))"
        },
        {
            "id": 2,
            "text": "If someone is resilient, then they have a strong will and cope well with challenges.",
            "fol": "\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))",
            "str_fol": "\u2200x (resilient(x) \u2192 (strong_will(x) \u2227 copes_well(x)))"
        },
        {
            "id": 1,
            "text": "If Raina either has an active lifestyle or is healthy (but not both), then she thrives.",
            "fol": "(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)",
            "str_fol": "(active_lifestyle(Raina) \u2295 healthy(Raina)) \u2192 thrives(Raina)"
        },
        {
            "id": 0,
            "text": "If Raina is either healthy or injured (but not both), then she can be resilient.",
            "fol": "(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)",
            "str_fol": "(healthy(Raina) \u2295 injured(Raina)) \u2192 resilient(Raina)"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Raina",
            "text": "Raina does not have support.",
            "fol": "\u00acp_5(Raina)",
            "str_fol": "\u00achas_support(Raina)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Raina",
            "text": "Raina is not relaxed.",
            "fol": "\u00acp_6(Raina)",
            "str_fol": "\u00acis_relaxed(Raina)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Raina",
            "text": "Raina eats well.",
            "fol": "p_3(Raina)",
            "str_fol": "eats_well(Raina)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Raina",
            "text": "Raina does not face challenges head-on.",
            "fol": "\u00acp_1(Raina)",
            "str_fol": "\u00acfaces_challenges(Raina)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Raina",
            "text": "Raina does not help others.",
            "fol": "\u00acp_0(Raina)",
            "str_fol": "\u00achelps_others(Raina)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Raina",
            "text": "Raina copes well with challenges.",
            "fol": "p_2(Raina)",
            "str_fol": "copes_well(Raina)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Raina",
            "text": "Raina does not have an active lifestyle.",
            "fol": "\u00acp_4(Raina)",
            "str_fol": "\u00acactive_lifestyle(Raina)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Raina feels happy, then she either has support or is relaxed, but not both.",
            "fol": "p_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))",
            "str_fol": "feels_happy(Raina) \u2192 (has_support(Raina) \u2295 is_relaxed(Raina))"
        },
        {
            "id": 4,
            "text": "If a person eats well and thrives, then they feel happy.",
            "fol": "\u2200x ((p_3(x) \u2227 p_10(x)) \u2192 p_12(x))",
            "str_fol": "\u2200x ((eats_well(x) \u2227 thrives(x)) \u2192 feels_happy(x))"
        },
        {
            "id": 3,
            "text": "Anyone with a strong will either faces challenges head-on or helps others (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (strong_will(x) \u2192 (faces_challenges(x) \u2228 helps_others(x)))"
        },
        {
            "id": 2,
            "text": "If someone is resilient, then they have a strong will and cope well with challenges.",
            "fol": "\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))",
            "str_fol": "\u2200x (resilient(x) \u2192 (strong_will(x) \u2227 copes_well(x)))"
        },
        {
            "id": 1,
            "text": "If Raina either has an active lifestyle or is healthy (but not both), then she thrives.",
            "fol": "(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)",
            "str_fol": "(active_lifestyle(Raina) \u2295 healthy(Raina)) \u2192 thrives(Raina)"
        },
        {
            "id": 0,
            "text": "If Raina is either healthy or injured (but not both), then she can be resilient.",
            "fol": "(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)",
            "str_fol": "(healthy(Raina) \u2295 injured(Raina)) \u2192 resilient(Raina)"
        }
    ],
    "context_fol": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\np_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x ((p_3(x) \u2227 p_10(x)) \u2192 p_12(x))\n\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))\n\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)",
    "conclusion": {
        "id": 12,
        "subject": "Raina",
        "text": "Raina is not injured.",
        "fol": "\u00acp_8(Raina)",
        "str_fol": "\u00acinjured(Raina)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_8(Raina)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Raina",
                    "text": "Raina does not have support.",
                    "fol": "\u00acp_5(Raina)",
                    "str_fol": "\u00achas_support(Raina)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Raina",
                    "text": "Raina is not relaxed.",
                    "fol": "\u00acp_6(Raina)",
                    "str_fol": "\u00acis_relaxed(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Raina feels happy, then she either has support or is relaxed, but not both.",
                    "fol": "p_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))",
                    "str_fol": "feels_happy(Raina) \u2192 (has_support(Raina) \u2295 is_relaxed(Raina))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Raina",
                "text": "Raina does not feel happy.",
                "fol": "\u00acp_12(Raina)",
                "str_fol": "\u00acfeels_happy(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Raina",
                    "text": "Raina eats well.",
                    "fol": "p_3(Raina)",
                    "str_fol": "eats_well(Raina)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Raina",
                    "text": "Raina does not feel happy.",
                    "fol": "\u00acp_12(Raina)",
                    "str_fol": "\u00acfeels_happy(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If a person eats well and thrives, then they feel happy.",
                    "fol": "\u2200x ((p_3(x) \u2227 p_10(x)) \u2192 p_12(x))",
                    "str_fol": "\u2200x ((eats_well(x) \u2227 thrives(x)) \u2192 feels_happy(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Raina",
                "text": "Raina does not thrive.",
                "fol": "\u00acp_10(Raina)",
                "str_fol": "\u00acthrives(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Raina",
                    "text": "Raina does not face challenges head-on.",
                    "fol": "\u00acp_1(Raina)",
                    "str_fol": "\u00acfaces_challenges(Raina)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Raina",
                    "text": "Raina does not help others.",
                    "fol": "\u00acp_0(Raina)",
                    "str_fol": "\u00achelps_others(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone with a strong will either faces challenges head-on or helps others (or both).",
                    "fol": "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))",
                    "str_fol": "\u2200x (strong_will(x) \u2192 (faces_challenges(x) \u2228 helps_others(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Raina",
                "text": "Raina does not have a strong will.",
                "fol": "\u00acp_11(Raina)",
                "str_fol": "\u00acstrong_will(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Raina",
                    "text": "Raina does not have a strong will.",
                    "fol": "\u00acp_11(Raina)",
                    "str_fol": "\u00acstrong_will(Raina)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Raina",
                    "text": "Raina copes well with challenges.",
                    "fol": "p_2(Raina)",
                    "str_fol": "copes_well(Raina)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone is resilient, then they have a strong will and cope well with challenges.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))",
                    "str_fol": "\u2200x (resilient(x) \u2192 (strong_will(x) \u2227 copes_well(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Raina",
                "text": "Raina is not resilient.",
                "fol": "\u00acp_9(Raina)",
                "str_fol": "\u00acresilient(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Raina",
                    "text": "Raina does not have an active lifestyle.",
                    "fol": "\u00acp_4(Raina)",
                    "str_fol": "\u00acactive_lifestyle(Raina)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Raina",
                    "text": "Raina does not thrive.",
                    "fol": "\u00acp_10(Raina)",
                    "str_fol": "\u00acthrives(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Raina either has an active lifestyle or is healthy (but not both), then she thrives.",
                    "fol": "(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)",
                    "str_fol": "(active_lifestyle(Raina) \u2295 healthy(Raina)) \u2192 thrives(Raina)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Raina",
                "text": "Raina is not healthy.",
                "fol": "\u00acp_7(Raina)",
                "str_fol": "\u00achealthy(Raina)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Raina",
                    "text": "Raina is not healthy.",
                    "fol": "\u00acp_7(Raina)",
                    "str_fol": "\u00achealthy(Raina)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Raina",
                    "text": "Raina is not resilient.",
                    "fol": "\u00acp_9(Raina)",
                    "str_fol": "\u00acresilient(Raina)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Raina is either healthy or injured (but not both), then she can be resilient.",
                    "fol": "(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)",
                    "str_fol": "(healthy(Raina) \u2295 injured(Raina)) \u2192 resilient(Raina)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Raina",
                "text": "Raina is not injured.",
                "fol": "\u00acp_8(Raina)",
                "str_fol": "\u00acinjured(Raina)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 p_12(Raina) -> -(p_5(Raina) <-> p_6(Raina)).  [assumption].\n2 (all x (p_3(x) & p_10(x) -> p_12(x))).  [assumption].\n3 (all x (p_11(x) -> p_1(x) | p_0(x))).  [assumption].\n4 (all x (p_9(x) -> p_11(x) & p_2(x))).  [assumption].\n5 -(p_4(Raina) <-> p_7(Raina)) -> p_10(Raina).  [assumption].\n6 -(p_7(Raina) <-> p_8(Raina)) -> p_9(Raina).  [assumption].\n7 -p_8(Raina).  [goal].\n8 -p_12(Raina) | p_5(Raina) | p_6(Raina).  [clausify(1)].\n9 -p_5(Raina).  [assumption].\n11 -p_12(Raina) | p_6(Raina).  [resolve(8,b,9,a)].\n12 -p_6(Raina).  [assumption].\n13 -p_3(x) | -p_10(x) | p_12(x).  [clausify(2)].\n14 p_3(Raina).  [assumption].\n15 -p_11(x) | p_1(x) | p_0(x).  [clausify(3)].\n16 -p_1(Raina).  [assumption].\n17 -p_11(Raina) | p_0(Raina).  [resolve(15,b,16,a)].\n18 -p_0(Raina).  [assumption].\n19 p_4(Raina) | -p_7(Raina) | p_10(Raina).  [clausify(5)].\n20 -p_4(Raina).  [assumption].\n23 -p_9(x) | p_11(x).  [clausify(4)].\n24 p_7(Raina) | -p_8(Raina) | p_9(Raina).  [clausify(6)].\n25 p_7(Raina) | -p_8(Raina) | p_11(Raina).  [resolve(24,c,23,a)].\n26 p_8(Raina).  [deny(7)].\n27 -p_10(Raina) | p_12(Raina).  [resolve(13,a,14,a)].\n28 -p_12(Raina).  [resolve(11,b,12,a)].\n29 p_7(Raina) | p_11(Raina).  [resolve(25,b,26,a)].\n30 -p_11(Raina).  [resolve(17,b,18,a)].\n31 p_7(Raina).  [resolve(29,b,30,a)].\n32 -p_7(Raina) | p_10(Raina).  [resolve(19,a,20,a)].\n33 p_10(Raina).  [resolve(31,a,32,a)].\n34 -p_10(Raina).  [resolve(27,b,28,a)].\n35 $F.  [resolve(33,a,34,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\np_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x ((p_3(x) \u2227 p_10(x)) \u2192 p_12(x))\n\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))\n\u2200x ((p_9(x) \u2192 p_11(x)) \u2227 (p_9(x) \u2192 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)\np_8(Raina) \u2228 \u00acp_8(Raina)\np_2(Raina) \u2228 p_8(Raina)\n\u00acp_5(Raina) \u2227 \u00acp_6(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_1(Raina)",
                    "-p_0(Raina)",
                    "p_2(Raina)",
                    "-p_4(Raina)",
                    "p_12(Raina) -> (-(p_5(Raina) <-> p_6(Raina)))",
                    "all x ((p_3(x) & p_10(x)) -> p_12(x))",
                    "all x (p_11(x) -> (p_1(x) | p_0(x)))",
                    "all x ((p_9(x) -> p_11(x)) & (p_9(x) -> p_2(x)))",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina)",
                    "-p_10(Raina) -> -(-(p_4(Raina) <-> p_7(Raina)))",
                    "(-(p_7(Raina) <-> p_8(Raina))) -> p_9(Raina)",
                    "p_8(Raina) | -p_8(Raina)",
                    "p_2(Raina) | p_8(Raina)",
                    "-p_5(Raina) & -p_6(Raina)"
                ],
                "formulas(goals)": [
                    "-p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))"
                ],
                "added_facts": [
                    "p_8(Raina) \u2228 \u00acp_8(Raina)",
                    "p_2(Raina) \u2228 p_8(Raina)",
                    "\u00acp_5(Raina) \u2227 \u00acp_6(Raina)"
                ],
                "added_rules": [
                    "\u2200x ((p_9(x) \u2192 p_11(x)) \u2227 (p_9(x) \u2192 p_2(x)))",
                    "\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\n\u00acp_12(Raina)\np_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x (\u00acp_12(x) \u2192 \u00ac(p_3(x) \u2227 p_10(x)))\n\u2200x ((\u00acp_1(x) \u2227 \u00acp_0(x)) \u2192 \u00acp_11(x))\n\u2200x ((p_9(x) \u2192 p_11(x)) \u2227 (p_9(x) \u2192 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)\np_8(Raina) \u2228 \u00acp_8(Raina)\np_2(Raina) \u2228 p_8(Raina)\n\u00acp_5(Raina) \u2227 \u00acp_6(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_1(Raina)",
                    "-p_0(Raina)",
                    "p_2(Raina)",
                    "-p_4(Raina)",
                    "-p_12(Raina)",
                    "p_12(Raina) -> (-(p_5(Raina) <-> p_6(Raina)))",
                    "all x (-p_12(x) -> -(p_3(x) & p_10(x)))",
                    "all x ((-p_1(x) & -p_0(x)) -> -p_11(x))",
                    "all x ((p_9(x) -> p_11(x)) & (p_9(x) -> p_2(x)))",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina)",
                    "-p_10(Raina) -> -(-(p_4(Raina) <-> p_7(Raina)))",
                    "(-(p_7(Raina) <-> p_8(Raina))) -> p_9(Raina)",
                    "p_8(Raina) | -p_8(Raina)",
                    "p_2(Raina) | p_8(Raina)",
                    "-p_5(Raina) & -p_6(Raina)"
                ],
                "formulas(goals)": [
                    "-p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_12(Raina)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 \u00ac(p_3(x) \u2227 p_10(x)))",
                    "\u2200x ((\u00acp_1(x) \u2227 \u00acp_0(x)) \u2192 \u00acp_11(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\n\u00acp_12(Raina)\np_12(Raina) \u2192 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x (\u00acp_12(x) \u2192 \u00ac(p_3(x) \u2227 p_10(x)))\n\u2200x ((\u00acp_1(x) \u2227 \u00acp_0(x)) \u2192 \u00acp_11(x))\n\u2200x ((p_9(x) \u2192 p_11(x)) \u2227 (p_9(x) \u2192 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)\np_8(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina).",
                    "-p_6(Raina).",
                    "p_3(Raina).",
                    "-p_1(Raina).",
                    "-p_0(Raina).",
                    "p_2(Raina).",
                    "-p_4(Raina).",
                    "-p_12(Raina).",
                    "p_12(Raina) -> (-(p_5(Raina) <-> p_6(Raina))).",
                    "all x (-p_12(x) -> (-(p_3(x) & p_10(x)))).",
                    "all x ((-p_1(x) & -p_0(x)) -> -p_11(x)).",
                    "all x ((p_9(x) -> p_11(x)) & (p_9(x) -> p_2(x))).",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina).",
                    "-p_10(Raina) -> -(-(p_4(Raina) <-> p_7(Raina))).",
                    "(-(p_7(Raina) <-> p_8(Raina))) -> p_9(Raina).",
                    "p_8(Raina)."
                ],
                "formulas(goals)": [
                    "p_8(Raina)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Raina)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\n\u00acp_12(Raina)\n\u00acp_12(Raina) \u2228 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_3(x) \u2228 \u00acp_10(x)))\n\u2200x ((\u00acp_1(x) \u2227 \u00acp_0(x)) \u2192 \u00acp_11(x))\n\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)\np_8(Raina)\n\u00acp_11(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina).",
                    "-p_6(Raina).",
                    "p_3(Raina).",
                    "-p_1(Raina).",
                    "-p_0(Raina).",
                    "p_2(Raina).",
                    "-p_4(Raina).",
                    "-p_12(Raina).",
                    "(-p_12(Raina)) | (-(p_5(Raina) <-> p_6(Raina))).",
                    "all x (-p_12(x) -> (-p_3(x) | -p_10(x))).",
                    "all x ((-p_1(x) & -p_0(x)) -> -p_11(x)).",
                    "all x (p_9(x) -> (p_11(x) & p_2(x))).",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina).",
                    "-p_10(Raina) -> (-(p_4(Raina) <-> p_7(Raina))).",
                    "(-(p_7(Raina) <-> p_8(Raina))) -> p_9(Raina).",
                    "p_8(Raina).",
                    "-p_11(Raina)."
                ],
                "formulas(goals)": [
                    "--p_8(Raina)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_11(Raina)"
                ],
                "added_rules": [
                    "\u00acp_12(Raina) \u2228 (p_5(Raina) \u2295 p_6(Raina))",
                    "\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\n\u00acp_12(Raina)\n\u00acp_12(Raina) \u2228 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_3(x) \u2228 \u00acp_10(x) \u2228 p_8(x)))\n\u2200x ((\u00acp_1(x) \u2227 \u00acp_0(x)) \u2192 \u00acp_11(x))\n\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)\np_8(Raina)\n\u00acp_11(Raina)\n\u2200x (\u00acp_11(x) \u2228 p_1(x) \u2228 p_0(x))\np_2(Raina) \u2227 p_3(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_1(Raina)",
                    "-p_0(Raina)",
                    "p_2(Raina)",
                    "-p_4(Raina)",
                    "-p_12(Raina)",
                    "-p_12(Raina) | (-(p_5(Raina) <-> p_6(Raina)))",
                    "all x (-p_12(x) -> (-p_3(x) | -p_10(x) | p_8(x)))",
                    "all x ((-p_1(x) & -p_0(x)) -> -p_11(x))",
                    "all x (p_9(x) -> (p_11(x) & p_2(x)))",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina)",
                    "-p_10(Raina) -> -(-(p_4(Raina) <-> p_7(Raina)))",
                    "(-(p_7(Raina) <-> p_8(Raina))) -> p_9(Raina)",
                    "p_8(Raina)",
                    "-p_11(Raina)",
                    "all x (-p_11(x) | p_1(x) | p_0(x))",
                    "p_2(Raina) & p_3(Raina)"
                ],
                "formulas(goals)": [
                    "p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 (\u00acp_3(x) \u2228 \u00acp_10(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_12(x) \u2192 (\u00acp_3(x) \u2228 \u00acp_10(x) \u2228 p_8(x)))",
                    "\u2200x (\u00acp_11(x) \u2228 p_1(x) \u2228 p_0(x))",
                    "p_2(Raina) \u2227 p_3(Raina)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\n\u00acp_12(Raina)\n\u00acp_12(Raina) \u2228 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_3(x) \u2228 \u00acp_10(x) \u2228 p_8(x)))\n\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))\n\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n(p_7(Raina) \u2295 p_8(Raina)) \u2192 p_9(Raina)\np_8(Raina)\n\u00acp_11(Raina)\n\u2200x (\u00acp_11(x) \u2228 p_1(x) \u2228 p_0(x))\np_2(Raina) \u2227 p_3(Raina)",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_1(Raina)",
                    "-p_0(Raina)",
                    "p_2(Raina)",
                    "-p_4(Raina)",
                    "-p_12(Raina)",
                    "-p_12(Raina) | (-(p_5(Raina) <-> p_6(Raina)))",
                    "all x (-p_12(x) -> (-p_3(x) | -p_10(x) | p_8(x)))",
                    "all x (p_11(x) -> (p_1(x) | p_0(x)))",
                    "all x (p_9(x) -> (p_11(x) & p_2(x)))",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina)",
                    "-p_10(Raina) -> -(-(p_4(Raina) <-> p_7(Raina)))",
                    "(-(p_7(Raina) <-> p_8(Raina))) -> p_9(Raina)",
                    "p_8(Raina)",
                    "-p_11(Raina)",
                    "all x (-p_11(x) | p_1(x) | p_0(x))",
                    "p_2(Raina) & p_3(Raina)"
                ],
                "formulas(goals)": [
                    "--p_8(Raina)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((\u00acp_1(x) \u2227 \u00acp_0(x)) \u2192 \u00acp_11(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Raina)\n\u00acp_6(Raina)\np_3(Raina)\n\u00acp_1(Raina)\n\u00acp_0(Raina)\np_2(Raina)\n\u00acp_4(Raina)\n\u00acp_12(Raina)\n\u00acp_12(Raina) \u2228 (p_5(Raina) \u2295 p_6(Raina))\n\u2200x (\u00acp_12(x) \u2192 (\u00acp_3(x) \u2228 \u00acp_10(x) \u2228 p_8(x)))\n\u2200x (p_11(x) \u2192 (p_1(x) \u2228 p_0(x)))\n\u2200x (p_9(x) \u2192 (p_11(x) \u2227 p_2(x)))\n(p_4(Raina) \u2295 p_7(Raina)) \u2192 p_10(Raina)\n\u00acp_10(Raina) \u2192 \u00ac(p_4(Raina) \u2295 p_7(Raina))\n\u00acp_7(Raina) \u2192 p_9(Raina)\np_8(Raina)\n\u00acp_11(Raina)\n\u2200x (\u00acp_11(x) \u2228 p_1(x) \u2228 p_0(x))\np_2(Raina) \u2227 p_3(Raina)\n\u00ac(p_5(Raina) \u2295 p_6(Raina))",
            "Initial Goal": "\u00acp_8(Raina)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Raina)",
                    "-p_6(Raina)",
                    "p_3(Raina)",
                    "-p_1(Raina)",
                    "-p_0(Raina)",
                    "p_2(Raina)",
                    "-p_4(Raina)",
                    "-p_12(Raina)",
                    "-p_12(Raina) | -(p_5(Raina) <-> p_6(Raina))",
                    "all x (-p_12(x) -> (-p_3(x) | -p_10(x) | p_8(x)))",
                    "all x (p_11(x) -> (p_1(x) | p_0(x)))",
                    "all x (p_9(x) -> (p_11(x) & p_2(x)))",
                    "(-(p_4(Raina) <-> p_7(Raina))) -> p_10(Raina)",
                    "-p_10(Raina) -> -(-(p_4(Raina) <-> p_7(Raina)))",
                    "-p_7(Raina) -> p_9(Raina)",
                    "p_8(Raina)",
                    "-p_11(Raina)",
                    "all x (-p_11(x) | p_1(x) | p_0(x))",
                    "p_2(Raina) & p_3(Raina)",
                    "-(-(p_5(Raina) <-> p_6(Raina)))"
                ],
                "formulas(goals)": [
                    "-(-p_8(Raina))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_5(Raina) \u2295 p_6(Raina))"
                ],
                "added_rules": [
                    "\u00acp_7(Raina) \u2192 p_9(Raina)"
                ]
            }
        }
    ]
}