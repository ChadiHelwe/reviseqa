{
    "background_story": "Adele was a bright and adventurous young girl with a passion for gymnastics. She spent most of her afternoons practicing flips and twists in her backyard. One day, while playing with her friends, Adele attempted her first somersault on the grass. To everyone's surprise, she landed it perfectly, beaming with pride. This sparked a fire within her, and soon Adele was somersaulting everywhere - down hills, on the beach, and even in the park. Her love for the thrill and joy of flipping led her to join a local gymnastics club, where she honed her skills and eventually competed in regional competitions. Adele's signature move, a flawless somersault, earned her the nickname 'Flipper' among her friends and teammates.",
    "predicates": [
        {
            "id": 0,
            "name": "is_energetic"
        },
        {
            "id": 1,
            "name": "sings_well"
        },
        {
            "id": 2,
            "name": "loves_risk"
        },
        {
            "id": 3,
            "name": "is_active"
        },
        {
            "id": 4,
            "name": "stays_fit"
        },
        {
            "id": 5,
            "name": "takes_chances"
        },
        {
            "id": 6,
            "name": "gymnast"
        },
        {
            "id": 7,
            "name": "non_gymnast"
        },
        {
            "id": 8,
            "name": "athlete"
        },
        {
            "id": 9,
            "name": "dancer"
        },
        {
            "id": 10,
            "name": "plays_sports"
        },
        {
            "id": 11,
            "name": "enjoys_competition"
        },
        {
            "id": 12,
            "name": "seeks_adventure"
        },
        {
            "id": 13,
            "name": "reads_books"
        },
        {
            "id": 14,
            "name": "writes_stories"
        },
        {
            "id": 15,
            "name": "runs_fast"
        },
        {
            "id": 16,
            "name": "jumps_high"
        },
        {
            "id": 17,
            "name": "performs_acrobatics"
        },
        {
            "id": 18,
            "name": "is_musical"
        },
        {
            "id": 19,
            "name": "is_ambitious"
        },
        {
            "id": 20,
            "name": "seeks_fame"
        },
        {
            "id": 21,
            "name": "has_fun"
        },
        {
            "id": 22,
            "name": "stays_healthy"
        },
        {
            "id": 23,
            "name": "tries_new_things"
        },
        {
            "id": 24,
            "name": "explores_outdoors"
        }
    ],
    "subject_name": "Adele",
    "subject_category": "human",
    "keyword": "somersault",
    "all_facts": [
        {
            "id": 0,
            "subject": "Adele",
            "text": "Adele is energetic.",
            "fol": "p_0(Adele)",
            "str_fol": "is_energetic(Adele)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Adele",
            "text": "Adele sings well.",
            "fol": "p_1(Adele)",
            "str_fol": "sings_well(Adele)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Adele",
            "text": "Adele loves risk.",
            "fol": "p_2(Adele)",
            "str_fol": "loves_risk(Adele)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Adele",
            "text": "Adele is active.",
            "fol": "p_3(Adele)",
            "str_fol": "is_active(Adele)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Adele",
            "text": "Adele does not stay fit.",
            "fol": "\u00acp_4(Adele)",
            "str_fol": "\u00acstays_fit(Adele)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Adele",
            "text": "Adele does not take chances.",
            "fol": "\u00acp_5(Adele)",
            "str_fol": "\u00actakes_chances(Adele)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Adele",
            "text": "Adele seeks adventure.",
            "fol": "p_12(Adele)",
            "str_fol": "seeks_adventure(Adele)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Adele",
            "text": "Adele plays sports.",
            "fol": "p_10(Adele)",
            "str_fol": "plays_sports(Adele)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Adele",
            "text": "Adele does not enjoy competition.",
            "fol": "\u00acp_11(Adele)",
            "str_fol": "\u00acenjoys_competition(Adele)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Adele",
            "text": "Adele is not a dancer.",
            "fol": "\u00acp_9(Adele)",
            "str_fol": "\u00acdancer(Adele)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Adele",
            "text": "Adele is an athlete.",
            "fol": "p_8(Adele)",
            "str_fol": "athlete(Adele)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Adele",
            "text": "Adele is not a gymnast.",
            "fol": "non_p_6(Adele)",
            "str_fol": "non_gymnast(Adele)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Adele",
            "text": "Adele is not a gymnast.",
            "fol": "\u00acp_6(Adele)",
            "str_fol": "\u00acgymnast(Adele)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Adele",
            "text": "Adele does not take chances.",
            "fol": "\u00acp_5(Adele)",
            "str_fol": "\u00actakes_chances(Adele)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adele",
            "text": "Adele is active.",
            "fol": "p_3(Adele)",
            "str_fol": "is_active(Adele)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Adele",
            "text": "Adele does not stay fit.",
            "fol": "\u00acp_4(Adele)",
            "str_fol": "\u00acstays_fit(Adele)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adele",
            "text": "Adele loves risk.",
            "fol": "p_2(Adele)",
            "str_fol": "loves_risk(Adele)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Adele",
            "text": "Adele is energetic.",
            "fol": "p_0(Adele)",
            "str_fol": "is_energetic(Adele)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Adele",
            "text": "Adele sings well.",
            "fol": "p_1(Adele)",
            "str_fol": "sings_well(Adele)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Adele takes chances or seeks adventure.",
            "fol": "p_5(Adele) \u2228 p_12(Adele)",
            "str_fol": "takes_chances(Adele) \u2228 seeks_adventure(Adele)"
        },
        {
            "id": 5,
            "text": "If Adele is active, then she either plays sports or stays fit.",
            "fol": "p_3(Adele) \u2192 (p_10(Adele) \u2228 p_4(Adele))",
            "str_fol": "is_active(Adele) \u2192 (plays_sports(Adele) \u2228 stays_fit(Adele))"
        },
        {
            "id": 4,
            "text": "If Adele loves risk, then she either enjoys competition or seeks adventure, but not both.",
            "fol": "p_2(Adele) \u2192 (p_11(Adele) \u2295 p_12(Adele))",
            "str_fol": "loves_risk(Adele) \u2192 (enjoys_competition(Adele) \u2295 seeks_adventure(Adele))"
        },
        {
            "id": 3,
            "text": "If Adele is energetic, then she is either a good singer or a dancer, but not both.",
            "fol": "p_0(Adele) \u2192 (p_1(Adele) \u2295 p_9(Adele))",
            "str_fol": "is_energetic(Adele) \u2192 (sings_well(Adele) \u2295 dancer(Adele))"
        },
        {
            "id": 2,
            "text": "If Adele is either an athlete or plays sports (but not both), then she enjoys competition.",
            "fol": "(p_8(Adele) \u2295 p_10(Adele)) \u2192 p_11(Adele)",
            "str_fol": "(athlete(Adele) \u2295 plays_sports(Adele)) \u2192 enjoys_competition(Adele)"
        },
        {
            "id": 1,
            "text": "If Adele is an athlete, then she is either a non-participant in gymnastics or a dancer, but not both.",
            "fol": "p_8(Adele) \u2192 (non_p_6(Adele) \u2295 p_9(Adele))",
            "str_fol": "athlete(Adele) \u2192 (non_gymnast(Adele) \u2295 dancer(Adele))"
        },
        {
            "id": 0,
            "text": "For every human, they are either a gymnast or a non-gymnast, but not both.",
            "fol": "\u2200x (p_6(x) \u2295 non_p_6(x))",
            "str_fol": "\u2200x (gymnast(x) \u2295 non_gymnast(x))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Adele",
            "text": "Adele does not take chances.",
            "fol": "\u00acp_5(Adele)",
            "str_fol": "\u00actakes_chances(Adele)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Adele",
            "text": "Adele is active.",
            "fol": "p_3(Adele)",
            "str_fol": "is_active(Adele)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Adele",
            "text": "Adele does not stay fit.",
            "fol": "\u00acp_4(Adele)",
            "str_fol": "\u00acstays_fit(Adele)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Adele",
            "text": "Adele loves risk.",
            "fol": "p_2(Adele)",
            "str_fol": "loves_risk(Adele)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Adele",
            "text": "Adele is energetic.",
            "fol": "p_0(Adele)",
            "str_fol": "is_energetic(Adele)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Adele",
            "text": "Adele sings well.",
            "fol": "p_1(Adele)",
            "str_fol": "sings_well(Adele)",
            "negation": false
        },
        {
            "id": 6,
            "text": "Adele takes chances or seeks adventure.",
            "fol": "p_5(Adele) \u2228 p_12(Adele)",
            "str_fol": "takes_chances(Adele) \u2228 seeks_adventure(Adele)"
        },
        {
            "id": 5,
            "text": "If Adele is active, then she either plays sports or stays fit.",
            "fol": "p_3(Adele) \u2192 (p_10(Adele) \u2228 p_4(Adele))",
            "str_fol": "is_active(Adele) \u2192 (plays_sports(Adele) \u2228 stays_fit(Adele))"
        },
        {
            "id": 4,
            "text": "If Adele loves risk, then she either enjoys competition or seeks adventure, but not both.",
            "fol": "p_2(Adele) \u2192 (p_11(Adele) \u2295 p_12(Adele))",
            "str_fol": "loves_risk(Adele) \u2192 (enjoys_competition(Adele) \u2295 seeks_adventure(Adele))"
        },
        {
            "id": 3,
            "text": "If Adele is energetic, then she is either a good singer or a dancer, but not both.",
            "fol": "p_0(Adele) \u2192 (p_1(Adele) \u2295 p_9(Adele))",
            "str_fol": "is_energetic(Adele) \u2192 (sings_well(Adele) \u2295 dancer(Adele))"
        },
        {
            "id": 2,
            "text": "If Adele is either an athlete or plays sports (but not both), then she enjoys competition.",
            "fol": "(p_8(Adele) \u2295 p_10(Adele)) \u2192 p_11(Adele)",
            "str_fol": "(athlete(Adele) \u2295 plays_sports(Adele)) \u2192 enjoys_competition(Adele)"
        },
        {
            "id": 1,
            "text": "If Adele is an athlete, then she is either a non-participant in gymnastics or a dancer, but not both.",
            "fol": "p_8(Adele) \u2192 (non_p_6(Adele) \u2295 p_9(Adele))",
            "str_fol": "athlete(Adele) \u2192 (non_gymnast(Adele) \u2295 dancer(Adele))"
        },
        {
            "id": 0,
            "text": "For every human, they are either a gymnast or a non-gymnast, but not both.",
            "fol": "\u2200x (p_6(x) \u2295 non_p_6(x))",
            "str_fol": "\u2200x (gymnast(x) \u2295 non_gymnast(x))"
        }
    ],
    "context_fol": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_1(Adele)\np_5(Adele) \u2228 p_12(Adele)\np_3(Adele) \u2192 (p_10(Adele) \u2228 p_4(Adele))\np_2(Adele) \u2192 (p_11(Adele) \u2295 p_12(Adele))\np_0(Adele) \u2192 (p_1(Adele) \u2295 p_9(Adele))\n(p_8(Adele) \u2295 p_10(Adele)) \u2192 p_11(Adele)\np_8(Adele) \u2192 (non_p_6(Adele) \u2295 p_9(Adele))\n\u2200x (p_6(x) \u2295 non_p_6(x))",
    "conclusion": {
        "id": 11,
        "subject": "Adele",
        "text": "Adele is not a gymnast.",
        "fol": "non_p_6(Adele)",
        "str_fol": "non_gymnast(Adele)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "non_p_6(Adele)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Adele",
                    "text": "Adele does not take chances.",
                    "fol": "\u00acp_5(Adele)",
                    "str_fol": "\u00actakes_chances(Adele)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Adele takes chances or seeks adventure.",
                    "fol": "p_5(Adele) \u2228 p_12(Adele)",
                    "str_fol": "takes_chances(Adele) \u2228 seeks_adventure(Adele)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Adele",
                "text": "Adele seeks adventure.",
                "fol": "p_12(Adele)",
                "str_fol": "seeks_adventure(Adele)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Adele",
                    "text": "Adele is active.",
                    "fol": "p_3(Adele)",
                    "str_fol": "is_active(Adele)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Adele",
                    "text": "Adele does not stay fit.",
                    "fol": "\u00acp_4(Adele)",
                    "str_fol": "\u00acstays_fit(Adele)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Adele is active, then she either plays sports or stays fit.",
                    "fol": "p_3(Adele) \u2192 (p_10(Adele) \u2228 p_4(Adele))",
                    "str_fol": "is_active(Adele) \u2192 (plays_sports(Adele) \u2228 stays_fit(Adele))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Adele",
                "text": "Adele plays sports.",
                "fol": "p_10(Adele)",
                "str_fol": "plays_sports(Adele)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Adele",
                    "text": "Adele loves risk.",
                    "fol": "p_2(Adele)",
                    "str_fol": "loves_risk(Adele)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Adele",
                    "text": "Adele seeks adventure.",
                    "fol": "p_12(Adele)",
                    "str_fol": "seeks_adventure(Adele)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Adele loves risk, then she either enjoys competition or seeks adventure, but not both.",
                    "fol": "p_2(Adele) \u2192 (p_11(Adele) \u2295 p_12(Adele))",
                    "str_fol": "loves_risk(Adele) \u2192 (enjoys_competition(Adele) \u2295 seeks_adventure(Adele))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Adele",
                "text": "Adele does not enjoy competition.",
                "fol": "\u00acp_11(Adele)",
                "str_fol": "\u00acenjoys_competition(Adele)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Adele",
                    "text": "Adele is energetic.",
                    "fol": "p_0(Adele)",
                    "str_fol": "is_energetic(Adele)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Adele",
                    "text": "Adele sings well.",
                    "fol": "p_1(Adele)",
                    "str_fol": "sings_well(Adele)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Adele is energetic, then she is either a good singer or a dancer, but not both.",
                    "fol": "p_0(Adele) \u2192 (p_1(Adele) \u2295 p_9(Adele))",
                    "str_fol": "is_energetic(Adele) \u2192 (sings_well(Adele) \u2295 dancer(Adele))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Adele",
                "text": "Adele is not a dancer.",
                "fol": "\u00acp_9(Adele)",
                "str_fol": "\u00acdancer(Adele)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Adele",
                    "text": "Adele plays sports.",
                    "fol": "p_10(Adele)",
                    "str_fol": "plays_sports(Adele)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Adele",
                    "text": "Adele does not enjoy competition.",
                    "fol": "\u00acp_11(Adele)",
                    "str_fol": "\u00acenjoys_competition(Adele)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Adele is either an athlete or plays sports (but not both), then she enjoys competition.",
                    "fol": "(p_8(Adele) \u2295 p_10(Adele)) \u2192 p_11(Adele)",
                    "str_fol": "(athlete(Adele) \u2295 plays_sports(Adele)) \u2192 enjoys_competition(Adele)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Adele",
                "text": "Adele is an athlete.",
                "fol": "p_8(Adele)",
                "str_fol": "athlete(Adele)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Adele",
                    "text": "Adele is an athlete.",
                    "fol": "p_8(Adele)",
                    "str_fol": "athlete(Adele)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Adele",
                    "text": "Adele is not a dancer.",
                    "fol": "\u00acp_9(Adele)",
                    "str_fol": "\u00acdancer(Adele)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Adele is an athlete, then she is either a non-participant in gymnastics or a dancer, but not both.",
                    "fol": "p_8(Adele) \u2192 (non_p_6(Adele) \u2295 p_9(Adele))",
                    "str_fol": "athlete(Adele) \u2192 (non_gymnast(Adele) \u2295 dancer(Adele))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Adele",
                "text": "Adele is not a gymnast.",
                "fol": "non_p_6(Adele)",
                "str_fol": "non_gymnast(Adele)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Adele",
                    "text": "Adele is not a gymnast.",
                    "fol": "non_p_6(Adele)",
                    "str_fol": "non_gymnast(Adele)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For every human, they are either a gymnast or a non-gymnast, but not both.",
                    "fol": "\u2200x (p_6(x) \u2295 non_p_6(x))",
                    "str_fol": "\u2200x (gymnast(x) \u2295 non_gymnast(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Adele",
                "text": "Adele is not a gymnast.",
                "fol": "non_p_6(Adele)",
                "str_fol": "non_gymnast(Adele)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_3(Adele) -> p_10(Adele) | p_4(Adele).  [assumption].\n2 p_2(Adele) -> -(p_11(Adele) <-> p_12(Adele)).  [assumption].\n3 p_0(Adele) -> -(p_1(Adele) <-> p_9(Adele)).  [assumption].\n4 -(p_8(Adele) <-> p_10(Adele)) -> p_11(Adele).  [assumption].\n5 p_8(Adele) -> -(non_p_6(Adele) <-> p_9(Adele)).  [assumption].\n7 non_p_6(Adele).  [goal].\n8 p_5(Adele) | p_12(Adele).  [assumption].\n9 -p_5(Adele).  [assumption].\n10 -p_3(Adele) | p_10(Adele) | p_4(Adele).  [clausify(1)].\n11 p_3(Adele).  [assumption].\n12 p_10(Adele) | p_4(Adele).  [resolve(10,a,11,a)].\n13 -p_4(Adele).  [assumption].\n15 p_2(Adele).  [assumption].\n16 -p_2(Adele) | -p_11(Adele) | -p_12(Adele).  [clausify(2)].\n18 p_0(Adele).  [assumption].\n19 -p_0(Adele) | -p_1(Adele) | -p_9(Adele).  [clausify(3)].\n20 -p_1(Adele) | -p_9(Adele).  [resolve(19,a,18,a)].\n21 p_1(Adele).  [assumption].\n23 p_8(Adele) | -p_10(Adele) | p_11(Adele).  [clausify(4)].\n25 -p_8(Adele) | non_p_6(Adele) | p_9(Adele).  [clausify(5)].\n29 non_p_6(Adele) | p_9(Adele) | -p_10(Adele) | p_11(Adele).  [resolve(25,a,23,a)].\n30 -non_p_6(Adele).  [deny(7)].\n31 -p_11(Adele) | -p_12(Adele).  [resolve(16,a,15,a)].\n32 p_12(Adele).  [resolve(8,a,9,a)].\n33 p_9(Adele) | -p_10(Adele) | p_11(Adele).  [resolve(29,a,30,a)].\n34 p_10(Adele).  [resolve(12,b,13,a)].\n35 p_9(Adele) | p_11(Adele).  [resolve(33,b,34,a)].\n36 -p_9(Adele).  [resolve(20,a,21,a)].\n37 p_11(Adele).  [resolve(35,a,36,a)].\n38 -p_11(Adele).  [resolve(31,b,32,a)].\n39 $F.  [resolve(37,a,38,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Adele).\np_3(Adele).\n\u00acp_4(Adele).\np_2(Adele).\np_0(Adele).\np_1(Adele).\np_5(Adele) \u2228 p_12(Adele).\np_3(Adele) \u2192 (p_10(Adele) \u2228 p_4(Adele)).\np_2(Adele) \u2192 (p_11(Adele) \u2295 p_12(Adele)).\np_0(Adele) \u2192 (p_1(Adele) \u2295 p_9(Adele)).\n(p_8(Adele) \u2295 p_10(Adele)) \u2192 p_11(Adele).\np_8(Adele) \u2192 (non_p_6(Adele) \u2295 p_9(Adele)).\n\u2200x (p_6(x) \u2295 non_p_6(x)).\np_12(Adele).\n\u00acp_11(Adele).\np_10(Adele).\np_8(Adele).\n\u00acp_9(Adele).",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Adele).",
                    "p_3(Adele).",
                    "-p_4(Adele).",
                    "p_2(Adele).",
                    "p_0(Adele).",
                    "p_1(Adele).",
                    "p_5(Adele) | p_12(Adele).",
                    "p_3(Adele) -> (p_10(Adele) | p_4(Adele)).",
                    "p_2(Adele) -> (-(p_11(Adele) <-> p_12(Adele))).",
                    "p_0(Adele) -> (-(p_1(Adele) <-> p_9(Adele))).",
                    "(-(p_8(Adele) <-> p_10(Adele))) -> p_11(Adele).",
                    "p_8(Adele) -> (-(non_p_6(Adele) <-> p_9(Adele))).",
                    "all x (-(p_6(x) <-> non_p_6(x))).",
                    "p_12(Adele).",
                    "-p_11(Adele).",
                    "p_10(Adele).",
                    "p_8(Adele).",
                    "-p_9(Adele)."
                ],
                "formulas(goals)": [
                    "non_p_6(Adele)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_12(Adele)",
                    "\u00acp_11(Adele)",
                    "p_10(Adele)",
                    "p_8(Adele)",
                    "\u00acp_9(Adele)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_1(Adele)\np_5(Adele) \u2228 p_12(Adele)\n\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)\n\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))\n\u00acp_0(Adele) \u2228 (p_1(Adele) \u2295 p_9(Adele))\n\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)\n\u00acp_8(Adele) \u2228 (non_p_6(Adele) \u2295 p_9(Adele))\n\u2200x (p_6(x) \u2295 non_p_6(x))\np_12(Adele)\n\u00acp_11(Adele)\np_10(Adele)\np_8(Adele)\n\u00acp_9(Adele)\np_11(Adele) \u2295 p_12(Adele)\nnon_p_6(Adele) \u2295 p_9(Adele)\np_10(Adele) \u2228 p_4(Adele)\np_1(Adele) \u2295 p_9(Adele)",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Adele).",
                    "p_3(Adele).",
                    "-p_4(Adele).",
                    "p_2(Adele).",
                    "p_0(Adele).",
                    "p_1(Adele).",
                    "p_5(Adele) | p_12(Adele).",
                    "(-p_3(Adele)) | p_10(Adele) | p_4(Adele).",
                    "(-p_2(Adele)) | (-(p_11(Adele) <-> p_12(Adele))).",
                    "(-p_0(Adele)) | (-(p_1(Adele) <-> p_9(Adele))).",
                    "(-(-(p_8(Adele) <-> p_10(Adele)))) | p_11(Adele).",
                    "(-p_8(Adele)) | (-(non_p_6(Adele) <-> p_9(Adele))).",
                    "all x (-(p_6(x) <-> non_p_6(x))).",
                    "p_12(Adele).",
                    "-p_11(Adele).",
                    "p_10(Adele).",
                    "p_8(Adele).",
                    "-p_9(Adele).",
                    "(-(p_11(Adele) <-> p_12(Adele))).",
                    "(-(non_p_6(Adele) <-> p_9(Adele))).",
                    "p_10(Adele) | p_4(Adele).",
                    "(-(p_1(Adele) <-> p_9(Adele)))."
                ],
                "formulas(goals)": [
                    "non_p_6(Adele)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Adele) \u2192 (p_10(Adele) \u2228 p_4(Adele))",
                    "p_2(Adele) \u2192 (p_11(Adele) \u2295 p_12(Adele))",
                    "p_0(Adele) \u2192 (p_1(Adele) \u2295 p_9(Adele))",
                    "(p_8(Adele) \u2295 p_10(Adele)) \u2192 p_11(Adele)",
                    "p_8(Adele) \u2192 (non_p_6(Adele) \u2295 p_9(Adele))"
                ],
                "added_facts": [
                    "p_11(Adele) \u2295 p_12(Adele)",
                    "non_p_6(Adele) \u2295 p_9(Adele)",
                    "p_10(Adele) \u2228 p_4(Adele)",
                    "p_1(Adele) \u2295 p_9(Adele)"
                ],
                "added_rules": [
                    "\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)",
                    "\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))",
                    "\u00acp_0(Adele) \u2228 (p_1(Adele) \u2295 p_9(Adele))",
                    "\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)",
                    "\u00acp_8(Adele) \u2228 (non_p_6(Adele) \u2295 p_9(Adele))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_5(Adele) \u2228 p_12(Adele)\n\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)\n\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))\n\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)\n\u2200x (p_6(x) \u2295 non_p_6(x))\np_12(Adele)\n\u00acp_11(Adele)\np_10(Adele)\np_8(Adele)\np_11(Adele) \u2295 p_12(Adele)\np_10(Adele) \u2228 p_4(Adele)\np_9(Adele)\np_9(Adele) \u2192 p_6(Adele)",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_5(Adele)",
                    "p_3(Adele)",
                    "\u00acp_4(Adele)",
                    "p_2(Adele)",
                    "p_0(Adele)",
                    "p_5(Adele) | p_12(Adele)",
                    "\u00acp_3(Adele) | p_10(Adele) | p_4(Adele)",
                    "\u00acp_2(Adele) | ( -(p_11(Adele) <-> p_12(Adele)) )",
                    "\u00ac( -(p_8(Adele) <-> p_10(Adele)) ) | p_11(Adele)",
                    "all x ( -(p_6(x) <-> non_p_6(x)) )",
                    "p_12(Adele)",
                    "\u00acp_11(Adele)",
                    "p_10(Adele)",
                    "p_8(Adele)",
                    "-(p_11(Adele) <-> p_12(Adele))",
                    "p_10(Adele) | p_4(Adele)",
                    "p_9(Adele)",
                    "\u00acp_9(Adele) | p_6(Adele)"
                ],
                "formulas(goals)": [
                    "\u00acnon_p_6(Adele)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_1(Adele)",
                    "\u00acp_9(Adele)"
                ],
                "removed_rules": [
                    "non_p_6(Adele) \u2295 p_9(Adele)",
                    "\u00acp_8(Adele) \u2228 (non_p_6(Adele) \u2295 p_9(Adele))",
                    "p_1(Adele) \u2295 p_9(Adele)",
                    "\u00acp_0(Adele) \u2228 (p_1(Adele) \u2295 p_9(Adele))"
                ],
                "added_facts": [
                    "p_9(Adele)"
                ],
                "added_rules": [
                    "p_9(Adele) \u2192 p_6(Adele)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_5(Adele) \u2228 p_12(Adele)\n\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)\n\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))\n\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)\n\u2200x (p_6(x) \u2295 non_p_6(x))\np_12(Adele)\n\u00acp_11(Adele)\np_10(Adele)\np_8(Adele)\np_11(Adele) \u2295 p_12(Adele)\np_10(Adele) \u2228 p_4(Adele)\np_9(Adele)\np_9(Adele) \u2192 p_6(Adele)\np_6(Adele)",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Adele).",
                    "p_3(Adele).",
                    "-p_4(Adele).",
                    "p_2(Adele).",
                    "p_0(Adele).",
                    "p_5(Adele) | p_12(Adele).",
                    "-p_3(Adele) | p_10(Adele) | p_4(Adele).",
                    "-p_2(Adele) | (-(p_11(Adele) <-> p_12(Adele))).",
                    "-(-(p_8(Adele) <-> p_10(Adele))) | p_11(Adele).",
                    "all x (-(p_6(x) <-> non_p_6(x))).",
                    "p_12(Adele).",
                    "-p_11(Adele).",
                    "p_10(Adele).",
                    "p_8(Adele).",
                    "-(p_11(Adele) <-> p_12(Adele)).",
                    "p_10(Adele) | p_4(Adele).",
                    "p_9(Adele).",
                    "-p_9(Adele) | p_6(Adele).",
                    "p_6(Adele)."
                ],
                "formulas(goals)": [
                    "-non_p_6(Adele)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Adele)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_5(Adele) \u2228 p_12(Adele)\n\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)\n\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))\n\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)\n\u2200x (p_6(x) \u2295 non_p_6(x))\np_12(Adele)\n\u00acp_11(Adele)\np_10(Adele)\np_8(Adele)\np_11(Adele) \u2295 p_12(Adele)\np_10(Adele) \u2228 p_4(Adele)\np_9(Adele)\np_9(Adele) \u2192 p_6(Adele)\np_6(Adele)\np_11(Adele) \u2228 p_12(Adele)\n\u00acp_11(Adele) \u2228 \u00acp_12(Adele)",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Adele).",
                    "p_3(Adele).",
                    "-p_4(Adele).",
                    "p_2(Adele).",
                    "p_0(Adele).",
                    "p_5(Adele) | p_12(Adele).",
                    "-p_3(Adele) | p_10(Adele) | p_4(Adele).",
                    "-p_2(Adele) | (-(p_11(Adele) <-> p_12(Adele))).",
                    "-(-(p_8(Adele) <-> p_10(Adele))) | p_11(Adele).",
                    "all x (-(p_6(x) <-> non_p_6(x))).",
                    "p_12(Adele).",
                    "-p_11(Adele).",
                    "p_10(Adele).",
                    "p_8(Adele).",
                    "-(p_11(Adele) <-> p_12(Adele)).",
                    "p_10(Adele) | p_4(Adele).",
                    "p_9(Adele).",
                    "p_9(Adele) -> p_6(Adele).",
                    "p_6(Adele).",
                    "p_11(Adele) | p_12(Adele).",
                    "-p_11(Adele) | -p_12(Adele)."
                ],
                "formulas(goals)": [
                    "-non_p_6(Adele)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Adele) \u2228 p_12(Adele)",
                    "\u00acp_11(Adele) \u2228 \u00acp_12(Adele)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_5(Adele) \u2228 p_12(Adele)\n\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)\n\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))\n\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)\n\u2200x (p_6(x) \u2295 non_p_6(x))\np_12(Adele)\n\u00acp_11(Adele)\np_10(Adele)\np_8(Adele)\np_11(Adele) \u2295 p_12(Adele)\np_10(Adele) \u2228 p_4(Adele)\np_9(Adele)\np_9(Adele) \u2192 \u00acp_6(Adele)\np_11(Adele) \u2228 p_12(Adele)\n\u00acp_11(Adele) \u2228 \u00acp_12(Adele)",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Adele).",
                    "p_3(Adele).",
                    "-p_4(Adele).",
                    "p_2(Adele).",
                    "p_0(Adele).",
                    "p_5(Adele) | p_12(Adele).",
                    "-p_3(Adele) | p_10(Adele) | p_4(Adele).",
                    "-p_2(Adele) | (-(p_11(Adele) <-> p_12(Adele))).",
                    "(p_8(Adele) <-> p_10(Adele)) | p_11(Adele).",
                    "all x (-(p_6(x) <-> non_p_6(x))).",
                    "p_12(Adele).",
                    "-p_11(Adele).",
                    "p_10(Adele).",
                    "p_8(Adele).",
                    "-(p_11(Adele) <-> p_12(Adele)).",
                    "p_10(Adele) | p_4(Adele).",
                    "p_9(Adele).",
                    "p_9(Adele) -> -p_6(Adele).",
                    "p_11(Adele) | p_12(Adele).",
                    "-p_11(Adele) | -p_12(Adele)."
                ],
                "formulas(goals)": [
                    "non_p_6(Adele)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Adele)"
                ],
                "removed_rules": [
                    "p_9(Adele) \u2192 p_6(Adele)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Adele) \u2192 \u00acp_6(Adele)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_5(Adele)\np_3(Adele)\n\u00acp_4(Adele)\np_2(Adele)\np_0(Adele)\np_5(Adele) \u2228 p_12(Adele)\n\u00acp_3(Adele) \u2228 p_10(Adele) \u2228 p_4(Adele)\n\u00acp_2(Adele) \u2228 (p_11(Adele) \u2295 p_12(Adele))\n\u00ac(p_8(Adele) \u2295 p_10(Adele)) \u2228 p_11(Adele)\n\u2200x (p_6(x) \u2295 non_p_6(x))\np_12(Adele)\n\u00acp_11(Adele)\np_10(Adele)\np_8(Adele)\np_11(Adele) \u2295 p_12(Adele)\np_10(Adele) \u2228 p_4(Adele)\np_9(Adele)\n\u00acp_9(Adele) \u2228 \u00acp_6(Adele)\np_11(Adele) \u2228 p_12(Adele)\n\u00acp_11(Adele) \u2228 \u00acp_12(Adele)\n\u00acp_6(Adele)\np_4(Adele) \u2228 p_10(Adele)",
            "Initial Goal": "non_p_6(Adele)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Adele).",
                    "p_3(Adele).",
                    "-p_4(Adele).",
                    "p_2(Adele).",
                    "p_0(Adele).",
                    "p_5(Adele) | p_12(Adele).",
                    "-p_3(Adele) | p_10(Adele) | p_4(Adele).",
                    "-p_2(Adele) | (-(p_11(Adele) <-> p_12(Adele))).",
                    "-(-(p_8(Adele) <-> p_10(Adele))) | p_11(Adele).",
                    "all x (-(p_6(x) <-> non_p_6(x))).",
                    "p_12(Adele).",
                    "-p_11(Adele).",
                    "p_10(Adele).",
                    "p_8(Adele).",
                    "-(p_11(Adele) <-> p_12(Adele)).",
                    "p_10(Adele) | p_4(Adele).",
                    "p_9(Adele).",
                    "-p_9(Adele) | -p_6(Adele).",
                    "p_11(Adele) | p_12(Adele).",
                    "-p_11(Adele) | -p_12(Adele).",
                    "-p_6(Adele).",
                    "p_4(Adele) | p_10(Adele)."
                ],
                "formulas(goals)": [
                    "non_p_6(Adele)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_9(Adele) \u2192 \u00acp_6(Adele)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Adele)",
                    "\u00acp_9(Adele) \u2228 \u00acp_6(Adele)"
                ],
                "added_rules": []
            }
        }
    ]
}