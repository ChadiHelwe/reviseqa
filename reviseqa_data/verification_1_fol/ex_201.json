{
    "background_story": "Gerardo was a skilled artisan from a small village in Italy, renowned for his exquisite willowware creations. With delicate fingers, he wove and shaped willow branches into beautiful, intricate pieces that seemed to dance in the breeze. His workshop, filled with the sweet scent of willow and the soft sound of gentle weaving, was a haven for those seeking unique, handmade items. Gerardo's passion for willowware was inspired by his grandmother, who taught him the traditional techniques passed down through their family. As his craft gained recognition, people from all over the world sought out Gerardo's willowware, not just for its beauty, but for the love and dedication that went into each carefully crafted piece.",
    "predicates": [
        {
            "id": 0,
            "name": "honor_ancestors"
        },
        {
            "id": 1,
            "name": "make_handmade"
        },
        {
            "id": 2,
            "name": "preserve_tradition"
        },
        {
            "id": 3,
            "name": "focus_details"
        },
        {
            "id": 4,
            "name": "care_materials"
        },
        {
            "id": 5,
            "name": "learn_traditional_techniques"
        },
        {
            "id": 6,
            "name": "dedicate_to_craft"
        },
        {
            "id": 7,
            "name": "create_masterpieces"
        },
        {
            "id": 8,
            "name": "has_passion"
        },
        {
            "id": 9,
            "name": "respect_heritage"
        },
        {
            "id": 10,
            "name": "value_quality"
        },
        {
            "id": 11,
            "name": "study_design"
        },
        {
            "id": 12,
            "name": "refine_skills"
        },
        {
            "id": 13,
            "name": "love_craft"
        },
        {
            "id": 14,
            "name": "enjoy_process"
        },
        {
            "id": 15,
            "name": "respect_ancestors"
        },
        {
            "id": 16,
            "name": "love_nature"
        },
        {
            "id": 17,
            "name": "appreciate_beauty"
        },
        {
            "id": 18,
            "name": "seek_perfection"
        },
        {
            "id": 19,
            "name": "use_natural_material"
        },
        {
            "id": 20,
            "name": "pay_attention_details"
        }
    ],
    "subject_name": "Gerardo",
    "subject_category": "artist",
    "keyword": "willowware",
    "all_facts": [
        {
            "id": 0,
            "subject": "Gerardo",
            "text": "Gerardo does not honor his ancestors.",
            "fol": "\u00acp_0(Gerardo)",
            "str_fol": "\u00achonor_ancestors(Gerardo)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Gerardo",
            "text": "Gerardo does not make handmade items.",
            "fol": "\u00acp_1(Gerardo)",
            "str_fol": "\u00acmake_handmade(Gerardo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Gerardo",
            "text": "Gerardo preserves tradition.",
            "fol": "p_2(Gerardo)",
            "str_fol": "preserve_tradition(Gerardo)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Gerardo",
            "text": "Gerardo focuses on details.",
            "fol": "p_3(Gerardo)",
            "str_fol": "focus_details(Gerardo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Gerardo",
            "text": "Gerardo cares about materials.",
            "fol": "p_4(Gerardo)",
            "str_fol": "care_materials(Gerardo)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Gerardo",
            "text": "Gerardo respects his heritage.",
            "fol": "p_9(Gerardo)",
            "str_fol": "respect_heritage(Gerardo)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Gerardo",
            "text": "Gerardo learns traditional techniques.",
            "fol": "p_5(Gerardo)",
            "str_fol": "learn_traditional_techniques(Gerardo)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Gerardo",
            "text": "Gerardo has passion.",
            "fol": "p_8(Gerardo)",
            "str_fol": "has_passion(Gerardo)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Gerardo",
            "text": "Gerardo does not create masterpieces.",
            "fol": "\u00acp_7(Gerardo)",
            "str_fol": "\u00accreate_masterpieces(Gerardo)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Gerardo",
            "text": "Gerardo does not dedicate himself to his craft.",
            "fol": "\u00acp_6(Gerardo)",
            "str_fol": "\u00acdedicate_to_craft(Gerardo)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Gerardo",
            "text": "Gerardo focuses on details.",
            "fol": "p_3(Gerardo)",
            "str_fol": "focus_details(Gerardo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Gerardo",
            "text": "Gerardo cares about materials.",
            "fol": "p_4(Gerardo)",
            "str_fol": "care_materials(Gerardo)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Gerardo",
            "text": "Gerardo does not honor his ancestors.",
            "fol": "\u00acp_0(Gerardo)",
            "str_fol": "\u00achonor_ancestors(Gerardo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Gerardo",
            "text": "Gerardo preserves tradition.",
            "fol": "p_2(Gerardo)",
            "str_fol": "preserve_tradition(Gerardo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Gerardo",
            "text": "Gerardo does not make handmade items.",
            "fol": "\u00acp_1(Gerardo)",
            "str_fol": "\u00acmake_handmade(Gerardo)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "All artists who value quality focus on details and care about materials.",
            "fol": "\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))",
            "str_fol": "\u2200x (value_quality(x) \u2192 (focus_details(x) \u2227 care_materials(x)))"
        },
        {
            "id": 4,
            "text": "If Gerardo either honors his ancestors or preserves tradition (but not both), then he respects his heritage.",
            "fol": "(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)",
            "str_fol": "(honor_ancestors(Gerardo) \u2295 preserve_tradition(Gerardo)) \u2192 respect_heritage(Gerardo)"
        },
        {
            "id": 3,
            "text": "All artists who respect their heritage learn traditional techniques and value quality.",
            "fol": "\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (respect_heritage(x) \u2192 (learn_traditional_techniques(x) \u2227 value_quality(x)))"
        },
        {
            "id": 2,
            "text": "An artist either makes handmade items or has passion, but having one does not guarantee the other.",
            "fol": "\u2200x (p_1(x) \u2295 p_8(x))",
            "str_fol": "\u2200x (make_handmade(x) \u2295 has_passion(x))"
        },
        {
            "id": 1,
            "text": "An artist either creates masterpieces or has passion, but not both is not a requirement, however, having one does not guarantee the other.",
            "fol": "\u2200x (p_7(x) \u2295 p_8(x))",
            "str_fol": "\u2200x (create_masterpieces(x) \u2295 has_passion(x))"
        },
        {
            "id": 0,
            "text": "If Gerardo learns traditional techniques and dedicates himself to his craft, then he will create masterpieces.",
            "fol": "(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)",
            "str_fol": "(learn_traditional_techniques(Gerardo) \u2227 dedicate_to_craft(Gerardo)) \u2192 create_masterpieces(Gerardo)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Gerardo",
            "text": "Gerardo focuses on details.",
            "fol": "p_3(Gerardo)",
            "str_fol": "focus_details(Gerardo)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Gerardo",
            "text": "Gerardo cares about materials.",
            "fol": "p_4(Gerardo)",
            "str_fol": "care_materials(Gerardo)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Gerardo",
            "text": "Gerardo does not honor his ancestors.",
            "fol": "\u00acp_0(Gerardo)",
            "str_fol": "\u00achonor_ancestors(Gerardo)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Gerardo",
            "text": "Gerardo preserves tradition.",
            "fol": "p_2(Gerardo)",
            "str_fol": "preserve_tradition(Gerardo)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Gerardo",
            "text": "Gerardo does not make handmade items.",
            "fol": "\u00acp_1(Gerardo)",
            "str_fol": "\u00acmake_handmade(Gerardo)",
            "negation": true
        },
        {
            "id": 5,
            "text": "All artists who value quality focus on details and care about materials.",
            "fol": "\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))",
            "str_fol": "\u2200x (value_quality(x) \u2192 (focus_details(x) \u2227 care_materials(x)))"
        },
        {
            "id": 4,
            "text": "If Gerardo either honors his ancestors or preserves tradition (but not both), then he respects his heritage.",
            "fol": "(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)",
            "str_fol": "(honor_ancestors(Gerardo) \u2295 preserve_tradition(Gerardo)) \u2192 respect_heritage(Gerardo)"
        },
        {
            "id": 3,
            "text": "All artists who respect their heritage learn traditional techniques and value quality.",
            "fol": "\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (respect_heritage(x) \u2192 (learn_traditional_techniques(x) \u2227 value_quality(x)))"
        },
        {
            "id": 2,
            "text": "An artist either makes handmade items or has passion, but having one does not guarantee the other.",
            "fol": "\u2200x (p_1(x) \u2295 p_8(x))",
            "str_fol": "\u2200x (make_handmade(x) \u2295 has_passion(x))"
        },
        {
            "id": 1,
            "text": "An artist either creates masterpieces or has passion, but not both is not a requirement, however, having one does not guarantee the other.",
            "fol": "\u2200x (p_7(x) \u2295 p_8(x))",
            "str_fol": "\u2200x (create_masterpieces(x) \u2295 has_passion(x))"
        },
        {
            "id": 0,
            "text": "If Gerardo learns traditional techniques and dedicates himself to his craft, then he will create masterpieces.",
            "fol": "(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)",
            "str_fol": "(learn_traditional_techniques(Gerardo) \u2227 dedicate_to_craft(Gerardo)) \u2192 create_masterpieces(Gerardo)"
        }
    ],
    "context_fol": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)",
    "conclusion": {
        "id": 9,
        "subject": "Gerardo",
        "text": "Gerardo does not dedicate himself to his craft.",
        "fol": "\u00acp_6(Gerardo)",
        "str_fol": "\u00acdedicate_to_craft(Gerardo)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_6(Gerardo)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Gerardo",
                    "text": "Gerardo focuses on details.",
                    "fol": "p_3(Gerardo)",
                    "str_fol": "focus_details(Gerardo)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Gerardo",
                    "text": "Gerardo cares about materials.",
                    "fol": "p_4(Gerardo)",
                    "str_fol": "care_materials(Gerardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "All artists who value quality focus on details and care about materials.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))",
                    "str_fol": "\u2200x (value_quality(x) \u2192 (focus_details(x) \u2227 care_materials(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Gerardo",
                    "text": "Gerardo does not honor his ancestors.",
                    "fol": "\u00acp_0(Gerardo)",
                    "str_fol": "\u00achonor_ancestors(Gerardo)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Gerardo",
                    "text": "Gerardo preserves tradition.",
                    "fol": "p_2(Gerardo)",
                    "str_fol": "preserve_tradition(Gerardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Gerardo either honors his ancestors or preserves tradition (but not both), then he respects his heritage.",
                    "fol": "(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)",
                    "str_fol": "(honor_ancestors(Gerardo) \u2295 preserve_tradition(Gerardo)) \u2192 respect_heritage(Gerardo)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Gerardo",
                "text": "Gerardo respects his heritage.",
                "fol": "p_9(Gerardo)",
                "str_fol": "respect_heritage(Gerardo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Gerardo",
                    "text": "Gerardo respects his heritage.",
                    "fol": "p_9(Gerardo)",
                    "str_fol": "respect_heritage(Gerardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "All artists who respect their heritage learn traditional techniques and value quality.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (respect_heritage(x) \u2192 (learn_traditional_techniques(x) \u2227 value_quality(x)))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Gerardo",
                "text": "Gerardo learns traditional techniques.",
                "fol": "p_5(Gerardo)",
                "str_fol": "learn_traditional_techniques(Gerardo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Gerardo",
                    "text": "Gerardo does not make handmade items.",
                    "fol": "\u00acp_1(Gerardo)",
                    "str_fol": "\u00acmake_handmade(Gerardo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "An artist either makes handmade items or has passion, but having one does not guarantee the other.",
                    "fol": "\u2200x (p_1(x) \u2295 p_8(x))",
                    "str_fol": "\u2200x (make_handmade(x) \u2295 has_passion(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Gerardo",
                "text": "Gerardo has passion.",
                "fol": "p_8(Gerardo)",
                "str_fol": "has_passion(Gerardo)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Gerardo",
                    "text": "Gerardo has passion.",
                    "fol": "p_8(Gerardo)",
                    "str_fol": "has_passion(Gerardo)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "An artist either creates masterpieces or has passion, but not both is not a requirement, however, having one does not guarantee the other.",
                    "fol": "\u2200x (p_7(x) \u2295 p_8(x))",
                    "str_fol": "\u2200x (create_masterpieces(x) \u2295 has_passion(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Gerardo",
                "text": "Gerardo does not create masterpieces.",
                "fol": "\u00acp_7(Gerardo)",
                "str_fol": "\u00accreate_masterpieces(Gerardo)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Gerardo",
                    "text": "Gerardo learns traditional techniques.",
                    "fol": "p_5(Gerardo)",
                    "str_fol": "learn_traditional_techniques(Gerardo)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Gerardo",
                    "text": "Gerardo does not create masterpieces.",
                    "fol": "\u00acp_7(Gerardo)",
                    "str_fol": "\u00accreate_masterpieces(Gerardo)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Gerardo learns traditional techniques and dedicates himself to his craft, then he will create masterpieces.",
                    "fol": "(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)",
                    "str_fol": "(learn_traditional_techniques(Gerardo) \u2227 dedicate_to_craft(Gerardo)) \u2192 create_masterpieces(Gerardo)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Gerardo",
                "text": "Gerardo does not dedicate himself to his craft.",
                "fol": "\u00acp_6(Gerardo)",
                "str_fol": "\u00acdedicate_to_craft(Gerardo)",
                "negation": true
            }
        }
    ],
    "proof_trace": "2 -(p_0(Gerardo) <-> p_2(Gerardo)) -> p_9(Gerardo).  [assumption].\n3 (all x (p_9(x) -> p_5(x) & p_10(x))).  [assumption].\n4 (all x -(p_1(x) <-> p_8(x))).  [assumption].\n5 (all x -(p_7(x) <-> p_8(x))).  [assumption].\n6 p_5(Gerardo) & p_6(Gerardo) -> p_7(Gerardo).  [assumption].\n7 -p_6(Gerardo).  [goal].\n8 p_0(Gerardo) | -p_2(Gerardo) | p_9(Gerardo).  [clausify(2)].\n9 -p_0(Gerardo).  [assumption].\n11 -p_2(Gerardo) | p_9(Gerardo).  [resolve(8,a,9,a)].\n12 p_2(Gerardo).  [assumption].\n13 p_1(x) | p_8(x).  [clausify(4)].\n14 -p_1(Gerardo).  [assumption].\n16 p_9(Gerardo).  [resolve(11,a,12,a)].\n17 -p_9(x) | p_5(x).  [clausify(3)].\n19 -p_7(x) | -p_8(x).  [clausify(5)].\n21 -p_5(Gerardo) | -p_6(Gerardo) | p_7(Gerardo).  [clausify(6)].\n22 -p_5(Gerardo) | -p_6(Gerardo) | -p_8(Gerardo).  [resolve(21,c,19,a)].\n23 p_6(Gerardo).  [deny(7)].\n24 -p_5(Gerardo) | -p_8(Gerardo).  [resolve(22,b,23,a)].\n25 p_8(Gerardo).  [resolve(13,a,14,a)].\n26 -p_5(Gerardo).  [resolve(24,b,25,a)].\n27 p_5(Gerardo).  [resolve(16,a,17,a)].\n28 $F.  [resolve(26,a,27,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo)",
                    "p_4(Gerardo)",
                    "-p_0(Gerardo)",
                    "p_2(Gerardo)",
                    "-p_1(Gerardo)",
                    "all x (p_10(x) -> (p_3(x) & p_4(x)))",
                    "(-(p_0(Gerardo) <-> p_2(Gerardo))) -> p_9(Gerardo)",
                    "all x (p_9(x) -> (p_5(x) & p_10(x)))",
                    "all x (-(p_1(x) <-> p_8(x)))",
                    "all x (-(p_7(x) <-> p_8(x)))",
                    "(p_5(Gerardo) & p_6(Gerardo)) -> p_7(Gerardo)",
                    "all x (p_9(x) -> p_5(x))",
                    "all x (p_9(x) -> p_10(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "all x (p_10(x) -> p_4(x))",
                    "all x (p_1(x) -> -p_8(x))",
                    "all x (p_8(x) -> -p_1(x))"
                ],
                "formulas(goals)": [
                    "-p_6(Gerardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_9(x) \u2192 p_5(x))",
                    "\u2200x (p_9(x) \u2192 p_10(x))",
                    "\u2200x (p_10(x) \u2192 p_3(x))",
                    "\u2200x (p_10(x) \u2192 p_4(x))",
                    "\u2200x (p_1(x) \u2192 \u00acp_8(x))",
                    "\u2200x (p_8(x) \u2192 \u00acp_1(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))\n\u00acp_7(Gerardo)\np_8(Gerardo)\n\u2200x (\u00acp_1(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 \u00acp_8(x))",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo)",
                    "p_4(Gerardo)",
                    "-p_0(Gerardo)",
                    "p_2(Gerardo)",
                    "-p_1(Gerardo)",
                    "all x (p_10(x) -> (p_3(x) & p_4(x)))",
                    "(-(p_0(Gerardo) <-> p_2(Gerardo))) -> p_9(Gerardo)",
                    "all x (p_9(x) -> (p_5(x) & p_10(x)))",
                    "all x (-(p_1(x) <-> p_8(x)))",
                    "all x (-(p_7(x) <-> p_8(x)))",
                    "(p_5(Gerardo) & p_6(Gerardo)) -> p_7(Gerardo)",
                    "all x (p_9(x) -> p_5(x))",
                    "all x (p_9(x) -> p_10(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "all x (p_10(x) -> p_4(x))",
                    "all x (p_1(x) -> -p_8(x))",
                    "all x (p_8(x) -> -p_1(x))",
                    "-p_7(Gerardo)",
                    "p_8(Gerardo)",
                    "all x (-p_1(x) -> p_8(x))",
                    "all x (p_7(x) -> -p_8(x))"
                ],
                "formulas(goals)": [
                    "-p_6(Gerardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Gerardo)",
                    "p_8(Gerardo)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_1(x) \u2192 p_8(x))",
                    "\u2200x (p_7(x) \u2192 \u00acp_8(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))\n\u00acp_7(Gerardo)\np_8(Gerardo)\n\u2200x (\u00acp_1(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 \u00acp_8(x))\np_5(Gerardo) \u2192 p_6(Gerardo)",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo).",
                    "p_4(Gerardo).",
                    "-p_0(Gerardo).",
                    "p_2(Gerardo).",
                    "-p_1(Gerardo).",
                    "all x (p_10(x) -> (p_3(x) & p_4(x))).",
                    "(-(p_0(Gerardo) <-> p_2(Gerardo))) -> p_9(Gerardo).",
                    "all x (p_9(x) -> (p_5(x) & p_10(x))).",
                    "all x (-(p_1(x) <-> p_8(x))).",
                    "all x (-(p_7(x) <-> p_8(x))).",
                    "all x (p_9(x) -> p_5(x)).",
                    "all x (p_9(x) -> p_10(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> p_4(x)).",
                    "all x (p_1(x) -> -p_8(x)).",
                    "all x (p_8(x) -> -p_1(x)).",
                    "-p_7(Gerardo).",
                    "p_8(Gerardo).",
                    "all x (-p_1(x) -> p_8(x)).",
                    "all x (p_7(x) -> -p_8(x)).",
                    "p_5(Gerardo) -> p_6(Gerardo)."
                ],
                "formulas(goals)": [
                    "p_6(Gerardo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_5(Gerardo) \u2227 p_6(Gerardo)) \u2192 p_7(Gerardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Gerardo) \u2192 p_6(Gerardo)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))\n\u00acp_7(Gerardo)\np_8(Gerardo)\n\u2200x (\u00acp_1(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 \u00acp_8(x))\np_5(Gerardo) \u2192 p_6(Gerardo)\np_8(Gerardo) \u2192 \u00acp_6(Gerardo)",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo)",
                    "p_4(Gerardo)",
                    "-p_0(Gerardo)",
                    "p_2(Gerardo)",
                    "-p_1(Gerardo)",
                    "all x (p_10(x) -> (p_3(x) & p_4(x)))",
                    "all x (p_9(x) -> (p_5(x) & p_10(x)))",
                    "all x (-(p_1(x) <-> p_8(x)))",
                    "all x (-(p_7(x) <-> p_8(x)))",
                    "all x (p_9(x) -> p_5(x))",
                    "all x (p_9(x) -> p_10(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "all x (p_10(x) -> p_4(x))",
                    "all x (p_1(x) -> -p_8(x))",
                    "all x (p_8(x) -> -p_1(x))",
                    "-p_7(Gerardo)",
                    "p_8(Gerardo)",
                    "all x (-p_1(x) -> p_8(x))",
                    "all x (p_7(x) -> -p_8(x))",
                    "p_5(Gerardo) -> p_6(Gerardo)",
                    "p_8(Gerardo) -> -p_6(Gerardo)"
                ],
                "formulas(goals)": [
                    "-p_6(Gerardo)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Gerardo) \u2295 p_2(Gerardo)) \u2192 p_9(Gerardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Gerardo) \u2192 \u00acp_6(Gerardo)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))\n\u00acp_7(Gerardo)\np_8(Gerardo)\n\u2200x (\u00acp_1(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 \u00acp_8(x))\np_5(Gerardo) \u2192 p_6(Gerardo)\np_8(Gerardo) \u2192 p_5(Gerardo)",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo).",
                    "p_4(Gerardo).",
                    "-p_0(Gerardo).",
                    "p_2(Gerardo).",
                    "-p_1(Gerardo).",
                    "all x (p_10(x) -> (p_3(x) & p_4(x))).",
                    "all x (p_9(x) -> (p_5(x) & p_10(x))).",
                    "all x (-(p_1(x) <-> p_8(x))).",
                    "all x (-(p_7(x) <-> p_8(x))).",
                    "all x (p_9(x) -> p_5(x)).",
                    "all x (p_9(x) -> p_10(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> p_4(x)).",
                    "all x (p_1(x) -> -p_8(x)).",
                    "all x (p_8(x) -> -p_1(x)).",
                    "-p_7(Gerardo).",
                    "p_8(Gerardo).",
                    "all x (-p_1(x) -> p_8(x)).",
                    "all x (p_7(x) -> -p_8(x)).",
                    "p_5(Gerardo) -> p_6(Gerardo).",
                    "p_8(Gerardo) -> p_5(Gerardo)."
                ],
                "formulas(goals)": [
                    "-(-p_6(Gerardo))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Gerardo) \u2192 \u00acp_6(Gerardo)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Gerardo) \u2192 p_5(Gerardo)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))\n\u00acp_7(Gerardo)\np_8(Gerardo)\n\u2200x (\u00acp_1(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 \u00acp_8(x))\np_5(Gerardo) \u2192 p_6(Gerardo)\np_8(Gerardo) \u2192 p_5(Gerardo)\n\u2200x (p_1(x) \u2194 p_7(x))",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo)",
                    "p_4(Gerardo)",
                    "-p_0(Gerardo)",
                    "p_2(Gerardo)",
                    "-p_1(Gerardo)",
                    "all x (p_10(x) -> (p_3(x) & p_4(x)))",
                    "all x (p_9(x) -> (p_5(x) & p_10(x)))",
                    "all x (-(p_1(x) <-> p_8(x)))",
                    "all x (-(p_7(x) <-> p_8(x)))",
                    "all x (p_9(x) -> p_5(x))",
                    "all x (p_9(x) -> p_10(x))",
                    "all x (p_10(x) -> p_3(x))",
                    "all x (p_10(x) -> p_4(x))",
                    "all x (p_1(x) -> -p_8(x))",
                    "all x (p_8(x) -> -p_1(x))",
                    "-p_7(Gerardo)",
                    "p_8(Gerardo)",
                    "all x (-p_1(x) -> p_8(x))",
                    "all x (p_7(x) -> -p_8(x))",
                    "p_5(Gerardo) -> p_6(Gerardo)",
                    "p_8(Gerardo) -> p_5(Gerardo)",
                    "all x (p_1(x) <-> p_7(x))"
                ],
                "formulas(goals)": [
                    "-(-p_6(Gerardo))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_1(x) \u2194 p_7(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Gerardo)\np_4(Gerardo)\n\u00acp_0(Gerardo)\np_2(Gerardo)\n\u00acp_1(Gerardo)\n\u2200x (p_10(x) \u2192 (p_3(x) \u2227 p_4(x)))\n\u2200x (p_9(x) \u2192 (p_5(x) \u2227 p_10(x)))\n\u2200x (p_1(x) \u2295 p_8(x))\n\u2200x (p_7(x) \u2295 p_8(x))\n\u2200x (p_9(x) \u2192 p_5(x))\n\u2200x (p_9(x) \u2192 p_10(x))\n\u2200x (p_10(x) \u2192 p_3(x))\n\u2200x (p_10(x) \u2192 p_4(x))\n\u2200x (p_1(x) \u2192 \u00acp_8(x))\n\u2200x (p_8(x) \u2192 \u00acp_1(x))\n\u00acp_7(Gerardo)\np_8(Gerardo)\n\u2200x (\u00acp_1(x) \u2192 p_8(x))\n\u2200x (p_7(x) \u2192 \u00acp_8(x))\np_5(Gerardo) \u2192 p_6(Gerardo)\np_8(Gerardo) \u2192 p_5(Gerardo)\n\u2200x (p_1(x) \u2194 p_7(x))\np_6(Gerardo) \u2228 \u00acp_6(Gerardo)\n\u2200x (\u00acp_8(x) \u2192 p_1(x))\n\u2200x (\u00acp_5(x) \u2192 \u00acp_9(x))\n\u2200x (\u00acp_10(x) \u2192 \u00acp_9(x))",
            "Initial Goal": "\u00acp_6(Gerardo)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Gerardo).",
                    "p_4(Gerardo).",
                    "-p_0(Gerardo).",
                    "p_2(Gerardo).",
                    "-p_1(Gerardo).",
                    "all x (p_10(x) -> (p_3(x) & p_4(x))).",
                    "all x (p_9(x) -> (p_5(x) & p_10(x))).",
                    "all x (-(p_1(x) <-> p_8(x))).",
                    "all x (-(p_7(x) <-> p_8(x))).",
                    "all x (p_9(x) -> p_5(x)).",
                    "all x (p_9(x) -> p_10(x)).",
                    "all x (p_10(x) -> p_3(x)).",
                    "all x (p_10(x) -> p_4(x)).",
                    "all x (p_1(x) -> -p_8(x)).",
                    "all x (p_8(x) -> -p_1(x)).",
                    "-p_7(Gerardo).",
                    "p_8(Gerardo).",
                    "all x (-p_1(x) -> p_8(x)).",
                    "all x (p_7(x) -> -p_8(x)).",
                    "p_5(Gerardo) -> p_6(Gerardo).",
                    "p_8(Gerardo) -> p_5(Gerardo).",
                    "all x (p_1(x) <-> p_7(x)).",
                    "p_6(Gerardo) | -p_6(Gerardo).",
                    "all x (-p_8(x) -> p_1(x)).",
                    "all x (-p_5(x) -> -p_9(x)).",
                    "all x (-p_10(x) -> -p_9(x))."
                ],
                "formulas(goals)": [
                    "--p_6(Gerardo)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Gerardo) \u2228 \u00acp_6(Gerardo)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_8(x) \u2192 p_1(x))",
                    "\u2200x (\u00acp_5(x) \u2192 \u00acp_9(x))",
                    "\u2200x (\u00acp_10(x) \u2192 \u00acp_9(x))"
                ]
            }
        }
    ]
}