{
    "background_story": "Kyler was a renowned fashion designer known for his daring and elegant creations. His latest collection, 'Midnight Mirage,' featured a stunning array of strapless evening gowns that left the fashion world in awe. Inspired by the beauty of the night sky, Kyler's strapless designs seemed to defy gravity, with delicate fabrics and intricate details that shimmered like stars. His showstopper piece, a strapless gown made from hundreds of hand-beaded crystals, was worn by a famous actress to a prestigious awards ceremony, cementing Kyler's status as a master of red-carpet fashion. Kyler's passion for strapless designs was not just about making a statement, but about empowering women to feel confident and beautiful.",
    "predicates": [
        {
            "id": 0,
            "name": "makes_statement"
        },
        {
            "id": 1,
            "name": "thinks_creatively"
        },
        {
            "id": 2,
            "name": "stays_trendy"
        },
        {
            "id": 3,
            "name": "creates_strapless_gowns"
        },
        {
            "id": 4,
            "name": "inspires_confidence"
        },
        {
            "id": 5,
            "name": "uses_luxuryFabrics"
        },
        {
            "id": 6,
            "name": "receives_acclaim"
        },
        {
            "id": 7,
            "name": "designs_elegance"
        },
        {
            "id": 8,
            "name": "has_good_taste"
        },
        {
            "id": 9,
            "name": "is_innovative"
        },
        {
            "id": 10,
            "name": "loves_beading"
        },
        {
            "id": 11,
            "name": "enjoys_draping"
        },
        {
            "id": 12,
            "name": "crafts_masterpieces"
        },
        {
            "id": 13,
            "name": "pushes_boundaries"
        },
        {
            "id": 14,
            "name": "empowers_women"
        },
        {
            "id": 15,
            "name": "loves_beauty"
        },
        {
            "id": 16,
            "name": "uses_unconventional"
        },
        {
            "id": 17,
            "name": "experiments_colors"
        }
    ],
    "subject_name": "Kyler",
    "subject_category": "fashion designer",
    "keyword": "strapless",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kyler",
            "text": "Kyler makes a statement with his designs.",
            "fol": "p_0(Kyler)",
            "str_fol": "makes_statement(Kyler)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kyler",
            "text": "Kyler thinks creatively.",
            "fol": "p_1(Kyler)",
            "str_fol": "thinks_creatively(Kyler)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kyler",
            "text": "Kyler does not stay trendy.",
            "fol": "\u00acp_2(Kyler)",
            "str_fol": "\u00acstays_trendy(Kyler)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Kyler",
            "text": "Kyler is innovative.",
            "fol": "p_9(Kyler)",
            "str_fol": "is_innovative(Kyler)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kyler",
            "text": "Kyler designs elegant clothing.",
            "fol": "p_7(Kyler)",
            "str_fol": "designs_elegance(Kyler)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kyler",
            "text": "Kyler does not receive acclaim.",
            "fol": "\u00acp_6(Kyler)",
            "str_fol": "\u00acreceives_acclaim(Kyler)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Kyler",
            "text": "Kyler uses luxury fabrics.",
            "fol": "p_5(Kyler)",
            "str_fol": "uses_luxuryFabrics(Kyler)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Kyler",
            "text": "Kyler does not create strapless gowns.",
            "fol": "\u00acp_3(Kyler)",
            "str_fol": "\u00accreates_strapless_gowns(Kyler)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Kyler",
            "text": "Kyler inspires confidence in his clients.",
            "fol": "p_4(Kyler)",
            "str_fol": "inspires_confidence(Kyler)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 1,
            "subject": "Kyler",
            "text": "Kyler thinks creatively.",
            "fol": "p_1(Kyler)",
            "str_fol": "thinks_creatively(Kyler)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kyler",
            "text": "Kyler does not stay trendy.",
            "fol": "\u00acp_2(Kyler)",
            "str_fol": "\u00acstays_trendy(Kyler)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kyler",
            "text": "Kyler makes a statement with his designs.",
            "fol": "p_0(Kyler)",
            "str_fol": "makes_statement(Kyler)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Kyler is either innovative or thinks creatively (but not both), then he stays trendy.",
            "fol": "(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)",
            "str_fol": "(is_innovative(Kyler) \u2295 thinks_creatively(Kyler)) \u2192 stays_trendy(Kyler)"
        },
        {
            "id": 4,
            "text": "Any fashion designer who has good taste or is innovative can design elegant clothing.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((has_good_taste(x) \u2228 is_innovative(x)) \u2192 designs_elegance(x))"
        },
        {
            "id": 3,
            "text": "Kyler either receives acclaim for his work or makes a statement with his designs, but not necessarily both.",
            "fol": "p_6(Kyler) \u2295 p_0(Kyler)",
            "str_fol": "receives_acclaim(Kyler) \u2295 makes_statement(Kyler)"
        },
        {
            "id": 2,
            "text": "If Kyler designs elegant clothing, then he uses luxury fabrics.",
            "fol": "p_7(Kyler) \u2192 p_5(Kyler)",
            "str_fol": "designs_elegance(Kyler) \u2192 uses_luxuryFabrics(Kyler)"
        },
        {
            "id": 1,
            "text": "If Kyler creates strapless gowns and uses luxury fabrics, then he receives acclaim.",
            "fol": "(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)",
            "str_fol": "(creates_strapless_gowns(Kyler) \u2227 uses_luxuryFabrics(Kyler)) \u2192 receives_acclaim(Kyler)"
        },
        {
            "id": 0,
            "text": "Kyler either creates strapless gowns or inspires confidence in his clients (or both).",
            "fol": "p_3(Kyler) \u2228 p_4(Kyler)",
            "str_fol": "creates_strapless_gowns(Kyler) \u2228 inspires_confidence(Kyler)"
        }
    ],
    "context": [
        {
            "id": 1,
            "subject": "Kyler",
            "text": "Kyler thinks creatively.",
            "fol": "p_1(Kyler)",
            "str_fol": "thinks_creatively(Kyler)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kyler",
            "text": "Kyler does not stay trendy.",
            "fol": "\u00acp_2(Kyler)",
            "str_fol": "\u00acstays_trendy(Kyler)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kyler",
            "text": "Kyler makes a statement with his designs.",
            "fol": "p_0(Kyler)",
            "str_fol": "makes_statement(Kyler)",
            "negation": false
        },
        {
            "id": 5,
            "text": "If Kyler is either innovative or thinks creatively (but not both), then he stays trendy.",
            "fol": "(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)",
            "str_fol": "(is_innovative(Kyler) \u2295 thinks_creatively(Kyler)) \u2192 stays_trendy(Kyler)"
        },
        {
            "id": 4,
            "text": "Any fashion designer who has good taste or is innovative can design elegant clothing.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((has_good_taste(x) \u2228 is_innovative(x)) \u2192 designs_elegance(x))"
        },
        {
            "id": 3,
            "text": "Kyler either receives acclaim for his work or makes a statement with his designs, but not necessarily both.",
            "fol": "p_6(Kyler) \u2295 p_0(Kyler)",
            "str_fol": "receives_acclaim(Kyler) \u2295 makes_statement(Kyler)"
        },
        {
            "id": 2,
            "text": "If Kyler designs elegant clothing, then he uses luxury fabrics.",
            "fol": "p_7(Kyler) \u2192 p_5(Kyler)",
            "str_fol": "designs_elegance(Kyler) \u2192 uses_luxuryFabrics(Kyler)"
        },
        {
            "id": 1,
            "text": "If Kyler creates strapless gowns and uses luxury fabrics, then he receives acclaim.",
            "fol": "(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)",
            "str_fol": "(creates_strapless_gowns(Kyler) \u2227 uses_luxuryFabrics(Kyler)) \u2192 receives_acclaim(Kyler)"
        },
        {
            "id": 0,
            "text": "Kyler either creates strapless gowns or inspires confidence in his clients (or both).",
            "fol": "p_3(Kyler) \u2228 p_4(Kyler)",
            "str_fol": "creates_strapless_gowns(Kyler) \u2228 inspires_confidence(Kyler)"
        }
    ],
    "context_fol": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 p_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler) \u2228 p_4(Kyler)",
    "conclusion": {
        "id": 8,
        "subject": "Kyler",
        "text": "Kyler inspires confidence in his clients.",
        "fol": "p_4(Kyler)",
        "str_fol": "inspires_confidence(Kyler)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_4(Kyler)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Kyler",
                    "text": "Kyler thinks creatively.",
                    "fol": "p_1(Kyler)",
                    "str_fol": "thinks_creatively(Kyler)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Kyler",
                    "text": "Kyler does not stay trendy.",
                    "fol": "\u00acp_2(Kyler)",
                    "str_fol": "\u00acstays_trendy(Kyler)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Kyler is either innovative or thinks creatively (but not both), then he stays trendy.",
                    "fol": "(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)",
                    "str_fol": "(is_innovative(Kyler) \u2295 thinks_creatively(Kyler)) \u2192 stays_trendy(Kyler)"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Kyler",
                "text": "Kyler is innovative.",
                "fol": "p_9(Kyler)",
                "str_fol": "is_innovative(Kyler)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kyler",
                    "text": "Kyler is innovative.",
                    "fol": "p_9(Kyler)",
                    "str_fol": "is_innovative(Kyler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any fashion designer who has good taste or is innovative can design elegant clothing.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((has_good_taste(x) \u2228 is_innovative(x)) \u2192 designs_elegance(x))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Kyler",
                "text": "Kyler designs elegant clothing.",
                "fol": "p_7(Kyler)",
                "str_fol": "designs_elegance(Kyler)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Kyler",
                    "text": "Kyler makes a statement with his designs.",
                    "fol": "p_0(Kyler)",
                    "str_fol": "makes_statement(Kyler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Kyler either receives acclaim for his work or makes a statement with his designs, but not necessarily both.",
                    "fol": "p_6(Kyler) \u2295 p_0(Kyler)",
                    "str_fol": "receives_acclaim(Kyler) \u2295 makes_statement(Kyler)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kyler",
                "text": "Kyler does not receive acclaim.",
                "fol": "\u00acp_6(Kyler)",
                "str_fol": "\u00acreceives_acclaim(Kyler)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Kyler",
                    "text": "Kyler designs elegant clothing.",
                    "fol": "p_7(Kyler)",
                    "str_fol": "designs_elegance(Kyler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Kyler designs elegant clothing, then he uses luxury fabrics.",
                    "fol": "p_7(Kyler) \u2192 p_5(Kyler)",
                    "str_fol": "designs_elegance(Kyler) \u2192 uses_luxuryFabrics(Kyler)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kyler",
                "text": "Kyler uses luxury fabrics.",
                "fol": "p_5(Kyler)",
                "str_fol": "uses_luxuryFabrics(Kyler)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Kyler",
                    "text": "Kyler uses luxury fabrics.",
                    "fol": "p_5(Kyler)",
                    "str_fol": "uses_luxuryFabrics(Kyler)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Kyler",
                    "text": "Kyler does not receive acclaim.",
                    "fol": "\u00acp_6(Kyler)",
                    "str_fol": "\u00acreceives_acclaim(Kyler)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Kyler creates strapless gowns and uses luxury fabrics, then he receives acclaim.",
                    "fol": "(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)",
                    "str_fol": "(creates_strapless_gowns(Kyler) \u2227 uses_luxuryFabrics(Kyler)) \u2192 receives_acclaim(Kyler)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kyler",
                "text": "Kyler does not create strapless gowns.",
                "fol": "\u00acp_3(Kyler)",
                "str_fol": "\u00accreates_strapless_gowns(Kyler)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Kyler",
                    "text": "Kyler does not create strapless gowns.",
                    "fol": "\u00acp_3(Kyler)",
                    "str_fol": "\u00accreates_strapless_gowns(Kyler)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Kyler either creates strapless gowns or inspires confidence in his clients (or both).",
                    "fol": "p_3(Kyler) \u2228 p_4(Kyler)",
                    "str_fol": "creates_strapless_gowns(Kyler) \u2228 inspires_confidence(Kyler)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kyler",
                "text": "Kyler inspires confidence in his clients.",
                "fol": "p_4(Kyler)",
                "str_fol": "inspires_confidence(Kyler)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_9(Kyler) <-> p_1(Kyler)) -> p_2(Kyler).  [assumption].\n2 (all x (p_8(x) | p_9(x) -> p_7(x))).  [assumption].\n3 -(p_6(Kyler) <-> p_0(Kyler)).  [assumption].\n4 p_7(Kyler) -> p_5(Kyler).  [assumption].\n5 p_3(Kyler) & p_5(Kyler) -> p_6(Kyler).  [assumption].\n6 p_4(Kyler).  [goal].\n7 p_9(Kyler) | -p_1(Kyler) | p_2(Kyler).  [clausify(1)].\n8 p_1(Kyler).  [assumption].\n10 p_9(Kyler) | p_2(Kyler).  [resolve(7,b,8,a)].\n11 -p_2(Kyler).  [assumption].\n12 -p_6(Kyler) | -p_0(Kyler).  [clausify(3)].\n13 p_0(Kyler).  [assumption].\n15 p_9(Kyler).  [resolve(10,b,11,a)].\n16 -p_9(x) | p_7(x).  [clausify(2)].\n17 p_7(Kyler).  [resolve(15,a,16,a)].\n18 -p_7(Kyler) | p_5(Kyler).  [clausify(4)].\n19 p_3(Kyler) | p_4(Kyler).  [assumption].\n20 -p_3(Kyler) | -p_5(Kyler) | p_6(Kyler).  [clausify(5)].\n21 p_4(Kyler) | -p_5(Kyler) | p_6(Kyler).  [resolve(19,a,20,a)].\n22 -p_4(Kyler).  [deny(6)].\n23 -p_5(Kyler) | p_6(Kyler).  [resolve(21,a,22,a)].\n24 -p_6(Kyler).  [resolve(12,b,13,a)].\n25 -p_5(Kyler).  [resolve(23,b,24,a)].\n26 p_5(Kyler).  [resolve(17,a,18,a)].\n27 $F.  [resolve(25,a,26,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 p_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler)\np_3(Kyler) \u2192 \u00acp_4(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler).",
                    "-p_2(Kyler).",
                    "p_0(Kyler).",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler).",
                    "all x ((p_8(x) | p_9(x)) -> p_7(x)).",
                    "-(p_6(Kyler) <-> p_0(Kyler)).",
                    "p_7(Kyler) -> p_5(Kyler).",
                    "(p_3(Kyler) & p_5(Kyler)) -> p_6(Kyler).",
                    "p_3(Kyler).",
                    "p_3(Kyler) -> -p_4(Kyler)."
                ],
                "formulas(goals)": [
                    "-p_4(Kyler)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Kyler) \u2228 p_4(Kyler)"
                ],
                "added_facts": [
                    "p_3(Kyler)"
                ],
                "added_rules": [
                    "p_3(Kyler) \u2192 \u00acp_4(Kyler)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 \u00acp_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler)\np_3(Kyler) \u2192 \u00acp_4(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler)",
                    "-p_2(Kyler)",
                    "p_0(Kyler)",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler)",
                    "all x (-p_9(x) | p_7(x))",
                    "(-(p_6(Kyler) <-> p_0(Kyler)))",
                    "p_7(Kyler) -> -p_5(Kyler)",
                    "-p_3(Kyler) | -p_5(Kyler) | p_6(Kyler)",
                    "p_3(Kyler)",
                    "p_3(Kyler) -> -p_4(Kyler)"
                ],
                "formulas(goals)": [
                    "-p_4(Kyler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Kyler) \u2192 p_5(Kyler)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Kyler) \u2192 \u00acp_5(Kyler)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 \u00acp_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler)\np_9(Kyler) \u2192 p_4(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler)",
                    "-p_2(Kyler)",
                    "p_0(Kyler)",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler)",
                    "all x ((p_8(x) | p_9(x)) -> p_7(x))",
                    "-(p_6(Kyler) <-> p_0(Kyler))",
                    "p_7(Kyler) -> -p_5(Kyler)",
                    "(p_3(Kyler) & p_5(Kyler)) -> p_6(Kyler)",
                    "p_3(Kyler)",
                    "p_9(Kyler) -> p_4(Kyler)"
                ],
                "formulas(goals)": [
                    "p_4(Kyler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_3(Kyler) \u2192 \u00acp_4(Kyler)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Kyler) \u2192 p_4(Kyler)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 \u00acp_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler)\np_9(Kyler) \u2192 p_4(Kyler)\n\u00acp_9(Kyler) \u2192 p_2(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler)",
                    "-p_2(Kyler)",
                    "p_0(Kyler)",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler)",
                    "all x ((p_8(x) | p_9(x)) -> p_7(x))",
                    "-(p_6(Kyler) <-> p_0(Kyler))",
                    "p_7(Kyler) -> -p_5(Kyler)",
                    "(p_3(Kyler) & p_5(Kyler)) -> p_6(Kyler)",
                    "p_3(Kyler)",
                    "p_9(Kyler) -> p_4(Kyler)",
                    "-p_9(Kyler) -> p_2(Kyler)"
                ],
                "formulas(goals)": [
                    "p_4(Kyler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_9(Kyler) \u2192 p_2(Kyler)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 \u00acp_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler)\np_9(Kyler) \u2192 \u00acp_4(Kyler)\n\u00acp_9(Kyler) \u2192 p_2(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler).",
                    "-p_2(Kyler).",
                    "p_0(Kyler).",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler).",
                    "all x ((p_8(x) | p_9(x)) -> p_7(x)).",
                    "-(p_6(Kyler) <-> p_0(Kyler)).",
                    "p_7(Kyler) -> -p_5(Kyler).",
                    "(p_3(Kyler) & p_5(Kyler)) -> p_6(Kyler).",
                    "p_3(Kyler).",
                    "p_9(Kyler) -> -p_4(Kyler).",
                    "-p_9(Kyler) -> p_2(Kyler)."
                ],
                "formulas(goals)": [
                    "-p_4(Kyler)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Kyler) \u2192 p_4(Kyler)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Kyler) \u2192 \u00acp_4(Kyler)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_1(Kyler)\n\u00acp_2(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 \u00acp_5(Kyler)\n(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)\np_3(Kyler)\n\u00acp_9(Kyler) \u2192 p_2(Kyler)\np_3(Kyler) \u2227 \u00acp_5(Kyler) \u2192 p_4(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler)",
                    "-p_2(Kyler)",
                    "p_0(Kyler)",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler)",
                    "all x ((p_8(x) | p_9(x)) -> p_7(x))",
                    "-(p_6(Kyler) <-> p_0(Kyler))",
                    "p_7(Kyler) -> -p_5(Kyler)",
                    "(p_3(Kyler) & p_5(Kyler)) -> p_6(Kyler)",
                    "p_3(Kyler)",
                    "-p_9(Kyler) -> p_2(Kyler)",
                    "p_3(Kyler) & -p_5(Kyler) -> p_4(Kyler)"
                ],
                "formulas(goals)": [
                    "p_4(Kyler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Kyler) \u2192 \u00acp_4(Kyler)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Kyler) \u2227 \u00acp_5(Kyler) \u2192 p_4(Kyler)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_1(Kyler)\np_0(Kyler)\n(p_9(Kyler) \u2295 p_1(Kyler)) \u2192 p_2(Kyler)\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_7(x))\np_6(Kyler) \u2295 p_0(Kyler)\np_7(Kyler) \u2192 \u00acp_5(Kyler)\np_3(Kyler)\n\u00acp_9(Kyler) \u2192 p_2(Kyler)\n(p_3(Kyler) \u2227 \u00acp_5(Kyler)) \u2192 p_4(Kyler)\np_5(Kyler)\np_5(Kyler) \u2192 \u00acp_4(Kyler)",
            "Initial Goal": "p_4(Kyler)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_1(Kyler)",
                    "p_0(Kyler)",
                    "(-(p_9(Kyler) <-> p_1(Kyler))) -> p_2(Kyler)",
                    "all x ((p_8(x) | p_9(x)) -> p_7(x))",
                    "-(p_6(Kyler) <-> p_0(Kyler))",
                    "p_7(Kyler) -> -p_5(Kyler)",
                    "p_3(Kyler)",
                    "-p_9(Kyler) -> p_2(Kyler)",
                    "(p_3(Kyler) & -p_5(Kyler)) -> p_4(Kyler)",
                    "p_5(Kyler)",
                    "p_5(Kyler) -> -p_4(Kyler)"
                ],
                "formulas(goals)": [
                    "-p_4(Kyler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_2(Kyler)"
                ],
                "removed_rules": [
                    "(p_3(Kyler) \u2227 p_5(Kyler)) \u2192 p_6(Kyler)"
                ],
                "added_facts": [
                    "p_5(Kyler)"
                ],
                "added_rules": [
                    "p_5(Kyler) \u2192 \u00acp_4(Kyler)"
                ]
            }
        }
    ]
}