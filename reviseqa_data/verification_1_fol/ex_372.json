{
    "background_story": "Selena was a skilled craftswoman who lived in a small village surrounded by dense forests. She was particularly renowned for her exquisite woodcarvings, often using the resilient needlewood tree as her medium. The needlewood, with its unique, needle-like leaves, was a challenging material to work with, but Selena's patience and dedication allowed her to coax beautiful creations from it. Her workshop, filled with the sweet scent of freshly cut wood, was a place of tranquility where she would spend hours meticulously carving intricate designs. Selena's needlewood creations, from decorative boxes to elegant figurines, were highly sought after, not just for their beauty but also for the love and care that she infused into each piece.",
    "predicates": [
        {
            "id": 0,
            "name": "loves_design"
        },
        {
            "id": 1,
            "name": "artist"
        },
        {
            "id": 2,
            "name": "creative"
        },
        {
            "id": 3,
            "name": "produces_masterpieces"
        },
        {
            "id": 4,
            "name": "carves_figures"
        },
        {
            "id": 5,
            "name": "is_artistic"
        },
        {
            "id": 6,
            "name": "likes_crafting"
        },
        {
            "id": 7,
            "name": "skilled_craftswoman"
        },
        {
            "id": 8,
            "name": "patient"
        },
        {
            "id": 9,
            "name": "dedicated"
        },
        {
            "id": 10,
            "name": "works_with_wood"
        },
        {
            "id": 11,
            "name": "makes_decorations"
        },
        {
            "id": 12,
            "name": "has_talent"
        },
        {
            "id": 13,
            "name": "enjoys_building"
        },
        {
            "id": 14,
            "name": "attentive_details"
        },
        {
            "id": 15,
            "name": "meticulous_worker"
        },
        {
            "id": 16,
            "name": "attentive_to_details"
        },
        {
            "id": 17,
            "name": "passionate_about_work"
        },
        {
            "id": 18,
            "name": "uses_tools"
        },
        {
            "id": 19,
            "name": "builds_furniture"
        },
        {
            "id": 20,
            "name": "attends_workshop"
        },
        {
            "id": 21,
            "name": "practices_daily"
        },
        {
            "id": 22,
            "name": "likes_hands"
        },
        {
            "id": 23,
            "name": "makes_things"
        }
    ],
    "subject_name": "Selena",
    "subject_category": "human",
    "keyword": "needlewood",
    "all_facts": [
        {
            "id": 0,
            "subject": "Selena",
            "text": "Selena loves design.",
            "fol": "p_0(Selena)",
            "str_fol": "loves_design(Selena)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Selena",
            "text": "Selena is an artist.",
            "fol": "p_1(Selena)",
            "str_fol": "artist(Selena)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Selena",
            "text": "Selena is creative.",
            "fol": "p_2(Selena)",
            "str_fol": "creative(Selena)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Selena",
            "text": "Selena does not produce masterpieces.",
            "fol": "\u00acp_3(Selena)",
            "str_fol": "\u00acproduces_masterpieces(Selena)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Selena",
            "text": "Selena does not carve figures.",
            "fol": "\u00acp_4(Selena)",
            "str_fol": "\u00accarves_figures(Selena)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Selena",
            "text": "Selena is artistic.",
            "fol": "is_p_1ic(Selena)",
            "str_fol": "is_artistic(Selena)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Selena",
            "text": "Selena does not like crafting.",
            "fol": "\u00acp_6(Selena)",
            "str_fol": "\u00aclikes_crafting(Selena)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Selena",
            "text": "Selena enjoys building.",
            "fol": "p_13(Selena)",
            "str_fol": "enjoys_building(Selena)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Selena",
            "text": "Selena does not have talent.",
            "fol": "\u00acp_12(Selena)",
            "str_fol": "\u00achas_talent(Selena)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Selena",
            "text": "Selena does not make decorations.",
            "fol": "\u00acp_11(Selena)",
            "str_fol": "\u00acmakes_decorations(Selena)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Selena",
            "text": "Selena does not work with wood.",
            "fol": "\u00acp_10(Selena)",
            "str_fol": "\u00acworks_with_wood(Selena)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Selena",
            "text": "Selena is not dedicated.",
            "fol": "\u00acp_9(Selena)",
            "str_fol": "\u00acdedicated(Selena)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Selena",
            "text": "Selena is a skilled craftswoman.",
            "fol": "p_7(Selena)",
            "str_fol": "skilled_craftswoman(Selena)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Selena",
            "text": "Selena is not patient.",
            "fol": "\u00acp_8(Selena)",
            "str_fol": "\u00acpatient(Selena)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 5,
            "subject": "Selena",
            "text": "Selena is artistic.",
            "fol": "is_p_1ic(Selena)",
            "str_fol": "is_artistic(Selena)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Selena",
            "text": "Selena does not like crafting.",
            "fol": "\u00acp_6(Selena)",
            "str_fol": "\u00aclikes_crafting(Selena)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Selena",
            "text": "Selena loves design.",
            "fol": "p_0(Selena)",
            "str_fol": "loves_design(Selena)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Selena",
            "text": "Selena does not carve figures.",
            "fol": "\u00acp_4(Selena)",
            "str_fol": "\u00accarves_figures(Selena)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Selena",
            "text": "Selena does not produce masterpieces.",
            "fol": "\u00acp_3(Selena)",
            "str_fol": "\u00acproduces_masterpieces(Selena)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Selena",
            "text": "Selena is an artist.",
            "fol": "p_1(Selena)",
            "str_fol": "artist(Selena)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Selena",
            "text": "Selena is creative.",
            "fol": "p_2(Selena)",
            "str_fol": "creative(Selena)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Selena is artistic, then she either enjoys building or likes crafting.",
            "fol": "is_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))",
            "str_fol": "is_artistic(Selena) \u2192 (enjoys_building(Selena) \u2228 likes_crafting(Selena))"
        },
        {
            "id": 5,
            "text": "If Selena has talent, then she either loves design or enjoys building, but not both.",
            "fol": "p_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))",
            "str_fol": "has_talent(Selena) \u2192 (loves_design(Selena) \u2295 enjoys_building(Selena))"
        },
        {
            "id": 4,
            "text": "If Selena either carves figures or makes decorations (but not both), then she has talent.",
            "fol": "(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)",
            "str_fol": "(carves_figures(Selena) \u2295 makes_decorations(Selena)) \u2192 has_talent(Selena)"
        },
        {
            "id": 3,
            "text": "If Selena makes decorations or works with wood, then she can produce masterpieces.",
            "fol": "(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)",
            "str_fol": "(makes_decorations(Selena) \u2228 works_with_wood(Selena)) \u2192 produces_masterpieces(Selena)"
        },
        {
            "id": 2,
            "text": "If Selena is an artist, then she is either dedicated or creative, but not both.",
            "fol": "p_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))",
            "str_fol": "artist(Selena) \u2192 (dedicated(Selena) \u2295 creative(Selena))"
        },
        {
            "id": 1,
            "text": "Selena either works with wood or is a skilled craftswoman, which in her case, happens to be both.",
            "fol": "p_10(Selena) \u2295 p_7(Selena)",
            "str_fol": "works_with_wood(Selena) \u2295 skilled_craftswoman(Selena)"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is a skilled craftswoman, then they are either patient or dedicated (or both).",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (skilled_craftswoman(x) \u2192 (patient(x) \u2228 dedicated(x)))"
        }
    ],
    "context": [
        {
            "id": 5,
            "subject": "Selena",
            "text": "Selena is artistic.",
            "fol": "is_p_1ic(Selena)",
            "str_fol": "is_artistic(Selena)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Selena",
            "text": "Selena does not like crafting.",
            "fol": "\u00acp_6(Selena)",
            "str_fol": "\u00aclikes_crafting(Selena)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Selena",
            "text": "Selena loves design.",
            "fol": "p_0(Selena)",
            "str_fol": "loves_design(Selena)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Selena",
            "text": "Selena does not carve figures.",
            "fol": "\u00acp_4(Selena)",
            "str_fol": "\u00accarves_figures(Selena)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Selena",
            "text": "Selena does not produce masterpieces.",
            "fol": "\u00acp_3(Selena)",
            "str_fol": "\u00acproduces_masterpieces(Selena)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Selena",
            "text": "Selena is an artist.",
            "fol": "p_1(Selena)",
            "str_fol": "artist(Selena)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Selena",
            "text": "Selena is creative.",
            "fol": "p_2(Selena)",
            "str_fol": "creative(Selena)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If Selena is artistic, then she either enjoys building or likes crafting.",
            "fol": "is_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))",
            "str_fol": "is_artistic(Selena) \u2192 (enjoys_building(Selena) \u2228 likes_crafting(Selena))"
        },
        {
            "id": 5,
            "text": "If Selena has talent, then she either loves design or enjoys building, but not both.",
            "fol": "p_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))",
            "str_fol": "has_talent(Selena) \u2192 (loves_design(Selena) \u2295 enjoys_building(Selena))"
        },
        {
            "id": 4,
            "text": "If Selena either carves figures or makes decorations (but not both), then she has talent.",
            "fol": "(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)",
            "str_fol": "(carves_figures(Selena) \u2295 makes_decorations(Selena)) \u2192 has_talent(Selena)"
        },
        {
            "id": 3,
            "text": "If Selena makes decorations or works with wood, then she can produce masterpieces.",
            "fol": "(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)",
            "str_fol": "(makes_decorations(Selena) \u2228 works_with_wood(Selena)) \u2192 produces_masterpieces(Selena)"
        },
        {
            "id": 2,
            "text": "If Selena is an artist, then she is either dedicated or creative, but not both.",
            "fol": "p_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))",
            "str_fol": "artist(Selena) \u2192 (dedicated(Selena) \u2295 creative(Selena))"
        },
        {
            "id": 1,
            "text": "Selena either works with wood or is a skilled craftswoman, which in her case, happens to be both.",
            "fol": "p_10(Selena) \u2295 p_7(Selena)",
            "str_fol": "works_with_wood(Selena) \u2295 skilled_craftswoman(Selena)"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is a skilled craftswoman, then they are either patient or dedicated (or both).",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))",
            "str_fol": "\u2200x (skilled_craftswoman(x) \u2192 (patient(x) \u2228 dedicated(x)))"
        }
    ],
    "context_fol": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\np_2(Selena)\nis_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))\np_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))\n(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)\n(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)\np_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))\np_10(Selena) \u2295 p_7(Selena)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))",
    "conclusion": {
        "id": 13,
        "subject": "Selena",
        "text": "Selena is not patient.",
        "fol": "\u00acp_8(Selena)",
        "str_fol": "\u00acpatient(Selena)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_8(Selena)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Selena",
                    "text": "Selena is artistic.",
                    "fol": "is_p_1ic(Selena)",
                    "str_fol": "is_artistic(Selena)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Selena",
                    "text": "Selena does not like crafting.",
                    "fol": "\u00acp_6(Selena)",
                    "str_fol": "\u00aclikes_crafting(Selena)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Selena is artistic, then she either enjoys building or likes crafting.",
                    "fol": "is_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))",
                    "str_fol": "is_artistic(Selena) \u2192 (enjoys_building(Selena) \u2228 likes_crafting(Selena))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Selena",
                "text": "Selena enjoys building.",
                "fol": "p_13(Selena)",
                "str_fol": "enjoys_building(Selena)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Selena",
                    "text": "Selena loves design.",
                    "fol": "p_0(Selena)",
                    "str_fol": "loves_design(Selena)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Selena",
                    "text": "Selena enjoys building.",
                    "fol": "p_13(Selena)",
                    "str_fol": "enjoys_building(Selena)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Selena has talent, then she either loves design or enjoys building, but not both.",
                    "fol": "p_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))",
                    "str_fol": "has_talent(Selena) \u2192 (loves_design(Selena) \u2295 enjoys_building(Selena))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Selena",
                "text": "Selena does not have talent.",
                "fol": "\u00acp_12(Selena)",
                "str_fol": "\u00achas_talent(Selena)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Selena",
                    "text": "Selena does not carve figures.",
                    "fol": "\u00acp_4(Selena)",
                    "str_fol": "\u00accarves_figures(Selena)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Selena",
                    "text": "Selena does not have talent.",
                    "fol": "\u00acp_12(Selena)",
                    "str_fol": "\u00achas_talent(Selena)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Selena either carves figures or makes decorations (but not both), then she has talent.",
                    "fol": "(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)",
                    "str_fol": "(carves_figures(Selena) \u2295 makes_decorations(Selena)) \u2192 has_talent(Selena)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Selena",
                "text": "Selena does not make decorations.",
                "fol": "\u00acp_11(Selena)",
                "str_fol": "\u00acmakes_decorations(Selena)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Selena",
                    "text": "Selena does not make decorations.",
                    "fol": "\u00acp_11(Selena)",
                    "str_fol": "\u00acmakes_decorations(Selena)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Selena",
                    "text": "Selena does not produce masterpieces.",
                    "fol": "\u00acp_3(Selena)",
                    "str_fol": "\u00acproduces_masterpieces(Selena)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Selena makes decorations or works with wood, then she can produce masterpieces.",
                    "fol": "(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)",
                    "str_fol": "(makes_decorations(Selena) \u2228 works_with_wood(Selena)) \u2192 produces_masterpieces(Selena)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Selena",
                "text": "Selena does not work with wood.",
                "fol": "\u00acp_10(Selena)",
                "str_fol": "\u00acworks_with_wood(Selena)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Selena",
                    "text": "Selena is an artist.",
                    "fol": "p_1(Selena)",
                    "str_fol": "artist(Selena)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Selena",
                    "text": "Selena is creative.",
                    "fol": "p_2(Selena)",
                    "str_fol": "creative(Selena)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Selena is an artist, then she is either dedicated or creative, but not both.",
                    "fol": "p_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))",
                    "str_fol": "artist(Selena) \u2192 (dedicated(Selena) \u2295 creative(Selena))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Selena",
                "text": "Selena is not dedicated.",
                "fol": "\u00acp_9(Selena)",
                "str_fol": "\u00acdedicated(Selena)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Selena",
                    "text": "Selena does not work with wood.",
                    "fol": "\u00acp_10(Selena)",
                    "str_fol": "\u00acworks_with_wood(Selena)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Selena either works with wood or is a skilled craftswoman, which in her case, happens to be both.",
                    "fol": "p_10(Selena) \u2295 p_7(Selena)",
                    "str_fol": "works_with_wood(Selena) \u2295 skilled_craftswoman(Selena)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Selena",
                "text": "Selena is a skilled craftswoman.",
                "fol": "p_7(Selena)",
                "str_fol": "skilled_craftswoman(Selena)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Selena",
                    "text": "Selena is a skilled craftswoman.",
                    "fol": "p_7(Selena)",
                    "str_fol": "skilled_craftswoman(Selena)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Selena",
                    "text": "Selena is not dedicated.",
                    "fol": "\u00acp_9(Selena)",
                    "str_fol": "\u00acdedicated(Selena)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if someone is a skilled craftswoman, then they are either patient or dedicated (or both).",
                    "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))",
                    "str_fol": "\u2200x (skilled_craftswoman(x) \u2192 (patient(x) \u2228 dedicated(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Selena",
                "text": "Selena is not patient.",
                "fol": "\u00acp_8(Selena)",
                "str_fol": "\u00acpatient(Selena)",
                "negation": true
            }
        }
    ],
    "proof_trace": "4 p_11(Selena) | p_10(Selena) -> p_3(Selena).  [assumption].\n5 p_1(Selena) -> -(p_9(Selena) <-> p_2(Selena)).  [assumption].\n6 -(p_10(Selena) <-> p_7(Selena)).  [assumption].\n7 (all x (p_7(x) -> p_8(x) | p_9(x))).  [assumption].\n8 --p_8(Selena).  [goal].\n20 -p_3(Selena).  [assumption].\n21 -p_10(Selena) | p_3(Selena).  [clausify(4)].\n23 p_1(Selena).  [assumption].\n24 -p_1(Selena) | -p_9(Selena) | -p_2(Selena).  [clausify(5)].\n25 -p_9(Selena) | -p_2(Selena).  [resolve(24,a,23,a)].\n26 p_2(Selena).  [assumption].\n29 p_10(Selena) | p_7(Selena).  [clausify(6)].\n30 -p_10(Selena).  [resolve(21,b,20,a)].\n31 p_7(Selena).  [resolve(30,a,29,a)].\n32 -p_7(x) | p_8(x) | p_9(x).  [clausify(7)].\n33 p_8(Selena) | p_9(Selena).  [resolve(31,a,32,a)].\n34 -p_8(Selena).  [deny(8)].\n37 p_9(Selena).  [resolve(33,a,34,a)].\n38 -p_9(Selena).  [resolve(25,b,26,a)].\n39 $F.  [resolve(37,a,38,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\np_2(Selena)\nis_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))\np_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))\n(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)\n(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)\np_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))\np_10(Selena) \u2194 \u00acp_7(Selena)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\np_7(Selena)\n\u00acp_11(Selena)",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena).",
                    "-p_6(Selena).",
                    "p_0(Selena).",
                    "-p_4(Selena).",
                    "-p_3(Selena).",
                    "p_1(Selena).",
                    "p_2(Selena).",
                    "is_p_1ic(Selena) -> (p_13(Selena) | p_6(Selena)).",
                    "p_12(Selena) -> (-(p_0(Selena) <-> p_13(Selena))).",
                    "(-(p_4(Selena) <-> p_11(Selena))) -> p_12(Selena).",
                    "(p_11(Selena) | p_10(Selena)) -> p_3(Selena).",
                    "p_1(Selena) -> (-(p_9(Selena) <-> p_2(Selena))).",
                    "p_10(Selena) <-> -p_7(Selena).",
                    "all x (p_7(x) -> (p_8(x) | p_9(x))).",
                    "p_7(Selena).",
                    "-p_11(Selena)."
                ],
                "formulas(goals)": [
                    "--p_8(Selena)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Selena)",
                    "\u00acp_11(Selena)"
                ],
                "added_rules": [
                    "p_10(Selena) \u2194 \u00acp_7(Selena)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\np_2(Selena)\nis_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))\np_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))\n(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)\n(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)\np_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))\np_10(Selena) \u2194 \u00acp_7(Selena)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u00acp_11(Selena)\np_8(Selena) \u2192 p_11(Selena)",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena).",
                    "-p_6(Selena).",
                    "p_0(Selena).",
                    "-p_4(Selena).",
                    "-p_3(Selena).",
                    "p_1(Selena).",
                    "p_2(Selena).",
                    "-is_p_1ic(Selena) | p_13(Selena) | p_6(Selena).",
                    "-p_12(Selena) | -(p_0(Selena) <-> p_13(Selena)).",
                    "-(-(p_4(Selena) <-> p_11(Selena))) | p_12(Selena).",
                    "-p_11(Selena) | p_3(Selena).",
                    "-p_10(Selena) | p_3(Selena).",
                    "-p_1(Selena) | -(p_9(Selena) <-> p_2(Selena)).",
                    "-p_10(Selena) | -p_7(Selena).",
                    "p_10(Selena) | p_7(Selena).",
                    "-p_7(x) | p_8(x) | p_9(x).",
                    "-p_11(Selena).",
                    "-p_8(Selena) | p_11(Selena)."
                ],
                "formulas(goals)": [
                    "-p_8(Selena)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_7(Selena)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Selena) \u2192 p_11(Selena)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\np_2(Selena)\nis_p_1ic(Selena) \u2192 (p_13(Selena) \u2228 p_6(Selena))\np_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))\n(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)\n(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)\np_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))\np_10(Selena) \u2194 \u00acp_7(Selena)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u00acp_11(Selena)\n\u00acp_10(Selena)",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena)",
                    "-p_6(Selena)",
                    "p_0(Selena)",
                    "-p_4(Selena)",
                    "-p_3(Selena)",
                    "p_1(Selena)",
                    "p_2(Selena)",
                    "is_p_1ic(Selena) -> (p_13(Selena) | p_6(Selena))",
                    "p_12(Selena) -> (-(p_0(Selena) <-> p_13(Selena)))",
                    "(-(p_4(Selena) <-> p_11(Selena))) -> p_12(Selena)",
                    "(p_11(Selena) | p_10(Selena)) -> p_3(Selena)",
                    "p_1(Selena) -> (-(p_9(Selena) <-> p_2(Selena)))",
                    "(p_10(Selena) <-> -p_7(Selena))",
                    "all x (p_7(x) -> (p_8(x) | p_9(x)))",
                    "-p_11(Selena)",
                    "-p_10(Selena)"
                ],
                "formulas(goals)": [
                    "-(-p_8(Selena))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Selena) \u2192 p_11(Selena)"
                ],
                "added_facts": [
                    "\u00acp_10(Selena)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\np_2(Selena)\n\u00acis_p_1ic(Selena) \u2228 p_13(Selena) \u2228 p_6(Selena)\np_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena))\n(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)\n(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)\np_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena))\np_10(Selena) \u2194 \u00acp_7(Selena)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u00acp_11(Selena)\n\u00acp_10(Selena)\np_7(Selena)\np_8(Selena) \u2228 p_9(Selena)\n\u00acp_9(Selena)",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena).",
                    "-p_6(Selena).",
                    "p_0(Selena).",
                    "-p_4(Selena).",
                    "-p_3(Selena).",
                    "p_1(Selena).",
                    "p_2(Selena).",
                    "(-is_p_1ic(Selena)) | p_13(Selena) | p_6(Selena).",
                    "p_12(Selena) -> (-(p_0(Selena) <-> p_13(Selena))).",
                    "(-(p_4(Selena) <-> p_11(Selena))) -> p_12(Selena).",
                    "(p_11(Selena) | p_10(Selena)) -> p_3(Selena).",
                    "p_1(Selena) -> (-(p_9(Selena) <-> p_2(Selena))).",
                    "(p_10(Selena) <-> (-p_7(Selena))).",
                    "all x (p_7(x) -> (p_8(x) | p_9(x))).",
                    "-p_11(Selena).",
                    "-p_10(Selena).",
                    "p_7(Selena).",
                    "p_8(Selena) | p_9(Selena).",
                    "-p_9(Selena)."
                ],
                "formulas(goals)": [
                    "-(-p_8(Selena))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Selena)",
                    "p_8(Selena) \u2228 p_9(Selena)",
                    "\u00acp_9(Selena)"
                ],
                "added_rules": [
                    "\u00acis_p_1ic(Selena) \u2228 p_13(Selena) \u2228 p_6(Selena)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\n(\u00acis_p_1ic(Selena) \u2228 p_13(Selena) \u2228 p_6(Selena))\n(p_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena)))\n(p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena)\n(p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena)\n(p_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena)))\n(p_10(Selena) \u2194 \u00acp_7(Selena))\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u00acp_11(Selena)\n\u00acp_10(Selena)\np_7(Selena)\n(p_8(Selena) \u2228 p_9(Selena))\np_9(Selena)\n(p_9(Selena) \u2192 \u00acp_8(Selena))",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena)",
                    "-p_6(Selena)",
                    "p_0(Selena)",
                    "-p_4(Selena)",
                    "-p_3(Selena)",
                    "p_1(Selena)",
                    "(-is_p_1ic(Selena) | p_13(Selena) | p_6(Selena))",
                    "(p_12(Selena) -> (-(p_0(Selena) <-> p_13(Selena))))",
                    "(-(p_4(Selena) <-> p_11(Selena))) -> p_12(Selena)",
                    "(p_11(Selena) | p_10(Selena)) -> p_3(Selena)",
                    "(p_1(Selena) -> (-(p_9(Selena) <-> p_2(Selena))))",
                    "(p_10(Selena) <-> -p_7(Selena))",
                    "all x (p_7(x) -> (p_8(x) | p_9(x)))",
                    "-p_11(Selena)",
                    "-p_10(Selena)",
                    "p_7(Selena)",
                    "(p_8(Selena) | p_9(Selena))",
                    "p_9(Selena)",
                    "(p_9(Selena) -> -p_8(Selena))"
                ],
                "formulas(goals)": [
                    "-p_8(Selena)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_2(Selena)",
                    "\u00acp_9(Selena)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Selena)"
                ],
                "added_rules": [
                    "(p_9(Selena) \u2192 \u00acp_8(Selena))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\n(\u00acis_p_1ic(Selena) \u2228 p_13(Selena) \u2228 p_6(Selena))\n(p_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena)))\n((p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena))\n((p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena))\n(p_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena)))\n(p_10(Selena) \u2192 \u00acp_7(Selena))\n(\u00acp_7(Selena) \u2192 p_10(Selena))\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u00acp_11(Selena)\n\u00acp_10(Selena)\np_7(Selena)\n(p_8(Selena) \u2228 p_9(Selena))\np_9(Selena)\n(p_9(Selena) \u2192 \u00acp_8(Selena))\n(p_7(Selena) \u2192 (p_8(Selena) \u2228 p_9(Selena)))\n(p_8(Selena) \u2228 p_9(Selena) \u2228 p_10(Selena))\n\u00ac(p_9(Selena) \u2227 p_8(Selena))",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena)",
                    "-p_6(Selena)",
                    "p_0(Selena)",
                    "-p_4(Selena)",
                    "-p_3(Selena)",
                    "p_1(Selena)",
                    "(-is_p_1ic(Selena) | p_13(Selena) | p_6(Selena))",
                    "(p_12(Selena) -> (-(p_0(Selena) <-> p_13(Selena))))",
                    "(-(p_4(Selena) <-> p_11(Selena)) -> p_12(Selena))",
                    "((p_11(Selena) | p_10(Selena)) -> p_3(Selena))",
                    "(p_1(Selena) -> (-(p_9(Selena) <-> p_2(Selena))))",
                    "(p_10(Selena) -> -p_7(Selena))",
                    "(-p_7(Selena) -> p_10(Selena))",
                    "all x (p_7(x) -> (p_8(x) | p_9(x)))",
                    "-p_11(Selena)",
                    "-p_10(Selena)",
                    "p_7(Selena)",
                    "(p_8(Selena) | p_9(Selena))",
                    "p_9(Selena)",
                    "(p_9(Selena) -> -p_8(Selena))",
                    "(p_7(Selena) -> (p_8(Selena) | p_9(Selena)))",
                    "(p_8(Selena) | p_9(Selena) | p_10(Selena))",
                    "-(p_9(Selena) & p_8(Selena))"
                ],
                "formulas(goals)": [
                    "-p_8(Selena)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_10(Selena) \u2194 \u00acp_7(Selena))"
                ],
                "added_facts": [
                    "\u00ac(p_9(Selena) \u2227 p_8(Selena))",
                    "(p_8(Selena) \u2228 p_9(Selena) \u2228 p_10(Selena))"
                ],
                "added_rules": [
                    "(p_10(Selena) \u2192 \u00acp_7(Selena))",
                    "(\u00acp_7(Selena) \u2192 p_10(Selena))",
                    "(p_7(Selena) \u2192 (p_8(Selena) \u2228 p_9(Selena)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "is_p_1ic(Selena)\n\u00acp_6(Selena)\np_0(Selena)\n\u00acp_4(Selena)\n\u00acp_3(Selena)\np_1(Selena)\n(\u00acis_p_1ic(Selena) \u2228 p_13(Selena) \u2228 p_6(Selena))\n(p_12(Selena) \u2192 (p_0(Selena) \u2295 p_13(Selena)))\n((p_4(Selena) \u2295 p_11(Selena)) \u2192 p_12(Selena))\n((p_11(Selena) \u2228 p_10(Selena)) \u2192 p_3(Selena))\n(p_1(Selena) \u2192 (p_9(Selena) \u2295 p_2(Selena)))\n(p_10(Selena) \u2192 \u00acp_7(Selena))\n(\u00acp_7(Selena) \u2192 p_10(Selena))\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_9(x)))\n\u00acp_11(Selena)\n\u00acp_10(Selena)\np_7(Selena)\n(p_8(Selena) \u2228 p_9(Selena))\np_9(Selena)\n(p_9(Selena) \u2192 \u00acp_8(Selena))\n(p_7(Selena) \u2192 (p_8(Selena) \u2228 p_9(Selena)))\n(p_8(Selena) \u2228 p_9(Selena) \u2228 p_10(Selena))\n\u00ac(p_9(Selena) \u2227 p_8(Selena))\n(p_8(Selena) \u2192 \u00acp_9(Selena))",
            "Initial Goal": "\u00acp_8(Selena)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "is_p_1ic(Selena)",
                    "-p_6(Selena)",
                    "p_0(Selena)",
                    "-p_4(Selena)",
                    "-p_3(Selena)",
                    "p_1(Selena)",
                    "(-is_p_1ic(Selena) | p_13(Selena) | p_6(Selena))",
                    "(p_12(Selena) -> (-(p_0(Selena) <-> p_13(Selena))))",
                    "((-(p_4(Selena) <-> p_11(Selena))) -> p_12(Selena))",
                    "((p_11(Selena) | p_10(Selena)) -> p_3(Selena))",
                    "(p_1(Selena) -> (-(p_9(Selena) <-> p_2(Selena))))",
                    "(p_10(Selena) -> -p_7(Selena))",
                    "(-p_7(Selena) -> p_10(Selena))",
                    "all x (p_7(x) -> (p_8(x) | p_9(x)))",
                    "-p_11(Selena)",
                    "-p_10(Selena)",
                    "p_7(Selena)",
                    "(p_8(Selena) | p_9(Selena))",
                    "p_9(Selena)",
                    "(p_9(Selena) -> -p_8(Selena))",
                    "(p_7(Selena) -> (p_8(Selena) | p_9(Selena)))",
                    "(p_8(Selena) | p_9(Selena) | p_10(Selena))",
                    "-(p_9(Selena) & p_8(Selena))",
                    "(p_8(Selena) -> -p_9(Selena))"
                ],
                "formulas(goals)": [
                    "-p_8(Selena)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_8(Selena) \u2192 \u00acp_9(Selena))"
                ]
            }
        }
    ]
}