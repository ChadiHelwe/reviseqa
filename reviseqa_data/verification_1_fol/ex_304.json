{
    "background_story": "Darwin was a quirky inventor with a passion for textiles. He spent most of his life studying the destructive power of moths on fabrics. Determined to find a solution, Darwin dedicated himself to creating a mothproof material. After years of trial and error, he finally discovered a unique blend of natural fibers and essential oils that repelled moths effectively. His invention, dubbed 'MothGuard,' quickly gained popularity among textile manufacturers and consumers alike. Darwin's mothproof fabric became the standard for museums, historical societies, and fashion designers, preserving countless garments and artifacts from destruction. His legacy as a pioneer in textile innovation continues to inspire new generations of inventors and conservationists.",
    "predicates": [
        {
            "id": 0,
            "name": "dedicated"
        },
        {
            "id": 1,
            "name": "innovative"
        },
        {
            "id": 2,
            "name": "solve_problems"
        },
        {
            "id": 3,
            "name": "make_breakthrough"
        },
        {
            "id": 4,
            "name": "curious"
        },
        {
            "id": 5,
            "name": "seeks_knowledge"
        },
        {
            "id": 6,
            "name": "design_new"
        },
        {
            "id": 7,
            "name": "enhance_lives"
        },
        {
            "id": 8,
            "name": "successful"
        },
        {
            "id": 9,
            "name": "visionary"
        },
        {
            "id": 10,
            "name": "methodical"
        },
        {
            "id": 11,
            "name": "creative"
        },
        {
            "id": 12,
            "name": "improve_products"
        },
        {
            "id": 13,
            "name": "think_outside"
        },
        {
            "id": 14,
            "name": "practical"
        },
        {
            "id": 15,
            "name": "persistent"
        },
        {
            "id": 16,
            "name": "driven"
        },
        {
            "id": 17,
            "name": "experiment_frequently"
        },
        {
            "id": 18,
            "name": "develop_new_techniques"
        },
        {
            "id": 19,
            "name": "tests_hypo"
        },
        {
            "id": 20,
            "name": "tests_ideas"
        },
        {
            "id": 21,
            "name": "learns_fast"
        },
        {
            "id": 22,
            "name": "crafts_original"
        },
        {
            "id": 23,
            "name": "makes_prototypes"
        },
        {
            "id": 24,
            "name": "is_experienced"
        },
        {
            "id": 25,
            "name": "is_precise"
        },
        {
            "id": 26,
            "name": "obsessive"
        },
        {
            "id": 27,
            "name": "experiment_alot"
        },
        {
            "id": 28,
            "name": "tests_theories"
        },
        {
            "id": 29,
            "name": "examines_data"
        },
        {
            "id": 30,
            "name": "tests_materials"
        },
        {
            "id": 31,
            "name": "experiments_often"
        }
    ],
    "subject_name": "Darwin",
    "subject_category": "inventor",
    "keyword": "mothproof",
    "all_facts": [
        {
            "id": 0,
            "subject": "Darwin",
            "text": "Darwin is dedicated.",
            "fol": "p_0(Darwin)",
            "str_fol": "dedicated(Darwin)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Darwin",
            "text": "Darwin is not innovative.",
            "fol": "\u00acp_1(Darwin)",
            "str_fol": "\u00acinnovative(Darwin)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Darwin",
            "text": "Darwin does not solve problems.",
            "fol": "\u00acp_2(Darwin)",
            "str_fol": "\u00acsolve_problems(Darwin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Darwin",
            "text": "Darwin does not make a breakthrough.",
            "fol": "\u00acp_3(Darwin)",
            "str_fol": "\u00acmake_breakthrough(Darwin)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Darwin",
            "text": "Darwin is not curious.",
            "fol": "\u00acp_4(Darwin)",
            "str_fol": "\u00accurious(Darwin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Darwin",
            "text": "Darwin does not seek knowledge.",
            "fol": "\u00acp_5(Darwin)",
            "str_fol": "\u00acseeks_knowledge(Darwin)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Darwin",
            "text": "Darwin does not design new things.",
            "fol": "\u00acp_6(Darwin)",
            "str_fol": "\u00acdesign_new(Darwin)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Darwin",
            "text": "Darwin does not enhance lives.",
            "fol": "\u00acp_7(Darwin)",
            "str_fol": "\u00acenhance_lives(Darwin)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Darwin",
            "text": "Darwin does not improve products.",
            "fol": "\u00acp_12(Darwin)",
            "str_fol": "\u00acimprove_products(Darwin)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Darwin",
            "text": "Darwin is driven.",
            "fol": "p_16(Darwin)",
            "str_fol": "driven(Darwin)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Darwin",
            "text": "Darwin is persistent.",
            "fol": "p_15(Darwin)",
            "str_fol": "persistent(Darwin)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Darwin",
            "text": "Darwin is not practical.",
            "fol": "\u00acp_14(Darwin)",
            "str_fol": "\u00acpractical(Darwin)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Darwin",
            "text": "Darwin is not creative.",
            "fol": "\u00acp_11(Darwin)",
            "str_fol": "\u00accreative(Darwin)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Darwin",
            "text": "Darwin is a successful inventor.",
            "fol": "p_8(Darwin)",
            "str_fol": "successful(Darwin)",
            "negation": false
        },
        {
            "id": 14,
            "subject": "Darwin",
            "text": "Darwin is methodical.",
            "fol": "p_10(Darwin)",
            "str_fol": "methodical(Darwin)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Darwin",
            "text": "Darwin is not visionary.",
            "fol": "\u00acp_9(Darwin)",
            "str_fol": "\u00acvisionary(Darwin)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Darwin",
            "text": "Darwin is either practical or visionary (or both).",
            "fol": "practical(Darwin) \u2228 p_9(Darwin)",
            "str_fol": "practical(Darwin) \u2228 visionary(Darwin)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Darwin",
            "text": "Darwin does not design new things.",
            "fol": "\u00acp_6(Darwin)",
            "str_fol": "\u00acdesign_new(Darwin)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Darwin",
            "text": "Darwin does not enhance lives.",
            "fol": "\u00acp_7(Darwin)",
            "str_fol": "\u00acenhance_lives(Darwin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Darwin",
            "text": "Darwin does not seek knowledge.",
            "fol": "\u00acp_5(Darwin)",
            "str_fol": "\u00acseeks_knowledge(Darwin)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Darwin",
            "text": "Darwin is not curious.",
            "fol": "\u00acp_4(Darwin)",
            "str_fol": "\u00accurious(Darwin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Darwin",
            "text": "Darwin does not make a breakthrough.",
            "fol": "\u00acp_3(Darwin)",
            "str_fol": "\u00acmake_breakthrough(Darwin)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Darwin",
            "text": "Darwin does not solve problems.",
            "fol": "\u00acp_2(Darwin)",
            "str_fol": "\u00acsolve_problems(Darwin)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Darwin",
            "text": "Darwin is dedicated.",
            "fol": "p_0(Darwin)",
            "str_fol": "dedicated(Darwin)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Darwin",
            "text": "Darwin is not innovative.",
            "fol": "\u00acp_1(Darwin)",
            "str_fol": "\u00acinnovative(Darwin)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Darwin either improves products or designs new things (but not both), then he enhances lives.",
            "fol": "(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)",
            "str_fol": "(improve_products(Darwin) \u2295 design_new(Darwin)) \u2192 enhance_lives(Darwin)"
        },
        {
            "id": 7,
            "text": "Every inventor is either driven or seeks knowledge.",
            "fol": "\u2200x (p_16(x) \u2228 p_5(x))",
            "str_fol": "\u2200x (driven(x) \u2228 seeks_knowledge(x))"
        },
        {
            "id": 6,
            "text": "All driven inventors are persistent.",
            "fol": "\u2200x (p_16(x) \u2192 p_15(x))",
            "str_fol": "\u2200x (driven(x) \u2192 persistent(x))"
        },
        {
            "id": 5,
            "text": "All curious inventors think outside the box and are persistent.",
            "fol": "\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))",
            "str_fol": "\u2200x (curious(x) \u2192 (think_outside(x) \u2227 persistent(x)))"
        },
        {
            "id": 4,
            "text": "Any inventor who thinks outside the box or is practical can make a breakthrough.",
            "fol": "\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((think_outside(x) \u2228 practical(x)) \u2192 make_breakthrough(x))"
        },
        {
            "id": 3,
            "text": "Every creative inventor either solves problems or improves products (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_2(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (creative(x) \u2192 (solve_problems(x) \u2228 improve_products(x)))"
        },
        {
            "id": 2,
            "text": "Every dedicated inventor is either successful or innovative.",
            "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (dedicated(x) \u2192 (successful(x) \u2228 innovative(x)))"
        },
        {
            "id": 1,
            "text": "Every inventor is either creative or methodical.",
            "fol": "\u2200x (p_11(x) \u2228 p_10(x))",
            "str_fol": "\u2200x (creative(x) \u2228 methodical(x))"
        },
        {
            "id": 0,
            "text": "If Darwin is a successful inventor, then he is either visionary or methodical, but not both.",
            "fol": "p_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))",
            "str_fol": "successful(Darwin) \u2192 (visionary(Darwin) \u2295 methodical(Darwin))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Darwin",
            "text": "Darwin does not design new things.",
            "fol": "\u00acp_6(Darwin)",
            "str_fol": "\u00acdesign_new(Darwin)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Darwin",
            "text": "Darwin does not enhance lives.",
            "fol": "\u00acp_7(Darwin)",
            "str_fol": "\u00acenhance_lives(Darwin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Darwin",
            "text": "Darwin does not seek knowledge.",
            "fol": "\u00acp_5(Darwin)",
            "str_fol": "\u00acseeks_knowledge(Darwin)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Darwin",
            "text": "Darwin is not curious.",
            "fol": "\u00acp_4(Darwin)",
            "str_fol": "\u00accurious(Darwin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Darwin",
            "text": "Darwin does not make a breakthrough.",
            "fol": "\u00acp_3(Darwin)",
            "str_fol": "\u00acmake_breakthrough(Darwin)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Darwin",
            "text": "Darwin does not solve problems.",
            "fol": "\u00acp_2(Darwin)",
            "str_fol": "\u00acsolve_problems(Darwin)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Darwin",
            "text": "Darwin is dedicated.",
            "fol": "p_0(Darwin)",
            "str_fol": "dedicated(Darwin)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Darwin",
            "text": "Darwin is not innovative.",
            "fol": "\u00acp_1(Darwin)",
            "str_fol": "\u00acinnovative(Darwin)",
            "negation": true
        },
        {
            "id": 8,
            "text": "If Darwin either improves products or designs new things (but not both), then he enhances lives.",
            "fol": "(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)",
            "str_fol": "(improve_products(Darwin) \u2295 design_new(Darwin)) \u2192 enhance_lives(Darwin)"
        },
        {
            "id": 7,
            "text": "Every inventor is either driven or seeks knowledge.",
            "fol": "\u2200x (p_16(x) \u2228 p_5(x))",
            "str_fol": "\u2200x (driven(x) \u2228 seeks_knowledge(x))"
        },
        {
            "id": 6,
            "text": "All driven inventors are persistent.",
            "fol": "\u2200x (p_16(x) \u2192 p_15(x))",
            "str_fol": "\u2200x (driven(x) \u2192 persistent(x))"
        },
        {
            "id": 5,
            "text": "All curious inventors think outside the box and are persistent.",
            "fol": "\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))",
            "str_fol": "\u2200x (curious(x) \u2192 (think_outside(x) \u2227 persistent(x)))"
        },
        {
            "id": 4,
            "text": "Any inventor who thinks outside the box or is practical can make a breakthrough.",
            "fol": "\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))",
            "str_fol": "\u2200x ((think_outside(x) \u2228 practical(x)) \u2192 make_breakthrough(x))"
        },
        {
            "id": 3,
            "text": "Every creative inventor either solves problems or improves products (or both).",
            "fol": "\u2200x (p_11(x) \u2192 (p_2(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (creative(x) \u2192 (solve_problems(x) \u2228 improve_products(x)))"
        },
        {
            "id": 2,
            "text": "Every dedicated inventor is either successful or innovative.",
            "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_1(x)))",
            "str_fol": "\u2200x (dedicated(x) \u2192 (successful(x) \u2228 innovative(x)))"
        },
        {
            "id": 1,
            "text": "Every inventor is either creative or methodical.",
            "fol": "\u2200x (p_11(x) \u2228 p_10(x))",
            "str_fol": "\u2200x (creative(x) \u2228 methodical(x))"
        },
        {
            "id": 0,
            "text": "If Darwin is a successful inventor, then he is either visionary or methodical, but not both.",
            "fol": "p_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))",
            "str_fol": "successful(Darwin) \u2192 (visionary(Darwin) \u2295 methodical(Darwin))"
        }
    ],
    "context_fol": "\u00acp_6(Darwin)\n\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_16(x) \u2192 p_15(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (p_11(x) \u2192 (p_2(x) \u2228 p_12(x)))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_1(x)))\n\u2200x (p_11(x) \u2228 p_10(x))\np_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))",
    "conclusion": {
        "id": 18,
        "text": "Darwin is either practical or visionary (or both).",
        "fol": "p_14(Darwin) \u2228 p_9(Darwin)",
        "str_fol": "practical(Darwin) \u2228 visionary(Darwin)"
    },
    "initial_answer": "False",
    "initial_goal": "p_14(Darwin) \u2228 p_9(Darwin)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Darwin",
                    "text": "Darwin does not design new things.",
                    "fol": "\u00acp_6(Darwin)",
                    "str_fol": "\u00acdesign_new(Darwin)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Darwin",
                    "text": "Darwin does not enhance lives.",
                    "fol": "\u00acp_7(Darwin)",
                    "str_fol": "\u00acenhance_lives(Darwin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Darwin either improves products or designs new things (but not both), then he enhances lives.",
                    "fol": "(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)",
                    "str_fol": "(improve_products(Darwin) \u2295 design_new(Darwin)) \u2192 enhance_lives(Darwin)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Darwin",
                "text": "Darwin does not improve products.",
                "fol": "\u00acp_12(Darwin)",
                "str_fol": "\u00acimprove_products(Darwin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Darwin",
                    "text": "Darwin does not seek knowledge.",
                    "fol": "\u00acp_5(Darwin)",
                    "str_fol": "\u00acseeks_knowledge(Darwin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Every inventor is either driven or seeks knowledge.",
                    "fol": "\u2200x (p_16(x) \u2228 p_5(x))",
                    "str_fol": "\u2200x (driven(x) \u2228 seeks_knowledge(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Darwin",
                "text": "Darwin is driven.",
                "fol": "p_16(Darwin)",
                "str_fol": "driven(Darwin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Darwin",
                    "text": "Darwin is driven.",
                    "fol": "p_16(Darwin)",
                    "str_fol": "driven(Darwin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "All driven inventors are persistent.",
                    "fol": "\u2200x (p_16(x) \u2192 p_15(x))",
                    "str_fol": "\u2200x (driven(x) \u2192 persistent(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Darwin",
                "text": "Darwin is persistent.",
                "fol": "p_15(Darwin)",
                "str_fol": "persistent(Darwin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Darwin",
                    "text": "Darwin is not curious.",
                    "fol": "\u00acp_4(Darwin)",
                    "str_fol": "\u00accurious(Darwin)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Darwin",
                    "text": "Darwin is persistent.",
                    "fol": "p_15(Darwin)",
                    "str_fol": "persistent(Darwin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "All curious inventors think outside the box and are persistent.",
                    "fol": "\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))",
                    "str_fol": "\u2200x (curious(x) \u2192 (think_outside(x) \u2227 persistent(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Darwin",
                    "text": "Darwin does not make a breakthrough.",
                    "fol": "\u00acp_3(Darwin)",
                    "str_fol": "\u00acmake_breakthrough(Darwin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Any inventor who thinks outside the box or is practical can make a breakthrough.",
                    "fol": "\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))",
                    "str_fol": "\u2200x ((think_outside(x) \u2228 practical(x)) \u2192 make_breakthrough(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Darwin",
                "text": "Darwin is not practical.",
                "fol": "\u00acp_14(Darwin)",
                "str_fol": "\u00acpractical(Darwin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Darwin",
                    "text": "Darwin does not solve problems.",
                    "fol": "\u00acp_2(Darwin)",
                    "str_fol": "\u00acsolve_problems(Darwin)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Darwin",
                    "text": "Darwin does not improve products.",
                    "fol": "\u00acp_12(Darwin)",
                    "str_fol": "\u00acimprove_products(Darwin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Every creative inventor either solves problems or improves products (or both).",
                    "fol": "\u2200x (p_11(x) \u2192 (p_2(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (creative(x) \u2192 (solve_problems(x) \u2228 improve_products(x)))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Darwin",
                "text": "Darwin is not creative.",
                "fol": "\u00acp_11(Darwin)",
                "str_fol": "\u00accreative(Darwin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Darwin",
                    "text": "Darwin is dedicated.",
                    "fol": "p_0(Darwin)",
                    "str_fol": "dedicated(Darwin)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Darwin",
                    "text": "Darwin is not innovative.",
                    "fol": "\u00acp_1(Darwin)",
                    "str_fol": "\u00acinnovative(Darwin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Every dedicated inventor is either successful or innovative.",
                    "fol": "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_1(x)))",
                    "str_fol": "\u2200x (dedicated(x) \u2192 (successful(x) \u2228 innovative(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Darwin",
                "text": "Darwin is a successful inventor.",
                "fol": "p_8(Darwin)",
                "str_fol": "successful(Darwin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Darwin",
                    "text": "Darwin is not creative.",
                    "fol": "\u00acp_11(Darwin)",
                    "str_fol": "\u00accreative(Darwin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every inventor is either creative or methodical.",
                    "fol": "\u2200x (p_11(x) \u2228 p_10(x))",
                    "str_fol": "\u2200x (creative(x) \u2228 methodical(x))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Darwin",
                "text": "Darwin is methodical.",
                "fol": "p_10(Darwin)",
                "str_fol": "methodical(Darwin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Darwin",
                    "text": "Darwin is a successful inventor.",
                    "fol": "p_8(Darwin)",
                    "str_fol": "successful(Darwin)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Darwin",
                    "text": "Darwin is methodical.",
                    "fol": "p_10(Darwin)",
                    "str_fol": "methodical(Darwin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Darwin is a successful inventor, then he is either visionary or methodical, but not both.",
                    "fol": "p_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))",
                    "str_fol": "successful(Darwin) \u2192 (visionary(Darwin) \u2295 methodical(Darwin))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Darwin",
                "text": "Darwin is not visionary.",
                "fol": "\u00acp_9(Darwin)",
                "str_fol": "\u00acvisionary(Darwin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Darwin",
                    "text": "Darwin is not practical.",
                    "fol": "\u00acp_14(Darwin)",
                    "str_fol": "\u00acpractical(Darwin)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Darwin",
                    "text": "Darwin is not visionary.",
                    "fol": "\u00acp_9(Darwin)",
                    "str_fol": "\u00acvisionary(Darwin)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 18,
                "text": "Darwin is either practical or visionary (or both).",
                "fol": "p_14(Darwin) \u2228 p_9(Darwin)",
                "str_fol": "practical(Darwin) \u2228 visionary(Darwin)"
            }
        }
    ],
    "proof_trace": "1 -(p_12(Darwin) <-> p_6(Darwin)) -> p_7(Darwin).  [assumption].\n5 (all x (p_13(x) | p_14(x) -> p_3(x))).  [assumption].\n6 (all x (p_11(x) -> p_2(x) | p_12(x))).  [assumption].\n7 (all x (p_0(x) -> p_8(x) | p_1(x))).  [assumption].\n8 (all x (p_11(x) | p_10(x))).  [assumption].\n9 p_8(Darwin) -> -(p_9(Darwin) <-> p_10(Darwin)).  [assumption].\n10 -(p_14(Darwin) | p_9(Darwin)).  [goal].\n11 -p_12(Darwin) | p_6(Darwin) | p_7(Darwin).  [clausify(1)].\n12 -p_6(Darwin).  [assumption].\n14 -p_12(Darwin) | p_7(Darwin).  [resolve(11,b,12,a)].\n15 -p_7(Darwin).  [assumption].\n19 -p_3(Darwin).  [assumption].\n20 -p_14(x) | p_3(x).  [clausify(5)].\n21 -p_11(x) | p_2(x) | p_12(x).  [clausify(6)].\n22 -p_2(Darwin).  [assumption].\n23 -p_0(x) | p_8(x) | p_1(x).  [clausify(7)].\n24 p_0(Darwin).  [assumption].\n25 p_8(Darwin) | p_1(Darwin).  [resolve(23,a,24,a)].\n26 -p_1(Darwin).  [assumption].\n29 -p_11(Darwin) | p_12(Darwin).  [resolve(21,b,22,a)].\n30 p_11(x) | p_10(x).  [clausify(8)].\n31 p_8(Darwin).  [resolve(25,b,26,a)].\n33 -p_8(Darwin) | -p_9(Darwin) | -p_10(Darwin).  [clausify(9)].\n34 -p_14(Darwin).  [resolve(20,b,19,a)].\n35 p_14(Darwin) | p_9(Darwin).  [deny(10)].\n36 p_12(Darwin) | p_10(Darwin).  [resolve(29,a,30,a)].\n37 -p_12(Darwin).  [resolve(14,b,15,a)].\n38 -p_9(Darwin) | -p_10(Darwin).  [resolve(31,a,33,a)].\n40 p_9(Darwin).  [resolve(34,a,35,a)].\n41 -p_10(Darwin).  [resolve(40,a,38,a)].\n42 p_10(Darwin).  [resolve(36,a,37,a)].\n43 $F.  [resolve(41,a,42,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_16(x) \u2192 p_15(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (p_11(x) \u2192 (p_2(x) \u2228 p_12(x)))\n\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_1(x)))\n\u2200x (p_11(x) \u2228 p_10(x))\np_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin)",
                    "-p_5(Darwin)",
                    "-p_4(Darwin)",
                    "-p_3(Darwin)",
                    "-p_2(Darwin)",
                    "p_0(Darwin)",
                    "-p_1(Darwin)",
                    "(-(p_12(Darwin) <-> p_6(Darwin))) -> p_7(Darwin)",
                    "all x (p_16(x) | p_5(x))",
                    "all x (p_16(x) -> p_15(x))",
                    "all x (p_4(x) -> (p_13(x) & p_15(x)))",
                    "all x ((p_13(x) | p_14(x)) -> p_3(x))",
                    "all x (p_11(x) -> (p_2(x) | p_12(x)))",
                    "all x (p_0(x) -> (p_8(x) | p_1(x)))",
                    "all x (p_11(x) | p_10(x))",
                    "p_8(Darwin) -> (-(p_9(Darwin) <-> p_10(Darwin)))",
                    "p_0(Darwin) -> p_6(Darwin)",
                    "p_0(Darwin) -> -p_10(Darwin)"
                ],
                "formulas(goals)": [
                    "p_14(Darwin) | p_9(Darwin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Darwin)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_0(Darwin) \u2192 p_6(Darwin)",
                    "p_0(Darwin) \u2192 \u00acp_10(Darwin)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_16(x) \u2192 p_15(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))\n\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))\n\u2200x (p_11(x) \u2228 p_10(x))\np_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)\np_6(Darwin)\np_16(Darwin)\np_15(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin).",
                    "-p_5(Darwin).",
                    "-p_4(Darwin).",
                    "-p_3(Darwin).",
                    "-p_2(Darwin).",
                    "p_0(Darwin).",
                    "-p_1(Darwin).",
                    "(-(p_12(Darwin) <-> p_6(Darwin))) -> p_7(Darwin).",
                    "all x (p_16(x) | p_5(x)).",
                    "all x (p_16(x) -> p_15(x)).",
                    "all x (p_4(x) -> (p_13(x) & p_15(x))).",
                    "all x ((p_13(x) | p_14(x)) -> p_3(x)).",
                    "all x (-p_11(x) | p_2(x) | p_12(x)).",
                    "all x (-p_0(x) | p_8(x) | p_1(x)).",
                    "all x (p_11(x) | p_10(x)).",
                    "p_8(Darwin) -> (-(p_9(Darwin) <-> p_10(Darwin))).",
                    "p_0(Darwin) -> p_6(Darwin).",
                    "p_0(Darwin) -> -p_10(Darwin).",
                    "p_6(Darwin).",
                    "p_16(Darwin).",
                    "p_15(Darwin)."
                ],
                "formulas(goals)": [
                    "p_14(Darwin) | p_9(Darwin)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_11(x) \u2192 (p_2(x) \u2228 p_12(x)))",
                    "\u2200x (p_0(x) \u2192 (p_8(x) \u2228 p_1(x)))"
                ],
                "added_facts": [
                    "p_6(Darwin)",
                    "p_16(Darwin)",
                    "p_15(Darwin)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))",
                    "\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_16(x) \u2192 p_15(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))\n\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))\n\u2200x (p_11(x) \u2228 p_10(x))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)\np_6(Darwin)\np_16(Darwin)\np_15(Darwin)\np_8(Darwin) \u2192 \u00acp_9(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin)",
                    "-p_5(Darwin)",
                    "-p_4(Darwin)",
                    "-p_3(Darwin)",
                    "-p_2(Darwin)",
                    "p_0(Darwin)",
                    "-p_1(Darwin)",
                    "(-(p_12(Darwin) <-> p_6(Darwin))) -> p_7(Darwin)",
                    "all x (p_16(x) | p_5(x))",
                    "all x (p_16(x) -> p_15(x))",
                    "all x (p_4(x) -> (p_13(x) & p_15(x)))",
                    "all x ((p_13(x) | p_14(x)) -> p_3(x))",
                    "all x (-p_11(x) | p_2(x) | p_12(x))",
                    "all x (-p_0(x) | p_8(x) | p_1(x))",
                    "all x (p_11(x) | p_10(x))",
                    "p_0(Darwin) -> p_6(Darwin)",
                    "p_0(Darwin) -> -p_10(Darwin)",
                    "p_6(Darwin)",
                    "p_16(Darwin)",
                    "p_15(Darwin)",
                    "p_8(Darwin) -> -p_9(Darwin)"
                ],
                "formulas(goals)": [
                    "-p_14(Darwin) & -p_9(Darwin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Darwin) \u2192 (p_9(Darwin) \u2295 p_10(Darwin))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Darwin) \u2192 \u00acp_9(Darwin)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_16(x) \u2192 p_15(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))\n\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))\n\u2200x (p_11(x) \u2228 p_10(x))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)\np_6(Darwin)\np_16(Darwin)\np_15(Darwin)\n(p_15(Darwin) \u2227 p_16(Darwin)) \u2192 p_9(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin)",
                    "-p_5(Darwin)",
                    "-p_4(Darwin)",
                    "-p_3(Darwin)",
                    "-p_2(Darwin)",
                    "p_0(Darwin)",
                    "-p_1(Darwin)",
                    "(-(p_12(Darwin) <-> p_6(Darwin))) -> p_7(Darwin)",
                    "all x (p_16(x) | p_5(x))",
                    "all x (p_16(x) -> p_15(x))",
                    "all x (p_4(x) -> (p_13(x) & p_15(x)))",
                    "all x ((p_13(x) | p_14(x)) -> p_3(x))",
                    "all x (-p_11(x) | p_2(x) | p_12(x))",
                    "all x (-p_0(x) | p_8(x) | p_1(x))",
                    "all x (p_11(x) | p_10(x))",
                    "p_0(Darwin) -> p_6(Darwin)",
                    "p_0(Darwin) -> -p_10(Darwin)",
                    "p_6(Darwin)",
                    "p_16(Darwin)",
                    "p_15(Darwin)",
                    "(p_15(Darwin) & p_16(Darwin)) -> p_9(Darwin)"
                ],
                "formulas(goals)": [
                    "p_14(Darwin) | p_9(Darwin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Darwin) \u2192 \u00acp_9(Darwin)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_15(Darwin) \u2227 p_16(Darwin)) \u2192 p_9(Darwin)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))\n\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))\n\u2200x (p_11(x) \u2228 p_10(x))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)\np_6(Darwin)\np_16(Darwin)\n(p_15(Darwin) \u2227 p_16(Darwin)) \u2192 p_9(Darwin)\np_16(Darwin) \u2192 \u00acp_15(Darwin)\n\u00acp_15(Darwin) \u2192 \u00acp_9(Darwin)\n\u00acp_15(Darwin) \u2192 \u00acp_14(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin)",
                    "-p_5(Darwin)",
                    "-p_4(Darwin)",
                    "-p_3(Darwin)",
                    "-p_2(Darwin)",
                    "p_0(Darwin)",
                    "-p_1(Darwin)",
                    "(-(p_12(Darwin) <-> p_6(Darwin))) -> p_7(Darwin)",
                    "all x (p_16(x) | p_5(x))",
                    "all x (p_4(x) -> (p_13(x) & p_15(x)))",
                    "all x ((p_13(x) | p_14(x)) -> p_3(x))",
                    "all x (-p_11(x) | p_2(x) | p_12(x))",
                    "all x (-p_0(x) | p_8(x) | p_1(x))",
                    "all x (p_11(x) | p_10(x))",
                    "p_0(Darwin) -> p_6(Darwin)",
                    "p_0(Darwin) -> -p_10(Darwin)",
                    "p_6(Darwin)",
                    "p_16(Darwin)",
                    "(p_15(Darwin) & p_16(Darwin)) -> p_9(Darwin)",
                    "p_16(Darwin) -> -p_15(Darwin)",
                    "-p_15(Darwin) -> -p_9(Darwin)",
                    "-p_15(Darwin) -> -p_14(Darwin)"
                ],
                "formulas(goals)": [
                    "-p_14(Darwin) & -p_9(Darwin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_15(Darwin)"
                ],
                "removed_rules": [
                    "\u2200x (p_16(x) \u2192 p_15(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_16(Darwin) \u2192 \u00acp_15(Darwin)",
                    "\u00acp_15(Darwin) \u2192 \u00acp_9(Darwin)",
                    "\u00acp_15(Darwin) \u2192 \u00acp_14(Darwin)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))\n\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))\n\u2200x (p_11(x) \u2228 p_10(x))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)\np_6(Darwin)\np_16(Darwin)\n\u00acp_15(Darwin) \u2228 \u00acp_16(Darwin) \u2228 p_9(Darwin)\np_16(Darwin) \u2192 \u00acp_15(Darwin)\n\u00acp_15(Darwin) \u2192 \u00acp_9(Darwin)\n\u00acp_15(Darwin) \u2192 \u00acp_14(Darwin)\np_16(Darwin) \u2192 \u00acp_9(Darwin)\np_16(Darwin) \u2192 \u00acp_14(Darwin)\n\u00acp_15(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin).",
                    "-p_5(Darwin).",
                    "-p_4(Darwin).",
                    "-p_3(Darwin).",
                    "-p_2(Darwin).",
                    "p_0(Darwin).",
                    "-p_1(Darwin).",
                    "(-(p_12(Darwin) <-> p_6(Darwin))) -> p_7(Darwin).",
                    "all x (p_16(x) | p_5(x)).",
                    "all x (p_4(x) -> (p_13(x) & p_15(x))).",
                    "all x ((p_13(x) | p_14(x)) -> p_3(x)).",
                    "all x (-p_11(x) | p_2(x) | p_12(x)).",
                    "all x (-p_0(x) | p_8(x) | p_1(x)).",
                    "all x (p_11(x) | p_10(x)).",
                    "p_0(Darwin) -> p_6(Darwin).",
                    "p_0(Darwin) -> -p_10(Darwin).",
                    "p_6(Darwin).",
                    "p_16(Darwin).",
                    "-p_15(Darwin) | -p_16(Darwin) | p_9(Darwin).",
                    "p_16(Darwin) -> -p_15(Darwin).",
                    "-p_15(Darwin) -> -p_9(Darwin).",
                    "-p_15(Darwin) -> -p_14(Darwin).",
                    "p_16(Darwin) -> -p_9(Darwin).",
                    "p_16(Darwin) -> -p_14(Darwin).",
                    "-p_15(Darwin)."
                ],
                "formulas(goals)": [
                    "-(p_14(Darwin) | p_9(Darwin))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_15(Darwin)"
                ],
                "added_rules": [
                    "p_16(Darwin) \u2192 \u00acp_9(Darwin)",
                    "p_16(Darwin) \u2192 \u00acp_14(Darwin)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Darwin)\n\u00acp_5(Darwin)\n\u00acp_4(Darwin)\n\u00acp_3(Darwin)\n\u00acp_2(Darwin)\np_0(Darwin)\n\u00acp_1(Darwin)\n(p_12(Darwin) \u2295 p_6(Darwin)) \u2192 p_7(Darwin)\n\u2200x (p_16(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2192 (p_13(x) \u2227 p_15(x)))\n\u2200x ((p_13(x) \u2228 p_14(x)) \u2192 p_3(x))\n\u2200x (\u00acp_11(x) \u2228 p_2(x) \u2228 p_12(x))\n\u2200x (\u00acp_0(x) \u2228 p_8(x) \u2228 p_1(x))\n\u2200x (p_11(x) \u2228 p_10(x))\np_0(Darwin) \u2192 p_6(Darwin)\np_0(Darwin) \u2192 \u00acp_10(Darwin)\np_6(Darwin)\np_16(Darwin)\n\u00acp_15(Darwin) \u2228 \u00acp_16(Darwin) \u2228 p_9(Darwin)\np_16(Darwin) \u2192 \u00acp_15(Darwin)\n\u00acp_15(Darwin) \u2192 \u00acp_9(Darwin)\n\u00acp_15(Darwin) \u2192 \u00acp_14(Darwin)\np_16(Darwin) \u2192 \u00acp_9(Darwin)\np_16(Darwin) \u2192 \u00acp_14(Darwin)\n\u00acp_15(Darwin)\n\u00acp_9(Darwin)\n\u00acp_14(Darwin)\n\u00acp_16(Darwin) \u2228 \u00acp_15(Darwin)",
            "Initial Goal": "p_14(Darwin) \u2228 p_9(Darwin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Darwin)",
                    "-p_5(Darwin)",
                    "-p_4(Darwin)",
                    "-p_3(Darwin)",
                    "-p_2(Darwin)",
                    "p_0(Darwin)",
                    "-p_1(Darwin)",
                    "( (p_12(Darwin) <-> p_6(Darwin)) | p_7(Darwin) )",
                    "all x (p_16(x) | p_5(x))",
                    "all x (-p_4(x) | (p_13(x) & p_15(x)))",
                    "all x (-(p_13(x) | p_14(x)) | p_3(x))",
                    "all x (-p_11(x) | p_2(x) | p_12(x))",
                    "all x (-p_0(x) | p_8(x) | p_1(x))",
                    "all x (p_11(x) | p_10(x))",
                    "-p_0(Darwin) | p_6(Darwin)",
                    "-p_0(Darwin) | -p_10(Darwin)",
                    "p_6(Darwin)",
                    "p_16(Darwin)",
                    "-p_15(Darwin) | -p_16(Darwin) | p_9(Darwin)",
                    "p_15(Darwin) | -p_9(Darwin)",
                    "p_15(Darwin) | -p_14(Darwin)",
                    "-p_16(Darwin) | -p_9(Darwin)",
                    "-p_16(Darwin) | -p_14(Darwin)",
                    "-p_15(Darwin)",
                    "-p_9(Darwin)",
                    "-p_14(Darwin)",
                    "-p_16(Darwin) | -p_15(Darwin)"
                ],
                "formulas(goals)": [
                    "-(p_14(Darwin) | p_9(Darwin))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_9(Darwin)",
                    "\u00acp_14(Darwin)"
                ],
                "added_rules": [
                    "\u00acp_16(Darwin) \u2228 \u00acp_15(Darwin)"
                ]
            }
        }
    ]
}