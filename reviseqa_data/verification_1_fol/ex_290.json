{
    "background_story": "Chana was a brilliant inventor known for her meticulous attention to detail. She spent years developing a revolutionary new encryption method that was deemed foolproof by the cybersecurity community. Chana's system, dubbed 'Eclipse,' used a complex series of algorithms and biometric markers to create unbreakable codes. After rigorous testing, Eclipse was adopted by governments and corporations worldwide, earning Chana numerous accolades and awards. Her foolproof design had single-handedly transformed the field of data security, protecting sensitive information from even the most sophisticated hacking attempts. Chana's work continued to evolve, always pushing the boundaries of what was thought possible in the realm of cybersecurity.",
    "predicates": [
        {
            "id": 0,
            "name": "innovative"
        },
        {
            "id": 1,
            "name": "successful"
        },
        {
            "id": 2,
            "name": "creates_solutions"
        },
        {
            "id": 3,
            "name": "tests_prototypes"
        },
        {
            "id": 4,
            "name": "learns_fast"
        },
        {
            "id": 5,
            "name": "makes_breakthroughs"
        },
        {
            "id": 6,
            "name": "sees_opportunities"
        },
        {
            "id": 7,
            "name": "builds_models"
        },
        {
            "id": 8,
            "name": "meticulous"
        },
        {
            "id": 9,
            "name": "thorough"
        },
        {
            "id": 10,
            "name": "is_persistent"
        },
        {
            "id": 11,
            "name": "think_critically"
        },
        {
            "id": 12,
            "name": "solve_problems"
        },
        {
            "id": 13,
            "name": "achieves_goals"
        },
        {
            "id": 14,
            "name": "is_reliable"
        },
        {
            "id": 15,
            "name": "designs_systems"
        },
        {
            "id": 16,
            "name": "examines_details"
        },
        {
            "id": 17,
            "name": "refines_processes"
        },
        {
            "id": 18,
            "name": "analyzes_data"
        },
        {
            "id": 19,
            "name": "optimizes_code"
        },
        {
            "id": 20,
            "name": "is_diligent"
        },
        {
            "id": 21,
            "name": "is_resourceful"
        },
        {
            "id": 22,
            "name": "sets_objectives"
        },
        {
            "id": 23,
            "name": "works_diligently"
        },
        {
            "id": 24,
            "name": "delivers_results"
        },
        {
            "id": 25,
            "name": "writes_code"
        },
        {
            "id": 26,
            "name": "develops_algorithms"
        },
        {
            "id": 27,
            "name": "enhances_security"
        }
    ],
    "subject_name": "Chana",
    "subject_category": "inventor",
    "keyword": "foolproof",
    "all_facts": [
        {
            "id": 0,
            "subject": "Chana",
            "text": "Chana is not innovative.",
            "fol": "\u00acp_0(Chana)",
            "str_fol": "\u00acinnovative(Chana)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Chana",
            "text": "Chana is successful.",
            "fol": "p_1(Chana)",
            "str_fol": "successful(Chana)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Chana",
            "text": "Chana does not create solutions.",
            "fol": "\u00acp_2(Chana)",
            "str_fol": "\u00accreates_solutions(Chana)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Chana",
            "text": "Chana tests prototypes.",
            "fol": "p_3(Chana)",
            "str_fol": "tests_prototypes(Chana)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Chana",
            "text": "Chana learns quickly.",
            "fol": "p_4(Chana)",
            "str_fol": "learns_fast(Chana)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Chana",
            "text": "Chana does not make breakthroughs.",
            "fol": "\u00acp_5(Chana)",
            "str_fol": "\u00acmakes_breakthroughs(Chana)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Chana",
            "text": "Chana sees opportunities.",
            "fol": "p_6(Chana)",
            "str_fol": "sees_opportunities(Chana)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Chana",
            "text": "Chana builds models.",
            "fol": "p_7(Chana)",
            "str_fol": "builds_models(Chana)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Chana",
            "text": "Chana designs systems.",
            "fol": "p_15(Chana)",
            "str_fol": "designs_systems(Chana)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Chana",
            "text": "Chana does not solve problems.",
            "fol": "\u00acp_12(Chana)",
            "str_fol": "\u00acsolve_problems(Chana)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Chana",
            "text": "Chana is not reliable.",
            "fol": "\u00acp_14(Chana)",
            "str_fol": "\u00acis_reliable(Chana)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Chana",
            "text": "Chana does not achieve her goals.",
            "fol": "\u00acp_13(Chana)",
            "str_fol": "\u00acachieves_goals(Chana)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Chana",
            "text": "Chana does not think critically.",
            "fol": "\u00acp_11(Chana)",
            "str_fol": "\u00acthink_critically(Chana)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Chana",
            "text": "Chana is not persistent in her approach to developing new encryption methods.",
            "fol": "\u00acp_10(Chana)",
            "str_fol": "\u00acis_persistent(Chana)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Chana",
            "text": "Chana is thorough.",
            "fol": "p_9(Chana)",
            "str_fol": "thorough(Chana)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Chana",
            "text": "Chana is not meticulous.",
            "fol": "\u00acp_8(Chana)",
            "str_fol": "\u00acmeticulous(Chana)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Chana",
            "text": "Chana is innovative, or she is both meticulous and successful.",
            "fol": "p_0(Chana) \u2228 (meticulous(Chana) \u2227 successful(Chana))",
            "str_fol": "innovative(Chana) \u2228 (meticulous(Chana) \u2227 successful(Chana))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Chana",
            "text": "Chana sees opportunities.",
            "fol": "p_6(Chana)",
            "str_fol": "sees_opportunities(Chana)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Chana",
            "text": "Chana builds models.",
            "fol": "p_7(Chana)",
            "str_fol": "builds_models(Chana)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Chana",
            "text": "Chana learns quickly.",
            "fol": "p_4(Chana)",
            "str_fol": "learns_fast(Chana)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Chana",
            "text": "Chana does not make breakthroughs.",
            "fol": "\u00acp_5(Chana)",
            "str_fol": "\u00acmakes_breakthroughs(Chana)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Chana",
            "text": "Chana tests prototypes.",
            "fol": "p_3(Chana)",
            "str_fol": "tests_prototypes(Chana)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Chana",
            "text": "Chana does not create solutions.",
            "fol": "\u00acp_2(Chana)",
            "str_fol": "\u00accreates_solutions(Chana)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Chana",
            "text": "Chana is not innovative.",
            "fol": "\u00acp_0(Chana)",
            "str_fol": "\u00acinnovative(Chana)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Chana",
            "text": "Chana is successful.",
            "fol": "p_1(Chana)",
            "str_fol": "successful(Chana)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Chana sees opportunities, then she builds models and designs systems.",
            "fol": "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
            "str_fol": "sees_opportunities(Chana) \u2192 (builds_models(Chana) \u2227 designs_systems(Chana))"
        },
        {
            "id": 6,
            "text": "If an inventor solves problems and learns quickly, then they make breakthroughs.",
            "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((solve_problems(x) \u2227 learns_fast(x)) \u2192 makes_breakthroughs(x))"
        },
        {
            "id": 5,
            "text": "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
            "fol": "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
            "str_fol": "designs_systems(Chana) \u2192 (is_reliable(Chana) \u2295 tests_prototypes(Chana))"
        },
        {
            "id": 4,
            "text": "If Chana achieves her goals, then she is reliable.",
            "fol": "p_13(Chana) \u2192 p_14(Chana)",
            "str_fol": "achieves_goals(Chana) \u2192 is_reliable(Chana)"
        },
        {
            "id": 3,
            "text": "If Chana thinks critically, then she achieves her goals.",
            "fol": "p_11(Chana) \u2192 p_13(Chana)",
            "str_fol": "think_critically(Chana) \u2192 achieves_goals(Chana)"
        },
        {
            "id": 2,
            "text": "All persistent inventors think critically and solve problems.",
            "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
            "str_fol": "\u2200x (is_persistent(x) \u2192 (think_critically(x) \u2227 solve_problems(x)))"
        },
        {
            "id": 1,
            "text": "Chana is either thorough or persistent, but not necessarily both, in her approach to developing new encryption methods.",
            "fol": "p_9(Chana) \u2295 p_10(Chana)",
            "str_fol": "thorough(Chana) \u2295 is_persistent(Chana)"
        },
        {
            "id": 0,
            "text": "If an inventor is meticulous and thorough, then they create solutions.",
            "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((meticulous(x) \u2227 thorough(x)) \u2192 creates_solutions(x))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Chana",
            "text": "Chana sees opportunities.",
            "fol": "p_6(Chana)",
            "str_fol": "sees_opportunities(Chana)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Chana",
            "text": "Chana builds models.",
            "fol": "p_7(Chana)",
            "str_fol": "builds_models(Chana)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Chana",
            "text": "Chana learns quickly.",
            "fol": "p_4(Chana)",
            "str_fol": "learns_fast(Chana)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Chana",
            "text": "Chana does not make breakthroughs.",
            "fol": "\u00acp_5(Chana)",
            "str_fol": "\u00acmakes_breakthroughs(Chana)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Chana",
            "text": "Chana tests prototypes.",
            "fol": "p_3(Chana)",
            "str_fol": "tests_prototypes(Chana)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Chana",
            "text": "Chana does not create solutions.",
            "fol": "\u00acp_2(Chana)",
            "str_fol": "\u00accreates_solutions(Chana)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Chana",
            "text": "Chana is not innovative.",
            "fol": "\u00acp_0(Chana)",
            "str_fol": "\u00acinnovative(Chana)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Chana",
            "text": "Chana is successful.",
            "fol": "p_1(Chana)",
            "str_fol": "successful(Chana)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Chana sees opportunities, then she builds models and designs systems.",
            "fol": "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
            "str_fol": "sees_opportunities(Chana) \u2192 (builds_models(Chana) \u2227 designs_systems(Chana))"
        },
        {
            "id": 6,
            "text": "If an inventor solves problems and learns quickly, then they make breakthroughs.",
            "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((solve_problems(x) \u2227 learns_fast(x)) \u2192 makes_breakthroughs(x))"
        },
        {
            "id": 5,
            "text": "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
            "fol": "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
            "str_fol": "designs_systems(Chana) \u2192 (is_reliable(Chana) \u2295 tests_prototypes(Chana))"
        },
        {
            "id": 4,
            "text": "If Chana achieves her goals, then she is reliable.",
            "fol": "p_13(Chana) \u2192 p_14(Chana)",
            "str_fol": "achieves_goals(Chana) \u2192 is_reliable(Chana)"
        },
        {
            "id": 3,
            "text": "If Chana thinks critically, then she achieves her goals.",
            "fol": "p_11(Chana) \u2192 p_13(Chana)",
            "str_fol": "think_critically(Chana) \u2192 achieves_goals(Chana)"
        },
        {
            "id": 2,
            "text": "All persistent inventors think critically and solve problems.",
            "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
            "str_fol": "\u2200x (is_persistent(x) \u2192 (think_critically(x) \u2227 solve_problems(x)))"
        },
        {
            "id": 1,
            "text": "Chana is either thorough or persistent, but not necessarily both, in her approach to developing new encryption methods.",
            "fol": "p_9(Chana) \u2295 p_10(Chana)",
            "str_fol": "thorough(Chana) \u2295 is_persistent(Chana)"
        },
        {
            "id": 0,
            "text": "If an inventor is meticulous and thorough, then they create solutions.",
            "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((meticulous(x) \u2227 thorough(x)) \u2192 creates_solutions(x))"
        }
    ],
    "context_fol": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
    "conclusion": {
        "id": 16,
        "text": "Chana is innovative, or she is both meticulous and successful.",
        "fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
        "str_fol": "innovative(Chana) \u2228 (meticulous(Chana) \u2227 successful(Chana))"
    },
    "initial_answer": "False",
    "initial_goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Chana",
                    "text": "Chana sees opportunities.",
                    "fol": "p_6(Chana)",
                    "str_fol": "sees_opportunities(Chana)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Chana",
                    "text": "Chana builds models.",
                    "fol": "p_7(Chana)",
                    "str_fol": "builds_models(Chana)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Chana sees opportunities, then she builds models and designs systems.",
                    "fol": "p_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))",
                    "str_fol": "sees_opportunities(Chana) \u2192 (builds_models(Chana) \u2227 designs_systems(Chana))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Chana",
                "text": "Chana designs systems.",
                "fol": "p_15(Chana)",
                "str_fol": "designs_systems(Chana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Chana",
                    "text": "Chana learns quickly.",
                    "fol": "p_4(Chana)",
                    "str_fol": "learns_fast(Chana)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Chana",
                    "text": "Chana does not make breakthroughs.",
                    "fol": "\u00acp_5(Chana)",
                    "str_fol": "\u00acmakes_breakthroughs(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If an inventor solves problems and learns quickly, then they make breakthroughs.",
                    "fol": "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((solve_problems(x) \u2227 learns_fast(x)) \u2192 makes_breakthroughs(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Chana",
                "text": "Chana does not solve problems.",
                "fol": "\u00acp_12(Chana)",
                "str_fol": "\u00acsolve_problems(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Chana",
                    "text": "Chana designs systems.",
                    "fol": "p_15(Chana)",
                    "str_fol": "designs_systems(Chana)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Chana",
                    "text": "Chana tests prototypes.",
                    "fol": "p_3(Chana)",
                    "str_fol": "tests_prototypes(Chana)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Chana designs systems, then she is either reliable or tests prototypes, but not both.",
                    "fol": "p_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))",
                    "str_fol": "designs_systems(Chana) \u2192 (is_reliable(Chana) \u2295 tests_prototypes(Chana))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Chana",
                "text": "Chana is not reliable.",
                "fol": "\u00acp_14(Chana)",
                "str_fol": "\u00acis_reliable(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Chana",
                    "text": "Chana is not reliable.",
                    "fol": "\u00acp_14(Chana)",
                    "str_fol": "\u00acis_reliable(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Chana achieves her goals, then she is reliable.",
                    "fol": "p_13(Chana) \u2192 p_14(Chana)",
                    "str_fol": "achieves_goals(Chana) \u2192 is_reliable(Chana)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Chana",
                "text": "Chana does not achieve her goals.",
                "fol": "\u00acp_13(Chana)",
                "str_fol": "\u00acachieves_goals(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Chana",
                    "text": "Chana does not achieve her goals.",
                    "fol": "\u00acp_13(Chana)",
                    "str_fol": "\u00acachieves_goals(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Chana thinks critically, then she achieves her goals.",
                    "fol": "p_11(Chana) \u2192 p_13(Chana)",
                    "str_fol": "think_critically(Chana) \u2192 achieves_goals(Chana)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Chana",
                "text": "Chana does not think critically.",
                "fol": "\u00acp_11(Chana)",
                "str_fol": "\u00acthink_critically(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Chana",
                    "text": "Chana does not think critically.",
                    "fol": "\u00acp_11(Chana)",
                    "str_fol": "\u00acthink_critically(Chana)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Chana",
                    "text": "Chana does not solve problems.",
                    "fol": "\u00acp_12(Chana)",
                    "str_fol": "\u00acsolve_problems(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "All persistent inventors think critically and solve problems.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))",
                    "str_fol": "\u2200x (is_persistent(x) \u2192 (think_critically(x) \u2227 solve_problems(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Chana",
                "text": "Chana is not persistent in her approach to developing new encryption methods.",
                "fol": "\u00acp_10(Chana)",
                "str_fol": "\u00acis_persistent(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Chana",
                    "text": "Chana is not persistent in her approach to developing new encryption methods.",
                    "fol": "\u00acp_10(Chana)",
                    "str_fol": "\u00acis_persistent(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Chana is either thorough or persistent, but not necessarily both, in her approach to developing new encryption methods.",
                    "fol": "p_9(Chana) \u2295 p_10(Chana)",
                    "str_fol": "thorough(Chana) \u2295 is_persistent(Chana)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Chana",
                "text": "Chana is thorough.",
                "fol": "p_9(Chana)",
                "str_fol": "thorough(Chana)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Chana",
                    "text": "Chana is thorough.",
                    "fol": "p_9(Chana)",
                    "str_fol": "thorough(Chana)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Chana",
                    "text": "Chana does not create solutions.",
                    "fol": "\u00acp_2(Chana)",
                    "str_fol": "\u00accreates_solutions(Chana)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If an inventor is meticulous and thorough, then they create solutions.",
                    "fol": "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((meticulous(x) \u2227 thorough(x)) \u2192 creates_solutions(x))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Chana",
                "text": "Chana is not meticulous.",
                "fol": "\u00acp_8(Chana)",
                "str_fol": "\u00acmeticulous(Chana)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Chana",
                    "text": "Chana is not innovative.",
                    "fol": "\u00acp_0(Chana)",
                    "str_fol": "\u00acinnovative(Chana)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Chana",
                    "text": "Chana is not meticulous.",
                    "fol": "\u00acp_8(Chana)",
                    "str_fol": "\u00acmeticulous(Chana)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Chana",
                    "text": "Chana is successful.",
                    "fol": "p_1(Chana)",
                    "str_fol": "successful(Chana)",
                    "negation": false
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 16,
                "text": "Chana is innovative, or she is both meticulous and successful.",
                "fol": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
                "str_fol": "innovative(Chana) \u2228 (meticulous(Chana) \u2227 successful(Chana))"
            }
        }
    ],
    "proof_trace": "2 (all x (p_12(x) & p_4(x) -> p_5(x))).  [assumption].\n6 (all x (p_10(x) -> p_11(x) & p_12(x))).  [assumption].\n7 -(p_9(Chana) <-> p_10(Chana)).  [assumption].\n8 (all x (p_8(x) & p_9(x) -> p_2(x))).  [assumption].\n9 -(p_0(Chana) | p_8(Chana) & p_1(Chana)).  [goal].\n13 -p_12(x) | -p_4(x) | p_5(x).  [clausify(2)].\n14 p_4(Chana).  [assumption].\n15 -p_12(Chana) | p_5(Chana).  [resolve(13,b,14,a)].\n16 -p_5(Chana).  [assumption].\n20 -p_8(x) | -p_9(x) | p_2(x).  [clausify(8)].\n21 -p_2(Chana).  [assumption].\n22 p_0(Chana) | p_8(Chana).  [deny(9)].\n23 -p_0(Chana).  [assumption].\n27 p_9(Chana) | p_10(Chana).  [clausify(7)].\n29 -p_10(x) | p_12(x).  [clausify(6)].\n33 p_9(Chana) | p_12(Chana).  [resolve(27,b,29,a)].\n34 -p_12(Chana).  [resolve(15,b,16,a)].\n35 p_8(Chana).  [resolve(22,a,23,a)].\n36 -p_8(Chana) | -p_9(Chana).  [resolve(20,c,21,a)].\n39 -p_9(Chana).  [resolve(35,a,36,a)].\n40 p_9(Chana).  [resolve(33,b,34,a)].\n41 $F.  [resolve(39,a,40,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))\n(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)\np_6(Chana) \u2192 p_15(Chana)\np_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana)",
                    "p_7(Chana)",
                    "p_4(Chana)",
                    "-p_5(Chana)",
                    "p_3(Chana)",
                    "-p_2(Chana)",
                    "-p_0(Chana)",
                    "p_1(Chana)",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana))",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x))",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana)))",
                    "p_13(Chana) -> p_14(Chana)",
                    "p_11(Chana) -> p_13(Chana)",
                    "all x (p_10(x) -> (p_11(x) & p_12(x)))",
                    "(-(p_9(Chana) <-> p_10(Chana)))",
                    "all x ((p_8(x) & p_9(x)) -> p_2(x))",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana))",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana)))",
                    "(p_8(Chana) & p_9(Chana)) -> p_2(Chana)",
                    "p_6(Chana) -> p_15(Chana)",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana))"
                ],
                "formulas(goals)": [
                    "- (p_0(Chana) | (p_8(Chana) & p_1(Chana)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))",
                    "(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))",
                    "(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)",
                    "p_6(Chana) \u2192 p_15(Chana)",
                    "p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\n\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))\n(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)\np_6(Chana) \u2192 p_15(Chana)\np_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))\np_7(Chana)\np_15(Chana)\n\u00acp_10(Chana)\np_9(Chana)\n\u00acp_8(Chana)",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana)",
                    "p_7(Chana)",
                    "p_4(Chana)",
                    "-p_5(Chana)",
                    "p_3(Chana)",
                    "-p_2(Chana)",
                    "-p_0(Chana)",
                    "p_1(Chana)",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana))",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x))",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana)))",
                    "p_13(Chana) -> p_14(Chana)",
                    "p_11(Chana) -> p_13(Chana)",
                    "all x (p_10(x) -> (p_11(x) & p_12(x)))",
                    "-(p_9(Chana) <-> p_10(Chana))",
                    "all x ((p_8(x) & p_9(x)) -> p_2(x))",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana))",
                    "(p_9(Chana) | p_10(Chana)) & -(p_9(Chana) & p_10(Chana))",
                    "(p_8(Chana) & p_9(Chana)) -> p_2(Chana)",
                    "p_6(Chana) -> p_15(Chana)",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana))",
                    "p_7(Chana)",
                    "p_15(Chana)",
                    "-p_10(Chana)",
                    "p_9(Chana)",
                    "-p_8(Chana)"
                ],
                "formulas(goals)": [
                    "-(p_0(Chana) | (p_8(Chana) & p_1(Chana)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Chana)",
                    "p_15(Chana)",
                    "\u00acp_10(Chana)",
                    "p_9(Chana)",
                    "\u00acp_8(Chana)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))\np_6(Chana) \u2192 p_15(Chana)\np_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))\np_7(Chana)\np_15(Chana)\n\u00acp_10(Chana)\np_9(Chana)\np_9(Chana) \u2192 p_8(Chana)",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana)).",
                    "(all x ((p_12(x) & p_4(x)) -> p_5(x))).",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "(all x (p_10(x) -> (p_11(x) & p_12(x)))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana))).",
                    "p_6(Chana) -> p_15(Chana).",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana)).",
                    "p_7(Chana).",
                    "p_15(Chana).",
                    "-p_10(Chana).",
                    "p_9(Chana).",
                    "p_9(Chana) -> p_8(Chana)."
                ],
                "formulas(goals)": [
                    "p_0(Chana) | (p_8(Chana) & p_1(Chana))."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_8(Chana)"
                ],
                "removed_rules": [
                    "\u2200x ((p_8(x) \u2227 p_9(x)) \u2192 p_2(x))",
                    "(p_8(Chana) \u2227 p_9(Chana)) \u2192 p_2(Chana)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Chana) \u2192 p_8(Chana)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))\np_6(Chana) \u2192 p_15(Chana)\np_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))\np_7(Chana)\np_15(Chana)\n\u00acp_10(Chana)\np_9(Chana)\np_9(Chana) \u2192 p_8(Chana)\np_4(Chana) \u2192 \u00acp_12(Chana)",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana)",
                    "p_7(Chana)",
                    "p_4(Chana)",
                    "-p_5(Chana)",
                    "p_3(Chana)",
                    "-p_2(Chana)",
                    "-p_0(Chana)",
                    "p_1(Chana)",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana))",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x))",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana)))",
                    "p_13(Chana) -> p_14(Chana)",
                    "p_11(Chana) -> p_13(Chana)",
                    "all x (p_10(x) -> (p_11(x) & p_12(x)))",
                    "-(p_9(Chana) <-> p_10(Chana))",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana))",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana)))",
                    "p_6(Chana) -> p_15(Chana)",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana))",
                    "p_7(Chana)",
                    "p_15(Chana)",
                    "-p_10(Chana)",
                    "p_9(Chana)",
                    "p_9(Chana) -> p_8(Chana)",
                    "p_4(Chana) -> -p_12(Chana)"
                ],
                "formulas(goals)": [
                    "p_0(Chana) | (p_8(Chana) & p_1(Chana))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Chana) \u2192 \u00acp_12(Chana)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 (p_14(Chana) \u2295 p_3(Chana))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))\np_6(Chana) \u2192 p_15(Chana)\np_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))\np_7(Chana)\np_15(Chana)\n\u00acp_10(Chana)\np_9(Chana)\np_9(Chana) \u2192 p_8(Chana)\np_4(Chana) \u2192 \u00acp_12(Chana)\n(p_9(Chana) \u2227 p_1(Chana)) \u2192 \u00acp_8(Chana)",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana)).",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x)).",
                    "p_15(Chana) -> (-(p_14(Chana) <-> p_3(Chana))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "all x (p_10(x) -> (p_11(x) & p_12(x))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & -(p_9(Chana) & p_10(Chana)).",
                    "p_6(Chana) -> p_15(Chana).",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana)).",
                    "p_7(Chana).",
                    "p_15(Chana).",
                    "-p_10(Chana).",
                    "p_9(Chana).",
                    "p_9(Chana) -> p_8(Chana).",
                    "p_4(Chana) -> -p_12(Chana).",
                    "(p_9(Chana) & p_1(Chana)) -> -p_8(Chana)."
                ],
                "formulas(goals)": [
                    "- (p_0(Chana) | (p_8(Chana) & p_1(Chana)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_9(Chana) \u2227 p_1(Chana)) \u2192 \u00acp_8(Chana)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chana)\np_7(Chana)\np_4(Chana)\n\u00acp_5(Chana)\np_3(Chana)\n\u00acp_2(Chana)\n\u00acp_0(Chana)\np_1(Chana)\np_6(Chana) \u2192 (p_7(Chana) \u2227 p_15(Chana))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_5(x))\np_15(Chana) \u2192 ((p_14(Chana) \u2228 p_3(Chana)) \u2227 \u00ac(p_14(Chana) \u2227 p_3(Chana)))\np_13(Chana) \u2192 p_14(Chana)\np_11(Chana) \u2192 p_13(Chana)\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x)))\np_9(Chana) \u2295 p_10(Chana)\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana))\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana))\np_6(Chana) \u2192 p_15(Chana)\np_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))\np_7(Chana)\np_15(Chana)\n\u00acp_10(Chana)\np_9(Chana)\np_9(Chana) \u2192 p_8(Chana)\np_4(Chana) \u2192 \u00acp_12(Chana)\n(p_9(Chana) \u2227 p_1(Chana)) \u2192 \u00acp_8(Chana)\np_8(Chana)\np_9(Chana) \u2227 p_1(Chana)",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "p_6(Chana) -> (p_7(Chana) & p_15(Chana)).",
                    "all x ((p_12(x) & p_4(x)) -> p_5(x)).",
                    "p_15(Chana) -> ((p_14(Chana) | p_3(Chana)) & (-(p_14(Chana) & p_3(Chana)))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "all x (p_10(x) -> (p_11(x) & p_12(x))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana))).",
                    "p_6(Chana) -> p_15(Chana).",
                    "p_15(Chana) -> (p_14(Chana) | p_3(Chana)).",
                    "p_7(Chana).",
                    "p_15(Chana).",
                    "-p_10(Chana).",
                    "p_9(Chana).",
                    "p_9(Chana) -> p_8(Chana).",
                    "p_4(Chana) -> -p_12(Chana).",
                    "(p_9(Chana) & p_1(Chana)) -> -p_8(Chana).",
                    "p_8(Chana).",
                    "p_9(Chana) & p_1(Chana)."
                ],
                "formulas(goals)": [
                    "-((p_0(Chana) | (p_8(Chana) & p_1(Chana))))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Chana)",
                    "p_9(Chana) \u2227 p_1(Chana)"
                ],
                "added_rules": [
                    "p_15(Chana) \u2192 ((p_14(Chana) \u2228 p_3(Chana)) \u2227 \u00ac(p_14(Chana) \u2227 p_3(Chana)))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chana).\np_7(Chana).\np_4(Chana).\n\u00acp_5(Chana).\np_3(Chana).\n\u00acp_2(Chana).\n\u00acp_0(Chana).\np_1(Chana).\n(p_6(Chana) \u2192 p_7(Chana)) \u2227 (p_6(Chana) \u2192 p_15(Chana)).\n\u2200x (p_12(x) \u2192 (p_4(x) \u2192 p_5(x))).\n(p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))) \u2227 (p_15(Chana) \u2192 \u00ac(p_14(Chana) \u2227 p_3(Chana))).\np_13(Chana) \u2192 p_14(Chana).\np_11(Chana) \u2192 p_13(Chana).\n\u2200x (p_10(x) \u2192 (p_11(x) \u2227 p_12(x))).\np_9(Chana) \u2295 p_10(Chana).\np_10(Chana) \u2192 (p_11(Chana) \u2227 p_12(Chana)).\n(p_9(Chana) \u2228 p_10(Chana)) \u2227 \u00ac(p_9(Chana) \u2227 p_10(Chana)).\np_15(Chana) \u2228 \u00acp_6(Chana).\n(p_14(Chana) \u2228 p_3(Chana)) \u2228 \u00acp_15(Chana).\np_7(Chana) \u2228 p_7(Chana).\np_15(Chana) \u2228 p_15(Chana).\n\u00acp_10(Chana) \u2228 \u00acp_10(Chana).\np_9(Chana) \u2228 p_9(Chana).\n\u00acp_9(Chana) \u2228 p_8(Chana).\n\u00acp_4(Chana) \u2228 \u00acp_12(Chana).\n\u00ac(p_9(Chana) \u2227 p_1(Chana)) \u2228 \u00acp_8(Chana).\np_8(Chana).\np_9(Chana) \u2227 p_1(Chana).\np_6(Chana) \u2192 p_6(Chana).\np_7(Chana) \u2192 p_7(Chana).\np_4(Chana) \u2192 p_4(Chana).\n\u00acp_5(Chana) \u2192 \u00acp_5(Chana).\np_3(Chana) \u2192 p_3(Chana).\n\u00acp_2(Chana) \u2192 \u00acp_2(Chana).\n\u00acp_0(Chana) \u2192 \u00acp_0(Chana).\np_1(Chana) \u2192 p_1(Chana).",
            "Initial Goal": "p_0(Chana) \u2228 (p_8(Chana) \u2227 p_1(Chana))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chana).",
                    "p_7(Chana).",
                    "p_4(Chana).",
                    "-p_5(Chana).",
                    "p_3(Chana).",
                    "-p_2(Chana).",
                    "-p_0(Chana).",
                    "p_1(Chana).",
                    "(p_6(Chana) -> p_7(Chana)) & (p_6(Chana) -> p_15(Chana)).",
                    "all x (p_12(x) -> (p_4(x) -> p_5(x))).",
                    "(p_15(Chana) -> (p_14(Chana) | p_3(Chana))) & (p_15(Chana) -> -(p_14(Chana) & p_3(Chana))).",
                    "p_13(Chana) -> p_14(Chana).",
                    "p_11(Chana) -> p_13(Chana).",
                    "all x (p_10(x) -> (p_11(x) & p_12(x))).",
                    "-(p_9(Chana) <-> p_10(Chana)).",
                    "p_10(Chana) -> (p_11(Chana) & p_12(Chana)).",
                    "(p_9(Chana) | p_10(Chana)) & (-(p_9(Chana) & p_10(Chana))).",
                    "p_15(Chana) | -p_6(Chana).",
                    "(p_14(Chana) | p_3(Chana)) | -p_15(Chana).",
                    "p_7(Chana) | p_7(Chana).",
                    "p_15(Chana) | p_15(Chana).",
                    "-p_10(Chana) | -p_10(Chana).",
                    "p_9(Chana) | p_9(Chana).",
                    "-p_9(Chana) | p_8(Chana).",
                    "-p_4(Chana) | -p_12(Chana).",
                    "(-(p_9(Chana) & p_1(Chana))) | -p_8(Chana).",
                    "p_8(Chana).",
                    "p_9(Chana) & p_1(Chana).",
                    "p_6(Chana) -> p_6(Chana).",
                    "p_7(Chana) -> p_7(Chana).",
                    "p_4(Chana) -> p_4(Chana).",
                    "-p_5(Chana) -> -p_5(Chana).",
                    "p_3(Chana) -> p_3(Chana).",
                    "-p_2(Chana) -> -p_2(Chana).",
                    "-p_0(Chana) -> -p_0(Chana).",
                    "p_1(Chana) -> p_1(Chana)."
                ],
                "formulas(goals)": [
                    "- (p_0(Chana) | (p_8(Chana) & p_1(Chana)))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Chana) \u2192 p_7(Chana)) \u2227 (p_6(Chana) \u2192 p_15(Chana))",
                    "\u2200x (p_12(x) \u2192 (p_4(x) \u2192 p_5(x)))",
                    "(p_15(Chana) \u2192 (p_14(Chana) \u2228 p_3(Chana))) \u2227 (p_15(Chana) \u2192 \u00ac(p_14(Chana) \u2227 p_3(Chana)))",
                    "p_15(Chana) \u2228 \u00acp_6(Chana)",
                    "(p_14(Chana) \u2228 p_3(Chana)) \u2228 \u00acp_15(Chana)",
                    "p_7(Chana) \u2228 p_7(Chana)",
                    "p_15(Chana) \u2228 p_15(Chana)",
                    "\u00acp_10(Chana) \u2228 \u00acp_10(Chana)",
                    "p_9(Chana) \u2228 p_9(Chana)",
                    "\u00acp_9(Chana) \u2228 p_8(Chana)",
                    "\u00acp_4(Chana) \u2228 \u00acp_12(Chana)",
                    "\u00ac(p_9(Chana) \u2227 p_1(Chana)) \u2228 \u00acp_8(Chana)",
                    "p_6(Chana) \u2192 p_6(Chana)",
                    "p_7(Chana) \u2192 p_7(Chana)",
                    "p_4(Chana) \u2192 p_4(Chana)",
                    "\u00acp_5(Chana) \u2192 \u00acp_5(Chana)",
                    "p_3(Chana) \u2192 p_3(Chana)",
                    "\u00acp_2(Chana) \u2192 \u00acp_2(Chana)",
                    "\u00acp_0(Chana) \u2192 \u00acp_0(Chana)",
                    "p_1(Chana) \u2192 p_1(Chana)"
                ]
            }
        }
    ]
}