{
    "background_story": "Cali, a 35-year-old marathon runner, had been training for the Boston Marathon for years. However, a severe knee injury during a practice run left her in excruciating pain. Her doctor prescribed etodolac, a powerful anti-inflammatory medication, to help manage her pain and reduce swelling. With the help of etodolac, Cali was able to continue her rehabilitation and eventually return to running. She credited etodolac for allowing her to reach her goal of completing the marathon, and even qualified for the next year's event. Cali's experience with etodolac not only helped her overcome her injury but also gave her a new appreciation for the importance of proper pain management in athletics.",
    "predicates": [
        {
            "id": 0,
            "name": "needs_rehab"
        },
        {
            "id": 1,
            "name": "seeks_treatment"
        },
        {
            "id": 2,
            "name": "uses_ice"
        },
        {
            "id": 3,
            "name": "plays_sport"
        },
        {
            "id": 4,
            "name": "takes_etodolac"
        },
        {
            "id": 5,
            "name": "manages_pain"
        },
        {
            "id": 6,
            "name": "has_injury"
        },
        {
            "id": 7,
            "name": "experiences_pain"
        },
        {
            "id": 8,
            "name": "has_swelling"
        },
        {
            "id": 9,
            "name": "sees_doctor"
        },
        {
            "id": 10,
            "name": "is_athlete"
        },
        {
            "id": 11,
            "name": "has_arthritis"
        },
        {
            "id": 12,
            "name": "gets_sprain"
        },
        {
            "id": 13,
            "name": "gets_hurt"
        },
        {
            "id": 14,
            "name": "falls_down"
        },
        {
            "id": 15,
            "name": "runs_long"
        },
        {
            "id": 16,
            "name": "feels_unwell"
        },
        {
            "id": 17,
            "name": "gets_diagnosis"
        },
        {
            "id": 18,
            "name": "trains_regularly"
        },
        {
            "id": 19,
            "name": "eats_healthy"
        }
    ],
    "subject_name": "Cali",
    "subject_category": "human",
    "keyword": "etodolac",
    "all_facts": [
        {
            "id": 0,
            "subject": "Cali",
            "text": "Cali needs rehabilitation.",
            "fol": "p_0(Cali)",
            "str_fol": "needs_rehab(Cali)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Cali",
            "text": "Cali seeks treatment.",
            "fol": "p_1(Cali)",
            "str_fol": "seeks_treatment(Cali)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Cali",
            "text": "Cali uses ice.",
            "fol": "p_2(Cali)",
            "str_fol": "uses_ice(Cali)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Cali",
            "text": "Cali does not play a sport.",
            "fol": "\u00acp_3(Cali)",
            "str_fol": "\u00acplays_sport(Cali)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Cali",
            "text": "Cali is an athlete.",
            "fol": "p_10(Cali)",
            "str_fol": "is_athlete(Cali)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Cali",
            "text": "Cali does not see a doctor.",
            "fol": "\u00acp_9(Cali)",
            "str_fol": "\u00acsees_doctor(Cali)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Cali",
            "text": "Cali does not experience pain.",
            "fol": "\u00acp_7(Cali)",
            "str_fol": "\u00acexperiences_pain(Cali)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Cali",
            "text": "Cali takes etodolac.",
            "fol": "p_4(Cali)",
            "str_fol": "takes_etodolac(Cali)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Cali",
            "text": "Cali does not manage her pain.",
            "fol": "\u00acp_5(Cali)",
            "str_fol": "\u00acmanages_pain(Cali)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Cali",
            "text": "Cali does not play a sport.",
            "fol": "\u00acp_3(Cali)",
            "str_fol": "\u00acplays_sport(Cali)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Cali",
            "text": "Cali uses ice.",
            "fol": "p_2(Cali)",
            "str_fol": "uses_ice(Cali)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Cali",
            "text": "Cali seeks treatment.",
            "fol": "p_1(Cali)",
            "str_fol": "seeks_treatment(Cali)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Cali",
            "text": "Cali needs rehabilitation.",
            "fol": "p_0(Cali)",
            "str_fol": "needs_rehab(Cali)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "Cali is either an athlete or plays a sport.",
            "fol": "p_10(Cali) \u2228 p_3(Cali)",
            "str_fol": "is_athlete(Cali) \u2228 plays_sport(Cali)"
        },
        {
            "id": 4,
            "text": "If Cali is an athlete, then she either sees a doctor or uses ice, but not both.",
            "fol": "p_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))",
            "str_fol": "is_athlete(Cali) \u2192 (sees_doctor(Cali) \u2295 uses_ice(Cali))"
        },
        {
            "id": 3,
            "text": "If Cali experiences pain or has swelling, then she will see a doctor.",
            "fol": "(p_7(Cali) \u2228 p_8(Cali)) \u2192 p_9(Cali)",
            "str_fol": "(experiences_pain(Cali) \u2228 has_swelling(Cali)) \u2192 sees_doctor(Cali)"
        },
        {
            "id": 2,
            "text": "If Cali either experiences pain or has an injury (but not both), then she seeks treatment.",
            "fol": "(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)",
            "str_fol": "(experiences_pain(Cali) \u2295 has_injury(Cali)) \u2192 seeks_treatment(Cali)"
        },
        {
            "id": 1,
            "text": "If Cali has an injury or needs rehabilitation, then she takes etodolac.",
            "fol": "(p_6(Cali) \u2228 p_0(Cali)) \u2192 p_4(Cali)",
            "str_fol": "(has_injury(Cali) \u2228 needs_rehab(Cali)) \u2192 takes_etodolac(Cali)"
        },
        {
            "id": 0,
            "text": "If Cali takes etodolac, then she manages her pain.",
            "fol": "p_4(Cali) \u2192 p_5(Cali)",
            "str_fol": "takes_etodolac(Cali) \u2192 manages_pain(Cali)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Cali",
            "text": "Cali does not play a sport.",
            "fol": "\u00acp_3(Cali)",
            "str_fol": "\u00acplays_sport(Cali)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Cali",
            "text": "Cali uses ice.",
            "fol": "p_2(Cali)",
            "str_fol": "uses_ice(Cali)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Cali",
            "text": "Cali seeks treatment.",
            "fol": "p_1(Cali)",
            "str_fol": "seeks_treatment(Cali)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Cali",
            "text": "Cali needs rehabilitation.",
            "fol": "p_0(Cali)",
            "str_fol": "needs_rehab(Cali)",
            "negation": false
        },
        {
            "id": 5,
            "text": "Cali is either an athlete or plays a sport.",
            "fol": "p_10(Cali) \u2228 p_3(Cali)",
            "str_fol": "is_athlete(Cali) \u2228 plays_sport(Cali)"
        },
        {
            "id": 4,
            "text": "If Cali is an athlete, then she either sees a doctor or uses ice, but not both.",
            "fol": "p_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))",
            "str_fol": "is_athlete(Cali) \u2192 (sees_doctor(Cali) \u2295 uses_ice(Cali))"
        },
        {
            "id": 3,
            "text": "If Cali experiences pain or has swelling, then she will see a doctor.",
            "fol": "(p_7(Cali) \u2228 p_8(Cali)) \u2192 p_9(Cali)",
            "str_fol": "(experiences_pain(Cali) \u2228 has_swelling(Cali)) \u2192 sees_doctor(Cali)"
        },
        {
            "id": 2,
            "text": "If Cali either experiences pain or has an injury (but not both), then she seeks treatment.",
            "fol": "(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)",
            "str_fol": "(experiences_pain(Cali) \u2295 has_injury(Cali)) \u2192 seeks_treatment(Cali)"
        },
        {
            "id": 1,
            "text": "If Cali has an injury or needs rehabilitation, then she takes etodolac.",
            "fol": "(p_6(Cali) \u2228 p_0(Cali)) \u2192 p_4(Cali)",
            "str_fol": "(has_injury(Cali) \u2228 needs_rehab(Cali)) \u2192 takes_etodolac(Cali)"
        },
        {
            "id": 0,
            "text": "If Cali takes etodolac, then she manages her pain.",
            "fol": "p_4(Cali) \u2192 p_5(Cali)",
            "str_fol": "takes_etodolac(Cali) \u2192 manages_pain(Cali)"
        }
    ],
    "context_fol": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n(p_7(Cali) \u2228 p_8(Cali)) \u2192 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n(p_6(Cali) \u2228 p_0(Cali)) \u2192 p_4(Cali)\np_4(Cali) \u2192 p_5(Cali)",
    "conclusion": {
        "id": 8,
        "subject": "Cali",
        "text": "Cali does not manage her pain.",
        "fol": "\u00acp_5(Cali)",
        "str_fol": "\u00acmanages_pain(Cali)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_5(Cali)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Cali",
                    "text": "Cali does not play a sport.",
                    "fol": "\u00acp_3(Cali)",
                    "str_fol": "\u00acplays_sport(Cali)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Cali is either an athlete or plays a sport.",
                    "fol": "p_10(Cali) \u2228 p_3(Cali)",
                    "str_fol": "is_athlete(Cali) \u2228 plays_sport(Cali)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Cali",
                "text": "Cali is an athlete.",
                "fol": "p_10(Cali)",
                "str_fol": "is_athlete(Cali)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Cali",
                    "text": "Cali is an athlete.",
                    "fol": "p_10(Cali)",
                    "str_fol": "is_athlete(Cali)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Cali",
                    "text": "Cali uses ice.",
                    "fol": "p_2(Cali)",
                    "str_fol": "uses_ice(Cali)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Cali is an athlete, then she either sees a doctor or uses ice, but not both.",
                    "fol": "p_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))",
                    "str_fol": "is_athlete(Cali) \u2192 (sees_doctor(Cali) \u2295 uses_ice(Cali))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Cali",
                "text": "Cali does not see a doctor.",
                "fol": "\u00acp_9(Cali)",
                "str_fol": "\u00acsees_doctor(Cali)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Cali",
                    "text": "Cali does not see a doctor.",
                    "fol": "\u00acp_9(Cali)",
                    "str_fol": "\u00acsees_doctor(Cali)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Cali experiences pain or has swelling, then she will see a doctor.",
                    "fol": "(p_7(Cali) \u2228 p_8(Cali)) \u2192 p_9(Cali)",
                    "str_fol": "(experiences_pain(Cali) \u2228 has_swelling(Cali)) \u2192 sees_doctor(Cali)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Cali",
                "text": "Cali does not experience pain.",
                "fol": "\u00acp_7(Cali)",
                "str_fol": "\u00acexperiences_pain(Cali)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Cali",
                    "text": "Cali does not experience pain.",
                    "fol": "\u00acp_7(Cali)",
                    "str_fol": "\u00acexperiences_pain(Cali)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Cali",
                    "text": "Cali seeks treatment.",
                    "fol": "p_1(Cali)",
                    "str_fol": "seeks_treatment(Cali)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Cali either experiences pain or has an injury (but not both), then she seeks treatment.",
                    "fol": "(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)",
                    "str_fol": "(experiences_pain(Cali) \u2295 has_injury(Cali)) \u2192 seeks_treatment(Cali)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Cali",
                    "text": "Cali needs rehabilitation.",
                    "fol": "p_0(Cali)",
                    "str_fol": "needs_rehab(Cali)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Cali has an injury or needs rehabilitation, then she takes etodolac.",
                    "fol": "(p_6(Cali) \u2228 p_0(Cali)) \u2192 p_4(Cali)",
                    "str_fol": "(has_injury(Cali) \u2228 needs_rehab(Cali)) \u2192 takes_etodolac(Cali)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Cali",
                "text": "Cali takes etodolac.",
                "fol": "p_4(Cali)",
                "str_fol": "takes_etodolac(Cali)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Cali",
                    "text": "Cali takes etodolac.",
                    "fol": "p_4(Cali)",
                    "str_fol": "takes_etodolac(Cali)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Cali takes etodolac, then she manages her pain.",
                    "fol": "p_4(Cali) \u2192 p_5(Cali)",
                    "str_fol": "takes_etodolac(Cali) \u2192 manages_pain(Cali)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Cali",
                "text": "Cali does not manage her pain.",
                "fol": "\u00acp_5(Cali)",
                "str_fol": "\u00acmanages_pain(Cali)",
                "negation": true
            }
        }
    ],
    "proof_trace": "4 p_6(Cali) | p_0(Cali) -> p_4(Cali).  [assumption].\n5 p_4(Cali) -> p_5(Cali).  [assumption].\n6 --p_5(Cali).  [goal].\n12 -p_0(Cali) | p_4(Cali).  [clausify(4)].\n13 p_0(Cali).  [assumption].\n14 p_4(Cali).  [resolve(12,a,13,a)].\n15 -p_4(Cali) | p_5(Cali).  [clausify(5)].\n16 p_5(Cali).  [resolve(14,a,15,a)].\n17 -p_5(Cali).  [deny(6)].\n20 $F.  [resolve(16,a,17,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n(p_7(Cali) \u2228 p_8(Cali)) \u2192 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n(p_6(Cali) \u2228 p_0(Cali)) \u2192 p_4(Cali)\np_4(Cali) \u2192 \u00acp_5(Cali)",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali)",
                    "p_2(Cali)",
                    "p_1(Cali)",
                    "p_0(Cali)",
                    "p_10(Cali) | p_3(Cali)",
                    "p_10(Cali) -> (-(p_9(Cali) <-> p_2(Cali)))",
                    "(p_7(Cali) | p_8(Cali)) -> p_9(Cali)",
                    "(-(p_7(Cali) <-> p_6(Cali))) -> p_1(Cali)",
                    "(p_6(Cali) | p_0(Cali)) -> p_4(Cali)",
                    "p_4(Cali) -> -p_5(Cali)"
                ],
                "formulas(goals)": [
                    "-p_5(Cali)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_4(Cali) \u2192 p_5(Cali)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_4(Cali) \u2192 \u00acp_5(Cali)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n\u00ac(p_6(Cali) \u2228 p_0(Cali)) \u2228 p_4(Cali)\n\u00acp_4(Cali) \u2228 \u00acp_5(Cali)\np_5(Cali) \u2192 \u00acp_4(Cali)\np_0(Cali) \u2228 \u00acp_0(Cali)\np_0(Cali) \u2228 p_6(Cali)",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali)",
                    "p_2(Cali)",
                    "p_1(Cali)",
                    "p_0(Cali)",
                    "p_10(Cali) | p_3(Cali)",
                    "p_10(Cali) -> -(p_9(Cali) <-> p_2(Cali))",
                    "-(p_7(Cali) | p_8(Cali)) | p_9(Cali)",
                    "-(p_7(Cali) <-> p_6(Cali)) -> p_1(Cali)",
                    "-(p_6(Cali) | p_0(Cali)) | p_4(Cali)",
                    "-p_4(Cali) | -p_5(Cali)",
                    "p_5(Cali) -> -p_4(Cali)",
                    "p_0(Cali) | -p_0(Cali)",
                    "p_0(Cali) | p_6(Cali)"
                ],
                "formulas(goals)": [
                    "-p_5(Cali)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_7(Cali) \u2228 p_8(Cali)) \u2192 p_9(Cali)",
                    "(p_6(Cali) \u2228 p_0(Cali)) \u2192 p_4(Cali)",
                    "p_4(Cali) \u2192 \u00acp_5(Cali)"
                ],
                "added_facts": [
                    "p_0(Cali) \u2228 \u00acp_0(Cali)",
                    "p_0(Cali) \u2228 p_6(Cali)"
                ],
                "added_rules": [
                    "\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali)",
                    "\u00ac(p_6(Cali) \u2228 p_0(Cali)) \u2228 p_4(Cali)",
                    "\u00acp_4(Cali) \u2228 \u00acp_5(Cali)",
                    "p_5(Cali) \u2192 \u00acp_4(Cali)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Cali).\np_2(Cali).\np_1(Cali).\np_0(Cali).\np_10(Cali) \u2228 p_3(Cali).\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali)).\n\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali).\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali).\n\u00acp_4(Cali) \u2228 \u00acp_5(Cali).\np_5(Cali) \u2192 \u00acp_4(Cali).\np_0(Cali) \u2228 \u00acp_0(Cali).\np_0(Cali) \u2228 p_6(Cali).\np_5(Cali) \u2228 \u00acp_10(Cali).",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali).",
                    "p_2(Cali).",
                    "p_1(Cali).",
                    "p_0(Cali).",
                    "p_10(Cali) | p_3(Cali).",
                    "p_10(Cali) -> (-(p_9(Cali) <-> p_2(Cali))).",
                    "-(p_7(Cali) | p_8(Cali)) | p_9(Cali).",
                    "(-(p_7(Cali) <-> p_6(Cali))) -> p_1(Cali).",
                    "-p_4(Cali) | -p_5(Cali).",
                    "p_5(Cali) -> -p_4(Cali).",
                    "p_0(Cali) | -p_0(Cali).",
                    "p_0(Cali) | p_6(Cali).",
                    "p_5(Cali) | -p_10(Cali)."
                ],
                "formulas(goals)": [
                    "p_5(Cali)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_6(Cali) \u2228 p_0(Cali)) \u2228 p_4(Cali)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Cali) \u2228 \u00acp_10(Cali)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n\u00acp_4(Cali) \u2228 \u00acp_5(Cali)\np_5(Cali) \u2192 \u00acp_4(Cali)\np_0(Cali) \u2228 \u00acp_0(Cali)\np_0(Cali) \u2228 p_6(Cali)\np_5(Cali) \u2228 \u00acp_10(Cali)\np_10(Cali) \u2192 p_5(Cali)",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali)",
                    "p_2(Cali)",
                    "p_1(Cali)",
                    "p_0(Cali)",
                    "p_10(Cali) | p_3(Cali)",
                    "p_10(Cali) -> (-(p_9(Cali) <-> p_2(Cali)))",
                    "(-p_7(Cali) & -p_8(Cali)) | p_9(Cali)",
                    "(-(p_7(Cali) <-> p_6(Cali))) -> p_1(Cali)",
                    "-p_4(Cali) | -p_5(Cali)",
                    "p_5(Cali) -> -p_4(Cali)",
                    "p_0(Cali) | -p_0(Cali)",
                    "p_0(Cali) | p_6(Cali)",
                    "p_5(Cali) | -p_10(Cali)",
                    "p_10(Cali) -> p_5(Cali)"
                ],
                "formulas(goals)": [
                    "p_5(Cali)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_10(Cali) \u2192 p_5(Cali)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n\u00acp_4(Cali) \u2228 \u00acp_5(Cali)\np_5(Cali) \u2192 \u00acp_4(Cali)\np_0(Cali) \u2228 \u00acp_0(Cali)\np_0(Cali) \u2228 p_6(Cali)\np_5(Cali) \u2228 \u00acp_10(Cali)\n\u00acp_5(Cali) \u2192 \u00acp_10(Cali)\np_5(Cali) \u2228 p_5(Cali)\np_5(Cali) \u2228 \u00acp_5(Cali)",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali).",
                    "p_2(Cali).",
                    "p_1(Cali).",
                    "p_0(Cali).",
                    "p_10(Cali) | p_3(Cali).",
                    "p_10(Cali) -> (-(p_9(Cali) <-> p_2(Cali))).",
                    "-(p_7(Cali) | p_8(Cali)) | p_9(Cali).",
                    "(-(p_7(Cali) <-> p_6(Cali))) -> p_1(Cali).",
                    "-p_4(Cali) | -p_5(Cali).",
                    "p_5(Cali) -> -p_4(Cali).",
                    "p_0(Cali) | -p_0(Cali).",
                    "p_0(Cali) | p_6(Cali).",
                    "p_5(Cali) | -p_10(Cali).",
                    "-p_5(Cali) -> -p_10(Cali).",
                    "p_5(Cali) | p_5(Cali).",
                    "p_5(Cali) | -p_5(Cali)."
                ],
                "formulas(goals)": [
                    "-(-p_5(Cali))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_5(Cali) \u2192 \u00acp_10(Cali)",
                    "p_5(Cali) \u2228 p_5(Cali)",
                    "p_5(Cali) \u2228 \u00acp_5(Cali)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n\u00acp_4(Cali) \u2228 \u00acp_5(Cali)\np_5(Cali) \u2192 \u00acp_4(Cali)\np_0(Cali) \u2228 \u00acp_0(Cali)\np_0(Cali) \u2228 p_6(Cali)\np_5(Cali) \u2228 \u00acp_10(Cali)\np_5(Cali) \u2228 \u00acp_5(Cali)\np_10(Cali) \u2192 \u00acp_5(Cali)",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali).",
                    "p_2(Cali).",
                    "p_1(Cali).",
                    "p_0(Cali).",
                    "p_10(Cali) | p_3(Cali).",
                    "p_10(Cali) -> (-(p_9(Cali) <-> p_2(Cali))).",
                    "(-(p_7(Cali) | p_8(Cali))) | p_9(Cali).",
                    "(-(p_7(Cali) <-> p_6(Cali))) -> p_1(Cali).",
                    "-p_4(Cali) | -p_5(Cali).",
                    "p_5(Cali) -> -p_4(Cali).",
                    "p_0(Cali) | -p_0(Cali).",
                    "p_0(Cali) | p_6(Cali).",
                    "p_5(Cali) | -p_10(Cali).",
                    "p_5(Cali) | -p_5(Cali).",
                    "p_10(Cali) -> -p_5(Cali)."
                ],
                "formulas(goals)": [
                    "-p_5(Cali)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_5(Cali) \u2192 \u00acp_10(Cali)",
                    "p_5(Cali) \u2228 p_5(Cali)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Cali) \u2192 \u00acp_5(Cali)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Cali)\np_2(Cali)\np_1(Cali)\np_0(Cali)\np_10(Cali) \u2228 p_3(Cali)\np_10(Cali) \u2192 (p_9(Cali) \u2295 p_2(Cali))\n\u00ac(p_7(Cali) \u2228 p_8(Cali)) \u2228 p_9(Cali)\n(p_7(Cali) \u2295 p_6(Cali)) \u2192 p_1(Cali)\n\u00acp_4(Cali) \u2228 \u00acp_5(Cali)\np_5(Cali) \u2192 \u00acp_4(Cali)\np_0(Cali) \u2228 \u00acp_0(Cali)\np_0(Cali) \u2228 p_6(Cali)\np_5(Cali) \u2228 p_10(Cali)\np_5(Cali) \u2228 \u00acp_5(Cali)\np_10(Cali) \u2192 \u00acp_5(Cali)",
            "Initial Goal": "\u00acp_5(Cali)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Cali)",
                    "p_2(Cali)",
                    "p_1(Cali)",
                    "p_0(Cali)",
                    "p_10(Cali) | p_3(Cali)",
                    "p_10(Cali) -> (-(p_9(Cali) <-> p_2(Cali)))",
                    "-(p_7(Cali) | p_8(Cali)) | p_9(Cali)",
                    "(-(p_7(Cali) <-> p_6(Cali))) -> p_1(Cali)",
                    "-p_4(Cali) | -p_5(Cali)",
                    "p_5(Cali) -> -p_4(Cali)",
                    "p_0(Cali) | -p_0(Cali)",
                    "p_0(Cali) | p_6(Cali)",
                    "p_5(Cali) | p_10(Cali)",
                    "p_5(Cali) | -p_5(Cali)",
                    "p_10(Cali) -> -p_5(Cali)"
                ],
                "formulas(goals)": [
                    "-p_5(Cali)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Cali) \u2228 \u00acp_10(Cali)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Cali) \u2228 p_10(Cali)"
                ]
            }
        }
    ]
}