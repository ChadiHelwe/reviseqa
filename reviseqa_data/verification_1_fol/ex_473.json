{
    "background_story": "Emma, a renowned marine biologist, spent her career studying the unique characteristics of sea turtles. Her research focused on the dorsal shells of these creatures, exploring how the scutes (individual plates) on their backs helped to reduce drag and enhance their swimming efficiency. During an expedition to the Great Barrier Reef, Emma observed a peculiar phenomenon where certain turtles had modified dorsal spines, allowing them to dive deeper and longer than others. Her groundbreaking findings, published in a prestigious scientific journal, shed new light on the adaptability of sea turtles and their remarkable ability to thrive in diverse marine environments. Emma's work dorsally examining these incredible animals has significantly contributed to the field of marine biology.",
    "predicates": [
        {
            "id": 0,
            "name": "analyze_data"
        },
        {
            "id": 1,
            "name": "observes_turtles"
        },
        {
            "id": 2,
            "name": "is_expert"
        },
        {
            "id": 3,
            "name": "monitor_water"
        },
        {
            "id": 4,
            "name": "investigate_oceans"
        },
        {
            "id": 5,
            "name": "discovers_patterns"
        },
        {
            "id": 6,
            "name": "publish_findings"
        },
        {
            "id": 7,
            "name": "examines_scutes"
        },
        {
            "id": 8,
            "name": "protect_reefs"
        },
        {
            "id": 9,
            "name": "study_sea_turtles"
        },
        {
            "id": 10,
            "name": "examine_coral"
        },
        {
            "id": 11,
            "name": "understand_ecosystems"
        },
        {
            "id": 12,
            "name": "identify_species"
        },
        {
            "id": 13,
            "name": "classify_plankton"
        },
        {
            "id": 14,
            "name": "track_migration"
        },
        {
            "id": 15,
            "name": "map_habitats"
        },
        {
            "id": 16,
            "name": "explore_marine_environments"
        },
        {
            "id": 17,
            "name": "research_dorsal_shells"
        },
        {
            "id": 18,
            "name": "loves_ocean"
        },
        {
            "id": 19,
            "name": "investigate_marine_life"
        },
        {
            "id": 20,
            "name": "document_species"
        },
        {
            "id": 21,
            "name": "specialize_in_marine_life"
        },
        {
            "id": 22,
            "name": "know_ocean_currents"
        },
        {
            "id": 23,
            "name": "counts_organisms"
        },
        {
            "id": 24,
            "name": "tracks_behavior"
        },
        {
            "id": 25,
            "name": "investigate_depths"
        },
        {
            "id": 26,
            "name": "chart_currents"
        },
        {
            "id": 27,
            "name": "collect_samples"
        },
        {
            "id": 28,
            "name": "survey_habitat"
        },
        {
            "id": 29,
            "name": "count_fish"
        },
        {
            "id": 30,
            "name": "measure_depth"
        },
        {
            "id": 31,
            "name": "is_dedicated"
        },
        {
            "id": 32,
            "name": "love_animals"
        },
        {
            "id": 33,
            "name": "charts_depths"
        },
        {
            "id": 34,
            "name": "records_behaviors"
        },
        {
            "id": 35,
            "name": "environments"
        }
    ],
    "subject_name": "Emma",
    "subject_category": "marine biologist",
    "keyword": "dorsally",
    "all_facts": [
        {
            "id": 0,
            "subject": "Emma",
            "text": "Emma does not analyze data.",
            "fol": "\u00acp_0(Emma)",
            "str_fol": "\u00acanalyze_data(Emma)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emma",
            "text": "Emma observes turtles.",
            "fol": "p_1(Emma)",
            "str_fol": "observes_turtles(Emma)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Emma",
            "text": "Emma is not an expert.",
            "fol": "\u00acp_2(Emma)",
            "str_fol": "\u00acis_expert(Emma)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Emma",
            "text": "Emma monitors water.",
            "fol": "p_3(Emma)",
            "str_fol": "monitor_water(Emma)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Emma",
            "text": "Emma investigates oceans.",
            "fol": "p_4(Emma)",
            "str_fol": "investigate_oceans(Emma)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Emma",
            "text": "Emma does not discover patterns.",
            "fol": "\u00acp_5(Emma)",
            "str_fol": "\u00acdiscovers_patterns(Emma)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emma",
            "text": "Emma does not publish her findings.",
            "fol": "\u00acp_6(Emma)",
            "str_fol": "\u00acpublish_findings(Emma)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Emma",
            "text": "Emma examines scutes.",
            "fol": "p_7(Emma)",
            "str_fol": "examines_scutes(Emma)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Emma",
            "text": "Emma protects reefs.",
            "fol": "p_8(Emma)",
            "str_fol": "protect_reefs(Emma)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Emma",
            "text": "Emma does not map habitats.",
            "fol": "\u00acp_15(Emma)",
            "str_fol": "\u00acmap_habitats(Emma)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Emma",
            "text": "Emma researches dorsal shells.",
            "fol": "p_17(Emma)",
            "str_fol": "research_dorsal_shells(Emma)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Emma",
            "text": "Emma tracks migration.",
            "fol": "p_14(Emma)",
            "str_fol": "track_migration(Emma)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Emma",
            "text": "Emma does not identify species.",
            "fol": "\u00acp_12(Emma)",
            "str_fol": "\u00acidentify_species(Emma)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Emma",
            "text": "Emma does not explore marine environments.",
            "fol": "\u00acp_16(Emma)",
            "str_fol": "\u00acexplore_marine_environments(Emma)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Emma",
            "text": "Emma classifies plankton.",
            "fol": "p_13(Emma)",
            "str_fol": "classify_plankton(Emma)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Emma",
            "text": "Emma does not understand ecosystems.",
            "fol": "\u00acp_11(Emma)",
            "str_fol": "\u00acunderstand_ecosystems(Emma)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Emma",
            "text": "Emma does not examine coral.",
            "fol": "\u00acp_10(Emma)",
            "str_fol": "\u00acexamine_coral(Emma)",
            "negation": true
        },
        {
            "id": 17,
            "subject": "Emma",
            "text": "Emma does not study sea turtles.",
            "fol": "\u00acp_9(Emma)",
            "str_fol": "\u00acstudy_sea_turtles(Emma)",
            "negation": true
        },
        {
            "id": 18,
            "subject": "Emma",
            "text": "Emma studies sea turtles and either researches dorsal shells or explores marine environments (or both).",
            "fol": "p_9(Emma) \u2227 (research_dorsal_shells(Emma) \u2228 explore_marine_environments(Emma))",
            "str_fol": "study_sea_turtles(Emma) \u2227 (research_dorsal_shells(Emma) \u2228 explore_marine_environments(Emma))",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 8,
            "subject": "Emma",
            "text": "Emma protects reefs.",
            "fol": "p_8(Emma)",
            "str_fol": "protect_reefs(Emma)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Emma",
            "text": "Emma examines scutes.",
            "fol": "p_7(Emma)",
            "str_fol": "examines_scutes(Emma)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Emma",
            "text": "Emma monitors water.",
            "fol": "p_3(Emma)",
            "str_fol": "monitor_water(Emma)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Emma",
            "text": "Emma is not an expert.",
            "fol": "\u00acp_2(Emma)",
            "str_fol": "\u00acis_expert(Emma)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emma",
            "text": "Emma does not publish her findings.",
            "fol": "\u00acp_6(Emma)",
            "str_fol": "\u00acpublish_findings(Emma)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emma",
            "text": "Emma observes turtles.",
            "fol": "p_1(Emma)",
            "str_fol": "observes_turtles(Emma)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Emma",
            "text": "Emma does not discover patterns.",
            "fol": "\u00acp_5(Emma)",
            "str_fol": "\u00acdiscovers_patterns(Emma)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Emma",
            "text": "Emma investigates oceans.",
            "fol": "p_4(Emma)",
            "str_fol": "investigate_oceans(Emma)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Emma",
            "text": "Emma does not analyze data.",
            "fol": "\u00acp_0(Emma)",
            "str_fol": "\u00acanalyze_data(Emma)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Emma either protects reefs or maps habitats, but not both.",
            "fol": "p_8(Emma) \u2295 p_15(Emma)",
            "str_fol": "protect_reefs(Emma) \u2295 map_habitats(Emma)"
        },
        {
            "id": 7,
            "text": "If Emma examines scutes, then she researches dorsal shells.",
            "fol": "p_7(Emma) \u2192 p_17(Emma)",
            "str_fol": "examines_scutes(Emma) \u2192 research_dorsal_shells(Emma)"
        },
        {
            "id": 6,
            "text": "If Emma either tracks migration or monitors water (but not both), then she is an expert.",
            "fol": "(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)",
            "str_fol": "(track_migration(Emma) \u2295 monitor_water(Emma)) \u2192 is_expert(Emma)"
        },
        {
            "id": 5,
            "text": "If Emma identifies species, then she publishes her findings.",
            "fol": "p_12(Emma) \u2192 p_6(Emma)",
            "str_fol": "identify_species(Emma) \u2192 publish_findings(Emma)"
        },
        {
            "id": 4,
            "text": "For all marine biologists, if they observe turtles and explore marine environments, then they discover patterns.",
            "fol": "\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((observes_turtles(x) \u2227 explore_marine_environments(x)) \u2192 discovers_patterns(x))"
        },
        {
            "id": 3,
            "text": "If Emma tracks migration, then she either classifies plankton or maps habitats, but not both.",
            "fol": "p_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))",
            "str_fol": "track_migration(Emma) \u2192 (classify_plankton(Emma) \u2295 map_habitats(Emma))"
        },
        {
            "id": 2,
            "text": "If Emma investigates oceans, then she either understands ecosystems or classifies plankton, but not both.",
            "fol": "p_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))",
            "str_fol": "investigate_oceans(Emma) \u2192 (understand_ecosystems(Emma) \u2295 classify_plankton(Emma))"
        },
        {
            "id": 1,
            "text": "Every marine biologist who examines coral either analyzes data or identifies species.",
            "fol": "\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (examine_coral(x) \u2192 (analyze_data(x) \u2228 identify_species(x)))"
        },
        {
            "id": 0,
            "text": "If Emma either studies sea turtles or examines coral (but not both), then she understands ecosystems.",
            "fol": "(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)",
            "str_fol": "(study_sea_turtles(Emma) \u2295 examine_coral(Emma)) \u2192 understand_ecosystems(Emma)"
        }
    ],
    "context": [
        {
            "id": 8,
            "subject": "Emma",
            "text": "Emma protects reefs.",
            "fol": "p_8(Emma)",
            "str_fol": "protect_reefs(Emma)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Emma",
            "text": "Emma examines scutes.",
            "fol": "p_7(Emma)",
            "str_fol": "examines_scutes(Emma)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Emma",
            "text": "Emma monitors water.",
            "fol": "p_3(Emma)",
            "str_fol": "monitor_water(Emma)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Emma",
            "text": "Emma is not an expert.",
            "fol": "\u00acp_2(Emma)",
            "str_fol": "\u00acis_expert(Emma)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Emma",
            "text": "Emma does not publish her findings.",
            "fol": "\u00acp_6(Emma)",
            "str_fol": "\u00acpublish_findings(Emma)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Emma",
            "text": "Emma observes turtles.",
            "fol": "p_1(Emma)",
            "str_fol": "observes_turtles(Emma)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Emma",
            "text": "Emma does not discover patterns.",
            "fol": "\u00acp_5(Emma)",
            "str_fol": "\u00acdiscovers_patterns(Emma)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Emma",
            "text": "Emma investigates oceans.",
            "fol": "p_4(Emma)",
            "str_fol": "investigate_oceans(Emma)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Emma",
            "text": "Emma does not analyze data.",
            "fol": "\u00acp_0(Emma)",
            "str_fol": "\u00acanalyze_data(Emma)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Emma either protects reefs or maps habitats, but not both.",
            "fol": "p_8(Emma) \u2295 p_15(Emma)",
            "str_fol": "protect_reefs(Emma) \u2295 map_habitats(Emma)"
        },
        {
            "id": 7,
            "text": "If Emma examines scutes, then she researches dorsal shells.",
            "fol": "p_7(Emma) \u2192 p_17(Emma)",
            "str_fol": "examines_scutes(Emma) \u2192 research_dorsal_shells(Emma)"
        },
        {
            "id": 6,
            "text": "If Emma either tracks migration or monitors water (but not both), then she is an expert.",
            "fol": "(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)",
            "str_fol": "(track_migration(Emma) \u2295 monitor_water(Emma)) \u2192 is_expert(Emma)"
        },
        {
            "id": 5,
            "text": "If Emma identifies species, then she publishes her findings.",
            "fol": "p_12(Emma) \u2192 p_6(Emma)",
            "str_fol": "identify_species(Emma) \u2192 publish_findings(Emma)"
        },
        {
            "id": 4,
            "text": "For all marine biologists, if they observe turtles and explore marine environments, then they discover patterns.",
            "fol": "\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((observes_turtles(x) \u2227 explore_marine_environments(x)) \u2192 discovers_patterns(x))"
        },
        {
            "id": 3,
            "text": "If Emma tracks migration, then she either classifies plankton or maps habitats, but not both.",
            "fol": "p_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))",
            "str_fol": "track_migration(Emma) \u2192 (classify_plankton(Emma) \u2295 map_habitats(Emma))"
        },
        {
            "id": 2,
            "text": "If Emma investigates oceans, then she either understands ecosystems or classifies plankton, but not both.",
            "fol": "p_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))",
            "str_fol": "investigate_oceans(Emma) \u2192 (understand_ecosystems(Emma) \u2295 classify_plankton(Emma))"
        },
        {
            "id": 1,
            "text": "Every marine biologist who examines coral either analyzes data or identifies species.",
            "fol": "\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (examine_coral(x) \u2192 (analyze_data(x) \u2228 identify_species(x)))"
        },
        {
            "id": 0,
            "text": "If Emma either studies sea turtles or examines coral (but not both), then she understands ecosystems.",
            "fol": "(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)",
            "str_fol": "(study_sea_turtles(Emma) \u2295 examine_coral(Emma)) \u2192 understand_ecosystems(Emma)"
        }
    ],
    "context_fol": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\np_8(Emma) \u2295 p_15(Emma)\np_7(Emma) \u2192 p_17(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\np_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)",
    "conclusion": {
        "id": 18,
        "text": "Emma studies sea turtles and either researches dorsal shells or explores marine environments (or both).",
        "fol": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
        "str_fol": "study_sea_turtles(Emma) \u2227 (research_dorsal_shells(Emma) \u2228 explore_marine_environments(Emma))"
    },
    "initial_answer": "False",
    "initial_goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Emma",
                    "text": "Emma protects reefs.",
                    "fol": "p_8(Emma)",
                    "str_fol": "protect_reefs(Emma)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Emma either protects reefs or maps habitats, but not both.",
                    "fol": "p_8(Emma) \u2295 p_15(Emma)",
                    "str_fol": "protect_reefs(Emma) \u2295 map_habitats(Emma)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Emma",
                "text": "Emma does not map habitats.",
                "fol": "\u00acp_15(Emma)",
                "str_fol": "\u00acmap_habitats(Emma)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Emma",
                    "text": "Emma examines scutes.",
                    "fol": "p_7(Emma)",
                    "str_fol": "examines_scutes(Emma)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Emma examines scutes, then she researches dorsal shells.",
                    "fol": "p_7(Emma) \u2192 p_17(Emma)",
                    "str_fol": "examines_scutes(Emma) \u2192 research_dorsal_shells(Emma)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Emma",
                "text": "Emma researches dorsal shells.",
                "fol": "p_17(Emma)",
                "str_fol": "research_dorsal_shells(Emma)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Emma",
                    "text": "Emma monitors water.",
                    "fol": "p_3(Emma)",
                    "str_fol": "monitor_water(Emma)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Emma",
                    "text": "Emma is not an expert.",
                    "fol": "\u00acp_2(Emma)",
                    "str_fol": "\u00acis_expert(Emma)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Emma either tracks migration or monitors water (but not both), then she is an expert.",
                    "fol": "(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)",
                    "str_fol": "(track_migration(Emma) \u2295 monitor_water(Emma)) \u2192 is_expert(Emma)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Emma",
                "text": "Emma tracks migration.",
                "fol": "p_14(Emma)",
                "str_fol": "track_migration(Emma)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Emma",
                    "text": "Emma does not publish her findings.",
                    "fol": "\u00acp_6(Emma)",
                    "str_fol": "\u00acpublish_findings(Emma)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Emma identifies species, then she publishes her findings.",
                    "fol": "p_12(Emma) \u2192 p_6(Emma)",
                    "str_fol": "identify_species(Emma) \u2192 publish_findings(Emma)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Emma",
                "text": "Emma does not identify species.",
                "fol": "\u00acp_12(Emma)",
                "str_fol": "\u00acidentify_species(Emma)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Emma",
                    "text": "Emma observes turtles.",
                    "fol": "p_1(Emma)",
                    "str_fol": "observes_turtles(Emma)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Emma",
                    "text": "Emma does not discover patterns.",
                    "fol": "\u00acp_5(Emma)",
                    "str_fol": "\u00acdiscovers_patterns(Emma)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For all marine biologists, if they observe turtles and explore marine environments, then they discover patterns.",
                    "fol": "\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((observes_turtles(x) \u2227 explore_marine_environments(x)) \u2192 discovers_patterns(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Emma",
                "text": "Emma does not explore marine environments.",
                "fol": "\u00acp_16(Emma)",
                "str_fol": "\u00acexplore_marine_environments(Emma)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Emma",
                    "text": "Emma tracks migration.",
                    "fol": "p_14(Emma)",
                    "str_fol": "track_migration(Emma)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Emma",
                    "text": "Emma does not map habitats.",
                    "fol": "\u00acp_15(Emma)",
                    "str_fol": "\u00acmap_habitats(Emma)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Emma tracks migration, then she either classifies plankton or maps habitats, but not both.",
                    "fol": "p_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))",
                    "str_fol": "track_migration(Emma) \u2192 (classify_plankton(Emma) \u2295 map_habitats(Emma))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Emma",
                "text": "Emma classifies plankton.",
                "fol": "p_13(Emma)",
                "str_fol": "classify_plankton(Emma)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Emma",
                    "text": "Emma investigates oceans.",
                    "fol": "p_4(Emma)",
                    "str_fol": "investigate_oceans(Emma)",
                    "negation": false
                },
                {
                    "id": 14,
                    "subject": "Emma",
                    "text": "Emma classifies plankton.",
                    "fol": "p_13(Emma)",
                    "str_fol": "classify_plankton(Emma)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Emma investigates oceans, then she either understands ecosystems or classifies plankton, but not both.",
                    "fol": "p_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))",
                    "str_fol": "investigate_oceans(Emma) \u2192 (understand_ecosystems(Emma) \u2295 classify_plankton(Emma))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Emma",
                "text": "Emma does not understand ecosystems.",
                "fol": "\u00acp_11(Emma)",
                "str_fol": "\u00acunderstand_ecosystems(Emma)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Emma",
                    "text": "Emma does not analyze data.",
                    "fol": "\u00acp_0(Emma)",
                    "str_fol": "\u00acanalyze_data(Emma)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Emma",
                    "text": "Emma does not identify species.",
                    "fol": "\u00acp_12(Emma)",
                    "str_fol": "\u00acidentify_species(Emma)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Every marine biologist who examines coral either analyzes data or identifies species.",
                    "fol": "\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (examine_coral(x) \u2192 (analyze_data(x) \u2228 identify_species(x)))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Emma",
                "text": "Emma does not examine coral.",
                "fol": "\u00acp_10(Emma)",
                "str_fol": "\u00acexamine_coral(Emma)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 16,
                    "subject": "Emma",
                    "text": "Emma does not examine coral.",
                    "fol": "\u00acp_10(Emma)",
                    "str_fol": "\u00acexamine_coral(Emma)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Emma",
                    "text": "Emma does not understand ecosystems.",
                    "fol": "\u00acp_11(Emma)",
                    "str_fol": "\u00acunderstand_ecosystems(Emma)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Emma either studies sea turtles or examines coral (but not both), then she understands ecosystems.",
                    "fol": "(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)",
                    "str_fol": "(study_sea_turtles(Emma) \u2295 examine_coral(Emma)) \u2192 understand_ecosystems(Emma)"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Emma",
                "text": "Emma does not study sea turtles.",
                "fol": "\u00acp_9(Emma)",
                "str_fol": "\u00acstudy_sea_turtles(Emma)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 17,
                    "subject": "Emma",
                    "text": "Emma does not study sea turtles.",
                    "fol": "\u00acp_9(Emma)",
                    "str_fol": "\u00acstudy_sea_turtles(Emma)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Emma",
                    "text": "Emma researches dorsal shells.",
                    "fol": "p_17(Emma)",
                    "str_fol": "research_dorsal_shells(Emma)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Emma",
                    "text": "Emma does not explore marine environments.",
                    "fol": "\u00acp_16(Emma)",
                    "str_fol": "\u00acexplore_marine_environments(Emma)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 18,
                "text": "Emma studies sea turtles and either researches dorsal shells or explores marine environments (or both).",
                "fol": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
                "str_fol": "study_sea_turtles(Emma) \u2227 (research_dorsal_shells(Emma) \u2228 explore_marine_environments(Emma))"
            }
        }
    ],
    "proof_trace": "1 -(p_8(Emma) <-> p_15(Emma)).  [assumption].\n3 -(p_14(Emma) <-> p_3(Emma)) -> p_2(Emma).  [assumption].\n4 p_12(Emma) -> p_6(Emma).  [assumption].\n6 p_14(Emma) -> -(p_13(Emma) <-> p_15(Emma)).  [assumption].\n7 p_4(Emma) -> -(p_11(Emma) <-> p_13(Emma)).  [assumption].\n8 (all x (p_10(x) -> p_0(x) | p_12(x))).  [assumption].\n9 -(p_9(Emma) <-> p_10(Emma)) -> p_11(Emma).  [assumption].\n10 -(p_9(Emma) & (p_17(Emma) | p_16(Emma))).  [goal].\n11 -p_8(Emma) | -p_15(Emma).  [clausify(1)].\n12 p_8(Emma).  [assumption].\n16 p_14(Emma) | -p_3(Emma) | p_2(Emma).  [clausify(3)].\n17 p_3(Emma).  [assumption].\n19 p_14(Emma) | p_2(Emma).  [resolve(16,b,17,a)].\n20 -p_2(Emma).  [assumption].\n21 -p_12(Emma) | p_6(Emma).  [clausify(4)].\n22 -p_6(Emma).  [assumption].\n28 p_4(Emma).  [assumption].\n29 -p_4(Emma) | -p_11(Emma) | -p_13(Emma).  [clausify(7)].\n30 -p_10(x) | p_0(x) | p_12(x).  [clausify(8)].\n31 -p_0(Emma).  [assumption].\n32 p_14(Emma).  [resolve(19,b,20,a)].\n33 -p_14(Emma) | p_13(Emma) | p_15(Emma).  [clausify(6)].\n36 -p_9(Emma) | p_10(Emma) | p_11(Emma).  [clausify(9)].\n37 p_9(Emma).  [deny(10)].\n38 p_13(Emma) | p_15(Emma).  [resolve(32,a,33,a)].\n39 -p_15(Emma).  [resolve(11,a,12,a)].\n41 -p_10(Emma) | p_12(Emma).  [resolve(30,b,31,a)].\n42 -p_12(Emma).  [resolve(21,b,22,a)].\n43 -p_11(Emma) | -p_13(Emma).  [resolve(29,a,28,a)].\n45 p_10(Emma) | p_11(Emma).  [resolve(37,a,36,a)].\n46 p_10(Emma) | -p_13(Emma).  [resolve(45,b,43,a)].\n47 p_13(Emma).  [resolve(38,b,39,a)].\n48 p_10(Emma).  [resolve(46,b,47,a)].\n49 -p_10(Emma).  [resolve(41,b,42,a)].\n50 $F.  [resolve(48,a,49,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_7(Emma) \u2192 p_17(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\np_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma)",
                    "p_7(Emma)",
                    "p_3(Emma)",
                    "-p_2(Emma)",
                    "-p_6(Emma)",
                    "p_1(Emma)",
                    "-p_5(Emma)",
                    "p_4(Emma)",
                    "-p_0(Emma)",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma))",
                    "p_7(Emma) -> p_17(Emma)",
                    "(-(p_14(Emma) <-> p_3(Emma))) -> p_2(Emma)",
                    "p_12(Emma) -> p_6(Emma)",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x))",
                    "p_14(Emma) -> ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma)))",
                    "p_4(Emma) -> (-(p_11(Emma) <-> p_13(Emma)))",
                    "all x (p_10(x) -> (p_0(x) | p_12(x)))",
                    "(-(p_9(Emma) <-> p_10(Emma))) -> p_11(Emma)",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x)))"
                ],
                "formulas(goals)": [
                    "-(p_9(Emma) & (p_17(Emma) | p_16(Emma)))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_7(Emma) \u2192 p_17(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\np_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))\n\u00acp_15(Emma)\np_13(Emma)\np_14(Emma)",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma)",
                    "p_7(Emma)",
                    "p_3(Emma)",
                    "-p_2(Emma)",
                    "-p_6(Emma)",
                    "p_1(Emma)",
                    "-p_5(Emma)",
                    "p_4(Emma)",
                    "-p_0(Emma)",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma))",
                    "p_7(Emma) -> p_17(Emma)",
                    "(-(p_14(Emma) <-> p_3(Emma))) -> p_2(Emma)",
                    "p_12(Emma) -> p_6(Emma)",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x))",
                    "p_14(Emma) -> ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma)))",
                    "p_4(Emma) -> (-(p_11(Emma) <-> p_13(Emma)))",
                    "all x (p_10(x) -> (p_0(x) | p_12(x)))",
                    "(-(p_9(Emma) <-> p_10(Emma))) -> p_11(Emma)",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x)))",
                    "-p_15(Emma)",
                    "p_13(Emma)",
                    "p_14(Emma)"
                ],
                "formulas(goals)": [
                    "-((p_9(Emma) & (p_17(Emma) | p_16(Emma))))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_15(Emma)",
                    "p_13(Emma)",
                    "p_14(Emma)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_7(Emma) \u2192 p_17(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\np_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))\n\u00acp_15(Emma)\np_13(Emma)\np_14(Emma)\np_8(Emma) \u2192 p_9(Emma)",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma)",
                    "p_7(Emma)",
                    "p_3(Emma)",
                    "-p_2(Emma)",
                    "-p_6(Emma)",
                    "p_1(Emma)",
                    "-p_5(Emma)",
                    "p_4(Emma)",
                    "-p_0(Emma)",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma))",
                    "p_7(Emma) -> p_17(Emma)",
                    "(-(p_14(Emma) <-> p_3(Emma))) -> p_2(Emma)",
                    "p_12(Emma) -> p_6(Emma)",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x))",
                    "p_14(Emma) -> ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma)))",
                    "p_4(Emma) -> (-(p_11(Emma) <-> p_13(Emma)))",
                    "all x (p_10(x) -> (p_0(x) | p_12(x)))",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x)))",
                    "-p_15(Emma)",
                    "p_13(Emma)",
                    "p_14(Emma)",
                    "p_8(Emma) -> p_9(Emma)"
                ],
                "formulas(goals)": [
                    "p_9(Emma) & (p_17(Emma) | p_16(Emma))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_9(Emma) \u2295 p_10(Emma)) \u2192 p_11(Emma)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_8(Emma) \u2192 p_9(Emma)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_8(Emma) \u2295 p_15(Emma)\np_7(Emma) \u2192 p_17(Emma)\n\u00acp_17(Emma) \u2192 \u00acp_7(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\n\u00ac(p_14(Emma) \u2295 p_3(Emma)) \u2228 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\n\u2200x (\u00acp_1(x) \u2228 \u00acp_16(x) \u2228 p_5(x))\np_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))\np_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u00acp_4(Emma) \u2228 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))\n\u00acp_15(Emma)\np_13(Emma)\np_14(Emma)\np_8(Emma) \u2192 p_9(Emma)\n\u00acp_9(Emma) \u2192 \u00acp_8(Emma)\np_9(Emma)\np_17(Emma)",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma).",
                    "p_7(Emma).",
                    "p_3(Emma).",
                    "-p_2(Emma).",
                    "-p_6(Emma).",
                    "p_1(Emma).",
                    "-p_5(Emma).",
                    "p_4(Emma).",
                    "-p_0(Emma).",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma)).",
                    "(-(p_8(Emma) <-> p_15(Emma))).",
                    "p_7(Emma) -> p_17(Emma).",
                    "-p_17(Emma) -> -p_7(Emma).",
                    "(-(p_14(Emma) <-> p_3(Emma))) -> p_2(Emma).",
                    "(-(-(p_14(Emma) <-> p_3(Emma))) | p_2(Emma)).",
                    "p_12(Emma) -> p_6(Emma).",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x)).",
                    "all x (-p_1(x) | -p_16(x) | p_5(x)).",
                    "p_14(Emma) -> ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma))).",
                    "p_14(Emma) -> (-(p_13(Emma) <-> p_15(Emma))).",
                    "p_4(Emma) -> (-(p_11(Emma) <-> p_13(Emma))).",
                    "(-p_4(Emma) | (-(p_11(Emma) <-> p_13(Emma)))).",
                    "all x (p_10(x) -> (p_0(x) | p_12(x))).",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x))).",
                    "-p_15(Emma).",
                    "p_13(Emma).",
                    "p_14(Emma).",
                    "p_8(Emma) -> p_9(Emma).",
                    "-p_9(Emma) -> -p_8(Emma).",
                    "p_9(Emma).",
                    "p_17(Emma)."
                ],
                "formulas(goals)": [
                    "p_9(Emma) & (p_17(Emma) | p_16(Emma))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_9(Emma)",
                    "p_17(Emma)"
                ],
                "added_rules": [
                    "p_8(Emma) \u2295 p_15(Emma)",
                    "\u00acp_17(Emma) \u2192 \u00acp_7(Emma)",
                    "\u00ac(p_14(Emma) \u2295 p_3(Emma)) \u2228 p_2(Emma)",
                    "\u2200x (\u00acp_1(x) \u2228 \u00acp_16(x) \u2228 p_5(x))",
                    "p_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))",
                    "\u00acp_4(Emma) \u2228 (p_11(Emma) \u2295 p_13(Emma))",
                    "\u00acp_9(Emma) \u2192 \u00acp_8(Emma)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_8(Emma) \u2295 p_15(Emma)\np_7(Emma) \u2192 p_17(Emma)\n\u00acp_17(Emma) \u2192 \u00acp_7(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\n\u00ac(p_14(Emma) \u2295 p_3(Emma)) \u2228 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\n\u2200x (\u00acp_1(x) \u2228 \u00acp_16(x) \u2228 p_5(x))\np_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))\np_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u00acp_4(Emma) \u2228 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))\n\u00acp_15(Emma)\np_13(Emma)\np_14(Emma)\np_8(Emma) \u2192 p_9(Emma)\n\u00acp_9(Emma) \u2192 \u00acp_8(Emma)\np_9(Emma)\np_17(Emma)\n(p_8(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_8(Emma) \u2227 p_15(Emma))\np_14(Emma) \u2192 ((p_13(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_13(Emma) \u2227 p_15(Emma)))\np_17(Emma) \u2228 \u00acp_7(Emma)\np_9(Emma) \u2228 \u00acp_8(Emma)\n\u00acp_12(Emma)",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma).",
                    "p_7(Emma).",
                    "p_3(Emma).",
                    "-p_2(Emma).",
                    "-p_6(Emma).",
                    "p_1(Emma).",
                    "-p_5(Emma).",
                    "p_4(Emma).",
                    "-p_0(Emma).",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma)).",
                    "-(p_8(Emma) <-> p_15(Emma)).",
                    "p_7(Emma) -> p_17(Emma).",
                    "-p_17(Emma) -> -p_7(Emma).",
                    "(-(p_14(Emma) <-> p_3(Emma))) -> p_2(Emma).",
                    "(-(p_14(Emma) <-> p_3(Emma))) | p_2(Emma).",
                    "p_12(Emma) -> p_6(Emma).",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x)).",
                    "all x (-p_1(x) | -p_16(x) | p_5(x)).",
                    "p_14(Emma) -> ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma))).",
                    "p_14(Emma) -> (-(p_13(Emma) <-> p_15(Emma))).",
                    "p_4(Emma) -> (-(p_11(Emma) <-> p_13(Emma))).",
                    "-p_4(Emma) | (-(p_11(Emma) <-> p_13(Emma))).",
                    "all x (p_10(x) -> (p_0(x) | p_12(x))).",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x))).",
                    "-p_15(Emma).",
                    "p_13(Emma).",
                    "p_14(Emma).",
                    "p_8(Emma) -> p_9(Emma).",
                    "-p_9(Emma) -> -p_8(Emma).",
                    "p_9(Emma).",
                    "p_17(Emma).",
                    "(p_8(Emma) & -p_15(Emma)) | (-p_8(Emma) & p_15(Emma)).",
                    "p_14(Emma) -> ((p_13(Emma) & -p_15(Emma)) | (-p_13(Emma) & p_15(Emma))).",
                    "p_17(Emma) | -p_7(Emma).",
                    "p_9(Emma) | -p_8(Emma).",
                    "-p_12(Emma)."
                ],
                "formulas(goals)": [
                    "p_9(Emma) & (p_17(Emma) | p_16(Emma))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_12(Emma)"
                ],
                "added_rules": [
                    "(p_8(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_8(Emma) \u2227 p_15(Emma))",
                    "p_14(Emma) \u2192 ((p_13(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_13(Emma) \u2227 p_15(Emma)))",
                    "p_17(Emma) \u2228 \u00acp_7(Emma)",
                    "p_9(Emma) \u2228 \u00acp_8(Emma)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_7(Emma) \u2192 p_17(Emma)\n\u00acp_17(Emma) \u2192 \u00acp_7(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\n\u2200x (\u00acp_1(x) \u2228 \u00acp_16(x) \u2228 p_5(x))\np_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))\n\u00acp_15(Emma)\np_13(Emma)\np_14(Emma)\np_8(Emma) \u2192 p_9(Emma)\n\u00acp_9(Emma) \u2192 \u00acp_8(Emma)\np_9(Emma)\np_17(Emma)\n(p_8(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_8(Emma) \u2227 p_15(Emma))\np_14(Emma) \u2192 ((p_13(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_13(Emma) \u2227 p_15(Emma)))\np_17(Emma) \u2228 \u00acp_7(Emma)\np_9(Emma) \u2228 \u00acp_8(Emma)\n\u00acp_12(Emma)",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma)",
                    "p_7(Emma)",
                    "p_3(Emma)",
                    "-p_2(Emma)",
                    "-p_6(Emma)",
                    "p_1(Emma)",
                    "-p_5(Emma)",
                    "p_4(Emma)",
                    "-p_0(Emma)",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma))",
                    "p_7(Emma) -> p_17(Emma)",
                    "-p_17(Emma) -> -p_7(Emma)",
                    "((p_14(Emma) -> p_3(Emma)) & (p_3(Emma) -> p_14(Emma))) | p_2(Emma)",
                    "p_12(Emma) -> p_6(Emma)",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x))",
                    "all x (-p_1(x) | -p_16(x) | p_5(x))",
                    "-p_14(Emma) | ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma)))",
                    "-p_4(Emma) | ((p_11(Emma) | p_13(Emma)) & (-p_11(Emma) | -p_13(Emma)))",
                    "all x (p_10(x) -> (p_0(x) | p_12(x)))",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x)))",
                    "-p_15(Emma)",
                    "p_13(Emma)",
                    "p_14(Emma)",
                    "p_8(Emma) -> p_9(Emma)",
                    "-p_9(Emma) -> -p_8(Emma)",
                    "p_9(Emma)",
                    "p_17(Emma)",
                    "(p_8(Emma) & -p_15(Emma)) | (-p_8(Emma) & p_15(Emma))",
                    "-p_14(Emma) | ((p_13(Emma) & -p_15(Emma)) | (-p_13(Emma) & p_15(Emma)))",
                    "p_17(Emma) | -p_7(Emma)",
                    "p_9(Emma) | -p_8(Emma)",
                    "-p_12(Emma)"
                ],
                "formulas(goals)": [
                    "p_9(Emma) & (p_17(Emma) | p_16(Emma))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Emma) \u2295 p_15(Emma)",
                    "\u00ac(p_14(Emma) \u2295 p_3(Emma)) \u2228 p_2(Emma)",
                    "p_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))",
                    "\u00acp_4(Emma) \u2228 (p_11(Emma) \u2295 p_13(Emma))"
                ],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_8(Emma)\np_7(Emma)\np_3(Emma)\n\u00acp_2(Emma)\n\u00acp_6(Emma)\np_1(Emma)\n\u00acp_5(Emma)\np_4(Emma)\n\u00acp_0(Emma)\n(p_8(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_8(Emma) \u2228 \u00acp_15(Emma))\np_7(Emma) \u2192 p_17(Emma)\n\u00acp_17(Emma) \u2192 \u00acp_7(Emma)\n(p_14(Emma) \u2295 p_3(Emma)) \u2192 p_2(Emma)\np_12(Emma) \u2192 p_6(Emma)\n\u2200x ((p_1(x) \u2227 p_16(x)) \u2192 p_5(x))\n\u2200x (\u00acp_1(x) \u2228 \u00acp_16(x) \u2228 p_5(x))\np_14(Emma) \u2192 (p_13(Emma) \u2295 p_15(Emma))\np_4(Emma) \u2192 (p_11(Emma) \u2295 p_13(Emma))\n\u2200x (p_10(x) \u2192 (p_0(x) \u2228 p_12(x)))\n\u2200x (\u00acp_5(x) \u2192 (\u00acp_1(x) \u2228 \u00acp_16(x)))\n\u00acp_15(Emma)\np_13(Emma)\np_14(Emma)\np_8(Emma) \u2192 p_9(Emma)\n\u00acp_9(Emma) \u2192 \u00acp_8(Emma)\np_9(Emma)\np_17(Emma)\n(p_8(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_8(Emma) \u2227 p_15(Emma))\np_14(Emma) \u2192 ((p_13(Emma) \u2227 \u00acp_15(Emma)) \u2228 (\u00acp_13(Emma) \u2227 p_15(Emma)))\np_17(Emma) \u2228 \u00acp_7(Emma)\np_9(Emma) \u2228 \u00acp_8(Emma)\n\u00acp_12(Emma)\np_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))\np_4(Emma) \u2192 ((p_11(Emma) \u2228 p_13(Emma)) \u2227 (\u00acp_11(Emma) \u2228 \u00acp_13(Emma)))\n\u2200x (\u00acp_10(x) \u2228 p_0(x) \u2228 p_12(x))\n\u00acp_12(Emma) \u2228 p_6(Emma)\n\u2200x (\u00ac(p_1(x) \u2227 p_16(x)) \u2228 p_5(x))",
            "Initial Goal": "p_9(Emma) \u2227 (p_17(Emma) \u2228 p_16(Emma))",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_8(Emma)",
                    "p_7(Emma)",
                    "p_3(Emma)",
                    "-p_2(Emma)",
                    "-p_6(Emma)",
                    "p_1(Emma)",
                    "-p_5(Emma)",
                    "p_4(Emma)",
                    "-p_0(Emma)",
                    "(p_8(Emma) | p_15(Emma)) & (-p_8(Emma) | -p_15(Emma))",
                    "p_7(Emma) -> p_17(Emma)",
                    "-p_17(Emma) -> -p_7(Emma)",
                    "(-(p_14(Emma) <-> p_3(Emma))) -> p_2(Emma)",
                    "p_12(Emma) -> p_6(Emma)",
                    "all x ((p_1(x) & p_16(x)) -> p_5(x))",
                    "all x (-p_1(x) | -p_16(x) | p_5(x))",
                    "p_14(Emma) -> (-(p_13(Emma) <-> p_15(Emma)))",
                    "p_4(Emma) -> (-(p_11(Emma) <-> p_13(Emma)))",
                    "all x (p_10(x) -> (p_0(x) | p_12(x)))",
                    "all x (-p_5(x) -> (-p_1(x) | -p_16(x)))",
                    "-p_15(Emma)",
                    "p_13(Emma)",
                    "p_14(Emma)",
                    "p_8(Emma) -> p_9(Emma)",
                    "-p_9(Emma) -> -p_8(Emma)",
                    "p_9(Emma)",
                    "p_17(Emma)",
                    "(p_8(Emma) & -p_15(Emma)) | (-p_8(Emma) & p_15(Emma))",
                    "p_14(Emma) -> ((p_13(Emma) & -p_15(Emma)) | (-p_13(Emma) & p_15(Emma)))",
                    "p_17(Emma) | -p_7(Emma)",
                    "p_9(Emma) | -p_8(Emma)",
                    "-p_12(Emma)",
                    "p_14(Emma) -> ((p_13(Emma) | p_15(Emma)) & (-p_13(Emma) | -p_15(Emma)))",
                    "p_4(Emma) -> ((p_11(Emma) | p_13(Emma)) & (-p_11(Emma) | -p_13(Emma)))",
                    "all x (-p_10(x) | p_0(x) | p_12(x))",
                    "-p_12(Emma) | p_6(Emma)",
                    "all x (-(p_1(x) & p_16(x)) | p_5(x))"
                ],
                "formulas(goals)": [
                    "p_9(Emma) & (p_17(Emma) | p_16(Emma))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_14(Emma) \u2192 ((p_13(Emma) \u2228 p_15(Emma)) \u2227 (\u00acp_13(Emma) \u2228 \u00acp_15(Emma)))",
                    "p_4(Emma) \u2192 ((p_11(Emma) \u2228 p_13(Emma)) \u2227 (\u00acp_11(Emma) \u2228 \u00acp_13(Emma)))",
                    "\u2200x (\u00acp_10(x) \u2228 p_0(x) \u2228 p_12(x))",
                    "\u00acp_12(Emma) \u2228 p_6(Emma)",
                    "\u2200x (\u00ac(p_1(x) \u2227 p_16(x)) \u2228 p_5(x))"
                ]
            }
        }
    ]
}