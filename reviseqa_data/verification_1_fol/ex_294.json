{
    "background_story": "Frances was a brilliant and eccentric scientist, known for approaching problems complexly. Her mind worked in intricate patterns, weaving together seemingly unrelated concepts to form innovative solutions. Frances' research in quantum physics was revolutionary, yet her thinking was so complexly layered that even her peers often struggled to follow her reasoning. Despite this, her groundbreaking theories and experiments earned her international recognition. Outside the lab, Frances' personal life was equally complex, with a rich tapestry of relationships and hobbies that she navigated with the same intensity and passion she applied to her science. Her complexity was both her greatest strength and most enduring challenge, making her a fascinating enigma to those around her.",
    "predicates": [
        {
            "id": 0,
            "name": "teach_classes"
        },
        {
            "id": 1,
            "name": "find_solutions"
        },
        {
            "id": 2,
            "name": "are_influential"
        },
        {
            "id": 3,
            "name": "work_in_industry"
        },
        {
            "id": 4,
            "name": "think_complexly"
        },
        {
            "id": 5,
            "name": "achieve_recognition"
        },
        {
            "id": 6,
            "name": "face_challenges"
        },
        {
            "id": 7,
            "name": "gain_fame"
        },
        {
            "id": 8,
            "name": "get_awards"
        },
        {
            "id": 9,
            "name": "publish_papers"
        },
        {
            "id": 10,
            "name": "is_researcher"
        },
        {
            "id": 11,
            "name": "pursue_passion"
        },
        {
            "id": 12,
            "name": "drive_innovation"
        },
        {
            "id": 13,
            "name": "take_risks"
        },
        {
            "id": 14,
            "name": "make_breakthroughs"
        },
        {
            "id": 15,
            "name": "earn_respect"
        },
        {
            "id": 16,
            "name": "do_research"
        },
        {
            "id": 17,
            "name": "make_discoveries"
        },
        {
            "id": 18,
            "name": "conduct_experiments"
        },
        {
            "id": 19,
            "name": "develop_theories"
        },
        {
            "id": 20,
            "name": "analyze_data"
        }
    ],
    "subject_name": "Frances",
    "subject_category": "human",
    "keyword": "complexly",
    "all_facts": [
        {
            "id": 0,
            "subject": "Frances",
            "text": "Frances does not teach classes.",
            "fol": "\u00acp_0(Frances)",
            "str_fol": "\u00acteach_classes(Frances)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Frances",
            "text": "Frances does not find solutions.",
            "fol": "\u00acp_1(Frances)",
            "str_fol": "\u00acfind_solutions(Frances)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Frances",
            "text": "Frances is not influential.",
            "fol": "\u00acp_2(Frances)",
            "str_fol": "\u00acare_influential(Frances)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Frances",
            "text": "Frances does not work in industry.",
            "fol": "\u00acp_3(Frances)",
            "str_fol": "\u00acwork_in_industry(Frances)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Frances",
            "text": "Frances is a researcher.",
            "fol": "p_10(Frances)",
            "str_fol": "is_researcher(Frances)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Frances",
            "text": "Frances publishes papers.",
            "fol": "p_9(Frances)",
            "str_fol": "publish_papers(Frances)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Frances",
            "text": "Frances does not get awards.",
            "fol": "\u00acp_8(Frances)",
            "str_fol": "\u00acget_awards(Frances)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Frances",
            "text": "Frances does not gain fame.",
            "fol": "\u00acp_7(Frances)",
            "str_fol": "\u00acgain_fame(Frances)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Frances",
            "text": "Frances faces challenges.",
            "fol": "p_6(Frances)",
            "str_fol": "face_challenges(Frances)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Frances",
            "text": "Frances achieves recognition.",
            "fol": "p_5(Frances)",
            "str_fol": "achieve_recognition(Frances)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Frances",
            "text": "Frances thinks complexly.",
            "fol": "p_4(Frances)",
            "str_fol": "think_complexly(Frances)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Frances",
            "text": "Frances does not work in industry.",
            "fol": "\u00acp_3(Frances)",
            "str_fol": "\u00acwork_in_industry(Frances)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Frances",
            "text": "Frances does not teach classes.",
            "fol": "\u00acp_0(Frances)",
            "str_fol": "\u00acteach_classes(Frances)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Frances",
            "text": "Frances is not influential.",
            "fol": "\u00acp_2(Frances)",
            "str_fol": "\u00acare_influential(Frances)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Frances",
            "text": "Frances does not find solutions.",
            "fol": "\u00acp_1(Frances)",
            "str_fol": "\u00acfind_solutions(Frances)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Frances is either a researcher or works in industry, but not both.",
            "fol": "p_10(Frances) \u2295 p_3(Frances)",
            "str_fol": "is_researcher(Frances) \u2295 work_in_industry(Frances)"
        },
        {
            "id": 5,
            "text": "If Frances is a researcher, then she either teaches classes or publishes papers, but not both.",
            "fol": "p_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))",
            "str_fol": "is_researcher(Frances) \u2192 (teach_classes(Frances) \u2295 publish_papers(Frances))"
        },
        {
            "id": 4,
            "text": "For Frances, either she publishes papers or receives awards, but not both at the same time.",
            "fol": "p_9(Frances) \u2295 p_8(Frances)",
            "str_fol": "publish_papers(Frances) \u2295 get_awards(Frances)"
        },
        {
            "id": 3,
            "text": "If Frances either gains fame or gets awards (but not both), then she is influential.",
            "fol": "(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)",
            "str_fol": "(gain_fame(Frances) \u2295 get_awards(Frances)) \u2192 are_influential(Frances)"
        },
        {
            "id": 2,
            "text": "Frances either finds solutions or faces challenges, but not both.",
            "fol": "p_1(Frances) \u2295 p_6(Frances)",
            "str_fol": "find_solutions(Frances) \u2295 face_challenges(Frances)"
        },
        {
            "id": 1,
            "text": "Frances either achieves recognition or gains fame.",
            "fol": "p_5(Frances) \u2228 p_7(Frances)",
            "str_fol": "achieve_recognition(Frances) \u2228 gain_fame(Frances)"
        },
        {
            "id": 0,
            "text": "If Frances thinks complexly, then she can either achieve recognition or face challenges, but not both.",
            "fol": "p_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))",
            "str_fol": "think_complexly(Frances) \u2192 (achieve_recognition(Frances) \u2295 face_challenges(Frances))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Frances",
            "text": "Frances does not work in industry.",
            "fol": "\u00acp_3(Frances)",
            "str_fol": "\u00acwork_in_industry(Frances)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Frances",
            "text": "Frances does not teach classes.",
            "fol": "\u00acp_0(Frances)",
            "str_fol": "\u00acteach_classes(Frances)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Frances",
            "text": "Frances is not influential.",
            "fol": "\u00acp_2(Frances)",
            "str_fol": "\u00acare_influential(Frances)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Frances",
            "text": "Frances does not find solutions.",
            "fol": "\u00acp_1(Frances)",
            "str_fol": "\u00acfind_solutions(Frances)",
            "negation": true
        },
        {
            "id": 6,
            "text": "Frances is either a researcher or works in industry, but not both.",
            "fol": "p_10(Frances) \u2295 p_3(Frances)",
            "str_fol": "is_researcher(Frances) \u2295 work_in_industry(Frances)"
        },
        {
            "id": 5,
            "text": "If Frances is a researcher, then she either teaches classes or publishes papers, but not both.",
            "fol": "p_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))",
            "str_fol": "is_researcher(Frances) \u2192 (teach_classes(Frances) \u2295 publish_papers(Frances))"
        },
        {
            "id": 4,
            "text": "For Frances, either she publishes papers or receives awards, but not both at the same time.",
            "fol": "p_9(Frances) \u2295 p_8(Frances)",
            "str_fol": "publish_papers(Frances) \u2295 get_awards(Frances)"
        },
        {
            "id": 3,
            "text": "If Frances either gains fame or gets awards (but not both), then she is influential.",
            "fol": "(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)",
            "str_fol": "(gain_fame(Frances) \u2295 get_awards(Frances)) \u2192 are_influential(Frances)"
        },
        {
            "id": 2,
            "text": "Frances either finds solutions or faces challenges, but not both.",
            "fol": "p_1(Frances) \u2295 p_6(Frances)",
            "str_fol": "find_solutions(Frances) \u2295 face_challenges(Frances)"
        },
        {
            "id": 1,
            "text": "Frances either achieves recognition or gains fame.",
            "fol": "p_5(Frances) \u2228 p_7(Frances)",
            "str_fol": "achieve_recognition(Frances) \u2228 gain_fame(Frances)"
        },
        {
            "id": 0,
            "text": "If Frances thinks complexly, then she can either achieve recognition or face challenges, but not both.",
            "fol": "p_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))",
            "str_fol": "think_complexly(Frances) \u2192 (achieve_recognition(Frances) \u2295 face_challenges(Frances))"
        }
    ],
    "context_fol": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\n\u00acp_1(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\np_5(Frances) \u2228 p_7(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))",
    "conclusion": {
        "id": 10,
        "subject": "Frances",
        "text": "Frances thinks complexly.",
        "fol": "p_4(Frances)",
        "str_fol": "think_complexly(Frances)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_4(Frances)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Frances",
                    "text": "Frances does not work in industry.",
                    "fol": "\u00acp_3(Frances)",
                    "str_fol": "\u00acwork_in_industry(Frances)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Frances is either a researcher or works in industry, but not both.",
                    "fol": "p_10(Frances) \u2295 p_3(Frances)",
                    "str_fol": "is_researcher(Frances) \u2295 work_in_industry(Frances)"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Frances",
                "text": "Frances is a researcher.",
                "fol": "p_10(Frances)",
                "str_fol": "is_researcher(Frances)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Frances",
                    "text": "Frances is a researcher.",
                    "fol": "p_10(Frances)",
                    "str_fol": "is_researcher(Frances)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Frances",
                    "text": "Frances does not teach classes.",
                    "fol": "\u00acp_0(Frances)",
                    "str_fol": "\u00acteach_classes(Frances)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Frances is a researcher, then she either teaches classes or publishes papers, but not both.",
                    "fol": "p_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))",
                    "str_fol": "is_researcher(Frances) \u2192 (teach_classes(Frances) \u2295 publish_papers(Frances))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Frances",
                "text": "Frances publishes papers.",
                "fol": "p_9(Frances)",
                "str_fol": "publish_papers(Frances)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Frances",
                    "text": "Frances publishes papers.",
                    "fol": "p_9(Frances)",
                    "str_fol": "publish_papers(Frances)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "For Frances, either she publishes papers or receives awards, but not both at the same time.",
                    "fol": "p_9(Frances) \u2295 p_8(Frances)",
                    "str_fol": "publish_papers(Frances) \u2295 get_awards(Frances)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Frances",
                "text": "Frances does not get awards.",
                "fol": "\u00acp_8(Frances)",
                "str_fol": "\u00acget_awards(Frances)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Frances",
                    "text": "Frances does not get awards.",
                    "fol": "\u00acp_8(Frances)",
                    "str_fol": "\u00acget_awards(Frances)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Frances",
                    "text": "Frances is not influential.",
                    "fol": "\u00acp_2(Frances)",
                    "str_fol": "\u00acare_influential(Frances)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Frances either gains fame or gets awards (but not both), then she is influential.",
                    "fol": "(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)",
                    "str_fol": "(gain_fame(Frances) \u2295 get_awards(Frances)) \u2192 are_influential(Frances)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Frances",
                "text": "Frances does not gain fame.",
                "fol": "\u00acp_7(Frances)",
                "str_fol": "\u00acgain_fame(Frances)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Frances",
                    "text": "Frances does not find solutions.",
                    "fol": "\u00acp_1(Frances)",
                    "str_fol": "\u00acfind_solutions(Frances)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Frances either finds solutions or faces challenges, but not both.",
                    "fol": "p_1(Frances) \u2295 p_6(Frances)",
                    "str_fol": "find_solutions(Frances) \u2295 face_challenges(Frances)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Frances",
                "text": "Frances faces challenges.",
                "fol": "p_6(Frances)",
                "str_fol": "face_challenges(Frances)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Frances",
                    "text": "Frances does not gain fame.",
                    "fol": "\u00acp_7(Frances)",
                    "str_fol": "\u00acgain_fame(Frances)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Frances either achieves recognition or gains fame.",
                    "fol": "p_5(Frances) \u2228 p_7(Frances)",
                    "str_fol": "achieve_recognition(Frances) \u2228 gain_fame(Frances)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Frances",
                "text": "Frances achieves recognition.",
                "fol": "p_5(Frances)",
                "str_fol": "achieve_recognition(Frances)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Frances",
                    "text": "Frances achieves recognition.",
                    "fol": "p_5(Frances)",
                    "str_fol": "achieve_recognition(Frances)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Frances",
                    "text": "Frances faces challenges.",
                    "fol": "p_6(Frances)",
                    "str_fol": "face_challenges(Frances)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Frances thinks complexly, then she can either achieve recognition or face challenges, but not both.",
                    "fol": "p_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))",
                    "str_fol": "think_complexly(Frances) \u2192 (achieve_recognition(Frances) \u2295 face_challenges(Frances))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Frances",
                "text": "Frances thinks complexly.",
                "fol": "p_4(Frances)",
                "str_fol": "think_complexly(Frances)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_10(Frances) <-> p_3(Frances)).  [assumption].\n2 p_10(Frances) -> -(p_0(Frances) <-> p_9(Frances)).  [assumption].\n3 -(p_9(Frances) <-> p_8(Frances)).  [assumption].\n4 -(p_7(Frances) <-> p_8(Frances)) -> p_2(Frances).  [assumption].\n5 -(p_1(Frances) <-> p_6(Frances)).  [assumption].\n6 p_4(Frances) -> -(p_5(Frances) <-> p_6(Frances)).  [assumption].\n7 -p_4(Frances).  [goal].\n8 p_10(Frances) | p_3(Frances).  [clausify(1)].\n9 -p_3(Frances).  [assumption].\n11 -p_10(Frances) | p_0(Frances) | p_9(Frances).  [clausify(2)].\n12 -p_0(Frances).  [assumption].\n14 -p_7(Frances) | p_8(Frances) | p_2(Frances).  [clausify(4)].\n15 -p_2(Frances).  [assumption].\n17 p_1(Frances) | p_6(Frances).  [clausify(5)].\n18 -p_1(Frances).  [assumption].\n20 -p_9(Frances) | -p_8(Frances).  [clausify(3)].\n22 -p_10(Frances) | p_9(Frances).  [resolve(11,b,12,a)].\n23 -p_4(Frances) | -p_5(Frances) | -p_6(Frances).  [clausify(6)].\n24 p_5(Frances) | p_7(Frances).  [assumption].\n26 -p_4(Frances) | -p_6(Frances) | p_7(Frances).  [resolve(23,b,24,a)].\n27 p_4(Frances).  [deny(7)].\n28 -p_10(Frances) | -p_8(Frances).  [resolve(22,b,20,a)].\n29 p_10(Frances).  [resolve(8,b,9,a)].\n31 -p_7(Frances) | p_8(Frances).  [resolve(14,c,15,a)].\n32 -p_6(Frances) | p_7(Frances).  [resolve(26,a,27,a)].\n33 -p_6(Frances) | p_8(Frances).  [resolve(32,b,31,a)].\n34 p_6(Frances).  [resolve(17,a,18,a)].\n35 p_8(Frances).  [resolve(33,a,34,a)].\n36 -p_8(Frances).  [resolve(28,a,29,a)].\n37 $F.  [resolve(35,a,36,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\np_5(Frances) \u2228 p_7(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_1(Frances) \u2192 p_4(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Frances)",
                    "-p_0(Frances)",
                    "-p_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> (-(p_0(Frances) <-> p_9(Frances)))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "p_5(Frances) | p_7(Frances)",
                    "p_4(Frances) -> (-(p_5(Frances) <-> p_6(Frances)))",
                    "p_1(Frances)",
                    "p_1(Frances) -> p_4(Frances)"
                ],
                "formulas(goals)": [
                    "p_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_1(Frances)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "p_1(Frances)"
                ],
                "added_rules": [
                    "p_1(Frances) \u2192 p_4(Frances)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\np_5(Frances) \u2228 p_7(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_1(Frances) \u2192 p_4(Frances)\np_4(Frances)\np_10(Frances)\np_9(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Frances)",
                    "-p_0(Frances)",
                    "-p_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> -(p_0(Frances) <-> p_9(Frances))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "p_5(Frances) | p_7(Frances)",
                    "p_4(Frances) -> -(p_5(Frances) <-> p_6(Frances))",
                    "p_1(Frances)",
                    "p_1(Frances) -> p_4(Frances)",
                    "p_4(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)"
                ],
                "formulas(goals)": [
                    "p_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\n\u00acp_7(Frances) \u2192 p_5(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_1(Frances) \u2192 p_4(Frances)\np_4(Frances)\np_10(Frances)\np_9(Frances)\n\u00acp_6(Frances)\np_5(Frances)\n\u00acp_8(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_3(Frances)",
                    "\u00acp_0(Frances)",
                    "\u00acp_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> (-(p_0(Frances) <-> p_9(Frances)))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "(-p_7(Frances)) -> p_5(Frances)",
                    "p_4(Frances) -> (-(p_5(Frances) <-> p_6(Frances)))",
                    "p_1(Frances)",
                    "p_1(Frances) -> p_4(Frances)",
                    "p_4(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)",
                    "\u00acp_6(Frances)",
                    "p_5(Frances)",
                    "\u00acp_8(Frances)"
                ],
                "formulas(goals)": [
                    "p_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Frances) \u2228 p_7(Frances)"
                ],
                "added_facts": [
                    "\u00acp_6(Frances)",
                    "p_5(Frances)",
                    "\u00acp_8(Frances)"
                ],
                "added_rules": [
                    "\u00acp_7(Frances) \u2192 p_5(Frances)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\n\u00acp_7(Frances) \u2192 p_5(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_10(Frances)\np_9(Frances)\n\u00acp_6(Frances)\np_5(Frances)\n\u00acp_8(Frances)\np_1(Frances) \u2192 \u00acp_4(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_3(Frances)",
                    "\u00acp_0(Frances)",
                    "\u00acp_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> (-(p_0(Frances) <-> p_9(Frances)))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "\u00acp_7(Frances) -> p_5(Frances)",
                    "p_4(Frances) -> (-(p_5(Frances) <-> p_6(Frances)))",
                    "p_1(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)",
                    "\u00acp_6(Frances)",
                    "p_5(Frances)",
                    "\u00acp_8(Frances)",
                    "p_1(Frances) -> \u00acp_4(Frances)"
                ],
                "formulas(goals)": [
                    "\u00acp_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_4(Frances)"
                ],
                "removed_rules": [
                    "p_1(Frances) \u2192 p_4(Frances)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_1(Frances) \u2192 \u00acp_4(Frances)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\n\u00acp_7(Frances) \u2192 p_5(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_10(Frances)\np_9(Frances)\n\u00acp_6(Frances)\np_5(Frances)\n\u00acp_8(Frances)\np_1(Frances) \u2192 \u00acp_4(Frances)\np_4(Frances) \u2192 p_3(Frances)\np_4(Frances) \u2192 p_2(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Frances)",
                    "-p_0(Frances)",
                    "-p_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> -(p_0(Frances) <-> p_9(Frances))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "-p_7(Frances) -> p_5(Frances)",
                    "p_4(Frances) -> -(p_5(Frances) <-> p_6(Frances))",
                    "p_1(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)",
                    "-p_6(Frances)",
                    "p_5(Frances)",
                    "-p_8(Frances)",
                    "p_1(Frances) -> -p_4(Frances)",
                    "p_4(Frances) -> p_3(Frances)",
                    "p_4(Frances) -> p_2(Frances)"
                ],
                "formulas(goals)": [
                    "-p_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_4(Frances) \u2192 p_3(Frances)",
                    "p_4(Frances) \u2192 p_2(Frances)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\n\u00acp_7(Frances) \u2192 p_5(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_10(Frances)\np_9(Frances)\n\u00acp_6(Frances)\np_5(Frances)\n\u00acp_8(Frances)\np_5(Frances) \u2192 p_4(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Frances)",
                    "-p_0(Frances)",
                    "-p_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> (-(p_0(Frances) <-> p_9(Frances)))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "-p_7(Frances) -> p_5(Frances)",
                    "p_4(Frances) -> (-(p_5(Frances) <-> p_6(Frances)))",
                    "p_1(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)",
                    "-p_6(Frances)",
                    "p_5(Frances)",
                    "-p_8(Frances)",
                    "p_5(Frances) -> p_4(Frances)"
                ],
                "formulas(goals)": [
                    "p_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_1(Frances) \u2192 \u00acp_4(Frances)",
                    "p_4(Frances) \u2192 p_3(Frances)",
                    "p_4(Frances) \u2192 p_2(Frances)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Frances) \u2192 p_4(Frances)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_3(Frances)\n\u00acp_0(Frances)\n\u00acp_2(Frances)\np_10(Frances) \u2295 p_3(Frances)\np_10(Frances) \u2192 (p_0(Frances) \u2295 p_9(Frances))\np_9(Frances) \u2295 p_8(Frances)\n(p_7(Frances) \u2295 p_8(Frances)) \u2192 p_2(Frances)\np_1(Frances) \u2295 p_6(Frances)\np_4(Frances) \u2192 (p_5(Frances) \u2295 p_6(Frances))\np_1(Frances)\np_10(Frances)\np_9(Frances)\n\u00acp_6(Frances)\n\u00acp_8(Frances)\np_5(Frances) \u2192 p_4(Frances)\np_9(Frances) \u2192 \u00acp_4(Frances)",
            "Initial Goal": "p_4(Frances)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_3(Frances)",
                    "-p_0(Frances)",
                    "-p_2(Frances)",
                    "-(p_10(Frances) <-> p_3(Frances))",
                    "p_10(Frances) -> (-(p_0(Frances) <-> p_9(Frances)))",
                    "-(p_9(Frances) <-> p_8(Frances))",
                    "(-(p_7(Frances) <-> p_8(Frances))) -> p_2(Frances)",
                    "-(p_1(Frances) <-> p_6(Frances))",
                    "p_4(Frances) -> (-(p_5(Frances) <-> p_6(Frances)))",
                    "p_1(Frances)",
                    "p_10(Frances)",
                    "p_9(Frances)",
                    "-p_6(Frances)",
                    "-p_8(Frances)",
                    "p_5(Frances) -> p_4(Frances)",
                    "p_9(Frances) -> -p_4(Frances)"
                ],
                "formulas(goals)": [
                    "-p_4(Frances)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_5(Frances)"
                ],
                "removed_rules": [
                    "\u00acp_7(Frances) \u2192 p_5(Frances)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Frances) \u2192 \u00acp_4(Frances)"
                ]
            }
        }
    ]
}