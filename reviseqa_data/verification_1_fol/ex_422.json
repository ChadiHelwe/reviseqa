{
    "background_story": "Thea was a diligent and meticulous student in the early 19th century. She took great pride in her handwriting and composition skills, which were highly valued in her time. Thea's teacher, Mrs. Jenkins, presented her with a beautiful copybook to practice her penmanship. Thea spent hours each day filling the pages with flawless script, carefully reproducing passages from her favorite literature and the Bible. Her dedication paid off as she became known for her exquisite handwriting, often being asked to write letters for her family and neighbors. Thea's copybook became a treasured keepsake, a testament to her hard work and a reminder of the joy she found in the simple, precise act of writing.",
    "predicates": [
        {
            "id": 0,
            "name": "practices_daily"
        },
        {
            "id": 1,
            "name": "keeps_promises"
        },
        {
            "id": 2,
            "name": "plans_ahead"
        },
        {
            "id": 3,
            "name": "is_productive"
        },
        {
            "id": 4,
            "name": "uses_calendar"
        },
        {
            "id": 5,
            "name": "has_good_handwriting"
        },
        {
            "id": 6,
            "name": "has_poor_handwriting"
        },
        {
            "id": 7,
            "name": "writes_legibly"
        },
        {
            "id": 8,
            "name": "is_reliable"
        },
        {
            "id": 9,
            "name": "meets_deadlines"
        },
        {
            "id": 10,
            "name": "is_punctual"
        },
        {
            "id": 11,
            "name": "is_organized"
        },
        {
            "id": 12,
            "name": "makes_lists"
        },
        {
            "id": 13,
            "name": "draws_art"
        },
        {
            "id": 14,
            "name": "values_neatness"
        },
        {
            "id": 15,
            "name": "enjoys_composition"
        },
        {
            "id": 16,
            "name": "keeps_records"
        },
        {
            "id": 17,
            "name": "tracks_progress"
        },
        {
            "id": 18,
            "name": "sets_goals"
        },
        {
            "id": 19,
            "name": "manages_time"
        },
        {
            "id": 20,
            "name": "prioritizes_tasks"
        }
    ],
    "subject_name": "Thea",
    "subject_category": "human",
    "keyword": "copybook",
    "all_facts": [
        {
            "id": 0,
            "subject": "Thea",
            "text": "Thea practices daily.",
            "fol": "p_0(Thea)",
            "str_fol": "practices_daily(Thea)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Thea",
            "text": "Thea does not keep promises.",
            "fol": "\u00acp_1(Thea)",
            "str_fol": "\u00ackeeps_promises(Thea)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Thea",
            "text": "Thea plans ahead.",
            "fol": "p_2(Thea)",
            "str_fol": "plans_ahead(Thea)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Thea",
            "text": "Thea is not productive.",
            "fol": "\u00acp_3(Thea)",
            "str_fol": "\u00acis_productive(Thea)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Thea",
            "text": "Thea uses a calendar.",
            "fol": "p_4(Thea)",
            "str_fol": "uses_calendar(Thea)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Thea",
            "text": "Thea is organized.",
            "fol": "p_11(Thea)",
            "str_fol": "is_organized(Thea)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Thea",
            "text": "Thea is punctual.",
            "fol": "p_10(Thea)",
            "str_fol": "is_punctual(Thea)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Thea",
            "text": "Thea does not meet deadlines.",
            "fol": "\u00acp_9(Thea)",
            "str_fol": "\u00acmeets_deadlines(Thea)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Thea",
            "text": "Thea is not reliable.",
            "fol": "\u00acp_8(Thea)",
            "str_fol": "\u00acis_reliable(Thea)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Thea",
            "text": "Thea does not write legibly.",
            "fol": "\u00acp_7(Thea)",
            "str_fol": "\u00acwrites_legibly(Thea)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Thea",
            "text": "Thea has good handwriting.",
            "fol": "p_5(Thea)",
            "str_fol": "has_good_handwriting(Thea)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Thea",
            "text": "Thea has poor handwriting.",
            "fol": "p_6(Thea)",
            "str_fol": "has_poor_handwriting(Thea)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Thea",
            "text": "Thea uses a calendar.",
            "fol": "p_4(Thea)",
            "str_fol": "uses_calendar(Thea)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Thea",
            "text": "Thea plans ahead.",
            "fol": "p_2(Thea)",
            "str_fol": "plans_ahead(Thea)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Thea",
            "text": "Thea is not productive.",
            "fol": "\u00acp_3(Thea)",
            "str_fol": "\u00acis_productive(Thea)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Thea",
            "text": "Thea does not keep promises.",
            "fol": "\u00acp_1(Thea)",
            "str_fol": "\u00ackeeps_promises(Thea)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Thea",
            "text": "Thea practices daily.",
            "fol": "p_0(Thea)",
            "str_fol": "practices_daily(Thea)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Anyone who uses a calendar or makes lists is organized.",
            "fol": "\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((uses_calendar(x) \u2228 makes_lists(x)) \u2192 is_organized(x))"
        },
        {
            "id": 5,
            "text": "If Thea either plans ahead or is punctual (but not both), then she is productive.",
            "fol": "(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)",
            "str_fol": "(plans_ahead(Thea) \u2295 is_punctual(Thea)) \u2192 is_productive(Thea)"
        },
        {
            "id": 4,
            "text": "If Thea is punctual, then she is either organized or meets deadlines (but not both).",
            "fol": "p_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))",
            "str_fol": "is_punctual(Thea) \u2192 (is_organized(Thea) \u2295 meets_deadlines(Thea))"
        },
        {
            "id": 3,
            "text": "If Thea is either reliable or meets deadlines (but not both), then she keeps promises.",
            "fol": "(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)",
            "str_fol": "(is_reliable(Thea) \u2295 meets_deadlines(Thea)) \u2192 keeps_promises(Thea)"
        },
        {
            "id": 2,
            "text": "If Thea writes legibly, then she is reliable.",
            "fol": "p_7(Thea) \u2192 p_8(Thea)",
            "str_fol": "writes_legibly(Thea) \u2192 is_reliable(Thea)"
        },
        {
            "id": 1,
            "text": "For all people, if they either practice daily or have good handwriting, then they write legibly.",
            "fol": "\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((practices_daily(x) \u2295 has_good_handwriting(x)) \u2192 writes_legibly(x))"
        },
        {
            "id": 0,
            "text": "For every human, they either have good handwriting or poor handwriting, but not both.",
            "fol": "\u2200x (p_5(x) \u2295 p_6(x))",
            "str_fol": "\u2200x (has_good_handwriting(x) \u2295 has_poor_handwriting(x))"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Thea",
            "text": "Thea uses a calendar.",
            "fol": "p_4(Thea)",
            "str_fol": "uses_calendar(Thea)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Thea",
            "text": "Thea plans ahead.",
            "fol": "p_2(Thea)",
            "str_fol": "plans_ahead(Thea)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Thea",
            "text": "Thea is not productive.",
            "fol": "\u00acp_3(Thea)",
            "str_fol": "\u00acis_productive(Thea)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Thea",
            "text": "Thea does not keep promises.",
            "fol": "\u00acp_1(Thea)",
            "str_fol": "\u00ackeeps_promises(Thea)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Thea",
            "text": "Thea practices daily.",
            "fol": "p_0(Thea)",
            "str_fol": "practices_daily(Thea)",
            "negation": false
        },
        {
            "id": 6,
            "text": "Anyone who uses a calendar or makes lists is organized.",
            "fol": "\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((uses_calendar(x) \u2228 makes_lists(x)) \u2192 is_organized(x))"
        },
        {
            "id": 5,
            "text": "If Thea either plans ahead or is punctual (but not both), then she is productive.",
            "fol": "(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)",
            "str_fol": "(plans_ahead(Thea) \u2295 is_punctual(Thea)) \u2192 is_productive(Thea)"
        },
        {
            "id": 4,
            "text": "If Thea is punctual, then she is either organized or meets deadlines (but not both).",
            "fol": "p_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))",
            "str_fol": "is_punctual(Thea) \u2192 (is_organized(Thea) \u2295 meets_deadlines(Thea))"
        },
        {
            "id": 3,
            "text": "If Thea is either reliable or meets deadlines (but not both), then she keeps promises.",
            "fol": "(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)",
            "str_fol": "(is_reliable(Thea) \u2295 meets_deadlines(Thea)) \u2192 keeps_promises(Thea)"
        },
        {
            "id": 2,
            "text": "If Thea writes legibly, then she is reliable.",
            "fol": "p_7(Thea) \u2192 p_8(Thea)",
            "str_fol": "writes_legibly(Thea) \u2192 is_reliable(Thea)"
        },
        {
            "id": 1,
            "text": "For all people, if they either practice daily or have good handwriting, then they write legibly.",
            "fol": "\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((practices_daily(x) \u2295 has_good_handwriting(x)) \u2192 writes_legibly(x))"
        },
        {
            "id": 0,
            "text": "For every human, they either have good handwriting or poor handwriting, but not both.",
            "fol": "\u2200x (p_5(x) \u2295 p_6(x))",
            "str_fol": "\u2200x (has_good_handwriting(x) \u2295 has_poor_handwriting(x))"
        }
    ],
    "context_fol": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))\n\u2200x (p_5(x) \u2295 p_6(x))",
    "conclusion": {
        "id": 11,
        "subject": "Thea",
        "text": "Thea has poor handwriting.",
        "fol": "p_6(Thea)",
        "str_fol": "has_poor_handwriting(Thea)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_6(Thea)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Thea",
                    "text": "Thea uses a calendar.",
                    "fol": "p_4(Thea)",
                    "str_fol": "uses_calendar(Thea)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who uses a calendar or makes lists is organized.",
                    "fol": "\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((uses_calendar(x) \u2228 makes_lists(x)) \u2192 is_organized(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Thea",
                "text": "Thea is organized.",
                "fol": "p_11(Thea)",
                "str_fol": "is_organized(Thea)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Thea",
                    "text": "Thea plans ahead.",
                    "fol": "p_2(Thea)",
                    "str_fol": "plans_ahead(Thea)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Thea",
                    "text": "Thea is not productive.",
                    "fol": "\u00acp_3(Thea)",
                    "str_fol": "\u00acis_productive(Thea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Thea either plans ahead or is punctual (but not both), then she is productive.",
                    "fol": "(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)",
                    "str_fol": "(plans_ahead(Thea) \u2295 is_punctual(Thea)) \u2192 is_productive(Thea)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Thea",
                "text": "Thea is punctual.",
                "fol": "p_10(Thea)",
                "str_fol": "is_punctual(Thea)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Thea",
                    "text": "Thea is punctual.",
                    "fol": "p_10(Thea)",
                    "str_fol": "is_punctual(Thea)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Thea",
                    "text": "Thea is organized.",
                    "fol": "p_11(Thea)",
                    "str_fol": "is_organized(Thea)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Thea is punctual, then she is either organized or meets deadlines (but not both).",
                    "fol": "p_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))",
                    "str_fol": "is_punctual(Thea) \u2192 (is_organized(Thea) \u2295 meets_deadlines(Thea))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Thea",
                "text": "Thea does not meet deadlines.",
                "fol": "\u00acp_9(Thea)",
                "str_fol": "\u00acmeets_deadlines(Thea)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Thea",
                    "text": "Thea does not meet deadlines.",
                    "fol": "\u00acp_9(Thea)",
                    "str_fol": "\u00acmeets_deadlines(Thea)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Thea",
                    "text": "Thea does not keep promises.",
                    "fol": "\u00acp_1(Thea)",
                    "str_fol": "\u00ackeeps_promises(Thea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Thea is either reliable or meets deadlines (but not both), then she keeps promises.",
                    "fol": "(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)",
                    "str_fol": "(is_reliable(Thea) \u2295 meets_deadlines(Thea)) \u2192 keeps_promises(Thea)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Thea",
                "text": "Thea is not reliable.",
                "fol": "\u00acp_8(Thea)",
                "str_fol": "\u00acis_reliable(Thea)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Thea",
                    "text": "Thea is not reliable.",
                    "fol": "\u00acp_8(Thea)",
                    "str_fol": "\u00acis_reliable(Thea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Thea writes legibly, then she is reliable.",
                    "fol": "p_7(Thea) \u2192 p_8(Thea)",
                    "str_fol": "writes_legibly(Thea) \u2192 is_reliable(Thea)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Thea",
                "text": "Thea does not write legibly.",
                "fol": "\u00acp_7(Thea)",
                "str_fol": "\u00acwrites_legibly(Thea)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Thea",
                    "text": "Thea practices daily.",
                    "fol": "p_0(Thea)",
                    "str_fol": "practices_daily(Thea)",
                    "negation": false
                },
                {
                    "id": 9,
                    "subject": "Thea",
                    "text": "Thea does not write legibly.",
                    "fol": "\u00acp_7(Thea)",
                    "str_fol": "\u00acwrites_legibly(Thea)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "For all people, if they either practice daily or have good handwriting, then they write legibly.",
                    "fol": "\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((practices_daily(x) \u2295 has_good_handwriting(x)) \u2192 writes_legibly(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Thea",
                "text": "Thea has good handwriting.",
                "fol": "p_5(Thea)",
                "str_fol": "has_good_handwriting(Thea)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Thea",
                    "text": "Thea has good handwriting.",
                    "fol": "p_5(Thea)",
                    "str_fol": "has_good_handwriting(Thea)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For every human, they either have good handwriting or poor handwriting, but not both.",
                    "fol": "\u2200x (p_5(x) \u2295 p_6(x))",
                    "str_fol": "\u2200x (has_good_handwriting(x) \u2295 has_poor_handwriting(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Thea",
                "text": "Thea has poor handwriting.",
                "fol": "p_6(Thea)",
                "str_fol": "has_poor_handwriting(Thea)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_4(x) | p_12(x) -> p_11(x))).  [assumption].\n2 -(p_2(Thea) <-> p_10(Thea)) -> p_3(Thea).  [assumption].\n3 p_10(Thea) -> -(p_11(Thea) <-> p_9(Thea)).  [assumption].\n4 -(p_8(Thea) <-> p_9(Thea)) -> p_1(Thea).  [assumption].\n5 p_7(Thea) -> p_8(Thea).  [assumption].\n6 (all x (-(p_0(x) <-> p_5(x)) -> p_7(x))).  [assumption].\n7 (all x -(p_5(x) <-> p_6(x))).  [assumption].\n8 -p_6(Thea).  [goal].\n9 -p_4(x) | p_11(x).  [clausify(1)].\n10 p_4(Thea).  [assumption].\n11 -p_2(Thea) | p_10(Thea) | p_3(Thea).  [clausify(2)].\n12 p_2(Thea).  [assumption].\n14 p_10(Thea) | p_3(Thea).  [resolve(11,a,12,a)].\n15 -p_3(Thea).  [assumption].\n16 -p_8(Thea) | p_9(Thea) | p_1(Thea).  [clausify(4)].\n17 -p_1(Thea).  [assumption].\n19 -p_0(x) | p_5(x) | p_7(x).  [clausify(6)].\n20 p_0(Thea).  [assumption].\n22 p_10(Thea).  [resolve(14,b,15,a)].\n24 -p_10(Thea) | -p_11(Thea) | -p_9(Thea).  [clausify(3)].\n25 p_5(Thea) | p_7(Thea).  [resolve(19,a,20,a)].\n26 -p_7(Thea) | p_8(Thea).  [clausify(5)].\n27 -p_5(x) | -p_6(x).  [clausify(7)].\n29 p_5(Thea) | p_8(Thea).  [resolve(25,b,26,a)].\n30 p_8(Thea) | -p_6(Thea).  [resolve(29,a,27,a)].\n31 p_6(Thea).  [deny(8)].\n32 -p_11(Thea) | -p_9(Thea).  [resolve(22,a,24,a)].\n33 p_11(Thea).  [resolve(9,a,10,a)].\n36 -p_8(Thea) | p_9(Thea).  [resolve(16,c,17,a)].\n37 p_8(Thea).  [resolve(30,b,31,a)].\n38 p_9(Thea).  [resolve(37,a,36,a)].\n39 -p_9(Thea).  [resolve(32,a,33,a)].\n40 $F.  [resolve(38,a,39,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))\np_0(Thea) \u2192 p_6(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea)",
                    "p_2(Thea)",
                    "-p_3(Thea)",
                    "-p_1(Thea)",
                    "p_0(Thea)",
                    "all x ((p_4(x) | p_12(x)) -> p_11(x))",
                    "(-(p_2(Thea) <-> p_10(Thea))) -> p_3(Thea)",
                    "p_10(Thea) -> (-(p_11(Thea) <-> p_9(Thea)))",
                    "(-(p_8(Thea) <-> p_9(Thea))) -> p_1(Thea)",
                    "p_7(Thea) -> p_8(Thea)",
                    "all x ((-(p_0(x) <-> p_5(x))) -> p_7(x))",
                    "p_0(Thea) -> p_6(Thea)"
                ],
                "formulas(goals)": [
                    "p_6(Thea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2295 p_6(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_0(Thea) \u2192 p_6(Thea)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))\np_0(Thea) \u2192 p_6(Thea)\np_10(Thea)\np_11(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea).",
                    "p_2(Thea).",
                    "-p_3(Thea).",
                    "-p_1(Thea).",
                    "p_0(Thea).",
                    "all x ((p_4(x) | p_12(x)) -> p_11(x)).",
                    "(-(p_2(Thea) <-> p_10(Thea))) -> p_3(Thea).",
                    "p_10(Thea) -> (-(p_11(Thea) <-> p_9(Thea))).",
                    "(-(p_8(Thea) <-> p_9(Thea))) -> p_1(Thea).",
                    "p_7(Thea) -> p_8(Thea).",
                    "all x ((-(p_0(x) <-> p_5(x))) -> p_7(x)).",
                    "p_0(Thea) -> p_6(Thea).",
                    "p_10(Thea).",
                    "p_11(Thea)."
                ],
                "formulas(goals)": [
                    "p_6(Thea)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Thea)",
                    "p_11(Thea)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))\np_10(Thea)\np_11(Thea)\np_0(Thea) \u2192 \u00acp_6(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea)",
                    "p_2(Thea)",
                    "-p_3(Thea)",
                    "-p_1(Thea)",
                    "p_0(Thea)",
                    "all x ((p_4(x) | p_12(x)) -> p_11(x))",
                    "(-(p_2(Thea) <-> p_10(Thea))) -> p_3(Thea)",
                    "p_10(Thea) -> (-(p_11(Thea) <-> p_9(Thea)))",
                    "(-(p_8(Thea) <-> p_9(Thea))) -> p_1(Thea)",
                    "p_7(Thea) -> p_8(Thea)",
                    "all x ((-(p_0(x) <-> p_5(x))) -> p_7(x))",
                    "p_10(Thea)",
                    "p_11(Thea)",
                    "p_0(Thea) -> -p_6(Thea)"
                ],
                "formulas(goals)": [
                    "-p_6(Thea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))\np_10(Thea)\np_11(Thea)\np_0(Thea) \u2192 p_6(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea)",
                    "p_2(Thea)",
                    "-p_3(Thea)",
                    "-p_1(Thea)",
                    "p_0(Thea)",
                    "all x ((p_4(x) | p_12(x)) -> p_11(x))",
                    "(-(p_2(Thea) <-> p_10(Thea))) -> p_3(Thea)",
                    "p_10(Thea) -> (-(p_11(Thea) <-> p_9(Thea)))",
                    "(-(p_8(Thea) <-> p_9(Thea))) -> p_1(Thea)",
                    "p_7(Thea) -> p_8(Thea)",
                    "all x ((-(p_0(x) <-> p_5(x))) -> p_7(x))",
                    "p_10(Thea)",
                    "p_11(Thea)",
                    "p_0(Thea) -> p_6(Thea)"
                ],
                "formulas(goals)": [
                    "p_6(Thea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Thea) \u2192 \u00acp_6(Thea)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_0(Thea) \u2192 p_6(Thea)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))\np_10(Thea)\np_11(Thea)\np_6(Thea) \u2192 p_3(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea)",
                    "p_2(Thea)",
                    "-p_3(Thea)",
                    "-p_1(Thea)",
                    "p_0(Thea)",
                    "(all x (-(p_4(x) | p_12(x)) | p_11(x)))",
                    "(-(-(p_2(Thea) <-> p_10(Thea))) | p_3(Thea))",
                    "(-p_10(Thea) | (-(p_11(Thea) <-> p_9(Thea))))",
                    "(-(-(p_8(Thea) <-> p_9(Thea))) | p_1(Thea))",
                    "(-p_7(Thea) | p_8(Thea))",
                    "(all x (-(-(p_0(x) <-> p_5(x))) | p_7(x)))",
                    "p_10(Thea)",
                    "p_11(Thea)",
                    "(-p_6(Thea) | p_3(Thea))"
                ],
                "formulas(goals)": [
                    "-p_6(Thea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Thea) \u2192 p_6(Thea)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Thea) \u2192 p_3(Thea)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n((p_2(Thea) \u2228 p_10(Thea)) \u2227 \u00ac(p_2(Thea) \u2227 p_10(Thea))) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x (((p_0(x) \u2228 p_5(x)) \u2227 \u00ac(p_0(x) \u2227 p_5(x))) \u2192 p_7(x))\np_10(Thea)\np_11(Thea)\np_6(Thea) \u2192 p_3(Thea)\np_4(Thea) \u2192 p_11(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea)",
                    "p_2(Thea)",
                    "-p_3(Thea)",
                    "-p_1(Thea)",
                    "p_0(Thea)",
                    "all x ((p_4(x) | p_12(x)) -> p_11(x))",
                    "((p_2(Thea) | p_10(Thea)) & -(p_2(Thea) & p_10(Thea))) -> p_3(Thea)",
                    "p_10(Thea) -> -(p_11(Thea) <-> p_9(Thea))",
                    "(-(p_8(Thea) <-> p_9(Thea))) -> p_1(Thea)",
                    "p_7(Thea) -> p_8(Thea)",
                    "all x (((p_0(x) | p_5(x)) & -(p_0(x) & p_5(x))) -> p_7(x))",
                    "p_10(Thea)",
                    "p_11(Thea)",
                    "p_6(Thea) -> p_3(Thea)",
                    "p_4(Thea) -> p_11(Thea)"
                ],
                "formulas(goals)": [
                    "-p_6(Thea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_2(Thea) \u2295 p_10(Thea)) \u2192 p_3(Thea)",
                    "\u2200x ((p_0(x) \u2295 p_5(x)) \u2192 p_7(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "((p_2(Thea) \u2228 p_10(Thea)) \u2227 \u00ac(p_2(Thea) \u2227 p_10(Thea))) \u2192 p_3(Thea)",
                    "\u2200x (((p_0(x) \u2228 p_5(x)) \u2227 \u00ac(p_0(x) \u2227 p_5(x))) \u2192 p_7(x))",
                    "p_4(Thea) \u2192 p_11(Thea)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Thea)\np_2(Thea)\n\u00acp_3(Thea)\n\u00acp_1(Thea)\np_0(Thea)\n\u2200x ((p_4(x) \u2228 p_12(x)) \u2192 p_11(x))\n((p_2(Thea) \u2228 p_10(Thea)) \u2227 \u00ac(p_2(Thea) \u2227 p_10(Thea))) \u2192 p_3(Thea)\np_10(Thea) \u2192 (p_11(Thea) \u2295 p_9(Thea))\n(p_8(Thea) \u2295 p_9(Thea)) \u2192 p_1(Thea)\np_7(Thea) \u2192 p_8(Thea)\n\u2200x (((p_0(x) \u2228 p_5(x)) \u2227 \u00ac(p_0(x) \u2227 p_5(x))) \u2192 p_7(x))\np_10(Thea)\np_11(Thea)\np_4(Thea) \u2192 p_11(Thea)\n\u00acp_3(Thea) \u2192 p_6(Thea)",
            "Initial Goal": "p_6(Thea)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Thea)",
                    "p_2(Thea)",
                    "-p_3(Thea)",
                    "-p_1(Thea)",
                    "p_0(Thea)",
                    "all x ((p_4(x) | p_12(x)) -> p_11(x))",
                    "((p_2(Thea) | p_10(Thea)) & -(p_2(Thea) & p_10(Thea))) -> p_3(Thea)",
                    "p_10(Thea) -> (-(p_11(Thea) <-> p_9(Thea)))",
                    "(-(p_8(Thea) <-> p_9(Thea))) -> p_1(Thea)",
                    "p_7(Thea) -> p_8(Thea)",
                    "all x (((p_0(x) | p_5(x)) & -(p_0(x) & p_5(x))) -> p_7(x))",
                    "p_10(Thea)",
                    "p_11(Thea)",
                    "p_4(Thea) -> p_11(Thea)",
                    "-p_3(Thea) -> p_6(Thea)"
                ],
                "formulas(goals)": [
                    "p_6(Thea)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_6(Thea) \u2192 p_3(Thea)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_3(Thea) \u2192 p_6(Thea)"
                ]
            }
        }
    ]
}