{
    "background_story": "Chandler, a self-made millionaire, had always dreamed of building his perfect retreat. After years of hard work, he finally found the perfect spot to construct his grand mansion. Perched atop a hill overlooking the city, the mansion was a marvel of modern architecture, with sprawling gardens, a private movie theater, and an indoor pool. Chandler spared no expense in designing the estate, filling it with rare artwork and state-of-the-art technology. Despite its opulence, the mansion felt like home, thanks to Chandler's thoughtful touches, such as the cozy library and the outdoor kitchen where he loved to cook for friends and family. The mansion became a symbol of Chandler's success, a place where he could relax, entertain, and enjoy the fruits of his labor.",
    "predicates": [
        {
            "id": 0,
            "name": "achieve_success"
        },
        {
            "id": 1,
            "name": "dream_big"
        },
        {
            "id": 2,
            "name": "live_frugally"
        },
        {
            "id": 3,
            "name": "create_budget"
        },
        {
            "id": 4,
            "name": "manage_time"
        },
        {
            "id": 5,
            "name": "set_deadlines"
        },
        {
            "id": 6,
            "name": "sets_priorities"
        },
        {
            "id": 7,
            "name": "set_goals"
        },
        {
            "id": 8,
            "name": "work_hard"
        },
        {
            "id": 9,
            "name": "invest_wisely"
        },
        {
            "id": 10,
            "name": "stay_focused"
        },
        {
            "id": 11,
            "name": "prioritize_tasks"
        },
        {
            "id": 12,
            "name": "meet_objectives"
        },
        {
            "id": 13,
            "name": "make_plans"
        },
        {
            "id": 14,
            "name": "build_legacy"
        },
        {
            "id": 15,
            "name": "inspire_others"
        },
        {
            "id": 16,
            "name": "think_critically"
        },
        {
            "id": 17,
            "name": "build_wealth"
        },
        {
            "id": 18,
            "name": "visualize_outcome"
        },
        {
            "id": 19,
            "name": "take_action"
        },
        {
            "id": 20,
            "name": "have_ambition"
        },
        {
            "id": 21,
            "name": "be_determined"
        },
        {
            "id": 22,
            "name": "make_lists"
        },
        {
            "id": 23,
            "name": "set_schedules"
        },
        {
            "id": 24,
            "name": "take_risks"
        },
        {
            "id": 25,
            "name": "sets_schedule"
        },
        {
            "id": 26,
            "name": "organize_tasks"
        }
    ],
    "subject_name": "Chandler",
    "subject_category": "human",
    "keyword": "mansion",
    "all_facts": [
        {
            "id": 0,
            "subject": "Chandler",
            "text": "Chandler does not achieve success.",
            "fol": "\u00acp_0(Chandler)",
            "str_fol": "\u00acachieve_success(Chandler)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Chandler",
            "text": "Chandler dreams big.",
            "fol": "p_1(Chandler)",
            "str_fol": "dream_big(Chandler)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Chandler",
            "text": "Chandler does not live frugally.",
            "fol": "\u00acp_2(Chandler)",
            "str_fol": "\u00aclive_frugally(Chandler)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Chandler",
            "text": "Chandler creates a budget.",
            "fol": "p_3(Chandler)",
            "str_fol": "create_budget(Chandler)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Chandler",
            "text": "Chandler does not manage his time.",
            "fol": "\u00acp_4(Chandler)",
            "str_fol": "\u00acmanage_time(Chandler)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Chandler",
            "text": "Chandler does not set deadlines.",
            "fol": "\u00acp_5(Chandler)",
            "str_fol": "\u00acset_deadlines(Chandler)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Chandler",
            "text": "Chandler sets priorities.",
            "fol": "p_6(Chandler)",
            "str_fol": "sets_priorities(Chandler)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Chandler",
            "text": "Chandler makes plans.",
            "fol": "p_13(Chandler)",
            "str_fol": "make_plans(Chandler)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Chandler",
            "text": "Chandler does not meet his objectives.",
            "fol": "\u00acp_12(Chandler)",
            "str_fol": "\u00acmeet_objectives(Chandler)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Chandler",
            "text": "Chandler does not prioritize tasks.",
            "fol": "\u00acp_11(Chandler)",
            "str_fol": "\u00acprioritize_tasks(Chandler)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Chandler",
            "text": "Chandler sets goals.",
            "fol": "p_7(Chandler)",
            "str_fol": "set_goals(Chandler)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Chandler",
            "text": "Chandler invests wisely.",
            "fol": "p_9(Chandler)",
            "str_fol": "invest_wisely(Chandler)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Chandler",
            "text": "Chandler does not work hard.",
            "fol": "\u00acp_8(Chandler)",
            "str_fol": "\u00acwork_hard(Chandler)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Chandler",
            "text": "If Chandler works hard, then he achieves success.",
            "fol": "work_hard(Chandler) \u2192 p_0(Chandler)",
            "str_fol": "work_hard(Chandler) \u2192 achieve_success(Chandler)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Chandler",
            "text": "Chandler sets priorities.",
            "fol": "p_6(Chandler)",
            "str_fol": "sets_priorities(Chandler)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Chandler",
            "text": "Chandler creates a budget.",
            "fol": "p_3(Chandler)",
            "str_fol": "create_budget(Chandler)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Chandler",
            "text": "Chandler does not set deadlines.",
            "fol": "\u00acp_5(Chandler)",
            "str_fol": "\u00acset_deadlines(Chandler)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Chandler",
            "text": "Chandler does not manage his time.",
            "fol": "\u00acp_4(Chandler)",
            "str_fol": "\u00acmanage_time(Chandler)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Chandler",
            "text": "Chandler dreams big.",
            "fol": "p_1(Chandler)",
            "str_fol": "dream_big(Chandler)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Chandler",
            "text": "Chandler does not live frugally.",
            "fol": "\u00acp_2(Chandler)",
            "str_fol": "\u00aclive_frugally(Chandler)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Chandler",
            "text": "Chandler does not achieve success.",
            "fol": "\u00acp_0(Chandler)",
            "str_fol": "\u00acachieve_success(Chandler)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "Anyone who sets priorities will make plans.",
            "fol": "\u2200x (p_6(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (sets_priorities(x) \u2192 make_plans(x))"
        },
        {
            "id": 5,
            "text": "If Chandler creates a budget, then he either makes plans or meets his objectives (but not both).",
            "fol": "p_3(Chandler) \u2192 (p_13(Chandler) \u2295 p_12(Chandler))",
            "str_fol": "create_budget(Chandler) \u2192 (make_plans(Chandler) \u2295 meet_objectives(Chandler))"
        },
        {
            "id": 4,
            "text": "If Chandler either sets deadlines or prioritizes tasks (but not both), then he meets his objectives.",
            "fol": "(p_5(Chandler) \u2295 p_11(Chandler)) \u2192 p_12(Chandler)",
            "str_fol": "(set_deadlines(Chandler) \u2295 prioritize_tasks(Chandler)) \u2192 meet_objectives(Chandler)"
        },
        {
            "id": 3,
            "text": "If Chandler either prioritizes tasks or manages time (but not both), then he stays focused.",
            "fol": "(p_11(Chandler) \u2295 p_4(Chandler)) \u2192 p_10(Chandler)",
            "str_fol": "(prioritize_tasks(Chandler) \u2295 manage_time(Chandler)) \u2192 stay_focused(Chandler)"
        },
        {
            "id": 2,
            "text": "If someone dreams big, then they stay focused and set goals.",
            "fol": "\u2200x (p_1(x) \u2192 (p_10(x) \u2227 p_7(x)))",
            "str_fol": "\u2200x (dream_big(x) \u2192 (stay_focused(x) \u2227 set_goals(x)))"
        },
        {
            "id": 1,
            "text": "Chandler either lives frugally or invests wisely, but not both.",
            "fol": "p_2(Chandler) \u2295 p_9(Chandler)",
            "str_fol": "live_frugally(Chandler) \u2295 invest_wisely(Chandler)"
        },
        {
            "id": 0,
            "text": "If Chandler sets goals, then he either works hard or invests wisely, but not both.",
            "fol": "p_7(Chandler) \u2192 (p_8(Chandler) \u2295 p_9(Chandler))",
            "str_fol": "set_goals(Chandler) \u2192 (work_hard(Chandler) \u2295 invest_wisely(Chandler))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Chandler",
            "text": "Chandler sets priorities.",
            "fol": "p_6(Chandler)",
            "str_fol": "sets_priorities(Chandler)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Chandler",
            "text": "Chandler creates a budget.",
            "fol": "p_3(Chandler)",
            "str_fol": "create_budget(Chandler)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Chandler",
            "text": "Chandler does not set deadlines.",
            "fol": "\u00acp_5(Chandler)",
            "str_fol": "\u00acset_deadlines(Chandler)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Chandler",
            "text": "Chandler does not manage his time.",
            "fol": "\u00acp_4(Chandler)",
            "str_fol": "\u00acmanage_time(Chandler)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Chandler",
            "text": "Chandler dreams big.",
            "fol": "p_1(Chandler)",
            "str_fol": "dream_big(Chandler)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Chandler",
            "text": "Chandler does not live frugally.",
            "fol": "\u00acp_2(Chandler)",
            "str_fol": "\u00aclive_frugally(Chandler)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Chandler",
            "text": "Chandler does not achieve success.",
            "fol": "\u00acp_0(Chandler)",
            "str_fol": "\u00acachieve_success(Chandler)",
            "negation": true
        },
        {
            "id": 6,
            "text": "Anyone who sets priorities will make plans.",
            "fol": "\u2200x (p_6(x) \u2192 p_13(x))",
            "str_fol": "\u2200x (sets_priorities(x) \u2192 make_plans(x))"
        },
        {
            "id": 5,
            "text": "If Chandler creates a budget, then he either makes plans or meets his objectives (but not both).",
            "fol": "p_3(Chandler) \u2192 (p_13(Chandler) \u2295 p_12(Chandler))",
            "str_fol": "create_budget(Chandler) \u2192 (make_plans(Chandler) \u2295 meet_objectives(Chandler))"
        },
        {
            "id": 4,
            "text": "If Chandler either sets deadlines or prioritizes tasks (but not both), then he meets his objectives.",
            "fol": "(p_5(Chandler) \u2295 p_11(Chandler)) \u2192 p_12(Chandler)",
            "str_fol": "(set_deadlines(Chandler) \u2295 prioritize_tasks(Chandler)) \u2192 meet_objectives(Chandler)"
        },
        {
            "id": 3,
            "text": "If Chandler either prioritizes tasks or manages time (but not both), then he stays focused.",
            "fol": "(p_11(Chandler) \u2295 p_4(Chandler)) \u2192 p_10(Chandler)",
            "str_fol": "(prioritize_tasks(Chandler) \u2295 manage_time(Chandler)) \u2192 stay_focused(Chandler)"
        },
        {
            "id": 2,
            "text": "If someone dreams big, then they stay focused and set goals.",
            "fol": "\u2200x (p_1(x) \u2192 (p_10(x) \u2227 p_7(x)))",
            "str_fol": "\u2200x (dream_big(x) \u2192 (stay_focused(x) \u2227 set_goals(x)))"
        },
        {
            "id": 1,
            "text": "Chandler either lives frugally or invests wisely, but not both.",
            "fol": "p_2(Chandler) \u2295 p_9(Chandler)",
            "str_fol": "live_frugally(Chandler) \u2295 invest_wisely(Chandler)"
        },
        {
            "id": 0,
            "text": "If Chandler sets goals, then he either works hard or invests wisely, but not both.",
            "fol": "p_7(Chandler) \u2192 (p_8(Chandler) \u2295 p_9(Chandler))",
            "str_fol": "set_goals(Chandler) \u2192 (work_hard(Chandler) \u2295 invest_wisely(Chandler))"
        }
    ],
    "context_fol": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u00acp_0(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 (p_13(Chandler) \u2295 p_12(Chandler))\n(p_5(Chandler) \u2295 p_11(Chandler)) \u2192 p_12(Chandler)\n(p_11(Chandler) \u2295 p_4(Chandler)) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 (p_10(x) \u2227 p_7(x)))\np_2(Chandler) \u2295 p_9(Chandler)\np_7(Chandler) \u2192 (p_8(Chandler) \u2295 p_9(Chandler))",
    "conclusion": {
        "id": 14,
        "text": "If Chandler works hard, then he achieves success.",
        "fol": "p_8(Chandler) \u2192 p_0(Chandler)",
        "str_fol": "work_hard(Chandler) \u2192 achieve_success(Chandler)"
    },
    "initial_answer": "True",
    "initial_goal": "p_8(Chandler) \u2192 p_0(Chandler)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Chandler",
                    "text": "Chandler sets priorities.",
                    "fol": "p_6(Chandler)",
                    "str_fol": "sets_priorities(Chandler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Anyone who sets priorities will make plans.",
                    "fol": "\u2200x (p_6(x) \u2192 p_13(x))",
                    "str_fol": "\u2200x (sets_priorities(x) \u2192 make_plans(x))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Chandler",
                "text": "Chandler makes plans.",
                "fol": "p_13(Chandler)",
                "str_fol": "make_plans(Chandler)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Chandler",
                    "text": "Chandler creates a budget.",
                    "fol": "p_3(Chandler)",
                    "str_fol": "create_budget(Chandler)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Chandler",
                    "text": "Chandler makes plans.",
                    "fol": "p_13(Chandler)",
                    "str_fol": "make_plans(Chandler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Chandler creates a budget, then he either makes plans or meets his objectives (but not both).",
                    "fol": "p_3(Chandler) \u2192 (p_13(Chandler) \u2295 p_12(Chandler))",
                    "str_fol": "create_budget(Chandler) \u2192 (make_plans(Chandler) \u2295 meet_objectives(Chandler))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Chandler",
                "text": "Chandler does not meet his objectives.",
                "fol": "\u00acp_12(Chandler)",
                "str_fol": "\u00acmeet_objectives(Chandler)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Chandler",
                    "text": "Chandler does not set deadlines.",
                    "fol": "\u00acp_5(Chandler)",
                    "str_fol": "\u00acset_deadlines(Chandler)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Chandler",
                    "text": "Chandler does not meet his objectives.",
                    "fol": "\u00acp_12(Chandler)",
                    "str_fol": "\u00acmeet_objectives(Chandler)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Chandler either sets deadlines or prioritizes tasks (but not both), then he meets his objectives.",
                    "fol": "(p_5(Chandler) \u2295 p_11(Chandler)) \u2192 p_12(Chandler)",
                    "str_fol": "(set_deadlines(Chandler) \u2295 prioritize_tasks(Chandler)) \u2192 meet_objectives(Chandler)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Chandler",
                "text": "Chandler does not prioritize tasks.",
                "fol": "\u00acp_11(Chandler)",
                "str_fol": "\u00acprioritize_tasks(Chandler)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Chandler",
                    "text": "Chandler does not prioritize tasks.",
                    "fol": "\u00acp_11(Chandler)",
                    "str_fol": "\u00acprioritize_tasks(Chandler)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Chandler",
                    "text": "Chandler does not manage his time.",
                    "fol": "\u00acp_4(Chandler)",
                    "str_fol": "\u00acmanage_time(Chandler)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Chandler either prioritizes tasks or manages time (but not both), then he stays focused.",
                    "fol": "(p_11(Chandler) \u2295 p_4(Chandler)) \u2192 p_10(Chandler)",
                    "str_fol": "(prioritize_tasks(Chandler) \u2295 manage_time(Chandler)) \u2192 stay_focused(Chandler)"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Chandler",
                    "text": "Chandler dreams big.",
                    "fol": "p_1(Chandler)",
                    "str_fol": "dream_big(Chandler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone dreams big, then they stay focused and set goals.",
                    "fol": "\u2200x (p_1(x) \u2192 (p_10(x) \u2227 p_7(x)))",
                    "str_fol": "\u2200x (dream_big(x) \u2192 (stay_focused(x) \u2227 set_goals(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Chandler",
                "text": "Chandler sets goals.",
                "fol": "p_7(Chandler)",
                "str_fol": "set_goals(Chandler)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Chandler",
                    "text": "Chandler does not live frugally.",
                    "fol": "\u00acp_2(Chandler)",
                    "str_fol": "\u00aclive_frugally(Chandler)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Chandler either lives frugally or invests wisely, but not both.",
                    "fol": "p_2(Chandler) \u2295 p_9(Chandler)",
                    "str_fol": "live_frugally(Chandler) \u2295 invest_wisely(Chandler)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Chandler",
                "text": "Chandler invests wisely.",
                "fol": "p_9(Chandler)",
                "str_fol": "invest_wisely(Chandler)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Chandler",
                    "text": "Chandler sets goals.",
                    "fol": "p_7(Chandler)",
                    "str_fol": "set_goals(Chandler)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Chandler",
                    "text": "Chandler invests wisely.",
                    "fol": "p_9(Chandler)",
                    "str_fol": "invest_wisely(Chandler)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Chandler sets goals, then he either works hard or invests wisely, but not both.",
                    "fol": "p_7(Chandler) \u2192 (p_8(Chandler) \u2295 p_9(Chandler))",
                    "str_fol": "set_goals(Chandler) \u2192 (work_hard(Chandler) \u2295 invest_wisely(Chandler))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Chandler",
                "text": "Chandler does not work hard.",
                "fol": "\u00acp_8(Chandler)",
                "str_fol": "\u00acwork_hard(Chandler)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Chandler",
                    "text": "Chandler does not work hard.",
                    "fol": "\u00acp_8(Chandler)",
                    "str_fol": "\u00acwork_hard(Chandler)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Chandler",
                    "text": "Chandler does not achieve success.",
                    "fol": "\u00acp_0(Chandler)",
                    "str_fol": "\u00acachieve_success(Chandler)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 14,
                "text": "If Chandler works hard, then he achieves success.",
                "fol": "p_8(Chandler) \u2192 p_0(Chandler)",
                "str_fol": "work_hard(Chandler) \u2192 achieve_success(Chandler)"
            }
        }
    ],
    "proof_trace": "5 (all x (p_1(x) -> p_10(x) & p_7(x))).  [assumption].\n6 -(p_2(Chandler) <-> p_9(Chandler)).  [assumption].\n7 p_7(Chandler) -> -(p_8(Chandler) <-> p_9(Chandler)).  [assumption].\n8 p_8(Chandler) -> p_0(Chandler).  [goal].\n21 p_1(Chandler).  [assumption].\n22 -p_1(x) | p_7(x).  [clausify(5)].\n23 p_2(Chandler) | p_9(Chandler).  [clausify(6)].\n24 -p_2(Chandler).  [assumption].\n26 p_7(Chandler).  [resolve(22,a,21,a)].\n28 -p_7(Chandler) | -p_8(Chandler) | -p_9(Chandler).  [clausify(7)].\n29 -p_8(Chandler) | -p_9(Chandler).  [resolve(26,a,28,a)].\n30 p_8(Chandler).  [deny(8)].\n33 -p_9(Chandler).  [resolve(29,a,30,a)].\n34 p_9(Chandler).  [resolve(23,a,24,a)].\n35 $F.  [resolve(33,a,34,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u00acp_0(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 \u00ac(p_13(Chandler) \u2227 p_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 \u00ac(p_5(Chandler) \u2227 p_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 \u00ac(p_11(Chandler) \u2227 p_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\np_2(Chandler) \u2295 p_9(Chandler)\np_7(Chandler) \u2192 ((p_8(Chandler) \u2228 p_9(Chandler)) \u2227 \u00ac(p_8(Chandler) \u2227 p_9(Chandler)))\np_10(Chandler)\np_7(Chandler)\np_8(Chandler) \u2295 p_9(Chandler)\np_9(Chandler)\n\u00acp_8(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\np_5(Chandler) \u2194 p_11(Chandler)\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler)",
                    "p_3(Chandler)",
                    "-p_5(Chandler)",
                    "-p_4(Chandler)",
                    "p_1(Chandler)",
                    "-p_2(Chandler)",
                    "-p_0(Chandler)",
                    "all x (p_6(x) -> p_13(x))",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & -(p_13(Chandler) & p_12(Chandler)))",
                    "((p_5(Chandler) | p_11(Chandler)) & -(p_5(Chandler) & p_11(Chandler))) -> p_12(Chandler)",
                    "((p_11(Chandler) | p_4(Chandler)) & -(p_11(Chandler) & p_4(Chandler))) -> p_10(Chandler)",
                    "all x (p_1(x) -> p_10(x))",
                    "all x (p_1(x) -> p_7(x))",
                    "-(p_2(Chandler) <-> p_9(Chandler))",
                    "p_7(Chandler) -> ((p_8(Chandler) | p_9(Chandler)) & -(p_8(Chandler) & p_9(Chandler)))",
                    "p_10(Chandler)",
                    "p_7(Chandler)",
                    "-(p_8(Chandler) <-> p_9(Chandler))",
                    "p_9(Chandler)",
                    "-p_8(Chandler)",
                    "p_13(Chandler)",
                    "-(p_13(Chandler) <-> p_12(Chandler))",
                    "-p_12(Chandler)",
                    "p_5(Chandler) <-> p_11(Chandler)",
                    "-p_10(Chandler) -> -(-(p_11(Chandler) <-> p_4(Chandler)))"
                ],
                "formulas(goals)": [
                    "p_8(Chandler) -> p_0(Chandler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_1(x) \u2192 (p_10(x) \u2227 p_7(x)))",
                    "p_3(Chandler) \u2192 (p_13(Chandler) \u2295 p_12(Chandler))",
                    "(p_5(Chandler) \u2295 p_11(Chandler)) \u2192 p_12(Chandler)",
                    "(p_11(Chandler) \u2295 p_4(Chandler)) \u2192 p_10(Chandler)",
                    "p_7(Chandler) \u2192 (p_8(Chandler) \u2295 p_9(Chandler))"
                ],
                "added_facts": [
                    "p_10(Chandler)",
                    "p_7(Chandler)",
                    "p_8(Chandler) \u2295 p_9(Chandler)",
                    "p_9(Chandler)",
                    "\u00acp_8(Chandler)",
                    "p_13(Chandler)",
                    "p_13(Chandler) \u2295 p_12(Chandler)",
                    "\u00acp_12(Chandler)"
                ],
                "added_rules": [
                    "\u2200x (p_1(x) \u2192 p_10(x))",
                    "\u2200x (p_1(x) \u2192 p_7(x))",
                    "p_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 \u00ac(p_13(Chandler) \u2227 p_12(Chandler)))",
                    "((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 \u00ac(p_5(Chandler) \u2227 p_11(Chandler))) \u2192 p_12(Chandler)",
                    "((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 \u00ac(p_11(Chandler) \u2227 p_4(Chandler))) \u2192 p_10(Chandler)",
                    "p_7(Chandler) \u2192 ((p_8(Chandler) \u2228 p_9(Chandler)) \u2227 \u00ac(p_8(Chandler) \u2227 p_9(Chandler)))",
                    "p_5(Chandler) \u2194 p_11(Chandler)",
                    "\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u00acp_0(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 \u00ac(p_13(Chandler) \u2227 p_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 \u00ac(p_5(Chandler) \u2227 p_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 \u00ac(p_11(Chandler) \u2227 p_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\n\u00acp_9(Chandler)\np_7(Chandler) \u2192 ((p_8(Chandler) \u2228 p_9(Chandler)) \u2227 \u00ac(p_8(Chandler) \u2227 p_9(Chandler)))\np_10(Chandler)\np_7(Chandler)\np_8(Chandler) \u2295 p_9(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\np_5(Chandler) \u2194 p_11(Chandler)\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler)",
                    "p_3(Chandler)",
                    "-p_5(Chandler)",
                    "-p_4(Chandler)",
                    "p_1(Chandler)",
                    "-p_2(Chandler)",
                    "-p_0(Chandler)",
                    "all x (p_6(x) -> p_13(x))",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & -(p_13(Chandler) & p_12(Chandler)))",
                    "((p_5(Chandler) | p_11(Chandler)) & -(p_5(Chandler) & p_11(Chandler))) -> p_12(Chandler)",
                    "((p_11(Chandler) | p_4(Chandler)) & -(p_11(Chandler) & p_4(Chandler))) -> p_10(Chandler)",
                    "all x (p_1(x) -> p_10(x))",
                    "all x (p_1(x) -> p_7(x))",
                    "-p_9(Chandler)",
                    "p_7(Chandler) -> ((p_8(Chandler) | p_9(Chandler)) & -(p_8(Chandler) & p_9(Chandler)))",
                    "p_10(Chandler)",
                    "p_7(Chandler)",
                    "p_8(Chandler) <-> -p_9(Chandler)",
                    "p_13(Chandler)",
                    "-(p_13(Chandler) <-> p_12(Chandler))",
                    "-p_12(Chandler)",
                    "p_5(Chandler) <-> p_11(Chandler)",
                    "-p_10(Chandler) -> -(p_11(Chandler) <-> -p_4(Chandler))"
                ],
                "formulas(goals)": [
                    "-(p_8(Chandler) -> p_0(Chandler))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_9(Chandler)",
                    "\u00acp_8(Chandler)"
                ],
                "removed_rules": [
                    "p_2(Chandler) \u2295 p_9(Chandler)"
                ],
                "added_facts": [
                    "\u00acp_9(Chandler)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 \u00ac(p_13(Chandler) \u2227 p_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 \u00ac(p_5(Chandler) \u2227 p_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 \u00ac(p_11(Chandler) \u2227 p_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\n\u00acp_9(Chandler)\np_10(Chandler)\np_7(Chandler)\np_8(Chandler) \u2295 p_9(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\np_5(Chandler) \u2194 p_11(Chandler)\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))\np_7(Chandler) \u2192 p_0(Chandler)",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler).",
                    "p_3(Chandler).",
                    "-p_5(Chandler).",
                    "-p_4(Chandler).",
                    "p_1(Chandler).",
                    "-p_2(Chandler).",
                    "all x (p_6(x) -> p_13(x)).",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & -(p_13(Chandler) & p_12(Chandler))).",
                    "((p_5(Chandler) | p_11(Chandler)) & -(p_5(Chandler) & p_11(Chandler))) -> p_12(Chandler).",
                    "((p_11(Chandler) | p_4(Chandler)) & -(p_11(Chandler) & p_4(Chandler))) -> p_10(Chandler).",
                    "all x (p_1(x) -> p_10(x)).",
                    "all x (p_1(x) -> p_7(x)).",
                    "-p_9(Chandler).",
                    "p_10(Chandler).",
                    "p_7(Chandler).",
                    "-(p_8(Chandler) <-> p_9(Chandler)).",
                    "p_13(Chandler).",
                    "-(p_13(Chandler) <-> p_12(Chandler)).",
                    "-p_12(Chandler).",
                    "p_5(Chandler) <-> p_11(Chandler).",
                    "-p_10(Chandler) -> (p_11(Chandler) <-> p_4(Chandler)).",
                    "p_7(Chandler) -> p_0(Chandler)."
                ],
                "formulas(goals)": [
                    "p_8(Chandler) -> p_0(Chandler)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_0(Chandler)"
                ],
                "removed_rules": [
                    "p_7(Chandler) \u2192 ((p_8(Chandler) \u2228 p_9(Chandler)) \u2227 \u00ac(p_8(Chandler) \u2227 p_9(Chandler)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_7(Chandler) \u2192 p_0(Chandler)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 \u00ac(p_13(Chandler) \u2227 p_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 \u00ac(p_5(Chandler) \u2227 p_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 \u00ac(p_11(Chandler) \u2227 p_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\n\u00acp_9(Chandler)\np_10(Chandler)\np_7(Chandler)\np_8(Chandler) \u2295 p_9(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\np_5(Chandler) \u2194 p_11(Chandler)\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))\n(p_7(Chandler) \u2227 p_8(Chandler)) \u2192 \u00acp_0(Chandler)",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler)",
                    "p_3(Chandler)",
                    "-p_5(Chandler)",
                    "-p_4(Chandler)",
                    "p_1(Chandler)",
                    "-p_2(Chandler)",
                    "all x (p_6(x) -> p_13(x))",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & (-(p_13(Chandler) & p_12(Chandler))))",
                    "((p_5(Chandler) | p_11(Chandler)) & (-(p_5(Chandler) & p_11(Chandler)))) -> p_12(Chandler)",
                    "((p_11(Chandler) | p_4(Chandler)) & (-(p_11(Chandler) & p_4(Chandler)))) -> p_10(Chandler)",
                    "all x (p_1(x) -> p_10(x))",
                    "all x (p_1(x) -> p_7(x))",
                    "-p_9(Chandler)",
                    "p_10(Chandler)",
                    "p_7(Chandler)",
                    "-(p_8(Chandler) <-> p_9(Chandler))",
                    "p_13(Chandler)",
                    "-(p_13(Chandler) <-> p_12(Chandler))",
                    "-p_12(Chandler)",
                    "p_5(Chandler) <-> p_11(Chandler)",
                    "-p_10(Chandler) -> (-(p_11(Chandler) <-> p_4(Chandler)))",
                    "(p_7(Chandler) & p_8(Chandler)) -> -p_0(Chandler)"
                ],
                "formulas(goals)": [
                    "- (p_8(Chandler) -> p_0(Chandler))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_7(Chandler) \u2192 p_0(Chandler)"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Chandler) \u2227 p_8(Chandler)) \u2192 \u00acp_0(Chandler)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 (\u00acp_13(Chandler) \u2228 \u00acp_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 (\u00acp_5(Chandler) \u2228 \u00acp_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 (\u00acp_11(Chandler) \u2228 \u00acp_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\np_10(Chandler)\np_7(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\n(p_5(Chandler) \u2194 p_11(Chandler))\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))\n(p_7(Chandler) \u2227 p_8(Chandler)) \u2192 \u00acp_0(Chandler)\n\u00acp_8(Chandler)",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler)",
                    "p_3(Chandler)",
                    "-p_5(Chandler)",
                    "-p_4(Chandler)",
                    "p_1(Chandler)",
                    "-p_2(Chandler)",
                    "all x (p_6(x) -> p_13(x))",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & (-p_13(Chandler) | -p_12(Chandler)))",
                    "((p_5(Chandler) | p_11(Chandler)) & (-p_5(Chandler) | -p_11(Chandler))) -> p_12(Chandler)",
                    "((p_11(Chandler) | p_4(Chandler)) & (-p_11(Chandler) | -p_4(Chandler))) -> p_10(Chandler)",
                    "all x (p_1(x) -> p_10(x))",
                    "all x (p_1(x) -> p_7(x))",
                    "p_10(Chandler)",
                    "p_7(Chandler)",
                    "p_13(Chandler)",
                    "-(p_13(Chandler) <-> p_12(Chandler))",
                    "-p_12(Chandler)",
                    "(p_5(Chandler) <-> p_11(Chandler))",
                    "-p_10(Chandler) -> -(p_11(Chandler) <-> p_4(Chandler))",
                    "(p_7(Chandler) & p_8(Chandler)) -> -p_0(Chandler)",
                    "-p_8(Chandler)"
                ],
                "formulas(goals)": [
                    "p_8(Chandler) -> p_0(Chandler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_9(Chandler)",
                    "p_8(Chandler) \u2295 p_9(Chandler)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_8(Chandler)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 (\u00acp_13(Chandler) \u2228 \u00acp_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 (\u00acp_5(Chandler) \u2228 \u00acp_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 (\u00acp_11(Chandler) \u2228 \u00acp_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\np_10(Chandler)\np_7(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\np_5(Chandler) \u2194 p_11(Chandler)\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))\np_7(Chandler) \u2192 (p_8(Chandler) \u2192 \u00acp_0(Chandler))\n\u00acp_8(Chandler)\n\u00acp_11(Chandler)",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler)",
                    "p_3(Chandler)",
                    "-p_5(Chandler)",
                    "-p_4(Chandler)",
                    "p_1(Chandler)",
                    "-p_2(Chandler)",
                    "all x (p_6(x) -> p_13(x))",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & (-p_13(Chandler) | -p_12(Chandler)))",
                    "((p_5(Chandler) | p_11(Chandler)) & (-p_5(Chandler) | -p_11(Chandler))) -> p_12(Chandler)",
                    "((p_11(Chandler) | p_4(Chandler)) & (-p_11(Chandler) | -p_4(Chandler))) -> p_10(Chandler)",
                    "all x (p_1(x) -> p_10(x))",
                    "all x (p_1(x) -> p_7(x))",
                    "p_10(Chandler)",
                    "p_7(Chandler)",
                    "p_13(Chandler)",
                    "-(p_13(Chandler) <-> p_12(Chandler))",
                    "-p_12(Chandler)",
                    "p_5(Chandler) <-> p_11(Chandler)",
                    "-p_10(Chandler) -> -(-(p_11(Chandler) <-> p_4(Chandler)))",
                    "p_7(Chandler) -> (p_8(Chandler) -> -p_0(Chandler))",
                    "-p_8(Chandler)",
                    "-p_11(Chandler)"
                ],
                "formulas(goals)": [
                    "p_8(Chandler) -> p_0(Chandler)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_7(Chandler) \u2227 p_8(Chandler)) \u2192 \u00acp_0(Chandler)"
                ],
                "added_facts": [
                    "\u00acp_11(Chandler)"
                ],
                "added_rules": [
                    "p_7(Chandler) \u2192 (p_8(Chandler) \u2192 \u00acp_0(Chandler))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Chandler)\np_3(Chandler)\n\u00acp_5(Chandler)\n\u00acp_4(Chandler)\np_1(Chandler)\n\u00acp_2(Chandler)\n\u2200x (p_6(x) \u2192 p_13(x))\np_3(Chandler) \u2192 ((p_13(Chandler) \u2228 p_12(Chandler)) \u2227 (\u00acp_13(Chandler) \u2228 \u00acp_12(Chandler)))\n((p_5(Chandler) \u2228 p_11(Chandler)) \u2227 (\u00acp_5(Chandler) \u2228 \u00acp_11(Chandler))) \u2192 p_12(Chandler)\n((p_11(Chandler) \u2228 p_4(Chandler)) \u2227 (\u00acp_11(Chandler) \u2228 \u00acp_4(Chandler))) \u2192 p_10(Chandler)\n\u2200x (p_1(x) \u2192 p_10(x))\n\u2200x (p_1(x) \u2192 p_7(x))\np_10(Chandler)\np_7(Chandler)\np_13(Chandler)\np_13(Chandler) \u2295 p_12(Chandler)\n\u00acp_12(Chandler)\np_5(Chandler) \u2194 p_11(Chandler)\n\u00acp_10(Chandler) \u2192 \u00ac(p_11(Chandler) \u2295 p_4(Chandler))\np_7(Chandler) \u2192 (p_8(Chandler) \u2192 \u00acp_0(Chandler))\n\u00acp_8(Chandler)\n\u00acp_11(Chandler)\np_8(Chandler) \u2192 \u00acp_0(Chandler)",
            "Initial Goal": "p_8(Chandler) \u2192 p_0(Chandler)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Chandler).",
                    "p_3(Chandler).",
                    "-p_5(Chandler).",
                    "-p_4(Chandler).",
                    "p_1(Chandler).",
                    "-p_2(Chandler).",
                    "all x (p_6(x) -> p_13(x)).",
                    "p_3(Chandler) -> ((p_13(Chandler) | p_12(Chandler)) & (-p_13(Chandler) | -p_12(Chandler))).",
                    "((p_5(Chandler) | p_11(Chandler)) & (-p_5(Chandler) | -p_11(Chandler))) -> p_12(Chandler).",
                    "((p_11(Chandler) | p_4(Chandler)) & (-p_11(Chandler) | -p_4(Chandler))) -> p_10(Chandler).",
                    "all x (p_1(x) -> p_10(x)).",
                    "all x (p_1(x) -> p_7(x)).",
                    "p_10(Chandler).",
                    "p_7(Chandler).",
                    "p_13(Chandler).",
                    "-(p_13(Chandler) <-> p_12(Chandler)).",
                    "-p_12(Chandler).",
                    "p_5(Chandler) <-> p_11(Chandler).",
                    "-p_10(Chandler) -> -(-(p_11(Chandler) <-> p_4(Chandler))).",
                    "p_7(Chandler) -> (p_8(Chandler) -> -p_0(Chandler)).",
                    "-p_8(Chandler).",
                    "-p_11(Chandler).",
                    "p_8(Chandler) -> -p_0(Chandler)."
                ],
                "formulas(goals)": [
                    "p_8(Chandler) -> p_0(Chandler)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Chandler) \u2192 \u00acp_0(Chandler)"
                ],
                "added_rules": []
            }
        }
    ]
}