{
    "background_story": "Drew was an avid athlete, spending most of his free time playing basketball and hiking. However, his active lifestyle came to a screeching halt when he started experiencing severe back pain and numbness in his legs. After a series of tests, Drew was diagnosed with radiculitis, a condition where the nerves in his spine became inflamed. The pain was debilitating, making everyday activities a challenge. With the help of physical therapy and medication, Drew slowly began to manage his symptoms. He had to relearn how to move and exercise, adapting to his new limitations. Despite the setback, Drew remained determined to regain his strength and mobility, inspiring those around him with his resilience and perseverance in the face of chronic pain.",
    "predicates": [
        {
            "id": 0,
            "name": "has_injury"
        },
        {
            "id": 1,
            "name": "takes_medicine"
        },
        {
            "id": 2,
            "name": "regains_strength"
        },
        {
            "id": 3,
            "name": "does_exercise"
        },
        {
            "id": 4,
            "name": "is_injured"
        },
        {
            "id": 5,
            "name": "needs_rest"
        },
        {
            "id": 6,
            "name": "is_unwell"
        },
        {
            "id": 7,
            "name": "gets_sick"
        },
        {
            "id": 8,
            "name": "experiences_chronic_pain"
        },
        {
            "id": 9,
            "name": "seeks_treatment"
        },
        {
            "id": 10,
            "name": "needs_medical_attention"
        },
        {
            "id": 11,
            "name": "is_ill"
        },
        {
            "id": 12,
            "name": "follows_therapy"
        },
        {
            "id": 13,
            "name": "has_fever"
        },
        {
            "id": 14,
            "name": "requires_care"
        },
        {
            "id": 15,
            "name": "feels_numbness"
        },
        {
            "id": 16,
            "name": "has_inflammation"
        },
        {
            "id": 17,
            "name": "feels_unwell"
        },
        {
            "id": 18,
            "name": "feels_weak"
        },
        {
            "id": 19,
            "name": "has_numbness"
        },
        {
            "id": 20,
            "name": "sees_specialist"
        },
        {
            "id": 21,
            "name": "uses_brace"
        },
        {
            "id": 22,
            "name": "has_allergy"
        },
        {
            "id": 23,
            "name": "gets_hurt"
        },
        {
            "id": 24,
            "name": "gets_tired"
        }
    ],
    "subject_name": "Drew",
    "subject_category": "human",
    "keyword": "radiculitis",
    "all_facts": [
        {
            "id": 0,
            "subject": "Drew",
            "text": "Drew has an injury.",
            "fol": "p_0(Drew)",
            "str_fol": "has_injury(Drew)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Drew",
            "text": "Drew does not take medicine.",
            "fol": "\u00acp_1(Drew)",
            "str_fol": "\u00actakes_medicine(Drew)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Drew",
            "text": "Drew does not regain strength.",
            "fol": "\u00acp_2(Drew)",
            "str_fol": "\u00acregains_strength(Drew)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Drew",
            "text": "Drew does not do exercise.",
            "fol": "\u00acp_3(Drew)",
            "str_fol": "\u00acdoes_exercise(Drew)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Drew",
            "text": "Drew is injured.",
            "fol": "p_4(Drew)",
            "str_fol": "is_injured(Drew)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Drew",
            "text": "Drew needs rest.",
            "fol": "p_5(Drew)",
            "str_fol": "needs_rest(Drew)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Drew",
            "text": "Drew is unwell.",
            "fol": "p_6(Drew)",
            "str_fol": "is_unwell(Drew)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Drew",
            "text": "Drew gets sick.",
            "fol": "p_7(Drew)",
            "str_fol": "gets_sick(Drew)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Drew",
            "text": "Drew does not have a fever.",
            "fol": "\u00acp_13(Drew)",
            "str_fol": "\u00achas_fever(Drew)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Drew",
            "text": "Drew does not require care.",
            "fol": "\u00acp_14(Drew)",
            "str_fol": "\u00acrequires_care(Drew)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Drew",
            "text": "Drew is not ill.",
            "fol": "\u00acp_11(Drew)",
            "str_fol": "\u00acis_ill(Drew)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Drew",
            "text": "Drew does not follow therapy.",
            "fol": "\u00acp_12(Drew)",
            "str_fol": "\u00acfollows_therapy(Drew)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Drew",
            "text": "Drew does not seek treatment.",
            "fol": "\u00acp_9(Drew)",
            "str_fol": "\u00acseeks_treatment(Drew)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Drew",
            "text": "Drew does not experience chronic pain.",
            "fol": "\u00acp_8(Drew)",
            "str_fol": "\u00acexperiences_chronic_pain(Drew)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Drew",
            "text": "If Drew experiences chronic pain, then he needs medical attention.",
            "fol": "p_8(Drew) \u2192 needs_medical_attention(Drew)",
            "str_fol": "experiences_chronic_pain(Drew) \u2192 needs_medical_attention(Drew)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Drew",
            "text": "Drew is unwell.",
            "fol": "p_6(Drew)",
            "str_fol": "is_unwell(Drew)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Drew",
            "text": "Drew gets sick.",
            "fol": "p_7(Drew)",
            "str_fol": "gets_sick(Drew)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Drew",
            "text": "Drew is injured.",
            "fol": "p_4(Drew)",
            "str_fol": "is_injured(Drew)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Drew",
            "text": "Drew needs rest.",
            "fol": "p_5(Drew)",
            "str_fol": "needs_rest(Drew)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Drew",
            "text": "Drew does not do exercise.",
            "fol": "\u00acp_3(Drew)",
            "str_fol": "\u00acdoes_exercise(Drew)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Drew",
            "text": "Drew does not regain strength.",
            "fol": "\u00acp_2(Drew)",
            "str_fol": "\u00acregains_strength(Drew)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Drew",
            "text": "Drew does not take medicine.",
            "fol": "\u00acp_1(Drew)",
            "str_fol": "\u00actakes_medicine(Drew)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Drew",
            "text": "Drew has an injury.",
            "fol": "p_0(Drew)",
            "str_fol": "has_injury(Drew)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Drew is unwell, then he either has a fever or gets sick, but not both.",
            "fol": "p_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))",
            "str_fol": "is_unwell(Drew) \u2192 (has_fever(Drew) \u2295 gets_sick(Drew))"
        },
        {
            "id": 5,
            "text": "If Drew is injured, then he either requires care or needs rest, but not both.",
            "fol": "p_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))",
            "str_fol": "is_injured(Drew) \u2192 (requires_care(Drew) \u2295 needs_rest(Drew))"
        },
        {
            "id": 4,
            "text": "If a person either has a fever or is ill, then they require care.",
            "fol": "\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((has_fever(x) \u2295 is_ill(x)) \u2192 requires_care(x))"
        },
        {
            "id": 3,
            "text": "Anyone who follows therapy or does exercise can regain strength.",
            "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((follows_therapy(x) \u2228 does_exercise(x)) \u2192 regains_strength(x))"
        },
        {
            "id": 2,
            "text": "If Drew seeks treatment, then he follows therapy and takes medicine.",
            "fol": "p_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))",
            "str_fol": "seeks_treatment(Drew) \u2192 (follows_therapy(Drew) \u2227 takes_medicine(Drew))"
        },
        {
            "id": 1,
            "text": "If Drew needs medical attention, then he either has an injury or is ill, but not both.",
            "fol": "p_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))",
            "str_fol": "needs_medical_attention(Drew) \u2192 (has_injury(Drew) \u2295 is_ill(Drew))"
        },
        {
            "id": 0,
            "text": "If Drew experiences chronic pain, then he seeks treatment.",
            "fol": "p_8(Drew) \u2192 p_9(Drew)",
            "str_fol": "experiences_chronic_pain(Drew) \u2192 seeks_treatment(Drew)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Drew",
            "text": "Drew is unwell.",
            "fol": "p_6(Drew)",
            "str_fol": "is_unwell(Drew)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Drew",
            "text": "Drew gets sick.",
            "fol": "p_7(Drew)",
            "str_fol": "gets_sick(Drew)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Drew",
            "text": "Drew is injured.",
            "fol": "p_4(Drew)",
            "str_fol": "is_injured(Drew)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Drew",
            "text": "Drew needs rest.",
            "fol": "p_5(Drew)",
            "str_fol": "needs_rest(Drew)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Drew",
            "text": "Drew does not do exercise.",
            "fol": "\u00acp_3(Drew)",
            "str_fol": "\u00acdoes_exercise(Drew)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Drew",
            "text": "Drew does not regain strength.",
            "fol": "\u00acp_2(Drew)",
            "str_fol": "\u00acregains_strength(Drew)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Drew",
            "text": "Drew does not take medicine.",
            "fol": "\u00acp_1(Drew)",
            "str_fol": "\u00actakes_medicine(Drew)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Drew",
            "text": "Drew has an injury.",
            "fol": "p_0(Drew)",
            "str_fol": "has_injury(Drew)",
            "negation": false
        },
        {
            "id": 6,
            "text": "If Drew is unwell, then he either has a fever or gets sick, but not both.",
            "fol": "p_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))",
            "str_fol": "is_unwell(Drew) \u2192 (has_fever(Drew) \u2295 gets_sick(Drew))"
        },
        {
            "id": 5,
            "text": "If Drew is injured, then he either requires care or needs rest, but not both.",
            "fol": "p_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))",
            "str_fol": "is_injured(Drew) \u2192 (requires_care(Drew) \u2295 needs_rest(Drew))"
        },
        {
            "id": 4,
            "text": "If a person either has a fever or is ill, then they require care.",
            "fol": "\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((has_fever(x) \u2295 is_ill(x)) \u2192 requires_care(x))"
        },
        {
            "id": 3,
            "text": "Anyone who follows therapy or does exercise can regain strength.",
            "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((follows_therapy(x) \u2228 does_exercise(x)) \u2192 regains_strength(x))"
        },
        {
            "id": 2,
            "text": "If Drew seeks treatment, then he follows therapy and takes medicine.",
            "fol": "p_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))",
            "str_fol": "seeks_treatment(Drew) \u2192 (follows_therapy(Drew) \u2227 takes_medicine(Drew))"
        },
        {
            "id": 1,
            "text": "If Drew needs medical attention, then he either has an injury or is ill, but not both.",
            "fol": "p_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))",
            "str_fol": "needs_medical_attention(Drew) \u2192 (has_injury(Drew) \u2295 is_ill(Drew))"
        },
        {
            "id": 0,
            "text": "If Drew experiences chronic pain, then he seeks treatment.",
            "fol": "p_8(Drew) \u2192 p_9(Drew)",
            "str_fol": "experiences_chronic_pain(Drew) \u2192 seeks_treatment(Drew)"
        }
    ],
    "context_fol": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))\np_8(Drew) \u2192 p_9(Drew)",
    "conclusion": {
        "id": 14,
        "text": "If Drew experiences chronic pain, then he needs medical attention.",
        "fol": "p_8(Drew) \u2192 p_10(Drew)",
        "str_fol": "experiences_chronic_pain(Drew) \u2192 needs_medical_attention(Drew)"
    },
    "initial_answer": "True",
    "initial_goal": "p_8(Drew) \u2192 p_10(Drew)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Drew",
                    "text": "Drew is unwell.",
                    "fol": "p_6(Drew)",
                    "str_fol": "is_unwell(Drew)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Drew",
                    "text": "Drew gets sick.",
                    "fol": "p_7(Drew)",
                    "str_fol": "gets_sick(Drew)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Drew is unwell, then he either has a fever or gets sick, but not both.",
                    "fol": "p_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))",
                    "str_fol": "is_unwell(Drew) \u2192 (has_fever(Drew) \u2295 gets_sick(Drew))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Drew",
                "text": "Drew does not have a fever.",
                "fol": "\u00acp_13(Drew)",
                "str_fol": "\u00achas_fever(Drew)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Drew",
                    "text": "Drew is injured.",
                    "fol": "p_4(Drew)",
                    "str_fol": "is_injured(Drew)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Drew",
                    "text": "Drew needs rest.",
                    "fol": "p_5(Drew)",
                    "str_fol": "needs_rest(Drew)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Drew is injured, then he either requires care or needs rest, but not both.",
                    "fol": "p_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))",
                    "str_fol": "is_injured(Drew) \u2192 (requires_care(Drew) \u2295 needs_rest(Drew))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Drew",
                "text": "Drew does not require care.",
                "fol": "\u00acp_14(Drew)",
                "str_fol": "\u00acrequires_care(Drew)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Drew",
                    "text": "Drew does not have a fever.",
                    "fol": "\u00acp_13(Drew)",
                    "str_fol": "\u00achas_fever(Drew)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Drew",
                    "text": "Drew does not require care.",
                    "fol": "\u00acp_14(Drew)",
                    "str_fol": "\u00acrequires_care(Drew)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If a person either has a fever or is ill, then they require care.",
                    "fol": "\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((has_fever(x) \u2295 is_ill(x)) \u2192 requires_care(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Drew",
                "text": "Drew is not ill.",
                "fol": "\u00acp_11(Drew)",
                "str_fol": "\u00acis_ill(Drew)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Drew",
                    "text": "Drew does not do exercise.",
                    "fol": "\u00acp_3(Drew)",
                    "str_fol": "\u00acdoes_exercise(Drew)",
                    "negation": true
                },
                {
                    "id": 2,
                    "subject": "Drew",
                    "text": "Drew does not regain strength.",
                    "fol": "\u00acp_2(Drew)",
                    "str_fol": "\u00acregains_strength(Drew)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who follows therapy or does exercise can regain strength.",
                    "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((follows_therapy(x) \u2228 does_exercise(x)) \u2192 regains_strength(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Drew",
                "text": "Drew does not follow therapy.",
                "fol": "\u00acp_12(Drew)",
                "str_fol": "\u00acfollows_therapy(Drew)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Drew",
                    "text": "Drew does not follow therapy.",
                    "fol": "\u00acp_12(Drew)",
                    "str_fol": "\u00acfollows_therapy(Drew)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Drew",
                    "text": "Drew does not take medicine.",
                    "fol": "\u00acp_1(Drew)",
                    "str_fol": "\u00actakes_medicine(Drew)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Drew seeks treatment, then he follows therapy and takes medicine.",
                    "fol": "p_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))",
                    "str_fol": "seeks_treatment(Drew) \u2192 (follows_therapy(Drew) \u2227 takes_medicine(Drew))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Drew",
                "text": "Drew does not seek treatment.",
                "fol": "\u00acp_9(Drew)",
                "str_fol": "\u00acseeks_treatment(Drew)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Drew",
                    "text": "Drew has an injury.",
                    "fol": "p_0(Drew)",
                    "str_fol": "has_injury(Drew)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Drew",
                    "text": "Drew is not ill.",
                    "fol": "\u00acp_11(Drew)",
                    "str_fol": "\u00acis_ill(Drew)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Drew needs medical attention, then he either has an injury or is ill, but not both.",
                    "fol": "p_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))",
                    "str_fol": "needs_medical_attention(Drew) \u2192 (has_injury(Drew) \u2295 is_ill(Drew))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Drew",
                    "text": "Drew does not seek treatment.",
                    "fol": "\u00acp_9(Drew)",
                    "str_fol": "\u00acseeks_treatment(Drew)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Drew experiences chronic pain, then he seeks treatment.",
                    "fol": "p_8(Drew) \u2192 p_9(Drew)",
                    "str_fol": "experiences_chronic_pain(Drew) \u2192 seeks_treatment(Drew)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Drew",
                "text": "Drew does not experience chronic pain.",
                "fol": "\u00acp_8(Drew)",
                "str_fol": "\u00acexperiences_chronic_pain(Drew)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Drew",
                    "text": "Drew does not experience chronic pain.",
                    "fol": "\u00acp_8(Drew)",
                    "str_fol": "\u00acexperiences_chronic_pain(Drew)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 14,
                "text": "If Drew experiences chronic pain, then he needs medical attention.",
                "fol": "p_8(Drew) \u2192 p_10(Drew)",
                "str_fol": "experiences_chronic_pain(Drew) \u2192 needs_medical_attention(Drew)"
            }
        }
    ],
    "proof_trace": "5 p_9(Drew) -> p_12(Drew) & p_1(Drew).  [assumption].\n7 p_8(Drew) -> p_9(Drew).  [assumption].\n8 p_8(Drew) -> p_10(Drew).  [goal].\n23 -p_9(Drew) | p_1(Drew).  [clausify(5)].\n24 -p_1(Drew).  [assumption].\n31 -p_8(Drew) | p_9(Drew).  [clausify(7)].\n33 -p_9(Drew).  [resolve(23,b,24,a)].\n35 p_8(Drew).  [deny(8)].\n36 -p_8(Drew).  [resolve(33,a,31,b)].\n41 $F.  [resolve(36,a,35,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))\np_8(Drew)\np_10(Drew) \u2192 p_1(Drew)",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew)",
                    "p_7(Drew)",
                    "p_4(Drew)",
                    "p_5(Drew)",
                    "-p_3(Drew)",
                    "-p_2(Drew)",
                    "-p_1(Drew)",
                    "p_0(Drew)",
                    "p_6(Drew) -> (-(p_13(Drew) <-> p_7(Drew)))",
                    "p_4(Drew) -> (-(p_14(Drew) <-> p_5(Drew)))",
                    "all x ((-(p_13(x) <-> p_11(x))) -> p_14(x))",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x))",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew))",
                    "p_10(Drew) -> (-(p_0(Drew) <-> p_11(Drew)))",
                    "p_8(Drew)",
                    "p_10(Drew) -> p_1(Drew)"
                ],
                "formulas(goals)": [
                    "p_8(Drew) & -p_10(Drew)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_8(Drew) \u2192 p_9(Drew)"
                ],
                "added_facts": [
                    "p_8(Drew)"
                ],
                "added_rules": [
                    "p_10(Drew) \u2192 p_1(Drew)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))\np_8(Drew)\np_10(Drew) \u2192 p_1(Drew)\n\u00acp_13(Drew)\n\u00acp_14(Drew)\n\u00acp_11(Drew)\n\u00acp_12(Drew)\n\u00acp_9(Drew)",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew).",
                    "p_7(Drew).",
                    "p_4(Drew).",
                    "p_5(Drew).",
                    "-p_3(Drew).",
                    "-p_2(Drew).",
                    "-p_1(Drew).",
                    "p_0(Drew).",
                    "p_6(Drew) -> (-(p_13(Drew) <-> p_7(Drew))).",
                    "p_4(Drew) -> (-(p_14(Drew) <-> p_5(Drew))).",
                    "all x (-(p_13(x) <-> p_11(x)) -> p_14(x)).",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x)).",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew)).",
                    "p_10(Drew) -> (-(p_0(Drew) <-> p_11(Drew))).",
                    "p_8(Drew).",
                    "p_10(Drew) -> p_1(Drew).",
                    "-p_13(Drew).",
                    "-p_14(Drew).",
                    "-p_11(Drew).",
                    "-p_12(Drew).",
                    "-p_9(Drew)."
                ],
                "formulas(goals)": [
                    "- (p_8(Drew) -> p_10(Drew))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_13(Drew)",
                    "\u00acp_14(Drew)",
                    "\u00acp_11(Drew)",
                    "\u00acp_12(Drew)",
                    "\u00acp_9(Drew)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 ((p_0(Drew) \u2228 p_11(Drew)) \u2227 \u00ac(p_0(Drew) \u2227 p_11(Drew)))\np_8(Drew)\np_10(Drew) \u2192 p_1(Drew)\n\u00acp_13(Drew)\n\u00acp_14(Drew)\n\u00acp_11(Drew)\n\u00acp_12(Drew)\n\u00acp_9(Drew)\n\u00acp_10(Drew)\np_6(Drew) \u2192 (p_7(Drew) \u2295 p_13(Drew))",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew)",
                    "p_7(Drew)",
                    "p_4(Drew)",
                    "p_5(Drew)",
                    "-p_3(Drew)",
                    "-p_2(Drew)",
                    "-p_1(Drew)",
                    "p_0(Drew)",
                    "p_6(Drew) -> (-(p_13(Drew) <-> p_7(Drew)))",
                    "p_4(Drew) -> (-(p_14(Drew) <-> p_5(Drew)))",
                    "all x ((-(p_13(x) <-> p_11(x))) -> p_14(x))",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x))",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew))",
                    "p_10(Drew) -> ((p_0(Drew) | p_11(Drew)) & (-(p_0(Drew) & p_11(Drew))))",
                    "p_8(Drew)",
                    "p_10(Drew) -> p_1(Drew)",
                    "-p_13(Drew)",
                    "-p_14(Drew)",
                    "-p_11(Drew)",
                    "-p_12(Drew)",
                    "-p_9(Drew)",
                    "-p_10(Drew)",
                    "p_6(Drew) -> (-(p_7(Drew) <-> p_13(Drew)))"
                ],
                "formulas(goals)": [
                    "-(p_8(Drew) -> p_10(Drew))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Drew) \u2192 (p_0(Drew) \u2295 p_11(Drew))"
                ],
                "added_facts": [
                    "\u00acp_10(Drew)"
                ],
                "added_rules": [
                    "p_10(Drew) \u2192 ((p_0(Drew) \u2228 p_11(Drew)) \u2227 \u00ac(p_0(Drew) \u2227 p_11(Drew)))",
                    "p_6(Drew) \u2192 (p_7(Drew) \u2295 p_13(Drew))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 ((p_0(Drew) \u2228 p_11(Drew)) \u2227 \u00ac(p_0(Drew) \u2227 p_11(Drew)))\np_8(Drew)\np_10(Drew) \u2192 p_1(Drew)\n\u00acp_13(Drew)\n\u00acp_14(Drew)\n\u00acp_11(Drew)\n\u00acp_12(Drew)\n\u00acp_9(Drew)\np_6(Drew) \u2192 (p_7(Drew) \u2295 p_13(Drew))\np_8(Drew) \u2192 p_10(Drew)",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew).",
                    "p_7(Drew).",
                    "p_4(Drew).",
                    "p_5(Drew).",
                    "-p_3(Drew).",
                    "-p_2(Drew).",
                    "-p_1(Drew).",
                    "p_0(Drew).",
                    "p_6(Drew) -> (-(p_13(Drew) <-> p_7(Drew))).",
                    "p_4(Drew) -> (-(p_14(Drew) <-> p_5(Drew))).",
                    "all x ((-(p_13(x) <-> p_11(x))) -> p_14(x)).",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x)).",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew)).",
                    "p_10(Drew) -> ((p_0(Drew) | p_11(Drew)) & (-(p_0(Drew) & p_11(Drew)))).",
                    "p_8(Drew).",
                    "p_10(Drew) -> p_1(Drew).",
                    "-p_13(Drew).",
                    "-p_14(Drew).",
                    "-p_11(Drew).",
                    "-p_12(Drew).",
                    "-p_9(Drew).",
                    "p_6(Drew) -> (-(p_7(Drew) <-> p_13(Drew))).",
                    "p_8(Drew) -> p_10(Drew)."
                ],
                "formulas(goals)": [
                    "p_8(Drew) -> p_10(Drew)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_10(Drew)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Drew) \u2192 p_10(Drew)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 ((p_0(Drew) \u2228 p_11(Drew)) \u2227 \u00ac(p_0(Drew) \u2227 p_11(Drew)))\np_8(Drew)\n\u00acp_13(Drew)\n\u00acp_14(Drew)\n\u00acp_11(Drew)\n\u00acp_12(Drew)\n\u00acp_9(Drew)\np_6(Drew) \u2192 (p_7(Drew) \u2295 p_13(Drew))\np_8(Drew) \u2192 p_10(Drew)\np_10(Drew)\n\u00acp_8(Drew) \u2228 p_10(Drew)\n\u00ac(p_8(Drew) \u2227 \u00acp_10(Drew))\np_4(Drew) \u2192 (p_5(Drew) \u2295 p_14(Drew))",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew)",
                    "p_7(Drew)",
                    "p_4(Drew)",
                    "p_5(Drew)",
                    "-p_3(Drew)",
                    "-p_2(Drew)",
                    "-p_1(Drew)",
                    "p_0(Drew)",
                    "p_6(Drew) -> (-(p_13(Drew) <-> p_7(Drew)))",
                    "p_4(Drew) -> (-(p_14(Drew) <-> p_5(Drew)))",
                    "all x ((-(p_13(x) <-> p_11(x))) -> p_14(x))",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x))",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew))",
                    "p_10(Drew) -> ((p_0(Drew) | p_11(Drew)) & -(p_0(Drew) & p_11(Drew)))",
                    "p_8(Drew)",
                    "-p_13(Drew)",
                    "-p_14(Drew)",
                    "-p_11(Drew)",
                    "-p_12(Drew)",
                    "-p_9(Drew)",
                    "p_6(Drew) -> (-(p_7(Drew) <-> p_13(Drew)))",
                    "p_8(Drew) -> p_10(Drew)",
                    "p_10(Drew)",
                    "(-p_8(Drew)) | p_10(Drew)",
                    "-(p_8(Drew) & (-p_10(Drew)))",
                    "p_4(Drew) -> (-(p_5(Drew) <-> p_14(Drew)))"
                ],
                "formulas(goals)": [
                    "p_8(Drew) -> p_10(Drew)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_10(Drew) \u2192 p_1(Drew)"
                ],
                "added_facts": [
                    "p_10(Drew)",
                    "\u00acp_8(Drew) \u2228 p_10(Drew)",
                    "\u00ac(p_8(Drew) \u2227 \u00acp_10(Drew))"
                ],
                "added_rules": [
                    "p_4(Drew) \u2192 (p_5(Drew) \u2295 p_14(Drew))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 ((p_0(Drew) \u2228 p_11(Drew)) \u2227 \u00ac(p_0(Drew) \u2227 p_11(Drew)))\np_8(Drew)\n\u00acp_13(Drew)\n\u00acp_14(Drew)\n\u00acp_11(Drew)\n\u00acp_12(Drew)\n\u00acp_9(Drew)\np_6(Drew) \u2192 (p_7(Drew) \u2295 p_13(Drew))\np_8(Drew) \u2192 p_10(Drew)\np_10(Drew)\n\u00acp_8(Drew) \u2228 p_10(Drew)\n\u00ac(p_8(Drew) \u2227 \u00acp_10(Drew))\np_4(Drew) \u2192 (p_5(Drew) \u2295 p_14(Drew))\n\u2200x (p_12(x) \u2192 p_2(x))\n\u2200x (p_3(x) \u2192 p_2(x))\n\u2200x (\u00acp_2(x) \u2192 \u00acp_12(x))\n\u2200x (\u00acp_2(x) \u2192 \u00acp_3(x))",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew)",
                    "p_7(Drew)",
                    "p_4(Drew)",
                    "p_5(Drew)",
                    "-p_3(Drew)",
                    "-p_2(Drew)",
                    "-p_1(Drew)",
                    "p_0(Drew)",
                    "p_6(Drew) -> -(p_13(Drew) <-> p_7(Drew))",
                    "p_4(Drew) -> -(p_14(Drew) <-> p_5(Drew))",
                    "all x (-(p_13(x) <-> p_11(x)) -> p_14(x))",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x))",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew))",
                    "p_10(Drew) -> ((p_0(Drew) | p_11(Drew)) & (-(p_0(Drew) & p_11(Drew))))",
                    "p_8(Drew)",
                    "-p_13(Drew)",
                    "-p_14(Drew)",
                    "-p_11(Drew)",
                    "-p_12(Drew)",
                    "-p_9(Drew)",
                    "p_6(Drew) -> -(p_7(Drew) <-> p_13(Drew))",
                    "p_8(Drew) -> p_10(Drew)",
                    "p_10(Drew)",
                    "-p_8(Drew) | p_10(Drew)",
                    "-(p_8(Drew) & -p_10(Drew))",
                    "p_4(Drew) -> -(p_5(Drew) <-> p_14(Drew))",
                    "all x (p_12(x) -> p_2(x))",
                    "all x (p_3(x) -> p_2(x))",
                    "all x (-p_2(x) -> -p_12(x))",
                    "all x (-p_2(x) -> -p_3(x))"
                ],
                "formulas(goals)": [
                    "p_8(Drew) -> p_10(Drew)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_12(x) \u2192 p_2(x))",
                    "\u2200x (p_3(x) \u2192 p_2(x))",
                    "\u2200x (\u00acp_2(x) \u2192 \u00acp_12(x))",
                    "\u2200x (\u00acp_2(x) \u2192 \u00acp_3(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Drew)\np_7(Drew)\np_4(Drew)\np_5(Drew)\n\u00acp_3(Drew)\n\u00acp_2(Drew)\n\u00acp_1(Drew)\np_0(Drew)\np_6(Drew) \u2192 (p_13(Drew) \u2295 p_7(Drew))\np_4(Drew) \u2192 (p_14(Drew) \u2295 p_5(Drew))\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_2(x))\np_9(Drew) \u2192 (p_12(Drew) \u2227 p_1(Drew))\np_10(Drew) \u2192 ((p_0(Drew) \u2228 p_11(Drew)) \u2227 \u00ac(p_0(Drew) \u2227 p_11(Drew)))\np_8(Drew)\n\u00acp_13(Drew)\n\u00acp_14(Drew)\n\u00acp_12(Drew)\n\u00acp_9(Drew)\np_6(Drew) \u2192 (p_7(Drew) \u2295 p_13(Drew))\np_4(Drew) \u2192 (p_5(Drew) \u2295 p_14(Drew))\n\u2200x (p_12(x) \u2192 p_2(x))\n\u2200x (p_3(x) \u2192 p_2(x))\n\u2200x (\u00acp_2(x) \u2192 \u00acp_12(x))\n\u2200x (\u00acp_2(x) \u2192 \u00acp_3(x))\np_11(Drew)",
            "Initial Goal": "p_8(Drew) \u2192 p_10(Drew)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Drew)",
                    "p_7(Drew)",
                    "p_4(Drew)",
                    "p_5(Drew)",
                    "-p_3(Drew)",
                    "-p_2(Drew)",
                    "-p_1(Drew)",
                    "p_0(Drew)",
                    "p_6(Drew) -> (-(p_13(Drew) <-> p_7(Drew)))",
                    "p_4(Drew) -> (-(p_14(Drew) <-> p_5(Drew)))",
                    "all x ((p_12(x) | p_3(x)) -> p_2(x))",
                    "p_9(Drew) -> (p_12(Drew) & p_1(Drew))",
                    "p_10(Drew) -> ((p_0(Drew) | p_11(Drew)) & -(p_0(Drew) & p_11(Drew)))",
                    "p_8(Drew)",
                    "-p_13(Drew)",
                    "-p_14(Drew)",
                    "-p_12(Drew)",
                    "-p_9(Drew)",
                    "p_6(Drew) -> (-(p_7(Drew) <-> p_13(Drew)))",
                    "p_4(Drew) -> (-(p_5(Drew) <-> p_14(Drew)))",
                    "all x (p_12(x) -> p_2(x))",
                    "all x (p_3(x) -> p_2(x))",
                    "all x (-p_2(x) -> -p_12(x))",
                    "all x (-p_2(x) -> -p_3(x))",
                    "p_11(Drew)"
                ],
                "formulas(goals)": [
                    "p_8(Drew) & -p_10(Drew)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_11(Drew)",
                    "p_10(Drew)"
                ],
                "removed_rules": [
                    "\u2200x ((p_13(x) \u2295 p_11(x)) \u2192 p_14(x))",
                    "p_8(Drew) \u2192 p_10(Drew)",
                    "\u00acp_8(Drew) \u2228 p_10(Drew)",
                    "\u00ac(p_8(Drew) \u2227 \u00acp_10(Drew))"
                ],
                "added_facts": [
                    "p_11(Drew)"
                ],
                "added_rules": []
            }
        }
    ]
}