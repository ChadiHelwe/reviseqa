{
    "background_story": "Elisabeth was a skilled artisan with a passion for transforming spaces. As a professional wallpaperer, she took pride in her attention to detail and ability to bring any room to life with the perfect pattern and design. With years of experience, Elisabeth had worked on numerous projects, from historic restorations to modern boutique hotels. Her clients adored her for her meticulousness and creativity. Elisabeth's own home was a testament to her craft, with each room showcasing a unique and beautifully executed wallpaper design. She spent her free time designing her own patterns and sharing her knowledge through workshops, inspiring a new generation of wallpaper enthusiasts. Elisabeth's dedication to her craft had earned her the reputation as one of the finest wallpaperers in the city.",
    "predicates": [
        {
            "id": 0,
            "name": "takes_risks"
        },
        {
            "id": 1,
            "name": "cares_details"
        },
        {
            "id": 2,
            "name": "designs_patterns"
        },
        {
            "id": 3,
            "name": "teaches_others"
        },
        {
            "id": 4,
            "name": "is_expert"
        },
        {
            "id": 5,
            "name": "skilled_wallpaperer"
        },
        {
            "id": 6,
            "name": "creative"
        },
        {
            "id": 7,
            "name": "meticulous"
        },
        {
            "id": 8,
            "name": "is_perfectionist"
        },
        {
            "id": 9,
            "name": "is_adventurous"
        },
        {
            "id": 10,
            "name": "has_attention"
        },
        {
            "id": 11,
            "name": "tries_new"
        },
        {
            "id": 12,
            "name": "expands_portfolio"
        },
        {
            "id": 13,
            "name": "shares_knowledge"
        },
        {
            "id": 14,
            "name": "transforms_spaces"
        },
        {
            "id": 15,
            "name": "brings_joy"
        },
        {
            "id": 16,
            "name": "likes_order"
        },
        {
            "id": 17,
            "name": "pursues_excellence"
        },
        {
            "id": 18,
            "name": "delivers_quality"
        },
        {
            "id": 19,
            "name": "seeks_input"
        },
        {
            "id": 20,
            "name": "tests_methods"
        },
        {
            "id": 21,
            "name": "learns_fast"
        },
        {
            "id": 22,
            "name": "is_artistic"
        },
        {
            "id": 23,
            "name": "is_precise"
        },
        {
            "id": 24,
            "name": "develops_skills"
        }
    ],
    "subject_name": "Elisabeth",
    "subject_category": "human",
    "keyword": "wallpaperer",
    "all_facts": [
        {
            "id": 0,
            "subject": "Elisabeth",
            "text": "Elisabeth takes risks.",
            "fol": "p_0(Elisabeth)",
            "str_fol": "takes_risks(Elisabeth)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Elisabeth",
            "text": "Elisabeth cares about details.",
            "fol": "p_1(Elisabeth)",
            "str_fol": "cares_details(Elisabeth)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Elisabeth",
            "text": "Elisabeth designs patterns.",
            "fol": "p_2(Elisabeth)",
            "str_fol": "designs_patterns(Elisabeth)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Elisabeth",
            "text": "Elisabeth teaches others.",
            "fol": "p_3(Elisabeth)",
            "str_fol": "teaches_others(Elisabeth)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Elisabeth",
            "text": "Elisabeth is not an expert.",
            "fol": "\u00acp_4(Elisabeth)",
            "str_fol": "\u00acis_expert(Elisabeth)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Elisabeth",
            "text": "Elisabeth shares knowledge.",
            "fol": "p_13(Elisabeth)",
            "str_fol": "shares_knowledge(Elisabeth)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Elisabeth",
            "text": "Elisabeth pays attention to detail.",
            "fol": "p_10(Elisabeth)",
            "str_fol": "has_attention(Elisabeth)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Elisabeth",
            "text": "Elisabeth does not expand her portfolio.",
            "fol": "\u00acp_12(Elisabeth)",
            "str_fol": "\u00acexpands_portfolio(Elisabeth)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Elisabeth",
            "text": "Elisabeth tries new things.",
            "fol": "p_11(Elisabeth)",
            "str_fol": "tries_new(Elisabeth)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Elisabeth",
            "text": "Elisabeth is adventurous in her design choices.",
            "fol": "p_9(Elisabeth)",
            "str_fol": "is_adventurous(Elisabeth)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Elisabeth",
            "text": "Elisabeth is not a perfectionist.",
            "fol": "\u00acp_8(Elisabeth)",
            "str_fol": "\u00acis_perfectionist(Elisabeth)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Elisabeth",
            "text": "Elisabeth is not meticulous.",
            "fol": "\u00acp_7(Elisabeth)",
            "str_fol": "\u00acmeticulous(Elisabeth)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Elisabeth",
            "text": "Elisabeth is a skilled wallpaperer.",
            "fol": "p_5(Elisabeth)",
            "str_fol": "skilled_wallpaperer(Elisabeth)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Elisabeth",
            "text": "Elisabeth is creative.",
            "fol": "p_6(Elisabeth)",
            "str_fol": "creative(Elisabeth)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Elisabeth",
            "text": "Elisabeth teaches others.",
            "fol": "p_3(Elisabeth)",
            "str_fol": "teaches_others(Elisabeth)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Elisabeth",
            "text": "Elisabeth is not an expert.",
            "fol": "\u00acp_4(Elisabeth)",
            "str_fol": "\u00acis_expert(Elisabeth)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Elisabeth",
            "text": "Elisabeth cares about details.",
            "fol": "p_1(Elisabeth)",
            "str_fol": "cares_details(Elisabeth)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Elisabeth",
            "text": "Elisabeth designs patterns.",
            "fol": "p_2(Elisabeth)",
            "str_fol": "designs_patterns(Elisabeth)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Elisabeth",
            "text": "Elisabeth takes risks.",
            "fol": "p_0(Elisabeth)",
            "str_fol": "takes_risks(Elisabeth)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "If Elisabeth either shares knowledge or teaches others (but not both), then she is an expert.",
            "fol": "(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)",
            "str_fol": "(shares_knowledge(Elisabeth) \u2295 teaches_others(Elisabeth)) \u2192 is_expert(Elisabeth)"
        },
        {
            "id": 7,
            "text": "Anyone who cares about details has attention to them.",
            "fol": "\u2200x (p_1(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (cares_details(x) \u2192 has_attention(x))"
        },
        {
            "id": 6,
            "text": "Elisabeth either shares knowledge or expands her portfolio, but not necessarily both.",
            "fol": "p_13(Elisabeth) \u2295 p_12(Elisabeth)",
            "str_fol": "shares_knowledge(Elisabeth) \u2295 expands_portfolio(Elisabeth)"
        },
        {
            "id": 5,
            "text": "Anyone who designs patterns either tries new designs or expands their portfolio.",
            "fol": "\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (designs_patterns(x) \u2192 (tries_new(x) \u2228 expands_portfolio(x)))"
        },
        {
            "id": 4,
            "text": "If someone tries new things and takes risks, then they are adventurous.",
            "fol": "\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((tries_new(x) \u2227 takes_risks(x)) \u2192 is_adventurous(x))"
        },
        {
            "id": 3,
            "text": "A person is either detail-oriented or a perfectionist, but not necessarily both.",
            "fol": "\u2200x (p_10(x) \u2295 p_8(x))",
            "str_fol": "\u2200x (has_attention(x) \u2295 is_perfectionist(x))"
        },
        {
            "id": 2,
            "text": "Elisabeth is either meticulous in her wallpapering craft or adventurous in her design choices, but not necessarily both.",
            "fol": "p_7(Elisabeth) \u2295 p_9(Elisabeth)",
            "str_fol": "meticulous(Elisabeth) \u2295 is_adventurous(Elisabeth)"
        },
        {
            "id": 1,
            "text": "Elisabeth is either a skilled wallpaperer or a perfectionist, but not necessarily both.",
            "fol": "p_8(Elisabeth) \u2295 p_5(Elisabeth)",
            "str_fol": "is_perfectionist(Elisabeth) \u2295 skilled_wallpaperer(Elisabeth)"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is a skilled wallpaperer, then they are either creative or meticulous (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (skilled_wallpaperer(x) \u2192 (creative(x) \u2228 meticulous(x)))"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Elisabeth",
            "text": "Elisabeth teaches others.",
            "fol": "p_3(Elisabeth)",
            "str_fol": "teaches_others(Elisabeth)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Elisabeth",
            "text": "Elisabeth is not an expert.",
            "fol": "\u00acp_4(Elisabeth)",
            "str_fol": "\u00acis_expert(Elisabeth)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Elisabeth",
            "text": "Elisabeth cares about details.",
            "fol": "p_1(Elisabeth)",
            "str_fol": "cares_details(Elisabeth)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Elisabeth",
            "text": "Elisabeth designs patterns.",
            "fol": "p_2(Elisabeth)",
            "str_fol": "designs_patterns(Elisabeth)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Elisabeth",
            "text": "Elisabeth takes risks.",
            "fol": "p_0(Elisabeth)",
            "str_fol": "takes_risks(Elisabeth)",
            "negation": false
        },
        {
            "id": 8,
            "text": "If Elisabeth either shares knowledge or teaches others (but not both), then she is an expert.",
            "fol": "(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)",
            "str_fol": "(shares_knowledge(Elisabeth) \u2295 teaches_others(Elisabeth)) \u2192 is_expert(Elisabeth)"
        },
        {
            "id": 7,
            "text": "Anyone who cares about details has attention to them.",
            "fol": "\u2200x (p_1(x) \u2192 p_10(x))",
            "str_fol": "\u2200x (cares_details(x) \u2192 has_attention(x))"
        },
        {
            "id": 6,
            "text": "Elisabeth either shares knowledge or expands her portfolio, but not necessarily both.",
            "fol": "p_13(Elisabeth) \u2295 p_12(Elisabeth)",
            "str_fol": "shares_knowledge(Elisabeth) \u2295 expands_portfolio(Elisabeth)"
        },
        {
            "id": 5,
            "text": "Anyone who designs patterns either tries new designs or expands their portfolio.",
            "fol": "\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (designs_patterns(x) \u2192 (tries_new(x) \u2228 expands_portfolio(x)))"
        },
        {
            "id": 4,
            "text": "If someone tries new things and takes risks, then they are adventurous.",
            "fol": "\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))",
            "str_fol": "\u2200x ((tries_new(x) \u2227 takes_risks(x)) \u2192 is_adventurous(x))"
        },
        {
            "id": 3,
            "text": "A person is either detail-oriented or a perfectionist, but not necessarily both.",
            "fol": "\u2200x (p_10(x) \u2295 p_8(x))",
            "str_fol": "\u2200x (has_attention(x) \u2295 is_perfectionist(x))"
        },
        {
            "id": 2,
            "text": "Elisabeth is either meticulous in her wallpapering craft or adventurous in her design choices, but not necessarily both.",
            "fol": "p_7(Elisabeth) \u2295 p_9(Elisabeth)",
            "str_fol": "meticulous(Elisabeth) \u2295 is_adventurous(Elisabeth)"
        },
        {
            "id": 1,
            "text": "Elisabeth is either a skilled wallpaperer or a perfectionist, but not necessarily both.",
            "fol": "p_8(Elisabeth) \u2295 p_5(Elisabeth)",
            "str_fol": "is_perfectionist(Elisabeth) \u2295 skilled_wallpaperer(Elisabeth)"
        },
        {
            "id": 0,
            "text": "For all humans, if someone is a skilled wallpaperer, then they are either creative or meticulous (or both).",
            "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (skilled_wallpaperer(x) \u2192 (creative(x) \u2228 meticulous(x)))"
        }
    ],
    "context_fol": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 p_10(x))\np_13(Elisabeth) \u2295 p_12(Elisabeth)\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\n\u2200x (p_10(x) \u2295 p_8(x))\np_7(Elisabeth) \u2295 p_9(Elisabeth)\np_8(Elisabeth) \u2295 p_5(Elisabeth)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
    "conclusion": {
        "id": 13,
        "subject": "Elisabeth",
        "text": "Elisabeth is creative.",
        "fol": "p_6(Elisabeth)",
        "str_fol": "creative(Elisabeth)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_6(Elisabeth)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Elisabeth",
                    "text": "Elisabeth teaches others.",
                    "fol": "p_3(Elisabeth)",
                    "str_fol": "teaches_others(Elisabeth)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Elisabeth",
                    "text": "Elisabeth is not an expert.",
                    "fol": "\u00acp_4(Elisabeth)",
                    "str_fol": "\u00acis_expert(Elisabeth)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "If Elisabeth either shares knowledge or teaches others (but not both), then she is an expert.",
                    "fol": "(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)",
                    "str_fol": "(shares_knowledge(Elisabeth) \u2295 teaches_others(Elisabeth)) \u2192 is_expert(Elisabeth)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Elisabeth",
                "text": "Elisabeth shares knowledge.",
                "fol": "p_13(Elisabeth)",
                "str_fol": "shares_knowledge(Elisabeth)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Elisabeth",
                    "text": "Elisabeth cares about details.",
                    "fol": "p_1(Elisabeth)",
                    "str_fol": "cares_details(Elisabeth)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Anyone who cares about details has attention to them.",
                    "fol": "\u2200x (p_1(x) \u2192 p_10(x))",
                    "str_fol": "\u2200x (cares_details(x) \u2192 has_attention(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Elisabeth",
                "text": "Elisabeth pays attention to detail.",
                "fol": "p_10(Elisabeth)",
                "str_fol": "has_attention(Elisabeth)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Elisabeth",
                    "text": "Elisabeth shares knowledge.",
                    "fol": "p_13(Elisabeth)",
                    "str_fol": "shares_knowledge(Elisabeth)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Elisabeth either shares knowledge or expands her portfolio, but not necessarily both.",
                    "fol": "p_13(Elisabeth) \u2295 p_12(Elisabeth)",
                    "str_fol": "shares_knowledge(Elisabeth) \u2295 expands_portfolio(Elisabeth)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Elisabeth",
                "text": "Elisabeth does not expand her portfolio.",
                "fol": "\u00acp_12(Elisabeth)",
                "str_fol": "\u00acexpands_portfolio(Elisabeth)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Elisabeth",
                    "text": "Elisabeth designs patterns.",
                    "fol": "p_2(Elisabeth)",
                    "str_fol": "designs_patterns(Elisabeth)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Elisabeth",
                    "text": "Elisabeth does not expand her portfolio.",
                    "fol": "\u00acp_12(Elisabeth)",
                    "str_fol": "\u00acexpands_portfolio(Elisabeth)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who designs patterns either tries new designs or expands their portfolio.",
                    "fol": "\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (designs_patterns(x) \u2192 (tries_new(x) \u2228 expands_portfolio(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Elisabeth",
                "text": "Elisabeth tries new things.",
                "fol": "p_11(Elisabeth)",
                "str_fol": "tries_new(Elisabeth)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Elisabeth",
                    "text": "Elisabeth tries new things.",
                    "fol": "p_11(Elisabeth)",
                    "str_fol": "tries_new(Elisabeth)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Elisabeth",
                    "text": "Elisabeth takes risks.",
                    "fol": "p_0(Elisabeth)",
                    "str_fol": "takes_risks(Elisabeth)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If someone tries new things and takes risks, then they are adventurous.",
                    "fol": "\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))",
                    "str_fol": "\u2200x ((tries_new(x) \u2227 takes_risks(x)) \u2192 is_adventurous(x))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Elisabeth",
                "text": "Elisabeth is adventurous in her design choices.",
                "fol": "p_9(Elisabeth)",
                "str_fol": "is_adventurous(Elisabeth)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Elisabeth",
                    "text": "Elisabeth pays attention to detail.",
                    "fol": "p_10(Elisabeth)",
                    "str_fol": "has_attention(Elisabeth)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "A person is either detail-oriented or a perfectionist, but not necessarily both.",
                    "fol": "\u2200x (p_10(x) \u2295 p_8(x))",
                    "str_fol": "\u2200x (has_attention(x) \u2295 is_perfectionist(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Elisabeth",
                "text": "Elisabeth is not a perfectionist.",
                "fol": "\u00acp_8(Elisabeth)",
                "str_fol": "\u00acis_perfectionist(Elisabeth)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Elisabeth",
                    "text": "Elisabeth is adventurous in her design choices.",
                    "fol": "p_9(Elisabeth)",
                    "str_fol": "is_adventurous(Elisabeth)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Elisabeth is either meticulous in her wallpapering craft or adventurous in her design choices, but not necessarily both.",
                    "fol": "p_7(Elisabeth) \u2295 p_9(Elisabeth)",
                    "str_fol": "meticulous(Elisabeth) \u2295 is_adventurous(Elisabeth)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Elisabeth",
                "text": "Elisabeth is not meticulous.",
                "fol": "\u00acp_7(Elisabeth)",
                "str_fol": "\u00acmeticulous(Elisabeth)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Elisabeth",
                    "text": "Elisabeth is not a perfectionist.",
                    "fol": "\u00acp_8(Elisabeth)",
                    "str_fol": "\u00acis_perfectionist(Elisabeth)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Elisabeth is either a skilled wallpaperer or a perfectionist, but not necessarily both.",
                    "fol": "p_8(Elisabeth) \u2295 p_5(Elisabeth)",
                    "str_fol": "is_perfectionist(Elisabeth) \u2295 skilled_wallpaperer(Elisabeth)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Elisabeth",
                "text": "Elisabeth is a skilled wallpaperer.",
                "fol": "p_5(Elisabeth)",
                "str_fol": "skilled_wallpaperer(Elisabeth)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Elisabeth",
                    "text": "Elisabeth is a skilled wallpaperer.",
                    "fol": "p_5(Elisabeth)",
                    "str_fol": "skilled_wallpaperer(Elisabeth)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Elisabeth",
                    "text": "Elisabeth is not meticulous.",
                    "fol": "\u00acp_7(Elisabeth)",
                    "str_fol": "\u00acmeticulous(Elisabeth)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if someone is a skilled wallpaperer, then they are either creative or meticulous (or both).",
                    "fol": "\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))",
                    "str_fol": "\u2200x (skilled_wallpaperer(x) \u2192 (creative(x) \u2228 meticulous(x)))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Elisabeth",
                "text": "Elisabeth is creative.",
                "fol": "p_6(Elisabeth)",
                "str_fol": "creative(Elisabeth)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 -(p_13(Elisabeth) <-> p_3(Elisabeth)) -> p_4(Elisabeth).  [assumption].\n2 (all x (p_1(x) -> p_10(x))).  [assumption].\n3 -(p_13(Elisabeth) <-> p_12(Elisabeth)).  [assumption].\n4 (all x (p_2(x) -> p_11(x) | p_12(x))).  [assumption].\n5 (all x (p_11(x) & p_0(x) -> p_9(x))).  [assumption].\n6 (all x -(p_10(x) <-> p_8(x))).  [assumption].\n7 -(p_7(Elisabeth) <-> p_9(Elisabeth)).  [assumption].\n8 -(p_8(Elisabeth) <-> p_5(Elisabeth)).  [assumption].\n9 (all x (p_5(x) -> p_6(x) | p_7(x))).  [assumption].\n10 p_6(Elisabeth).  [goal].\n11 p_13(Elisabeth) | -p_3(Elisabeth) | p_4(Elisabeth).  [clausify(1)].\n12 p_3(Elisabeth).  [assumption].\n14 p_13(Elisabeth) | p_4(Elisabeth).  [resolve(11,b,12,a)].\n15 -p_4(Elisabeth).  [assumption].\n16 -p_1(x) | p_10(x).  [clausify(2)].\n17 p_1(Elisabeth).  [assumption].\n18 -p_2(x) | p_11(x) | p_12(x).  [clausify(4)].\n19 p_2(Elisabeth).  [assumption].\n20 -p_11(x) | -p_0(x) | p_9(x).  [clausify(5)].\n21 p_0(Elisabeth).  [assumption].\n22 -p_13(Elisabeth) | -p_12(Elisabeth).  [clausify(3)].\n24 p_13(Elisabeth).  [resolve(14,b,15,a)].\n25 -p_10(x) | -p_8(x).  [clausify(6)].\n27 p_10(Elisabeth).  [resolve(16,a,17,a)].\n28 -p_7(Elisabeth) | -p_9(Elisabeth).  [clausify(7)].\n30 -p_5(x) | p_6(x) | p_7(x).  [clausify(9)].\n32 p_8(Elisabeth) | p_5(Elisabeth).  [clausify(8)].\n33 -p_8(Elisabeth).  [resolve(27,a,25,a)].\n34 -p_5(Elisabeth) | p_6(Elisabeth) | -p_9(Elisabeth).  [resolve(30,c,28,a)].\n35 -p_6(Elisabeth).  [deny(10)].\n36 -p_11(Elisabeth) | p_9(Elisabeth).  [resolve(20,b,21,a)].\n37 p_11(Elisabeth) | p_12(Elisabeth).  [resolve(18,a,19,a)].\n38 p_9(Elisabeth) | p_12(Elisabeth).  [resolve(36,a,37,a)].\n39 -p_12(Elisabeth).  [resolve(24,a,22,a)].\n40 -p_5(Elisabeth) | -p_9(Elisabeth).  [resolve(34,b,35,a)].\n41 p_5(Elisabeth).  [resolve(33,a,32,a)].\n42 -p_9(Elisabeth).  [resolve(40,a,41,a)].\n43 p_9(Elisabeth).  [resolve(38,b,39,a)].\n44 $F.  [resolve(42,a,43,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 p_10(x))\np_13(Elisabeth) \u2295 p_12(Elisabeth)\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\n\u2200x (p_10(x) \u2295 p_8(x))\np_7(Elisabeth) \u2295 p_9(Elisabeth)\np_8(Elisabeth) \u2295 p_5(Elisabeth)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "(-(p_13(Elisabeth) <-> p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "all x (-(p_10(x) <-> p_8(x)))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)"
                ],
                "formulas(goals)": [
                    "p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Elisabeth)",
                    "\u00acp_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "\u00acp_7(Elisabeth)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 \u00acp_10(x))\np_13(Elisabeth) \u2295 p_12(Elisabeth)\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\np_10(Elisabeth) \u2295 p_8(Elisabeth)\np_7(Elisabeth) \u2295 p_9(Elisabeth)\np_8(Elisabeth) \u2295 p_5(Elisabeth)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)\n\u2200x (\u00acp_5(x) \u2192 \u00acp_6(x))",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "(-(p_13(Elisabeth) <-> p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> -p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "-(p_10(Elisabeth) <-> p_8(Elisabeth))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)",
                    "all x (-p_5(x) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "-p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_1(x) \u2192 p_10(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_1(x) \u2192 \u00acp_10(x))",
                    "\u2200x (\u00acp_5(x) \u2192 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 \u00acp_10(x))\np_13(Elisabeth) \u2295 p_12(Elisabeth)\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\np_10(Elisabeth) \u2295 p_8(Elisabeth)\np_7(Elisabeth) \u2295 p_9(Elisabeth)\np_8(Elisabeth) \u2295 p_5(Elisabeth)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)\n\u2200x (p_6(x) \u2192 p_5(x))\n\u00acp_5(Elisabeth)\np_8(Elisabeth)",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "(-(p_13(Elisabeth) <-> p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> -p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "-(p_10(Elisabeth) <-> p_8(Elisabeth))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)",
                    "all x (p_6(x) -> p_5(x))",
                    "-p_5(Elisabeth)",
                    "p_8(Elisabeth)"
                ],
                "formulas(goals)": [
                    "-p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (\u00acp_5(x) \u2192 \u00acp_6(x))"
                ],
                "added_facts": [
                    "\u00acp_5(Elisabeth)",
                    "p_8(Elisabeth)"
                ],
                "added_rules": [
                    "\u2200x (p_6(x) \u2192 p_5(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n((p_13(Elisabeth) \u2228 p_3(Elisabeth)) \u2227 \u00ac(p_13(Elisabeth) \u2227 p_3(Elisabeth))) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 \u00acp_10(x))\np_13(Elisabeth) \u2295 p_12(Elisabeth)\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\np_10(Elisabeth) \u2295 p_8(Elisabeth)\np_7(Elisabeth) \u2295 p_9(Elisabeth)\np_8(Elisabeth) \u2295 p_5(Elisabeth)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)\n\u2200x (p_6(x) \u2192 p_5(x))\n\u00acp_5(Elisabeth)\np_8(Elisabeth)\n\u00acp_10(Elisabeth)\n\u00ac(p_10(Elisabeth) \u2227 p_8(Elisabeth))\n\u00ac(p_13(Elisabeth) \u2227 p_12(Elisabeth))\n\u00ac(p_7(Elisabeth) \u2227 p_9(Elisabeth))\n\u00ac(p_8(Elisabeth) \u2227 p_5(Elisabeth))",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "((p_13(Elisabeth) | p_3(Elisabeth)) & -(p_13(Elisabeth) & p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> -p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "-(p_10(Elisabeth) <-> p_8(Elisabeth))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)",
                    "all x (p_6(x) -> p_5(x))",
                    "-p_5(Elisabeth)",
                    "p_8(Elisabeth)",
                    "-p_10(Elisabeth)",
                    "-(p_10(Elisabeth) & p_8(Elisabeth))",
                    "-(p_13(Elisabeth) & p_12(Elisabeth))",
                    "-(p_7(Elisabeth) & p_9(Elisabeth))",
                    "-(p_8(Elisabeth) & p_5(Elisabeth))"
                ],
                "formulas(goals)": [
                    "-p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_13(Elisabeth) \u2295 p_3(Elisabeth)) \u2192 p_4(Elisabeth)"
                ],
                "added_facts": [
                    "\u00acp_10(Elisabeth)",
                    "\u00ac(p_10(Elisabeth) \u2227 p_8(Elisabeth))",
                    "\u00ac(p_13(Elisabeth) \u2227 p_12(Elisabeth))",
                    "\u00ac(p_7(Elisabeth) \u2227 p_9(Elisabeth))",
                    "\u00ac(p_8(Elisabeth) \u2227 p_5(Elisabeth))"
                ],
                "added_rules": [
                    "((p_13(Elisabeth) \u2228 p_3(Elisabeth)) \u2227 \u00ac(p_13(Elisabeth) \u2227 p_3(Elisabeth))) \u2192 p_4(Elisabeth)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n((p_13(Elisabeth) \u2228 p_3(Elisabeth)) \u2227 \u00ac(p_13(Elisabeth) \u2227 p_3(Elisabeth))) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 \u00acp_10(x))\np_13(Elisabeth) \u2295 p_12(Elisabeth)\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\np_10(Elisabeth) \u2295 p_8(Elisabeth)\np_7(Elisabeth) \u2295 p_9(Elisabeth)\np_8(Elisabeth) \u2295 p_5(Elisabeth)\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)\n\u00acp_5(Elisabeth)\np_8(Elisabeth)\n\u00acp_10(Elisabeth)\n\u00ac(p_10(Elisabeth) \u2227 p_8(Elisabeth))\n\u00ac(p_13(Elisabeth) \u2227 p_12(Elisabeth))\n\u00ac(p_7(Elisabeth) \u2227 p_9(Elisabeth))\n\u00ac(p_8(Elisabeth) \u2227 p_5(Elisabeth))\np_2(Elisabeth) \u2192 p_6(Elisabeth)",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "((p_13(Elisabeth) | p_3(Elisabeth)) & -(p_13(Elisabeth) & p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> -p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "-(p_10(Elisabeth) <-> p_8(Elisabeth))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)",
                    "-p_5(Elisabeth)",
                    "p_8(Elisabeth)",
                    "-p_10(Elisabeth)",
                    "-(p_10(Elisabeth) & p_8(Elisabeth))",
                    "-(p_13(Elisabeth) & p_12(Elisabeth))",
                    "-(p_7(Elisabeth) & p_9(Elisabeth))",
                    "-(p_8(Elisabeth) & p_5(Elisabeth))",
                    "p_2(Elisabeth) -> p_6(Elisabeth)"
                ],
                "formulas(goals)": [
                    "p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2192 p_5(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Elisabeth) \u2192 p_6(Elisabeth)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n((p_13(Elisabeth) \u2228 p_3(Elisabeth)) \u2227 \u00ac(p_13(Elisabeth) \u2227 p_3(Elisabeth))) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 \u00acp_10(x))\n\u00ac(p_13(Elisabeth) \u2194 p_12(Elisabeth))\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\n\u00ac(p_10(Elisabeth) \u2194 p_8(Elisabeth))\n\u00ac(p_7(Elisabeth) \u2194 p_9(Elisabeth))\n\u00ac(p_8(Elisabeth) \u2194 p_5(Elisabeth))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)\n\u00acp_5(Elisabeth)\np_8(Elisabeth)\n\u00acp_10(Elisabeth)\n\u00ac(p_10(Elisabeth) \u2227 p_8(Elisabeth))\n\u00ac(p_13(Elisabeth) \u2227 p_12(Elisabeth))\n\u00ac(p_7(Elisabeth) \u2227 p_9(Elisabeth))\n\u00ac(p_8(Elisabeth) \u2227 p_5(Elisabeth))\np_6(Elisabeth) \u2192 p_5(Elisabeth)",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "((p_13(Elisabeth) | p_3(Elisabeth)) & -(p_13(Elisabeth) & p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> -p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "-(p_10(Elisabeth) <-> p_8(Elisabeth))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)",
                    "-p_5(Elisabeth)",
                    "p_8(Elisabeth)",
                    "-p_10(Elisabeth)",
                    "-(p_10(Elisabeth) & p_8(Elisabeth))",
                    "-(p_13(Elisabeth) & p_12(Elisabeth))",
                    "-(p_7(Elisabeth) & p_9(Elisabeth))",
                    "-(p_8(Elisabeth) & p_5(Elisabeth))",
                    "p_6(Elisabeth) -> p_5(Elisabeth)"
                ],
                "formulas(goals)": [
                    "-p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Elisabeth) \u2192 p_6(Elisabeth)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_6(Elisabeth) \u2192 p_5(Elisabeth)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Elisabeth)\n\u00acp_4(Elisabeth)\np_1(Elisabeth)\np_2(Elisabeth)\np_0(Elisabeth)\n((p_13(Elisabeth) \u2228 p_3(Elisabeth)) \u2227 \u00ac(p_13(Elisabeth) \u2227 p_3(Elisabeth))) \u2192 p_4(Elisabeth)\n\u2200x (p_1(x) \u2192 \u00acp_10(x))\n\u00ac(p_13(Elisabeth) \u2194 p_12(Elisabeth))\n\u2200x (p_2(x) \u2192 (p_11(x) \u2228 p_12(x)))\n\u2200x ((p_11(x) \u2227 p_0(x)) \u2192 p_9(x))\n\u00ac(p_10(Elisabeth) \u2194 p_8(Elisabeth))\n\u00ac(p_7(Elisabeth) \u2194 p_9(Elisabeth))\n\u00ac(p_8(Elisabeth) \u2194 p_5(Elisabeth))\n\u2200x (p_5(x) \u2192 (p_6(x) \u2228 p_7(x)))\np_13(Elisabeth)\n\u00acp_12(Elisabeth)\np_11(Elisabeth)\np_9(Elisabeth)\n\u00acp_7(Elisabeth)\n\u00acp_5(Elisabeth)\np_8(Elisabeth)\n\u00acp_10(Elisabeth)\n\u00ac(p_10(Elisabeth) \u2227 p_8(Elisabeth))\n\u00ac(p_13(Elisabeth) \u2227 p_12(Elisabeth))\n\u00ac(p_7(Elisabeth) \u2227 p_9(Elisabeth))\n\u00ac(p_8(Elisabeth) \u2227 p_5(Elisabeth))\np_6(Elisabeth) \u2192 p_5(Elisabeth)\n\u00acp_5(Elisabeth) \u2192 \u00acp_6(Elisabeth)",
            "Initial Goal": "p_6(Elisabeth)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Elisabeth)",
                    "-p_4(Elisabeth)",
                    "p_1(Elisabeth)",
                    "p_2(Elisabeth)",
                    "p_0(Elisabeth)",
                    "((p_13(Elisabeth) | p_3(Elisabeth)) & -(p_13(Elisabeth) & p_3(Elisabeth))) -> p_4(Elisabeth)",
                    "all x (p_1(x) -> -p_10(x))",
                    "-(p_13(Elisabeth) <-> p_12(Elisabeth))",
                    "all x (p_2(x) -> (p_11(x) | p_12(x)))",
                    "all x ((p_11(x) & p_0(x)) -> p_9(x))",
                    "-(p_10(Elisabeth) <-> p_8(Elisabeth))",
                    "-(p_7(Elisabeth) <-> p_9(Elisabeth))",
                    "-(p_8(Elisabeth) <-> p_5(Elisabeth))",
                    "all x (p_5(x) -> (p_6(x) | p_7(x)))",
                    "p_13(Elisabeth)",
                    "-p_12(Elisabeth)",
                    "p_11(Elisabeth)",
                    "p_9(Elisabeth)",
                    "-p_7(Elisabeth)",
                    "-p_5(Elisabeth)",
                    "p_8(Elisabeth)",
                    "-p_10(Elisabeth)",
                    "-(p_10(Elisabeth) & p_8(Elisabeth))",
                    "-(p_13(Elisabeth) & p_12(Elisabeth))",
                    "-(p_7(Elisabeth) & p_9(Elisabeth))",
                    "-(p_8(Elisabeth) & p_5(Elisabeth))",
                    "p_6(Elisabeth) -> p_5(Elisabeth)",
                    "-p_5(Elisabeth) -> -p_6(Elisabeth)"
                ],
                "formulas(goals)": [
                    "-p_6(Elisabeth)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_5(Elisabeth) \u2192 \u00acp_6(Elisabeth)"
                ]
            }
        }
    ]
}