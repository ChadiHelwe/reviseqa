{
    "background_story": "Amos was a rambunctious three-year-old who loved playing outside, no matter the weather. One rainy afternoon, while splashing in puddles, Amos discovered the joy of wetting his toes and watching the water ripple. His laughter echoed through the neighborhood as he danced in the downpour, completely carefree. But his fun was soon interrupted when he accidentally slipped and fell into a large puddle, getting completely soaked. Despite the initial shock, Amos couldn't help but giggle at his own misfortune. His parents, watching from the porch, couldn't help but smile at their little boy's infectious joy. As they helped Amos change into dry clothes, they realized that sometimes, it's the wettest moments that create the most lasting memories.",
    "predicates": [
        {
            "id": 0,
            "name": "get_wet"
        },
        {
            "id": 1,
            "name": "show_smile"
        },
        {
            "id": 2,
            "name": "learn_fast"
        },
        {
            "id": 3,
            "name": "make_mistakes"
        },
        {
            "id": 4,
            "name": "solve_puzzles"
        },
        {
            "id": 5,
            "name": "grow_bravely"
        },
        {
            "id": 6,
            "name": "tell_stories"
        },
        {
            "id": 7,
            "name": "develop_imagination"
        },
        {
            "id": 8,
            "name": "play_outside"
        },
        {
            "id": 9,
            "name": "have_fun"
        },
        {
            "id": 10,
            "name": "create_memories"
        },
        {
            "id": 11,
            "name": "laugh_aloud"
        },
        {
            "id": 12,
            "name": "explore_world"
        },
        {
            "id": 13,
            "name": "enjoy_moments"
        },
        {
            "id": 14,
            "name": "try_new_things"
        },
        {
            "id": 15,
            "name": "stay_curious"
        },
        {
            "id": 16,
            "name": "ask_questions"
        },
        {
            "id": 17,
            "name": "read_books"
        },
        {
            "id": 18,
            "name": "be_curious"
        },
        {
            "id": 19,
            "name": "make_friends"
        },
        {
            "id": 20,
            "name": "discover_joy"
        },
        {
            "id": 21,
            "name": "fall_down"
        },
        {
            "id": 22,
            "name": "make_jokes"
        },
        {
            "id": 23,
            "name": "be_adventurous"
        },
        {
            "id": 24,
            "name": "be_creative"
        },
        {
            "id": 25,
            "name": "seeks_knowledge"
        },
        {
            "id": 26,
            "name": "thinks_deeply"
        },
        {
            "id": 27,
            "name": "makes_art"
        },
        {
            "id": 28,
            "name": "love_learning"
        },
        {
            "id": 29,
            "name": "draw_pictures"
        }
    ],
    "subject_name": "Amos",
    "subject_category": "child",
    "keyword": "wetting",
    "all_facts": [
        {
            "id": 0,
            "subject": "Amos",
            "text": "Amos gets wet.",
            "fol": "p_0(Amos)",
            "str_fol": "get_wet(Amos)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Amos",
            "text": "Amos shows a smile.",
            "fol": "p_1(Amos)",
            "str_fol": "show_smile(Amos)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Amos",
            "text": "Amos does not learn quickly.",
            "fol": "\u00acp_2(Amos)",
            "str_fol": "\u00aclearn_fast(Amos)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Amos",
            "text": "Amos does not make mistakes.",
            "fol": "\u00acp_3(Amos)",
            "str_fol": "\u00acmake_mistakes(Amos)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Amos",
            "text": "Amos does not solve puzzles.",
            "fol": "\u00acp_4(Amos)",
            "str_fol": "\u00acsolve_puzzles(Amos)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Amos",
            "text": "Amos does not grow bravely.",
            "fol": "\u00acp_5(Amos)",
            "str_fol": "\u00acgrow_bravely(Amos)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Amos",
            "text": "Amos tells stories.",
            "fol": "p_6(Amos)",
            "str_fol": "tell_stories(Amos)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Amos",
            "text": "Amos is not able to develop his imagination.",
            "fol": "\u00acp_7(Amos)",
            "str_fol": "\u00acdevelop_imagination(Amos)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Amos",
            "text": "Amos reads books.",
            "fol": "p_17(Amos)",
            "str_fol": "read_books(Amos)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Amos",
            "text": "Amos does not try new things.",
            "fol": "\u00acp_14(Amos)",
            "str_fol": "\u00actry_new_things(Amos)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Amos",
            "text": "Amos asks questions.",
            "fol": "p_16(Amos)",
            "str_fol": "ask_questions(Amos)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Amos",
            "text": "Amos does not stay curious.",
            "fol": "\u00acp_15(Amos)",
            "str_fol": "\u00acstay_curious(Amos)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Amos",
            "text": "Amos does not laugh aloud.",
            "fol": "\u00acp_11(Amos)",
            "str_fol": "\u00aclaugh_aloud(Amos)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Amos",
            "text": "Amos does not explore the world.",
            "fol": "\u00acp_12(Amos)",
            "str_fol": "\u00acexplore_world(Amos)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Amos",
            "text": "Amos does not create memories.",
            "fol": "\u00acp_10(Amos)",
            "str_fol": "\u00accreate_memories(Amos)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Amos",
            "text": "Amos plays outside.",
            "fol": "p_8(Amos)",
            "str_fol": "play_outside(Amos)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Amos",
            "text": "Amos tells stories.",
            "fol": "p_6(Amos)",
            "str_fol": "tell_stories(Amos)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Amos",
            "text": "Amos is not able to develop his imagination.",
            "fol": "\u00acp_7(Amos)",
            "str_fol": "\u00acdevelop_imagination(Amos)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Amos",
            "text": "Amos does not make mistakes.",
            "fol": "\u00acp_3(Amos)",
            "str_fol": "\u00acmake_mistakes(Amos)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Amos",
            "text": "Amos does not grow bravely.",
            "fol": "\u00acp_5(Amos)",
            "str_fol": "\u00acgrow_bravely(Amos)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Amos",
            "text": "Amos does not solve puzzles.",
            "fol": "\u00acp_4(Amos)",
            "str_fol": "\u00acsolve_puzzles(Amos)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Amos",
            "text": "Amos does not learn quickly.",
            "fol": "\u00acp_2(Amos)",
            "str_fol": "\u00aclearn_fast(Amos)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Amos",
            "text": "Amos shows a smile.",
            "fol": "p_1(Amos)",
            "str_fol": "show_smile(Amos)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Amos",
            "text": "Amos gets wet.",
            "fol": "p_0(Amos)",
            "str_fol": "get_wet(Amos)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Every child who either reads books or tells stories is able to develop their imagination.",
            "fol": "\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((read_books(x) \u2295 tell_stories(x)) \u2192 develop_imagination(x))"
        },
        {
            "id": 7,
            "text": "If Amos either makes mistakes or tries new things (but not both), then he grows bravely.",
            "fol": "(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)",
            "str_fol": "(make_mistakes(Amos) \u2295 try_new_things(Amos)) \u2192 grow_bravely(Amos)"
        },
        {
            "id": 6,
            "text": "If Amos reads books, then he either asks questions or solves puzzles (but not both).",
            "fol": "p_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))",
            "str_fol": "read_books(Amos) \u2192 (ask_questions(Amos) \u2295 solve_puzzles(Amos))"
        },
        {
            "id": 5,
            "text": "If a child asks questions and stays curious, then they learn quickly.",
            "fol": "\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((ask_questions(x) \u2227 stay_curious(x)) \u2192 learn_fast(x))"
        },
        {
            "id": 4,
            "text": "Amos either laughs aloud or shows a smile, but not both at the same time.",
            "fol": "p_11(Amos) \u2295 p_1(Amos)",
            "str_fol": "laugh_aloud(Amos) \u2295 show_smile(Amos)"
        },
        {
            "id": 3,
            "text": "If Amos either explores the world or tries new things (but not both), then he stays curious.",
            "fol": "(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)",
            "str_fol": "(explore_world(Amos) \u2295 try_new_things(Amos)) \u2192 stay_curious(Amos)"
        },
        {
            "id": 2,
            "text": "Every child who explores the world either has fun or enjoys moments (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))",
            "str_fol": "\u2200x (explore_world(x) \u2192 (have_fun(x) \u2228 enjoy_moments(x)))"
        },
        {
            "id": 1,
            "text": "If Amos gets wet and creates memories, then he laughs aloud.",
            "fol": "(p_0(Amos) \u2227 p_10(Amos)) \u2192 p_11(Amos)",
            "str_fol": "(get_wet(Amos) \u2227 create_memories(Amos)) \u2192 laugh_aloud(Amos)"
        },
        {
            "id": 0,
            "text": "For all children, if a child plays outside, then they have fun and create memories.",
            "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (play_outside(x) \u2192 (have_fun(x) \u2227 create_memories(x)))"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Amos",
            "text": "Amos tells stories.",
            "fol": "p_6(Amos)",
            "str_fol": "tell_stories(Amos)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Amos",
            "text": "Amos is not able to develop his imagination.",
            "fol": "\u00acp_7(Amos)",
            "str_fol": "\u00acdevelop_imagination(Amos)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Amos",
            "text": "Amos does not make mistakes.",
            "fol": "\u00acp_3(Amos)",
            "str_fol": "\u00acmake_mistakes(Amos)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Amos",
            "text": "Amos does not grow bravely.",
            "fol": "\u00acp_5(Amos)",
            "str_fol": "\u00acgrow_bravely(Amos)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Amos",
            "text": "Amos does not solve puzzles.",
            "fol": "\u00acp_4(Amos)",
            "str_fol": "\u00acsolve_puzzles(Amos)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Amos",
            "text": "Amos does not learn quickly.",
            "fol": "\u00acp_2(Amos)",
            "str_fol": "\u00aclearn_fast(Amos)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Amos",
            "text": "Amos shows a smile.",
            "fol": "p_1(Amos)",
            "str_fol": "show_smile(Amos)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Amos",
            "text": "Amos gets wet.",
            "fol": "p_0(Amos)",
            "str_fol": "get_wet(Amos)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Every child who either reads books or tells stories is able to develop their imagination.",
            "fol": "\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))",
            "str_fol": "\u2200x ((read_books(x) \u2295 tell_stories(x)) \u2192 develop_imagination(x))"
        },
        {
            "id": 7,
            "text": "If Amos either makes mistakes or tries new things (but not both), then he grows bravely.",
            "fol": "(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)",
            "str_fol": "(make_mistakes(Amos) \u2295 try_new_things(Amos)) \u2192 grow_bravely(Amos)"
        },
        {
            "id": 6,
            "text": "If Amos reads books, then he either asks questions or solves puzzles (but not both).",
            "fol": "p_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))",
            "str_fol": "read_books(Amos) \u2192 (ask_questions(Amos) \u2295 solve_puzzles(Amos))"
        },
        {
            "id": 5,
            "text": "If a child asks questions and stays curious, then they learn quickly.",
            "fol": "\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))",
            "str_fol": "\u2200x ((ask_questions(x) \u2227 stay_curious(x)) \u2192 learn_fast(x))"
        },
        {
            "id": 4,
            "text": "Amos either laughs aloud or shows a smile, but not both at the same time.",
            "fol": "p_11(Amos) \u2295 p_1(Amos)",
            "str_fol": "laugh_aloud(Amos) \u2295 show_smile(Amos)"
        },
        {
            "id": 3,
            "text": "If Amos either explores the world or tries new things (but not both), then he stays curious.",
            "fol": "(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)",
            "str_fol": "(explore_world(Amos) \u2295 try_new_things(Amos)) \u2192 stay_curious(Amos)"
        },
        {
            "id": 2,
            "text": "Every child who explores the world either has fun or enjoys moments (or both).",
            "fol": "\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))",
            "str_fol": "\u2200x (explore_world(x) \u2192 (have_fun(x) \u2228 enjoy_moments(x)))"
        },
        {
            "id": 1,
            "text": "If Amos gets wet and creates memories, then he laughs aloud.",
            "fol": "(p_0(Amos) \u2227 p_10(Amos)) \u2192 p_11(Amos)",
            "str_fol": "(get_wet(Amos) \u2227 create_memories(Amos)) \u2192 laugh_aloud(Amos)"
        },
        {
            "id": 0,
            "text": "For all children, if a child plays outside, then they have fun and create memories.",
            "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))",
            "str_fol": "\u2200x (play_outside(x) \u2192 (have_fun(x) \u2227 create_memories(x)))"
        }
    ],
    "context_fol": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))\n(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)\np_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n(p_0(Amos) \u2227 p_10(Amos)) \u2192 p_11(Amos)\n\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))",
    "conclusion": {
        "id": 15,
        "subject": "Amos",
        "text": "Amos plays outside.",
        "fol": "p_8(Amos)",
        "str_fol": "play_outside(Amos)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_8(Amos)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Amos",
                    "text": "Amos tells stories.",
                    "fol": "p_6(Amos)",
                    "str_fol": "tell_stories(Amos)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Amos",
                    "text": "Amos is not able to develop his imagination.",
                    "fol": "\u00acp_7(Amos)",
                    "str_fol": "\u00acdevelop_imagination(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Every child who either reads books or tells stories is able to develop their imagination.",
                    "fol": "\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))",
                    "str_fol": "\u2200x ((read_books(x) \u2295 tell_stories(x)) \u2192 develop_imagination(x))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Amos",
                "text": "Amos reads books.",
                "fol": "p_17(Amos)",
                "str_fol": "read_books(Amos)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Amos",
                    "text": "Amos does not make mistakes.",
                    "fol": "\u00acp_3(Amos)",
                    "str_fol": "\u00acmake_mistakes(Amos)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Amos",
                    "text": "Amos does not grow bravely.",
                    "fol": "\u00acp_5(Amos)",
                    "str_fol": "\u00acgrow_bravely(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Amos either makes mistakes or tries new things (but not both), then he grows bravely.",
                    "fol": "(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)",
                    "str_fol": "(make_mistakes(Amos) \u2295 try_new_things(Amos)) \u2192 grow_bravely(Amos)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Amos",
                "text": "Amos does not try new things.",
                "fol": "\u00acp_14(Amos)",
                "str_fol": "\u00actry_new_things(Amos)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Amos",
                    "text": "Amos reads books.",
                    "fol": "p_17(Amos)",
                    "str_fol": "read_books(Amos)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Amos",
                    "text": "Amos does not solve puzzles.",
                    "fol": "\u00acp_4(Amos)",
                    "str_fol": "\u00acsolve_puzzles(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Amos reads books, then he either asks questions or solves puzzles (but not both).",
                    "fol": "p_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))",
                    "str_fol": "read_books(Amos) \u2192 (ask_questions(Amos) \u2295 solve_puzzles(Amos))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Amos",
                "text": "Amos asks questions.",
                "fol": "p_16(Amos)",
                "str_fol": "ask_questions(Amos)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Amos",
                    "text": "Amos asks questions.",
                    "fol": "p_16(Amos)",
                    "str_fol": "ask_questions(Amos)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Amos",
                    "text": "Amos does not learn quickly.",
                    "fol": "\u00acp_2(Amos)",
                    "str_fol": "\u00aclearn_fast(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If a child asks questions and stays curious, then they learn quickly.",
                    "fol": "\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))",
                    "str_fol": "\u2200x ((ask_questions(x) \u2227 stay_curious(x)) \u2192 learn_fast(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Amos",
                "text": "Amos does not stay curious.",
                "fol": "\u00acp_15(Amos)",
                "str_fol": "\u00acstay_curious(Amos)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Amos",
                    "text": "Amos shows a smile.",
                    "fol": "p_1(Amos)",
                    "str_fol": "show_smile(Amos)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Amos either laughs aloud or shows a smile, but not both at the same time.",
                    "fol": "p_11(Amos) \u2295 p_1(Amos)",
                    "str_fol": "laugh_aloud(Amos) \u2295 show_smile(Amos)"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Amos",
                "text": "Amos does not laugh aloud.",
                "fol": "\u00acp_11(Amos)",
                "str_fol": "\u00aclaugh_aloud(Amos)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Amos",
                    "text": "Amos does not try new things.",
                    "fol": "\u00acp_14(Amos)",
                    "str_fol": "\u00actry_new_things(Amos)",
                    "negation": true
                },
                {
                    "id": 11,
                    "subject": "Amos",
                    "text": "Amos does not stay curious.",
                    "fol": "\u00acp_15(Amos)",
                    "str_fol": "\u00acstay_curious(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Amos either explores the world or tries new things (but not both), then he stays curious.",
                    "fol": "(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)",
                    "str_fol": "(explore_world(Amos) \u2295 try_new_things(Amos)) \u2192 stay_curious(Amos)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Amos",
                "text": "Amos does not explore the world.",
                "fol": "\u00acp_12(Amos)",
                "str_fol": "\u00acexplore_world(Amos)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 13,
                    "subject": "Amos",
                    "text": "Amos does not explore the world.",
                    "fol": "\u00acp_12(Amos)",
                    "str_fol": "\u00acexplore_world(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Every child who explores the world either has fun or enjoys moments (or both).",
                    "fol": "\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))",
                    "str_fol": "\u2200x (explore_world(x) \u2192 (have_fun(x) \u2228 enjoy_moments(x)))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Amos",
                    "text": "Amos gets wet.",
                    "fol": "p_0(Amos)",
                    "str_fol": "get_wet(Amos)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Amos",
                    "text": "Amos does not laugh aloud.",
                    "fol": "\u00acp_11(Amos)",
                    "str_fol": "\u00aclaugh_aloud(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Amos gets wet and creates memories, then he laughs aloud.",
                    "fol": "(p_0(Amos) \u2227 p_10(Amos)) \u2192 p_11(Amos)",
                    "str_fol": "(get_wet(Amos) \u2227 create_memories(Amos)) \u2192 laugh_aloud(Amos)"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Amos",
                "text": "Amos does not create memories.",
                "fol": "\u00acp_10(Amos)",
                "str_fol": "\u00accreate_memories(Amos)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Amos",
                    "text": "Amos does not create memories.",
                    "fol": "\u00acp_10(Amos)",
                    "str_fol": "\u00accreate_memories(Amos)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all children, if a child plays outside, then they have fun and create memories.",
                    "fol": "\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))",
                    "str_fol": "\u2200x (play_outside(x) \u2192 (have_fun(x) \u2227 create_memories(x)))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Amos",
                "text": "Amos plays outside.",
                "fol": "p_8(Amos)",
                "str_fol": "play_outside(Amos)",
                "negation": false
            }
        }
    ],
    "proof_trace": "5 -(p_11(Amos) <-> p_1(Amos)).  [assumption].\n8 p_0(Amos) & p_10(Amos) -> p_11(Amos).  [assumption].\n9 (all x (p_8(x) -> p_9(x) & p_10(x))).  [assumption].\n10 -p_8(Amos).  [goal].\n26 -p_11(Amos) | -p_1(Amos).  [clausify(5)].\n27 p_1(Amos).  [assumption].\n29 -p_0(Amos) | -p_10(Amos) | p_11(Amos).  [clausify(8)].\n30 p_0(Amos).  [assumption].\n34 p_8(Amos).  [deny(10)].\n36 -p_8(x) | p_10(x).  [clausify(9)].\n41 -p_10(Amos) | p_11(Amos).  [resolve(29,a,30,a)].\n42 -p_11(Amos).  [resolve(26,b,27,a)].\n43 -p_10(Amos).  [resolve(41,b,42,a)].\n44 p_10(Amos).  [resolve(34,a,36,a)].\n45 $F.  [resolve(43,a,44,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))\n(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)\np_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_9(Amos)\np_10(Amos)\n\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_8(x))\n(p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_11(Amos)",
            "Initial Goal": "p_8(Amos)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos).",
                    "-p_7(Amos).",
                    "-p_3(Amos).",
                    "-p_5(Amos).",
                    "-p_4(Amos).",
                    "-p_2(Amos).",
                    "p_1(Amos).",
                    "p_0(Amos).",
                    "all x ((-(p_17(x) <-> p_6(x))) -> p_7(x)).",
                    "(-(p_3(Amos) <-> p_14(Amos))) -> p_5(Amos).",
                    "p_17(Amos) -> (-(p_16(Amos) <-> p_4(Amos))).",
                    "all x ((p_16(x) & p_15(x)) -> p_2(x)).",
                    "-(p_11(Amos) <-> p_1(Amos)).",
                    "(-(p_12(Amos) <-> p_14(Amos))) -> p_15(Amos).",
                    "all x (p_12(x) -> (p_9(x) | p_13(x))).",
                    "all x (p_8(x) -> (p_9(x) & p_10(x))).",
                    "p_9(Amos).",
                    "p_10(Amos).",
                    "all x ((p_9(x) & p_10(x)) -> p_8(x)).",
                    "(p_0(Amos) & p_10(Amos)) -> -p_11(Amos)."
                ],
                "formulas(goals)": [
                    "p_8(Amos)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Amos) \u2227 p_10(Amos)) \u2192 p_11(Amos)"
                ],
                "added_facts": [
                    "p_9(Amos)",
                    "p_10(Amos)"
                ],
                "added_rules": [
                    "\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_8(x))",
                    "(p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_11(Amos)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))\n(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)\np_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))\np_9(Amos)\np_10(Amos)\n(p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_11(Amos)\n(p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_8(Amos)",
            "Initial Goal": "p_8(Amos)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos)",
                    "-p_7(Amos)",
                    "-p_3(Amos)",
                    "-p_5(Amos)",
                    "-p_4(Amos)",
                    "-p_2(Amos)",
                    "p_1(Amos)",
                    "p_0(Amos)",
                    "all x ((-(p_17(x) <-> p_6(x))) -> p_7(x))",
                    "(-(p_3(Amos) <-> p_14(Amos))) -> p_5(Amos)",
                    "p_17(Amos) -> (-(p_16(Amos) <-> p_4(Amos)))",
                    "all x ((p_16(x) & p_15(x)) -> p_2(x))",
                    "-(p_11(Amos) <-> p_1(Amos))",
                    "(-(p_12(Amos) <-> p_14(Amos))) -> p_15(Amos)",
                    "all x (p_12(x) -> (p_9(x) | p_13(x)))",
                    "all x (p_8(x) -> (p_9(x) & p_10(x)))",
                    "p_9(Amos)",
                    "p_10(Amos)",
                    "(p_0(Amos) & p_10(Amos)) -> -p_11(Amos)",
                    "(p_0(Amos) & p_10(Amos)) -> -p_8(Amos)"
                ],
                "formulas(goals)": [
                    "-p_8(Amos)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_9(x) \u2227 p_10(x)) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_8(Amos)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))\n(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)\np_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_10(x))\np_9(Amos)\np_10(Amos)\n((p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_11(Amos))\n((p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_8(Amos))\n(p_9(Amos) \u2227 p_10(Amos))\n\u00acp_11(Amos)",
            "Initial Goal": "p_8(Amos)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos)",
                    "-p_7(Amos)",
                    "-p_3(Amos)",
                    "-p_5(Amos)",
                    "-p_4(Amos)",
                    "-p_2(Amos)",
                    "p_1(Amos)",
                    "p_0(Amos)",
                    "all x ((-(p_17(x) <-> p_6(x))) -> p_7(x))",
                    "(-(p_3(Amos) <-> p_14(Amos))) -> p_5(Amos)",
                    "p_17(Amos) -> (-(p_16(Amos) <-> p_4(Amos)))",
                    "all x ((p_16(x) & p_15(x)) -> p_2(x))",
                    "-(p_11(Amos) <-> p_1(Amos))",
                    "(-(p_12(Amos) <-> p_14(Amos))) -> p_15(Amos)",
                    "all x (p_12(x) -> (p_9(x) | p_13(x)))",
                    "all x (p_8(x) -> p_9(x))",
                    "all x (p_8(x) -> p_10(x))",
                    "p_9(Amos)",
                    "p_10(Amos)",
                    "((p_0(Amos) & p_10(Amos)) -> -p_11(Amos))",
                    "((p_0(Amos) & p_10(Amos)) -> -p_8(Amos))",
                    "(p_9(Amos) & p_10(Amos))",
                    "-p_11(Amos)"
                ],
                "formulas(goals)": [
                    "-p_8(Amos)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_8(x) \u2192 (p_9(x) \u2227 p_10(x)))"
                ],
                "added_facts": [
                    "(p_9(Amos) \u2227 p_10(Amos))",
                    "\u00acp_11(Amos)"
                ],
                "added_rules": [
                    "\u2200x (p_8(x) \u2192 p_9(x))",
                    "\u2200x (p_8(x) \u2192 p_10(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))\n(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)\np_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_10(x))\np_9(Amos)\np_10(Amos)\n(p_9(Amos) \u2227 p_10(Amos))\n\u00acp_11(Amos)\np_9(Amos) \u2192 p_8(Amos)",
            "Initial Goal": "p_8(Amos)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos).",
                    "-p_7(Amos).",
                    "-p_3(Amos).",
                    "-p_5(Amos).",
                    "-p_4(Amos).",
                    "-p_2(Amos).",
                    "p_1(Amos).",
                    "p_0(Amos).",
                    "all x ((-(p_17(x) <-> p_6(x))) -> p_7(x)).",
                    "(-(p_3(Amos) <-> p_14(Amos))) -> p_5(Amos).",
                    "p_17(Amos) -> (-(p_16(Amos) <-> p_4(Amos))).",
                    "all x ((p_16(x) & p_15(x)) -> p_2(x)).",
                    "-(p_11(Amos) <-> p_1(Amos)).",
                    "(-(p_12(Amos) <-> p_14(Amos))) -> p_15(Amos).",
                    "all x (p_12(x) -> (p_9(x) | p_13(x))).",
                    "all x (p_8(x) -> p_9(x)).",
                    "all x (p_8(x) -> p_10(x)).",
                    "p_9(Amos).",
                    "p_10(Amos).",
                    "(p_9(Amos) & p_10(Amos)).",
                    "-p_11(Amos).",
                    "p_9(Amos) -> p_8(Amos)."
                ],
                "formulas(goals)": [
                    "p_8(Amos)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "((p_0(Amos) \u2227 p_10(Amos)) \u2192 \u00acp_8(Amos))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Amos) \u2192 p_8(Amos)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x (((p_17(x) \u2228 p_6(x)) \u2227 \u00ac(p_17(x) \u2227 p_6(x))) \u2192 p_7(x))\n((p_3(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_3(Amos) \u2227 p_14(Amos))) \u2192 p_5(Amos)\np_17(Amos) \u2192 ((p_16(Amos) \u2228 p_4(Amos)) \u2227 \u00ac(p_16(Amos) \u2227 p_4(Amos)))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n((p_12(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_12(Amos) \u2227 p_14(Amos))) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_10(x))\np_9(Amos)\np_10(Amos)\n(p_9(Amos) \u2227 p_10(Amos))\n\u00acp_11(Amos)\np_9(Amos) \u2192 p_8(Amos)",
            "Initial Goal": "p_8(Amos)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos)",
                    "-p_7(Amos)",
                    "-p_3(Amos)",
                    "-p_5(Amos)",
                    "-p_4(Amos)",
                    "-p_2(Amos)",
                    "p_1(Amos)",
                    "p_0(Amos)",
                    "all x (((p_17(x) | p_6(x)) & -(p_17(x) & p_6(x))) -> p_7(x))",
                    "((p_3(Amos) | p_14(Amos)) & -(p_3(Amos) & p_14(Amos))) -> p_5(Amos)",
                    "p_17(Amos) -> ((p_16(Amos) | p_4(Amos)) & -(p_16(Amos) & p_4(Amos)))",
                    "all x ((p_16(x) & p_15(x)) -> p_2(x))",
                    "-(p_11(Amos) <-> p_1(Amos))",
                    "((p_12(Amos) | p_14(Amos)) & -(p_12(Amos) & p_14(Amos))) -> p_15(Amos)",
                    "all x (p_12(x) -> (p_9(x) | p_13(x)))",
                    "all x (p_8(x) -> p_9(x))",
                    "all x (p_8(x) -> p_10(x))",
                    "p_9(Amos)",
                    "p_10(Amos)",
                    "p_9(Amos) & p_10(Amos)",
                    "-p_11(Amos)",
                    "p_9(Amos) -> p_8(Amos)"
                ],
                "formulas(goals)": [
                    "p_8(Amos)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_17(x) \u2295 p_6(x)) \u2192 p_7(x))",
                    "(p_3(Amos) \u2295 p_14(Amos)) \u2192 p_5(Amos)",
                    "p_17(Amos) \u2192 (p_16(Amos) \u2295 p_4(Amos))",
                    "(p_12(Amos) \u2295 p_14(Amos)) \u2192 p_15(Amos)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (((p_17(x) \u2228 p_6(x)) \u2227 \u00ac(p_17(x) \u2227 p_6(x))) \u2192 p_7(x))",
                    "((p_3(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_3(Amos) \u2227 p_14(Amos))) \u2192 p_5(Amos)",
                    "p_17(Amos) \u2192 ((p_16(Amos) \u2228 p_4(Amos)) \u2227 \u00ac(p_16(Amos) \u2227 p_4(Amos)))",
                    "((p_12(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_12(Amos) \u2227 p_14(Amos))) \u2192 p_15(Amos)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x (((p_17(x) \u2228 p_6(x)) \u2227 \u00ac(p_17(x) \u2227 p_6(x))) \u2192 p_7(x))\n((p_3(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_3(Amos) \u2227 p_14(Amos))) \u2192 p_5(Amos)\np_17(Amos) \u2192 ((p_16(Amos) \u2228 p_4(Amos)) \u2227 \u00ac(p_16(Amos) \u2227 p_4(Amos)))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n((p_12(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_12(Amos) \u2227 p_14(Amos))) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_10(x))\np_9(Amos)\np_10(Amos)\n(p_9(Amos) \u2227 p_10(Amos))\n\u00acp_11(Amos)\np_9(Amos) \u2192 p_8(Amos)\np_11(Amos) \u2228 p_1(Amos)\n\u00ac(p_11(Amos) \u2227 p_1(Amos))\np_8(Amos) \u2192 p_10(Amos)",
            "Initial Goal": "p_8(Amos)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos)",
                    "-p_7(Amos)",
                    "-p_3(Amos)",
                    "-p_5(Amos)",
                    "-p_4(Amos)",
                    "-p_2(Amos)",
                    "p_1(Amos)",
                    "p_0(Amos)",
                    "all x (((p_17(x) | p_6(x)) & -(p_17(x) & p_6(x))) -> p_7(x))",
                    "((p_3(Amos) | p_14(Amos)) & -(p_3(Amos) & p_14(Amos))) -> p_5(Amos)",
                    "p_17(Amos) -> ((p_16(Amos) | p_4(Amos)) & -(p_16(Amos) & p_4(Amos)))",
                    "all x ((p_16(x) & p_15(x)) -> p_2(x))",
                    "-(p_11(Amos) <-> p_1(Amos))",
                    "((p_12(Amos) | p_14(Amos)) & -(p_12(Amos) & p_14(Amos))) -> p_15(Amos)",
                    "all x (p_12(x) -> (p_9(x) | p_13(x)))",
                    "all x (p_8(x) -> p_9(x))",
                    "all x (p_8(x) -> p_10(x))",
                    "p_9(Amos)",
                    "p_10(Amos)",
                    "p_9(Amos) & p_10(Amos)",
                    "-p_11(Amos)",
                    "p_9(Amos) -> p_8(Amos)",
                    "p_11(Amos) | p_1(Amos)",
                    "-(p_11(Amos) & p_1(Amos))",
                    "p_8(Amos) -> p_10(Amos)"
                ],
                "formulas(goals)": [
                    "p_8(Amos)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_11(Amos) \u2228 p_1(Amos)",
                    "\u00ac(p_11(Amos) \u2227 p_1(Amos))"
                ],
                "added_rules": [
                    "p_8(Amos) \u2192 p_10(Amos)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_6(Amos)\n\u00acp_7(Amos)\n\u00acp_3(Amos)\n\u00acp_5(Amos)\n\u00acp_4(Amos)\n\u00acp_2(Amos)\np_1(Amos)\np_0(Amos)\n\u2200x (((p_17(x) \u2228 p_6(x)) \u2227 \u00ac(p_17(x) \u2227 p_6(x))) \u2192 p_7(x))\n((p_3(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_3(Amos) \u2227 p_14(Amos))) \u2192 p_5(Amos)\np_17(Amos) \u2192 ((p_16(Amos) \u2228 p_4(Amos)) \u2227 \u00ac(p_16(Amos) \u2227 p_4(Amos)))\n\u2200x ((p_16(x) \u2227 p_15(x)) \u2192 p_2(x))\np_11(Amos) \u2295 p_1(Amos)\n((p_12(Amos) \u2228 p_14(Amos)) \u2227 \u00ac(p_12(Amos) \u2227 p_14(Amos))) \u2192 p_15(Amos)\n\u2200x (p_12(x) \u2192 (p_9(x) \u2228 p_13(x)))\n\u2200x (p_8(x) \u2192 p_9(x))\n\u2200x (p_8(x) \u2192 p_10(x))\np_9(Amos)\np_10(Amos)\np_9(Amos) \u2227 p_10(Amos)\n\u00acp_11(Amos)\np_9(Amos) \u2192 p_8(Amos)\np_11(Amos) \u2228 p_1(Amos)\n\u00ac(p_11(Amos) \u2227 p_1(Amos))\np_8(Amos) \u2192 p_10(Amos)\np_8(Amos)\n\u2200x (\u00acp_10(x) \u2192 \u00acp_8(x))",
            "Initial Goal": "p_8(Amos)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_6(Amos)",
                    "-p_7(Amos)",
                    "-p_3(Amos)",
                    "-p_5(Amos)",
                    "-p_4(Amos)",
                    "-p_2(Amos)",
                    "p_1(Amos)",
                    "p_0(Amos)",
                    "all x (( (p_17(x) | p_6(x)) & -(p_17(x) & p_6(x)) ) -> p_7(x))",
                    "( (p_3(Amos) | p_14(Amos)) & -(p_3(Amos) & p_14(Amos)) ) -> p_5(Amos)",
                    "p_17(Amos) -> ( (p_16(Amos) | p_4(Amos)) & -(p_16(Amos) & p_4(Amos)) )",
                    "all x ( (p_16(x) & p_15(x)) -> p_2(x) )",
                    "-(p_11(Amos) <-> p_1(Amos))",
                    "( (p_12(Amos) | p_14(Amos)) & -(p_12(Amos) & p_14(Amos)) ) -> p_15(Amos)",
                    "all x ( p_12(x) -> (p_9(x) | p_13(x)) )",
                    "all x ( p_8(x) -> p_9(x) )",
                    "all x ( p_8(x) -> p_10(x) )",
                    "p_9(Amos)",
                    "p_10(Amos)",
                    "p_9(Amos) & p_10(Amos)",
                    "-p_11(Amos)",
                    "p_9(Amos) -> p_8(Amos)",
                    "p_11(Amos) | p_1(Amos)",
                    "-(p_11(Amos) & p_1(Amos))",
                    "p_8(Amos) -> p_10(Amos)",
                    "p_8(Amos)",
                    "all x ( (-p_10(x)) -> (-p_8(x)) )"
                ],
                "formulas(goals)": [
                    "p_8(Amos)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_8(Amos)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_10(x) \u2192 \u00acp_8(x))"
                ]
            }
        }
    ]
}