{
    "background_story": "Eithan was a young artist from a small village in Mexico. He was known for his vibrant paintings and his love for traditional clothing, especially the colorful serape his abuelo used to wear. The serape, with its intricate weave and symbolic patterns, inspired Eithan's artwork, which often depicted scenes of village life and folklore. As Eithan's art gained recognition, he began to incorporate the serape into his designs, using its colors and motifs to tell stories of his heritage. Soon, his studio became a hub for local artisans, where they would gather to share stories and create beautiful textiles, including the iconic serape that had become a symbol of Eithan's connection to his roots.",
    "predicates": [
        {
            "id": 0,
            "name": "designer"
        },
        {
            "id": 1,
            "name": "collector"
        },
        {
            "id": 2,
            "name": "embroider"
        },
        {
            "id": 3,
            "name": "purist"
        },
        {
            "id": 4,
            "name": "dyes_fabrics"
        },
        {
            "id": 5,
            "name": "makes_clothes"
        },
        {
            "id": 6,
            "name": "traditionalist"
        },
        {
            "id": 7,
            "name": "modernist"
        },
        {
            "id": 8,
            "name": "artist"
        },
        {
            "id": 9,
            "name": "craftsman"
        },
        {
            "id": 10,
            "name": "weaver"
        },
        {
            "id": 11,
            "name": "creator"
        },
        {
            "id": 12,
            "name": "tailor"
        },
        {
            "id": 13,
            "name": "seamster"
        },
        {
            "id": 14,
            "name": "likes_color"
        },
        {
            "id": 15,
            "name": "loves_color"
        },
        {
            "id": 16,
            "name": "paints_vibrantly"
        },
        {
            "id": 17,
            "name": "respects_culture"
        },
        {
            "id": 18,
            "name": "loves_textiles"
        },
        {
            "id": 19,
            "name": "makes_rugs"
        },
        {
            "id": 20,
            "name": "paints_murals"
        },
        {
            "id": 21,
            "name": "knows_patterns"
        },
        {
            "id": 22,
            "name": "works_with_thread"
        },
        {
            "id": 23,
            "name": "makes_textiles"
        }
    ],
    "subject_name": "Eithan",
    "subject_category": "human",
    "keyword": "serape",
    "all_facts": [
        {
            "id": 0,
            "subject": "Eithan",
            "text": "Eithan is a designer.",
            "fol": "p_0(Eithan)",
            "str_fol": "designer(Eithan)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Eithan",
            "text": "Eithan is a collector, gathering and preserving existing works.",
            "fol": "p_1(Eithan)",
            "str_fol": "collector(Eithan)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Eithan",
            "text": "Eithan is not an embroiderer.",
            "fol": "\u00acp_2(Eithan)",
            "str_fol": "\u00acembroider(Eithan)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Eithan",
            "text": "Eithan is not a purist.",
            "fol": "\u00acp_3(Eithan)",
            "str_fol": "\u00acpurist(Eithan)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Eithan",
            "text": "Eithan dyes fabrics.",
            "fol": "p_4(Eithan)",
            "str_fol": "dyes_fabrics(Eithan)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Eithan",
            "text": "Eithan does not make clothes.",
            "fol": "\u00acp_5(Eithan)",
            "str_fol": "\u00acmakes_clothes(Eithan)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Eithan",
            "text": "Eithan is a seamster.",
            "fol": "p_13(Eithan)",
            "str_fol": "seamster(Eithan)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Eithan",
            "text": "Eithan is a tailor.",
            "fol": "p_12(Eithan)",
            "str_fol": "tailor(Eithan)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Eithan",
            "text": "Eithan is not a creator.",
            "fol": "\u00acp_11(Eithan)",
            "str_fol": "\u00accreator(Eithan)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Eithan",
            "text": "Eithan is not a weaver.",
            "fol": "\u00acp_10(Eithan)",
            "str_fol": "\u00acweaver(Eithan)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Eithan",
            "text": "Eithan is not a craftsman.",
            "fol": "\u00acp_9(Eithan)",
            "str_fol": "\u00accraftsman(Eithan)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Eithan",
            "text": "Eithan is an artist.",
            "fol": "p_8(Eithan)",
            "str_fol": "artist(Eithan)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Eithan",
            "text": "Eithan is a traditionalist.",
            "fol": "p_6(Eithan)",
            "str_fol": "traditionalist(Eithan)",
            "negation": false
        },
        {
            "id": 13,
            "subject": "Eithan",
            "text": "Eithan is not a modernist.",
            "fol": "\u00acp_7(Eithan)",
            "str_fol": "\u00acmodernist(Eithan)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Eithan",
            "text": "Eithan dyes fabrics.",
            "fol": "p_4(Eithan)",
            "str_fol": "dyes_fabrics(Eithan)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Eithan",
            "text": "Eithan does not make clothes.",
            "fol": "\u00acp_5(Eithan)",
            "str_fol": "\u00acmakes_clothes(Eithan)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Eithan",
            "text": "Eithan is not an embroiderer.",
            "fol": "\u00acp_2(Eithan)",
            "str_fol": "\u00acembroider(Eithan)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Eithan",
            "text": "Eithan is a collector, gathering and preserving existing works.",
            "fol": "p_1(Eithan)",
            "str_fol": "collector(Eithan)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Eithan",
            "text": "Eithan is a designer.",
            "fol": "p_0(Eithan)",
            "str_fol": "designer(Eithan)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Eithan",
            "text": "Eithan is not a purist.",
            "fol": "\u00acp_3(Eithan)",
            "str_fol": "\u00acpurist(Eithan)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "For all humans, if someone is either a seamster or dyes fabrics, then they make clothes.",
            "fol": "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((seamster(x) \u2295 dyes_fabrics(x)) \u2192 makes_clothes(x))"
        },
        {
            "id": 6,
            "text": "If Eithan is a seamster, then he is either a tailor or an embroiderer, but not both.",
            "fol": "p_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))",
            "str_fol": "seamster(Eithan) \u2192 (tailor(Eithan) \u2295 embroider(Eithan))"
        },
        {
            "id": 5,
            "text": "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
            "fol": "p_11(Eithan) \u2295 p_1(Eithan)",
            "str_fol": "creator(Eithan) \u2295 collector(Eithan)"
        },
        {
            "id": 4,
            "text": "If Eithan is a designer, then he is either a weaver or a tailor, but not both.",
            "fol": "p_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))",
            "str_fol": "designer(Eithan) \u2192 (weaver(Eithan) \u2295 tailor(Eithan))"
        },
        {
            "id": 3,
            "text": "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
            "fol": "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((craftsman(x) \u2295 weaver(x)) \u2192 creator(x))"
        },
        {
            "id": 2,
            "text": "Eithan is either an artist or a craftsman, but not both.",
            "fol": "p_8(Eithan) \u2295 p_9(Eithan)",
            "str_fol": "artist(Eithan) \u2295 craftsman(Eithan)"
        },
        {
            "id": 1,
            "text": "If Eithan is an artist, then he is either a traditionalist or a purist, but not both.",
            "fol": "p_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))",
            "str_fol": "artist(Eithan) \u2192 (traditionalist(Eithan) \u2295 purist(Eithan))"
        },
        {
            "id": 0,
            "text": "Eithan is either a traditionalist or a modernist, but not both.",
            "fol": "p_6(Eithan) \u2295 p_7(Eithan)",
            "str_fol": "traditionalist(Eithan) \u2295 modernist(Eithan)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Eithan",
            "text": "Eithan dyes fabrics.",
            "fol": "p_4(Eithan)",
            "str_fol": "dyes_fabrics(Eithan)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Eithan",
            "text": "Eithan does not make clothes.",
            "fol": "\u00acp_5(Eithan)",
            "str_fol": "\u00acmakes_clothes(Eithan)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Eithan",
            "text": "Eithan is not an embroiderer.",
            "fol": "\u00acp_2(Eithan)",
            "str_fol": "\u00acembroider(Eithan)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Eithan",
            "text": "Eithan is a collector, gathering and preserving existing works.",
            "fol": "p_1(Eithan)",
            "str_fol": "collector(Eithan)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Eithan",
            "text": "Eithan is a designer.",
            "fol": "p_0(Eithan)",
            "str_fol": "designer(Eithan)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Eithan",
            "text": "Eithan is not a purist.",
            "fol": "\u00acp_3(Eithan)",
            "str_fol": "\u00acpurist(Eithan)",
            "negation": true
        },
        {
            "id": 7,
            "text": "For all humans, if someone is either a seamster or dyes fabrics, then they make clothes.",
            "fol": "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((seamster(x) \u2295 dyes_fabrics(x)) \u2192 makes_clothes(x))"
        },
        {
            "id": 6,
            "text": "If Eithan is a seamster, then he is either a tailor or an embroiderer, but not both.",
            "fol": "p_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))",
            "str_fol": "seamster(Eithan) \u2192 (tailor(Eithan) \u2295 embroider(Eithan))"
        },
        {
            "id": 5,
            "text": "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
            "fol": "p_11(Eithan) \u2295 p_1(Eithan)",
            "str_fol": "creator(Eithan) \u2295 collector(Eithan)"
        },
        {
            "id": 4,
            "text": "If Eithan is a designer, then he is either a weaver or a tailor, but not both.",
            "fol": "p_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))",
            "str_fol": "designer(Eithan) \u2192 (weaver(Eithan) \u2295 tailor(Eithan))"
        },
        {
            "id": 3,
            "text": "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
            "fol": "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((craftsman(x) \u2295 weaver(x)) \u2192 creator(x))"
        },
        {
            "id": 2,
            "text": "Eithan is either an artist or a craftsman, but not both.",
            "fol": "p_8(Eithan) \u2295 p_9(Eithan)",
            "str_fol": "artist(Eithan) \u2295 craftsman(Eithan)"
        },
        {
            "id": 1,
            "text": "If Eithan is an artist, then he is either a traditionalist or a purist, but not both.",
            "fol": "p_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))",
            "str_fol": "artist(Eithan) \u2192 (traditionalist(Eithan) \u2295 purist(Eithan))"
        },
        {
            "id": 0,
            "text": "Eithan is either a traditionalist or a modernist, but not both.",
            "fol": "p_6(Eithan) \u2295 p_7(Eithan)",
            "str_fol": "traditionalist(Eithan) \u2295 modernist(Eithan)"
        }
    ],
    "context_fol": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))\np_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\np_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\np_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))\np_6(Eithan) \u2295 p_7(Eithan)",
    "conclusion": {
        "id": 13,
        "subject": "Eithan",
        "text": "Eithan is not a modernist.",
        "fol": "\u00acp_7(Eithan)",
        "str_fol": "\u00acmodernist(Eithan)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_7(Eithan)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Eithan",
                    "text": "Eithan dyes fabrics.",
                    "fol": "p_4(Eithan)",
                    "str_fol": "dyes_fabrics(Eithan)",
                    "negation": false
                },
                {
                    "id": 5,
                    "subject": "Eithan",
                    "text": "Eithan does not make clothes.",
                    "fol": "\u00acp_5(Eithan)",
                    "str_fol": "\u00acmakes_clothes(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "For all humans, if someone is either a seamster or dyes fabrics, then they make clothes.",
                    "fol": "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((seamster(x) \u2295 dyes_fabrics(x)) \u2192 makes_clothes(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Eithan",
                "text": "Eithan is a seamster.",
                "fol": "p_13(Eithan)",
                "str_fol": "seamster(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Eithan",
                    "text": "Eithan is a seamster.",
                    "fol": "p_13(Eithan)",
                    "str_fol": "seamster(Eithan)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Eithan",
                    "text": "Eithan is not an embroiderer.",
                    "fol": "\u00acp_2(Eithan)",
                    "str_fol": "\u00acembroider(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Eithan is a seamster, then he is either a tailor or an embroiderer, but not both.",
                    "fol": "p_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))",
                    "str_fol": "seamster(Eithan) \u2192 (tailor(Eithan) \u2295 embroider(Eithan))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Eithan",
                "text": "Eithan is a tailor.",
                "fol": "p_12(Eithan)",
                "str_fol": "tailor(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Eithan",
                    "text": "Eithan is a collector, gathering and preserving existing works.",
                    "fol": "p_1(Eithan)",
                    "str_fol": "collector(Eithan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Eithan is either a creator, bringing new ideas to life, or a collector, gathering and preserving existing works, but not both.",
                    "fol": "p_11(Eithan) \u2295 p_1(Eithan)",
                    "str_fol": "creator(Eithan) \u2295 collector(Eithan)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Eithan",
                "text": "Eithan is not a creator.",
                "fol": "\u00acp_11(Eithan)",
                "str_fol": "\u00accreator(Eithan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Eithan",
                    "text": "Eithan is a designer.",
                    "fol": "p_0(Eithan)",
                    "str_fol": "designer(Eithan)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Eithan",
                    "text": "Eithan is a tailor.",
                    "fol": "p_12(Eithan)",
                    "str_fol": "tailor(Eithan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Eithan is a designer, then he is either a weaver or a tailor, but not both.",
                    "fol": "p_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))",
                    "str_fol": "designer(Eithan) \u2192 (weaver(Eithan) \u2295 tailor(Eithan))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Eithan",
                "text": "Eithan is not a weaver.",
                "fol": "\u00acp_10(Eithan)",
                "str_fol": "\u00acweaver(Eithan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Eithan",
                    "text": "Eithan is not a weaver.",
                    "fol": "\u00acp_10(Eithan)",
                    "str_fol": "\u00acweaver(Eithan)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Eithan",
                    "text": "Eithan is not a creator.",
                    "fol": "\u00acp_11(Eithan)",
                    "str_fol": "\u00accreator(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone is either a craftsman or a weaver (but not both), then they are a creator.",
                    "fol": "\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((craftsman(x) \u2295 weaver(x)) \u2192 creator(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Eithan",
                "text": "Eithan is not a craftsman.",
                "fol": "\u00acp_9(Eithan)",
                "str_fol": "\u00accraftsman(Eithan)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Eithan",
                    "text": "Eithan is not a craftsman.",
                    "fol": "\u00acp_9(Eithan)",
                    "str_fol": "\u00accraftsman(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Eithan is either an artist or a craftsman, but not both.",
                    "fol": "p_8(Eithan) \u2295 p_9(Eithan)",
                    "str_fol": "artist(Eithan) \u2295 craftsman(Eithan)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Eithan",
                "text": "Eithan is an artist.",
                "fol": "p_8(Eithan)",
                "str_fol": "artist(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Eithan",
                    "text": "Eithan is an artist.",
                    "fol": "p_8(Eithan)",
                    "str_fol": "artist(Eithan)",
                    "negation": false
                },
                {
                    "id": 3,
                    "subject": "Eithan",
                    "text": "Eithan is not a purist.",
                    "fol": "\u00acp_3(Eithan)",
                    "str_fol": "\u00acpurist(Eithan)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Eithan is an artist, then he is either a traditionalist or a purist, but not both.",
                    "fol": "p_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))",
                    "str_fol": "artist(Eithan) \u2192 (traditionalist(Eithan) \u2295 purist(Eithan))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Eithan",
                "text": "Eithan is a traditionalist.",
                "fol": "p_6(Eithan)",
                "str_fol": "traditionalist(Eithan)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Eithan",
                    "text": "Eithan is a traditionalist.",
                    "fol": "p_6(Eithan)",
                    "str_fol": "traditionalist(Eithan)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Eithan is either a traditionalist or a modernist, but not both.",
                    "fol": "p_6(Eithan) \u2295 p_7(Eithan)",
                    "str_fol": "traditionalist(Eithan) \u2295 modernist(Eithan)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Eithan",
                "text": "Eithan is not a modernist.",
                "fol": "\u00acp_7(Eithan)",
                "str_fol": "\u00acmodernist(Eithan)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 (all x (-(p_13(x) <-> p_4(x)) -> p_5(x))).  [assumption].\n2 p_13(Eithan) -> -(p_12(Eithan) <-> p_2(Eithan)).  [assumption].\n3 -(p_11(Eithan) <-> p_1(Eithan)).  [assumption].\n4 p_0(Eithan) -> -(p_10(Eithan) <-> p_12(Eithan)).  [assumption].\n5 (all x (-(p_9(x) <-> p_10(x)) -> p_11(x))).  [assumption].\n6 -(p_8(Eithan) <-> p_9(Eithan)).  [assumption].\n7 p_8(Eithan) -> -(p_6(Eithan) <-> p_3(Eithan)).  [assumption].\n8 -(p_6(Eithan) <-> p_7(Eithan)).  [assumption].\n9 -p_7(Eithan).  [goal].\n10 p_13(x) | -p_4(x) | p_5(x).  [clausify(1)].\n11 p_4(Eithan).  [assumption].\n13 p_13(Eithan) | p_5(Eithan).  [resolve(10,b,11,a)].\n14 -p_5(Eithan).  [assumption].\n15 -p_13(Eithan) | p_12(Eithan) | p_2(Eithan).  [clausify(2)].\n16 -p_2(Eithan).  [assumption].\n18 -p_11(Eithan) | -p_1(Eithan).  [clausify(3)].\n19 p_1(Eithan).  [assumption].\n22 p_0(Eithan).  [assumption].\n23 -p_0(Eithan) | -p_10(Eithan) | -p_12(Eithan).  [clausify(4)].\n24 -p_8(Eithan) | p_6(Eithan) | p_3(Eithan).  [clausify(7)].\n25 -p_3(Eithan).  [assumption].\n28 -p_9(x) | p_10(x) | p_11(x).  [clausify(5)].\n29 p_8(Eithan) | p_9(Eithan).  [clausify(6)].\n31 -p_6(Eithan) | -p_7(Eithan).  [clausify(8)].\n33 -p_8(Eithan) | p_6(Eithan).  [resolve(24,c,25,a)].\n34 -p_8(Eithan) | -p_7(Eithan).  [resolve(33,b,31,a)].\n35 p_7(Eithan).  [deny(9)].\n36 -p_13(Eithan) | p_12(Eithan).  [resolve(15,c,16,a)].\n37 p_13(Eithan).  [resolve(13,b,14,a)].\n38 p_8(Eithan) | p_10(Eithan) | p_11(Eithan).  [resolve(29,b,28,a)].\n39 -p_11(Eithan).  [resolve(18,b,19,a)].\n41 -p_10(Eithan) | -p_12(Eithan).  [resolve(23,a,22,a)].\n43 p_8(Eithan) | p_10(Eithan).  [resolve(38,c,39,a)].\n44 p_8(Eithan) | -p_12(Eithan).  [resolve(43,b,41,a)].\n45 -p_8(Eithan).  [resolve(34,b,35,a)].\n46 -p_12(Eithan).  [resolve(44,a,45,a)].\n47 p_12(Eithan).  [resolve(36,a,37,a)].\n48 $F.  [resolve(46,a,47,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\np_13(Eithan) \u2192 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\np_0(Eithan) \u2192 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\np_8(Eithan) \u2192 (p_6(Eithan) \u2295 p_3(Eithan))\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan)",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "p_13(Eithan) -> (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "p_0(Eithan) -> (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "p_8(Eithan) -> (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan)"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_13(x) \u2295 p_4(x)) \u2192 p_5(x))"
                ],
                "added_facts": [
                    "p_12(Eithan)",
                    "p_6(Eithan)"
                ],
                "added_rules": [
                    "\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\n\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\n\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\n\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan)\np_6(Eithan) \u2228 \u00acp_6(Eithan)\n\u00acp_7(Eithan)\n\u2200x (p_6(x) \u2192 \u00acp_7(x))\np_12(Eithan) \u2228 \u00acp_12(Eithan)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "-p_13(Eithan) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "-p_0(Eithan) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "-p_8(Eithan) | (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan)",
                    "p_6(Eithan) | -p_6(Eithan)",
                    "-p_7(Eithan)",
                    "all x (p_6(x) -> -p_7(x))",
                    "p_12(Eithan) | -p_12(Eithan)",
                    "all x (p_7(x) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Eithan) \u2228 \u00acp_6(Eithan)",
                    "\u00acp_7(Eithan)",
                    "p_12(Eithan) \u2228 \u00acp_12(Eithan)"
                ],
                "added_rules": [
                    "\u2200x (p_6(x) \u2192 \u00acp_7(x))",
                    "\u2200x (p_7(x) \u2192 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\n\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\n\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\n\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan) \u2228 \u00acp_6(Eithan)\n\u2200x (p_6(x) \u2192 \u00acp_7(x))\np_12(Eithan) \u2228 \u00acp_12(Eithan)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 \u00acp_6(x))",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "(-p_13(Eithan) | (p_12(Eithan) <-> -p_2(Eithan)))",
                    "(p_11(Eithan) <-> -p_1(Eithan))",
                    "(-p_0(Eithan) | (p_10(Eithan) <-> -p_12(Eithan)))",
                    "all x ((p_9(x) <-> -p_10(x)) -> p_11(x))",
                    "(p_8(Eithan) <-> -p_9(Eithan))",
                    "(-p_8(Eithan) | (p_6(Eithan) <-> -p_3(Eithan)))",
                    "(p_6(Eithan) <-> -p_7(Eithan))",
                    "p_12(Eithan)",
                    "(p_6(Eithan) | -p_6(Eithan))",
                    "all x (p_6(x) -> -p_7(x))",
                    "(p_12(Eithan) | -p_12(Eithan))",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x ((p_12(x) & p_4(x)) -> -p_6(x))"
                ],
                "formulas(goals)": [
                    "--p_7(Eithan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Eithan)",
                    "\u00acp_7(Eithan)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\n\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\n\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\n\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan) \u2228 \u00acp_6(Eithan)\n\u2200x (p_6(x) \u2192 \u00acp_7(x))\np_12(Eithan) \u2228 \u00acp_12(Eithan)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_6(x))",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "(-p_13(Eithan)) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "(-(p_11(Eithan) <-> p_1(Eithan)))",
                    "(-p_0(Eithan)) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "(-(p_8(Eithan) <-> p_9(Eithan)))",
                    "(-p_8(Eithan)) | (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "(-(p_6(Eithan) <-> p_7(Eithan)))",
                    "p_12(Eithan)",
                    "(p_6(Eithan)) | (-p_6(Eithan))",
                    "all x (p_6(x) -> -p_7(x))",
                    "(p_12(Eithan)) | (-p_12(Eithan))",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x ((p_12(x) & p_4(x)) -> p_6(x))"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 \u00acp_6(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\n\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\n\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\n\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan) \u2228 \u00acp_6(Eithan)\n\u2200x (p_6(x) \u2192 \u00acp_7(x))\np_12(Eithan) \u2228 \u00acp_12(Eithan)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x (\u00acp_12(x) \u2228 \u00acp_4(x) \u2228 p_6(x))\np_6(Eithan)",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "-p_13(Eithan) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "-p_0(Eithan) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "-p_8(Eithan) | (-(p_6(Eithan) <-> p_3(Eithan)))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan) | -p_6(Eithan)",
                    "all x (p_6(x) -> -p_7(x))",
                    "p_12(Eithan) | -p_12(Eithan)",
                    "all x (p_7(x) -> -p_6(x))",
                    "all x (-p_12(x) | -p_4(x) | p_6(x))",
                    "p_6(Eithan)"
                ],
                "formulas(goals)": [
                    "-p_7(Eithan)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_12(x) \u2227 p_4(x)) \u2192 p_6(x))"
                ],
                "added_facts": [
                    "p_6(Eithan)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_12(x) \u2228 \u00acp_4(x) \u2228 p_6(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\n\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\n\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan) \u2228 \u00acp_6(Eithan)\n\u2200x (p_6(x) \u2192 \u00acp_7(x))\np_12(Eithan) \u2228 \u00acp_12(Eithan)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x (p_4(x) \u2192 \u00acp_6(x))",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan)",
                    "-p_5(Eithan)",
                    "-p_2(Eithan)",
                    "p_1(Eithan)",
                    "p_0(Eithan)",
                    "-p_3(Eithan)",
                    "all x ((p_13(x) & p_4(x)) -> p_5(x))",
                    "(-p_13(Eithan)) | (-(p_12(Eithan) <-> p_2(Eithan)))",
                    "-(p_11(Eithan) <-> p_1(Eithan))",
                    "(-p_0(Eithan)) | (-(p_10(Eithan) <-> p_12(Eithan)))",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x))",
                    "-(p_8(Eithan) <-> p_9(Eithan))",
                    "-(p_6(Eithan) <-> p_7(Eithan))",
                    "p_12(Eithan)",
                    "p_6(Eithan) | (-p_6(Eithan))",
                    "all x (p_6(x) -> (-p_7(x)))",
                    "p_12(Eithan) | (-p_12(Eithan))",
                    "all x (p_7(x) -> (-p_6(x)))",
                    "all x (p_4(x) -> (-p_6(x)))"
                ],
                "formulas(goals)": [
                    "-(-p_7(Eithan))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Eithan)"
                ],
                "removed_rules": [
                    "\u2200x (\u00acp_12(x) \u2228 \u00acp_4(x) \u2228 p_6(x))",
                    "\u00acp_8(Eithan) \u2228 (p_6(Eithan) \u2295 p_3(Eithan))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_4(x) \u2192 \u00acp_6(x))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_4(Eithan)\n\u00acp_5(Eithan)\n\u00acp_2(Eithan)\np_1(Eithan)\np_0(Eithan)\n\u00acp_3(Eithan)\n\u2200x ((p_13(x) \u2227 p_4(x)) \u2192 p_5(x))\n\u00acp_13(Eithan) \u2228 (p_12(Eithan) \u2295 p_2(Eithan))\np_11(Eithan) \u2295 p_1(Eithan)\n\u00acp_0(Eithan) \u2228 (p_10(Eithan) \u2295 p_12(Eithan))\n\u2200x ((p_9(x) \u2295 p_10(x)) \u2192 p_11(x))\np_8(Eithan) \u2295 p_9(Eithan)\np_6(Eithan) \u2295 p_7(Eithan)\np_12(Eithan)\np_6(Eithan) \u2228 \u00acp_6(Eithan)\n\u2200x (p_6(x) \u2192 \u00acp_7(x))\np_12(Eithan) \u2228 \u00acp_12(Eithan)\n\u2200x (p_7(x) \u2192 \u00acp_6(x))\n\u2200x (p_4(x) \u2192 \u00acp_6(x))\np_7(Eithan)\n\u00acp_6(Eithan)\n\u00acp_13(Eithan)\n\u00acp_11(Eithan)\n\u00acp_10(Eithan)\n\u00acp_9(Eithan)\np_8(Eithan)",
            "Initial Goal": "\u00acp_7(Eithan)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_4(Eithan).",
                    "-p_5(Eithan).",
                    "-p_2(Eithan).",
                    "p_1(Eithan).",
                    "p_0(Eithan).",
                    "-p_3(Eithan).",
                    "all x (-(p_13(x) & p_4(x)) | p_5(x)).",
                    "-p_13(Eithan) | (-(p_12(Eithan) <-> p_2(Eithan))).",
                    "-(p_11(Eithan) <-> p_1(Eithan)).",
                    "-p_0(Eithan) | (-(p_10(Eithan) <-> p_12(Eithan))).",
                    "all x ((-(p_9(x) <-> p_10(x))) -> p_11(x)).",
                    "-(p_8(Eithan) <-> p_9(Eithan)).",
                    "-(p_6(Eithan) <-> p_7(Eithan)).",
                    "p_12(Eithan).",
                    "p_6(Eithan) | -p_6(Eithan).",
                    "all x (-p_6(x) | -p_7(x)).",
                    "p_12(Eithan) | -p_12(Eithan).",
                    "all x (-p_7(x) | -p_6(x)).",
                    "all x (-p_4(x) | -p_6(x)).",
                    "p_7(Eithan).",
                    "-p_6(Eithan).",
                    "-p_13(Eithan).",
                    "-p_11(Eithan).",
                    "-p_10(Eithan).",
                    "-p_9(Eithan).",
                    "p_8(Eithan)."
                ],
                "formulas(goals)": [
                    "p_7(Eithan)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Eithan)",
                    "\u00acp_6(Eithan)",
                    "\u00acp_13(Eithan)",
                    "\u00acp_11(Eithan)",
                    "\u00acp_10(Eithan)",
                    "\u00acp_9(Eithan)",
                    "p_8(Eithan)"
                ],
                "added_rules": []
            }
        }
    ]
}