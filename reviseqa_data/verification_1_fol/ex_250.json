{
    "background_story": "Saeedi, a passionate baker, had always been fascinated by the art of creating delicious pastries. However, after being diagnosed with gluten intolerance, she found herself at a crossroads. Instead of giving up on her dreams, Saeedi decided to explore the world of gluten-free baking. She spent months experimenting with alternative flours and ingredients, determined to create treats that were just as tasty as their traditional counterparts. Her hard work paid off when she opened her own bakery, specializing in gluten-free delights. Saeedi's bakery quickly became a haven for those with gluten intolerance and sensitivity, offering them a wide range of mouthwatering options they thought they'd never enjoy again. Her dedication to gluten-free baking not only changed her own life but also brought joy to countless others.",
    "predicates": [
        {
            "id": 0,
            "name": "care_diet"
        },
        {
            "id": 1,
            "name": "make_smart_choices"
        },
        {
            "id": 2,
            "name": "create_recipes"
        },
        {
            "id": 3,
            "name": "run_bakery"
        },
        {
            "id": 4,
            "name": "gluten_intolerant"
        },
        {
            "id": 5,
            "name": "eat_gluten_free"
        },
        {
            "id": 6,
            "name": "avoid_wheat"
        },
        {
            "id": 7,
            "name": "stay_healthy"
        },
        {
            "id": 8,
            "name": "feel_energized"
        },
        {
            "id": 9,
            "name": "read_labels"
        },
        {
            "id": 10,
            "name": "get_exercise"
        },
        {
            "id": 11,
            "name": "bake_regularly"
        },
        {
            "id": 12,
            "name": "chooses_rice"
        },
        {
            "id": 13,
            "name": "eat_nutritious"
        },
        {
            "id": 14,
            "name": "has_allergy"
        },
        {
            "id": 15,
            "name": "take_medication"
        },
        {
            "id": 16,
            "name": "pursue_passion"
        },
        {
            "id": 17,
            "name": "find_happiness"
        },
        {
            "id": 18,
            "name": "has_routine"
        },
        {
            "id": 19,
            "name": "enjoys_outdoors"
        },
        {
            "id": 20,
            "name": "check_ingredients"
        },
        {
            "id": 21,
            "name": "ask_questions"
        },
        {
            "id": 22,
            "name": "enjoy_cooking"
        },
        {
            "id": 23,
            "name": "try_new_ingredients"
        }
    ],
    "subject_name": "Saeedi",
    "subject_category": "human",
    "keyword": "gluten",
    "all_facts": [
        {
            "id": 0,
            "subject": "Saeedi",
            "text": "Saeedi does not care about her diet.",
            "fol": "\u00acp_0(Saeedi)",
            "str_fol": "\u00accare_diet(Saeedi)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Saeedi",
            "text": "Saeedi does not make smart food choices.",
            "fol": "\u00acp_1(Saeedi)",
            "str_fol": "\u00acmake_smart_choices(Saeedi)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Saeedi",
            "text": "Saeedi does not create recipes.",
            "fol": "\u00acp_2(Saeedi)",
            "str_fol": "\u00accreate_recipes(Saeedi)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Saeedi",
            "text": "Saeedi does not run a bakery.",
            "fol": "\u00acp_3(Saeedi)",
            "str_fol": "\u00acrun_bakery(Saeedi)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Saeedi",
            "text": "Saeedi does not bake regularly.",
            "fol": "\u00acp_11(Saeedi)",
            "str_fol": "\u00acbake_regularly(Saeedi)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Saeedi",
            "text": "Saeedi does not read food labels.",
            "fol": "\u00acp_9(Saeedi)",
            "str_fol": "\u00acread_labels(Saeedi)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Saeedi",
            "text": "Saeedi gets regular exercise.",
            "fol": "p_10(Saeedi)",
            "str_fol": "get_exercise(Saeedi)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Saeedi",
            "text": "Saeedi feels energized.",
            "fol": "p_8(Saeedi)",
            "str_fol": "feel_energized(Saeedi)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Saeedi",
            "text": "Saeedi does not eat gluten-free.",
            "fol": "\u00acp_5(Saeedi)",
            "str_fol": "\u00aceat_gluten_free(Saeedi)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Saeedi",
            "text": "Saeedi does not stay healthy.",
            "fol": "\u00acp_7(Saeedi)",
            "str_fol": "\u00acstay_healthy(Saeedi)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Saeedi",
            "text": "Saeedi does not avoid wheat.",
            "fol": "\u00acp_6(Saeedi)",
            "str_fol": "\u00acavoid_wheat(Saeedi)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Saeedi",
            "text": "Saeedi is not gluten intolerant.",
            "fol": "\u00acp_4(Saeedi)",
            "str_fol": "\u00acgluten_intolerant(Saeedi)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 2,
            "subject": "Saeedi",
            "text": "Saeedi does not create recipes.",
            "fol": "\u00acp_2(Saeedi)",
            "str_fol": "\u00accreate_recipes(Saeedi)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Saeedi",
            "text": "Saeedi does not run a bakery.",
            "fol": "\u00acp_3(Saeedi)",
            "str_fol": "\u00acrun_bakery(Saeedi)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Saeedi",
            "text": "Saeedi does not make smart food choices.",
            "fol": "\u00acp_1(Saeedi)",
            "str_fol": "\u00acmake_smart_choices(Saeedi)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Saeedi",
            "text": "Saeedi does not care about her diet.",
            "fol": "\u00acp_0(Saeedi)",
            "str_fol": "\u00accare_diet(Saeedi)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Saeedi bakes regularly, then she either creates recipes or runs a bakery.",
            "fol": "p_11(Saeedi) \u2192 (p_2(Saeedi) \u2228 p_3(Saeedi))",
            "str_fol": "bake_regularly(Saeedi) \u2192 (create_recipes(Saeedi) \u2228 run_bakery(Saeedi))"
        },
        {
            "id": 6,
            "text": "If Saeedi reads food labels, then she makes smart food choices.",
            "fol": "p_9(Saeedi) \u2192 p_1(Saeedi)",
            "str_fol": "read_labels(Saeedi) \u2192 make_smart_choices(Saeedi)"
        },
        {
            "id": 5,
            "text": "Either Saeedi gets exercise or she bakes regularly, but not both.",
            "fol": "p_10(Saeedi) \u2295 p_11(Saeedi)",
            "str_fol": "get_exercise(Saeedi) \u2295 bake_regularly(Saeedi)"
        },
        {
            "id": 4,
            "text": "If Saeedi gets regular exercise, then she feels energized.",
            "fol": "p_10(Saeedi) \u2192 p_8(Saeedi)",
            "str_fol": "get_exercise(Saeedi) \u2192 feel_energized(Saeedi)"
        },
        {
            "id": 3,
            "text": "If someone eats gluten-free, then they care about their diet and read food labels.",
            "fol": "\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (eat_gluten_free(x) \u2192 (care_diet(x) \u2227 read_labels(x)))"
        },
        {
            "id": 2,
            "text": "For Saeedi, either she feels energized or she stays healthy, but not both at the same time.",
            "fol": "p_8(Saeedi) \u2295 p_7(Saeedi)",
            "str_fol": "feel_energized(Saeedi) \u2295 stay_healthy(Saeedi)"
        },
        {
            "id": 1,
            "text": "If Saeedi avoids wheat, then she will stay healthy.",
            "fol": "p_6(Saeedi) \u2192 p_7(Saeedi)",
            "str_fol": "avoid_wheat(Saeedi) \u2192 stay_healthy(Saeedi)"
        },
        {
            "id": 0,
            "text": "For all humans, if a person is gluten intolerant, then they either eat gluten-free or avoid wheat (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (gluten_intolerant(x) \u2192 (eat_gluten_free(x) \u2228 avoid_wheat(x)))"
        }
    ],
    "context": [
        {
            "id": 2,
            "subject": "Saeedi",
            "text": "Saeedi does not create recipes.",
            "fol": "\u00acp_2(Saeedi)",
            "str_fol": "\u00accreate_recipes(Saeedi)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Saeedi",
            "text": "Saeedi does not run a bakery.",
            "fol": "\u00acp_3(Saeedi)",
            "str_fol": "\u00acrun_bakery(Saeedi)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Saeedi",
            "text": "Saeedi does not make smart food choices.",
            "fol": "\u00acp_1(Saeedi)",
            "str_fol": "\u00acmake_smart_choices(Saeedi)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Saeedi",
            "text": "Saeedi does not care about her diet.",
            "fol": "\u00acp_0(Saeedi)",
            "str_fol": "\u00accare_diet(Saeedi)",
            "negation": true
        },
        {
            "id": 7,
            "text": "If Saeedi bakes regularly, then she either creates recipes or runs a bakery.",
            "fol": "p_11(Saeedi) \u2192 (p_2(Saeedi) \u2228 p_3(Saeedi))",
            "str_fol": "bake_regularly(Saeedi) \u2192 (create_recipes(Saeedi) \u2228 run_bakery(Saeedi))"
        },
        {
            "id": 6,
            "text": "If Saeedi reads food labels, then she makes smart food choices.",
            "fol": "p_9(Saeedi) \u2192 p_1(Saeedi)",
            "str_fol": "read_labels(Saeedi) \u2192 make_smart_choices(Saeedi)"
        },
        {
            "id": 5,
            "text": "Either Saeedi gets exercise or she bakes regularly, but not both.",
            "fol": "p_10(Saeedi) \u2295 p_11(Saeedi)",
            "str_fol": "get_exercise(Saeedi) \u2295 bake_regularly(Saeedi)"
        },
        {
            "id": 4,
            "text": "If Saeedi gets regular exercise, then she feels energized.",
            "fol": "p_10(Saeedi) \u2192 p_8(Saeedi)",
            "str_fol": "get_exercise(Saeedi) \u2192 feel_energized(Saeedi)"
        },
        {
            "id": 3,
            "text": "If someone eats gluten-free, then they care about their diet and read food labels.",
            "fol": "\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))",
            "str_fol": "\u2200x (eat_gluten_free(x) \u2192 (care_diet(x) \u2227 read_labels(x)))"
        },
        {
            "id": 2,
            "text": "For Saeedi, either she feels energized or she stays healthy, but not both at the same time.",
            "fol": "p_8(Saeedi) \u2295 p_7(Saeedi)",
            "str_fol": "feel_energized(Saeedi) \u2295 stay_healthy(Saeedi)"
        },
        {
            "id": 1,
            "text": "If Saeedi avoids wheat, then she will stay healthy.",
            "fol": "p_6(Saeedi) \u2192 p_7(Saeedi)",
            "str_fol": "avoid_wheat(Saeedi) \u2192 stay_healthy(Saeedi)"
        },
        {
            "id": 0,
            "text": "For all humans, if a person is gluten intolerant, then they either eat gluten-free or avoid wheat (or both).",
            "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (gluten_intolerant(x) \u2192 (eat_gluten_free(x) \u2228 avoid_wheat(x)))"
        }
    ],
    "context_fol": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\np_11(Saeedi) \u2192 (p_2(Saeedi) \u2228 p_3(Saeedi))\np_9(Saeedi) \u2192 p_1(Saeedi)\np_10(Saeedi) \u2295 p_11(Saeedi)\np_10(Saeedi) \u2192 p_8(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\np_8(Saeedi) \u2295 p_7(Saeedi)\np_6(Saeedi) \u2192 p_7(Saeedi)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))",
    "conclusion": {
        "id": 11,
        "subject": "Saeedi",
        "text": "Saeedi is not gluten intolerant.",
        "fol": "\u00acp_4(Saeedi)",
        "str_fol": "\u00acgluten_intolerant(Saeedi)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_4(Saeedi)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Saeedi",
                    "text": "Saeedi does not create recipes.",
                    "fol": "\u00acp_2(Saeedi)",
                    "str_fol": "\u00accreate_recipes(Saeedi)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Saeedi",
                    "text": "Saeedi does not run a bakery.",
                    "fol": "\u00acp_3(Saeedi)",
                    "str_fol": "\u00acrun_bakery(Saeedi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Saeedi bakes regularly, then she either creates recipes or runs a bakery.",
                    "fol": "p_11(Saeedi) \u2192 (p_2(Saeedi) \u2228 p_3(Saeedi))",
                    "str_fol": "bake_regularly(Saeedi) \u2192 (create_recipes(Saeedi) \u2228 run_bakery(Saeedi))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Saeedi",
                "text": "Saeedi does not bake regularly.",
                "fol": "\u00acp_11(Saeedi)",
                "str_fol": "\u00acbake_regularly(Saeedi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Saeedi",
                    "text": "Saeedi does not make smart food choices.",
                    "fol": "\u00acp_1(Saeedi)",
                    "str_fol": "\u00acmake_smart_choices(Saeedi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Saeedi reads food labels, then she makes smart food choices.",
                    "fol": "p_9(Saeedi) \u2192 p_1(Saeedi)",
                    "str_fol": "read_labels(Saeedi) \u2192 make_smart_choices(Saeedi)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Saeedi",
                "text": "Saeedi does not read food labels.",
                "fol": "\u00acp_9(Saeedi)",
                "str_fol": "\u00acread_labels(Saeedi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Saeedi",
                    "text": "Saeedi does not bake regularly.",
                    "fol": "\u00acp_11(Saeedi)",
                    "str_fol": "\u00acbake_regularly(Saeedi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Either Saeedi gets exercise or she bakes regularly, but not both.",
                    "fol": "p_10(Saeedi) \u2295 p_11(Saeedi)",
                    "str_fol": "get_exercise(Saeedi) \u2295 bake_regularly(Saeedi)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Saeedi",
                "text": "Saeedi gets regular exercise.",
                "fol": "p_10(Saeedi)",
                "str_fol": "get_exercise(Saeedi)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Saeedi",
                    "text": "Saeedi gets regular exercise.",
                    "fol": "p_10(Saeedi)",
                    "str_fol": "get_exercise(Saeedi)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Saeedi gets regular exercise, then she feels energized.",
                    "fol": "p_10(Saeedi) \u2192 p_8(Saeedi)",
                    "str_fol": "get_exercise(Saeedi) \u2192 feel_energized(Saeedi)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Saeedi",
                "text": "Saeedi feels energized.",
                "fol": "p_8(Saeedi)",
                "str_fol": "feel_energized(Saeedi)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Saeedi",
                    "text": "Saeedi does not care about her diet.",
                    "fol": "\u00acp_0(Saeedi)",
                    "str_fol": "\u00accare_diet(Saeedi)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Saeedi",
                    "text": "Saeedi does not read food labels.",
                    "fol": "\u00acp_9(Saeedi)",
                    "str_fol": "\u00acread_labels(Saeedi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If someone eats gluten-free, then they care about their diet and read food labels.",
                    "fol": "\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))",
                    "str_fol": "\u2200x (eat_gluten_free(x) \u2192 (care_diet(x) \u2227 read_labels(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Saeedi",
                "text": "Saeedi does not eat gluten-free.",
                "fol": "\u00acp_5(Saeedi)",
                "str_fol": "\u00aceat_gluten_free(Saeedi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Saeedi",
                    "text": "Saeedi feels energized.",
                    "fol": "p_8(Saeedi)",
                    "str_fol": "feel_energized(Saeedi)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "For Saeedi, either she feels energized or she stays healthy, but not both at the same time.",
                    "fol": "p_8(Saeedi) \u2295 p_7(Saeedi)",
                    "str_fol": "feel_energized(Saeedi) \u2295 stay_healthy(Saeedi)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Saeedi",
                "text": "Saeedi does not stay healthy.",
                "fol": "\u00acp_7(Saeedi)",
                "str_fol": "\u00acstay_healthy(Saeedi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Saeedi",
                    "text": "Saeedi does not stay healthy.",
                    "fol": "\u00acp_7(Saeedi)",
                    "str_fol": "\u00acstay_healthy(Saeedi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Saeedi avoids wheat, then she will stay healthy.",
                    "fol": "p_6(Saeedi) \u2192 p_7(Saeedi)",
                    "str_fol": "avoid_wheat(Saeedi) \u2192 stay_healthy(Saeedi)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Saeedi",
                "text": "Saeedi does not avoid wheat.",
                "fol": "\u00acp_6(Saeedi)",
                "str_fol": "\u00acavoid_wheat(Saeedi)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Saeedi",
                    "text": "Saeedi does not eat gluten-free.",
                    "fol": "\u00acp_5(Saeedi)",
                    "str_fol": "\u00aceat_gluten_free(Saeedi)",
                    "negation": true
                },
                {
                    "id": 10,
                    "subject": "Saeedi",
                    "text": "Saeedi does not avoid wheat.",
                    "fol": "\u00acp_6(Saeedi)",
                    "str_fol": "\u00acavoid_wheat(Saeedi)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "For all humans, if a person is gluten intolerant, then they either eat gluten-free or avoid wheat (or both).",
                    "fol": "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))",
                    "str_fol": "\u2200x (gluten_intolerant(x) \u2192 (eat_gluten_free(x) \u2228 avoid_wheat(x)))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Saeedi",
                "text": "Saeedi is not gluten intolerant.",
                "fol": "\u00acp_4(Saeedi)",
                "str_fol": "\u00acgluten_intolerant(Saeedi)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 p_11(Saeedi) -> p_2(Saeedi) | p_3(Saeedi).  [assumption].\n3 -(p_10(Saeedi) <-> p_11(Saeedi)).  [assumption].\n4 p_10(Saeedi) -> p_8(Saeedi).  [assumption].\n5 (all x (p_5(x) -> p_0(x) & p_9(x))).  [assumption].\n6 -(p_8(Saeedi) <-> p_7(Saeedi)).  [assumption].\n7 p_6(Saeedi) -> p_7(Saeedi).  [assumption].\n8 (all x (p_4(x) -> p_5(x) | p_6(x))).  [assumption].\n9 -p_4(Saeedi).  [goal].\n10 -p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi).  [clausify(1)].\n11 -p_2(Saeedi).  [assumption].\n12 -p_11(Saeedi) | p_3(Saeedi).  [resolve(10,b,11,a)].\n13 -p_3(Saeedi).  [assumption].\n16 -p_5(x) | p_0(x).  [clausify(5)].\n17 -p_0(Saeedi).  [assumption].\n19 p_10(Saeedi) | p_11(Saeedi).  [clausify(3)].\n20 -p_10(Saeedi) | p_8(Saeedi).  [clausify(4)].\n21 -p_4(x) | p_5(x) | p_6(x).  [clausify(8)].\n23 -p_5(Saeedi).  [resolve(16,b,17,a)].\n24 -p_8(Saeedi) | -p_7(Saeedi).  [clausify(6)].\n26 p_8(Saeedi) | p_11(Saeedi).  [resolve(20,a,19,a)].\n28 -p_6(Saeedi) | p_7(Saeedi).  [clausify(7)].\n29 -p_4(Saeedi) | p_6(Saeedi).  [resolve(23,a,21,b)].\n31 p_4(Saeedi).  [deny(9)].\n32 -p_4(Saeedi) | p_7(Saeedi).  [resolve(29,b,28,a)].\n33 p_11(Saeedi) | -p_7(Saeedi).  [resolve(26,a,24,a)].\n34 -p_11(Saeedi).  [resolve(12,b,13,a)].\n37 -p_7(Saeedi).  [resolve(33,a,34,a)].\n38 p_7(Saeedi).  [resolve(32,a,31,a)].\n39 $F.  [resolve(37,a,38,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi)",
                    "-p_3(Saeedi)",
                    "-p_1(Saeedi)",
                    "-p_0(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi))",
                    "p_10(Saeedi) | p_11(Saeedi)",
                    "-p_10(Saeedi) | -p_11(Saeedi)",
                    "p_8(Saeedi) | p_7(Saeedi)",
                    "-p_8(Saeedi) | -p_7(Saeedi)",
                    "-p_9(Saeedi)",
                    "p_5(Saeedi) -> p_0(Saeedi)",
                    "p_5(Saeedi) -> p_9(Saeedi)",
                    "-p_6(Saeedi) | p_7(Saeedi)",
                    "-p_10(Saeedi) | p_8(Saeedi)",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi)",
                    "-p_1(Saeedi) -> -p_9(Saeedi)",
                    "-p_7(Saeedi) -> -p_6(Saeedi)",
                    "-p_8(Saeedi) -> -p_10(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi)",
                    "all x (p_5(x) -> (p_0(x) & p_9(x)))",
                    "-p_9(Saeedi) | p_1(Saeedi)",
                    "all x (p_4(x) -> (p_5(x) | p_6(x)))"
                ],
                "formulas(goals)": [
                    "-p_4(Saeedi)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_11(Saeedi) \u2192 (p_2(Saeedi) \u2228 p_3(Saeedi))",
                    "p_9(Saeedi) \u2192 p_1(Saeedi)",
                    "p_10(Saeedi) \u2295 p_11(Saeedi)",
                    "p_10(Saeedi) \u2192 p_8(Saeedi)",
                    "p_8(Saeedi) \u2295 p_7(Saeedi)",
                    "p_6(Saeedi) \u2192 p_7(Saeedi)"
                ],
                "added_facts": [
                    "\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))",
                    "p_10(Saeedi) \u2228 p_11(Saeedi)",
                    "\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)",
                    "p_8(Saeedi) \u2228 p_7(Saeedi)",
                    "\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)",
                    "\u00acp_9(Saeedi)",
                    "p_5(Saeedi) \u2192 p_0(Saeedi)",
                    "p_5(Saeedi) \u2192 p_9(Saeedi)",
                    "\u00acp_6(Saeedi) \u2228 p_7(Saeedi)",
                    "\u00acp_10(Saeedi) \u2228 p_8(Saeedi)",
                    "\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)",
                    "\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)",
                    "\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)",
                    "\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)",
                    "\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)",
                    "\u00acp_9(Saeedi) \u2228 p_1(Saeedi)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))\n\u00acp_5(Saeedi)\n\u00acp_6(Saeedi)",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi)",
                    "-p_3(Saeedi)",
                    "-p_1(Saeedi)",
                    "-p_0(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi))",
                    "p_10(Saeedi) | p_11(Saeedi)",
                    "-p_10(Saeedi) | -p_11(Saeedi)",
                    "p_8(Saeedi) | p_7(Saeedi)",
                    "-p_8(Saeedi) | -p_7(Saeedi)",
                    "-p_9(Saeedi)",
                    "p_5(Saeedi) -> p_0(Saeedi)",
                    "p_5(Saeedi) -> p_9(Saeedi)",
                    "-p_6(Saeedi) | p_7(Saeedi)",
                    "-p_10(Saeedi) | p_8(Saeedi)",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi)",
                    "-p_1(Saeedi) -> -p_9(Saeedi)",
                    "-p_7(Saeedi) -> -p_6(Saeedi)",
                    "-p_8(Saeedi) -> -p_10(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi)",
                    "all x (p_5(x) -> (p_0(x) & p_9(x)))",
                    "-p_9(Saeedi) | p_1(Saeedi)",
                    "all x (p_4(x) -> (p_5(x) | p_6(x)))",
                    "-p_5(Saeedi)",
                    "-p_6(Saeedi)"
                ],
                "formulas(goals)": [
                    "-p_4(Saeedi)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_5(Saeedi)",
                    "\u00acp_6(Saeedi)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u00acp_5(Saeedi)\n\u00acp_6(Saeedi)\np_10(Saeedi) \u2192 p_4(Saeedi)\np_11(Saeedi) \u2192 p_4(Saeedi)",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi)",
                    "-p_3(Saeedi)",
                    "-p_1(Saeedi)",
                    "-p_0(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi))",
                    "p_10(Saeedi) | p_11(Saeedi)",
                    "-p_10(Saeedi) | -p_11(Saeedi)",
                    "p_8(Saeedi) | p_7(Saeedi)",
                    "-p_8(Saeedi) | -p_7(Saeedi)",
                    "-p_9(Saeedi)",
                    "p_5(Saeedi) -> p_0(Saeedi)",
                    "p_5(Saeedi) -> p_9(Saeedi)",
                    "-p_6(Saeedi) | p_7(Saeedi)",
                    "-p_10(Saeedi) | p_8(Saeedi)",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi)",
                    "-p_1(Saeedi) -> -p_9(Saeedi)",
                    "-p_7(Saeedi) -> -p_6(Saeedi)",
                    "-p_8(Saeedi) -> -p_10(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi)",
                    "all x (p_5(x) -> (p_0(x) & p_9(x)))",
                    "-p_9(Saeedi) | p_1(Saeedi)",
                    "-p_5(Saeedi)",
                    "-p_6(Saeedi)",
                    "p_10(Saeedi) -> p_4(Saeedi)",
                    "p_11(Saeedi) -> p_4(Saeedi)"
                ],
                "formulas(goals)": [
                    "p_4(Saeedi)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2192 (p_5(x) \u2228 p_6(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_10(Saeedi) \u2192 p_4(Saeedi)",
                    "p_11(Saeedi) \u2192 p_4(Saeedi)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u00acp_5(Saeedi)\n\u00acp_6(Saeedi)\np_10(Saeedi) \u2192 p_4(Saeedi)\np_11(Saeedi) \u2192 p_4(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_11(Saeedi)\n(p_10(Saeedi) \u2228 p_11(Saeedi)) \u2192 p_4(Saeedi)",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi).",
                    "-p_3(Saeedi).",
                    "-p_1(Saeedi).",
                    "-p_0(Saeedi).",
                    "-(p_2(Saeedi) | p_3(Saeedi)).",
                    "p_10(Saeedi) | p_11(Saeedi).",
                    "-p_10(Saeedi) | -p_11(Saeedi).",
                    "p_8(Saeedi) | p_7(Saeedi).",
                    "-p_8(Saeedi) | -p_7(Saeedi).",
                    "-p_9(Saeedi).",
                    "p_5(Saeedi) -> p_0(Saeedi).",
                    "p_5(Saeedi) -> p_9(Saeedi).",
                    "-p_6(Saeedi) | p_7(Saeedi).",
                    "-p_10(Saeedi) | p_8(Saeedi).",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi).",
                    "-p_1(Saeedi) -> -p_9(Saeedi).",
                    "-p_7(Saeedi) -> -p_6(Saeedi).",
                    "-p_8(Saeedi) -> -p_10(Saeedi).",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi).",
                    "all x (p_5(x) -> (p_0(x) & p_9(x))).",
                    "-p_9(Saeedi) | p_1(Saeedi).",
                    "-p_5(Saeedi).",
                    "-p_6(Saeedi).",
                    "p_10(Saeedi) -> p_4(Saeedi).",
                    "p_11(Saeedi) -> p_4(Saeedi).",
                    "-p_4(Saeedi) -> -p_10(Saeedi).",
                    "-p_4(Saeedi) -> -p_11(Saeedi).",
                    "(p_10(Saeedi) | p_11(Saeedi)) -> p_4(Saeedi)."
                ],
                "formulas(goals)": [
                    "p_4(Saeedi)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Saeedi) \u2192 \u00acp_10(Saeedi)",
                    "\u00acp_4(Saeedi) \u2192 \u00acp_11(Saeedi)",
                    "(p_10(Saeedi) \u2228 p_11(Saeedi)) \u2192 p_4(Saeedi)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u00acp_5(Saeedi)\n\u00acp_6(Saeedi)\np_10(Saeedi) \u2192 p_4(Saeedi)\np_11(Saeedi) \u2192 p_4(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_11(Saeedi)\n(p_10(Saeedi) \u2228 p_11(Saeedi)) \u2192 p_4(Saeedi)\np_4(Saeedi)\np_11(Saeedi) \u2228 p_10(Saeedi)\n\u00ac(p_10(Saeedi) \u2227 p_11(Saeedi))",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi)",
                    "-p_3(Saeedi)",
                    "-p_1(Saeedi)",
                    "-p_0(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi))",
                    "p_10(Saeedi) | p_11(Saeedi)",
                    "-p_10(Saeedi) | -p_11(Saeedi)",
                    "p_8(Saeedi) | p_7(Saeedi)",
                    "-p_8(Saeedi) | -p_7(Saeedi)",
                    "-p_9(Saeedi)",
                    "p_5(Saeedi) -> p_0(Saeedi)",
                    "p_5(Saeedi) -> p_9(Saeedi)",
                    "-p_6(Saeedi) | p_7(Saeedi)",
                    "-p_10(Saeedi) | p_8(Saeedi)",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi)",
                    "-p_1(Saeedi) -> -p_9(Saeedi)",
                    "-p_7(Saeedi) -> -p_6(Saeedi)",
                    "-p_8(Saeedi) -> -p_10(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi)",
                    "all x (p_5(x) -> (p_0(x) & p_9(x)))",
                    "-p_9(Saeedi) | p_1(Saeedi)",
                    "-p_5(Saeedi)",
                    "-p_6(Saeedi)",
                    "p_10(Saeedi) -> p_4(Saeedi)",
                    "p_11(Saeedi) -> p_4(Saeedi)",
                    "-p_4(Saeedi) -> -p_10(Saeedi)",
                    "-p_4(Saeedi) -> -p_11(Saeedi)",
                    "(p_10(Saeedi) | p_11(Saeedi)) -> p_4(Saeedi)",
                    "p_4(Saeedi)",
                    "p_11(Saeedi) | p_10(Saeedi)",
                    "-(p_10(Saeedi) & p_11(Saeedi))"
                ],
                "formulas(goals)": [
                    "p_4(Saeedi)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_4(Saeedi)",
                    "p_11(Saeedi) \u2228 p_10(Saeedi)",
                    "\u00ac(p_10(Saeedi) \u2227 p_11(Saeedi))"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u00acp_5(Saeedi)\n\u00acp_6(Saeedi)\np_10(Saeedi) \u2192 p_4(Saeedi)\np_11(Saeedi) \u2192 p_4(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_11(Saeedi)\n(p_10(Saeedi) \u2228 p_11(Saeedi)) \u2192 p_4(Saeedi)\np_4(Saeedi)\np_11(Saeedi) \u2228 p_10(Saeedi)\n\u00ac(p_10(Saeedi) \u2227 p_11(Saeedi))",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi)",
                    "-p_3(Saeedi)",
                    "-p_1(Saeedi)",
                    "-p_0(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi))",
                    "p_10(Saeedi) | p_11(Saeedi)",
                    "-p_10(Saeedi) | -p_11(Saeedi)",
                    "p_8(Saeedi) | p_7(Saeedi)",
                    "-p_8(Saeedi) | -p_7(Saeedi)",
                    "-p_9(Saeedi)",
                    "p_5(Saeedi) -> p_0(Saeedi)",
                    "p_5(Saeedi) -> p_9(Saeedi)",
                    "-p_6(Saeedi) | p_7(Saeedi)",
                    "-p_10(Saeedi) | p_8(Saeedi)",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi)",
                    "-p_1(Saeedi) -> -p_9(Saeedi)",
                    "-p_7(Saeedi) -> -p_6(Saeedi)",
                    "-p_8(Saeedi) -> -p_10(Saeedi)",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi)",
                    "all x (p_5(x) -> (p_0(x) & p_9(x)))",
                    "-p_9(Saeedi) | p_1(Saeedi)",
                    "-p_5(Saeedi)",
                    "-p_6(Saeedi)",
                    "p_10(Saeedi) -> p_4(Saeedi)",
                    "p_11(Saeedi) -> p_4(Saeedi)",
                    "-p_4(Saeedi) -> -p_10(Saeedi)",
                    "-p_4(Saeedi) -> -p_11(Saeedi)",
                    "(p_10(Saeedi) | p_11(Saeedi)) -> p_4(Saeedi)",
                    "p_4(Saeedi)",
                    "p_11(Saeedi) | p_10(Saeedi)",
                    "-(p_10(Saeedi) & p_11(Saeedi))"
                ],
                "formulas(goals)": [
                    "-(-p_4(Saeedi))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": []
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_2(Saeedi)\n\u00acp_3(Saeedi)\n\u00acp_1(Saeedi)\n\u00acp_0(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi))\np_10(Saeedi) \u2228 p_11(Saeedi)\n\u00acp_10(Saeedi) \u2228 \u00acp_11(Saeedi)\np_8(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_8(Saeedi) \u2228 \u00acp_7(Saeedi)\n\u00acp_9(Saeedi)\np_5(Saeedi) \u2192 p_0(Saeedi)\np_5(Saeedi) \u2192 p_9(Saeedi)\n\u00acp_6(Saeedi) \u2228 p_7(Saeedi)\n\u00acp_10(Saeedi) \u2228 p_8(Saeedi)\n\u00acp_11(Saeedi) \u2228 p_2(Saeedi) \u2228 p_3(Saeedi)\n\u00acp_1(Saeedi) \u2192 \u00acp_9(Saeedi)\n\u00acp_7(Saeedi) \u2192 \u00acp_6(Saeedi)\n\u00acp_8(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00ac(p_2(Saeedi) \u2228 p_3(Saeedi)) \u2192 \u00acp_11(Saeedi)\n\u2200x (p_5(x) \u2192 (p_0(x) \u2227 p_9(x)))\n\u00acp_9(Saeedi) \u2228 p_1(Saeedi)\n\u00acp_5(Saeedi)\n\u00acp_6(Saeedi)\np_10(Saeedi) \u2192 p_4(Saeedi)\np_11(Saeedi) \u2192 p_4(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_10(Saeedi)\n\u00acp_4(Saeedi) \u2192 \u00acp_11(Saeedi)\n(p_10(Saeedi) \u2228 p_11(Saeedi)) \u2192 p_4(Saeedi)\np_4(Saeedi)\np_11(Saeedi) \u2228 p_10(Saeedi)\n\u00ac(p_10(Saeedi) \u2227 p_11(Saeedi))\np_10(Saeedi) \u2228 \u00acp_10(Saeedi)",
            "Initial Goal": "\u00acp_4(Saeedi)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_2(Saeedi).",
                    "-p_3(Saeedi).",
                    "-p_1(Saeedi).",
                    "-p_0(Saeedi).",
                    "-(p_2(Saeedi) | p_3(Saeedi)).",
                    "p_10(Saeedi) | p_11(Saeedi).",
                    "-p_10(Saeedi) | -p_11(Saeedi).",
                    "p_8(Saeedi) | p_7(Saeedi).",
                    "-p_8(Saeedi) | -p_7(Saeedi).",
                    "-p_9(Saeedi).",
                    "p_5(Saeedi) -> p_0(Saeedi).",
                    "p_5(Saeedi) -> p_9(Saeedi).",
                    "-p_6(Saeedi) | p_7(Saeedi).",
                    "-p_10(Saeedi) | p_8(Saeedi).",
                    "-p_11(Saeedi) | p_2(Saeedi) | p_3(Saeedi).",
                    "-p_1(Saeedi) -> -p_9(Saeedi).",
                    "-p_7(Saeedi) -> -p_6(Saeedi).",
                    "-p_8(Saeedi) -> -p_10(Saeedi).",
                    "-(p_2(Saeedi) | p_3(Saeedi)) -> -p_11(Saeedi).",
                    "all x (p_5(x) -> (p_0(x) & p_9(x))).",
                    "-p_9(Saeedi) | p_1(Saeedi).",
                    "-p_5(Saeedi).",
                    "-p_6(Saeedi).",
                    "p_10(Saeedi) -> p_4(Saeedi).",
                    "p_11(Saeedi) -> p_4(Saeedi).",
                    "-p_4(Saeedi) -> -p_10(Saeedi).",
                    "-p_4(Saeedi) -> -p_11(Saeedi).",
                    "(p_10(Saeedi) | p_11(Saeedi)) -> p_4(Saeedi).",
                    "p_4(Saeedi).",
                    "p_11(Saeedi) | p_10(Saeedi).",
                    "-(p_10(Saeedi) & p_11(Saeedi)).",
                    "p_10(Saeedi) | -p_10(Saeedi)."
                ],
                "formulas(goals)": [
                    "p_4(Saeedi)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_10(Saeedi) \u2228 \u00acp_10(Saeedi)"
                ],
                "added_rules": []
            }
        }
    ]
}