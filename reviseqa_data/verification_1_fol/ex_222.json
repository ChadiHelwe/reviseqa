{
    "background_story": "Jream was a renowned geologist studying the effects of earthquakes on the Earth's surface. His expertise lay in understanding coseismic activities, particularly the changes that occur during and immediately after seismic events. Jream spent years researching fault lines and seismic zones, often venturing into the field to collect data from recent earthquake sites. His groundbreaking work on coseismic ground deformation helped scientists better understand the dynamics of earthquakes and predict potential seismic hazards. Jream's dedication to his field was driven by a desire to mitigate the impact of earthquakes on communities worldwide. Through his research, he aimed to contribute to the development of more effective early warning systems and emergency response plans, ultimately saving lives and reducing the devastation caused by these powerful natural events.",
    "predicates": [
        {
            "id": 0,
            "name": "understand_earth"
        },
        {
            "id": 1,
            "name": "study_seismology"
        },
        {
            "id": 2,
            "name": "conduct_field_research"
        },
        {
            "id": 3,
            "name": "analyze_data"
        },
        {
            "id": 4,
            "name": "predict_earthquakes"
        },
        {
            "id": 5,
            "name": "map_fault_lines"
        },
        {
            "id": 6,
            "name": "track_terrain"
        },
        {
            "id": 7,
            "name": "read_rock"
        },
        {
            "id": 8,
            "name": "examine_sites"
        },
        {
            "id": 9,
            "name": "collect_samples"
        },
        {
            "id": 10,
            "name": "review_findings"
        },
        {
            "id": 11,
            "name": "examine_rocks"
        },
        {
            "id": 12,
            "name": "investigate_terrain"
        },
        {
            "id": 13,
            "name": "model_deformation"
        },
        {
            "id": 14,
            "name": "examine_land"
        }
    ],
    "subject_name": "Jream",
    "subject_category": "geologist",
    "keyword": "coseismic",
    "all_facts": [
        {
            "id": 0,
            "subject": "Jream",
            "text": "Jream does not understand the earth.",
            "fol": "\u00acp_0(Jream)",
            "str_fol": "\u00acunderstand_earth(Jream)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Jream",
            "text": "Jream does not read rock formations.",
            "fol": "\u00acp_7(Jream)",
            "str_fol": "\u00acread_rock(Jream)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jream",
            "text": "Jream tracks terrain.",
            "fol": "p_6(Jream)",
            "str_fol": "track_terrain(Jream)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Jream",
            "text": "Jream maps fault lines.",
            "fol": "p_5(Jream)",
            "str_fol": "map_fault_lines(Jream)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Jream",
            "text": "Jream does not predict earthquakes.",
            "fol": "\u00acp_4(Jream)",
            "str_fol": "\u00acpredict_earthquakes(Jream)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jream",
            "text": "Jream analyzes data.",
            "fol": "p_3(Jream)",
            "str_fol": "analyze_data(Jream)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Jream",
            "text": "Jream does not conduct field research.",
            "fol": "\u00acp_2(Jream)",
            "str_fol": "\u00acconduct_field_research(Jream)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Jream",
            "text": "Jream studies seismology.",
            "fol": "p_1(Jream)",
            "str_fol": "study_seismology(Jream)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 0,
            "subject": "Jream",
            "text": "Jream does not understand the earth.",
            "fol": "\u00acp_0(Jream)",
            "str_fol": "\u00acunderstand_earth(Jream)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Jream reads rock formations, then he understands the earth.",
            "fol": "p_7(Jream) \u2192 p_0(Jream)",
            "str_fol": "read_rock(Jream) \u2192 understand_earth(Jream)"
        },
        {
            "id": 5,
            "text": "All geologists either track terrain or read rock formations.",
            "fol": "\u2200x (p_6(x) \u2228 p_7(x))",
            "str_fol": "\u2200x (track_terrain(x) \u2228 read_rock(x))"
        },
        {
            "id": 4,
            "text": "All geologists who track terrain will map fault lines.",
            "fol": "\u2200x (p_6(x) \u2192 p_5(x))",
            "str_fol": "\u2200x (track_terrain(x) \u2192 map_fault_lines(x))"
        },
        {
            "id": 3,
            "text": "A geologist either predicts earthquakes or maps fault lines, but not necessarily both at the same time.",
            "fol": "\u2200x (p_4(x) \u2295 p_5(x))",
            "str_fol": "\u2200x (predict_earthquakes(x) \u2295 map_fault_lines(x))"
        },
        {
            "id": 2,
            "text": "A geologist either analyzes data or predicts earthquakes, but not necessarily both at the same time.",
            "fol": "\u2200x (p_3(x) \u2295 p_4(x))",
            "str_fol": "\u2200x (analyze_data(x) \u2295 predict_earthquakes(x))"
        },
        {
            "id": 1,
            "text": "A geologist either conducts field research or analyzes data, but not necessarily both at the same time.",
            "fol": "\u2200x (p_2(x) \u2295 p_3(x))",
            "str_fol": "\u2200x (conduct_field_research(x) \u2295 analyze_data(x))"
        },
        {
            "id": 0,
            "text": "Jream either studies seismology or conducts field research (or both).",
            "fol": "p_1(Jream) \u2228 p_2(Jream)",
            "str_fol": "study_seismology(Jream) \u2228 conduct_field_research(Jream)"
        }
    ],
    "context": [
        {
            "id": 0,
            "subject": "Jream",
            "text": "Jream does not understand the earth.",
            "fol": "\u00acp_0(Jream)",
            "str_fol": "\u00acunderstand_earth(Jream)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Jream reads rock formations, then he understands the earth.",
            "fol": "p_7(Jream) \u2192 p_0(Jream)",
            "str_fol": "read_rock(Jream) \u2192 understand_earth(Jream)"
        },
        {
            "id": 5,
            "text": "All geologists either track terrain or read rock formations.",
            "fol": "\u2200x (p_6(x) \u2228 p_7(x))",
            "str_fol": "\u2200x (track_terrain(x) \u2228 read_rock(x))"
        },
        {
            "id": 4,
            "text": "All geologists who track terrain will map fault lines.",
            "fol": "\u2200x (p_6(x) \u2192 p_5(x))",
            "str_fol": "\u2200x (track_terrain(x) \u2192 map_fault_lines(x))"
        },
        {
            "id": 3,
            "text": "A geologist either predicts earthquakes or maps fault lines, but not necessarily both at the same time.",
            "fol": "\u2200x (p_4(x) \u2295 p_5(x))",
            "str_fol": "\u2200x (predict_earthquakes(x) \u2295 map_fault_lines(x))"
        },
        {
            "id": 2,
            "text": "A geologist either analyzes data or predicts earthquakes, but not necessarily both at the same time.",
            "fol": "\u2200x (p_3(x) \u2295 p_4(x))",
            "str_fol": "\u2200x (analyze_data(x) \u2295 predict_earthquakes(x))"
        },
        {
            "id": 1,
            "text": "A geologist either conducts field research or analyzes data, but not necessarily both at the same time.",
            "fol": "\u2200x (p_2(x) \u2295 p_3(x))",
            "str_fol": "\u2200x (conduct_field_research(x) \u2295 analyze_data(x))"
        },
        {
            "id": 0,
            "text": "Jream either studies seismology or conducts field research (or both).",
            "fol": "p_1(Jream) \u2228 p_2(Jream)",
            "str_fol": "study_seismology(Jream) \u2228 conduct_field_research(Jream)"
        }
    ],
    "context_fol": "\u00acp_0(Jream)\np_7(Jream) \u2192 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (p_6(x) \u2192 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\np_1(Jream) \u2228 p_2(Jream)",
    "conclusion": {
        "id": 7,
        "subject": "Jream",
        "text": "Jream studies seismology.",
        "fol": "p_1(Jream)",
        "str_fol": "study_seismology(Jream)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_1(Jream)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Jream",
                    "text": "Jream does not understand the earth.",
                    "fol": "\u00acp_0(Jream)",
                    "str_fol": "\u00acunderstand_earth(Jream)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Jream reads rock formations, then he understands the earth.",
                    "fol": "p_7(Jream) \u2192 p_0(Jream)",
                    "str_fol": "read_rock(Jream) \u2192 understand_earth(Jream)"
                }
            ],
            "conclusion": {
                "id": 1,
                "subject": "Jream",
                "text": "Jream does not read rock formations.",
                "fol": "\u00acp_7(Jream)",
                "str_fol": "\u00acread_rock(Jream)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Jream",
                    "text": "Jream does not read rock formations.",
                    "fol": "\u00acp_7(Jream)",
                    "str_fol": "\u00acread_rock(Jream)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "All geologists either track terrain or read rock formations.",
                    "fol": "\u2200x (p_6(x) \u2228 p_7(x))",
                    "str_fol": "\u2200x (track_terrain(x) \u2228 read_rock(x))"
                }
            ],
            "conclusion": {
                "id": 2,
                "subject": "Jream",
                "text": "Jream tracks terrain.",
                "fol": "p_6(Jream)",
                "str_fol": "track_terrain(Jream)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Jream",
                    "text": "Jream tracks terrain.",
                    "fol": "p_6(Jream)",
                    "str_fol": "track_terrain(Jream)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "All geologists who track terrain will map fault lines.",
                    "fol": "\u2200x (p_6(x) \u2192 p_5(x))",
                    "str_fol": "\u2200x (track_terrain(x) \u2192 map_fault_lines(x))"
                }
            ],
            "conclusion": {
                "id": 3,
                "subject": "Jream",
                "text": "Jream maps fault lines.",
                "fol": "p_5(Jream)",
                "str_fol": "map_fault_lines(Jream)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Jream",
                    "text": "Jream maps fault lines.",
                    "fol": "p_5(Jream)",
                    "str_fol": "map_fault_lines(Jream)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "A geologist either predicts earthquakes or maps fault lines, but not necessarily both at the same time.",
                    "fol": "\u2200x (p_4(x) \u2295 p_5(x))",
                    "str_fol": "\u2200x (predict_earthquakes(x) \u2295 map_fault_lines(x))"
                }
            ],
            "conclusion": {
                "id": 4,
                "subject": "Jream",
                "text": "Jream does not predict earthquakes.",
                "fol": "\u00acp_4(Jream)",
                "str_fol": "\u00acpredict_earthquakes(Jream)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Jream",
                    "text": "Jream does not predict earthquakes.",
                    "fol": "\u00acp_4(Jream)",
                    "str_fol": "\u00acpredict_earthquakes(Jream)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "A geologist either analyzes data or predicts earthquakes, but not necessarily both at the same time.",
                    "fol": "\u2200x (p_3(x) \u2295 p_4(x))",
                    "str_fol": "\u2200x (analyze_data(x) \u2295 predict_earthquakes(x))"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Jream",
                "text": "Jream analyzes data.",
                "fol": "p_3(Jream)",
                "str_fol": "analyze_data(Jream)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Jream",
                    "text": "Jream analyzes data.",
                    "fol": "p_3(Jream)",
                    "str_fol": "analyze_data(Jream)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "A geologist either conducts field research or analyzes data, but not necessarily both at the same time.",
                    "fol": "\u2200x (p_2(x) \u2295 p_3(x))",
                    "str_fol": "\u2200x (conduct_field_research(x) \u2295 analyze_data(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Jream",
                "text": "Jream does not conduct field research.",
                "fol": "\u00acp_2(Jream)",
                "str_fol": "\u00acconduct_field_research(Jream)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Jream",
                    "text": "Jream does not conduct field research.",
                    "fol": "\u00acp_2(Jream)",
                    "str_fol": "\u00acconduct_field_research(Jream)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Jream either studies seismology or conducts field research (or both).",
                    "fol": "p_1(Jream) \u2228 p_2(Jream)",
                    "str_fol": "study_seismology(Jream) \u2228 conduct_field_research(Jream)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Jream",
                "text": "Jream studies seismology.",
                "fol": "p_1(Jream)",
                "str_fol": "study_seismology(Jream)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_7(Jream) -> p_0(Jream).  [assumption].\n2 (all x (p_6(x) | p_7(x))).  [assumption].\n3 (all x (p_6(x) -> p_5(x))).  [assumption].\n4 (all x -(p_4(x) <-> p_5(x))).  [assumption].\n5 (all x -(p_3(x) <-> p_4(x))).  [assumption].\n6 (all x -(p_2(x) <-> p_3(x))).  [assumption].\n7 p_1(Jream).  [goal].\n8 -p_7(Jream) | p_0(Jream).  [clausify(1)].\n9 -p_0(Jream).  [assumption].\n10 -p_6(x) | p_5(x).  [clausify(3)].\n11 p_6(x) | p_7(x).  [clausify(2)].\n12 -p_4(x) | -p_5(x).  [clausify(4)].\n14 p_3(x) | p_4(x).  [clausify(5)].\n16 -p_2(x) | -p_3(x).  [clausify(6)].\n18 p_1(Jream) | p_2(Jream).  [assumption].\n19 p_1(Jream) | -p_3(Jream).  [resolve(18,b,16,a)].\n20 -p_1(Jream).  [deny(7)].\n21 p_5(x) | p_7(x).  [resolve(10,a,11,a)].\n22 -p_7(Jream).  [resolve(8,b,9,a)].\n24 p_3(x) | -p_5(x).  [resolve(14,b,12,a)].\n25 -p_3(Jream).  [resolve(19,a,20,a)].\n26 -p_5(Jream).  [resolve(25,a,24,a)].\n27 p_5(Jream).  [resolve(21,b,22,a)].\n28 $F.  [resolve(26,a,27,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (\u00acp_6(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\np_1(Jream) \u2228 p_2(Jream)\n\u00acp_7(Jream)",
            "Initial Goal": "p_1(Jream)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream).",
                    "-p_7(Jream) | p_0(Jream).",
                    "all x (p_6(x) | p_7(x)).",
                    "all x (-p_6(x) | p_5(x)).",
                    "all x (-(p_4(x) <-> p_5(x))).",
                    "all x (-(p_3(x) <-> p_4(x))).",
                    "all x (-(p_2(x) <-> p_3(x))).",
                    "p_1(Jream) | p_2(Jream).",
                    "-p_7(Jream)."
                ],
                "formulas(goals)": [
                    "p_1(Jream)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_7(Jream)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (\u00acp_6(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\np_1(Jream) \u2228 p_2(Jream)\n\u00acp_7(Jream)\n\u2200x (p_2(x) \u2192 \u00acp_3(x))\n\u2200x (p_3(x) \u2192 \u00acp_2(x))",
            "Initial Goal": "p_1(Jream)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream)",
                    "(-p_7(Jream)) | p_0(Jream)",
                    "all x (p_6(x) | p_7(x))",
                    "all x ((-p_6(x)) | p_5(x))",
                    "all x (-(p_4(x) <-> p_5(x)))",
                    "all x (-(p_3(x) <-> p_4(x)))",
                    "all x (-(p_2(x) <-> p_3(x)))",
                    "p_1(Jream) | p_2(Jream)",
                    "-p_7(Jream)",
                    "all x (p_2(x) -> (-p_3(x)))",
                    "all x (p_3(x) -> (-p_2(x)))"
                ],
                "formulas(goals)": [
                    "p_1(Jream)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_2(x) \u2192 \u00acp_3(x))",
                    "\u2200x (p_3(x) \u2192 \u00acp_2(x))"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (\u00acp_6(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\n\u00acp_7(Jream)\n\u2200x (p_2(x) \u2192 \u00acp_3(x))\n\u2200x (p_3(x) \u2192 \u00acp_2(x))\n\u2200x (p_6(x) \u2192 \u00acp_1(x))",
            "Initial Goal": "p_1(Jream)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream)",
                    "-p_7(Jream) | p_0(Jream)",
                    "all x (p_6(x) | p_7(x))",
                    "all x (-p_6(x) | p_5(x))",
                    "all x (-(p_4(x) <-> p_5(x)))",
                    "all x (-(p_3(x) <-> p_4(x)))",
                    "all x (-(p_2(x) <-> p_3(x)))",
                    "-p_7(Jream)",
                    "all x (p_2(x) -> -p_3(x))",
                    "all x (p_3(x) -> -p_2(x))",
                    "all x (p_6(x) -> -p_1(x))"
                ],
                "formulas(goals)": [
                    "-p_1(Jream)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_1(Jream) \u2228 p_2(Jream)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_6(x) \u2192 \u00acp_1(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (\u00acp_6(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\n\u00acp_7(Jream)\n\u2200x (p_2(x) \u2192 \u00acp_3(x))\n\u2200x (p_3(x) \u2192 \u00acp_2(x))\n\u2200x (p_5(x) \u2192 p_1(x))",
            "Initial Goal": "p_1(Jream)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream)",
                    "-p_7(Jream) | p_0(Jream)",
                    "all x (p_6(x) | p_7(x))",
                    "all x (-p_6(x) | p_5(x))",
                    "all x (-(p_4(x) <-> p_5(x)))",
                    "all x (-(p_3(x) <-> p_4(x)))",
                    "all x (-(p_2(x) <-> p_3(x)))",
                    "-p_7(Jream)",
                    "all x (p_2(x) -> -p_3(x))",
                    "all x (p_3(x) -> -p_2(x))",
                    "all x (p_5(x) -> p_1(x))"
                ],
                "formulas(goals)": [
                    "p_1(Jream)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2192 \u00acp_1(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_5(x) \u2192 p_1(x))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (\u00acp_6(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\n\u00acp_7(Jream)\n\u2200x (p_2(x) \u2192 \u00acp_3(x))\n\u2200x (p_3(x) \u2192 \u00acp_2(x))\n\u2200x (p_3(x) \u2192 \u00acp_1(x))",
            "Initial Goal": "p_1(Jream)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream)",
                    "-p_7(Jream) | p_0(Jream)",
                    "all x (p_6(x) | p_7(x))",
                    "all x (-p_6(x) | p_5(x))",
                    "all x (-(p_4(x) <-> p_5(x)))",
                    "all x (-(p_3(x) <-> p_4(x)))",
                    "all x (-(p_2(x) <-> p_3(x)))",
                    "-p_7(Jream)",
                    "all x (p_2(x) -> -p_3(x))",
                    "all x (p_3(x) -> -p_2(x))",
                    "all x (p_3(x) -> -p_1(x))"
                ],
                "formulas(goals)": [
                    "-p_1(Jream)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_5(x) \u2192 p_1(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_3(x) \u2192 \u00acp_1(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\n\u2200x (p_6(x) \u2228 p_7(x))\n\u2200x (\u00acp_6(x) \u2228 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\n\u2200x (p_2(x) \u2192 \u00acp_3(x))\n\u2200x (p_3(x) \u2192 \u00acp_2(x))\np_3(Jream) \u2192 p_1(Jream)",
            "Initial Goal": "p_1(Jream)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream).",
                    "(-p_7(Jream)) | p_0(Jream).",
                    "all x (p_6(x) | p_7(x)).",
                    "all x (-p_6(x) | p_5(x)).",
                    "all x (-(p_4(x) <-> p_5(x))).",
                    "all x (-(p_3(x) <-> p_4(x))).",
                    "all x (-(p_2(x) <-> p_3(x))).",
                    "all x (p_2(x) -> -p_3(x)).",
                    "all x (p_3(x) -> -p_2(x)).",
                    "p_3(Jream) -> p_1(Jream)."
                ],
                "formulas(goals)": [
                    "p_1(Jream)."
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Jream)"
                ],
                "removed_rules": [
                    "\u2200x (p_3(x) \u2192 \u00acp_1(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Jream) \u2192 p_1(Jream)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_0(Jream)\n\u00acp_7(Jream) \u2228 p_0(Jream)\np_6(Jream)\n\u2200x (\u00acp_7(x) \u2192 p_6(x))\n\u2200x (p_6(x) \u2192 p_5(x))\n\u2200x (p_4(x) \u2295 p_5(x))\n\u2200x (p_3(x) \u2295 p_4(x))\n\u2200x (p_2(x) \u2295 p_3(x))\n\u2200x (p_2(x) \u2192 \u00acp_3(x))\n\u2200x (p_3(x) \u2192 \u00acp_2(x))\np_3(Jream) \u2192 p_1(Jream)\np_5(Jream)",
            "Initial Goal": "p_1(Jream)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_0(Jream)",
                    "(-p_7(Jream)) | p_0(Jream)",
                    "p_6(Jream)",
                    "all x (-p_7(x) -> p_6(x))",
                    "all x (p_6(x) -> p_5(x))",
                    "all x (-(p_4(x) <-> p_5(x)))",
                    "all x (-(p_3(x) <-> p_4(x)))",
                    "all x (-(p_2(x) <-> p_3(x)))",
                    "all x (p_2(x) -> -p_3(x))",
                    "all x (p_3(x) -> -p_2(x))",
                    "p_3(Jream) -> p_1(Jream)",
                    "p_5(Jream)"
                ],
                "formulas(goals)": [
                    "p_1(Jream)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_6(x) \u2228 p_7(x))",
                    "\u2200x (\u00acp_6(x) \u2228 p_5(x))"
                ],
                "added_facts": [
                    "p_6(Jream)",
                    "p_5(Jream)"
                ],
                "added_rules": [
                    "\u2200x (\u00acp_7(x) \u2192 p_6(x))",
                    "\u2200x (p_6(x) \u2192 p_5(x))"
                ]
            }
        }
    ]
}