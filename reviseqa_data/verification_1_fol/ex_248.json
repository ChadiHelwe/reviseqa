{
    "background_story": "Munchkin, a surprisingly astute mouse, lived in the walls of a prestigious university's political science department. Fascinated by the discussions and debates he overheard, Munchkin became an avid observer of human behavior, particularly in the realm of politics. He spent his nights scavenging for crumbs and his days analyzing voter trends, polling data, and election strategies. Before long, Munchkin had developed a remarkable understanding of electoral dynamics, earning him the nickname 'psephologist' among the department's faculty. His predictions, though unorthodox, proved uncannily accurate, and he became a beloved, if secretive, contributor to the department's research projects. Munchkin's work remained anonymous, but his insights were invaluable, helping scholars better understand the complexities of political decision-making.",
    "predicates": [
        {
            "id": 0,
            "name": "intelligent"
        },
        {
            "id": 1,
            "name": "gathers_food"
        },
        {
            "id": 2,
            "name": "makes_predictions"
        },
        {
            "id": 3,
            "name": "learns_fast"
        },
        {
            "id": 4,
            "name": "reads_books"
        },
        {
            "id": 5,
            "name": "is_informed"
        },
        {
            "id": 6,
            "name": "experienced"
        },
        {
            "id": 7,
            "name": "accurate"
        },
        {
            "id": 8,
            "name": "studious"
        },
        {
            "id": 9,
            "name": "perceptive"
        },
        {
            "id": 10,
            "name": "observes"
        },
        {
            "id": 11,
            "name": "lives_near_humans"
        },
        {
            "id": 12,
            "name": "analyzes_data"
        },
        {
            "id": 13,
            "name": "listens_well"
        },
        {
            "id": 14,
            "name": "seeks_knowledge"
        },
        {
            "id": 15,
            "name": "sees_details"
        },
        {
            "id": 16,
            "name": "hears_all"
        },
        {
            "id": 17,
            "name": "explores"
        },
        {
            "id": 18,
            "name": "navigates"
        },
        {
            "id": 19,
            "name": "explores_environs"
        },
        {
            "id": 20,
            "name": "curious"
        },
        {
            "id": 21,
            "name": "discerning"
        },
        {
            "id": 22,
            "name": "asks_questions"
        },
        {
            "id": 23,
            "name": "solves_puzzles"
        }
    ],
    "subject_name": "Munchkin",
    "subject_category": "mouse",
    "keyword": "psephologist",
    "all_facts": [
        {
            "id": 0,
            "subject": "Munchkin",
            "text": "Munchkin is intelligent.",
            "fol": "p_0(Munchkin)",
            "str_fol": "intelligent(Munchkin)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Munchkin",
            "text": "Munchkin does not gather food.",
            "fol": "\u00acp_1(Munchkin)",
            "str_fol": "\u00acgathers_food(Munchkin)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Munchkin",
            "text": "Munchkin does not make predictions.",
            "fol": "\u00acp_2(Munchkin)",
            "str_fol": "\u00acmakes_predictions(Munchkin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Munchkin",
            "text": "Munchkin does not learn fast.",
            "fol": "\u00acp_3(Munchkin)",
            "str_fol": "\u00aclearns_fast(Munchkin)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Munchkin",
            "text": "Munchkin does not read books.",
            "fol": "\u00acp_4(Munchkin)",
            "str_fol": "\u00acreads_books(Munchkin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Munchkin",
            "text": "Munchkin is not informed.",
            "fol": "\u00acp_5(Munchkin)",
            "str_fol": "\u00acis_informed(Munchkin)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Munchkin",
            "text": "Munchkin does not analyze data.",
            "fol": "\u00acp_12(Munchkin)",
            "str_fol": "\u00acanalyzes_data(Munchkin)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Munchkin",
            "text": "Munchkin listens well.",
            "fol": "p_13(Munchkin)",
            "str_fol": "listens_well(Munchkin)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Munchkin",
            "text": "Munchkin is studious.",
            "fol": "p_8(Munchkin)",
            "str_fol": "studious(Munchkin)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Munchkin",
            "text": "Munchkin lives near humans.",
            "fol": "p_11(Munchkin)",
            "str_fol": "lives_near_humans(Munchkin)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Munchkin",
            "text": "Munchkin observes human behavior.",
            "fol": "p_10(Munchkin)",
            "str_fol": "observes(Munchkin)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Munchkin",
            "text": "Munchkin is perceptive in his observations.",
            "fol": "p_9(Munchkin)",
            "str_fol": "perceptive(Munchkin)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Munchkin",
            "text": "Munchkin is not accurate in his predictions.",
            "fol": "\u00acp_7(Munchkin)",
            "str_fol": "\u00acaccurate(Munchkin)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Munchkin",
            "text": "Munchkin is not experienced.",
            "fol": "\u00acp_6(Munchkin)",
            "str_fol": "\u00acexperienced(Munchkin)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Munchkin",
            "text": "Munchkin does not read books.",
            "fol": "\u00acp_4(Munchkin)",
            "str_fol": "\u00acreads_books(Munchkin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Munchkin",
            "text": "Munchkin is not informed.",
            "fol": "\u00acp_5(Munchkin)",
            "str_fol": "\u00acis_informed(Munchkin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Munchkin",
            "text": "Munchkin does not learn fast.",
            "fol": "\u00acp_3(Munchkin)",
            "str_fol": "\u00aclearns_fast(Munchkin)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Munchkin",
            "text": "Munchkin does not make predictions.",
            "fol": "\u00acp_2(Munchkin)",
            "str_fol": "\u00acmakes_predictions(Munchkin)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Munchkin",
            "text": "Munchkin does not gather food.",
            "fol": "\u00acp_1(Munchkin)",
            "str_fol": "\u00acgathers_food(Munchkin)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Munchkin",
            "text": "Munchkin is intelligent.",
            "fol": "p_0(Munchkin)",
            "str_fol": "intelligent(Munchkin)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 7,
            "text": "If Munchkin either analyzes data or reads books (but not both), then he is informed.",
            "fol": "(p_12(Munchkin) \u2295 p_4(Munchkin)) \u2192 p_5(Munchkin)",
            "str_fol": "(analyzes_data(Munchkin) \u2295 reads_books(Munchkin)) \u2192 is_informed(Munchkin)"
        },
        {
            "id": 6,
            "text": "Munchkin either listens well or learns fast.",
            "fol": "p_13(Munchkin) \u2228 p_3(Munchkin)",
            "str_fol": "listens_well(Munchkin) \u2228 learns_fast(Munchkin)"
        },
        {
            "id": 5,
            "text": "If Munchkin listens well, then he is either studious or makes predictions (or both).",
            "fol": "p_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))",
            "str_fol": "listens_well(Munchkin) \u2192 (studious(Munchkin) \u2228 makes_predictions(Munchkin))"
        },
        {
            "id": 4,
            "text": "Munchkin either lives near humans or gathers food, but not both.",
            "fol": "p_11(Munchkin) \u2295 p_1(Munchkin)",
            "str_fol": "lives_near_humans(Munchkin) \u2295 gathers_food(Munchkin)"
        },
        {
            "id": 3,
            "text": "If Munchkin lives near humans, then he either observes human behavior or analyzes data, but not both.",
            "fol": "p_11(Munchkin) \u2192 (p_10(Munchkin) \u2295 p_12(Munchkin))",
            "str_fol": "lives_near_humans(Munchkin) \u2192 (observes(Munchkin) \u2295 analyzes_data(Munchkin))"
        },
        {
            "id": 2,
            "text": "All mice that observe are perceptive.",
            "fol": "\u2200x (p_10(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (observes(x) \u2192 perceptive(x))"
        },
        {
            "id": 1,
            "text": "If Munchkin is studious, then he is either accurate in his predictions or perceptive in his observations, but not both.",
            "fol": "p_8(Munchkin) \u2192 (p_7(Munchkin) \u2295 p_9(Munchkin))",
            "str_fol": "studious(Munchkin) \u2192 (accurate(Munchkin) \u2295 perceptive(Munchkin))"
        },
        {
            "id": 0,
            "text": "If Munchkin is either intelligent or experienced (but not both), then he is accurate in his predictions.",
            "fol": "(p_0(Munchkin) \u2295 p_6(Munchkin)) \u2192 p_7(Munchkin)",
            "str_fol": "(intelligent(Munchkin) \u2295 experienced(Munchkin)) \u2192 accurate(Munchkin)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Munchkin",
            "text": "Munchkin does not read books.",
            "fol": "\u00acp_4(Munchkin)",
            "str_fol": "\u00acreads_books(Munchkin)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Munchkin",
            "text": "Munchkin is not informed.",
            "fol": "\u00acp_5(Munchkin)",
            "str_fol": "\u00acis_informed(Munchkin)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Munchkin",
            "text": "Munchkin does not learn fast.",
            "fol": "\u00acp_3(Munchkin)",
            "str_fol": "\u00aclearns_fast(Munchkin)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Munchkin",
            "text": "Munchkin does not make predictions.",
            "fol": "\u00acp_2(Munchkin)",
            "str_fol": "\u00acmakes_predictions(Munchkin)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Munchkin",
            "text": "Munchkin does not gather food.",
            "fol": "\u00acp_1(Munchkin)",
            "str_fol": "\u00acgathers_food(Munchkin)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Munchkin",
            "text": "Munchkin is intelligent.",
            "fol": "p_0(Munchkin)",
            "str_fol": "intelligent(Munchkin)",
            "negation": false
        },
        {
            "id": 7,
            "text": "If Munchkin either analyzes data or reads books (but not both), then he is informed.",
            "fol": "(p_12(Munchkin) \u2295 p_4(Munchkin)) \u2192 p_5(Munchkin)",
            "str_fol": "(analyzes_data(Munchkin) \u2295 reads_books(Munchkin)) \u2192 is_informed(Munchkin)"
        },
        {
            "id": 6,
            "text": "Munchkin either listens well or learns fast.",
            "fol": "p_13(Munchkin) \u2228 p_3(Munchkin)",
            "str_fol": "listens_well(Munchkin) \u2228 learns_fast(Munchkin)"
        },
        {
            "id": 5,
            "text": "If Munchkin listens well, then he is either studious or makes predictions (or both).",
            "fol": "p_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))",
            "str_fol": "listens_well(Munchkin) \u2192 (studious(Munchkin) \u2228 makes_predictions(Munchkin))"
        },
        {
            "id": 4,
            "text": "Munchkin either lives near humans or gathers food, but not both.",
            "fol": "p_11(Munchkin) \u2295 p_1(Munchkin)",
            "str_fol": "lives_near_humans(Munchkin) \u2295 gathers_food(Munchkin)"
        },
        {
            "id": 3,
            "text": "If Munchkin lives near humans, then he either observes human behavior or analyzes data, but not both.",
            "fol": "p_11(Munchkin) \u2192 (p_10(Munchkin) \u2295 p_12(Munchkin))",
            "str_fol": "lives_near_humans(Munchkin) \u2192 (observes(Munchkin) \u2295 analyzes_data(Munchkin))"
        },
        {
            "id": 2,
            "text": "All mice that observe are perceptive.",
            "fol": "\u2200x (p_10(x) \u2192 p_9(x))",
            "str_fol": "\u2200x (observes(x) \u2192 perceptive(x))"
        },
        {
            "id": 1,
            "text": "If Munchkin is studious, then he is either accurate in his predictions or perceptive in his observations, but not both.",
            "fol": "p_8(Munchkin) \u2192 (p_7(Munchkin) \u2295 p_9(Munchkin))",
            "str_fol": "studious(Munchkin) \u2192 (accurate(Munchkin) \u2295 perceptive(Munchkin))"
        },
        {
            "id": 0,
            "text": "If Munchkin is either intelligent or experienced (but not both), then he is accurate in his predictions.",
            "fol": "(p_0(Munchkin) \u2295 p_6(Munchkin)) \u2192 p_7(Munchkin)",
            "str_fol": "(intelligent(Munchkin) \u2295 experienced(Munchkin)) \u2192 accurate(Munchkin)"
        }
    ],
    "context_fol": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\n(p_12(Munchkin) \u2295 p_4(Munchkin)) \u2192 p_5(Munchkin)\np_13(Munchkin) \u2228 p_3(Munchkin)\np_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))\np_11(Munchkin) \u2295 p_1(Munchkin)\np_11(Munchkin) \u2192 (p_10(Munchkin) \u2295 p_12(Munchkin))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 (p_7(Munchkin) \u2295 p_9(Munchkin))\n(p_0(Munchkin) \u2295 p_6(Munchkin)) \u2192 p_7(Munchkin)",
    "conclusion": {
        "id": 13,
        "subject": "Munchkin",
        "text": "Munchkin is not experienced.",
        "fol": "\u00acp_6(Munchkin)",
        "str_fol": "\u00acexperienced(Munchkin)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_6(Munchkin)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Munchkin",
                    "text": "Munchkin does not read books.",
                    "fol": "\u00acp_4(Munchkin)",
                    "str_fol": "\u00acreads_books(Munchkin)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Munchkin",
                    "text": "Munchkin is not informed.",
                    "fol": "\u00acp_5(Munchkin)",
                    "str_fol": "\u00acis_informed(Munchkin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Munchkin either analyzes data or reads books (but not both), then he is informed.",
                    "fol": "(p_12(Munchkin) \u2295 p_4(Munchkin)) \u2192 p_5(Munchkin)",
                    "str_fol": "(analyzes_data(Munchkin) \u2295 reads_books(Munchkin)) \u2192 is_informed(Munchkin)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Munchkin",
                "text": "Munchkin does not analyze data.",
                "fol": "\u00acp_12(Munchkin)",
                "str_fol": "\u00acanalyzes_data(Munchkin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Munchkin",
                    "text": "Munchkin does not learn fast.",
                    "fol": "\u00acp_3(Munchkin)",
                    "str_fol": "\u00aclearns_fast(Munchkin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Munchkin either listens well or learns fast.",
                    "fol": "p_13(Munchkin) \u2228 p_3(Munchkin)",
                    "str_fol": "listens_well(Munchkin) \u2228 learns_fast(Munchkin)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Munchkin",
                "text": "Munchkin listens well.",
                "fol": "p_13(Munchkin)",
                "str_fol": "listens_well(Munchkin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Munchkin",
                    "text": "Munchkin listens well.",
                    "fol": "p_13(Munchkin)",
                    "str_fol": "listens_well(Munchkin)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Munchkin",
                    "text": "Munchkin does not make predictions.",
                    "fol": "\u00acp_2(Munchkin)",
                    "str_fol": "\u00acmakes_predictions(Munchkin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Munchkin listens well, then he is either studious or makes predictions (or both).",
                    "fol": "p_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))",
                    "str_fol": "listens_well(Munchkin) \u2192 (studious(Munchkin) \u2228 makes_predictions(Munchkin))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Munchkin",
                "text": "Munchkin is studious.",
                "fol": "p_8(Munchkin)",
                "str_fol": "studious(Munchkin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Munchkin",
                    "text": "Munchkin does not gather food.",
                    "fol": "\u00acp_1(Munchkin)",
                    "str_fol": "\u00acgathers_food(Munchkin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Munchkin either lives near humans or gathers food, but not both.",
                    "fol": "p_11(Munchkin) \u2295 p_1(Munchkin)",
                    "str_fol": "lives_near_humans(Munchkin) \u2295 gathers_food(Munchkin)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Munchkin",
                "text": "Munchkin lives near humans.",
                "fol": "p_11(Munchkin)",
                "str_fol": "lives_near_humans(Munchkin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Munchkin",
                    "text": "Munchkin lives near humans.",
                    "fol": "p_11(Munchkin)",
                    "str_fol": "lives_near_humans(Munchkin)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Munchkin",
                    "text": "Munchkin does not analyze data.",
                    "fol": "\u00acp_12(Munchkin)",
                    "str_fol": "\u00acanalyzes_data(Munchkin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Munchkin lives near humans, then he either observes human behavior or analyzes data, but not both.",
                    "fol": "p_11(Munchkin) \u2192 (p_10(Munchkin) \u2295 p_12(Munchkin))",
                    "str_fol": "lives_near_humans(Munchkin) \u2192 (observes(Munchkin) \u2295 analyzes_data(Munchkin))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Munchkin",
                "text": "Munchkin observes human behavior.",
                "fol": "p_10(Munchkin)",
                "str_fol": "observes(Munchkin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Munchkin",
                    "text": "Munchkin observes human behavior.",
                    "fol": "p_10(Munchkin)",
                    "str_fol": "observes(Munchkin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "All mice that observe are perceptive.",
                    "fol": "\u2200x (p_10(x) \u2192 p_9(x))",
                    "str_fol": "\u2200x (observes(x) \u2192 perceptive(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Munchkin",
                "text": "Munchkin is perceptive in his observations.",
                "fol": "p_9(Munchkin)",
                "str_fol": "perceptive(Munchkin)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Munchkin",
                    "text": "Munchkin is studious.",
                    "fol": "p_8(Munchkin)",
                    "str_fol": "studious(Munchkin)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Munchkin",
                    "text": "Munchkin is perceptive in his observations.",
                    "fol": "p_9(Munchkin)",
                    "str_fol": "perceptive(Munchkin)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Munchkin is studious, then he is either accurate in his predictions or perceptive in his observations, but not both.",
                    "fol": "p_8(Munchkin) \u2192 (p_7(Munchkin) \u2295 p_9(Munchkin))",
                    "str_fol": "studious(Munchkin) \u2192 (accurate(Munchkin) \u2295 perceptive(Munchkin))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Munchkin",
                "text": "Munchkin is not accurate in his predictions.",
                "fol": "\u00acp_7(Munchkin)",
                "str_fol": "\u00acaccurate(Munchkin)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Munchkin",
                    "text": "Munchkin is intelligent.",
                    "fol": "p_0(Munchkin)",
                    "str_fol": "intelligent(Munchkin)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Munchkin",
                    "text": "Munchkin is not accurate in his predictions.",
                    "fol": "\u00acp_7(Munchkin)",
                    "str_fol": "\u00acaccurate(Munchkin)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Munchkin is either intelligent or experienced (but not both), then he is accurate in his predictions.",
                    "fol": "(p_0(Munchkin) \u2295 p_6(Munchkin)) \u2192 p_7(Munchkin)",
                    "str_fol": "(intelligent(Munchkin) \u2295 experienced(Munchkin)) \u2192 accurate(Munchkin)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Munchkin",
                "text": "Munchkin is not experienced.",
                "fol": "\u00acp_6(Munchkin)",
                "str_fol": "\u00acexperienced(Munchkin)",
                "negation": true
            }
        }
    ],
    "proof_trace": "1 -(p_12(Munchkin) <-> p_4(Munchkin)) -> p_5(Munchkin).  [assumption].\n2 p_13(Munchkin) -> p_8(Munchkin) | p_2(Munchkin).  [assumption].\n3 -(p_11(Munchkin) <-> p_1(Munchkin)).  [assumption].\n4 p_11(Munchkin) -> -(p_10(Munchkin) <-> p_12(Munchkin)).  [assumption].\n5 (all x (p_10(x) -> p_9(x))).  [assumption].\n6 p_8(Munchkin) -> -(p_7(Munchkin) <-> p_9(Munchkin)).  [assumption].\n7 -(p_0(Munchkin) <-> p_6(Munchkin)) -> p_7(Munchkin).  [assumption].\n8 --p_6(Munchkin).  [goal].\n9 -p_12(Munchkin) | p_4(Munchkin) | p_5(Munchkin).  [clausify(1)].\n10 -p_4(Munchkin).  [assumption].\n12 -p_12(Munchkin) | p_5(Munchkin).  [resolve(9,b,10,a)].\n13 -p_5(Munchkin).  [assumption].\n14 p_13(Munchkin) | p_3(Munchkin).  [assumption].\n15 -p_3(Munchkin).  [assumption].\n16 -p_13(Munchkin) | p_8(Munchkin) | p_2(Munchkin).  [clausify(2)].\n17 -p_2(Munchkin).  [assumption].\n18 p_11(Munchkin) | p_1(Munchkin).  [clausify(3)].\n19 -p_1(Munchkin).  [assumption].\n21 -p_0(Munchkin) | p_6(Munchkin) | p_7(Munchkin).  [clausify(7)].\n22 p_0(Munchkin).  [assumption].\n24 p_11(Munchkin).  [resolve(18,b,19,a)].\n25 -p_11(Munchkin) | p_10(Munchkin) | p_12(Munchkin).  [clausify(4)].\n27 p_10(Munchkin) | p_12(Munchkin).  [resolve(24,a,25,a)].\n28 -p_10(x) | p_9(x).  [clausify(5)].\n30 -p_13(Munchkin) | p_8(Munchkin).  [resolve(16,c,17,a)].\n32 -p_8(Munchkin) | -p_7(Munchkin) | -p_9(Munchkin).  [clausify(6)].\n33 p_6(Munchkin) | p_7(Munchkin).  [resolve(21,a,22,a)].\n34 -p_6(Munchkin).  [deny(8)].\n35 p_12(Munchkin) | p_9(Munchkin).  [resolve(27,a,28,a)].\n36 -p_12(Munchkin).  [resolve(12,b,13,a)].\n38 p_13(Munchkin).  [resolve(14,b,15,a)].\n39 -p_13(Munchkin) | -p_7(Munchkin) | -p_9(Munchkin).  [resolve(30,b,32,a)].\n40 -p_7(Munchkin) | -p_9(Munchkin).  [resolve(39,a,38,a)].\n41 p_7(Munchkin).  [resolve(33,a,34,a)].\n42 -p_9(Munchkin).  [resolve(40,a,41,a)].\n43 p_9(Munchkin).  [resolve(35,a,36,a)].\n44 $F.  [resolve(42,a,43,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Munchkin).\n\u00acp_5(Munchkin).\n\u00acp_3(Munchkin).\n\u00acp_2(Munchkin).\n\u00acp_1(Munchkin).\np_0(Munchkin).\n(\u00ac(p_12(Munchkin) \u2194 p_4(Munchkin))) \u2192 p_5(Munchkin).\np_13(Munchkin) \u2228 p_3(Munchkin).\np_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin)).\np_11(Munchkin) \u2194 p_1(Munchkin).\np_11(Munchkin) \u2192 (\u00ac(p_10(Munchkin) \u2194 p_12(Munchkin))).\n\u2200x (p_10(x) \u2192 p_9(x)).\np_8(Munchkin) \u2192 (\u00ac(p_7(Munchkin) \u2194 p_9(Munchkin))).\n(\u00ac(p_0(Munchkin) \u2194 p_6(Munchkin))) \u2192 p_7(Munchkin).\np_0(Munchkin) \u2192 \u00acp_6(Munchkin).",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin).",
                    "-p_5(Munchkin).",
                    "-p_3(Munchkin).",
                    "-p_2(Munchkin).",
                    "-p_1(Munchkin).",
                    "p_0(Munchkin).",
                    "(-(p_12(Munchkin) <-> p_4(Munchkin))) -> p_5(Munchkin).",
                    "p_13(Munchkin) | p_3(Munchkin).",
                    "p_13(Munchkin) -> (p_8(Munchkin) | p_2(Munchkin)).",
                    "(p_11(Munchkin) <-> p_1(Munchkin)).",
                    "p_11(Munchkin) -> (-(p_10(Munchkin) <-> p_12(Munchkin))).",
                    "(all x (p_10(x) -> p_9(x))).",
                    "p_8(Munchkin) -> (-(p_7(Munchkin) <-> p_9(Munchkin))).",
                    "(-(p_0(Munchkin) <-> p_6(Munchkin))) -> p_7(Munchkin).",
                    "(p_0(Munchkin) -> -p_6(Munchkin))."
                ],
                "formulas(goals)": [
                    "-p_6(Munchkin)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00ac(p_11(Munchkin) \u2194 p_1(Munchkin))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_11(Munchkin) \u2194 p_1(Munchkin)",
                    "p_0(Munchkin) \u2192 \u00acp_6(Munchkin)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\n(\u00ac(p_12(Munchkin) \u2194 p_4(Munchkin))) \u2192 p_5(Munchkin)\np_13(Munchkin) \u2228 p_3(Munchkin)\np_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))\np_11(Munchkin) \u2194 p_1(Munchkin)\np_11(Munchkin) \u2192 (\u00ac(p_10(Munchkin) \u2194 p_12(Munchkin)))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 (\u00ac(p_7(Munchkin) \u2194 p_9(Munchkin)))\n(\u00ac(p_0(Munchkin) \u2194 p_6(Munchkin))) \u2192 p_7(Munchkin)\np_0(Munchkin) \u2192 p_6(Munchkin)",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin).",
                    "-p_5(Munchkin).",
                    "-p_3(Munchkin).",
                    "-p_2(Munchkin).",
                    "-p_1(Munchkin).",
                    "p_0(Munchkin).",
                    "(-(p_12(Munchkin) <-> p_4(Munchkin))) -> p_5(Munchkin).",
                    "p_13(Munchkin) | p_3(Munchkin).",
                    "p_13(Munchkin) -> (p_8(Munchkin) | p_2(Munchkin)).",
                    "p_11(Munchkin) <-> p_1(Munchkin).",
                    "p_11(Munchkin) -> (-(p_10(Munchkin) <-> p_12(Munchkin))).",
                    "all x (p_10(x) -> p_9(x)).",
                    "p_8(Munchkin) -> (-(p_7(Munchkin) <-> p_9(Munchkin))).",
                    "(-(p_0(Munchkin) <-> p_6(Munchkin))) -> p_7(Munchkin).",
                    "p_0(Munchkin) -> p_6(Munchkin)."
                ],
                "formulas(goals)": [
                    "-(-p_6(Munchkin))."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Munchkin) \u2192 \u00acp_6(Munchkin)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_0(Munchkin) \u2192 p_6(Munchkin)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\n(\u00ac(p_12(Munchkin) \u2194 p_4(Munchkin))) \u2192 p_5(Munchkin)\np_13(Munchkin) \u2228 p_3(Munchkin)\np_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))\np_11(Munchkin) \u2194 p_1(Munchkin)\np_11(Munchkin) \u2192 (\u00ac(p_10(Munchkin) \u2194 p_12(Munchkin)))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 (\u00ac(p_7(Munchkin) \u2194 p_9(Munchkin)))\n(\u00ac(p_0(Munchkin) \u2194 p_6(Munchkin))) \u2192 p_7(Munchkin)\n\u00acp_4(Munchkin) \u2192 \u00acp_6(Munchkin)",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin)",
                    "-p_5(Munchkin)",
                    "-p_3(Munchkin)",
                    "-p_2(Munchkin)",
                    "-p_1(Munchkin)",
                    "p_0(Munchkin)",
                    "(-(p_12(Munchkin) <-> p_4(Munchkin))) -> p_5(Munchkin)",
                    "p_13(Munchkin) | p_3(Munchkin)",
                    "p_13(Munchkin) -> (p_8(Munchkin) | p_2(Munchkin))",
                    "p_11(Munchkin) <-> p_1(Munchkin)",
                    "p_11(Munchkin) -> (-(p_10(Munchkin) <-> p_12(Munchkin)))",
                    "all x (p_10(x) -> p_9(x))",
                    "p_8(Munchkin) -> (-(p_7(Munchkin) <-> p_9(Munchkin)))",
                    "(-(p_0(Munchkin) <-> p_6(Munchkin))) -> p_7(Munchkin)",
                    "-p_4(Munchkin) -> -p_6(Munchkin)"
                ],
                "formulas(goals)": [
                    "-p_6(Munchkin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_0(Munchkin) \u2192 p_6(Munchkin)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Munchkin) \u2192 \u00acp_6(Munchkin)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\n(\u00ac(p_12(Munchkin) \u2194 p_4(Munchkin))) \u2192 p_5(Munchkin)\np_13(Munchkin) \u2228 p_3(Munchkin)\np_13(Munchkin) \u2192 (p_8(Munchkin) \u2228 p_2(Munchkin))\np_11(Munchkin) \u2194 p_1(Munchkin)\np_11(Munchkin) \u2192 (\u00ac(p_10(Munchkin) \u2194 p_12(Munchkin)))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 (\u00ac(p_7(Munchkin) \u2194 p_9(Munchkin)))\n(\u00ac(p_0(Munchkin) \u2194 p_6(Munchkin))) \u2192 p_7(Munchkin)\n\u00acp_4(Munchkin) \u2192 p_6(Munchkin)",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin)",
                    "-p_5(Munchkin)",
                    "-p_3(Munchkin)",
                    "-p_2(Munchkin)",
                    "-p_1(Munchkin)",
                    "p_0(Munchkin)",
                    "(-(p_12(Munchkin) <-> p_4(Munchkin))) -> p_5(Munchkin)",
                    "p_13(Munchkin) | p_3(Munchkin)",
                    "p_13(Munchkin) -> (p_8(Munchkin) | p_2(Munchkin))",
                    "p_11(Munchkin) <-> p_1(Munchkin)",
                    "p_11(Munchkin) -> (-(p_10(Munchkin) <-> p_12(Munchkin)))",
                    "all x (p_10(x) -> p_9(x))",
                    "p_8(Munchkin) -> (-(p_7(Munchkin) <-> p_9(Munchkin)))",
                    "(-(p_0(Munchkin) <-> p_6(Munchkin))) -> p_7(Munchkin)",
                    "-p_4(Munchkin) -> p_6(Munchkin)"
                ],
                "formulas(goals)": [
                    "-(-p_6(Munchkin))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u00acp_4(Munchkin) \u2192 \u00acp_6(Munchkin)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Munchkin) \u2192 p_6(Munchkin)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\n(\u00ac(p_12(Munchkin) \u2194 p_4(Munchkin))) \u2192 p_5(Munchkin)\n\u00acp_13(Munchkin) \u2192 p_3(Munchkin)\n(p_13(Munchkin) \u2227 \u00acp_8(Munchkin)) \u2192 p_2(Munchkin)\np_11(Munchkin) \u2194 p_1(Munchkin)\np_11(Munchkin) \u2192 (\u00ac(p_10(Munchkin) \u2194 p_12(Munchkin)))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 (\u00ac(p_7(Munchkin) \u2194 p_9(Munchkin)))\n(\u00ac(p_0(Munchkin) \u2194 p_6(Munchkin))) \u2192 p_7(Munchkin)\np_4(Munchkin) \u2228 p_6(Munchkin)",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin)",
                    "-p_5(Munchkin)",
                    "-p_3(Munchkin)",
                    "-p_2(Munchkin)",
                    "-p_1(Munchkin)",
                    "p_0(Munchkin)",
                    "(-(p_12(Munchkin) <-> p_4(Munchkin))) -> p_5(Munchkin)",
                    "-p_13(Munchkin) -> p_3(Munchkin)",
                    "(p_13(Munchkin) & -p_8(Munchkin)) -> p_2(Munchkin)",
                    "p_11(Munchkin) <-> p_1(Munchkin)",
                    "p_11(Munchkin) -> (-(p_10(Munchkin) <-> p_12(Munchkin)))",
                    "all x (p_10(x) -> p_9(x))",
                    "p_8(Munchkin) -> (-(p_7(Munchkin) <-> p_9(Munchkin)))",
                    "(-(p_0(Munchkin) <-> p_6(Munchkin))) -> p_7(Munchkin)",
                    "p_4(Munchkin) | p_6(Munchkin)"
                ],
                "formulas(goals)": [
                    "-(-p_6(Munchkin))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_13(Munchkin) \u2192 p_3(Munchkin)",
                    "(p_13(Munchkin) \u2227 \u00acp_8(Munchkin)) \u2192 p_2(Munchkin)",
                    "p_4(Munchkin) \u2228 p_6(Munchkin)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\np_5(Munchkin) \u2228 (p_12(Munchkin) \u2194 p_4(Munchkin))\np_13(Munchkin) \u2228 p_3(Munchkin)\n\u00acp_13(Munchkin) \u2228 p_8(Munchkin) \u2228 p_2(Munchkin)\np_11(Munchkin) \u2194 p_1(Munchkin)\np_11(Munchkin) \u2192 \u00ac(p_10(Munchkin) \u2194 p_12(Munchkin))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 \u00ac(p_7(Munchkin) \u2194 p_9(Munchkin))\n(p_0(Munchkin) \u2194 p_6(Munchkin)) \u2228 p_7(Munchkin)\np_4(Munchkin) \u2228 p_6(Munchkin)\np_6(Munchkin) \u2228 p_4(Munchkin)\n\u00acp_4(Munchkin) \u2192 p_6(Munchkin)\np_6(Munchkin)",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin)",
                    "-p_5(Munchkin)",
                    "-p_3(Munchkin)",
                    "-p_2(Munchkin)",
                    "-p_1(Munchkin)",
                    "p_0(Munchkin)",
                    "p_5(Munchkin) | (p_12(Munchkin) <-> p_4(Munchkin))",
                    "p_13(Munchkin) | p_3(Munchkin)",
                    "(-p_13(Munchkin)) | p_8(Munchkin) | p_2(Munchkin)",
                    "p_11(Munchkin) <-> p_1(Munchkin)",
                    "p_11(Munchkin) -> (-(p_10(Munchkin) <-> p_12(Munchkin)))",
                    "all x (p_10(x) -> p_9(x))",
                    "p_8(Munchkin) -> (-(p_7(Munchkin) <-> p_9(Munchkin)))",
                    "(p_0(Munchkin) <-> p_6(Munchkin)) | p_7(Munchkin)",
                    "p_4(Munchkin) | p_6(Munchkin)",
                    "p_6(Munchkin) | p_4(Munchkin)",
                    "(-p_4(Munchkin)) -> p_6(Munchkin)",
                    "p_6(Munchkin)"
                ],
                "formulas(goals)": [
                    "p_6(Munchkin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_6(Munchkin)"
                ],
                "added_rules": [
                    "p_5(Munchkin) \u2228 (p_12(Munchkin) \u2194 p_4(Munchkin))",
                    "p_13(Munchkin) \u2228 p_3(Munchkin)",
                    "\u00acp_13(Munchkin) \u2228 p_8(Munchkin) \u2228 p_2(Munchkin)",
                    "(p_0(Munchkin) \u2194 p_6(Munchkin)) \u2228 p_7(Munchkin)",
                    "p_6(Munchkin) \u2228 p_4(Munchkin)",
                    "\u00acp_4(Munchkin) \u2192 p_6(Munchkin)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Munchkin)\n\u00acp_5(Munchkin)\n\u00acp_3(Munchkin)\n\u00acp_2(Munchkin)\n\u00acp_1(Munchkin)\np_0(Munchkin)\np_5(Munchkin) \u2228 (p_12(Munchkin) \u2194 p_4(Munchkin))\np_13(Munchkin) \u2228 p_3(Munchkin)\n\u00acp_13(Munchkin) \u2228 p_8(Munchkin) \u2228 p_2(Munchkin)\np_11(Munchkin) \u2194 p_1(Munchkin)\np_11(Munchkin) \u2192 \u00ac(p_10(Munchkin) \u2194 p_12(Munchkin))\n\u2200x (p_10(x) \u2192 p_9(x))\np_8(Munchkin) \u2192 \u00ac(p_7(Munchkin) \u2194 p_9(Munchkin))\n(p_0(Munchkin) \u2194 p_6(Munchkin)) \u2228 p_7(Munchkin)\n\u00acp_4(Munchkin) \u2192 \u00acp_6(Munchkin)",
            "Initial Goal": "\u00acp_6(Munchkin)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Munchkin)",
                    "-p_5(Munchkin)",
                    "-p_3(Munchkin)",
                    "-p_2(Munchkin)",
                    "-p_1(Munchkin)",
                    "p_0(Munchkin)",
                    "p_5(Munchkin) | (p_12(Munchkin) <-> p_4(Munchkin))",
                    "p_13(Munchkin) | p_3(Munchkin)",
                    "-p_13(Munchkin) | p_8(Munchkin) | p_2(Munchkin)",
                    "p_11(Munchkin) <-> p_1(Munchkin)",
                    "p_11(Munchkin) -> -(p_10(Munchkin) <-> p_12(Munchkin))",
                    "all x (p_10(x) -> p_9(x))",
                    "p_8(Munchkin) -> -(p_7(Munchkin) <-> p_9(Munchkin))",
                    "(p_0(Munchkin) <-> p_6(Munchkin)) | p_7(Munchkin)",
                    "-p_4(Munchkin) -> -p_6(Munchkin)"
                ],
                "formulas(goals)": [
                    "-p_6(Munchkin)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Munchkin)"
                ],
                "removed_rules": [
                    "p_4(Munchkin) \u2228 p_6(Munchkin)",
                    "p_6(Munchkin) \u2228 p_4(Munchkin)",
                    "\u00acp_4(Munchkin) \u2192 p_6(Munchkin)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00acp_4(Munchkin) \u2192 \u00acp_6(Munchkin)"
                ]
            }
        }
    ]
}