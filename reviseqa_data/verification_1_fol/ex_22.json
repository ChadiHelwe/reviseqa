{
    "background_story": "Felipe was the quintessential neighbor who always seemed to know everyone's business. His curiosity often got the better of him, leading him to snoop around and ask intrusive questions. Despite his good intentions, Felipe's nosiness frequently landed him in trouble, with neighbors avoiding him or outright telling him to mind his own affairs. One day, while peeking through the fence, Felipe discovered his neighbor, Mrs. Jenkins, was secretly a talented painter. Instead of respecting her privacy, he couldn't wait to share the news with the rest of the community. Felipe's inability to keep a secret almost cost him his friendships, teaching him a hard lesson about the importance of respecting others' privacy and the dangers of excessive nosiness.",
    "predicates": [
        {
            "id": 0,
            "name": "respects_boundaries"
        },
        {
            "id": 1,
            "name": "has_integrity"
        },
        {
            "id": 2,
            "name": "apologize"
        },
        {
            "id": 3,
            "name": "is_loyal"
        },
        {
            "id": 4,
            "name": "listens_actively"
        },
        {
            "id": 5,
            "name": "regains_trust"
        },
        {
            "id": 6,
            "name": "nosy"
        },
        {
            "id": 7,
            "name": "discreet"
        },
        {
            "id": 8,
            "name": "keeps_secrets"
        },
        {
            "id": 9,
            "name": "is_trustworthy"
        },
        {
            "id": 10,
            "name": "is_honest"
        },
        {
            "id": 11,
            "name": "earns_respect"
        },
        {
            "id": 12,
            "name": "gossips_frequently"
        },
        {
            "id": 13,
            "name": "make_amends"
        },
        {
            "id": 14,
            "name": "mends_relationships"
        },
        {
            "id": 15,
            "name": "curious"
        },
        {
            "id": 16,
            "name": "considerate"
        },
        {
            "id": 17,
            "name": "is_curious"
        },
        {
            "id": 18,
            "name": "is_tactful"
        },
        {
            "id": 19,
            "name": "values_privacy"
        },
        {
            "id": 20,
            "name": "is_reliable"
        },
        {
            "id": 21,
            "name": "istransparent"
        },
        {
            "id": 22,
            "name": "tells_truth"
        },
        {
            "id": 23,
            "name": "admits_fault"
        },
        {
            "id": 24,
            "name": "invades_privacy"
        },
        {
            "id": 25,
            "name": "faces_consequences"
        },
        {
            "id": 26,
            "name": "lacks_self_control"
        },
        {
            "id": 27,
            "name": "speaks_frankly"
        },
        {
            "id": 28,
            "name": "learns_lesson"
        },
        {
            "id": 29,
            "name": "changes_behavior"
        }
    ],
    "subject_name": "Felipe",
    "subject_category": "human",
    "keyword": "nosiness",
    "all_facts": [
        {
            "id": 0,
            "subject": "Felipe",
            "text": "Felipe respects boundaries.",
            "fol": "p_0(Felipe)",
            "str_fol": "respects_boundaries(Felipe)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Felipe",
            "text": "Felipe does not have integrity.",
            "fol": "\u00acp_1(Felipe)",
            "str_fol": "\u00achas_integrity(Felipe)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Felipe",
            "text": "Felipe apologizes.",
            "fol": "p_2(Felipe)",
            "str_fol": "apologize(Felipe)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Felipe",
            "text": "Felipe is loyal.",
            "fol": "p_3(Felipe)",
            "str_fol": "is_loyal(Felipe)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Felipe",
            "text": "Felipe does not listen actively.",
            "fol": "\u00acp_4(Felipe)",
            "str_fol": "\u00aclistens_actively(Felipe)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Felipe",
            "text": "Felipe does not regain trust.",
            "fol": "\u00acp_5(Felipe)",
            "str_fol": "\u00acregains_trust(Felipe)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Felipe",
            "text": "Felipe does not mend relationships.",
            "fol": "\u00acp_14(Felipe)",
            "str_fol": "\u00acmends_relationships(Felipe)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Felipe",
            "text": "Felipe does not gossip frequently.",
            "fol": "\u00acp_12(Felipe)",
            "str_fol": "\u00acgossips_frequently(Felipe)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Felipe",
            "text": "Felipe makes amends.",
            "fol": "p_13(Felipe)",
            "str_fol": "make_amends(Felipe)",
            "negation": false
        },
        {
            "id": 9,
            "subject": "Felipe",
            "text": "Felipe is honest.",
            "fol": "p_10(Felipe)",
            "str_fol": "is_honest(Felipe)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Felipe",
            "text": "Felipe earns respect.",
            "fol": "p_11(Felipe)",
            "str_fol": "earns_respect(Felipe)",
            "negation": false
        },
        {
            "id": 11,
            "subject": "Felipe",
            "text": "Felipe does not keep secrets.",
            "fol": "\u00acp_8(Felipe)",
            "str_fol": "\u00ackeeps_secrets(Felipe)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Felipe",
            "text": "Felipe is not discreet.",
            "fol": "\u00acp_7(Felipe)",
            "str_fol": "\u00acdiscreet(Felipe)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Felipe",
            "text": "Felipe is not nosy.",
            "fol": "\u00acp_6(Felipe)",
            "str_fol": "\u00acnosy(Felipe)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 4,
            "subject": "Felipe",
            "text": "Felipe does not listen actively.",
            "fol": "\u00acp_4(Felipe)",
            "str_fol": "\u00aclistens_actively(Felipe)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Felipe",
            "text": "Felipe does not regain trust.",
            "fol": "\u00acp_5(Felipe)",
            "str_fol": "\u00acregains_trust(Felipe)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Felipe",
            "text": "Felipe is loyal.",
            "fol": "p_3(Felipe)",
            "str_fol": "is_loyal(Felipe)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Felipe",
            "text": "Felipe apologizes.",
            "fol": "p_2(Felipe)",
            "str_fol": "apologize(Felipe)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Felipe",
            "text": "Felipe does not have integrity.",
            "fol": "\u00acp_1(Felipe)",
            "str_fol": "\u00achas_integrity(Felipe)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Felipe",
            "text": "Felipe respects boundaries.",
            "fol": "p_0(Felipe)",
            "str_fol": "respects_boundaries(Felipe)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Anyone who listens actively or mends relationships can regain trust.",
            "fol": "\u2200x ((p_4(x) \u2228 p_14(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((listens_actively(x) \u2228 mends_relationships(x)) \u2192 regains_trust(x))"
        },
        {
            "id": 7,
            "text": "Felipe is either loyal or gossips frequently, but not both.",
            "fol": "p_3(Felipe) \u2295 p_12(Felipe)",
            "str_fol": "is_loyal(Felipe) \u2295 gossips_frequently(Felipe)"
        },
        {
            "id": 6,
            "text": "Felipe either mends relationships or makes amends.",
            "fol": "p_14(Felipe) \u2228 p_13(Felipe)",
            "str_fol": "mends_relationships(Felipe) \u2228 make_amends(Felipe)"
        },
        {
            "id": 5,
            "text": "If Felipe apologizes, then he makes amends and is honest.",
            "fol": "p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe))",
            "str_fol": "apologize(Felipe) \u2192 (make_amends(Felipe) \u2227 is_honest(Felipe))"
        },
        {
            "id": 4,
            "text": "A person who earns respect does not gossip frequently, and a person who gossips frequently does not earn respect.",
            "fol": "\u2200x (p_11(x) \u2295 p_12(x))",
            "str_fol": "\u2200x (earns_respect(x) \u2295 gossips_frequently(x))"
        },
        {
            "id": 3,
            "text": "Anyone who is trustworthy or honest earns respect.",
            "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((is_trustworthy(x) \u2228 is_honest(x)) \u2192 earns_respect(x))"
        },
        {
            "id": 2,
            "text": "Anyone who keeps secrets or is trustworthy has integrity.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((keeps_secrets(x) \u2228 is_trustworthy(x)) \u2192 has_integrity(x))"
        },
        {
            "id": 1,
            "text": "If someone respects boundaries and is discreet, then they keep secrets.",
            "fol": "\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((respects_boundaries(x) \u2227 discreet(x)) \u2192 keeps_secrets(x))"
        },
        {
            "id": 0,
            "text": "Felipe is either nosy or discreet, but not both.",
            "fol": "p_6(Felipe) \u2295 p_7(Felipe)",
            "str_fol": "nosy(Felipe) \u2295 discreet(Felipe)"
        }
    ],
    "context": [
        {
            "id": 4,
            "subject": "Felipe",
            "text": "Felipe does not listen actively.",
            "fol": "\u00acp_4(Felipe)",
            "str_fol": "\u00aclistens_actively(Felipe)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Felipe",
            "text": "Felipe does not regain trust.",
            "fol": "\u00acp_5(Felipe)",
            "str_fol": "\u00acregains_trust(Felipe)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Felipe",
            "text": "Felipe is loyal.",
            "fol": "p_3(Felipe)",
            "str_fol": "is_loyal(Felipe)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Felipe",
            "text": "Felipe apologizes.",
            "fol": "p_2(Felipe)",
            "str_fol": "apologize(Felipe)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Felipe",
            "text": "Felipe does not have integrity.",
            "fol": "\u00acp_1(Felipe)",
            "str_fol": "\u00achas_integrity(Felipe)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Felipe",
            "text": "Felipe respects boundaries.",
            "fol": "p_0(Felipe)",
            "str_fol": "respects_boundaries(Felipe)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Anyone who listens actively or mends relationships can regain trust.",
            "fol": "\u2200x ((p_4(x) \u2228 p_14(x)) \u2192 p_5(x))",
            "str_fol": "\u2200x ((listens_actively(x) \u2228 mends_relationships(x)) \u2192 regains_trust(x))"
        },
        {
            "id": 7,
            "text": "Felipe is either loyal or gossips frequently, but not both.",
            "fol": "p_3(Felipe) \u2295 p_12(Felipe)",
            "str_fol": "is_loyal(Felipe) \u2295 gossips_frequently(Felipe)"
        },
        {
            "id": 6,
            "text": "Felipe either mends relationships or makes amends.",
            "fol": "p_14(Felipe) \u2228 p_13(Felipe)",
            "str_fol": "mends_relationships(Felipe) \u2228 make_amends(Felipe)"
        },
        {
            "id": 5,
            "text": "If Felipe apologizes, then he makes amends and is honest.",
            "fol": "p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe))",
            "str_fol": "apologize(Felipe) \u2192 (make_amends(Felipe) \u2227 is_honest(Felipe))"
        },
        {
            "id": 4,
            "text": "A person who earns respect does not gossip frequently, and a person who gossips frequently does not earn respect.",
            "fol": "\u2200x (p_11(x) \u2295 p_12(x))",
            "str_fol": "\u2200x (earns_respect(x) \u2295 gossips_frequently(x))"
        },
        {
            "id": 3,
            "text": "Anyone who is trustworthy or honest earns respect.",
            "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((is_trustworthy(x) \u2228 is_honest(x)) \u2192 earns_respect(x))"
        },
        {
            "id": 2,
            "text": "Anyone who keeps secrets or is trustworthy has integrity.",
            "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))",
            "str_fol": "\u2200x ((keeps_secrets(x) \u2228 is_trustworthy(x)) \u2192 has_integrity(x))"
        },
        {
            "id": 1,
            "text": "If someone respects boundaries and is discreet, then they keep secrets.",
            "fol": "\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))",
            "str_fol": "\u2200x ((respects_boundaries(x) \u2227 discreet(x)) \u2192 keeps_secrets(x))"
        },
        {
            "id": 0,
            "text": "Felipe is either nosy or discreet, but not both.",
            "fol": "p_6(Felipe) \u2295 p_7(Felipe)",
            "str_fol": "nosy(Felipe) \u2295 discreet(Felipe)"
        }
    ],
    "context_fol": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((p_4(x) \u2228 p_14(x)) \u2192 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\np_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Felipe) \u2295 p_7(Felipe)",
    "conclusion": {
        "id": 13,
        "subject": "Felipe",
        "text": "Felipe is not nosy.",
        "fol": "\u00acp_6(Felipe)",
        "str_fol": "\u00acnosy(Felipe)",
        "negation": true
    },
    "initial_answer": "False",
    "initial_goal": "\u00acp_6(Felipe)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Felipe",
                    "text": "Felipe does not listen actively.",
                    "fol": "\u00acp_4(Felipe)",
                    "str_fol": "\u00aclistens_actively(Felipe)",
                    "negation": true
                },
                {
                    "id": 5,
                    "subject": "Felipe",
                    "text": "Felipe does not regain trust.",
                    "fol": "\u00acp_5(Felipe)",
                    "str_fol": "\u00acregains_trust(Felipe)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Anyone who listens actively or mends relationships can regain trust.",
                    "fol": "\u2200x ((p_4(x) \u2228 p_14(x)) \u2192 p_5(x))",
                    "str_fol": "\u2200x ((listens_actively(x) \u2228 mends_relationships(x)) \u2192 regains_trust(x))"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Felipe",
                "text": "Felipe does not mend relationships.",
                "fol": "\u00acp_14(Felipe)",
                "str_fol": "\u00acmends_relationships(Felipe)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Felipe",
                    "text": "Felipe is loyal.",
                    "fol": "p_3(Felipe)",
                    "str_fol": "is_loyal(Felipe)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "Felipe is either loyal or gossips frequently, but not both.",
                    "fol": "p_3(Felipe) \u2295 p_12(Felipe)",
                    "str_fol": "is_loyal(Felipe) \u2295 gossips_frequently(Felipe)"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Felipe",
                "text": "Felipe does not gossip frequently.",
                "fol": "\u00acp_12(Felipe)",
                "str_fol": "\u00acgossips_frequently(Felipe)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Felipe",
                    "text": "Felipe does not mend relationships.",
                    "fol": "\u00acp_14(Felipe)",
                    "str_fol": "\u00acmends_relationships(Felipe)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Felipe either mends relationships or makes amends.",
                    "fol": "p_14(Felipe) \u2228 p_13(Felipe)",
                    "str_fol": "mends_relationships(Felipe) \u2228 make_amends(Felipe)"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Felipe",
                "text": "Felipe makes amends.",
                "fol": "p_13(Felipe)",
                "str_fol": "make_amends(Felipe)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Felipe",
                    "text": "Felipe apologizes.",
                    "fol": "p_2(Felipe)",
                    "str_fol": "apologize(Felipe)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Felipe",
                    "text": "Felipe makes amends.",
                    "fol": "p_13(Felipe)",
                    "str_fol": "make_amends(Felipe)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Felipe apologizes, then he makes amends and is honest.",
                    "fol": "p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe))",
                    "str_fol": "apologize(Felipe) \u2192 (make_amends(Felipe) \u2227 is_honest(Felipe))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Felipe",
                "text": "Felipe is honest.",
                "fol": "p_10(Felipe)",
                "str_fol": "is_honest(Felipe)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Felipe",
                    "text": "Felipe does not gossip frequently.",
                    "fol": "\u00acp_12(Felipe)",
                    "str_fol": "\u00acgossips_frequently(Felipe)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "A person who earns respect does not gossip frequently, and a person who gossips frequently does not earn respect.",
                    "fol": "\u2200x (p_11(x) \u2295 p_12(x))",
                    "str_fol": "\u2200x (earns_respect(x) \u2295 gossips_frequently(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Felipe",
                "text": "Felipe earns respect.",
                "fol": "p_11(Felipe)",
                "str_fol": "earns_respect(Felipe)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Felipe",
                    "text": "Felipe is honest.",
                    "fol": "p_10(Felipe)",
                    "str_fol": "is_honest(Felipe)",
                    "negation": false
                },
                {
                    "id": 10,
                    "subject": "Felipe",
                    "text": "Felipe earns respect.",
                    "fol": "p_11(Felipe)",
                    "str_fol": "earns_respect(Felipe)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who is trustworthy or honest earns respect.",
                    "fol": "\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((is_trustworthy(x) \u2228 is_honest(x)) \u2192 earns_respect(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Felipe",
                    "text": "Felipe does not have integrity.",
                    "fol": "\u00acp_1(Felipe)",
                    "str_fol": "\u00achas_integrity(Felipe)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "Anyone who keeps secrets or is trustworthy has integrity.",
                    "fol": "\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))",
                    "str_fol": "\u2200x ((keeps_secrets(x) \u2228 is_trustworthy(x)) \u2192 has_integrity(x))"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Felipe",
                "text": "Felipe does not keep secrets.",
                "fol": "\u00acp_8(Felipe)",
                "str_fol": "\u00ackeeps_secrets(Felipe)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Felipe",
                    "text": "Felipe respects boundaries.",
                    "fol": "p_0(Felipe)",
                    "str_fol": "respects_boundaries(Felipe)",
                    "negation": false
                },
                {
                    "id": 11,
                    "subject": "Felipe",
                    "text": "Felipe does not keep secrets.",
                    "fol": "\u00acp_8(Felipe)",
                    "str_fol": "\u00ackeeps_secrets(Felipe)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone respects boundaries and is discreet, then they keep secrets.",
                    "fol": "\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))",
                    "str_fol": "\u2200x ((respects_boundaries(x) \u2227 discreet(x)) \u2192 keeps_secrets(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Felipe",
                "text": "Felipe is not discreet.",
                "fol": "\u00acp_7(Felipe)",
                "str_fol": "\u00acdiscreet(Felipe)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 12,
                    "subject": "Felipe",
                    "text": "Felipe is not discreet.",
                    "fol": "\u00acp_7(Felipe)",
                    "str_fol": "\u00acdiscreet(Felipe)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Felipe is either nosy or discreet, but not both.",
                    "fol": "p_6(Felipe) \u2295 p_7(Felipe)",
                    "str_fol": "nosy(Felipe) \u2295 discreet(Felipe)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Felipe",
                "text": "Felipe is not nosy.",
                "fol": "\u00acp_6(Felipe)",
                "str_fol": "\u00acnosy(Felipe)",
                "negation": true
            }
        }
    ],
    "proof_trace": "6 (all x (p_8(x) | p_9(x) -> p_1(x))).  [assumption].\n7 (all x (p_0(x) & p_7(x) -> p_8(x))).  [assumption].\n8 -(p_6(Felipe) <-> p_7(Felipe)).  [assumption].\n9 --p_6(Felipe).  [goal].\n18 -p_8(x) | p_1(x).  [clausify(6)].\n19 -p_1(Felipe).  [assumption].\n21 -p_0(x) | -p_7(x) | p_8(x).  [clausify(7)].\n22 p_0(Felipe).  [assumption].\n30 p_6(Felipe) | p_7(Felipe).  [clausify(8)].\n31 -p_6(Felipe).  [deny(9)].\n32 -p_7(Felipe) | p_8(Felipe).  [resolve(21,a,22,a)].\n33 -p_8(Felipe).  [resolve(18,b,19,a)].\n34 -p_7(Felipe).  [resolve(32,b,33,a)].\n35 p_7(Felipe).  [resolve(31,a,30,a)].\n36 $F.  [resolve(34,a,35,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\n(p_2(Felipe) \u2192 p_13(Felipe)) \u2227 (p_2(Felipe) \u2192 p_10(Felipe))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Felipe) \u2295 p_7(Felipe)\np_13(Felipe)\np_10(Felipe)\np_6(Felipe)",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe)",
                    "-p_5(Felipe)",
                    "p_3(Felipe)",
                    "p_2(Felipe)",
                    "-p_1(Felipe)",
                    "p_0(Felipe)",
                    "all x (( -p_4(x) & -p_14(x) ) | p_5(x))",
                    "-( p_3(Felipe) <-> p_12(Felipe) )",
                    "p_14(Felipe) | p_13(Felipe)",
                    "( p_2(Felipe) -> p_13(Felipe) ) & ( p_2(Felipe) -> p_10(Felipe) )",
                    "all x ( -( p_11(x) <-> p_12(x) ) )",
                    "all x (( p_9(x) | p_10(x) ) -> p_11(x))",
                    "all x (( p_8(x) | p_9(x) ) -> p_1(x))",
                    "all x (( p_0(x) & p_7(x) ) -> p_8(x))",
                    "-( p_6(Felipe) <-> p_7(Felipe) )",
                    "p_13(Felipe)",
                    "p_10(Felipe)",
                    "p_6(Felipe)"
                ],
                "formulas(goals)": [
                    "--p_6(Felipe)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_13(Felipe)",
                    "p_10(Felipe)",
                    "p_6(Felipe)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\n(p_2(Felipe) \u2192 p_13(Felipe)) \u2227 (p_2(Felipe) \u2192 p_10(Felipe))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Felipe) \u2295 p_7(Felipe)\np_13(Felipe)\np_10(Felipe)\np_6(Felipe)\n\u00acp_14(Felipe)\np_11(Felipe)\n\u00acp_12(Felipe)\n\u00acp_8(Felipe)\n\u00acp_9(Felipe)",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe)",
                    "-p_5(Felipe)",
                    "p_3(Felipe)",
                    "p_2(Felipe)",
                    "-p_1(Felipe)",
                    "p_0(Felipe)",
                    "all x ((-p_4(x) & -p_14(x)) | p_5(x))",
                    "-(p_3(Felipe) <-> p_12(Felipe))",
                    "p_14(Felipe) | p_13(Felipe)",
                    "(p_2(Felipe) -> p_13(Felipe)) & (p_2(Felipe) -> p_10(Felipe))",
                    "all x (-(p_11(x) <-> p_12(x)))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_1(x))",
                    "all x ((p_0(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Felipe) <-> p_7(Felipe))",
                    "p_13(Felipe)",
                    "p_10(Felipe)",
                    "p_6(Felipe)",
                    "-p_14(Felipe)",
                    "p_11(Felipe)",
                    "-p_12(Felipe)",
                    "-p_8(Felipe)",
                    "-p_9(Felipe)"
                ],
                "formulas(goals)": [
                    "-(-p_6(Felipe))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_14(Felipe)",
                    "p_11(Felipe)",
                    "\u00acp_12(Felipe)",
                    "\u00acp_8(Felipe)",
                    "\u00acp_9(Felipe)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\n(p_2(Felipe) \u2192 p_13(Felipe)) \u2227 (p_2(Felipe) \u2192 p_10(Felipe))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))\n\u00ac(p_6(Felipe) \u2295 p_7(Felipe))\np_13(Felipe)\np_10(Felipe)\n\u00acp_14(Felipe)\np_11(Felipe)\n\u00acp_12(Felipe)\n\u00acp_8(Felipe)\n\u00acp_9(Felipe)\np_13(Felipe) \u2192 \u00acp_6(Felipe)",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe)",
                    "-p_5(Felipe)",
                    "p_3(Felipe)",
                    "p_2(Felipe)",
                    "-p_1(Felipe)",
                    "p_0(Felipe)",
                    "(all x ((-p_4(x) & -p_14(x)) | p_5(x)))",
                    "-(p_3(Felipe) <-> p_12(Felipe))",
                    "p_14(Felipe) | p_13(Felipe)",
                    "(p_2(Felipe) -> p_13(Felipe)) & (p_2(Felipe) -> p_10(Felipe))",
                    "(all x (-(p_11(x) <-> p_12(x))))",
                    "(all x ((p_9(x) | p_10(x)) -> p_11(x)))",
                    "(all x ((p_8(x) | p_9(x)) -> p_1(x)))",
                    "(all x ((p_0(x) & p_7(x)) -> p_8(x)))",
                    "(p_6(Felipe) <-> p_7(Felipe))",
                    "p_13(Felipe)",
                    "p_10(Felipe)",
                    "-p_14(Felipe)",
                    "p_11(Felipe)",
                    "-p_12(Felipe)",
                    "-p_8(Felipe)",
                    "-p_9(Felipe)",
                    "p_13(Felipe) -> -p_6(Felipe)"
                ],
                "formulas(goals)": [
                    "-p_6(Felipe)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_6(Felipe)",
                    "p_6(Felipe) \u2295 p_7(Felipe)"
                ],
                "removed_rules": [],
                "added_facts": [
                    "\u00ac(p_6(Felipe) \u2295 p_7(Felipe))"
                ],
                "added_rules": [
                    "p_13(Felipe) \u2192 \u00acp_6(Felipe)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Felipe).\n\u00acp_5(Felipe).\np_3(Felipe).\np_2(Felipe).\n\u00acp_1(Felipe).\np_0(Felipe).\n\u2200x ((p_4(x) \u2228 p_14(x)) \u2192 p_5(x)).\np_3(Felipe) \u2295 p_12(Felipe).\np_14(Felipe) \u2228 p_13(Felipe).\np_13(Felipe) \u2228 p_14(Felipe).\n(p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe))).\n\u2200x (p_11(x) \u2295 p_12(x)).\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x)).\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x)).\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x)).\np_6(Felipe) \u2295 p_7(Felipe).\np_13(Felipe).\np_10(Felipe).\n\u00acp_14(Felipe).\np_11(Felipe).\n\u00acp_12(Felipe).\n\u00acp_8(Felipe).\n\u00acp_9(Felipe).\n(p_13(Felipe) \u2192 \u00acp_6(Felipe)).\n(\u00acp_3(Felipe) \u2228 \u00acp_12(Felipe)).",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe).",
                    "-p_5(Felipe).",
                    "p_3(Felipe).",
                    "p_2(Felipe).",
                    "-p_1(Felipe).",
                    "p_0(Felipe).",
                    "all x ((p_4(x) | p_14(x)) -> p_5(x)).",
                    "(-(p_3(Felipe) <-> p_12(Felipe))).",
                    "p_14(Felipe) | p_13(Felipe).",
                    "p_13(Felipe) | p_14(Felipe).",
                    "(p_2(Felipe) -> (p_13(Felipe) & p_10(Felipe))).",
                    "all x (-(p_11(x) <-> p_12(x))).",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x)).",
                    "all x ((p_8(x) | p_9(x)) -> p_1(x)).",
                    "all x ((p_0(x) & p_7(x)) -> p_8(x)).",
                    "(-(p_6(Felipe) <-> p_7(Felipe))).",
                    "p_13(Felipe).",
                    "p_10(Felipe).",
                    "-p_14(Felipe).",
                    "p_11(Felipe).",
                    "-p_12(Felipe).",
                    "-p_8(Felipe).",
                    "-p_9(Felipe).",
                    "(p_13(Felipe) -> -p_6(Felipe)).",
                    "(-p_3(Felipe) | -p_12(Felipe))."
                ],
                "formulas(goals)": [
                    "-p_6(Felipe)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))",
                    "(p_2(Felipe) \u2192 p_13(Felipe)) \u2227 (p_2(Felipe) \u2192 p_10(Felipe))",
                    "\u00ac(p_6(Felipe) \u2295 p_7(Felipe))"
                ],
                "added_facts": [
                    "\u00acp_3(Felipe) \u2228 \u00acp_12(Felipe)",
                    "p_13(Felipe) \u2228 p_14(Felipe)"
                ],
                "added_rules": [
                    "\u2200x ((p_4(x) \u2228 p_14(x)) \u2192 p_5(x))",
                    "p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe))",
                    "p_6(Felipe) \u2295 p_7(Felipe)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\np_13(Felipe) \u2228 p_14(Felipe)\n(p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe)))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Felipe) \u2295 p_7(Felipe)\np_13(Felipe)\np_10(Felipe)\n\u00acp_14(Felipe)\np_11(Felipe)\n\u00acp_12(Felipe)\n\u00acp_8(Felipe)\n\u00acp_9(Felipe)\n(p_13(Felipe) \u2192 \u00acp_6(Felipe))\n(\u00acp_3(Felipe) \u2228 \u00acp_12(Felipe))\n\u00acp_6(Felipe)\n(p_13(Felipe) \u2227 p_10(Felipe))\n\u2200x (\u00acp_4(x) \u2228 p_5(x))",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe).",
                    "-p_5(Felipe).",
                    "p_3(Felipe).",
                    "p_2(Felipe).",
                    "-p_1(Felipe).",
                    "p_0(Felipe).",
                    "all x ((-p_4(x) & -p_14(x)) | p_5(x)).",
                    "-(p_3(Felipe) <-> p_12(Felipe)).",
                    "p_14(Felipe) | p_13(Felipe).",
                    "p_13(Felipe) | p_14(Felipe).",
                    "(p_2(Felipe) -> (p_13(Felipe) & p_10(Felipe))).",
                    "all x (-(p_11(x) <-> p_12(x))).",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x)).",
                    "all x ((p_8(x) | p_9(x)) -> p_1(x)).",
                    "all x ((p_0(x) & p_7(x)) -> p_8(x)).",
                    "-(p_6(Felipe) <-> p_7(Felipe)).",
                    "p_13(Felipe).",
                    "p_10(Felipe).",
                    "-p_14(Felipe).",
                    "p_11(Felipe).",
                    "-p_12(Felipe).",
                    "-p_8(Felipe).",
                    "-p_9(Felipe).",
                    "(p_13(Felipe) -> -p_6(Felipe)).",
                    "(-p_3(Felipe) | -p_12(Felipe)).",
                    "-p_6(Felipe).",
                    "(p_13(Felipe) & p_10(Felipe)).",
                    "all x (-p_4(x) | p_5(x))."
                ],
                "formulas(goals)": [
                    "-p_6(Felipe)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_6(Felipe)",
                    "(p_13(Felipe) \u2227 p_10(Felipe))"
                ],
                "added_rules": [
                    "\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))",
                    "\u2200x (\u00acp_4(x) \u2228 p_5(x))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\np_13(Felipe) \u2228 p_14(Felipe)\n(p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe)))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))\np_6(Felipe) \u2295 p_7(Felipe)\np_13(Felipe)\np_10(Felipe)\n\u00acp_14(Felipe)\np_11(Felipe)\n\u00acp_12(Felipe)\n\u00acp_8(Felipe)\n\u00acp_9(Felipe)\n(\u00acp_3(Felipe) \u2228 \u00acp_12(Felipe))\n(p_13(Felipe) \u2227 p_10(Felipe))\n\u2200x (\u00acp_4(x) \u2228 p_5(x))\n(p_7(Felipe) \u2192 p_6(Felipe))",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe)",
                    "-p_5(Felipe)",
                    "p_3(Felipe)",
                    "p_2(Felipe)",
                    "-p_1(Felipe)",
                    "p_0(Felipe)",
                    "all x ((-p_4(x) & -p_14(x)) | p_5(x))",
                    "-(p_3(Felipe) <-> p_12(Felipe))",
                    "p_14(Felipe) | p_13(Felipe)",
                    "p_13(Felipe) | p_14(Felipe)",
                    "(p_2(Felipe) -> (p_13(Felipe) & p_10(Felipe)))",
                    "all x (-(p_11(x) <-> p_12(x)))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_1(x))",
                    "all x ((p_0(x) & p_7(x)) -> p_8(x))",
                    "-(p_6(Felipe) <-> p_7(Felipe))",
                    "p_13(Felipe)",
                    "p_10(Felipe)",
                    "-p_14(Felipe)",
                    "p_11(Felipe)",
                    "-p_12(Felipe)",
                    "-p_8(Felipe)",
                    "-p_9(Felipe)",
                    "(-p_3(Felipe) | -p_12(Felipe))",
                    "(p_13(Felipe) & p_10(Felipe))",
                    "all x (-p_4(x) | p_5(x))",
                    "(p_7(Felipe) -> p_6(Felipe))"
                ],
                "formulas(goals)": [
                    "-(-p_6(Felipe))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_6(Felipe)"
                ],
                "removed_rules": [
                    "(p_13(Felipe) \u2192 \u00acp_6(Felipe))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_7(Felipe) \u2192 p_6(Felipe))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_4(Felipe)\n\u00acp_5(Felipe)\np_3(Felipe)\np_2(Felipe)\n\u00acp_1(Felipe)\np_0(Felipe)\n\u2200x ((\u00acp_4(x) \u2227 \u00acp_14(x)) \u2228 p_5(x))\np_3(Felipe) \u2295 p_12(Felipe)\np_14(Felipe) \u2228 p_13(Felipe)\np_13(Felipe) \u2228 p_14(Felipe)\n(p_2(Felipe) \u2192 (p_13(Felipe) \u2227 p_10(Felipe)))\n\u2200x (p_11(x) \u2295 p_12(x))\n\u2200x ((p_9(x) \u2228 p_10(x)) \u2192 p_11(x))\n\u2200x ((p_8(x) \u2228 p_9(x)) \u2192 p_1(x))\n\u2200x ((p_0(x) \u2227 p_7(x) \u2227 p_6(x)) \u2192 p_8(x))\np_6(Felipe) \u2295 p_7(Felipe)\np_13(Felipe)\np_10(Felipe)\n\u00acp_14(Felipe)\np_11(Felipe)\n\u00acp_12(Felipe)\n\u00acp_8(Felipe)\n\u00acp_9(Felipe)\n(\u00acp_3(Felipe) \u2228 \u00acp_12(Felipe))\n(p_13(Felipe) \u2227 p_10(Felipe))\n\u2200x (\u00acp_4(x) \u2228 p_5(x))\n(p_6(Felipe) \u2192 p_7(Felipe))",
            "Initial Goal": "\u00acp_6(Felipe)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_4(Felipe)",
                    "-p_5(Felipe)",
                    "p_3(Felipe)",
                    "p_2(Felipe)",
                    "-p_1(Felipe)",
                    "p_0(Felipe)",
                    "all x ((-p_4(x) & -p_14(x)) | p_5(x))",
                    "(p_3(Felipe) | p_12(Felipe)) & (-p_3(Felipe) | -p_12(Felipe))",
                    "p_14(Felipe) | p_13(Felipe)",
                    "p_13(Felipe) | p_14(Felipe)",
                    "(p_2(Felipe) -> (p_13(Felipe) & p_10(Felipe)))",
                    "all x ((p_11(x) | p_12(x)) & (-p_11(x) | -p_12(x)))",
                    "all x ((p_9(x) | p_10(x)) -> p_11(x))",
                    "all x ((p_8(x) | p_9(x)) -> p_1(x))",
                    "all x ((p_0(x) & p_7(x) & p_6(x)) -> p_8(x))",
                    "(p_6(Felipe) | p_7(Felipe)) & (-p_6(Felipe) | -p_7(Felipe))",
                    "p_13(Felipe)",
                    "p_10(Felipe)",
                    "-p_14(Felipe)",
                    "p_11(Felipe)",
                    "-p_12(Felipe)",
                    "-p_8(Felipe)",
                    "-p_9(Felipe)",
                    "(-p_3(Felipe) | -p_12(Felipe))",
                    "(p_13(Felipe) & p_10(Felipe))",
                    "all x (-p_4(x) | p_5(x))",
                    "(p_6(Felipe) -> p_7(Felipe))"
                ],
                "formulas(goals)": [
                    "-p_6(Felipe)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_0(x) \u2227 p_7(x)) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_0(x) \u2227 p_7(x) \u2227 p_6(x)) \u2192 p_8(x))"
                ]
            }
        }
    ]
}