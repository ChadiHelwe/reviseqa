{
    "background_story": "Jaxx was a free-spirited artist who had always been true to herself. Growing up in a small, conservative town, she faced challenges in expressing her authentic self. However, when she met her partner, Max, at an art exhibition, she felt an instant connection. As they explored the city's vibrant art scene together, Jaxx found the courage to openly express her lesbian identity. With Max by her side, she became a prominent figure in the local LGBTQ+ community, using her art to promote love, acceptance, and inclusivity. Jaxx's confidence and creativity flourished, inspiring others to be their authentic selves. Her love story with Max was one of passion, support, and mutual respect, a beautiful testament to the power of love in all its forms.",
    "predicates": [
        {
            "id": 0,
            "name": "is_adventurous"
        },
        {
            "id": 1,
            "name": "emotes_deeply"
        },
        {
            "id": 2,
            "name": "passionate"
        },
        {
            "id": 3,
            "name": "is_artistic"
        },
        {
            "id": 4,
            "name": "is_outgoing"
        },
        {
            "id": 5,
            "name": "is_reserved"
        },
        {
            "id": 6,
            "name": "is_respected"
        },
        {
            "id": 7,
            "name": "cares_deeply"
        },
        {
            "id": 8,
            "name": "supports_community"
        },
        {
            "id": 9,
            "name": "confident"
        },
        {
            "id": 10,
            "name": "authentic"
        },
        {
            "id": 11,
            "name": "inspiring"
        },
        {
            "id": 12,
            "name": "talented"
        },
        {
            "id": 13,
            "name": "humble"
        },
        {
            "id": 14,
            "name": "vibrant"
        },
        {
            "id": 15,
            "name": "creative"
        },
        {
            "id": 16,
            "name": "expressive"
        },
        {
            "id": 17,
            "name": "loves_others"
        },
        {
            "id": 18,
            "name": "speaks_frees"
        },
        {
            "id": 19,
            "name": "helps_others"
        },
        {
            "id": 20,
            "name": "empowered"
        },
        {
            "id": 21,
            "name": "sincere"
        },
        {
            "id": 22,
            "name": "is_charismatic"
        },
        {
            "id": 23,
            "name": "is_witty"
        },
        {
            "id": 24,
            "name": "makes_art"
        },
        {
            "id": 25,
            "name": "lives_freely"
        },
        {
            "id": 26,
            "name": "open_minded"
        },
        {
            "id": 27,
            "name": "imaginative"
        },
        {
            "id": 28,
            "name": "genuine"
        },
        {
            "id": 29,
            "name": "values_equality"
        },
        {
            "id": 30,
            "name": "fights_injustice"
        }
    ],
    "subject_name": "Jaxx",
    "subject_category": "human",
    "keyword": "lesbian",
    "all_facts": [
        {
            "id": 0,
            "subject": "Jaxx",
            "text": "Jaxx is adventurous.",
            "fol": "p_0(Jaxx)",
            "str_fol": "is_adventurous(Jaxx)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Jaxx",
            "text": "Jaxx does not emote deeply.",
            "fol": "\u00acp_1(Jaxx)",
            "str_fol": "\u00acemotes_deeply(Jaxx)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jaxx",
            "text": "Jaxx is passionate.",
            "fol": "p_2(Jaxx)",
            "str_fol": "passionate(Jaxx)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Jaxx",
            "text": "Jaxx is not artistic.",
            "fol": "\u00acp_3(Jaxx)",
            "str_fol": "\u00acis_artistic(Jaxx)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Jaxx",
            "text": "Jaxx is outgoing.",
            "fol": "p_4(Jaxx)",
            "str_fol": "is_outgoing(Jaxx)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Jaxx",
            "text": "Jaxx is not reserved.",
            "fol": "\u00acp_5(Jaxx)",
            "str_fol": "\u00acis_reserved(Jaxx)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Jaxx",
            "text": "Jaxx is not respected.",
            "fol": "\u00acp_6(Jaxx)",
            "str_fol": "\u00acis_respected(Jaxx)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Jaxx",
            "text": "Jaxx cares deeply about others.",
            "fol": "p_7(Jaxx)",
            "str_fol": "cares_deeply(Jaxx)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Jaxx",
            "text": "Jaxx does not support her community.",
            "fol": "\u00acp_8(Jaxx)",
            "str_fol": "\u00acsupports_community(Jaxx)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Jaxx",
            "text": "Jaxx loves others.",
            "fol": "p_17(Jaxx)",
            "str_fol": "loves_others(Jaxx)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Jaxx",
            "text": "Jaxx is not humble.",
            "fol": "\u00acp_13(Jaxx)",
            "str_fol": "\u00achumble(Jaxx)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Jaxx",
            "text": "Jaxx is creative.",
            "fol": "p_15(Jaxx)",
            "str_fol": "creative(Jaxx)",
            "negation": false
        },
        {
            "id": 12,
            "subject": "Jaxx",
            "text": "Jaxx is not vibrant.",
            "fol": "\u00acp_14(Jaxx)",
            "str_fol": "\u00acvibrant(Jaxx)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Jaxx",
            "text": "Jaxx is not expressive.",
            "fol": "\u00acp_16(Jaxx)",
            "str_fol": "\u00acexpressive(Jaxx)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Jaxx",
            "text": "Jaxx is talented.",
            "fol": "p_12(Jaxx)",
            "str_fol": "talented(Jaxx)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Jaxx",
            "text": "Jaxx is not authentic.",
            "fol": "\u00acp_10(Jaxx)",
            "str_fol": "\u00acauthentic(Jaxx)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Jaxx",
            "text": "Jaxx is not inspiring.",
            "fol": "\u00acp_11(Jaxx)",
            "str_fol": "\u00acinspiring(Jaxx)",
            "negation": true
        },
        {
            "id": 17,
            "subject": "Jaxx",
            "text": "Jaxx is confident.",
            "fol": "p_9(Jaxx)",
            "str_fol": "confident(Jaxx)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Jaxx",
            "text": "Jaxx cares deeply about others.",
            "fol": "p_7(Jaxx)",
            "str_fol": "cares_deeply(Jaxx)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Jaxx",
            "text": "Jaxx does not support her community.",
            "fol": "\u00acp_8(Jaxx)",
            "str_fol": "\u00acsupports_community(Jaxx)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Jaxx",
            "text": "Jaxx is not respected.",
            "fol": "\u00acp_6(Jaxx)",
            "str_fol": "\u00acis_respected(Jaxx)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jaxx",
            "text": "Jaxx is not reserved.",
            "fol": "\u00acp_5(Jaxx)",
            "str_fol": "\u00acis_reserved(Jaxx)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Jaxx",
            "text": "Jaxx is outgoing.",
            "fol": "p_4(Jaxx)",
            "str_fol": "is_outgoing(Jaxx)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Jaxx",
            "text": "Jaxx is adventurous.",
            "fol": "p_0(Jaxx)",
            "str_fol": "is_adventurous(Jaxx)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Jaxx",
            "text": "Jaxx does not emote deeply.",
            "fol": "\u00acp_1(Jaxx)",
            "str_fol": "\u00acemotes_deeply(Jaxx)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Jaxx",
            "text": "Jaxx is not artistic.",
            "fol": "\u00acp_3(Jaxx)",
            "str_fol": "\u00acis_artistic(Jaxx)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jaxx",
            "text": "Jaxx is passionate.",
            "fol": "p_2(Jaxx)",
            "str_fol": "passionate(Jaxx)",
            "negation": false
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Everyone who cares deeply about others either supports their community or loves others.",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
            "str_fol": "\u2200x (cares_deeply(x) \u2192 (supports_community(x) \u2228 loves_others(x)))"
        },
        {
            "id": 7,
            "text": "If someone is humble and loves others, then they are respected.",
            "fol": "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((humble(x) \u2227 loves_others(x)) \u2192 is_respected(x))"
        },
        {
            "id": 6,
            "text": "Jaxx is either creative or reserved, but not both.",
            "fol": "p_15(Jaxx) \u2295 p_5(Jaxx)",
            "str_fol": "creative(Jaxx) \u2295 is_reserved(Jaxx)"
        },
        {
            "id": 5,
            "text": "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
            "fol": "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
            "str_fol": "vibrant(Jaxx) \u2192 (is_outgoing(Jaxx) \u2295 is_adventurous(Jaxx))"
        },
        {
            "id": 4,
            "text": "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
            "fol": "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
            "str_fol": "(expressive(Jaxx) \u2295 emotes_deeply(Jaxx)) \u2192 is_artistic(Jaxx)"
        },
        {
            "id": 3,
            "text": "Everyone who is creative is either expressive or talented (or both).",
            "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (creative(x) \u2192 (expressive(x) \u2228 talented(x)))"
        },
        {
            "id": 2,
            "text": "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
            "fol": "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
            "str_fol": "authentic(Jaxx) \u2192 (humble(Jaxx) \u2295 vibrant(Jaxx))"
        },
        {
            "id": 1,
            "text": "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
            "fol": "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
            "str_fol": "talented(Jaxx) \u2192 (passionate(Jaxx) \u2295 inspiring(Jaxx))"
        },
        {
            "id": 0,
            "text": "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
            "fol": "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
            "str_fol": "(confident(Jaxx) \u2295 authentic(Jaxx)) \u2192 inspiring(Jaxx)"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Jaxx",
            "text": "Jaxx cares deeply about others.",
            "fol": "p_7(Jaxx)",
            "str_fol": "cares_deeply(Jaxx)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Jaxx",
            "text": "Jaxx does not support her community.",
            "fol": "\u00acp_8(Jaxx)",
            "str_fol": "\u00acsupports_community(Jaxx)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Jaxx",
            "text": "Jaxx is not respected.",
            "fol": "\u00acp_6(Jaxx)",
            "str_fol": "\u00acis_respected(Jaxx)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Jaxx",
            "text": "Jaxx is not reserved.",
            "fol": "\u00acp_5(Jaxx)",
            "str_fol": "\u00acis_reserved(Jaxx)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Jaxx",
            "text": "Jaxx is outgoing.",
            "fol": "p_4(Jaxx)",
            "str_fol": "is_outgoing(Jaxx)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Jaxx",
            "text": "Jaxx is adventurous.",
            "fol": "p_0(Jaxx)",
            "str_fol": "is_adventurous(Jaxx)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Jaxx",
            "text": "Jaxx does not emote deeply.",
            "fol": "\u00acp_1(Jaxx)",
            "str_fol": "\u00acemotes_deeply(Jaxx)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Jaxx",
            "text": "Jaxx is not artistic.",
            "fol": "\u00acp_3(Jaxx)",
            "str_fol": "\u00acis_artistic(Jaxx)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Jaxx",
            "text": "Jaxx is passionate.",
            "fol": "p_2(Jaxx)",
            "str_fol": "passionate(Jaxx)",
            "negation": false
        },
        {
            "id": 8,
            "text": "Everyone who cares deeply about others either supports their community or loves others.",
            "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
            "str_fol": "\u2200x (cares_deeply(x) \u2192 (supports_community(x) \u2228 loves_others(x)))"
        },
        {
            "id": 7,
            "text": "If someone is humble and loves others, then they are respected.",
            "fol": "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
            "str_fol": "\u2200x ((humble(x) \u2227 loves_others(x)) \u2192 is_respected(x))"
        },
        {
            "id": 6,
            "text": "Jaxx is either creative or reserved, but not both.",
            "fol": "p_15(Jaxx) \u2295 p_5(Jaxx)",
            "str_fol": "creative(Jaxx) \u2295 is_reserved(Jaxx)"
        },
        {
            "id": 5,
            "text": "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
            "fol": "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
            "str_fol": "vibrant(Jaxx) \u2192 (is_outgoing(Jaxx) \u2295 is_adventurous(Jaxx))"
        },
        {
            "id": 4,
            "text": "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
            "fol": "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
            "str_fol": "(expressive(Jaxx) \u2295 emotes_deeply(Jaxx)) \u2192 is_artistic(Jaxx)"
        },
        {
            "id": 3,
            "text": "Everyone who is creative is either expressive or talented (or both).",
            "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
            "str_fol": "\u2200x (creative(x) \u2192 (expressive(x) \u2228 talented(x)))"
        },
        {
            "id": 2,
            "text": "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
            "fol": "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
            "str_fol": "authentic(Jaxx) \u2192 (humble(Jaxx) \u2295 vibrant(Jaxx))"
        },
        {
            "id": 1,
            "text": "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
            "fol": "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
            "str_fol": "talented(Jaxx) \u2192 (passionate(Jaxx) \u2295 inspiring(Jaxx))"
        },
        {
            "id": 0,
            "text": "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
            "fol": "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
            "str_fol": "(confident(Jaxx) \u2295 authentic(Jaxx)) \u2192 inspiring(Jaxx)"
        }
    ],
    "context_fol": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\n\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
    "conclusion": {
        "id": 17,
        "subject": "Jaxx",
        "text": "Jaxx is confident.",
        "fol": "p_9(Jaxx)",
        "str_fol": "confident(Jaxx)",
        "negation": false
    },
    "initial_answer": "False",
    "initial_goal": "p_9(Jaxx)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Jaxx",
                    "text": "Jaxx cares deeply about others.",
                    "fol": "p_7(Jaxx)",
                    "str_fol": "cares_deeply(Jaxx)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Jaxx",
                    "text": "Jaxx does not support her community.",
                    "fol": "\u00acp_8(Jaxx)",
                    "str_fol": "\u00acsupports_community(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Everyone who cares deeply about others either supports their community or loves others.",
                    "fol": "\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))",
                    "str_fol": "\u2200x (cares_deeply(x) \u2192 (supports_community(x) \u2228 loves_others(x)))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Jaxx",
                "text": "Jaxx loves others.",
                "fol": "p_17(Jaxx)",
                "str_fol": "loves_others(Jaxx)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Jaxx",
                    "text": "Jaxx loves others.",
                    "fol": "p_17(Jaxx)",
                    "str_fol": "loves_others(Jaxx)",
                    "negation": false
                },
                {
                    "id": 6,
                    "subject": "Jaxx",
                    "text": "Jaxx is not respected.",
                    "fol": "\u00acp_6(Jaxx)",
                    "str_fol": "\u00acis_respected(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If someone is humble and loves others, then they are respected.",
                    "fol": "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))",
                    "str_fol": "\u2200x ((humble(x) \u2227 loves_others(x)) \u2192 is_respected(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Jaxx",
                "text": "Jaxx is not humble.",
                "fol": "\u00acp_13(Jaxx)",
                "str_fol": "\u00achumble(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Jaxx",
                    "text": "Jaxx is not reserved.",
                    "fol": "\u00acp_5(Jaxx)",
                    "str_fol": "\u00acis_reserved(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "Jaxx is either creative or reserved, but not both.",
                    "fol": "p_15(Jaxx) \u2295 p_5(Jaxx)",
                    "str_fol": "creative(Jaxx) \u2295 is_reserved(Jaxx)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Jaxx",
                "text": "Jaxx is creative.",
                "fol": "p_15(Jaxx)",
                "str_fol": "creative(Jaxx)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Jaxx",
                    "text": "Jaxx is outgoing.",
                    "fol": "p_4(Jaxx)",
                    "str_fol": "is_outgoing(Jaxx)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Jaxx",
                    "text": "Jaxx is adventurous.",
                    "fol": "p_0(Jaxx)",
                    "str_fol": "is_adventurous(Jaxx)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Jaxx is vibrant, then she is either outgoing or adventurous, but not both.",
                    "fol": "p_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))",
                    "str_fol": "vibrant(Jaxx) \u2192 (is_outgoing(Jaxx) \u2295 is_adventurous(Jaxx))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Jaxx",
                "text": "Jaxx is not vibrant.",
                "fol": "\u00acp_14(Jaxx)",
                "str_fol": "\u00acvibrant(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Jaxx",
                    "text": "Jaxx does not emote deeply.",
                    "fol": "\u00acp_1(Jaxx)",
                    "str_fol": "\u00acemotes_deeply(Jaxx)",
                    "negation": true
                },
                {
                    "id": 3,
                    "subject": "Jaxx",
                    "text": "Jaxx is not artistic.",
                    "fol": "\u00acp_3(Jaxx)",
                    "str_fol": "\u00acis_artistic(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Jaxx is either expressive or emotes deeply (but not both), then she is artistic.",
                    "fol": "(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)",
                    "str_fol": "(expressive(Jaxx) \u2295 emotes_deeply(Jaxx)) \u2192 is_artistic(Jaxx)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Jaxx",
                "text": "Jaxx is not expressive.",
                "fol": "\u00acp_16(Jaxx)",
                "str_fol": "\u00acexpressive(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Jaxx",
                    "text": "Jaxx is creative.",
                    "fol": "p_15(Jaxx)",
                    "str_fol": "creative(Jaxx)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Jaxx",
                    "text": "Jaxx is not expressive.",
                    "fol": "\u00acp_16(Jaxx)",
                    "str_fol": "\u00acexpressive(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Everyone who is creative is either expressive or talented (or both).",
                    "fol": "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))",
                    "str_fol": "\u2200x (creative(x) \u2192 (expressive(x) \u2228 talented(x)))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Jaxx",
                "text": "Jaxx is talented.",
                "fol": "p_12(Jaxx)",
                "str_fol": "talented(Jaxx)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Jaxx",
                    "text": "Jaxx is not humble.",
                    "fol": "\u00acp_13(Jaxx)",
                    "str_fol": "\u00achumble(Jaxx)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Jaxx",
                    "text": "Jaxx is not vibrant.",
                    "fol": "\u00acp_14(Jaxx)",
                    "str_fol": "\u00acvibrant(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Jaxx is authentic, then she is either humble or vibrant, but not both.",
                    "fol": "p_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))",
                    "str_fol": "authentic(Jaxx) \u2192 (humble(Jaxx) \u2295 vibrant(Jaxx))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Jaxx",
                "text": "Jaxx is not authentic.",
                "fol": "\u00acp_10(Jaxx)",
                "str_fol": "\u00acauthentic(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Jaxx",
                    "text": "Jaxx is talented.",
                    "fol": "p_12(Jaxx)",
                    "str_fol": "talented(Jaxx)",
                    "negation": false
                },
                {
                    "id": 2,
                    "subject": "Jaxx",
                    "text": "Jaxx is passionate.",
                    "fol": "p_2(Jaxx)",
                    "str_fol": "passionate(Jaxx)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Jaxx is talented, then she is either passionate or inspiring, but not both.",
                    "fol": "p_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))",
                    "str_fol": "talented(Jaxx) \u2192 (passionate(Jaxx) \u2295 inspiring(Jaxx))"
                }
            ],
            "conclusion": {
                "id": 16,
                "subject": "Jaxx",
                "text": "Jaxx is not inspiring.",
                "fol": "\u00acp_11(Jaxx)",
                "str_fol": "\u00acinspiring(Jaxx)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 15,
                    "subject": "Jaxx",
                    "text": "Jaxx is not authentic.",
                    "fol": "\u00acp_10(Jaxx)",
                    "str_fol": "\u00acauthentic(Jaxx)",
                    "negation": true
                },
                {
                    "id": 16,
                    "subject": "Jaxx",
                    "text": "Jaxx is not inspiring.",
                    "fol": "\u00acp_11(Jaxx)",
                    "str_fol": "\u00acinspiring(Jaxx)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Jaxx is either confident or authentic (but not both), then she is inspiring.",
                    "fol": "(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)",
                    "str_fol": "(confident(Jaxx) \u2295 authentic(Jaxx)) \u2192 inspiring(Jaxx)"
                }
            ],
            "conclusion": {
                "id": 17,
                "subject": "Jaxx",
                "text": "Jaxx is confident.",
                "fol": "p_9(Jaxx)",
                "str_fol": "confident(Jaxx)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 (all x (p_7(x) -> p_8(x) | p_17(x))).  [assumption].\n2 (all x (p_13(x) & p_17(x) -> p_6(x))).  [assumption].\n3 -(p_15(Jaxx) <-> p_5(Jaxx)).  [assumption].\n4 p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx)).  [assumption].\n5 -(p_16(Jaxx) <-> p_1(Jaxx)) -> p_3(Jaxx).  [assumption].\n6 (all x (p_15(x) -> p_16(x) | p_12(x))).  [assumption].\n7 p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx)).  [assumption].\n8 p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx)).  [assumption].\n9 -(p_9(Jaxx) <-> p_10(Jaxx)) -> p_11(Jaxx).  [assumption].\n10 -p_9(Jaxx).  [goal].\n11 -p_7(x) | p_8(x) | p_17(x).  [clausify(1)].\n12 p_7(Jaxx).  [assumption].\n13 p_8(Jaxx) | p_17(Jaxx).  [resolve(11,a,12,a)].\n14 -p_8(Jaxx).  [assumption].\n15 -p_13(x) | -p_17(x) | p_6(x).  [clausify(2)].\n16 -p_6(Jaxx).  [assumption].\n17 p_15(Jaxx) | p_5(Jaxx).  [clausify(3)].\n18 -p_5(Jaxx).  [assumption].\n20 -p_14(Jaxx) | -p_4(Jaxx) | -p_0(Jaxx).  [clausify(4)].\n21 p_4(Jaxx).  [assumption].\n23 -p_14(Jaxx) | -p_0(Jaxx).  [resolve(20,b,21,a)].\n24 p_0(Jaxx).  [assumption].\n25 -p_16(Jaxx) | p_1(Jaxx) | p_3(Jaxx).  [clausify(5)].\n26 -p_1(Jaxx).  [assumption].\n28 -p_16(Jaxx) | p_3(Jaxx).  [resolve(25,b,26,a)].\n29 -p_3(Jaxx).  [assumption].\n30 -p_12(Jaxx) | -p_2(Jaxx) | -p_11(Jaxx).  [clausify(8)].\n31 p_2(Jaxx).  [assumption].\n33 p_15(Jaxx).  [resolve(17,b,18,a)].\n34 -p_15(x) | p_16(x) | p_12(x).  [clausify(6)].\n35 -p_9(Jaxx) | p_10(Jaxx) | p_11(Jaxx).  [clausify(9)].\n36 -p_10(Jaxx) | p_13(Jaxx) | p_14(Jaxx).  [clausify(7)].\n39 -p_9(Jaxx) | p_11(Jaxx) | p_13(Jaxx) | p_14(Jaxx).  [resolve(35,b,36,a)].\n40 p_9(Jaxx).  [deny(10)].\n41 -p_13(Jaxx) | -p_17(Jaxx).  [resolve(15,c,16,a)].\n42 p_17(Jaxx).  [resolve(13,a,14,a)].\n43 p_11(Jaxx) | p_13(Jaxx) | p_14(Jaxx).  [resolve(39,a,40,a)].\n44 -p_14(Jaxx).  [resolve(23,b,24,a)].\n45 p_16(Jaxx) | p_12(Jaxx).  [resolve(33,a,34,a)].\n46 -p_16(Jaxx).  [resolve(28,b,29,a)].\n47 p_12(Jaxx).  [resolve(45,a,46,a)].\n48 -p_12(Jaxx) | -p_11(Jaxx).  [resolve(30,b,31,a)].\n49 p_11(Jaxx) | p_13(Jaxx).  [resolve(43,c,44,a)].\n50 -p_13(Jaxx).  [resolve(41,b,42,a)].\n51 p_11(Jaxx).  [resolve(49,b,50,a)].\n52 -p_11(Jaxx).  [resolve(47,a,48,a)].\n53 $F.  [resolve(51,a,52,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\n\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "all x ((p_13(x) & p_17(x)) -> p_6(x)).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx)).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx)).",
                    "p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx)).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx)."
                ],
                "formulas(goals)": [
                    "-p_9(Jaxx)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_7(Jaxx) \u2228 \u00acp_7(Jaxx)",
                    "p_9(Jaxx) \u2228 \u00acp_9(Jaxx)"
                ],
                "added_rules": [
                    "\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))",
                    "\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)\np_2(Jaxx) \u2192 p_9(Jaxx)",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "(all x (p_7(x) -> (p_8(x) | p_17(x)))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "(p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx))).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx)) -> p_3(Jaxx)).",
                    "(all x (p_15(x) -> (p_16(x) | p_12(x)))).",
                    "(p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx))).",
                    "(p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx))).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx)) -> p_11(Jaxx)).",
                    "(p_7(Jaxx) | -p_7(Jaxx)).",
                    "(all x ((-p_8(x) & -p_17(x)) -> -p_7(x))).",
                    "(all x (-p_7(x) | p_8(x) | p_17(x))).",
                    "(p_9(Jaxx) | -p_9(Jaxx)).",
                    "(p_2(Jaxx) -> p_9(Jaxx))."
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x ((p_13(x) \u2227 p_17(x)) \u2192 p_6(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Jaxx) \u2192 p_9(Jaxx)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)\np_2(Jaxx) \u2192 p_9(Jaxx)\np_15(Jaxx)\n\u00acp_10(Jaxx) \u2192 p_11(Jaxx)",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> -(p_4(Jaxx) <-> p_0(Jaxx)).",
                    "-(p_16(Jaxx) <-> p_1(Jaxx)) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> -(p_13(Jaxx) <-> p_14(Jaxx)).",
                    "p_12(Jaxx) -> -(p_2(Jaxx) <-> p_11(Jaxx)).",
                    "-(p_9(Jaxx) <-> p_10(Jaxx)) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx).",
                    "p_2(Jaxx) -> p_9(Jaxx).",
                    "p_15(Jaxx).",
                    "-p_10(Jaxx) -> p_11(Jaxx)."
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_15(Jaxx)"
                ],
                "added_rules": [
                    "\u00acp_10(Jaxx) \u2192 p_11(Jaxx)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)\np_15(Jaxx)\n\u00acp_10(Jaxx) \u2192 p_11(Jaxx)\np_2(Jaxx) \u2192 (p_9(Jaxx) \u2295 p_17(Jaxx))",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx))).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx))).",
                    "p_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx))).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx).",
                    "p_15(Jaxx).",
                    "-p_10(Jaxx) -> p_11(Jaxx).",
                    "p_2(Jaxx) -> (-(p_9(Jaxx) <-> p_17(Jaxx)))."
                ],
                "formulas(goals)": [
                    "-p_9(Jaxx)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Jaxx) \u2192 p_9(Jaxx)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Jaxx) \u2192 (p_9(Jaxx) \u2295 p_17(Jaxx))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)\np_15(Jaxx)\n\u00acp_10(Jaxx) \u2192 p_11(Jaxx)\np_2(Jaxx) \u2192 p_9(Jaxx)",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx).",
                    "-p_8(Jaxx).",
                    "-p_6(Jaxx).",
                    "-p_5(Jaxx).",
                    "p_4(Jaxx).",
                    "p_0(Jaxx).",
                    "-p_1(Jaxx).",
                    "-p_3(Jaxx).",
                    "p_2(Jaxx).",
                    "all x (p_7(x) -> (p_8(x) | p_17(x))).",
                    "-(p_15(Jaxx) <-> p_5(Jaxx)).",
                    "p_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx))).",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).",
                    "all x (p_15(x) -> (p_16(x) | p_12(x))).",
                    "p_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx))).",
                    "p_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx))).",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).",
                    "p_7(Jaxx) | -p_7(Jaxx).",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x)).",
                    "all x (-p_7(x) | p_8(x) | p_17(x)).",
                    "p_9(Jaxx) | -p_9(Jaxx).",
                    "p_15(Jaxx).",
                    "-p_10(Jaxx) -> p_11(Jaxx).",
                    "p_2(Jaxx) -> p_9(Jaxx)."
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_2(Jaxx) \u2192 (p_9(Jaxx) \u2295 p_17(Jaxx))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_2(Jaxx) \u2192 p_9(Jaxx)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x ((p_15(x) \u2227 \u00acp_16(x)) \u2192 p_12(x))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)\np_15(Jaxx)\n\u00acp_10(Jaxx) \u2192 p_11(Jaxx)\np_2(Jaxx) \u2192 p_9(Jaxx)\n\u00acp_9(Jaxx) \u2192 \u00acp_2(Jaxx)",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": "p_7(Jaxx).\n-p_8(Jaxx).\n-p_6(Jaxx).\n-p_5(Jaxx).\np_4(Jaxx).\np_0(Jaxx).\n-p_1(Jaxx).\n-p_3(Jaxx).\np_2(Jaxx).\nall x (p_7(x) -> (p_8(x) | p_17(x))).\n-(p_15(Jaxx) <-> p_5(Jaxx)).\np_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx))).\n(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx).\nall x ((p_15(x) & -p_16(x)) -> p_12(x)).\np_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx))).\np_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx))).\n(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx).\np_7(Jaxx) | -p_7(Jaxx).\nall x ((-p_8(x) & -p_17(x)) -> -p_7(x)).\nall x (-p_7(x) | p_8(x) | p_17(x)).\np_9(Jaxx) | -p_9(Jaxx).\np_15(Jaxx).\n-p_10(Jaxx) -> p_11(Jaxx).\np_2(Jaxx) -> p_9(Jaxx).\n-p_9(Jaxx) -> -p_2(Jaxx).",
                "formulas(goals)": "p_9(Jaxx)."
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_15(x) \u2192 (p_16(x) \u2228 p_12(x)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x ((p_15(x) \u2227 \u00acp_16(x)) \u2192 p_12(x))",
                    "\u00acp_9(Jaxx) \u2192 \u00acp_2(Jaxx)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_7(Jaxx)\n\u00acp_8(Jaxx)\n\u00acp_6(Jaxx)\n\u00acp_5(Jaxx)\np_4(Jaxx)\np_0(Jaxx)\n\u00acp_1(Jaxx)\n\u00acp_3(Jaxx)\np_2(Jaxx)\n\u2200x (p_7(x) \u2192 (p_8(x) \u2228 p_17(x)))\np_15(Jaxx) \u2295 p_5(Jaxx)\np_14(Jaxx) \u2192 (p_4(Jaxx) \u2295 p_0(Jaxx))\n(p_16(Jaxx) \u2295 p_1(Jaxx)) \u2192 p_3(Jaxx)\n\u2200x ((p_15(x) \u2227 \u00acp_16(x)) \u2192 p_12(x))\np_10(Jaxx) \u2192 (p_13(Jaxx) \u2295 p_14(Jaxx))\np_12(Jaxx) \u2192 (p_2(Jaxx) \u2295 p_11(Jaxx))\n(p_9(Jaxx) \u2295 p_10(Jaxx)) \u2192 p_11(Jaxx)\np_7(Jaxx) \u2228 \u00acp_7(Jaxx)\n\u2200x ((\u00acp_8(x) \u2227 \u00acp_17(x)) \u2192 \u00acp_7(x))\n\u2200x (\u00acp_7(x) \u2228 p_8(x) \u2228 p_17(x))\np_9(Jaxx) \u2228 \u00acp_9(Jaxx)\np_15(Jaxx)\n\u00acp_10(Jaxx) \u2192 p_11(Jaxx)\n\u00acp_2(Jaxx) \u2228 p_9(Jaxx)\n\u00acp_9(Jaxx) \u2192 \u00acp_2(Jaxx)\np_17(Jaxx)\np_10(Jaxx) \u2228 p_11(Jaxx)\np_2(Jaxx) \u2228 \u00acp_2(Jaxx)",
            "Initial Goal": "p_9(Jaxx)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_7(Jaxx)",
                    "-p_8(Jaxx)",
                    "-p_6(Jaxx)",
                    "-p_5(Jaxx)",
                    "p_4(Jaxx)",
                    "p_0(Jaxx)",
                    "-p_1(Jaxx)",
                    "-p_3(Jaxx)",
                    "p_2(Jaxx)",
                    "all x (p_7(x) -> (p_8(x) | p_17(x)))",
                    "-(p_15(Jaxx) <-> p_5(Jaxx))",
                    "p_14(Jaxx) -> (-(p_4(Jaxx) <-> p_0(Jaxx)))",
                    "(-(p_16(Jaxx) <-> p_1(Jaxx))) -> p_3(Jaxx)",
                    "all x ((p_15(x) & -p_16(x)) -> p_12(x))",
                    "p_10(Jaxx) -> (-(p_13(Jaxx) <-> p_14(Jaxx)))",
                    "p_12(Jaxx) -> (-(p_2(Jaxx) <-> p_11(Jaxx)))",
                    "(-(p_9(Jaxx) <-> p_10(Jaxx))) -> p_11(Jaxx)",
                    "p_7(Jaxx) | -p_7(Jaxx)",
                    "all x ((-p_8(x) & -p_17(x)) -> -p_7(x))",
                    "all x (-p_7(x) | p_8(x) | p_17(x))",
                    "p_9(Jaxx) | -p_9(Jaxx)",
                    "p_15(Jaxx)",
                    "-p_10(Jaxx) -> p_11(Jaxx)",
                    "-p_2(Jaxx) | p_9(Jaxx)",
                    "-p_9(Jaxx) -> -p_2(Jaxx)",
                    "p_17(Jaxx)",
                    "p_10(Jaxx) | p_11(Jaxx)",
                    "p_2(Jaxx) | -p_2(Jaxx)"
                ],
                "formulas(goals)": [
                    "p_9(Jaxx)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_17(Jaxx)",
                    "p_10(Jaxx) \u2228 p_11(Jaxx)",
                    "p_2(Jaxx) \u2228 \u00acp_2(Jaxx)"
                ],
                "added_rules": [
                    "\u00acp_2(Jaxx) \u2228 p_9(Jaxx)"
                ]
            }
        }
    ]
}