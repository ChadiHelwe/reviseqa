{
    "background_story": "Kareem was a dedicated researcher in the field of pharmacology. He spent most of his career studying the effects of various drugs on cardiovascular health. One medication that particularly caught his attention was pentoxifylline, a xanthine derivative used to improve blood flow and reduce inflammation. Kareem's fascination with pentoxifylline led him to conduct extensive research on its potential benefits for patients with peripheral artery disease. His groundbreaking studies revealed new insights into the drug's mechanism of action, paving the way for its use in treating a wider range of conditions. As a result of his work, Kareem became a leading expert on pentoxifylline, often consulted by physicians and researchers worldwide. His dedication to understanding the properties of this drug has improved the lives of countless individuals suffering from circulatory disorders.",
    "predicates": [
        {
            "id": 0,
            "name": "studies_medicine"
        },
        {
            "id": 1,
            "name": "helps_patients"
        },
        {
            "id": 2,
            "name": "is_curious"
        },
        {
            "id": 3,
            "name": "reads_medical"
        },
        {
            "id": 4,
            "name": "tests_theories"
        },
        {
            "id": 5,
            "name": "expert_on_pentoxifylline"
        },
        {
            "id": 6,
            "name": "unfamiliar_with_pentoxifylline"
        },
        {
            "id": 7,
            "name": "knows_pharmacology"
        },
        {
            "id": 8,
            "name": "conducts_research"
        },
        {
            "id": 9,
            "name": "teaches_science"
        },
        {
            "id": 10,
            "name": "understands_drugs"
        },
        {
            "id": 11,
            "name": "uses_pentoxifylline"
        },
        {
            "id": 12,
            "name": "reads_journals"
        },
        {
            "id": 13,
            "name": "analyzes_data"
        },
        {
            "id": 14,
            "name": "develops_theories"
        },
        {
            "id": 15,
            "name": "likes_discovery"
        },
        {
            "id": 16,
            "name": "publish_papers"
        },
        {
            "id": 17,
            "name": "reads_labels"
        }
    ],
    "subject_name": "Kareem",
    "subject_category": "human",
    "keyword": "pentoxifylline",
    "all_facts": [
        {
            "id": 0,
            "subject": "Kareem",
            "text": "Kareem does not study medicine.",
            "fol": "\u00acp_0(Kareem)",
            "str_fol": "\u00acstudies_medicine(Kareem)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Kareem",
            "text": "Kareem does not help patients.",
            "fol": "\u00acp_1(Kareem)",
            "str_fol": "\u00achelps_patients(Kareem)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Kareem",
            "text": "Kareem is curious.",
            "fol": "p_2(Kareem)",
            "str_fol": "is_curious(Kareem)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Kareem",
            "text": "Kareem reads medical literature.",
            "fol": "p_3(Kareem)",
            "str_fol": "reads_medical(Kareem)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kareem",
            "text": "Kareem tests theories.",
            "fol": "p_4(Kareem)",
            "str_fol": "tests_theories(Kareem)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Kareem",
            "text": "Kareem understands drugs.",
            "fol": "p_10(Kareem)",
            "str_fol": "understands_drugs(Kareem)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Kareem",
            "text": "Kareem conducts research.",
            "fol": "p_8(Kareem)",
            "str_fol": "conducts_research(Kareem)",
            "negation": false
        },
        {
            "id": 7,
            "subject": "Kareem",
            "text": "Kareem teaches science.",
            "fol": "p_9(Kareem)",
            "str_fol": "teaches_science(Kareem)",
            "negation": false
        },
        {
            "id": 8,
            "subject": "Kareem",
            "text": "Kareem does not know pharmacology.",
            "fol": "\u00acp_7(Kareem)",
            "str_fol": "\u00acknows_pharmacology(Kareem)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Kareem",
            "text": "Kareem is not unfamiliar with pentoxifylline.",
            "fol": "\u00acp_6(Kareem)",
            "str_fol": "\u00acunfamiliar_with_pentoxifylline(Kareem)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Kareem",
            "text": "Kareem is an expert on pentoxifylline.",
            "fol": "p_5(Kareem)",
            "str_fol": "expert_on_pentoxifylline(Kareem)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 3,
            "subject": "Kareem",
            "text": "Kareem reads medical literature.",
            "fol": "p_3(Kareem)",
            "str_fol": "reads_medical(Kareem)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kareem",
            "text": "Kareem tests theories.",
            "fol": "p_4(Kareem)",
            "str_fol": "tests_theories(Kareem)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kareem",
            "text": "Kareem is curious.",
            "fol": "p_2(Kareem)",
            "str_fol": "is_curious(Kareem)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kareem",
            "text": "Kareem does not help patients.",
            "fol": "\u00acp_1(Kareem)",
            "str_fol": "\u00achelps_patients(Kareem)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kareem",
            "text": "Kareem does not study medicine.",
            "fol": "\u00acp_0(Kareem)",
            "str_fol": "\u00acstudies_medicine(Kareem)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 5,
            "text": "If Kareem reads medical literature and tests theories, then he understands drugs.",
            "fol": "(p_3(Kareem) \u2227 p_4(Kareem)) \u2192 p_10(Kareem)",
            "str_fol": "(reads_medical(Kareem) \u2227 tests_theories(Kareem)) \u2192 understands_drugs(Kareem)"
        },
        {
            "id": 4,
            "text": "If Kareem is curious, then he will conduct research.",
            "fol": "p_2(Kareem) \u2192 p_8(Kareem)",
            "str_fol": "is_curious(Kareem) \u2192 conducts_research(Kareem)"
        },
        {
            "id": 3,
            "text": "If Kareem understands drugs, then he either teaches science or helps patients.",
            "fol": "p_10(Kareem) \u2192 (p_9(Kareem) \u2228 p_1(Kareem))",
            "str_fol": "understands_drugs(Kareem) \u2192 (teaches_science(Kareem) \u2228 helps_patients(Kareem))"
        },
        {
            "id": 2,
            "text": "If Kareem knows pharmacology, then he either conducts research or teaches science, but not both.",
            "fol": "p_7(Kareem) \u2192 (p_8(Kareem) \u2295 p_9(Kareem))",
            "str_fol": "knows_pharmacology(Kareem) \u2192 (conducts_research(Kareem) \u2295 teaches_science(Kareem))"
        },
        {
            "id": 1,
            "text": "If Kareem is either unfamiliar with pentoxifylline or knows pharmacology (but not both), then he studies medicine.",
            "fol": "(p_6(Kareem) \u2295 p_7(Kareem)) \u2192 p_0(Kareem)",
            "str_fol": "(unfamiliar_with_pentoxifylline(Kareem) \u2295 knows_pharmacology(Kareem)) \u2192 studies_medicine(Kareem)"
        },
        {
            "id": 0,
            "text": "Kareem is either an expert on pentoxifylline or unfamiliar with pentoxifylline, but not both.",
            "fol": "p_5(Kareem) \u2295 p_6(Kareem)",
            "str_fol": "expert_on_pentoxifylline(Kareem) \u2295 unfamiliar_with_pentoxifylline(Kareem)"
        }
    ],
    "context": [
        {
            "id": 3,
            "subject": "Kareem",
            "text": "Kareem reads medical literature.",
            "fol": "p_3(Kareem)",
            "str_fol": "reads_medical(Kareem)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Kareem",
            "text": "Kareem tests theories.",
            "fol": "p_4(Kareem)",
            "str_fol": "tests_theories(Kareem)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Kareem",
            "text": "Kareem is curious.",
            "fol": "p_2(Kareem)",
            "str_fol": "is_curious(Kareem)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Kareem",
            "text": "Kareem does not help patients.",
            "fol": "\u00acp_1(Kareem)",
            "str_fol": "\u00achelps_patients(Kareem)",
            "negation": true
        },
        {
            "id": 0,
            "subject": "Kareem",
            "text": "Kareem does not study medicine.",
            "fol": "\u00acp_0(Kareem)",
            "str_fol": "\u00acstudies_medicine(Kareem)",
            "negation": true
        },
        {
            "id": 5,
            "text": "If Kareem reads medical literature and tests theories, then he understands drugs.",
            "fol": "(p_3(Kareem) \u2227 p_4(Kareem)) \u2192 p_10(Kareem)",
            "str_fol": "(reads_medical(Kareem) \u2227 tests_theories(Kareem)) \u2192 understands_drugs(Kareem)"
        },
        {
            "id": 4,
            "text": "If Kareem is curious, then he will conduct research.",
            "fol": "p_2(Kareem) \u2192 p_8(Kareem)",
            "str_fol": "is_curious(Kareem) \u2192 conducts_research(Kareem)"
        },
        {
            "id": 3,
            "text": "If Kareem understands drugs, then he either teaches science or helps patients.",
            "fol": "p_10(Kareem) \u2192 (p_9(Kareem) \u2228 p_1(Kareem))",
            "str_fol": "understands_drugs(Kareem) \u2192 (teaches_science(Kareem) \u2228 helps_patients(Kareem))"
        },
        {
            "id": 2,
            "text": "If Kareem knows pharmacology, then he either conducts research or teaches science, but not both.",
            "fol": "p_7(Kareem) \u2192 (p_8(Kareem) \u2295 p_9(Kareem))",
            "str_fol": "knows_pharmacology(Kareem) \u2192 (conducts_research(Kareem) \u2295 teaches_science(Kareem))"
        },
        {
            "id": 1,
            "text": "If Kareem is either unfamiliar with pentoxifylline or knows pharmacology (but not both), then he studies medicine.",
            "fol": "(p_6(Kareem) \u2295 p_7(Kareem)) \u2192 p_0(Kareem)",
            "str_fol": "(unfamiliar_with_pentoxifylline(Kareem) \u2295 knows_pharmacology(Kareem)) \u2192 studies_medicine(Kareem)"
        },
        {
            "id": 0,
            "text": "Kareem is either an expert on pentoxifylline or unfamiliar with pentoxifylline, but not both.",
            "fol": "p_5(Kareem) \u2295 p_6(Kareem)",
            "str_fol": "expert_on_pentoxifylline(Kareem) \u2295 unfamiliar_with_pentoxifylline(Kareem)"
        }
    ],
    "context_fol": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\n(p_3(Kareem) \u2227 p_4(Kareem)) \u2192 p_10(Kareem)\np_2(Kareem) \u2192 p_8(Kareem)\np_10(Kareem) \u2192 (p_9(Kareem) \u2228 p_1(Kareem))\np_7(Kareem) \u2192 (p_8(Kareem) \u2295 p_9(Kareem))\n(p_6(Kareem) \u2295 p_7(Kareem)) \u2192 p_0(Kareem)\np_5(Kareem) \u2295 p_6(Kareem)",
    "conclusion": {
        "id": 10,
        "subject": "Kareem",
        "text": "Kareem is an expert on pentoxifylline.",
        "fol": "p_5(Kareem)",
        "str_fol": "expert_on_pentoxifylline(Kareem)",
        "negation": false
    },
    "initial_answer": "True",
    "initial_goal": "p_5(Kareem)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Kareem",
                    "text": "Kareem reads medical literature.",
                    "fol": "p_3(Kareem)",
                    "str_fol": "reads_medical(Kareem)",
                    "negation": false
                },
                {
                    "id": 4,
                    "subject": "Kareem",
                    "text": "Kareem tests theories.",
                    "fol": "p_4(Kareem)",
                    "str_fol": "tests_theories(Kareem)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Kareem reads medical literature and tests theories, then he understands drugs.",
                    "fol": "(p_3(Kareem) \u2227 p_4(Kareem)) \u2192 p_10(Kareem)",
                    "str_fol": "(reads_medical(Kareem) \u2227 tests_theories(Kareem)) \u2192 understands_drugs(Kareem)"
                }
            ],
            "conclusion": {
                "id": 5,
                "subject": "Kareem",
                "text": "Kareem understands drugs.",
                "fol": "p_10(Kareem)",
                "str_fol": "understands_drugs(Kareem)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Kareem",
                    "text": "Kareem is curious.",
                    "fol": "p_2(Kareem)",
                    "str_fol": "is_curious(Kareem)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Kareem is curious, then he will conduct research.",
                    "fol": "p_2(Kareem) \u2192 p_8(Kareem)",
                    "str_fol": "is_curious(Kareem) \u2192 conducts_research(Kareem)"
                }
            ],
            "conclusion": {
                "id": 6,
                "subject": "Kareem",
                "text": "Kareem conducts research.",
                "fol": "p_8(Kareem)",
                "str_fol": "conducts_research(Kareem)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Kareem",
                    "text": "Kareem understands drugs.",
                    "fol": "p_10(Kareem)",
                    "str_fol": "understands_drugs(Kareem)",
                    "negation": false
                },
                {
                    "id": 1,
                    "subject": "Kareem",
                    "text": "Kareem does not help patients.",
                    "fol": "\u00acp_1(Kareem)",
                    "str_fol": "\u00achelps_patients(Kareem)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Kareem understands drugs, then he either teaches science or helps patients.",
                    "fol": "p_10(Kareem) \u2192 (p_9(Kareem) \u2228 p_1(Kareem))",
                    "str_fol": "understands_drugs(Kareem) \u2192 (teaches_science(Kareem) \u2228 helps_patients(Kareem))"
                }
            ],
            "conclusion": {
                "id": 7,
                "subject": "Kareem",
                "text": "Kareem teaches science.",
                "fol": "p_9(Kareem)",
                "str_fol": "teaches_science(Kareem)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Kareem",
                    "text": "Kareem conducts research.",
                    "fol": "p_8(Kareem)",
                    "str_fol": "conducts_research(Kareem)",
                    "negation": false
                },
                {
                    "id": 7,
                    "subject": "Kareem",
                    "text": "Kareem teaches science.",
                    "fol": "p_9(Kareem)",
                    "str_fol": "teaches_science(Kareem)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Kareem knows pharmacology, then he either conducts research or teaches science, but not both.",
                    "fol": "p_7(Kareem) \u2192 (p_8(Kareem) \u2295 p_9(Kareem))",
                    "str_fol": "knows_pharmacology(Kareem) \u2192 (conducts_research(Kareem) \u2295 teaches_science(Kareem))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Kareem",
                "text": "Kareem does not know pharmacology.",
                "fol": "\u00acp_7(Kareem)",
                "str_fol": "\u00acknows_pharmacology(Kareem)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 8,
                    "subject": "Kareem",
                    "text": "Kareem does not know pharmacology.",
                    "fol": "\u00acp_7(Kareem)",
                    "str_fol": "\u00acknows_pharmacology(Kareem)",
                    "negation": true
                },
                {
                    "id": 0,
                    "subject": "Kareem",
                    "text": "Kareem does not study medicine.",
                    "fol": "\u00acp_0(Kareem)",
                    "str_fol": "\u00acstudies_medicine(Kareem)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If Kareem is either unfamiliar with pentoxifylline or knows pharmacology (but not both), then he studies medicine.",
                    "fol": "(p_6(Kareem) \u2295 p_7(Kareem)) \u2192 p_0(Kareem)",
                    "str_fol": "(unfamiliar_with_pentoxifylline(Kareem) \u2295 knows_pharmacology(Kareem)) \u2192 studies_medicine(Kareem)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Kareem",
                "text": "Kareem is not unfamiliar with pentoxifylline.",
                "fol": "\u00acp_6(Kareem)",
                "str_fol": "\u00acunfamiliar_with_pentoxifylline(Kareem)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 9,
                    "subject": "Kareem",
                    "text": "Kareem is not unfamiliar with pentoxifylline.",
                    "fol": "\u00acp_6(Kareem)",
                    "str_fol": "\u00acunfamiliar_with_pentoxifylline(Kareem)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "Kareem is either an expert on pentoxifylline or unfamiliar with pentoxifylline, but not both.",
                    "fol": "p_5(Kareem) \u2295 p_6(Kareem)",
                    "str_fol": "expert_on_pentoxifylline(Kareem) \u2295 unfamiliar_with_pentoxifylline(Kareem)"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Kareem",
                "text": "Kareem is an expert on pentoxifylline.",
                "fol": "p_5(Kareem)",
                "str_fol": "expert_on_pentoxifylline(Kareem)",
                "negation": false
            }
        }
    ],
    "proof_trace": "1 p_3(Kareem) & p_4(Kareem) -> p_10(Kareem).  [assumption].\n2 p_2(Kareem) -> p_8(Kareem).  [assumption].\n3 p_10(Kareem) -> p_9(Kareem) | p_1(Kareem).  [assumption].\n4 p_7(Kareem) -> -(p_8(Kareem) <-> p_9(Kareem)).  [assumption].\n5 -(p_6(Kareem) <-> p_7(Kareem)) -> p_0(Kareem).  [assumption].\n6 -(p_5(Kareem) <-> p_6(Kareem)).  [assumption].\n7 p_5(Kareem).  [goal].\n8 -p_3(Kareem) | -p_4(Kareem) | p_10(Kareem).  [clausify(1)].\n9 p_3(Kareem).  [assumption].\n10 -p_4(Kareem) | p_10(Kareem).  [resolve(8,a,9,a)].\n11 p_4(Kareem).  [assumption].\n12 -p_2(Kareem) | p_8(Kareem).  [clausify(2)].\n13 p_2(Kareem).  [assumption].\n14 -p_10(Kareem) | p_9(Kareem) | p_1(Kareem).  [clausify(3)].\n15 -p_1(Kareem).  [assumption].\n16 -p_6(Kareem) | p_7(Kareem) | p_0(Kareem).  [clausify(5)].\n17 -p_0(Kareem).  [assumption].\n19 -p_6(Kareem) | p_7(Kareem).  [resolve(16,c,17,a)].\n21 -p_7(Kareem) | -p_8(Kareem) | -p_9(Kareem).  [clausify(4)].\n24 p_5(Kareem) | p_6(Kareem).  [clausify(6)].\n25 -p_5(Kareem).  [deny(7)].\n26 -p_10(Kareem) | p_9(Kareem).  [resolve(14,c,15,a)].\n27 p_10(Kareem).  [resolve(10,a,11,a)].\n28 -p_6(Kareem) | -p_8(Kareem) | -p_9(Kareem).  [resolve(19,b,21,a)].\n29 p_8(Kareem).  [resolve(12,a,13,a)].\n31 -p_6(Kareem) | -p_9(Kareem).  [resolve(28,b,29,a)].\n32 p_6(Kareem).  [resolve(25,a,24,a)].\n33 -p_9(Kareem).  [resolve(31,a,32,a)].\n34 p_9(Kareem).  [resolve(26,a,27,a)].\n35 $F.  [resolve(33,a,34,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\n(p_3(Kareem) \u2227 p_4(Kareem)) \u2192 p_10(Kareem)\np_2(Kareem) \u2192 p_8(Kareem)\np_10(Kareem) \u2192 (p_9(Kareem) \u2228 p_1(Kareem))\np_7(Kareem) \u2192 (p_8(Kareem) \u2295 p_9(Kareem))\n(p_6(Kareem) \u2295 p_7(Kareem)) \u2192 p_0(Kareem)\n\u00ac(p_5(Kareem) \u2295 p_6(Kareem))",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "(p_3(Kareem) & p_4(Kareem)) -> p_10(Kareem)",
                    "p_2(Kareem) -> p_8(Kareem)",
                    "p_10(Kareem) -> (p_9(Kareem) | p_1(Kareem))",
                    "p_7(Kareem) -> -(p_8(Kareem) <-> p_9(Kareem))",
                    "(-(p_6(Kareem) <-> p_7(Kareem))) -> p_0(Kareem)",
                    "(p_5(Kareem) <-> p_6(Kareem))"
                ],
                "formulas(goals)": [
                    "-p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Kareem) \u2295 p_6(Kareem)"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u00ac(p_5(Kareem) \u2295 p_6(Kareem))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\np_10(Kareem)\np_8(Kareem)\np_9(Kareem)\n\u00acp_7(Kareem)\n\u00acp_6(Kareem)\n\u00acp_10(Kareem) \u2192 (\u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))\n\u00acp_8(Kareem) \u2192 \u00acp_2(Kareem)\n(\u00acp_9(Kareem) \u2227 \u00acp_1(Kareem)) \u2192 \u00acp_10(Kareem)\n(p_8(Kareem) \u2194 p_9(Kareem)) \u2192 \u00acp_7(Kareem)\n\u00acp_0(Kareem) \u2192 (p_6(Kareem) \u2194 p_7(Kareem))\np_5(Kareem) \u2194 p_6(Kareem)",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "-p_7(Kareem)",
                    "-p_6(Kareem)",
                    "-p_10(Kareem) -> (-p_3(Kareem) | -p_4(Kareem))",
                    "-p_8(Kareem) -> -p_2(Kareem)",
                    "(-p_9(Kareem) & -p_1(Kareem)) -> -p_10(Kareem)",
                    "(p_8(Kareem) <-> p_9(Kareem)) -> -p_7(Kareem)",
                    "-p_0(Kareem) -> (p_6(Kareem) <-> p_7(Kareem))",
                    "(p_5(Kareem) <-> p_6(Kareem))"
                ],
                "formulas(goals)": [
                    "-p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_3(Kareem) \u2227 p_4(Kareem)) \u2192 p_10(Kareem)",
                    "p_2(Kareem) \u2192 p_8(Kareem)",
                    "p_10(Kareem) \u2192 (p_9(Kareem) \u2228 p_1(Kareem))",
                    "p_7(Kareem) \u2192 (p_8(Kareem) \u2295 p_9(Kareem))",
                    "(p_6(Kareem) \u2295 p_7(Kareem)) \u2192 p_0(Kareem)",
                    "\u00ac(p_5(Kareem) \u2295 p_6(Kareem))"
                ],
                "added_facts": [
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "\u00acp_7(Kareem)",
                    "\u00acp_6(Kareem)"
                ],
                "added_rules": [
                    "\u00acp_10(Kareem) \u2192 (\u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))",
                    "\u00acp_8(Kareem) \u2192 \u00acp_2(Kareem)",
                    "(\u00acp_9(Kareem) \u2227 \u00acp_1(Kareem)) \u2192 \u00acp_10(Kareem)",
                    "(p_8(Kareem) \u2194 p_9(Kareem)) \u2192 \u00acp_7(Kareem)",
                    "\u00acp_0(Kareem) \u2192 (p_6(Kareem) \u2194 p_7(Kareem))",
                    "p_5(Kareem) \u2194 p_6(Kareem)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\np_10(Kareem)\np_8(Kareem)\np_9(Kareem)\n(\u00acp_10(Kareem) \u2192 (\u00acp_3(Kareem) \u2228 \u00acp_4(Kareem)))\n(\u00acp_8(Kareem) \u2192 \u00acp_2(Kareem))\n((\u00acp_9(Kareem) \u2227 \u00acp_1(Kareem)) \u2192 \u00acp_10(Kareem))\n(\u00acp_0(Kareem) \u2192 (p_6(Kareem) \u2194 p_7(Kareem)))\n(p_5(Kareem) \u2194 p_6(Kareem))\np_7(Kareem)",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "(-p_10(Kareem) -> (-p_3(Kareem) | -p_4(Kareem)))",
                    "(-p_8(Kareem) -> -p_2(Kareem))",
                    "((-p_9(Kareem) & -p_1(Kareem)) -> -p_10(Kareem))",
                    "(-p_0(Kareem) -> (p_6(Kareem) <-> p_7(Kareem)))",
                    "(p_5(Kareem) <-> p_6(Kareem))",
                    "p_7(Kareem)"
                ],
                "formulas(goals)": [
                    "p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Kareem)",
                    "\u00acp_6(Kareem)"
                ],
                "removed_rules": [
                    "(p_8(Kareem) \u2194 p_9(Kareem)) \u2192 \u00acp_7(Kareem)"
                ],
                "added_facts": [
                    "p_7(Kareem)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\np_10(Kareem)\np_8(Kareem)\np_9(Kareem)\n(p_10(Kareem) \u2228 \u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem) \u2228 \u00acp_10(Kareem))\n(p_0(Kareem) \u2228 (p_6(Kareem) \u2194 p_7(Kareem)))\n(p_5(Kareem) \u2192 p_6(Kareem))\n(p_6(Kareem) \u2192 p_5(Kareem))\np_6(Kareem)\np_7(Kareem)",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "p_10(Kareem) | -p_3(Kareem) | -p_4(Kareem)",
                    "p_8(Kareem) | -p_2(Kareem)",
                    "p_9(Kareem) | p_1(Kareem) | -p_10(Kareem)",
                    "p_0(Kareem) | (p_6(Kareem) <-> p_7(Kareem))",
                    "p_5(Kareem) -> p_6(Kareem)",
                    "p_6(Kareem) -> p_5(Kareem)",
                    "p_6(Kareem)",
                    "p_7(Kareem)"
                ],
                "formulas(goals)": [
                    "p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(\u00acp_10(Kareem) \u2192 (\u00acp_3(Kareem) \u2228 \u00acp_4(Kareem)))",
                    "(\u00acp_8(Kareem) \u2192 \u00acp_2(Kareem))",
                    "((\u00acp_9(Kareem) \u2227 \u00acp_1(Kareem)) \u2192 \u00acp_10(Kareem))",
                    "(\u00acp_0(Kareem) \u2192 (p_6(Kareem) \u2194 p_7(Kareem)))",
                    "(p_5(Kareem) \u2194 p_6(Kareem))"
                ],
                "added_facts": [
                    "p_6(Kareem)"
                ],
                "added_rules": [
                    "(p_10(Kareem) \u2228 \u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))",
                    "(p_8(Kareem) \u2228 \u00acp_2(Kareem))",
                    "(p_9(Kareem) \u2228 p_1(Kareem) \u2228 \u00acp_10(Kareem))",
                    "(p_0(Kareem) \u2228 (p_6(Kareem) \u2194 p_7(Kareem)))",
                    "(p_5(Kareem) \u2192 p_6(Kareem))",
                    "(p_6(Kareem) \u2192 p_5(Kareem))"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\np_10(Kareem)\np_8(Kareem)\np_9(Kareem)\n(p_10(Kareem) \u2228 \u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))\n(p_10(Kareem) \u2228 \u00acp_3(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem) \u2228 \u00acp_1(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem) \u2228 \u00acp_10(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem))\n(p_0(Kareem) \u2228 (p_6(Kareem) \u2192 p_7(Kareem)))\n(p_5(Kareem) \u2192 p_6(Kareem))\n(p_6(Kareem) \u2192 p_5(Kareem))\n(p_5(Kareem) \u2228 \u00acp_6(Kareem))\np_6(Kareem)\np_7(Kareem)",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "(p_10(Kareem) | -p_3(Kareem) | -p_4(Kareem))",
                    "(p_10(Kareem) | -p_3(Kareem))",
                    "(p_8(Kareem) | -p_2(Kareem))",
                    "(p_8(Kareem) | -p_2(Kareem) | -p_1(Kareem))",
                    "(p_9(Kareem) | p_1(Kareem) | -p_10(Kareem))",
                    "(p_9(Kareem) | p_1(Kareem))",
                    "(p_0(Kareem) | (p_6(Kareem) -> p_7(Kareem)))",
                    "(p_5(Kareem) -> p_6(Kareem))",
                    "(p_6(Kareem) -> p_5(Kareem))",
                    "(p_5(Kareem) | -p_6(Kareem))",
                    "p_6(Kareem)",
                    "p_7(Kareem)"
                ],
                "formulas(goals)": [
                    "p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_0(Kareem) \u2228 (p_6(Kareem) \u2194 p_7(Kareem)))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_10(Kareem) \u2228 \u00acp_3(Kareem))",
                    "(p_8(Kareem) \u2228 \u00acp_2(Kareem) \u2228 \u00acp_1(Kareem))",
                    "(p_9(Kareem) \u2228 p_1(Kareem))",
                    "(p_0(Kareem) \u2228 (p_6(Kareem) \u2192 p_7(Kareem)))",
                    "(p_5(Kareem) \u2228 \u00acp_6(Kareem))"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\np_10(Kareem)\np_8(Kareem)\np_9(Kareem)\n(p_10(Kareem) \u2228 \u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))\n(p_10(Kareem) \u2228 \u00acp_3(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem) \u2228 \u00acp_1(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem) \u2228 \u00acp_10(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem))\n(p_0(Kareem) \u2228 (p_6(Kareem) \u2192 p_7(Kareem)))\n(p_5(Kareem) \u2192 p_6(Kareem))\np_6(Kareem)\np_7(Kareem)\n(p_6(Kareem) \u2192 \u00acp_5(Kareem))",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "p_10(Kareem) | -p_3(Kareem) | -p_4(Kareem)",
                    "p_10(Kareem) | -p_3(Kareem)",
                    "p_8(Kareem) | -p_2(Kareem)",
                    "p_8(Kareem) | -p_2(Kareem) | -p_1(Kareem)",
                    "p_9(Kareem) | p_1(Kareem) | -p_10(Kareem)",
                    "p_9(Kareem) | p_1(Kareem)",
                    "p_0(Kareem) | (-p_6(Kareem) | p_7(Kareem))",
                    "-p_5(Kareem) | p_6(Kareem)",
                    "p_6(Kareem)",
                    "p_7(Kareem)",
                    "-p_6(Kareem) | -p_5(Kareem)"
                ],
                "formulas(goals)": [
                    "-p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_6(Kareem) \u2192 p_5(Kareem))",
                    "(p_5(Kareem) \u2228 \u00acp_6(Kareem))"
                ],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Kareem) \u2192 \u00acp_5(Kareem))"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "p_3(Kareem)\np_4(Kareem)\np_2(Kareem)\n\u00acp_1(Kareem)\n\u00acp_0(Kareem)\np_10(Kareem)\np_8(Kareem)\np_9(Kareem)\n(p_10(Kareem) \u2228 \u00acp_3(Kareem) \u2228 \u00acp_4(Kareem))\n(p_10(Kareem) \u2228 \u00acp_3(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem))\n(p_8(Kareem) \u2228 \u00acp_2(Kareem) \u2228 \u00acp_1(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem) \u2228 \u00acp_10(Kareem))\n(p_9(Kareem) \u2228 p_1(Kareem))\n(p_0(Kareem) \u2228 (p_6(Kareem) \u2192 p_7(Kareem)))\n(p_5(Kareem) \u2192 p_6(Kareem))\np_6(Kareem)\np_7(Kareem)\n(p_6(Kareem) \u2192 \u00acp_5(Kareem))\n(p_6(Kareem) \u2228 \u00acp_6(Kareem))\n(\u00acp_6(Kareem) \u2228 \u00acp_5(Kareem))\n(p_7(Kareem) \u2228 \u00acp_6(Kareem))\n(p_0(Kareem) \u2228 p_7(Kareem))\n(\u00acp_5(Kareem) \u2228 p_6(Kareem))",
            "Initial Goal": "p_5(Kareem)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "p_3(Kareem)",
                    "p_4(Kareem)",
                    "p_2(Kareem)",
                    "-p_1(Kareem)",
                    "-p_0(Kareem)",
                    "p_10(Kareem)",
                    "p_8(Kareem)",
                    "p_9(Kareem)",
                    "(p_10(Kareem) | -p_3(Kareem) | -p_4(Kareem))",
                    "(p_10(Kareem) | -p_3(Kareem))",
                    "(p_8(Kareem) | -p_2(Kareem))",
                    "(p_8(Kareem) | -p_2(Kareem) | -p_1(Kareem))",
                    "(p_9(Kareem) | p_1(Kareem) | -p_10(Kareem))",
                    "(p_9(Kareem) | p_1(Kareem))",
                    "(p_0(Kareem) | (p_6(Kareem) -> p_7(Kareem)))",
                    "(p_5(Kareem) -> p_6(Kareem))",
                    "p_6(Kareem)",
                    "p_7(Kareem)",
                    "(p_6(Kareem) -> -p_5(Kareem))",
                    "(p_6(Kareem) | -p_6(Kareem))",
                    "(-p_6(Kareem) | -p_5(Kareem))",
                    "(p_7(Kareem) | -p_6(Kareem))",
                    "(p_0(Kareem) | p_7(Kareem))",
                    "(-p_5(Kareem) | p_6(Kareem))"
                ],
                "formulas(goals)": [
                    "-p_5(Kareem)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "(p_6(Kareem) \u2228 \u00acp_6(Kareem))",
                    "(\u00acp_6(Kareem) \u2228 \u00acp_5(Kareem))",
                    "(p_7(Kareem) \u2228 \u00acp_6(Kareem))",
                    "(p_0(Kareem) \u2228 p_7(Kareem))",
                    "(\u00acp_5(Kareem) \u2228 p_6(Kareem))"
                ]
            }
        }
    ]
}