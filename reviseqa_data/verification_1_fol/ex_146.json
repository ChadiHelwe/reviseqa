{
    "background_story": "Reid was a brilliant mathematician with a fascination for geometric patterns. His work focused on the concept of tangency, where curves and lines touched at a single point. Reid's research led him to explore the beauty of circles, ellipses, and parabolas, and how they intersected in intricate ways. As he delved deeper into his studies, Reid began to see the world through the lens of tangency, noticing the subtle points of contact between people, ideas, and nature. His unique perspective inspired a new field of study, where mathematicians and philosophers converged to explore the intersections of art, science, and human experience. Reid's work became a testament to the power of tangency, revealing the hidden connections that bind us all.",
    "predicates": [
        {
            "id": 0,
            "name": "appreciate_art"
        },
        {
            "id": 1,
            "name": "think_logically"
        },
        {
            "id": 2,
            "name": "explore_nature"
        },
        {
            "id": 3,
            "name": "visualize_patterns"
        },
        {
            "id": 4,
            "name": "see_connections"
        },
        {
            "id": 5,
            "name": "identify_links"
        },
        {
            "id": 6,
            "name": "develop_theories"
        },
        {
            "id": 7,
            "name": "design_models"
        },
        {
            "id": 8,
            "name": "create_theories"
        },
        {
            "id": 9,
            "name": "understand_math"
        },
        {
            "id": 10,
            "name": "solve_problems"
        },
        {
            "id": 11,
            "name": "make_discoveries"
        },
        {
            "id": 12,
            "name": "think_creatively"
        },
        {
            "id": 13,
            "name": "find_solutions"
        },
        {
            "id": 14,
            "name": "make_inferences"
        },
        {
            "id": 15,
            "name": "is_innovative"
        },
        {
            "id": 16,
            "name": "love_puzzles"
        },
        {
            "id": 17,
            "name": "recognize_shapes"
        },
        {
            "id": 18,
            "name": "analyze_data"
        },
        {
            "id": 19,
            "name": "reason_abstractly"
        },
        {
            "id": 20,
            "name": "read_widely"
        },
        {
            "id": 21,
            "name": "ask_questions"
        },
        {
            "id": 22,
            "name": "read_books"
        },
        {
            "id": 23,
            "name": "generates_Ideas"
        },
        {
            "id": 24,
            "name": "math"
        }
    ],
    "subject_name": "Reid",
    "subject_category": "human",
    "keyword": "tangency",
    "all_facts": [
        {
            "id": 0,
            "subject": "Reid",
            "text": "Reid does not appreciate art.",
            "fol": "\u00acp_0(Reid)",
            "str_fol": "\u00acappreciate_art(Reid)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Reid",
            "text": "Reid thinks logically.",
            "fol": "p_1(Reid)",
            "str_fol": "think_logically(Reid)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Reid",
            "text": "Reid does not explore nature.",
            "fol": "\u00acp_2(Reid)",
            "str_fol": "\u00acexplore_nature(Reid)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Reid",
            "text": "Reid can visualize patterns.",
            "fol": "p_3(Reid)",
            "str_fol": "visualize_patterns(Reid)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Reid",
            "text": "Reid does not see connections.",
            "fol": "\u00acp_4(Reid)",
            "str_fol": "\u00acsee_connections(Reid)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Reid",
            "text": "Reid does not identify links.",
            "fol": "\u00acp_5(Reid)",
            "str_fol": "\u00acidentify_links(Reid)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Reid",
            "text": "Reid does not develop theories.",
            "fol": "\u00acp_6(Reid)",
            "str_fol": "\u00acdevelop_theories(Reid)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Reid",
            "text": "Reid does not design models.",
            "fol": "\u00acp_7(Reid)",
            "str_fol": "\u00acdesign_models(Reid)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Reid",
            "text": "Reid does not create theories.",
            "fol": "\u00acp_8(Reid)",
            "str_fol": "\u00accreate_theories(Reid)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Reid",
            "text": "Reid is not innovative.",
            "fol": "\u00acp_15(Reid)",
            "str_fol": "\u00acis_innovative(Reid)",
            "negation": true
        },
        {
            "id": 10,
            "subject": "Reid",
            "text": "Reid does not make inferences.",
            "fol": "\u00acp_14(Reid)",
            "str_fol": "\u00acmake_inferences(Reid)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Reid",
            "text": "Reid does not find solutions.",
            "fol": "\u00acp_13(Reid)",
            "str_fol": "\u00acfind_solutions(Reid)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Reid",
            "text": "Reid does not think creatively.",
            "fol": "\u00acp_12(Reid)",
            "str_fol": "\u00acthink_creatively(Reid)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Reid",
            "text": "Reid does not make discoveries.",
            "fol": "\u00acp_11(Reid)",
            "str_fol": "\u00acmake_discoveries(Reid)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Reid",
            "text": "Reid cannot solve problems.",
            "fol": "\u00acp_10(Reid)",
            "str_fol": "\u00acsolve_problems(Reid)",
            "negation": true
        },
        {
            "id": 15,
            "subject": "Reid",
            "text": "Reid does not understand math.",
            "fol": "\u00acp_9(Reid)",
            "str_fol": "\u00acunderstand_math(Reid)",
            "negation": true
        },
        {
            "id": 16,
            "subject": "Reid",
            "text": "Reid either appreciates art or understands math (or both).",
            "fol": "p_0(Reid) \u2228 understand_math(Reid)",
            "str_fol": "appreciate_art(Reid) \u2228 understand_math(Reid)",
            "negation": false
        }
    ],
    "context_facts": [
        {
            "id": 7,
            "subject": "Reid",
            "text": "Reid does not design models.",
            "fol": "\u00acp_7(Reid)",
            "str_fol": "\u00acdesign_models(Reid)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Reid",
            "text": "Reid does not create theories.",
            "fol": "\u00acp_8(Reid)",
            "str_fol": "\u00accreate_theories(Reid)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Reid",
            "text": "Reid does not identify links.",
            "fol": "\u00acp_5(Reid)",
            "str_fol": "\u00acidentify_links(Reid)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Reid",
            "text": "Reid does not develop theories.",
            "fol": "\u00acp_6(Reid)",
            "str_fol": "\u00acdevelop_theories(Reid)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Reid",
            "text": "Reid does not see connections.",
            "fol": "\u00acp_4(Reid)",
            "str_fol": "\u00acsee_connections(Reid)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Reid",
            "text": "Reid does not explore nature.",
            "fol": "\u00acp_2(Reid)",
            "str_fol": "\u00acexplore_nature(Reid)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Reid",
            "text": "Reid can visualize patterns.",
            "fol": "p_3(Reid)",
            "str_fol": "visualize_patterns(Reid)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Reid",
            "text": "Reid thinks logically.",
            "fol": "p_1(Reid)",
            "str_fol": "think_logically(Reid)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Reid",
            "text": "Reid does not appreciate art.",
            "fol": "\u00acp_0(Reid)",
            "str_fol": "\u00acappreciate_art(Reid)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 6,
            "text": "If Reid is innovative, then he either designs models or creates theories.",
            "fol": "p_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))",
            "str_fol": "is_innovative(Reid) \u2192 (design_models(Reid) \u2228 create_theories(Reid))"
        },
        {
            "id": 5,
            "text": "Anyone who makes inferences either identifies links or develops theories.",
            "fol": "\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (make_inferences(x) \u2192 (identify_links(x) \u2228 develop_theories(x)))"
        },
        {
            "id": 4,
            "text": "If Reid either finds solutions or makes inferences (but not both), then he is innovative.",
            "fol": "(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)",
            "str_fol": "(find_solutions(Reid) \u2295 make_inferences(Reid)) \u2192 is_innovative(Reid)"
        },
        {
            "id": 3,
            "text": "If Reid thinks creatively, then he either finds solutions or sees connections, but not both.",
            "fol": "p_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))",
            "str_fol": "think_creatively(Reid) \u2192 (find_solutions(Reid) \u2295 see_connections(Reid))"
        },
        {
            "id": 2,
            "text": "If Reid either explores nature or makes discoveries (but not both), then he thinks creatively.",
            "fol": "(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)",
            "str_fol": "(explore_nature(Reid) \u2295 make_discoveries(Reid)) \u2192 think_creatively(Reid)"
        },
        {
            "id": 1,
            "text": "If someone can solve problems and visualize patterns, then they can make discoveries.",
            "fol": "\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((solve_problems(x) \u2227 visualize_patterns(x)) \u2192 make_discoveries(x))"
        },
        {
            "id": 0,
            "text": "If someone understands math, then they can solve problems and think logically.",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))",
            "str_fol": "\u2200x (understand_math(x) \u2192 (solve_problems(x) \u2227 think_logically(x)))"
        }
    ],
    "context": [
        {
            "id": 7,
            "subject": "Reid",
            "text": "Reid does not design models.",
            "fol": "\u00acp_7(Reid)",
            "str_fol": "\u00acdesign_models(Reid)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Reid",
            "text": "Reid does not create theories.",
            "fol": "\u00acp_8(Reid)",
            "str_fol": "\u00accreate_theories(Reid)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Reid",
            "text": "Reid does not identify links.",
            "fol": "\u00acp_5(Reid)",
            "str_fol": "\u00acidentify_links(Reid)",
            "negation": true
        },
        {
            "id": 6,
            "subject": "Reid",
            "text": "Reid does not develop theories.",
            "fol": "\u00acp_6(Reid)",
            "str_fol": "\u00acdevelop_theories(Reid)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Reid",
            "text": "Reid does not see connections.",
            "fol": "\u00acp_4(Reid)",
            "str_fol": "\u00acsee_connections(Reid)",
            "negation": true
        },
        {
            "id": 2,
            "subject": "Reid",
            "text": "Reid does not explore nature.",
            "fol": "\u00acp_2(Reid)",
            "str_fol": "\u00acexplore_nature(Reid)",
            "negation": true
        },
        {
            "id": 3,
            "subject": "Reid",
            "text": "Reid can visualize patterns.",
            "fol": "p_3(Reid)",
            "str_fol": "visualize_patterns(Reid)",
            "negation": false
        },
        {
            "id": 1,
            "subject": "Reid",
            "text": "Reid thinks logically.",
            "fol": "p_1(Reid)",
            "str_fol": "think_logically(Reid)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Reid",
            "text": "Reid does not appreciate art.",
            "fol": "\u00acp_0(Reid)",
            "str_fol": "\u00acappreciate_art(Reid)",
            "negation": true
        },
        {
            "id": 6,
            "text": "If Reid is innovative, then he either designs models or creates theories.",
            "fol": "p_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))",
            "str_fol": "is_innovative(Reid) \u2192 (design_models(Reid) \u2228 create_theories(Reid))"
        },
        {
            "id": 5,
            "text": "Anyone who makes inferences either identifies links or develops theories.",
            "fol": "\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))",
            "str_fol": "\u2200x (make_inferences(x) \u2192 (identify_links(x) \u2228 develop_theories(x)))"
        },
        {
            "id": 4,
            "text": "If Reid either finds solutions or makes inferences (but not both), then he is innovative.",
            "fol": "(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)",
            "str_fol": "(find_solutions(Reid) \u2295 make_inferences(Reid)) \u2192 is_innovative(Reid)"
        },
        {
            "id": 3,
            "text": "If Reid thinks creatively, then he either finds solutions or sees connections, but not both.",
            "fol": "p_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))",
            "str_fol": "think_creatively(Reid) \u2192 (find_solutions(Reid) \u2295 see_connections(Reid))"
        },
        {
            "id": 2,
            "text": "If Reid either explores nature or makes discoveries (but not both), then he thinks creatively.",
            "fol": "(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)",
            "str_fol": "(explore_nature(Reid) \u2295 make_discoveries(Reid)) \u2192 think_creatively(Reid)"
        },
        {
            "id": 1,
            "text": "If someone can solve problems and visualize patterns, then they can make discoveries.",
            "fol": "\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((solve_problems(x) \u2227 visualize_patterns(x)) \u2192 make_discoveries(x))"
        },
        {
            "id": 0,
            "text": "If someone understands math, then they can solve problems and think logically.",
            "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))",
            "str_fol": "\u2200x (understand_math(x) \u2192 (solve_problems(x) \u2227 think_logically(x)))"
        }
    ],
    "context_fol": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\n\u00acp_0(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))",
    "conclusion": {
        "id": 14,
        "text": "Reid either appreciates art or understands math (or both).",
        "fol": "p_0(Reid) \u2228 p_9(Reid)",
        "str_fol": "appreciate_art(Reid) \u2228 understand_math(Reid)"
    },
    "initial_answer": "False",
    "initial_goal": "p_0(Reid) \u2228 p_9(Reid)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 7,
                    "subject": "Reid",
                    "text": "Reid does not design models.",
                    "fol": "\u00acp_7(Reid)",
                    "str_fol": "\u00acdesign_models(Reid)",
                    "negation": true
                },
                {
                    "id": 8,
                    "subject": "Reid",
                    "text": "Reid does not create theories.",
                    "fol": "\u00acp_8(Reid)",
                    "str_fol": "\u00accreate_theories(Reid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "If Reid is innovative, then he either designs models or creates theories.",
                    "fol": "p_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))",
                    "str_fol": "is_innovative(Reid) \u2192 (design_models(Reid) \u2228 create_theories(Reid))"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Reid",
                "text": "Reid is not innovative.",
                "fol": "\u00acp_15(Reid)",
                "str_fol": "\u00acis_innovative(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Reid",
                    "text": "Reid does not identify links.",
                    "fol": "\u00acp_5(Reid)",
                    "str_fol": "\u00acidentify_links(Reid)",
                    "negation": true
                },
                {
                    "id": 6,
                    "subject": "Reid",
                    "text": "Reid does not develop theories.",
                    "fol": "\u00acp_6(Reid)",
                    "str_fol": "\u00acdevelop_theories(Reid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "Anyone who makes inferences either identifies links or develops theories.",
                    "fol": "\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))",
                    "str_fol": "\u2200x (make_inferences(x) \u2192 (identify_links(x) \u2228 develop_theories(x)))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Reid",
                "text": "Reid does not make inferences.",
                "fol": "\u00acp_14(Reid)",
                "str_fol": "\u00acmake_inferences(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Reid",
                    "text": "Reid does not make inferences.",
                    "fol": "\u00acp_14(Reid)",
                    "str_fol": "\u00acmake_inferences(Reid)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Reid",
                    "text": "Reid is not innovative.",
                    "fol": "\u00acp_15(Reid)",
                    "str_fol": "\u00acis_innovative(Reid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "If Reid either finds solutions or makes inferences (but not both), then he is innovative.",
                    "fol": "(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)",
                    "str_fol": "(find_solutions(Reid) \u2295 make_inferences(Reid)) \u2192 is_innovative(Reid)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Reid",
                "text": "Reid does not find solutions.",
                "fol": "\u00acp_13(Reid)",
                "str_fol": "\u00acfind_solutions(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Reid",
                    "text": "Reid does not find solutions.",
                    "fol": "\u00acp_13(Reid)",
                    "str_fol": "\u00acfind_solutions(Reid)",
                    "negation": true
                },
                {
                    "id": 4,
                    "subject": "Reid",
                    "text": "Reid does not see connections.",
                    "fol": "\u00acp_4(Reid)",
                    "str_fol": "\u00acsee_connections(Reid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "If Reid thinks creatively, then he either finds solutions or sees connections, but not both.",
                    "fol": "p_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))",
                    "str_fol": "think_creatively(Reid) \u2192 (find_solutions(Reid) \u2295 see_connections(Reid))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Reid",
                "text": "Reid does not think creatively.",
                "fol": "\u00acp_12(Reid)",
                "str_fol": "\u00acthink_creatively(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Reid",
                    "text": "Reid does not explore nature.",
                    "fol": "\u00acp_2(Reid)",
                    "str_fol": "\u00acexplore_nature(Reid)",
                    "negation": true
                },
                {
                    "id": 12,
                    "subject": "Reid",
                    "text": "Reid does not think creatively.",
                    "fol": "\u00acp_12(Reid)",
                    "str_fol": "\u00acthink_creatively(Reid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If Reid either explores nature or makes discoveries (but not both), then he thinks creatively.",
                    "fol": "(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)",
                    "str_fol": "(explore_nature(Reid) \u2295 make_discoveries(Reid)) \u2192 think_creatively(Reid)"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Reid",
                "text": "Reid does not make discoveries.",
                "fol": "\u00acp_11(Reid)",
                "str_fol": "\u00acmake_discoveries(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Reid",
                    "text": "Reid can visualize patterns.",
                    "fol": "p_3(Reid)",
                    "str_fol": "visualize_patterns(Reid)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Reid",
                    "text": "Reid does not make discoveries.",
                    "fol": "\u00acp_11(Reid)",
                    "str_fol": "\u00acmake_discoveries(Reid)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "If someone can solve problems and visualize patterns, then they can make discoveries.",
                    "fol": "\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((solve_problems(x) \u2227 visualize_patterns(x)) \u2192 make_discoveries(x))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Reid",
                "text": "Reid cannot solve problems.",
                "fol": "\u00acp_10(Reid)",
                "str_fol": "\u00acsolve_problems(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Reid",
                    "text": "Reid cannot solve problems.",
                    "fol": "\u00acp_10(Reid)",
                    "str_fol": "\u00acsolve_problems(Reid)",
                    "negation": true
                },
                {
                    "id": 1,
                    "subject": "Reid",
                    "text": "Reid thinks logically.",
                    "fol": "p_1(Reid)",
                    "str_fol": "think_logically(Reid)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If someone understands math, then they can solve problems and think logically.",
                    "fol": "\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))",
                    "str_fol": "\u2200x (understand_math(x) \u2192 (solve_problems(x) \u2227 think_logically(x)))"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Reid",
                "text": "Reid does not understand math.",
                "fol": "\u00acp_9(Reid)",
                "str_fol": "\u00acunderstand_math(Reid)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 0,
                    "subject": "Reid",
                    "text": "Reid does not appreciate art.",
                    "fol": "\u00acp_0(Reid)",
                    "str_fol": "\u00acappreciate_art(Reid)",
                    "negation": true
                },
                {
                    "id": 15,
                    "subject": "Reid",
                    "text": "Reid does not understand math.",
                    "fol": "\u00acp_9(Reid)",
                    "str_fol": "\u00acunderstand_math(Reid)",
                    "negation": true
                }
            ],
            "rules": [],
            "conclusion": {
                "id": 14,
                "text": "Reid either appreciates art or understands math (or both).",
                "fol": "p_0(Reid) \u2228 p_9(Reid)",
                "str_fol": "appreciate_art(Reid) \u2228 understand_math(Reid)"
            }
        }
    ],
    "proof_trace": "1 p_15(Reid) -> p_7(Reid) | p_8(Reid).  [assumption].\n2 (all x (p_14(x) -> p_5(x) | p_6(x))).  [assumption].\n3 -(p_13(Reid) <-> p_14(Reid)) -> p_15(Reid).  [assumption].\n4 p_12(Reid) -> -(p_13(Reid) <-> p_4(Reid)).  [assumption].\n5 -(p_2(Reid) <-> p_11(Reid)) -> p_12(Reid).  [assumption].\n6 (all x (p_10(x) & p_3(x) -> p_11(x))).  [assumption].\n7 (all x (p_9(x) -> p_10(x) & p_1(x))).  [assumption].\n8 -(p_0(Reid) | p_9(Reid)).  [goal].\n9 -p_15(Reid) | p_7(Reid) | p_8(Reid).  [clausify(1)].\n10 -p_7(Reid).  [assumption].\n11 -p_15(Reid) | p_8(Reid).  [resolve(9,b,10,a)].\n12 -p_8(Reid).  [assumption].\n13 -p_14(x) | p_5(x) | p_6(x).  [clausify(2)].\n14 -p_5(Reid).  [assumption].\n15 -p_14(Reid) | p_6(Reid).  [resolve(13,b,14,a)].\n16 -p_6(Reid).  [assumption].\n17 -p_12(Reid) | p_13(Reid) | p_4(Reid).  [clausify(4)].\n18 -p_4(Reid).  [assumption].\n20 p_2(Reid) | -p_11(Reid) | p_12(Reid).  [clausify(5)].\n21 -p_2(Reid).  [assumption].\n23 -p_10(x) | -p_3(x) | p_11(x).  [clausify(6)].\n24 p_3(Reid).  [assumption].\n25 p_0(Reid) | p_9(Reid).  [deny(8)].\n26 -p_0(Reid).  [assumption].\n28 -p_13(Reid) | p_14(Reid) | p_15(Reid).  [clausify(3)].\n29 -p_12(Reid) | p_13(Reid).  [resolve(17,c,18,a)].\n30 p_9(Reid).  [resolve(25,a,26,a)].\n31 -p_9(x) | p_10(x).  [clausify(7)].\n32 -p_12(Reid) | p_14(Reid) | p_15(Reid).  [resolve(29,b,28,a)].\n33 -p_15(Reid).  [resolve(11,b,12,a)].\n34 -p_12(Reid) | p_14(Reid).  [resolve(32,c,33,a)].\n35 -p_14(Reid).  [resolve(15,b,16,a)].\n36 -p_10(Reid) | p_11(Reid).  [resolve(23,b,24,a)].\n37 -p_11(Reid) | p_12(Reid).  [resolve(20,a,21,a)].\n38 -p_10(Reid) | p_12(Reid).  [resolve(36,b,37,a)].\n39 p_10(Reid).  [resolve(30,a,31,a)].\n40 p_12(Reid).  [resolve(38,a,39,a)].\n41 -p_12(Reid).  [resolve(34,b,35,a)].\n42 $F.  [resolve(40,a,41,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\np_3(Reid) \u2192 p_0(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Reid)",
                    "-p_8(Reid)",
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x (p_14(x) -> (p_5(x) | p_6(x)))",
                    "(-(p_13(Reid) <-> p_14(Reid))) -> p_15(Reid)",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid))) -> p_12(Reid)",
                    "all x ((p_10(x) & p_3(x)) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "p_3(Reid) -> p_0(Reid)"
                ],
                "formulas(goals)": [
                    "p_0(Reid) | p_9(Reid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_0(Reid)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_3(Reid) \u2192 p_0(Reid)"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\np_3(Reid) \u2192 p_0(Reid)\n\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)\n\u00acp_9(Reid) \u2228 p_10(Reid)\n\u00acp_11(Reid) \u2228 p_12(Reid)\n\u00acp_10(Reid) \u2228 p_11(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Reid)",
                    "-p_8(Reid)",
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x (p_14(x) -> (p_5(x) | p_6(x)))",
                    "(-(p_13(Reid) <-> p_14(Reid))) -> p_15(Reid)",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid))) -> p_12(Reid)",
                    "all x ((p_10(x) & p_3(x)) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "p_3(Reid) -> p_0(Reid)",
                    "-p_15(Reid) | p_7(Reid) | p_8(Reid)",
                    "-p_9(Reid) | p_10(Reid)",
                    "-p_11(Reid) | p_12(Reid)",
                    "-p_10(Reid) | p_11(Reid)"
                ],
                "formulas(goals)": [
                    "p_0(Reid) | p_9(Reid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)",
                    "\u00acp_9(Reid) \u2228 p_10(Reid)",
                    "\u00acp_11(Reid) \u2228 p_12(Reid)",
                    "\u00acp_10(Reid) \u2228 p_11(Reid)"
                ],
                "added_rules": []
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_14(x))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\np_3(Reid) \u2192 p_0(Reid)\n\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)\n\u00acp_9(Reid) \u2228 p_10(Reid)\n\u00acp_11(Reid) \u2228 p_12(Reid)\n\u00acp_10(Reid) \u2228 p_11(Reid)\np_0(Reid)\n\u00acp_14(Reid)\n\u00acp_15(Reid)\n\u00acp_12(Reid)\n\u00acp_11(Reid)\n\u00acp_10(Reid)\n\u00acp_9(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Reid)",
                    "-p_8(Reid)",
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x ((-p_5(x) & -p_6(x)) -> -p_14(x))",
                    "(-(p_13(Reid) <-> p_14(Reid))) -> p_15(Reid)",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid))) -> p_12(Reid)",
                    "all x ((p_10(x) & p_3(x)) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "p_3(Reid) -> p_0(Reid)",
                    "-p_15(Reid) | p_7(Reid) | p_8(Reid)",
                    "-p_9(Reid) | p_10(Reid)",
                    "-p_11(Reid) | p_12(Reid)",
                    "-p_10(Reid) | p_11(Reid)",
                    "p_0(Reid)",
                    "-p_14(Reid)",
                    "-p_15(Reid)",
                    "-p_12(Reid)",
                    "-p_11(Reid)",
                    "-p_10(Reid)",
                    "-p_9(Reid)"
                ],
                "formulas(goals)": [
                    "p_0(Reid) | p_9(Reid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_14(x) \u2192 (p_5(x) \u2228 p_6(x)))"
                ],
                "added_facts": [
                    "p_0(Reid)",
                    "\u00acp_14(Reid)",
                    "\u00acp_15(Reid)",
                    "\u00acp_12(Reid)",
                    "\u00acp_11(Reid)",
                    "\u00acp_10(Reid)",
                    "\u00acp_9(Reid)"
                ],
                "added_rules": [
                    "\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_14(x))"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_14(x))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\np_3(Reid) \u2192 p_0(Reid)\n\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)\n\u00acp_9(Reid) \u2228 p_10(Reid)\n\u00acp_11(Reid) \u2228 p_12(Reid)\n\u00acp_10(Reid) \u2228 p_11(Reid)\np_0(Reid)\n\u00acp_14(Reid)\n\u00acp_15(Reid)\n\u00acp_12(Reid)\n\u00acp_11(Reid)\n\u00acp_10(Reid)\n\u00acp_9(Reid)\np_9(Reid) \u2192 (p_10(Reid) \u2227 p_1(Reid))\np_0(Reid) \u2228 p_9(Reid)\np_12(Reid) \u2192 ((p_13(Reid) \u2228 p_4(Reid)) \u2227 (\u00acp_13(Reid) \u2228 \u00acp_4(Reid)))\n((p_2(Reid) \u2228 p_11(Reid)) \u2227 (\u00acp_2(Reid) \u2228 \u00acp_11(Reid))) \u2192 p_12(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Reid)",
                    "-p_8(Reid)",
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x ((-p_5(x) & -p_6(x)) -> -p_14(x))",
                    "(-(p_13(Reid) <-> p_14(Reid))) -> p_15(Reid)",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid))) -> p_12(Reid)",
                    "all x ((p_10(x) & p_3(x)) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "p_3(Reid) -> p_0(Reid)",
                    "-p_15(Reid) | p_7(Reid) | p_8(Reid)",
                    "-p_9(Reid) | p_10(Reid)",
                    "-p_11(Reid) | p_12(Reid)",
                    "-p_10(Reid) | p_11(Reid)",
                    "p_0(Reid)",
                    "-p_14(Reid)",
                    "-p_15(Reid)",
                    "-p_12(Reid)",
                    "-p_11(Reid)",
                    "-p_10(Reid)",
                    "-p_9(Reid)",
                    "p_9(Reid) -> (p_10(Reid) & p_1(Reid))",
                    "p_0(Reid) | p_9(Reid)",
                    "p_12(Reid) -> ((p_13(Reid) | p_4(Reid)) & (-p_13(Reid) | -p_4(Reid)))",
                    "((p_2(Reid) | p_11(Reid)) & (-p_2(Reid) | -p_11(Reid))) -> p_12(Reid)"
                ],
                "formulas(goals)": [
                    "p_0(Reid) | p_9(Reid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [
                    "p_0(Reid) \u2228 p_9(Reid)"
                ],
                "added_rules": [
                    "p_9(Reid) \u2192 (p_10(Reid) \u2227 p_1(Reid))",
                    "p_12(Reid) \u2192 ((p_13(Reid) \u2228 p_4(Reid)) \u2227 (\u00acp_13(Reid) \u2228 \u00acp_4(Reid)))",
                    "((p_2(Reid) \u2228 p_11(Reid)) \u2227 (\u00acp_2(Reid) \u2228 \u00acp_11(Reid))) \u2192 p_12(Reid)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_14(x))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\n\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)\n\u00acp_9(Reid) \u2228 p_10(Reid)\n\u00acp_11(Reid) \u2228 p_12(Reid)\n\u00acp_10(Reid) \u2228 p_11(Reid)\n\u00acp_14(Reid)\n\u00acp_15(Reid)\n\u00acp_12(Reid)\n\u00acp_11(Reid)\n\u00acp_10(Reid)\n\u00acp_9(Reid)\np_9(Reid) \u2192 (p_10(Reid) \u2227 p_1(Reid))\np_12(Reid) \u2192 ((p_13(Reid) \u2228 p_4(Reid)) \u2227 (\u00acp_13(Reid) \u2228 \u00acp_4(Reid)))\n((p_2(Reid) \u2228 p_11(Reid)) \u2227 (\u00acp_2(Reid) \u2228 \u00acp_11(Reid))) \u2192 p_12(Reid)\np_3(Reid) \u2192 \u00acp_0(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Reid)",
                    "-p_8(Reid)",
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x (-p_5(x) & -p_6(x) -> -p_14(x))",
                    "(-(p_13(Reid) <-> p_14(Reid)) -> p_15(Reid))",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid)) -> p_12(Reid))",
                    "all x (p_10(x) & p_3(x) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "-p_15(Reid) | p_7(Reid) | p_8(Reid)",
                    "-p_9(Reid) | p_10(Reid)",
                    "-p_11(Reid) | p_12(Reid)",
                    "-p_10(Reid) | p_11(Reid)",
                    "-p_14(Reid)",
                    "-p_15(Reid)",
                    "-p_12(Reid)",
                    "-p_11(Reid)",
                    "-p_10(Reid)",
                    "-p_9(Reid)",
                    "p_9(Reid) -> (p_10(Reid) & p_1(Reid))",
                    "p_12(Reid) -> ((p_13(Reid) | p_4(Reid)) & (-p_13(Reid) | -p_4(Reid)))",
                    "((p_2(Reid) | p_11(Reid)) & (-p_2(Reid) | -p_11(Reid))) -> p_12(Reid)",
                    "p_3(Reid) -> -p_0(Reid)"
                ],
                "formulas(goals)": [
                    "-(p_0(Reid) | p_9(Reid))"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "p_0(Reid)",
                    "p_0(Reid) \u2228 p_9(Reid)"
                ],
                "removed_rules": [
                    "p_3(Reid) \u2192 p_0(Reid)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_3(Reid) \u2192 \u00acp_0(Reid)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_7(Reid)\n\u00acp_8(Reid)\n\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_14(x))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\n\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)\n\u00acp_9(Reid) \u2228 p_10(Reid)\n\u00acp_11(Reid) \u2228 p_12(Reid)\n\u00acp_10(Reid) \u2228 p_11(Reid)\n\u00acp_14(Reid)\n\u00acp_15(Reid)\n\u00acp_12(Reid)\n\u00acp_11(Reid)\n\u00acp_10(Reid)\n\u00acp_9(Reid)\np_9(Reid) \u2192 (p_10(Reid) \u2227 p_1(Reid))\np_12(Reid) \u2192 ((p_13(Reid) \u2228 p_4(Reid)) \u2227 (\u00acp_13(Reid) \u2228 \u00acp_4(Reid)))\n((p_2(Reid) \u2228 p_11(Reid)) \u2227 (\u00acp_2(Reid) \u2228 \u00acp_11(Reid))) \u2192 p_12(Reid)\np_3(Reid) \u2192 \u00acp_0(Reid)\np_0(Reid) \u2192 \u00acp_3(Reid)\n\u00acp_0(Reid) \u2228 p_9(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_7(Reid)",
                    "-p_8(Reid)",
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x ((-p_5(x) & -p_6(x)) -> -p_14(x))",
                    "(-(p_13(Reid) <-> p_14(Reid))) -> p_15(Reid)",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid))) -> p_12(Reid)",
                    "all x ((p_10(x) & p_3(x)) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "-p_15(Reid) | p_7(Reid) | p_8(Reid)",
                    "-p_9(Reid) | p_10(Reid)",
                    "-p_11(Reid) | p_12(Reid)",
                    "-p_10(Reid) | p_11(Reid)",
                    "-p_14(Reid)",
                    "-p_15(Reid)",
                    "-p_12(Reid)",
                    "-p_11(Reid)",
                    "-p_10(Reid)",
                    "-p_9(Reid)",
                    "p_9(Reid) -> (p_10(Reid) & p_1(Reid))",
                    "p_12(Reid) -> ((p_13(Reid) | p_4(Reid)) & (-p_13(Reid) | -p_4(Reid)))",
                    "((p_2(Reid) | p_11(Reid)) & (-p_2(Reid) | -p_11(Reid))) -> p_12(Reid)",
                    "p_3(Reid) -> -p_0(Reid)",
                    "p_0(Reid) -> -p_3(Reid)",
                    "-p_0(Reid) | p_9(Reid)"
                ],
                "formulas(goals)": [
                    "-(p_0(Reid) | p_9(Reid))"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_0(Reid) \u2192 \u00acp_3(Reid)",
                    "\u00acp_0(Reid) \u2228 p_9(Reid)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_5(Reid)\n\u00acp_6(Reid)\n\u00acp_4(Reid)\n\u00acp_2(Reid)\np_3(Reid)\np_1(Reid)\np_15(Reid) \u2192 (p_7(Reid) \u2228 p_8(Reid))\n\u2200x ((\u00acp_5(x) \u2227 \u00acp_6(x)) \u2192 \u00acp_14(x))\n(p_13(Reid) \u2295 p_14(Reid)) \u2192 p_15(Reid)\np_12(Reid) \u2192 (p_13(Reid) \u2295 p_4(Reid))\n(p_2(Reid) \u2295 p_11(Reid)) \u2192 p_12(Reid)\n\u2200x ((p_10(x) \u2227 p_3(x)) \u2192 p_11(x))\n\u2200x (p_9(x) \u2192 (p_10(x) \u2227 p_1(x)))\n\u00acp_15(Reid) \u2228 p_7(Reid) \u2228 p_8(Reid)\n\u00acp_9(Reid) \u2228 p_10(Reid)\n\u00acp_11(Reid) \u2228 p_12(Reid)\n\u00acp_10(Reid) \u2228 p_11(Reid)\n\u00acp_14(Reid)\np_9(Reid) \u2192 (p_10(Reid) \u2227 p_1(Reid))\np_12(Reid) \u2192 ((p_13(Reid) \u2228 p_4(Reid)) \u2227 (\u00acp_13(Reid) \u2228 \u00acp_4(Reid)))\n((p_2(Reid) \u2228 p_11(Reid)) \u2227 (\u00acp_2(Reid) \u2228 \u00acp_11(Reid))) \u2192 p_12(Reid)\np_3(Reid) \u2192 \u00acp_0(Reid)\np_0(Reid) \u2192 \u00acp_3(Reid)\n\u00acp_0(Reid) \u2228 p_9(Reid)\np_1(Reid) \u2192 p_9(Reid)",
            "Initial Goal": "p_0(Reid) \u2228 p_9(Reid)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_5(Reid)",
                    "-p_6(Reid)",
                    "-p_4(Reid)",
                    "-p_2(Reid)",
                    "p_3(Reid)",
                    "p_1(Reid)",
                    "p_15(Reid) -> (p_7(Reid) | p_8(Reid))",
                    "all x ((-p_5(x) & -p_6(x)) -> -p_14(x))",
                    "(-(p_13(Reid) <-> p_14(Reid))) -> p_15(Reid)",
                    "p_12(Reid) -> (-(p_13(Reid) <-> p_4(Reid)))",
                    "(-(p_2(Reid) <-> p_11(Reid))) -> p_12(Reid)",
                    "all x ((p_10(x) & p_3(x)) -> p_11(x))",
                    "all x (p_9(x) -> (p_10(x) & p_1(x)))",
                    "-p_15(Reid) | p_7(Reid) | p_8(Reid)",
                    "-p_9(Reid) | p_10(Reid)",
                    "-p_11(Reid) | p_12(Reid)",
                    "-p_10(Reid) | p_11(Reid)",
                    "-p_14(Reid)",
                    "p_9(Reid) -> (p_10(Reid) & p_1(Reid))",
                    "p_12(Reid) -> ((p_13(Reid) | p_4(Reid)) & (-p_13(Reid) | -p_4(Reid)))",
                    "((p_2(Reid) | p_11(Reid)) & (-p_2(Reid) | -p_11(Reid))) -> p_12(Reid)",
                    "p_3(Reid) -> -p_0(Reid)",
                    "p_0(Reid) -> -p_3(Reid)",
                    "-p_0(Reid) | p_9(Reid)",
                    "p_1(Reid) -> p_9(Reid)"
                ],
                "formulas(goals)": [
                    "p_0(Reid) | p_9(Reid)"
                ]
            },
            "Edits Made": {
                "removed_facts": [
                    "\u00acp_7(Reid)",
                    "\u00acp_8(Reid)",
                    "\u00acp_15(Reid)",
                    "\u00acp_12(Reid)",
                    "\u00acp_11(Reid)",
                    "\u00acp_10(Reid)",
                    "\u00acp_9(Reid)"
                ],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_1(Reid) \u2192 p_9(Reid)"
                ]
            }
        }
    ]
}