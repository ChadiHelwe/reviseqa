{
    "background_story": "Madeline was a brilliant and eccentric artist known for her unconventional methods. Her latest project, an immersive installation, required her to confine herself in a straitjacket for 24 hours to explore the concept of creative restraint. As she worked, Madeline discovered that the physical limitations sparked a surge of innovative ideas. However, as the hours passed, the straitjacket became a symbol of her own self-imposed boundaries. Madeline realized that her true freedom lay not in physical movement, but in the unbridled expression of her art. The experience inspired a new series of pieces, each one a testament to the beauty of constraint and the power of the human spirit to transcend limitations.",
    "predicates": [
        {
            "id": 0,
            "name": "find_inspiration"
        },
        {
            "id": 1,
            "name": "takes_risks"
        },
        {
            "id": 2,
            "name": "explore_boundaries"
        },
        {
            "id": 3,
            "name": "push_limits"
        },
        {
            "id": 4,
            "name": "stay_focused"
        },
        {
            "id": 5,
            "name": "learn_quickly"
        },
        {
            "id": 6,
            "name": "build_confidence"
        },
        {
            "id": 7,
            "name": "develop_strength"
        },
        {
            "id": 8,
            "name": "face_constraints"
        },
        {
            "id": 9,
            "name": "think_creatively"
        },
        {
            "id": 10,
            "name": "produce_innovative_art"
        },
        {
            "id": 11,
            "name": "express_freely"
        },
        {
            "id": 12,
            "name": "overcome_fears"
        },
        {
            "id": 13,
            "name": "achieve_success"
        },
        {
            "id": 14,
            "name": "grow_personally"
        },
        {
            "id": 15,
            "name": "work_diligently"
        },
        {
            "id": 16,
            "name": "gain_recognition"
        },
        {
            "id": 17,
            "name": "become_resilient"
        },
        {
            "id": 18,
            "name": "makes_art"
        },
        {
            "id": 19,
            "name": "embrace_challenges"
        },
        {
            "id": 20,
            "name": "make_unique_pieces"
        },
        {
            "id": 21,
            "name": "has_passion"
        },
        {
            "id": 22,
            "name": "is_authentic"
        },
        {
            "id": 23,
            "name": "find_motivation"
        },
        {
            "id": 24,
            "name": "set_goals"
        },
        {
            "id": 25,
            "name": "trust_intuition"
        },
        {
            "id": 26,
            "name": "pursue_passion"
        },
        {
            "id": 27,
            "name": "seek_knowledge"
        }
    ],
    "subject_name": "Madeline",
    "subject_category": "human",
    "keyword": "straitjacket",
    "all_facts": [
        {
            "id": 0,
            "subject": "Madeline",
            "text": "Madeline does not find inspiration.",
            "fol": "\u00acp_0(Madeline)",
            "str_fol": "\u00acfind_inspiration(Madeline)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Madeline",
            "text": "Madeline takes risks.",
            "fol": "p_1(Madeline)",
            "str_fol": "takes_risks(Madeline)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Madeline",
            "text": "Madeline explores boundaries.",
            "fol": "p_2(Madeline)",
            "str_fol": "explore_boundaries(Madeline)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Madeline",
            "text": "Madeline does not push her limits.",
            "fol": "\u00acp_3(Madeline)",
            "str_fol": "\u00acpush_limits(Madeline)",
            "negation": true
        },
        {
            "id": 4,
            "subject": "Madeline",
            "text": "Madeline stays focused.",
            "fol": "p_4(Madeline)",
            "str_fol": "stay_focused(Madeline)",
            "negation": false
        },
        {
            "id": 5,
            "subject": "Madeline",
            "text": "Madeline learns quickly.",
            "fol": "p_5(Madeline)",
            "str_fol": "learn_quickly(Madeline)",
            "negation": false
        },
        {
            "id": 6,
            "subject": "Madeline",
            "text": "Madeline does not build confidence.",
            "fol": "\u00acp_6(Madeline)",
            "str_fol": "\u00acbuild_confidence(Madeline)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Madeline",
            "text": "Madeline does not develop inner strength.",
            "fol": "\u00acp_7(Madeline)",
            "str_fol": "\u00acdevelop_strength(Madeline)",
            "negation": true
        },
        {
            "id": 8,
            "subject": "Madeline",
            "text": "Madeline does not become resilient.",
            "fol": "\u00acp_17(Madeline)",
            "str_fol": "\u00acbecome_resilient(Madeline)",
            "negation": true
        },
        {
            "id": 9,
            "subject": "Madeline",
            "text": "Madeline grows personally.",
            "fol": "p_14(Madeline)",
            "str_fol": "grow_personally(Madeline)",
            "negation": false
        },
        {
            "id": 10,
            "subject": "Madeline",
            "text": "Madeline does not gain recognition.",
            "fol": "\u00acp_16(Madeline)",
            "str_fol": "\u00acgain_recognition(Madeline)",
            "negation": true
        },
        {
            "id": 11,
            "subject": "Madeline",
            "text": "Madeline does not achieve success.",
            "fol": "\u00acp_13(Madeline)",
            "str_fol": "\u00acachieve_success(Madeline)",
            "negation": true
        },
        {
            "id": 12,
            "subject": "Madeline",
            "text": "Madeline cannot express herself freely.",
            "fol": "\u00acp_11(Madeline)",
            "str_fol": "\u00acexpress_freely(Madeline)",
            "negation": true
        },
        {
            "id": 13,
            "subject": "Madeline",
            "text": "Madeline does not produce innovative art.",
            "fol": "\u00acp_10(Madeline)",
            "str_fol": "\u00acproduce_innovative_art(Madeline)",
            "negation": true
        },
        {
            "id": 14,
            "subject": "Madeline",
            "text": "Madeline thinks creatively.",
            "fol": "p_9(Madeline)",
            "str_fol": "think_creatively(Madeline)",
            "negation": false
        },
        {
            "id": 15,
            "subject": "Madeline",
            "text": "Madeline does not face constraints.",
            "fol": "\u00acp_8(Madeline)",
            "str_fol": "\u00acface_constraints(Madeline)",
            "negation": true
        }
    ],
    "context_facts": [
        {
            "id": 6,
            "subject": "Madeline",
            "text": "Madeline does not build confidence.",
            "fol": "\u00acp_6(Madeline)",
            "str_fol": "\u00acbuild_confidence(Madeline)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Madeline",
            "text": "Madeline does not develop inner strength.",
            "fol": "\u00acp_7(Madeline)",
            "str_fol": "\u00acdevelop_strength(Madeline)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Madeline",
            "text": "Madeline learns quickly.",
            "fol": "p_5(Madeline)",
            "str_fol": "learn_quickly(Madeline)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Madeline",
            "text": "Madeline stays focused.",
            "fol": "p_4(Madeline)",
            "str_fol": "stay_focused(Madeline)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Madeline",
            "text": "Madeline does not push her limits.",
            "fol": "\u00acp_3(Madeline)",
            "str_fol": "\u00acpush_limits(Madeline)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Madeline",
            "text": "Madeline takes risks.",
            "fol": "p_1(Madeline)",
            "str_fol": "takes_risks(Madeline)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Madeline",
            "text": "Madeline explores boundaries.",
            "fol": "p_2(Madeline)",
            "str_fol": "explore_boundaries(Madeline)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Madeline",
            "text": "Madeline does not find inspiration.",
            "fol": "\u00acp_0(Madeline)",
            "str_fol": "\u00acfind_inspiration(Madeline)",
            "negation": true
        }
    ],
    "context_rules": [
        {
            "id": 8,
            "text": "Anyone who becomes resilient either builds confidence or develops inner strength (or both).",
            "fol": "\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (become_resilient(x) \u2192 (build_confidence(x) \u2228 develop_strength(x)))"
        },
        {
            "id": 7,
            "text": "If Madeline either grows personally or learns quickly (but not both), then she becomes resilient.",
            "fol": "(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)",
            "str_fol": "(grow_personally(Madeline) \u2295 learn_quickly(Madeline)) \u2192 become_resilient(Madeline)"
        },
        {
            "id": 6,
            "text": "For all people, either they stay focused or gain recognition, but not necessarily both.",
            "fol": "\u2200x (p_4(x) \u2295 p_16(x))",
            "str_fol": "\u2200x (stay_focused(x) \u2295 gain_recognition(x))"
        },
        {
            "id": 5,
            "text": "If Madeline achieves success or works diligently, then she will gain recognition.",
            "fol": "(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)",
            "str_fol": "(achieve_success(Madeline) \u2228 work_diligently(Madeline)) \u2192 gain_recognition(Madeline)"
        },
        {
            "id": 4,
            "text": "Anyone who overcomes their fears or pushes their limits can grow personally.",
            "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((overcome_fears(x) \u2228 push_limits(x)) \u2192 grow_personally(x))"
        },
        {
            "id": 3,
            "text": "Anyone who expresses themselves freely or overcomes their fears can achieve success.",
            "fol": "\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((express_freely(x) \u2228 overcome_fears(x)) \u2192 achieve_success(x))"
        },
        {
            "id": 2,
            "text": "If someone takes risks and produces innovative art, then they can express themselves freely.",
            "fol": "\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((takes_risks(x) \u2227 produce_innovative_art(x)) \u2192 express_freely(x))"
        },
        {
            "id": 1,
            "text": "Anyone who explores boundaries either thinks creatively or finds inspiration.",
            "fol": "\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (explore_boundaries(x) \u2192 (think_creatively(x) \u2228 find_inspiration(x)))"
        },
        {
            "id": 0,
            "text": "If Madeline faces constraints and thinks creatively, then she will produce innovative art.",
            "fol": "(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)",
            "str_fol": "(face_constraints(Madeline) \u2227 think_creatively(Madeline)) \u2192 produce_innovative_art(Madeline)"
        }
    ],
    "context": [
        {
            "id": 6,
            "subject": "Madeline",
            "text": "Madeline does not build confidence.",
            "fol": "\u00acp_6(Madeline)",
            "str_fol": "\u00acbuild_confidence(Madeline)",
            "negation": true
        },
        {
            "id": 7,
            "subject": "Madeline",
            "text": "Madeline does not develop inner strength.",
            "fol": "\u00acp_7(Madeline)",
            "str_fol": "\u00acdevelop_strength(Madeline)",
            "negation": true
        },
        {
            "id": 5,
            "subject": "Madeline",
            "text": "Madeline learns quickly.",
            "fol": "p_5(Madeline)",
            "str_fol": "learn_quickly(Madeline)",
            "negation": false
        },
        {
            "id": 4,
            "subject": "Madeline",
            "text": "Madeline stays focused.",
            "fol": "p_4(Madeline)",
            "str_fol": "stay_focused(Madeline)",
            "negation": false
        },
        {
            "id": 3,
            "subject": "Madeline",
            "text": "Madeline does not push her limits.",
            "fol": "\u00acp_3(Madeline)",
            "str_fol": "\u00acpush_limits(Madeline)",
            "negation": true
        },
        {
            "id": 1,
            "subject": "Madeline",
            "text": "Madeline takes risks.",
            "fol": "p_1(Madeline)",
            "str_fol": "takes_risks(Madeline)",
            "negation": false
        },
        {
            "id": 2,
            "subject": "Madeline",
            "text": "Madeline explores boundaries.",
            "fol": "p_2(Madeline)",
            "str_fol": "explore_boundaries(Madeline)",
            "negation": false
        },
        {
            "id": 0,
            "subject": "Madeline",
            "text": "Madeline does not find inspiration.",
            "fol": "\u00acp_0(Madeline)",
            "str_fol": "\u00acfind_inspiration(Madeline)",
            "negation": true
        },
        {
            "id": 8,
            "text": "Anyone who becomes resilient either builds confidence or develops inner strength (or both).",
            "fol": "\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))",
            "str_fol": "\u2200x (become_resilient(x) \u2192 (build_confidence(x) \u2228 develop_strength(x)))"
        },
        {
            "id": 7,
            "text": "If Madeline either grows personally or learns quickly (but not both), then she becomes resilient.",
            "fol": "(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)",
            "str_fol": "(grow_personally(Madeline) \u2295 learn_quickly(Madeline)) \u2192 become_resilient(Madeline)"
        },
        {
            "id": 6,
            "text": "For all people, either they stay focused or gain recognition, but not necessarily both.",
            "fol": "\u2200x (p_4(x) \u2295 p_16(x))",
            "str_fol": "\u2200x (stay_focused(x) \u2295 gain_recognition(x))"
        },
        {
            "id": 5,
            "text": "If Madeline achieves success or works diligently, then she will gain recognition.",
            "fol": "(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)",
            "str_fol": "(achieve_success(Madeline) \u2228 work_diligently(Madeline)) \u2192 gain_recognition(Madeline)"
        },
        {
            "id": 4,
            "text": "Anyone who overcomes their fears or pushes their limits can grow personally.",
            "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))",
            "str_fol": "\u2200x ((overcome_fears(x) \u2228 push_limits(x)) \u2192 grow_personally(x))"
        },
        {
            "id": 3,
            "text": "Anyone who expresses themselves freely or overcomes their fears can achieve success.",
            "fol": "\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))",
            "str_fol": "\u2200x ((express_freely(x) \u2228 overcome_fears(x)) \u2192 achieve_success(x))"
        },
        {
            "id": 2,
            "text": "If someone takes risks and produces innovative art, then they can express themselves freely.",
            "fol": "\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))",
            "str_fol": "\u2200x ((takes_risks(x) \u2227 produce_innovative_art(x)) \u2192 express_freely(x))"
        },
        {
            "id": 1,
            "text": "Anyone who explores boundaries either thinks creatively or finds inspiration.",
            "fol": "\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))",
            "str_fol": "\u2200x (explore_boundaries(x) \u2192 (think_creatively(x) \u2228 find_inspiration(x)))"
        },
        {
            "id": 0,
            "text": "If Madeline faces constraints and thinks creatively, then she will produce innovative art.",
            "fol": "(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)",
            "str_fol": "(face_constraints(Madeline) \u2227 think_creatively(Madeline)) \u2192 produce_innovative_art(Madeline)"
        }
    ],
    "context_fol": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)\n\u2200x (p_4(x) \u2295 p_16(x))\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)",
    "conclusion": {
        "id": 15,
        "subject": "Madeline",
        "text": "Madeline does not face constraints.",
        "fol": "\u00acp_8(Madeline)",
        "str_fol": "\u00acface_constraints(Madeline)",
        "negation": true
    },
    "initial_answer": "True",
    "initial_goal": "\u00acp_8(Madeline)",
    "reasoning_chain": [
        {
            "facts": [
                {
                    "id": 6,
                    "subject": "Madeline",
                    "text": "Madeline does not build confidence.",
                    "fol": "\u00acp_6(Madeline)",
                    "str_fol": "\u00acbuild_confidence(Madeline)",
                    "negation": true
                },
                {
                    "id": 7,
                    "subject": "Madeline",
                    "text": "Madeline does not develop inner strength.",
                    "fol": "\u00acp_7(Madeline)",
                    "str_fol": "\u00acdevelop_strength(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 8,
                    "text": "Anyone who becomes resilient either builds confidence or develops inner strength (or both).",
                    "fol": "\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))",
                    "str_fol": "\u2200x (become_resilient(x) \u2192 (build_confidence(x) \u2228 develop_strength(x)))"
                }
            ],
            "conclusion": {
                "id": 8,
                "subject": "Madeline",
                "text": "Madeline does not become resilient.",
                "fol": "\u00acp_17(Madeline)",
                "str_fol": "\u00acbecome_resilient(Madeline)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 5,
                    "subject": "Madeline",
                    "text": "Madeline learns quickly.",
                    "fol": "p_5(Madeline)",
                    "str_fol": "learn_quickly(Madeline)",
                    "negation": false
                },
                {
                    "id": 8,
                    "subject": "Madeline",
                    "text": "Madeline does not become resilient.",
                    "fol": "\u00acp_17(Madeline)",
                    "str_fol": "\u00acbecome_resilient(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 7,
                    "text": "If Madeline either grows personally or learns quickly (but not both), then she becomes resilient.",
                    "fol": "(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)",
                    "str_fol": "(grow_personally(Madeline) \u2295 learn_quickly(Madeline)) \u2192 become_resilient(Madeline)"
                }
            ],
            "conclusion": {
                "id": 9,
                "subject": "Madeline",
                "text": "Madeline grows personally.",
                "fol": "p_14(Madeline)",
                "str_fol": "grow_personally(Madeline)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 4,
                    "subject": "Madeline",
                    "text": "Madeline stays focused.",
                    "fol": "p_4(Madeline)",
                    "str_fol": "stay_focused(Madeline)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 6,
                    "text": "For all people, either they stay focused or gain recognition, but not necessarily both.",
                    "fol": "\u2200x (p_4(x) \u2295 p_16(x))",
                    "str_fol": "\u2200x (stay_focused(x) \u2295 gain_recognition(x))"
                }
            ],
            "conclusion": {
                "id": 10,
                "subject": "Madeline",
                "text": "Madeline does not gain recognition.",
                "fol": "\u00acp_16(Madeline)",
                "str_fol": "\u00acgain_recognition(Madeline)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 10,
                    "subject": "Madeline",
                    "text": "Madeline does not gain recognition.",
                    "fol": "\u00acp_16(Madeline)",
                    "str_fol": "\u00acgain_recognition(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 5,
                    "text": "If Madeline achieves success or works diligently, then she will gain recognition.",
                    "fol": "(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)",
                    "str_fol": "(achieve_success(Madeline) \u2228 work_diligently(Madeline)) \u2192 gain_recognition(Madeline)"
                }
            ],
            "conclusion": {
                "id": 11,
                "subject": "Madeline",
                "text": "Madeline does not achieve success.",
                "fol": "\u00acp_13(Madeline)",
                "str_fol": "\u00acachieve_success(Madeline)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 3,
                    "subject": "Madeline",
                    "text": "Madeline does not push her limits.",
                    "fol": "\u00acp_3(Madeline)",
                    "str_fol": "\u00acpush_limits(Madeline)",
                    "negation": true
                },
                {
                    "id": 9,
                    "subject": "Madeline",
                    "text": "Madeline grows personally.",
                    "fol": "p_14(Madeline)",
                    "str_fol": "grow_personally(Madeline)",
                    "negation": false
                }
            ],
            "rules": [
                {
                    "id": 4,
                    "text": "Anyone who overcomes their fears or pushes their limits can grow personally.",
                    "fol": "\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))",
                    "str_fol": "\u2200x ((overcome_fears(x) \u2228 push_limits(x)) \u2192 grow_personally(x))"
                }
            ],
            "conclusion": null
        },
        {
            "facts": [
                {
                    "id": 11,
                    "subject": "Madeline",
                    "text": "Madeline does not achieve success.",
                    "fol": "\u00acp_13(Madeline)",
                    "str_fol": "\u00acachieve_success(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 3,
                    "text": "Anyone who expresses themselves freely or overcomes their fears can achieve success.",
                    "fol": "\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))",
                    "str_fol": "\u2200x ((express_freely(x) \u2228 overcome_fears(x)) \u2192 achieve_success(x))"
                }
            ],
            "conclusion": {
                "id": 12,
                "subject": "Madeline",
                "text": "Madeline cannot express herself freely.",
                "fol": "\u00acp_11(Madeline)",
                "str_fol": "\u00acexpress_freely(Madeline)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 1,
                    "subject": "Madeline",
                    "text": "Madeline takes risks.",
                    "fol": "p_1(Madeline)",
                    "str_fol": "takes_risks(Madeline)",
                    "negation": false
                },
                {
                    "id": 12,
                    "subject": "Madeline",
                    "text": "Madeline cannot express herself freely.",
                    "fol": "\u00acp_11(Madeline)",
                    "str_fol": "\u00acexpress_freely(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 2,
                    "text": "If someone takes risks and produces innovative art, then they can express themselves freely.",
                    "fol": "\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))",
                    "str_fol": "\u2200x ((takes_risks(x) \u2227 produce_innovative_art(x)) \u2192 express_freely(x))"
                }
            ],
            "conclusion": {
                "id": 13,
                "subject": "Madeline",
                "text": "Madeline does not produce innovative art.",
                "fol": "\u00acp_10(Madeline)",
                "str_fol": "\u00acproduce_innovative_art(Madeline)",
                "negation": true
            }
        },
        {
            "facts": [
                {
                    "id": 2,
                    "subject": "Madeline",
                    "text": "Madeline explores boundaries.",
                    "fol": "p_2(Madeline)",
                    "str_fol": "explore_boundaries(Madeline)",
                    "negation": false
                },
                {
                    "id": 0,
                    "subject": "Madeline",
                    "text": "Madeline does not find inspiration.",
                    "fol": "\u00acp_0(Madeline)",
                    "str_fol": "\u00acfind_inspiration(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 1,
                    "text": "Anyone who explores boundaries either thinks creatively or finds inspiration.",
                    "fol": "\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))",
                    "str_fol": "\u2200x (explore_boundaries(x) \u2192 (think_creatively(x) \u2228 find_inspiration(x)))"
                }
            ],
            "conclusion": {
                "id": 14,
                "subject": "Madeline",
                "text": "Madeline thinks creatively.",
                "fol": "p_9(Madeline)",
                "str_fol": "think_creatively(Madeline)",
                "negation": false
            }
        },
        {
            "facts": [
                {
                    "id": 14,
                    "subject": "Madeline",
                    "text": "Madeline thinks creatively.",
                    "fol": "p_9(Madeline)",
                    "str_fol": "think_creatively(Madeline)",
                    "negation": false
                },
                {
                    "id": 13,
                    "subject": "Madeline",
                    "text": "Madeline does not produce innovative art.",
                    "fol": "\u00acp_10(Madeline)",
                    "str_fol": "\u00acproduce_innovative_art(Madeline)",
                    "negation": true
                }
            ],
            "rules": [
                {
                    "id": 0,
                    "text": "If Madeline faces constraints and thinks creatively, then she will produce innovative art.",
                    "fol": "(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)",
                    "str_fol": "(face_constraints(Madeline) \u2227 think_creatively(Madeline)) \u2192 produce_innovative_art(Madeline)"
                }
            ],
            "conclusion": {
                "id": 15,
                "subject": "Madeline",
                "text": "Madeline does not face constraints.",
                "fol": "\u00acp_8(Madeline)",
                "str_fol": "\u00acface_constraints(Madeline)",
                "negation": true
            }
        }
    ],
    "proof_trace": "3 (all x -(p_4(x) <-> p_16(x))).  [assumption].\n4 p_13(Madeline) | p_15(Madeline) -> p_16(Madeline).  [assumption].\n6 (all x (p_11(x) | p_12(x) -> p_13(x))).  [assumption].\n7 (all x (p_1(x) & p_10(x) -> p_11(x))).  [assumption].\n8 (all x (p_2(x) -> p_9(x) | p_0(x))).  [assumption].\n9 p_8(Madeline) & p_9(Madeline) -> p_10(Madeline).  [assumption].\n10 -p_8(Madeline).  [goal].\n18 -p_4(x) | -p_16(x).  [clausify(3)].\n19 p_4(Madeline).  [assumption].\n21 -p_1(x) | -p_10(x) | p_11(x).  [clausify(7)].\n22 p_1(Madeline).  [assumption].\n23 -p_2(x) | p_9(x) | p_0(x).  [clausify(8)].\n24 p_2(Madeline).  [assumption].\n25 p_9(Madeline) | p_0(Madeline).  [resolve(23,a,24,a)].\n26 -p_0(Madeline).  [assumption].\n27 -p_11(x) | p_13(x).  [clausify(6)].\n28 -p_13(Madeline) | p_16(Madeline).  [clausify(4)].\n30 p_8(Madeline).  [deny(10)].\n31 -p_8(Madeline) | -p_9(Madeline) | p_10(Madeline).  [clausify(9)].\n34 -p_11(Madeline) | p_16(Madeline).  [resolve(27,b,28,a)].\n35 -p_16(Madeline).  [resolve(18,a,19,a)].\n36 -p_9(Madeline) | p_10(Madeline).  [resolve(30,a,31,a)].\n37 -p_10(Madeline) | p_11(Madeline).  [resolve(21,a,22,a)].\n38 -p_9(Madeline) | p_11(Madeline).  [resolve(36,b,37,a)].\n39 p_9(Madeline).  [resolve(25,b,26,a)].\n40 p_11(Madeline).  [resolve(38,a,39,a)].\n41 -p_11(Madeline).  [resolve(34,b,35,a)].\n42 $F.  [resolve(40,a,41,a)].",
    "edits_made": [
        {
            "Edit#": 1,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)\n\u2200x (p_4(x) \u2192 p_8(x))\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Madeline)",
                    "-p_7(Madeline)",
                    "p_5(Madeline)",
                    "p_4(Madeline)",
                    "-p_3(Madeline)",
                    "p_1(Madeline)",
                    "p_2(Madeline)",
                    "-p_0(Madeline)",
                    "all x (p_17(x) -> (p_6(x) | p_7(x)))",
                    "-(p_14(Madeline) <-> -p_5(Madeline)) -> p_17(Madeline)",
                    "all x (p_4(x) -> p_8(x))",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline)",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "all x (p_2(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline)"
                ],
                "formulas(goals)": [
                    "--p_8(Madeline)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2295 p_16(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_4(x) \u2192 p_8(x))"
                ]
            }
        },
        {
            "Edit#": 2,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)\np_9(Madeline) \u2192 \u00acp_8(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Madeline).",
                    "-p_7(Madeline).",
                    "p_5(Madeline).",
                    "p_4(Madeline).",
                    "-p_3(Madeline).",
                    "p_1(Madeline).",
                    "p_2(Madeline).",
                    "-p_0(Madeline).",
                    "all x (p_17(x) -> (p_6(x) | p_7(x))).",
                    "(-(p_14(Madeline) <-> p_5(Madeline))) -> p_17(Madeline).",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline).",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x)).",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x)).",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x)).",
                    "all x (p_2(x) -> (p_9(x) | p_0(x))).",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline).",
                    "p_9(Madeline) -> -p_8(Madeline)."
                ],
                "formulas(goals)": [
                    "-p_8(Madeline)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "\u2200x (p_4(x) \u2192 p_8(x))"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_9(Madeline) \u2192 \u00acp_8(Madeline)"
                ]
            }
        },
        {
            "Edit#": 3,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n((p_14(Madeline) \u2228 p_5(Madeline)) \u2227 \u00ac(p_14(Madeline) \u2227 p_5(Madeline))) \u2192 p_17(Madeline)\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)\np_9(Madeline) \u2192 \u00acp_8(Madeline)\np_9(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Madeline)",
                    "-p_7(Madeline)",
                    "p_5(Madeline)",
                    "p_4(Madeline)",
                    "-p_3(Madeline)",
                    "p_1(Madeline)",
                    "p_2(Madeline)",
                    "-p_0(Madeline)",
                    "all x (p_17(x) -> (p_6(x) | p_7(x)))",
                    "((p_14(Madeline) | p_5(Madeline)) & -(p_14(Madeline) & p_5(Madeline))) -> p_17(Madeline)",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline)",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "all x (p_2(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline)",
                    "p_9(Madeline) -> -p_8(Madeline)",
                    "p_9(Madeline)"
                ],
                "formulas(goals)": [
                    "-p_8(Madeline)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "(p_14(Madeline) \u2295 p_5(Madeline)) \u2192 p_17(Madeline)"
                ],
                "added_facts": [
                    "p_9(Madeline)"
                ],
                "added_rules": [
                    "((p_14(Madeline) \u2228 p_5(Madeline)) \u2227 \u00ac(p_14(Madeline) \u2227 p_5(Madeline))) \u2192 p_17(Madeline)"
                ]
            }
        },
        {
            "Edit#": 4,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n((p_14(Madeline) \u2228 p_5(Madeline)) \u2227 \u00ac(p_14(Madeline) \u2227 p_5(Madeline))) \u2192 p_17(Madeline)\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)\np_9(Madeline) \u2192 \u00acp_8(Madeline)\np_9(Madeline)\np_8(Madeline) \u2192 p_6(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Madeline)",
                    "-p_7(Madeline)",
                    "p_5(Madeline)",
                    "p_4(Madeline)",
                    "-p_3(Madeline)",
                    "p_1(Madeline)",
                    "p_2(Madeline)",
                    "-p_0(Madeline)",
                    "all x (p_17(x) -> (p_6(x) | p_7(x)))",
                    "((p_14(Madeline) | p_5(Madeline)) & -(p_14(Madeline) & p_5(Madeline))) -> p_17(Madeline)",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline)",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "all x (p_2(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline)",
                    "p_9(Madeline) -> -p_8(Madeline)",
                    "p_9(Madeline)",
                    "p_8(Madeline) -> p_6(Madeline)"
                ],
                "formulas(goals)": [
                    "-p_8(Madeline)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "p_8(Madeline) \u2192 p_6(Madeline)"
                ]
            }
        },
        {
            "Edit#": 5,
            "Modification Type": "INVARIANT",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n((p_14(Madeline) \u2228 p_5(Madeline)) \u2227 \u00ac(p_14(Madeline) \u2227 p_5(Madeline))) \u2192 p_17(Madeline)\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)\np_9(Madeline) \u2192 \u00acp_8(Madeline)\np_9(Madeline)\np_8(Madeline) \u2192 p_6(Madeline)\n\u2200x (p_11(x) \u2192 p_13(x))\n\u2200x (p_12(x) \u2192 p_13(x))\n\u2200x (p_12(x) \u2192 p_14(x))\n\u2200x (p_3(x) \u2192 p_14(x))\n\u2200x (p_1(x) \u2192 (p_10(x) \u2192 p_11(x)))\np_8(Madeline) \u2192 \u00acp_9(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_6(Madeline)",
                    "\u00acp_7(Madeline)",
                    "p_5(Madeline)",
                    "p_4(Madeline)",
                    "\u00acp_3(Madeline)",
                    "p_1(Madeline)",
                    "p_2(Madeline)",
                    "\u00acp_0(Madeline)",
                    "all x (p_17(x) -> (p_6(x) | p_7(x)))",
                    "((p_14(Madeline) | p_5(Madeline)) & \u00ac(p_14(Madeline) & p_5(Madeline))) -> p_17(Madeline)",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline)",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "all x (p_2(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline)",
                    "p_9(Madeline) -> \u00acp_8(Madeline)",
                    "p_9(Madeline)",
                    "p_8(Madeline) -> p_6(Madeline)",
                    "all x (p_11(x) -> p_13(x))",
                    "all x (p_12(x) -> p_13(x))",
                    "all x (p_12(x) -> p_14(x))",
                    "all x (p_3(x) -> p_14(x))",
                    "all x (p_1(x) -> (p_10(x) -> p_11(x)))",
                    "p_8(Madeline) -> \u00acp_9(Madeline)"
                ],
                "formulas(goals)": [
                    "\u00acp_8(Madeline)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [],
                "added_facts": [],
                "added_rules": [
                    "\u2200x (p_11(x) \u2192 p_13(x))",
                    "\u2200x (p_12(x) \u2192 p_13(x))",
                    "\u2200x (p_12(x) \u2192 p_14(x))",
                    "\u2200x (p_3(x) \u2192 p_14(x))",
                    "\u2200x (p_1(x) \u2192 (p_10(x) \u2192 p_11(x)))",
                    "p_8(Madeline) \u2192 \u00acp_9(Madeline)"
                ]
            }
        },
        {
            "Edit#": 6,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n((p_14(Madeline) \u2228 p_5(Madeline)) \u2227 \u00ac(p_14(Madeline) \u2227 p_5(Madeline))) \u2192 p_17(Madeline)\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)\np_9(Madeline)\n\u2200x (p_11(x) \u2192 p_13(x))\n\u2200x (p_12(x) \u2192 p_13(x))\n\u2200x (p_12(x) \u2192 p_14(x))\n\u2200x (p_3(x) \u2192 p_14(x))\n\u2200x (p_1(x) \u2192 (p_10(x) \u2192 p_11(x)))\np_5(Madeline) \u2192 p_8(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "False",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "\u00acp_6(Madeline)",
                    "\u00acp_7(Madeline)",
                    "p_5(Madeline)",
                    "p_4(Madeline)",
                    "\u00acp_3(Madeline)",
                    "p_1(Madeline)",
                    "p_2(Madeline)",
                    "\u00acp_0(Madeline)",
                    "all x (p_17(x) -> (p_6(x) | p_7(x)))",
                    "((p_14(Madeline) | p_5(Madeline)) & -(p_14(Madeline) & p_5(Madeline))) -> p_17(Madeline)",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline)",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x))",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x))",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x))",
                    "all x (p_2(x) -> (p_9(x) | p_0(x)))",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline)",
                    "p_9(Madeline)",
                    "all x (p_11(x) -> p_13(x))",
                    "all x (p_12(x) -> p_13(x))",
                    "all x (p_12(x) -> p_14(x))",
                    "all x (p_3(x) -> p_14(x))",
                    "all x (p_1(x) -> (p_10(x) -> p_11(x)))",
                    "p_5(Madeline) -> p_8(Madeline)"
                ],
                "formulas(goals)": [
                    "p_8(Madeline)"
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_9(Madeline) \u2192 \u00acp_8(Madeline)",
                    "p_8(Madeline) \u2192 p_6(Madeline)",
                    "p_8(Madeline) \u2192 \u00acp_9(Madeline)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_5(Madeline) \u2192 p_8(Madeline)"
                ]
            }
        },
        {
            "Edit#": 7,
            "Modification Type": "FLIP",
            "Edited Assumptions": "\u00acp_6(Madeline)\n\u00acp_7(Madeline)\np_5(Madeline)\np_4(Madeline)\n\u00acp_3(Madeline)\np_1(Madeline)\np_2(Madeline)\n\u00acp_0(Madeline)\n\u2200x (p_17(x) \u2192 (p_6(x) \u2228 p_7(x)))\n((p_14(Madeline) \u2228 p_5(Madeline)) \u2227 \u00ac(p_14(Madeline) \u2227 p_5(Madeline))) \u2192 p_17(Madeline)\n(p_13(Madeline) \u2228 p_15(Madeline)) \u2192 p_16(Madeline)\n\u2200x ((p_12(x) \u2228 p_3(x)) \u2192 p_14(x))\n\u2200x ((p_11(x) \u2228 p_12(x)) \u2192 p_13(x))\n\u2200x ((p_1(x) \u2227 p_10(x)) \u2192 p_11(x))\n\u2200x (p_2(x) \u2192 (p_9(x) \u2228 p_0(x)))\n(p_8(Madeline) \u2227 p_9(Madeline)) \u2192 p_10(Madeline)\np_9(Madeline)\n\u2200x (p_11(x) \u2192 p_13(x))\n\u2200x (p_12(x) \u2192 p_13(x))\n\u2200x (p_12(x) \u2192 p_14(x))\n\u2200x (p_3(x) \u2192 p_14(x))\n\u2200x (p_1(x) \u2192 (p_10(x) \u2192 p_11(x)))\np_1(Madeline) \u2192 p_10(Madeline)\np_11(Madeline) \u2192 \u00acp_8(Madeline)",
            "Initial Goal": "\u00acp_8(Madeline)",
            "Answer": "True",
            "Edited Prover9 Input": {
                "formulas(assumptions)": [
                    "-p_6(Madeline).",
                    "-p_7(Madeline).",
                    "p_5(Madeline).",
                    "p_4(Madeline).",
                    "-p_3(Madeline).",
                    "p_1(Madeline).",
                    "p_2(Madeline).",
                    "-p_0(Madeline).",
                    "all x (p_17(x) -> (p_6(x) | p_7(x))).",
                    "((p_14(Madeline) | p_5(Madeline)) & -(p_14(Madeline) & p_5(Madeline))) -> p_17(Madeline).",
                    "(p_13(Madeline) | p_15(Madeline)) -> p_16(Madeline).",
                    "all x ((p_12(x) | p_3(x)) -> p_14(x)).",
                    "all x ((p_11(x) | p_12(x)) -> p_13(x)).",
                    "all x ((p_1(x) & p_10(x)) -> p_11(x)).",
                    "all x (p_2(x) -> (p_9(x) | p_0(x))).",
                    "(p_8(Madeline) & p_9(Madeline)) -> p_10(Madeline).",
                    "p_9(Madeline).",
                    "all x (p_11(x) -> p_13(x)).",
                    "all x (p_12(x) -> p_13(x)).",
                    "all x (p_12(x) -> p_14(x)).",
                    "all x (p_3(x) -> p_14(x)).",
                    "all x (p_1(x) -> (p_10(x) -> p_11(x))).",
                    "p_1(Madeline) -> p_10(Madeline).",
                    "p_11(Madeline) -> -p_8(Madeline)."
                ],
                "formulas(goals)": [
                    "-p_8(Madeline)."
                ]
            },
            "Edits Made": {
                "removed_facts": [],
                "removed_rules": [
                    "p_5(Madeline) \u2192 p_8(Madeline)"
                ],
                "added_facts": [],
                "added_rules": [
                    "p_1(Madeline) \u2192 p_10(Madeline)",
                    "p_11(Madeline) \u2192 \u00acp_8(Madeline)"
                ]
            }
        }
    ]
}